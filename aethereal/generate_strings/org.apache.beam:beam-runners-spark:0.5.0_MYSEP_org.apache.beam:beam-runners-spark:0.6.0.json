[
  {
    "coordinatesV1": "org.apache.beam:beam-runners-spark:0.5.0",
    "coordinatesV2": "org.apache.beam:beam-runners-spark:0.6.0",
    "caller": "|java+method:///org/apache/beam/runners/spark/translation/DoFnFunction/call(java.util.Iterator)|",
    "called": "|java+method:///org/apache/beam/runners/core/DoFnRunners/simpleRunner(org.apache.beam.sdk.options.PipelineOptions,org.apache.beam.sdk.transforms.DoFn,org.apache.beam.sdk.util.SideInputReader,org.apache.beam.runners.core.DoFnRunners$OutputManager,org.apache.beam.sdk.values.TupleTag,java.util.List,org.apache.beam.runners.core.ExecutionContext$StepContext,org.apache.beam.runners.core.AggregatorFactory,org.apache.beam.sdk.util.WindowingStrategy)|",
    "v1Body": [
      "|java+method:///org/apache/beam/runners/spark/translation/SparkRuntimeContext/getPipelineOptions()|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/SparkProcessContext$NoOpStepContext/SparkProcessContext$NoOpStepContext()|",
      "|java+method:///org/apache/beam/runners/core/DoFnRunners/simpleRunner(org.apache.beam.sdk.options.PipelineOptions,org.apache.beam.sdk.transforms.DoFn,org.apache.beam.sdk.util.SideInputReader,org.apache.beam.runners.core.DoFnRunners$OutputManager,org.apache.beam.sdk.values.TupleTag,java.util.List,org.apache.beam.runners.core.ExecutionContext$StepContext,org.apache.beam.runners.core.AggregatorFactory,org.apache.beam.sdk.util.WindowingStrategy)|",
      "|java+constructor:///org/apache/beam/runners/spark/aggregators/SparkAggregators$Factory/SparkAggregators$Factory(org.apache.beam.runners.spark.translation.SparkRuntimeContext,org.apache.spark.Accumulator)|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/DoFnFunction$DoFnOutputManager/DoFnFunction$DoFnOutputManager(org.apache.beam.runners.spark.translation.DoFnFunction,org.apache.beam.runners.spark.translation.DoFnFunction$1)|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/SparkProcessContext/SparkProcessContext(org.apache.beam.sdk.transforms.DoFn,org.apache.beam.runners.core.DoFnRunner,org.apache.beam.runners.spark.translation.SparkProcessContext$SparkOutputManager)|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+constructor:///org/apache/beam/runners/spark/util/SparkSideInputReader/SparkSideInputReader(java.util.Map)|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkProcessContext/processPartition(java.util.Iterator)|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/DoFnFunction$1/DoFnFunction$1(org.apache.beam.runners.spark.translation.DoFnFunction)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/runners/spark/translation/SparkRuntimeContext/getPipelineOptions()|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/SparkProcessContext$NoOpStepContext/SparkProcessContext$NoOpStepContext()|",
      "|java+method:///org/apache/beam/runners/core/DoFnRunners/simpleRunner(org.apache.beam.sdk.options.PipelineOptions,org.apache.beam.sdk.transforms.DoFn,org.apache.beam.sdk.util.SideInputReader,org.apache.beam.runners.core.DoFnRunners$OutputManager,org.apache.beam.sdk.values.TupleTag,java.util.List,org.apache.beam.runners.core.ExecutionContext$StepContext,org.apache.beam.runners.core.AggregatorFactory,org.apache.beam.sdk.util.WindowingStrategy)|",
      "|java+constructor:///org/apache/beam/runners/spark/aggregators/SparkAggregators$Factory/SparkAggregators$Factory(org.apache.beam.runners.spark.translation.SparkRuntimeContext,org.apache.spark.Accumulator)|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/DoFnFunction$DoFnOutputManager/DoFnFunction$DoFnOutputManager(org.apache.beam.runners.spark.translation.DoFnFunction,org.apache.beam.runners.spark.translation.DoFnFunction$1)|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/SparkProcessContext/SparkProcessContext(org.apache.beam.sdk.transforms.DoFn,org.apache.beam.runners.core.DoFnRunner,org.apache.beam.runners.spark.translation.SparkProcessContext$SparkOutputManager)|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/DoFnRunnerWithMetrics/DoFnRunnerWithMetrics(java.lang.String,org.apache.beam.runners.core.DoFnRunner,org.apache.spark.Accumulator)|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+constructor:///org/apache/beam/runners/spark/util/SparkSideInputReader/SparkSideInputReader(java.util.Map)|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkProcessContext/processPartition(java.util.Iterator)|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/DoFnFunction$1/DoFnFunction$1(org.apache.beam.runners.spark.translation.DoFnFunction)|"
    ],
    "affectedLib": "org.apache.beam:beam-runners-core-java:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-spark:0.5.0",
    "coordinatesV2": "org.apache.beam:beam-runners-spark:0.6.0",
    "caller": "|java+method:///org/apache/beam/runners/spark/translation/TransformTranslator$2/evaluate(org.apache.beam.sdk.transforms.GroupByKey,org.apache.beam.runners.spark.translation.EvaluationContext)|",
    "called": "|java+method:///org/apache/beam/runners/core/SystemReduceFn/buffering(org.apache.beam.sdk.coders.Coder)|",
    "v1Body": [
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getSparkContext()|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/borrowDataset(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/runners/spark/translation/BoundedDataset/getRDD()|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/BoundedDataset/BoundedDataset(org.apache.spark.api.java.JavaRDD)|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getInput(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/putDataset(org.apache.beam.sdk.transforms.PTransform,org.apache.beam.runners.spark.translation.Dataset)|",
      "|java+method:///org/apache/beam/runners/spark/translation/GroupCombineFunctions/groupByKey(org.apache.spark.api.java.JavaRDD,org.apache.spark.Accumulator,org.apache.beam.sdk.coders.KvCoder,org.apache.beam.runners.spark.translation.SparkRuntimeContext,org.apache.beam.sdk.util.WindowingStrategy)|",
      "|java+method:///org/apache/beam/runners/spark/aggregators/SparkAggregators/getNamedAggregators(org.apache.spark.api.java.JavaSparkContext)|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getRuntimeContext()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/windowCoder()|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getSparkContext()|",
      "|java+method:///org/apache/beam/runners/core/SystemReduceFn/buffering(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/spark/translation/BoundedDataset/getRDD()|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/BoundedDataset/BoundedDataset(org.apache.spark.api.java.JavaRDD)|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/TranslationUtils$InMemoryStateInternalsFactory/TranslationUtils$InMemoryStateInternalsFactory()|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/getValueCoder()|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/putDataset(org.apache.beam.sdk.transforms.PTransform,org.apache.beam.runners.spark.translation.Dataset)|",
      "|java+method:///org/apache/beam/runners/spark/translation/GroupCombineFunctions/groupByKeyOnly(org.apache.spark.api.java.JavaRDD,org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.util.WindowedValue$WindowedValueCoder)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue$FullWindowedValueCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/getKeyCoder()|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/SparkGroupAlsoByWindowViaOutputBufferFn/SparkGroupAlsoByWindowViaOutputBufferFn(org.apache.beam.sdk.util.WindowingStrategy,org.apache.beam.runners.core.StateInternalsFactory,org.apache.beam.runners.core.SystemReduceFn,org.apache.beam.runners.spark.translation.SparkRuntimeContext,org.apache.spark.Accumulator)|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/borrowDataset(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/runners/spark/aggregators/SparkAggregators/getNamedAggregators(org.apache.spark.api.java.JavaSparkContext)|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getRuntimeContext()|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getInput(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getWindowFn()|",
      "|java+method:///org/apache/spark/api/java/JavaRDD/flatMap(org.apache.spark.api.java.function.FlatMapFunction)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "affectedLib": "org.apache.beam:beam-runners-core-java:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-spark:0.5.0",
    "coordinatesV2": "org.apache.beam:beam-runners-spark:0.6.0",
    "caller": "|java+method:///org/apache/beam/runners/spark/translation/TranslationUtils$InMemoryStateInternalsFactory/stateInternalsForKey(java.lang.Object)|",
    "called": "|java+method:///org/apache/beam/runners/core/InMemoryStateInternals/forKey(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/util/state/InMemoryStateInternals/forKey(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/runners/core/InMemoryStateInternals/forKey(java.lang.Object)|"
    ],
    "affectedLib": "org.apache.beam:beam-runners-core-java:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-spark:0.5.0",
    "coordinatesV2": "org.apache.beam:beam-runners-spark:0.6.0",
    "caller": "|java+method:///org/apache/beam/runners/spark/translation/MultiDoFnFunction/call(java.util.Iterator)|",
    "called": "|java+method:///org/apache/beam/runners/core/DoFnRunners/simpleRunner(org.apache.beam.sdk.options.PipelineOptions,org.apache.beam.sdk.transforms.DoFn,org.apache.beam.sdk.util.SideInputReader,org.apache.beam.runners.core.DoFnRunners$OutputManager,org.apache.beam.sdk.values.TupleTag,java.util.List,org.apache.beam.runners.core.ExecutionContext$StepContext,org.apache.beam.runners.core.AggregatorFactory,org.apache.beam.sdk.util.WindowingStrategy)|",
    "v1Body": [
      "|java+method:///org/apache/beam/runners/spark/translation/SparkRuntimeContext/getPipelineOptions()|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/SparkProcessContext$NoOpStepContext/SparkProcessContext$NoOpStepContext()|",
      "|java+method:///org/apache/beam/runners/core/DoFnRunners/simpleRunner(org.apache.beam.sdk.options.PipelineOptions,org.apache.beam.sdk.transforms.DoFn,org.apache.beam.sdk.util.SideInputReader,org.apache.beam.runners.core.DoFnRunners$OutputManager,org.apache.beam.sdk.values.TupleTag,java.util.List,org.apache.beam.runners.core.ExecutionContext$StepContext,org.apache.beam.runners.core.AggregatorFactory,org.apache.beam.sdk.util.WindowingStrategy)|",
      "|java+constructor:///org/apache/beam/runners/spark/aggregators/SparkAggregators$Factory/SparkAggregators$Factory(org.apache.beam.runners.spark.translation.SparkRuntimeContext,org.apache.spark.Accumulator)|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/MultiDoFnFunction$DoFnOutputManager/MultiDoFnFunction$DoFnOutputManager(org.apache.beam.runners.spark.translation.MultiDoFnFunction,org.apache.beam.runners.spark.translation.MultiDoFnFunction$1)|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/SparkProcessContext/SparkProcessContext(org.apache.beam.sdk.transforms.DoFn,org.apache.beam.runners.core.DoFnRunner,org.apache.beam.runners.spark.translation.SparkProcessContext$SparkOutputManager)|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkProcessContext/processPartition(java.util.Iterator)|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+constructor:///org/apache/beam/runners/spark/util/SparkSideInputReader/SparkSideInputReader(java.util.Map)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/runners/spark/translation/SparkRuntimeContext/getPipelineOptions()|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/SparkProcessContext$NoOpStepContext/SparkProcessContext$NoOpStepContext()|",
      "|java+method:///org/apache/beam/runners/core/DoFnRunners/simpleRunner(org.apache.beam.sdk.options.PipelineOptions,org.apache.beam.sdk.transforms.DoFn,org.apache.beam.sdk.util.SideInputReader,org.apache.beam.runners.core.DoFnRunners$OutputManager,org.apache.beam.sdk.values.TupleTag,java.util.List,org.apache.beam.runners.core.ExecutionContext$StepContext,org.apache.beam.runners.core.AggregatorFactory,org.apache.beam.sdk.util.WindowingStrategy)|",
      "|java+constructor:///org/apache/beam/runners/spark/aggregators/SparkAggregators$Factory/SparkAggregators$Factory(org.apache.beam.runners.spark.translation.SparkRuntimeContext,org.apache.spark.Accumulator)|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/MultiDoFnFunction$DoFnOutputManager/MultiDoFnFunction$DoFnOutputManager(org.apache.beam.runners.spark.translation.MultiDoFnFunction,org.apache.beam.runners.spark.translation.MultiDoFnFunction$1)|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/SparkProcessContext/SparkProcessContext(org.apache.beam.sdk.transforms.DoFn,org.apache.beam.runners.core.DoFnRunner,org.apache.beam.runners.spark.translation.SparkProcessContext$SparkOutputManager)|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/DoFnRunnerWithMetrics/DoFnRunnerWithMetrics(java.lang.String,org.apache.beam.runners.core.DoFnRunner,org.apache.spark.Accumulator)|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkProcessContext/processPartition(java.util.Iterator)|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+constructor:///org/apache/beam/runners/spark/util/SparkSideInputReader/SparkSideInputReader(java.util.Map)|"
    ],
    "affectedLib": "org.apache.beam:beam-runners-core-java:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-spark:0.5.0",
    "coordinatesV2": "org.apache.beam:beam-runners-spark:0.6.0",
    "caller": "|java+method:///org/apache/beam/runners/spark/io/MicrobatchSource$Reader/advanceWithBackoff()|",
    "called": "|java+method:///org/apache/beam/sdk/util/FluentBackoff/backoff()|",
    "v1Body": [
      "|java+method:///org/apache/beam/spark/relocated/com/google/common/util/concurrent/Uninterruptibles/sleepUninterruptibly(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///org/joda/time/Instant/now()|",
      "|java+method:///org/apache/beam/sdk/io/UnboundedSource$UnboundedReader/advance()|",
      "|java+method:///com/google/api/client/util/BackOff/nextBackOffMillis()|",
      "|java+method:///org/apache/beam/sdk/util/FluentBackoff/backoff()|",
      "|java+method:///org/joda/time/Instant/isAfter(org.joda.time.ReadableInstant)|",
      "|java+method:///org/apache/beam/runners/spark/io/MicrobatchSource$Reader/finalizeCheckpoint()|"
    ],
    "v2Body": [
      "|java+method:///org/joda/time/Instant/now()|",
      "|java+method:///org/apache/beam/sdk/io/UnboundedSource$UnboundedReader/advance()|",
      "|java+method:///com/google/api/client/util/BackOff/nextBackOffMillis()|",
      "|java+method:///org/apache/beam/spark/repackaged/com/google/common/util/concurrent/Uninterruptibles/sleepUninterruptibly(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///org/apache/beam/sdk/util/FluentBackoff/backoff()|",
      "|java+method:///org/joda/time/Instant/isAfter(org.joda.time.ReadableInstant)|",
      "|java+method:///org/apache/beam/runners/spark/io/MicrobatchSource$Reader/finalizeCheckpoint()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-spark:0.5.0",
    "coordinatesV2": "org.apache.beam:beam-runners-spark:0.6.0",
    "caller": "|java+method:///org/apache/beam/runners/spark/translation/SparkProcessContext/processPartition(java.util.Iterator)|",
    "called": "|java+method:///org/apache/beam/sdk/transforms/reflect/DoFnInvokers/invokerFor(org.apache.beam.sdk.transforms.DoFn)|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkProcessContext/getOutputIterable(java.util.Iterator,org.apache.beam.runners.core.DoFnRunner)|",
      "|java+method:///org/apache/beam/runners/core/DoFnRunner/startBundle()|",
      "|java+method:///org/apache/beam/sdk/transforms/reflect/DoFnInvoker/invokeSetup()|",
      "|java+method:///org/apache/beam/sdk/transforms/reflect/DoFnInvokers/invokerFor(org.apache.beam.sdk.transforms.DoFn)|",
      "|java+method:///org/apache/beam/spark/relocated/com/google/common/collect/Lists/newArrayList()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkProcessContext/getOutputIterable(java.util.Iterator,org.apache.beam.runners.core.DoFnRunner)|",
      "|java+method:///org/apache/beam/runners/core/DoFnRunner/startBundle()|",
      "|java+method:///org/apache/beam/spark/repackaged/com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/apache/beam/sdk/transforms/reflect/DoFnInvokers/invokerFor(org.apache.beam.sdk.transforms.DoFn)|",
      "|java+method:///org/apache/beam/sdk/transforms/reflect/DoFnInvoker/invokeTeardown()|",
      "|java+method:///org/apache/beam/sdk/transforms/reflect/DoFnInvoker/invokeSetup()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-spark:0.5.0",
    "coordinatesV2": "org.apache.beam:beam-runners-spark:0.6.0",
    "caller": "|java+method:///org/apache/beam/runners/spark/io/hadoop/HadoopIO$Write$Bound/expand(org.apache.beam.sdk.values.PCollection)|",
    "called": "|java+method:///org/apache/beam/sdk/values/PDone/in(org.apache.beam.sdk.Pipeline)|",
    "v1Body": [
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///org/apache/beam/spark/relocated/com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getPipeline()|",
      "|java+method:///org/apache/beam/sdk/values/PDone/in(org.apache.beam.sdk.Pipeline)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///org/apache/beam/spark/relocated/com/google/common/base/Preconditions/checkArgument(boolean,java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///org/apache/beam/sdk/values/PDone/in(org.apache.beam.sdk.Pipeline)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///org/apache/beam/spark/repackaged/com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/beam/spark/repackaged/com/google/common/base/Preconditions/checkArgument(boolean,java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getPipeline()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-spark:0.5.0",
    "coordinatesV2": "org.apache.beam:beam-runners-spark:0.6.0",
    "caller": "|java+method:///org/apache/beam/runners/spark/TestSparkRunner/run(org.apache.beam.sdk.Pipeline)|",
    "called": "|java+method:///org/apache/beam/sdk/testing/PAssert/countAsserts(org.apache.beam.sdk.Pipeline)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/beam/runners/spark/SparkPipelineResult/getAggregatorValue(java.lang.String,java.lang.Class)|",
      "|java+method:///org/apache/beam/runners/spark/TestSparkRunner/run(org.apache.beam.sdk.Pipeline)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/beam/runners/spark/SparkPipelineResult/getState()|",
      "|java+method:///org/apache/beam/sdk/Pipeline/getOptions()|",
      "|java+method:///org/apache/beam/sdk/options/PipelineOptions/as(java.lang.Class)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/hamcrest/MatcherAssert/assertThat(java.lang.Object,org.hamcrest.Matcher)|",
      "|java+method:///org/apache/beam/runners/spark/SparkPipelineResult/waitUntilFinish()|",
      "|java+method:///org/apache/beam/sdk/testing/TestPipelineOptions/getOnSuccessMatcher()|",
      "|java+method:///org/apache/beam/runners/spark/SparkRunner/run(org.apache.beam.sdk.Pipeline)|",
      "|java+method:///org/hamcrest/MatcherAssert/assertThat(java.lang.String,java.lang.Object,org.hamcrest.Matcher)|",
      "|java+method:///org/hamcrest/Matchers/is(java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/testing/TestPipelineOptions/getOnCreateMatcher()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/runners/spark/TestSparkRunner/adaptBoundedReads(org.apache.beam.sdk.Pipeline)|",
      "|java+method:///org/apache/beam/runners/spark/TestSparkPipelineOptions/getJobName()|",
      "|java+method:///org/joda/time/Duration/standardSeconds(long)|",
      "|java+method:///org/apache/beam/runners/spark/TestSparkRunner/run(org.apache.beam.sdk.Pipeline)|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///org/apache/beam/sdk/Pipeline/getOptions()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/hamcrest/MatcherAssert/assertThat(java.lang.Object,org.hamcrest.Matcher)|",
      "|java+method:///org/apache/beam/runners/spark/SparkPipelineResult/waitUntilFinish()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/beam/runners/spark/util/GlobalWatermarkHolder/clear()|",
      "|java+method:///org/apache/commons/io/FileUtils/deleteDirectory(java.io.File)|",
      "|java+method:///org/apache/beam/runners/spark/metrics/SparkMetricsContainer/clear()|",
      "|java+method:///org/apache/beam/runners/spark/aggregators/AggregatorsAccumulator/clear()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/beam/runners/spark/TestSparkPipelineOptions/getCheckpointDir()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/spark/TestSparkPipelineOptions/getOnSuccessMatcher()|",
      "|java+method:///org/apache/beam/runners/spark/SparkPipelineResult/waitUntilFinish(org.joda.time.Duration)|",
      "|java+method:///org/apache/beam/runners/spark/SparkPipelineResult/getAggregatorValue(java.lang.String,java.lang.Class)|",
      "|java+method:///org/apache/beam/runners/spark/TestSparkPipelineOptions/getTestTimeoutSeconds()|",
      "|java+method:///org/apache/beam/spark/repackaged/com/google/common/base/Preconditions/checkNotNull(java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/apache/beam/sdk/testing/PAssert/countAsserts(org.apache.beam.sdk.Pipeline)|",
      "|java+method:///org/apache/beam/runners/spark/TestSparkPipelineOptions/getOnCreateMatcher()|",
      "|java+method:///org/apache/beam/sdk/options/PipelineOptions/as(java.lang.Class)|",
      "|java+method:///org/apache/beam/runners/spark/SparkRunner/run(org.apache.beam.sdk.Pipeline)|",
      "|java+method:///org/hamcrest/MatcherAssert/assertThat(java.lang.String,java.lang.Object,org.hamcrest.Matcher)|",
      "|java+method:///org/hamcrest/Matchers/is(java.lang.Object)|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-spark:0.5.0",
    "coordinatesV2": "org.apache.beam:beam-runners-spark:0.6.0",
    "caller": "|java+method:///org/apache/beam/runners/spark/translation/TransformTranslator$2/evaluate(org.apache.beam.sdk.transforms.GroupByKey,org.apache.beam.runners.spark.translation.EvaluationContext)|",
    "called": "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
    "v1Body": [
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getSparkContext()|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/borrowDataset(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/runners/spark/translation/BoundedDataset/getRDD()|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/BoundedDataset/BoundedDataset(org.apache.spark.api.java.JavaRDD)|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getInput(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/putDataset(org.apache.beam.sdk.transforms.PTransform,org.apache.beam.runners.spark.translation.Dataset)|",
      "|java+method:///org/apache/beam/runners/spark/translation/GroupCombineFunctions/groupByKey(org.apache.spark.api.java.JavaRDD,org.apache.spark.Accumulator,org.apache.beam.sdk.coders.KvCoder,org.apache.beam.runners.spark.translation.SparkRuntimeContext,org.apache.beam.sdk.util.WindowingStrategy)|",
      "|java+method:///org/apache/beam/runners/spark/aggregators/SparkAggregators/getNamedAggregators(org.apache.spark.api.java.JavaSparkContext)|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getRuntimeContext()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/windowCoder()|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getSparkContext()|",
      "|java+method:///org/apache/beam/runners/core/SystemReduceFn/buffering(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/spark/translation/BoundedDataset/getRDD()|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/BoundedDataset/BoundedDataset(org.apache.spark.api.java.JavaRDD)|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/TranslationUtils$InMemoryStateInternalsFactory/TranslationUtils$InMemoryStateInternalsFactory()|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/getValueCoder()|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/putDataset(org.apache.beam.sdk.transforms.PTransform,org.apache.beam.runners.spark.translation.Dataset)|",
      "|java+method:///org/apache/beam/runners/spark/translation/GroupCombineFunctions/groupByKeyOnly(org.apache.spark.api.java.JavaRDD,org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.util.WindowedValue$WindowedValueCoder)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue$FullWindowedValueCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/getKeyCoder()|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/SparkGroupAlsoByWindowViaOutputBufferFn/SparkGroupAlsoByWindowViaOutputBufferFn(org.apache.beam.sdk.util.WindowingStrategy,org.apache.beam.runners.core.StateInternalsFactory,org.apache.beam.runners.core.SystemReduceFn,org.apache.beam.runners.spark.translation.SparkRuntimeContext,org.apache.spark.Accumulator)|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/borrowDataset(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/runners/spark/aggregators/SparkAggregators/getNamedAggregators(org.apache.spark.api.java.JavaSparkContext)|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getRuntimeContext()|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getInput(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getWindowFn()|",
      "|java+method:///org/apache/spark/api/java/JavaRDD/flatMap(org.apache.spark.api.java.function.FlatMapFunction)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-spark:0.5.0",
    "coordinatesV2": "org.apache.beam:beam-runners-spark:0.6.0",
    "caller": "|java+method:///org/apache/beam/runners/spark/translation/SparkAssignWindowFn/call(org.apache.beam.sdk.util.WindowedValue)|",
    "called": "|java+method:///org/apache/beam/sdk/util/WindowedValue/of(java.lang.Object,org.joda.time.Instant,java.util.Collection,org.apache.beam.sdk.transforms.windowing.PaneInfo)|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getWindows()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/of(java.lang.Object,org.joda.time.Instant,java.util.Collection,org.apache.beam.sdk.transforms.windowing.PaneInfo)|",
      "|java+method:///org/apache/beam/spark/relocated/com/google/common/collect/Iterables/getOnlyElement(java.lang.Iterable)|",
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/assignWindows(org.apache.beam.sdk.transforms.windowing.WindowFn$AssignContext)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getTimestamp()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getValue()|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/SparkAssignWindowFn$1/SparkAssignWindowFn$1(org.apache.beam.runners.spark.translation.SparkAssignWindowFn,org.apache.beam.sdk.transforms.windowing.WindowFn,java.lang.Object,org.joda.time.Instant,org.apache.beam.sdk.transforms.windowing.BoundedWindow)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/spark/repackaged/com/google/common/collect/Iterables/getOnlyElement(java.lang.Iterable)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getWindows()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/of(java.lang.Object,org.joda.time.Instant,java.util.Collection,org.apache.beam.sdk.transforms.windowing.PaneInfo)|",
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/assignWindows(org.apache.beam.sdk.transforms.windowing.WindowFn$AssignContext)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getTimestamp()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getValue()|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/SparkAssignWindowFn$1/SparkAssignWindowFn$1(org.apache.beam.runners.spark.translation.SparkAssignWindowFn,org.apache.beam.sdk.transforms.windowing.WindowFn,java.lang.Object,org.joda.time.Instant,org.apache.beam.sdk.transforms.windowing.BoundedWindow)|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-spark:0.5.0",
    "coordinatesV2": "org.apache.beam:beam-runners-spark:0.6.0",
    "caller": "|java+method:///org/apache/beam/runners/spark/SparkRunner/run(org.apache.beam.sdk.Pipeline)|",
    "called": "|java+method:///org/apache/beam/sdk/metrics/MetricsEnvironment/setMetricsSupported(boolean)|",
    "v1Body": [
      "|java+constructor:///org/apache/beam/runners/spark/SparkPipelineResult$StreamingMode/SparkPipelineResult$StreamingMode(java.util.concurrent.Future,org.apache.spark.streaming.api.java.JavaStreamingContext)|",
      "|java+method:///org/apache/beam/runners/spark/SparkPipelineOptions/isStreaming()|",
      "|java+constructor:///org/apache/beam/runners/spark/SparkRunner$2/SparkRunner$2(org.apache.beam.runners.spark.SparkRunner,org.apache.spark.api.java.JavaSparkContext,org.apache.beam.sdk.Pipeline,org.apache.beam.runners.spark.translation.EvaluationContext)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/spark/SparkPipelineOptions/getCheckpointDir()|",
      "|java+method:///java/util/concurrent/Executors/newSingleThreadExecutor()|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/EvaluationContext/EvaluationContext(org.apache.spark.api.java.JavaSparkContext,org.apache.beam.sdk.Pipeline)|",
      "|java+method:///org/apache/beam/runners/spark/SparkRunner/run(org.apache.beam.sdk.Pipeline)|",
      "|java+constructor:///org/apache/beam/runners/spark/SparkPipelineResult$BatchMode/SparkPipelineResult$BatchMode(java.util.concurrent.Future,org.apache.spark.api.java.JavaSparkContext)|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkContextFactory/getSparkContext(org.apache.beam.runners.spark.SparkPipelineOptions)|",
      "|java+method:///org/apache/spark/streaming/api/java/JavaStreamingContext/getOrCreate(java.lang.String,org.apache.spark.streaming.api.java.JavaStreamingContextFactory)|",
      "|java+method:///org/apache/beam/runners/spark/SparkRunner/detectTranslationMode(org.apache.beam.sdk.Pipeline)|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/streaming/SparkRunnerStreamingContextFactory/SparkRunnerStreamingContextFactory(org.apache.beam.sdk.Pipeline,org.apache.beam.runners.spark.SparkPipelineOptions)|",
      "|java+constructor:///org/apache/beam/runners/spark/SparkRunner$1/SparkRunner$1(org.apache.beam.runners.spark.SparkRunner,org.apache.spark.streaming.api.java.JavaStreamingContext)|",
      "|java+method:///java/util/concurrent/ExecutorService/submit(java.lang.Runnable)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/beam/runners/spark/SparkPipelineResult$StreamingMode/SparkPipelineResult$StreamingMode(java.util.concurrent.Future,org.apache.spark.streaming.api.java.JavaStreamingContext)|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/beam/runners/spark/SparkPipelineOptions/isStreaming()|",
      "|java+method:///org/apache/beam/runners/spark/SparkPipelineOptions/as(java.lang.Class)|",
      "|java+method:///org/apache/beam/runners/spark/SparkContextOptions/getListeners()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/beam/runners/spark/SparkPipelineOptions/getCheckpointDir()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/spark/streaming/api/java/JavaStreamingListenerWrapper/JavaStreamingListenerWrapper(org.apache.spark.streaming.api.java.JavaStreamingListener)|",
      "|java+constructor:///org/apache/beam/runners/spark/util/GlobalWatermarkHolder$WatermarksListener/GlobalWatermarkHolder$WatermarksListener(org.apache.spark.streaming.api.java.JavaStreamingContext)|",
      "|java+method:///java/util/concurrent/Executors/newSingleThreadExecutor()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkContextFactory/getSparkContext(org.apache.beam.runners.spark.SparkPipelineOptions)|",
      "|java+method:///org/apache/spark/streaming/api/java/JavaStreamingContext/getOrCreate(java.lang.String,org.apache.spark.streaming.api.java.JavaStreamingContextFactory)|",
      "|java+method:///org/apache/beam/runners/spark/SparkRunner/detectTranslationMode(org.apache.beam.sdk.Pipeline)|",
      "|java+method:///java/lang/Class/getSimpleName()|",
      "|java+constructor:///org/apache/beam/runners/spark/aggregators/AggregatorsAccumulator$AccumulatorCheckpointingSparkListener/AggregatorsAccumulator$AccumulatorCheckpointingSparkListener()|",
      "|java+method:///org/apache/beam/runners/spark/translation/streaming/Checkpoint$CheckpointDir/getSparkCheckpointDir()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/beam/runners/spark/SparkRunner$1/SparkRunner$1(org.apache.beam.runners.spark.SparkRunner,org.apache.spark.streaming.api.java.JavaStreamingContext)|",
      "|java+method:///java/util/concurrent/ExecutorService/submit(java.lang.Runnable)|",
      "|java+constructor:///org/apache/beam/runners/spark/SparkRunner$2/SparkRunner$2(org.apache.beam.runners.spark.SparkRunner,org.apache.spark.api.java.JavaSparkContext,org.apache.beam.sdk.Pipeline,org.apache.beam.runners.spark.translation.EvaluationContext)|",
      "|java+method:///org/apache/beam/sdk/metrics/MetricsEnvironment/setMetricsSupported(boolean)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/streaming/SparkRunnerStreamingContextFactory/SparkRunnerStreamingContextFactory(org.apache.beam.sdk.Pipeline,org.apache.beam.runners.spark.SparkPipelineOptions,org.apache.beam.runners.spark.translation.streaming.Checkpoint$CheckpointDir)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/EvaluationContext/EvaluationContext(org.apache.spark.api.java.JavaSparkContext,org.apache.beam.sdk.Pipeline)|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/streaming/Checkpoint$CheckpointDir/Checkpoint$CheckpointDir(java.lang.String)|",
      "|java+constructor:///org/apache/beam/runners/spark/metrics/MetricsAccumulator$AccumulatorCheckpointingSparkListener/MetricsAccumulator$AccumulatorCheckpointingSparkListener()|",
      "|java+method:///org/apache/spark/streaming/api/java/JavaStreamingContext/addStreamingListener(org.apache.spark.streaming.scheduler.StreamingListener)|",
      "|java+method:///org/apache/beam/runners/spark/SparkRunner/run(org.apache.beam.sdk.Pipeline)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/beam/runners/spark/SparkPipelineResult$BatchMode/SparkPipelineResult$BatchMode(java.util.concurrent.Future,org.apache.spark.api.java.JavaSparkContext)|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-spark:0.5.0",
    "coordinatesV2": "org.apache.beam:beam-runners-spark:0.6.0",
    "caller": "|java+method:///org/apache/beam/runners/spark/TestSparkRunner/fromOptions(org.apache.beam.sdk.options.PipelineOptions)|",
    "called": "|java+method:///org/apache/beam/sdk/options/PipelineOptionsValidator/validate(java.lang.Class,org.apache.beam.sdk.options.PipelineOptions)|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/options/PipelineOptionsValidator/validate(java.lang.Class,org.apache.beam.sdk.options.PipelineOptions)|",
      "|java+constructor:///org/apache/beam/runners/spark/TestSparkRunner/TestSparkRunner(org.apache.beam.runners.spark.SparkPipelineOptions)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/options/PipelineOptionsValidator/validate(java.lang.Class,org.apache.beam.sdk.options.PipelineOptions)|",
      "|java+constructor:///org/apache/beam/runners/spark/TestSparkRunner/TestSparkRunner(org.apache.beam.runners.spark.TestSparkPipelineOptions)|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-spark:0.5.0",
    "coordinatesV2": "org.apache.beam:beam-runners-spark:0.6.0",
    "caller": "|java+method:///org/apache/beam/runners/spark/io/SparkUnboundedSource/read(org.apache.spark.streaming.api.java.JavaStreamingContext,org.apache.beam.runners.spark.translation.SparkRuntimeContext,org.apache.beam.sdk.io.UnboundedSource)|",
    "called": "|java+method:///org/apache/beam/sdk/util/WindowedValue$FullWindowedValueCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
    "v1Body": [
      "|java+method:///org/apache/beam/runners/spark/SparkPipelineOptions/getMaxRecordsPerBatch()|",
      "|java+method:///org/apache/spark/streaming/StateSpec/function(scala.Function3)|",
      "|java+method:///org/apache/spark/streaming/api/java/JavaPairInputDStream/mapWithState(org.apache.spark.streaming.StateSpec)|",
      "|java+method:///org/apache/spark/streaming/api/java/JavaPairInputDStream$/fromInputDStream(org.apache.spark.streaming.dstream.InputDStream,scala.reflect.ClassTag,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/beam/runners/spark/stateful/StateSpecFunctions/mapSourceFunction(org.apache.beam.runners.spark.translation.SparkRuntimeContext)|",
      "|java+method:///org/apache/beam/runners/spark/io/SparkUnboundedSource/getSourceName(org.apache.beam.sdk.io.Source,int)|",
      "|java+method:///org/apache/beam/sdk/options/PipelineOptions/as(java.lang.Class)|",
      "|java+method:///org/apache/beam/runners/spark/io/SourceDStream/setMaxRecordsPerBatch(long)|",
      "|java+method:///org/apache/beam/runners/spark/io/SparkUnboundedSource$ReportingDStream/register()|",
      "|java+method:///org/apache/beam/runners/spark/coders/CoderHelpers/fromByteFunction(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/io/UnboundedSource/getDefaultOutputCoder()|",
      "|java+method:///org/apache/beam/runners/spark/io/SparkUnboundedSource/checkpointStream(org.apache.spark.streaming.api.java.JavaDStream,org.apache.beam.runners.spark.SparkPipelineOptions)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue$FullWindowedValueCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+constructor:///org/apache/beam/runners/spark/io/SourceDStream/SourceDStream(org.apache.spark.streaming.StreamingContext,org.apache.beam.sdk.io.UnboundedSource,org.apache.beam.runners.spark.translation.SparkRuntimeContext)|",
      "|java+method:///org/apache/spark/streaming/api/java/JavaMapWithStateDStream/cache()|",
      "|java+method:///org/apache/spark/streaming/api/java/JavaStreamingContext/ssc()|",
      "|java+method:///org/apache/spark/api/java/JavaSparkContext$/fakeClassTag()|",
      "|java+method:///org/apache/spark/streaming/api/java/JavaDStream/map(org.apache.spark.api.java.function.Function)|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkRuntimeContext/getPipelineOptions()|",
      "|java+method:///org/apache/spark/streaming/dstream/InputDStream/id()|",
      "|java+method:///org/apache/spark/streaming/api/java/JavaMapWithStateDStream/flatMap(org.apache.spark.api.java.function.FlatMapFunction)|",
      "|java+method:///org/apache/spark/streaming/api/java/JavaPairInputDStream/inputDStream()|",
      "|java+constructor:///org/apache/beam/runners/spark/io/SparkUnboundedSource$ReportingDStream/SparkUnboundedSource$ReportingDStream(org.apache.spark.streaming.dstream.DStream,int,java.lang.String)|",
      "|java+constructor:///org/apache/beam/runners/spark/io/SparkUnboundedSource$2/SparkUnboundedSource$2()|",
      "|java+constructor:///org/apache/beam/runners/spark/io/SparkUnboundedSource$1/SparkUnboundedSource$1()|",
      "|java+method:///org/apache/spark/streaming/api/java/JavaMapWithStateDStream/map(org.apache.spark.api.java.function.Function)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/apache/spark/streaming/api/java/JavaDStream/dstream()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/runners/spark/SparkPipelineOptions/getMaxRecordsPerBatch()|",
      "|java+method:///org/apache/spark/streaming/StateSpec/function(scala.Function3)|",
      "|java+method:///org/apache/spark/streaming/api/java/JavaPairInputDStream/mapWithState(org.apache.spark.streaming.StateSpec)|",
      "|java+method:///org/apache/spark/streaming/api/java/JavaPairInputDStream$/fromInputDStream(org.apache.spark.streaming.dstream.InputDStream,scala.reflect.ClassTag,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/beam/runners/spark/stateful/StateSpecFunctions/mapSourceFunction(org.apache.beam.runners.spark.translation.SparkRuntimeContext)|",
      "|java+method:///org/apache/beam/runners/spark/io/SparkUnboundedSource/getSourceName(org.apache.beam.sdk.io.Source,int)|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/streaming/UnboundedDataset/UnboundedDataset(org.apache.spark.streaming.api.java.JavaDStream,java.util.List)|",
      "|java+method:///org/apache/beam/sdk/options/PipelineOptions/as(java.lang.Class)|",
      "|java+method:///org/apache/beam/runners/spark/io/SourceDStream/setMaxRecordsPerBatch(long)|",
      "|java+method:///org/apache/beam/runners/spark/io/SparkUnboundedSource$ReportingDStream/register()|",
      "|java+method:///org/apache/beam/sdk/io/UnboundedSource/getDefaultOutputCoder()|",
      "|java+method:///org/apache/beam/runners/spark/io/SparkUnboundedSource/checkpointStream(org.apache.spark.streaming.api.java.JavaDStream,org.apache.beam.runners.spark.SparkPipelineOptions)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue$FullWindowedValueCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+constructor:///org/apache/beam/runners/spark/io/SourceDStream/SourceDStream(org.apache.spark.streaming.StreamingContext,org.apache.beam.sdk.io.UnboundedSource,org.apache.beam.runners.spark.translation.SparkRuntimeContext)|",
      "|java+method:///org/apache/spark/streaming/api/java/JavaStreamingContext/ssc()|",
      "|java+method:///org/apache/spark/api/java/JavaSparkContext$/fakeClassTag()|",
      "|java+method:///org/apache/spark/streaming/api/java/JavaDStream/map(org.apache.spark.api.java.function.Function)|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkRuntimeContext/getPipelineOptions()|",
      "|java+method:///org/apache/spark/streaming/dstream/InputDStream/id()|",
      "|java+method:///org/apache/spark/streaming/api/java/JavaMapWithStateDStream/flatMap(org.apache.spark.api.java.function.FlatMapFunction)|",
      "|java+method:///org/apache/spark/streaming/api/java/JavaPairInputDStream/inputDStream()|",
      "|java+constructor:///org/apache/beam/runners/spark/io/SparkUnboundedSource$ReportingDStream/SparkUnboundedSource$ReportingDStream(org.apache.spark.streaming.dstream.DStream,int,java.lang.String)|",
      "|java+constructor:///org/apache/beam/runners/spark/io/SparkUnboundedSource$2/SparkUnboundedSource$2()|",
      "|java+constructor:///org/apache/beam/runners/spark/io/SparkUnboundedSource$1/SparkUnboundedSource$1()|",
      "|java+method:///org/apache/spark/streaming/api/java/JavaMapWithStateDStream/map(org.apache.spark.api.java.function.Function)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/apache/spark/streaming/api/java/JavaDStream/dstream()|",
      "|java+method:///org/apache/beam/runners/spark/coders/CoderHelpers/fromByteFunction(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-spark:0.5.0",
    "coordinatesV2": "org.apache.beam:beam-runners-spark:0.6.0",
    "caller": "|java+method:///org/apache/beam/runners/spark/stateful/StateSpecFunctions$1/apply(org.apache.beam.sdk.io.Source,scala.Option,org.apache.spark.streaming.State)|",
    "called": "|java+method:///org/apache/beam/sdk/util/WindowedValue/of(java.lang.Object,org.joda.time.Instant,org.apache.beam.sdk.transforms.windowing.BoundedWindow,org.apache.beam.sdk.transforms.windowing.PaneInfo)|",
    "v1Body": [
      "|java+method:///org/apache/beam/spark/relocated/com/google/common/base/Stopwatch/elapsed(java.util.concurrent.TimeUnit)|",
      "|java+method:///org/apache/spark/streaming/State/update(java.lang.Object)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/beam/runners/spark/coders/CoderHelpers/toByteArray(java.lang.Object,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/spark/io/MicrobatchSource/getCheckpointMarkCoder()|",
      "|java+method:///org/apache/beam/runners/spark/coders/CoderHelpers/fromByteArray(byte%5B%5D,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/spark/relocated/com/google/common/base/Stopwatch/stop()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue$FullWindowedValueCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/spark/streaming/State/get()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/of(java.lang.Object,org.joda.time.Instant,org.apache.beam.sdk.transforms.windowing.BoundedWindow,org.apache.beam.sdk.transforms.windowing.PaneInfo)|",
      "|java+constructor:///org/apache/beam/runners/spark/io/SparkUnboundedSource$Metadata/SparkUnboundedSource$Metadata(long,org.joda.time.Instant)|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkRuntimeContext/getPipelineOptions()|",
      "|java+method:///org/apache/beam/runners/spark/io/EmptyCheckpointMark/get()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/beam/runners/spark/io/MicrobatchSource$Reader/getWatermark()|",
      "|java+constructor:///org/apache/beam/runners/spark/stateful/StateSpecFunctions$1$1/StateSpecFunctions$1$1(org.apache.beam.runners.spark.stateful.StateSpecFunctions$1,java.util.List)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/io/BoundedSource$BoundedReader/getCurrent()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/apache/beam/spark/relocated/com/google/common/base/Stopwatch/createStarted()|",
      "|java+method:///org/apache/beam/runners/spark/io/MicrobatchSource/createReader(org.apache.beam.sdk.options.PipelineOptions,org.apache.beam.sdk.io.UnboundedSource$CheckpointMark)|",
      "|java+method:///scala/Option/isDefined()|",
      "|java+method:///org/apache/beam/sdk/io/BoundedSource$BoundedReader/getCurrentTimestamp()|",
      "|java+method:///org/apache/beam/sdk/io/Source/getDefaultOutputCoder()|",
      "|java+method:///org/apache/spark/streaming/State/exists()|",
      "|java+method:///org/apache/beam/runners/spark/io/MicrobatchSource$Reader/getCheckpointMark()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/beam/sdk/io/BoundedSource$BoundedReader/close()|",
      "|java+method:///org/apache/beam/runners/spark/io/MicrobatchSource/getId()|",
      "|java+method:///org/apache/beam/runners/spark/stateful/StateSpecFunctions/access$100()|",
      "|java+method:///org/apache/beam/sdk/io/BoundedSource$BoundedReader/advance()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/io/BoundedSource$BoundedReader/start()|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/Option/get()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/runners/spark/translation/SparkRuntimeContext/getPipelineOptions()|",
      "|java+method:///org/apache/spark/streaming/State/update(java.lang.Object)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/beam/runners/spark/coders/CoderHelpers/toByteArray(java.lang.Object,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/spark/io/MicrobatchSource/getCheckpointMarkCoder()|",
      "|java+method:///org/joda/time/Instant/isAfter(org.joda.time.ReadableInstant)|",
      "|java+method:///org/apache/beam/runners/spark/coders/CoderHelpers/fromByteArray(byte%5B%5D,org.apache.beam.sdk.coders.Coder)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue$FullWindowedValueCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/spark/streaming/State/get()|",
      "|java+method:///org/apache/beam/runners/spark/io/EmptyCheckpointMark/get()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/beam/runners/spark/io/MicrobatchSource$Reader/getWatermark()|",
      "|java+constructor:///org/apache/beam/runners/spark/stateful/StateSpecFunctions$1$1/StateSpecFunctions$1$1(org.apache.beam.runners.spark.stateful.StateSpecFunctions$1,java.util.List)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/io/BoundedSource$BoundedReader/getCurrent()|",
      "|java+method:///org/apache/beam/runners/spark/io/MicrobatchSource/createReader(org.apache.beam.sdk.options.PipelineOptions,org.apache.beam.sdk.io.UnboundedSource$CheckpointMark)|",
      "|java+method:///org/apache/beam/spark/repackaged/com/google/common/base/Stopwatch/elapsed(java.util.concurrent.TimeUnit)|",
      "|java+method:///scala/Option/isDefined()|",
      "|java+method:///org/apache/beam/sdk/io/BoundedSource$BoundedReader/getCurrentTimestamp()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///org/apache/beam/sdk/io/Source/getDefaultOutputCoder()|",
      "|java+constructor:///org/apache/beam/runners/spark/io/SparkUnboundedSource$Metadata/SparkUnboundedSource$Metadata(long,org.joda.time.Instant,org.joda.time.Instant)|",
      "|java+method:///org/apache/spark/streaming/State/exists()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///org/apache/beam/runners/spark/io/MicrobatchSource$Reader/getCheckpointMark()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/beam/sdk/io/BoundedSource$BoundedReader/close()|",
      "|java+method:///org/apache/beam/runners/spark/io/MicrobatchSource/getId()|",
      "|java+method:///org/apache/beam/runners/spark/stateful/StateSpecFunctions/access$100()|",
      "|java+method:///org/apache/beam/sdk/io/BoundedSource$BoundedReader/advance()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/io/BoundedSource$BoundedReader/start()|",
      "|java+method:///org/apache/beam/spark/repackaged/com/google/common/base/Stopwatch/stop()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/of(java.lang.Object,org.joda.time.Instant,org.apache.beam.sdk.transforms.windowing.BoundedWindow,org.apache.beam.sdk.transforms.windowing.PaneInfo)|",
      "|java+method:///org/apache/beam/spark/repackaged/com/google/common/base/Stopwatch/createStarted()|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/Option/get()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-spark:0.5.0",
    "coordinatesV2": "org.apache.beam:beam-runners-spark:0.6.0",
    "caller": "|java+constructor:///org/apache/beam/runners/spark/io/hadoop/HadoopIO$Read$Bound/HadoopIO$Read$Bound(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Class)|",
    "called": "|java+constructor:///org/apache/beam/sdk/transforms/PTransform/PTransform()|",
    "v1Body": [
      "|java+method:///org/apache/beam/spark/relocated/com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/beam/sdk/transforms/PTransform/PTransform()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/beam/sdk/transforms/PTransform/PTransform()|",
      "|java+method:///org/apache/beam/spark/repackaged/com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-spark:0.5.0",
    "coordinatesV2": "org.apache.beam:beam-runners-spark:0.6.0",
    "caller": "|java+method:///org/apache/beam/runners/spark/translation/SparkKeyedCombineFn/mergeCombiners(java.lang.Iterable,java.lang.Iterable)|",
    "called": "|java+method:///org/apache/beam/sdk/values/KV/of(java.lang.Object,java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/apache/beam/spark/relocated/com/google/common/collect/Iterables/getOnlyElement(java.lang.Iterable)|",
      "|java+method:///org/apache/beam/sdk/values/KV/getValue()|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getOutputTimeFn()|",
      "|java+method:///org/apache/beam/spark/relocated/com/google/common/collect/Iterables/concat(java.lang.Iterable,java.lang.Iterable)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getValue()|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkKeyedCombineFn/sortByWindows(java.lang.Iterable)|",
      "|java+method:///java/util/List/clear()|",
      "|java+method:///org/apache/beam/spark/relocated/com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/apache/beam/sdk/values/KV/getKey()|",
      "|java+method:///org/apache/beam/sdk/transforms/windowing/OutputTimeFn/merge(org.apache.beam.sdk.transforms.windowing.BoundedWindow,java.lang.Iterable)|",
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/isNonMerging()|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkKeyedCombineFn/ctxtForInput(org.apache.beam.sdk.util.WindowedValue)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getWindows()|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkKeyedCombineFn/isIntersecting(org.apache.beam.sdk.transforms.windowing.IntervalWindow,org.apache.beam.sdk.transforms.windowing.IntervalWindow)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getWindowFn()|",
      "|java+method:///org/apache/beam/sdk/values/KV/of(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/transforms/CombineWithContext$KeyedCombineFnWithContext/mergeAccumulators(java.lang.Object,java.lang.Iterable,org.apache.beam.sdk.transforms.CombineWithContext$Context)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkKeyedCombineFn/merge(org.apache.beam.sdk.transforms.windowing.IntervalWindow,org.apache.beam.sdk.transforms.windowing.IntervalWindow)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/withValue(java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getTimestamp()|",
      "|java+method:///org/apache/beam/spark/relocated/com/google/common/collect/Iterables/getFirst(java.lang.Iterable,java.lang.Object)|",
      "|java+method:///org/apache/beam/spark/relocated/com/google/common/collect/Iterables/unmodifiableIterable(java.lang.Iterable)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/of(java.lang.Object,org.joda.time.Instant,org.apache.beam.sdk.transforms.windowing.BoundedWindow,org.apache.beam.sdk.transforms.windowing.PaneInfo)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/spark/repackaged/com/google/common/collect/Iterables/getOnlyElement(java.lang.Iterable)|",
      "|java+method:///org/apache/beam/sdk/values/KV/getValue()|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getOutputTimeFn()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getValue()|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkKeyedCombineFn/sortByWindows(java.lang.Iterable)|",
      "|java+method:///org/apache/beam/sdk/transforms/windowing/OutputTimeFn/merge(org.apache.beam.sdk.transforms.windowing.BoundedWindow,java.lang.Iterable)|",
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/isNonMerging()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/of(java.lang.Object,org.joda.time.Instant,org.apache.beam.sdk.transforms.windowing.BoundedWindow,org.apache.beam.sdk.transforms.windowing.PaneInfo)|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkKeyedCombineFn/ctxtForInput(org.apache.beam.sdk.util.WindowedValue)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getWindows()|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkKeyedCombineFn/isIntersecting(org.apache.beam.sdk.transforms.windowing.IntervalWindow,org.apache.beam.sdk.transforms.windowing.IntervalWindow)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/beam/spark/repackaged/com/google/common/collect/Iterables/getFirst(java.lang.Iterable,java.lang.Object)|",
      "|java+method:///org/apache/beam/spark/repackaged/com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getWindowFn()|",
      "|java+method:///org/apache/beam/sdk/values/KV/of(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/transforms/CombineWithContext$KeyedCombineFnWithContext/mergeAccumulators(java.lang.Object,java.lang.Iterable,org.apache.beam.sdk.transforms.CombineWithContext$Context)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/util/List/clear()|",
      "|java+method:///org/apache/beam/spark/repackaged/com/google/common/collect/Iterables/unmodifiableIterable(java.lang.Iterable)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkKeyedCombineFn/merge(org.apache.beam.sdk.transforms.windowing.IntervalWindow,org.apache.beam.sdk.transforms.windowing.IntervalWindow)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/withValue(java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getTimestamp()|",
      "|java+method:///org/apache/beam/spark/repackaged/com/google/common/collect/Iterables/concat(java.lang.Iterable,java.lang.Iterable)|",
      "|java+method:///org/apache/beam/sdk/values/KV/getKey()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-spark:0.5.0",
    "coordinatesV2": "org.apache.beam:beam-runners-spark:0.6.0",
    "caller": "|java+method:///org/apache/beam/runners/spark/translation/TransformTranslator$3/evaluate(org.apache.beam.sdk.transforms.Combine$GroupedValues,org.apache.beam.runners.spark.translation.EvaluationContext)|",
    "called": "|java+method:///org/apache/beam/sdk/util/CombineFnUtil/toFnWithContext(org.apache.beam.sdk.transforms.CombineFnBase$PerKeyCombineFn)|",
    "v1Body": [
      "|java+method:///org/apache/spark/api/java/JavaRDD/map(org.apache.spark.api.java.function.Function)|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/borrowDataset(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/runners/spark/translation/TranslationUtils/getSideInputs(java.util.List,org.apache.beam.runners.spark.translation.EvaluationContext)|",
      "|java+method:///org/apache/beam/runners/spark/translation/BoundedDataset/getRDD()|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getRuntimeContext()|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/BoundedDataset/BoundedDataset(org.apache.spark.api.java.JavaRDD)|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getInput(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/putDataset(org.apache.beam.sdk.transforms.PTransform,org.apache.beam.runners.spark.translation.Dataset)|",
      "|java+method:///org/apache/beam/sdk/transforms/Combine$GroupedValues/getSideInputs()|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/TranslationUtils$CombineGroupedValues/TranslationUtils$CombineGroupedValues(org.apache.beam.runners.spark.translation.SparkKeyedCombineFn)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|",
      "|java+method:///org/apache/beam/sdk/transforms/Combine$GroupedValues/getFn()|",
      "|java+method:///org/apache/beam/sdk/util/CombineFnUtil/toFnWithContext(org.apache.beam.sdk.transforms.CombineFnBase$PerKeyCombineFn)|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/SparkKeyedCombineFn/SparkKeyedCombineFn(org.apache.beam.sdk.transforms.CombineWithContext$KeyedCombineFnWithContext,org.apache.beam.runners.spark.translation.SparkRuntimeContext,java.util.Map,org.apache.beam.sdk.util.WindowingStrategy)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/spark/api/java/JavaRDD/map(org.apache.spark.api.java.function.Function)|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/borrowDataset(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/runners/spark/translation/TranslationUtils/getSideInputs(java.util.List,org.apache.beam.runners.spark.translation.EvaluationContext)|",
      "|java+method:///org/apache/beam/runners/spark/translation/BoundedDataset/getRDD()|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getRuntimeContext()|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/BoundedDataset/BoundedDataset(org.apache.spark.api.java.JavaRDD)|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getInput(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/putDataset(org.apache.beam.sdk.transforms.PTransform,org.apache.beam.runners.spark.translation.Dataset)|",
      "|java+method:///org/apache/beam/sdk/transforms/Combine$GroupedValues/getSideInputs()|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/TransformTranslator$3$1/TransformTranslator$3$1(org.apache.beam.runners.spark.translation.TransformTranslator$3,org.apache.beam.runners.spark.translation.SparkKeyedCombineFn)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|",
      "|java+method:///org/apache/beam/sdk/transforms/Combine$GroupedValues/getFn()|",
      "|java+method:///org/apache/beam/sdk/util/CombineFnUtil/toFnWithContext(org.apache.beam.sdk.transforms.CombineFnBase$PerKeyCombineFn)|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/SparkKeyedCombineFn/SparkKeyedCombineFn(org.apache.beam.sdk.transforms.CombineWithContext$KeyedCombineFnWithContext,org.apache.beam.runners.spark.translation.SparkRuntimeContext,java.util.Map,org.apache.beam.sdk.util.WindowingStrategy)|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-spark:0.5.0",
    "coordinatesV2": "org.apache.beam:beam-runners-spark:0.6.0",
    "caller": "|java+method:///org/apache/beam/runners/spark/translation/SparkKeyedCombineFn/createCombiner(org.apache.beam.sdk.util.WindowedValue)|",
    "called": "|java+method:///org/apache/beam/sdk/util/WindowedValue/explodeWindows()|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/transforms/CombineWithContext$KeyedCombineFnWithContext/createAccumulator(java.lang.Object,org.apache.beam.sdk.transforms.CombineWithContext$Context)|",
      "|java+method:///org/apache/beam/spark/relocated/com/google/common/collect/Iterables/getOnlyElement(java.lang.Iterable)|",
      "|java+method:///org/apache/beam/sdk/values/KV/getValue()|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getOutputTimeFn()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getValue()|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkKeyedCombineFn/sortByWindows(java.lang.Iterable)|",
      "|java+method:///org/apache/beam/spark/relocated/com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkKeyedCombineFn/ctxtForInput(org.apache.beam.sdk.util.WindowedValue)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getWindows()|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkKeyedCombineFn/isIntersecting(org.apache.beam.sdk.transforms.windowing.IntervalWindow,org.apache.beam.sdk.transforms.windowing.IntervalWindow)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/beam/sdk/transforms/windowing/OutputTimeFn/combine(org.joda.time.Instant,org.joda.time.Instant)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getWindowFn()|",
      "|java+method:///org/apache/beam/sdk/values/KV/of(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkKeyedCombineFn/merge(org.apache.beam.sdk.transforms.windowing.IntervalWindow,org.apache.beam.sdk.transforms.windowing.IntervalWindow)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getTimestamp()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/explodeWindows()|",
      "|java+method:///org/apache/beam/sdk/transforms/windowing/OutputTimeFn/assignOutputTime(org.joda.time.Instant,org.apache.beam.sdk.transforms.windowing.BoundedWindow)|",
      "|java+method:///org/apache/beam/sdk/values/KV/getKey()|",
      "|java+method:///org/apache/beam/sdk/transforms/CombineWithContext$KeyedCombineFnWithContext/addInput(java.lang.Object,java.lang.Object,java.lang.Object,org.apache.beam.sdk.transforms.CombineWithContext$Context)|",
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/isNonMerging()|",
      "|java+method:///org/apache/beam/spark/relocated/com/google/common/collect/Iterables/getFirst(java.lang.Iterable,java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/of(java.lang.Object,org.joda.time.Instant,org.apache.beam.sdk.transforms.windowing.BoundedWindow,org.apache.beam.sdk.transforms.windowing.PaneInfo)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/transforms/CombineWithContext$KeyedCombineFnWithContext/createAccumulator(java.lang.Object,org.apache.beam.sdk.transforms.CombineWithContext$Context)|",
      "|java+method:///org/apache/beam/spark/repackaged/com/google/common/collect/Iterables/getOnlyElement(java.lang.Iterable)|",
      "|java+method:///org/apache/beam/sdk/values/KV/getValue()|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getOutputTimeFn()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getValue()|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkKeyedCombineFn/sortByWindows(java.lang.Iterable)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/of(java.lang.Object,org.joda.time.Instant,org.apache.beam.sdk.transforms.windowing.BoundedWindow,org.apache.beam.sdk.transforms.windowing.PaneInfo)|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkKeyedCombineFn/ctxtForInput(org.apache.beam.sdk.util.WindowedValue)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getWindows()|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkKeyedCombineFn/isIntersecting(org.apache.beam.sdk.transforms.windowing.IntervalWindow,org.apache.beam.sdk.transforms.windowing.IntervalWindow)|",
      "|java+method:///org/apache/beam/sdk/transforms/windowing/OutputTimeFn/combine(org.joda.time.Instant,org.joda.time.Instant)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/beam/spark/repackaged/com/google/common/collect/Iterables/getFirst(java.lang.Iterable,java.lang.Object)|",
      "|java+method:///org/apache/beam/spark/repackaged/com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getWindowFn()|",
      "|java+method:///org/apache/beam/sdk/values/KV/of(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkKeyedCombineFn/merge(org.apache.beam.sdk.transforms.windowing.IntervalWindow,org.apache.beam.sdk.transforms.windowing.IntervalWindow)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getTimestamp()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/explodeWindows()|",
      "|java+method:///org/apache/beam/sdk/transforms/windowing/OutputTimeFn/assignOutputTime(org.joda.time.Instant,org.apache.beam.sdk.transforms.windowing.BoundedWindow)|",
      "|java+method:///org/apache/beam/sdk/values/KV/getKey()|",
      "|java+method:///org/apache/beam/sdk/transforms/CombineWithContext$KeyedCombineFnWithContext/addInput(java.lang.Object,java.lang.Object,java.lang.Object,org.apache.beam.sdk.transforms.CombineWithContext$Context)|",
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/isNonMerging()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-spark:0.5.0",
    "coordinatesV2": "org.apache.beam:beam-runners-spark:0.6.0",
    "caller": "|java+method:///org/apache/beam/runners/spark/translation/SparkGlobalCombineFn/combOp(java.lang.Iterable,java.lang.Iterable)|",
    "called": "|java+method:///org/apache/beam/sdk/util/WindowedValue/of(java.lang.Object,org.joda.time.Instant,org.apache.beam.sdk.transforms.windowing.BoundedWindow,org.apache.beam.sdk.transforms.windowing.PaneInfo)|",
    "v1Body": [
      "|java+method:///org/apache/beam/runners/spark/translation/SparkGlobalCombineFn/sortByWindows(java.lang.Iterable)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/beam/spark/relocated/com/google/common/collect/Iterables/getOnlyElement(java.lang.Iterable)|",
      "|java+method:///org/apache/beam/sdk/transforms/CombineWithContext$CombineFnWithContext/mergeAccumulators(java.lang.Iterable,org.apache.beam.sdk.transforms.CombineWithContext$Context)|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkGlobalCombineFn/merge(org.apache.beam.sdk.transforms.windowing.IntervalWindow,org.apache.beam.sdk.transforms.windowing.IntervalWindow)|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getOutputTimeFn()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getValue()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/util/List/clear()|",
      "|java+method:///org/apache/beam/spark/relocated/com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkGlobalCombineFn/ctxtForInput(org.apache.beam.sdk.util.WindowedValue)|",
      "|java+method:///org/apache/beam/sdk/transforms/windowing/OutputTimeFn/merge(org.apache.beam.sdk.transforms.windowing.BoundedWindow,java.lang.Iterable)|",
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/isNonMerging()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getWindows()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getWindowFn()|",
      "|java+method:///org/apache/beam/spark/relocated/com/google/common/collect/Iterables/concat(java.lang.Iterable,java.lang.Iterable)|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkGlobalCombineFn/isIntersecting(org.apache.beam.sdk.transforms.windowing.IntervalWindow,org.apache.beam.sdk.transforms.windowing.IntervalWindow)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/withValue(java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getTimestamp()|",
      "|java+method:///org/apache/beam/spark/relocated/com/google/common/collect/Iterables/getFirst(java.lang.Iterable,java.lang.Object)|",
      "|java+method:///org/apache/beam/spark/relocated/com/google/common/collect/Iterables/unmodifiableIterable(java.lang.Iterable)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/of(java.lang.Object,org.joda.time.Instant,org.apache.beam.sdk.transforms.windowing.BoundedWindow,org.apache.beam.sdk.transforms.windowing.PaneInfo)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/runners/spark/translation/SparkGlobalCombineFn/sortByWindows(java.lang.Iterable)|",
      "|java+method:///org/apache/beam/spark/repackaged/com/google/common/collect/Iterables/getOnlyElement(java.lang.Iterable)|",
      "|java+method:///org/apache/beam/sdk/transforms/CombineWithContext$CombineFnWithContext/mergeAccumulators(java.lang.Iterable,org.apache.beam.sdk.transforms.CombineWithContext$Context)|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkGlobalCombineFn/merge(org.apache.beam.sdk.transforms.windowing.IntervalWindow,org.apache.beam.sdk.transforms.windowing.IntervalWindow)|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getOutputTimeFn()|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkGlobalCombineFn/isIntersecting(org.apache.beam.sdk.transforms.windowing.IntervalWindow,org.apache.beam.sdk.transforms.windowing.IntervalWindow)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getValue()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///org/apache/beam/sdk/transforms/windowing/OutputTimeFn/merge(org.apache.beam.sdk.transforms.windowing.BoundedWindow,java.lang.Iterable)|",
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/isNonMerging()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/of(java.lang.Object,org.joda.time.Instant,org.apache.beam.sdk.transforms.windowing.BoundedWindow,org.apache.beam.sdk.transforms.windowing.PaneInfo)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getWindows()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/beam/spark/repackaged/com/google/common/collect/Iterables/getFirst(java.lang.Iterable,java.lang.Object)|",
      "|java+method:///org/apache/beam/spark/repackaged/com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getWindowFn()|",
      "|java+method:///java/util/List/clear()|",
      "|java+method:///org/apache/beam/spark/repackaged/com/google/common/collect/Iterables/unmodifiableIterable(java.lang.Iterable)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/withValue(java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getTimestamp()|",
      "|java+method:///org/apache/beam/spark/repackaged/com/google/common/collect/Iterables/concat(java.lang.Iterable,java.lang.Iterable)|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkGlobalCombineFn/ctxtForInput(org.apache.beam.sdk.util.WindowedValue)|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-spark:0.5.0",
    "coordinatesV2": "org.apache.beam:beam-runners-spark:0.6.0",
    "caller": "|java+method:///org/apache/beam/runners/spark/translation/SparkGlobalCombineFn/createAccumulator(org.apache.beam.sdk.util.WindowedValue)|",
    "called": "|java+method:///org/apache/beam/sdk/util/WindowedValue/explodeWindows()|",
    "v1Body": [
      "|java+method:///org/apache/beam/runners/spark/translation/SparkGlobalCombineFn/sortByWindows(java.lang.Iterable)|",
      "|java+method:///org/apache/beam/spark/relocated/com/google/common/collect/Iterables/getOnlyElement(java.lang.Iterable)|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkGlobalCombineFn/merge(org.apache.beam.sdk.transforms.windowing.IntervalWindow,org.apache.beam.sdk.transforms.windowing.IntervalWindow)|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getOutputTimeFn()|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkGlobalCombineFn/isIntersecting(org.apache.beam.sdk.transforms.windowing.IntervalWindow,org.apache.beam.sdk.transforms.windowing.IntervalWindow)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getValue()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///org/apache/beam/spark/relocated/com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/isNonMerging()|",
      "|java+method:///org/apache/beam/sdk/transforms/CombineWithContext$CombineFnWithContext/createAccumulator(org.apache.beam.sdk.transforms.CombineWithContext$Context)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getWindows()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/beam/sdk/transforms/CombineWithContext$CombineFnWithContext/addInput(java.lang.Object,java.lang.Object,org.apache.beam.sdk.transforms.CombineWithContext$Context)|",
      "|java+method:///org/apache/beam/sdk/transforms/windowing/OutputTimeFn/combine(org.joda.time.Instant,org.joda.time.Instant)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getWindowFn()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getTimestamp()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/explodeWindows()|",
      "|java+method:///org/apache/beam/sdk/transforms/windowing/OutputTimeFn/assignOutputTime(org.joda.time.Instant,org.apache.beam.sdk.transforms.windowing.BoundedWindow)|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkGlobalCombineFn/ctxtForInput(org.apache.beam.sdk.util.WindowedValue)|",
      "|java+method:///org/apache/beam/spark/relocated/com/google/common/collect/Iterables/getFirst(java.lang.Iterable,java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/of(java.lang.Object,org.joda.time.Instant,org.apache.beam.sdk.transforms.windowing.BoundedWindow,org.apache.beam.sdk.transforms.windowing.PaneInfo)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/runners/spark/translation/SparkGlobalCombineFn/sortByWindows(java.lang.Iterable)|",
      "|java+method:///org/apache/beam/spark/repackaged/com/google/common/collect/Iterables/getOnlyElement(java.lang.Iterable)|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkGlobalCombineFn/merge(org.apache.beam.sdk.transforms.windowing.IntervalWindow,org.apache.beam.sdk.transforms.windowing.IntervalWindow)|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getOutputTimeFn()|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkGlobalCombineFn/isIntersecting(org.apache.beam.sdk.transforms.windowing.IntervalWindow,org.apache.beam.sdk.transforms.windowing.IntervalWindow)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getValue()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/isNonMerging()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/of(java.lang.Object,org.joda.time.Instant,org.apache.beam.sdk.transforms.windowing.BoundedWindow,org.apache.beam.sdk.transforms.windowing.PaneInfo)|",
      "|java+method:///org/apache/beam/sdk/transforms/CombineWithContext$CombineFnWithContext/createAccumulator(org.apache.beam.sdk.transforms.CombineWithContext$Context)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getWindows()|",
      "|java+method:///org/apache/beam/sdk/transforms/CombineWithContext$CombineFnWithContext/addInput(java.lang.Object,java.lang.Object,org.apache.beam.sdk.transforms.CombineWithContext$Context)|",
      "|java+method:///org/apache/beam/sdk/transforms/windowing/OutputTimeFn/combine(org.joda.time.Instant,org.joda.time.Instant)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/beam/spark/repackaged/com/google/common/collect/Iterables/getFirst(java.lang.Iterable,java.lang.Object)|",
      "|java+method:///org/apache/beam/spark/repackaged/com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getWindowFn()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getTimestamp()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/explodeWindows()|",
      "|java+method:///org/apache/beam/sdk/transforms/windowing/OutputTimeFn/assignOutputTime(org.joda.time.Instant,org.apache.beam.sdk.transforms.windowing.BoundedWindow)|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkGlobalCombineFn/ctxtForInput(org.apache.beam.sdk.util.WindowedValue)|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-spark:0.5.0",
    "coordinatesV2": "org.apache.beam:beam-runners-spark:0.6.0",
    "caller": "|java+method:///org/apache/beam/runners/spark/translation/streaming/SparkRunnerStreamingContextFactory/create()|",
    "called": "|java+method:///org/apache/beam/sdk/Pipeline/traverseTopologically(org.apache.beam.sdk.Pipeline$PipelineVisitor)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkContextFactory/getSparkContext(org.apache.beam.runners.spark.SparkPipelineOptions)|",
      "|java+method:///java/lang/Class/getSimpleName()|",
      "|java+method:///org/apache/beam/runners/spark/SparkPipelineOptions/getReadTimePercentage()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/apache/beam/runners/spark/SparkPipelineOptions/getMinReadTimeMillis()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/spark/SparkContextOptions/getListeners()|",
      "|java+method:///org/apache/spark/streaming/Duration/milliseconds()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/spark/streaming/api/java/JavaStreamingListenerWrapper/JavaStreamingListenerWrapper(org.apache.spark.streaming.api.java.JavaStreamingListener)|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/computeOutputs()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/streaming/StreamingTransformTranslator$Translator/StreamingTransformTranslator$Translator(org.apache.beam.runners.spark.translation.SparkPipelineTranslator)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/TransformTranslator$Translator/TransformTranslator$Translator()|",
      "|java+method:///org/apache/beam/runners/spark/SparkPipelineOptions/as(java.lang.Class)|",
      "|java+method:///org/apache/beam/sdk/Pipeline/traverseTopologically(org.apache.beam.sdk.Pipeline$PipelineVisitor)|",
      "|java+constructor:///org/apache/spark/streaming/api/java/JavaStreamingContext/JavaStreamingContext(org.apache.spark.api.java.JavaSparkContext,org.apache.spark.streaming.Duration)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///java/lang/Double/doubleValue()|",
      "|java+method:///org/apache/beam/runners/spark/SparkPipelineOptions/getBatchIntervalMillis()|",
      "|java+method:///org/apache/beam/runners/spark/SparkPipelineOptions/getCheckpointDir()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/EvaluationContext/EvaluationContext(org.apache.spark.api.java.JavaSparkContext,org.apache.beam.sdk.Pipeline,org.apache.spark.streaming.api.java.JavaStreamingContext)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+constructor:///org/apache/beam/runners/spark/SparkRunner$Evaluator/SparkRunner$Evaluator(org.apache.beam.runners.spark.translation.SparkPipelineTranslator,org.apache.beam.runners.spark.translation.EvaluationContext)|",
      "|java+method:///org/apache/spark/streaming/api/java/JavaStreamingContext/checkpoint(java.lang.String)|",
      "|java+method:///java/lang/String/matches(java.lang.String)|",
      "|java+method:///org/apache/spark/streaming/api/java/JavaStreamingContext/addStreamingListener(org.apache.spark.streaming.scheduler.StreamingListener)|",
      "|java+method:///org/apache/beam/spark/relocated/com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/spark/streaming/Duration/Duration(long)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/runners/spark/translation/SparkContextFactory/getSparkContext(org.apache.beam.runners.spark.SparkPipelineOptions)|",
      "|java+method:///org/apache/beam/runners/spark/SparkPipelineOptions/getReadTimePercentage()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/streaming/StreamingTransformTranslator$Translator/StreamingTransformTranslator$Translator(org.apache.beam.runners.spark.translation.SparkPipelineTranslator)|",
      "|java+method:///org/apache/beam/runners/spark/SparkPipelineOptions/getMinReadTimeMillis()|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/TransformTranslator$Translator/TransformTranslator$Translator()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/spark/streaming/Duration/milliseconds()|",
      "|java+method:///org/apache/beam/runners/spark/SparkPipelineOptions/getBatchIntervalMillis()|",
      "|java+method:///org/apache/beam/spark/repackaged/com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/computeOutputs()|",
      "|java+constructor:///org/apache/spark/streaming/Duration/Duration(long)|",
      "|java+method:///org/apache/beam/sdk/Pipeline/traverseTopologically(org.apache.beam.sdk.Pipeline$PipelineVisitor)|",
      "|java+constructor:///org/apache/spark/streaming/api/java/JavaStreamingContext/JavaStreamingContext(org.apache.spark.api.java.JavaSparkContext,org.apache.spark.streaming.Duration)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///java/lang/Double/doubleValue()|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/EvaluationContext/EvaluationContext(org.apache.spark.api.java.JavaSparkContext,org.apache.beam.sdk.Pipeline,org.apache.spark.streaming.api.java.JavaStreamingContext)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+constructor:///org/apache/beam/runners/spark/SparkRunner$Evaluator/SparkRunner$Evaluator(org.apache.beam.runners.spark.translation.SparkPipelineTranslator,org.apache.beam.runners.spark.translation.EvaluationContext)|",
      "|java+method:///org/apache/beam/runners/spark/translation/streaming/SparkRunnerStreamingContextFactory/checkpoint(org.apache.spark.streaming.api.java.JavaStreamingContext)|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-spark:0.5.0",
    "coordinatesV2": "org.apache.beam:beam-runners-spark:0.6.0",
    "caller": "|java+method:///org/apache/beam/runners/spark/translation/BoundedDataset/getValues(org.apache.beam.sdk.values.PCollection)|",
    "called": "|java+method:///org/apache/beam/sdk/util/WindowedValue$ValueOnlyWindowedValueCoder/of(org.apache.beam.sdk.coders.Coder)|",
    "v1Body": [
      "|java+method:///org/apache/beam/spark/relocated/com/google/common/collect/Iterables/transform(java.lang.Iterable,org.apache.beam.spark.relocated.com.google.common.base.Function)|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/BoundedDataset$1/BoundedDataset$1(org.apache.beam.runners.spark.translation.BoundedDataset,org.apache.beam.sdk.util.WindowedValue$WindowedValueCoder)|",
      "|java+method:///org/apache/beam/runners/spark/coders/CoderHelpers/toByteFunction(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/spark/api/java/JavaRDDLike/collect()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue$FullWindowedValueCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/spark/api/java/JavaRDD/map(org.apache.spark.api.java.function.Function)|",
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/windowCoder()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue$ValueOnlyWindowedValueCoder/of(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getWindowFn()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/beam/runners/spark/translation/BoundedDataset$1/BoundedDataset$1(org.apache.beam.runners.spark.translation.BoundedDataset,org.apache.beam.sdk.util.WindowedValue$WindowedValueCoder)|",
      "|java+method:///org/apache/beam/runners/spark/coders/CoderHelpers/toByteFunction(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/spark/api/java/JavaRDDLike/collect()|",
      "|java+method:///org/apache/beam/spark/repackaged/com/google/common/collect/Iterables/transform(java.lang.Iterable,org.apache.beam.spark.repackaged.com.google.common.base.Function)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue$FullWindowedValueCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/spark/api/java/JavaRDD/map(org.apache.spark.api.java.function.Function)|",
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/windowCoder()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue$ValueOnlyWindowedValueCoder/of(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getWindowFn()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-spark:0.5.0",
    "coordinatesV2": "org.apache.beam:beam-runners-spark:0.6.0",
    "caller": "|java+method:///org/apache/beam/runners/spark/translation/TransformTranslator$5/evaluate(org.apache.beam.sdk.transforms.Combine$PerKey,org.apache.beam.runners.spark.translation.EvaluationContext)|",
    "called": "|java+method:///org/apache/beam/sdk/util/CombineFnUtil/toFnWithContext(org.apache.beam.sdk.transforms.CombineFnBase$PerKeyCombineFn)|",
    "v1Body": [
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/borrowDataset(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/runners/spark/translation/TranslationUtils/getSideInputs(java.util.List,org.apache.beam.runners.spark.translation.EvaluationContext)|",
      "|java+method:///org/apache/beam/runners/spark/translation/BoundedDataset/getRDD()|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getRuntimeContext()|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/BoundedDataset/BoundedDataset(org.apache.spark.api.java.JavaRDD)|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getInput(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/putDataset(org.apache.beam.sdk.transforms.PTransform,org.apache.beam.runners.spark.translation.Dataset)|",
      "|java+method:///org/apache/beam/sdk/transforms/Combine$PerKey/getSideInputs()|",
      "|java+method:///org/apache/beam/runners/spark/translation/GroupCombineFunctions/combinePerKey(org.apache.spark.api.java.JavaRDD,org.apache.beam.sdk.transforms.CombineWithContext$KeyedCombineFnWithContext,org.apache.beam.sdk.coders.KvCoder,org.apache.beam.runners.spark.translation.SparkRuntimeContext,org.apache.beam.sdk.util.WindowingStrategy,java.util.Map)|",
      "|java+method:///org/apache/beam/sdk/transforms/Combine$PerKey/getFn()|",
      "|java+method:///org/apache/beam/sdk/util/CombineFnUtil/toFnWithContext(org.apache.beam.sdk.transforms.CombineFnBase$PerKeyCombineFn)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/spark/api/java/JavaRDD/map(org.apache.spark.api.java.function.Function)|",
      "|java+method:///org/apache/beam/runners/spark/translation/TranslationUtils/fromPairFunction()|",
      "|java+method:///org/apache/beam/runners/spark/translation/TranslationUtils/getSideInputs(java.util.List,org.apache.beam.runners.spark.translation.EvaluationContext)|",
      "|java+method:///org/apache/beam/runners/spark/translation/BoundedDataset/getRDD()|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/BoundedDataset/BoundedDataset(org.apache.spark.api.java.JavaRDD)|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/getValueCoder()|",
      "|java+method:///org/apache/beam/sdk/transforms/CombineWithContext$KeyedCombineFnWithContext/getAccumulatorCoder(org.apache.beam.sdk.coders.CoderRegistry,org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/transforms/Combine$PerKey/getSideInputs()|",
      "|java+method:///org/apache/beam/runners/spark/translation/GroupCombineFunctions/combinePerKey(org.apache.spark.api.java.JavaRDD,org.apache.beam.runners.spark.translation.SparkKeyedCombineFn,org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.util.WindowingStrategy)|",
      "|java+method:///org/apache/beam/sdk/transforms/Combine$PerKey/getFn()|",
      "|java+method:///org/apache/beam/sdk/util/CombineFnUtil/toFnWithContext(org.apache.beam.sdk.transforms.CombineFnBase$PerKeyCombineFn)|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/SparkKeyedCombineFn/SparkKeyedCombineFn(org.apache.beam.sdk.transforms.CombineWithContext$KeyedCombineFnWithContext,org.apache.beam.runners.spark.translation.SparkRuntimeContext,java.util.Map,org.apache.beam.sdk.util.WindowingStrategy)|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/getKeyCoder()|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/borrowDataset(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getRuntimeContext()|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkRuntimeContext/getCoderRegistry()|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getInput(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/runners/spark/translation/TranslationUtils/toKVByWindowInValue()|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/putDataset(org.apache.beam.sdk.transforms.PTransform,org.apache.beam.runners.spark.translation.Dataset)|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/TransformTranslator$5$1/TransformTranslator$5$1(org.apache.beam.runners.spark.translation.TransformTranslator$5,org.apache.beam.runners.spark.translation.SparkKeyedCombineFn)|",
      "|java+method:///org/apache/spark/api/java/JavaPairRDD/flatMapValues(org.apache.spark.api.java.function.Function)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|",
      "|java+method:///org/apache/spark/api/java/JavaPairRDD/map(org.apache.spark.api.java.function.Function)|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-spark:0.5.0",
    "coordinatesV2": "org.apache.beam:beam-runners-spark:0.6.0",
    "caller": "|java+method:///org/apache/beam/runners/spark/translation/streaming/StreamingTransformTranslator$5$1/call(org.apache.spark.api.java.JavaRDD)|",
    "called": "|java+method:///org/apache/beam/sdk/transforms/windowing/Window$Assign/getWindowFn()|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/transforms/windowing/Window$Bound/getWindowFn()|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/SparkAssignWindowFn/SparkAssignWindowFn(org.apache.beam.sdk.transforms.windowing.WindowFn)|",
      "|java+method:///org/apache/spark/api/java/JavaRDD/map(org.apache.spark.api.java.function.Function)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/transforms/windowing/Window$Assign/getWindowFn()|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/SparkAssignWindowFn/SparkAssignWindowFn(org.apache.beam.sdk.transforms.windowing.WindowFn)|",
      "|java+method:///org/apache/spark/api/java/JavaRDD/map(org.apache.spark.api.java.function.Function)|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-spark:0.5.0",
    "coordinatesV2": "org.apache.beam:beam-runners-spark:0.6.0",
    "caller": "|java+method:///org/apache/beam/runners/spark/translation/TransformTranslator$4/evaluate(org.apache.beam.sdk.transforms.Combine$Globally,org.apache.beam.runners.spark.translation.EvaluationContext)|",
    "called": "|java+method:///org/apache/beam/sdk/util/CombineFnUtil/toFnWithContext(org.apache.beam.sdk.transforms.CombineFnBase$GlobalCombineFn)|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/transforms/Combine$Globally/getSideInputs()|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/borrowDataset(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/runners/spark/translation/TranslationUtils/getSideInputs(java.util.List,org.apache.beam.runners.spark.translation.EvaluationContext)|",
      "|java+method:///org/apache/beam/runners/spark/translation/BoundedDataset/getRDD()|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getRuntimeContext()|",
      "|java+method:///org/apache/beam/runners/spark/translation/GroupCombineFunctions/combineGlobally(org.apache.spark.api.java.JavaRDD,org.apache.beam.sdk.transforms.CombineWithContext$CombineFnWithContext,org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder,org.apache.beam.runners.spark.translation.SparkRuntimeContext,org.apache.beam.sdk.util.WindowingStrategy,java.util.Map,boolean)|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getOutput(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getInput(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/putDataset(org.apache.beam.sdk.transforms.PTransform,org.apache.beam.runners.spark.translation.Dataset)|",
      "|java+method:///org/apache/beam/sdk/util/CombineFnUtil/toFnWithContext(org.apache.beam.sdk.transforms.CombineFnBase$GlobalCombineFn)|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/BoundedDataset/BoundedDataset(org.apache.spark.api.java.JavaRDD)|",
      "|java+method:///org/apache/beam/sdk/transforms/Combine$Globally/getFn()|",
      "|java+method:///org/apache/beam/sdk/transforms/Combine$Globally/isInsertDefault()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/transforms/Combine$Globally/getSideInputs()|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getSparkContext()|",
      "|java+method:///org/apache/beam/runners/spark/translation/BoundedDataset/getRDD()|",
      "|java+method:///org/apache/beam/sdk/transforms/CombineWithContext$CombineFnWithContext/defaultValue()|",
      "|java+method:///org/apache/spark/api/java/JavaSparkContext/emptyRDD()|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/SparkGlobalCombineFn/SparkGlobalCombineFn(org.apache.beam.sdk.transforms.CombineWithContext$CombineFnWithContext,org.apache.beam.runners.spark.translation.SparkRuntimeContext,java.util.Map,org.apache.beam.sdk.util.WindowingStrategy)|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkGlobalCombineFn/extractOutput(java.lang.Iterable)|",
      "|java+method:///org/apache/beam/runners/spark/coders/CoderHelpers/fromByteFunction(org.apache.beam.sdk.coders.Coder)|",
      "|java+constructor:///org/apache/spark/api/java/JavaSparkContext/JavaSparkContext(org.apache.spark.SparkContext)|",
      "|java+method:///org/apache/beam/spark/repackaged/com/google/common/collect/Lists/newArrayList(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/spark/api/java/JavaRDD/map(org.apache.spark.api.java.function.Function)|",
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/windowCoder()|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/borrowDataset(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/beam/runners/spark/translation/TranslationUtils/getSideInputs(java.util.List,org.apache.beam.runners.spark.translation.EvaluationContext)|",
      "|java+method:///org/apache/beam/sdk/transforms/CombineWithContext$CombineFnWithContext/getAccumulatorCoder(org.apache.beam.sdk.coders.CoderRegistry,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getRuntimeContext()|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkRuntimeContext/getCoderRegistry()|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/BoundedDataset/BoundedDataset(org.apache.spark.api.java.JavaRDD)|",
      "|java+method:///org/apache/beam/sdk/transforms/Combine$Globally/getFn()|",
      "|java+method:///org/apache/beam/runners/spark/translation/GroupCombineFunctions/combineGlobally(org.apache.spark.api.java.JavaRDD,org.apache.beam.runners.spark.translation.SparkGlobalCombineFn,org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.util.WindowingStrategy)|",
      "|java+method:///org/apache/beam/sdk/transforms/Combine$Globally/isInsertDefault()|",
      "|java+method:///org/apache/beam/runners/spark/coders/CoderHelpers/toByteArray(java.lang.Object,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getOutput(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getInput(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getWindowFn()|",
      "|java+method:///org/apache/spark/api/java/JavaRDD/isEmpty()|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/putDataset(org.apache.beam.sdk.transforms.PTransform,org.apache.beam.runners.spark.translation.Dataset)|",
      "|java+method:///org/apache/beam/runners/spark/coders/CoderHelpers/toByteArrays(java.lang.Iterable,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/runners/spark/translation/WindowingHelpers/windowFunction()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|",
      "|java+method:///org/apache/spark/api/java/JavaRDD/context()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue$FullWindowedValueCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/util/CombineFnUtil/toFnWithContext(org.apache.beam.sdk.transforms.CombineFnBase$GlobalCombineFn)|",
      "|java+method:///org/apache/spark/api/java/JavaSparkContext/parallelize(java.util.List)|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-spark:0.5.0",
    "coordinatesV2": "org.apache.beam:beam-runners-spark:0.6.0",
    "caller": "|java+method:///org/apache/beam/runners/spark/SparkRunner$Evaluator/shouldDefer(org.apache.beam.sdk.runners.TransformHierarchy$Node)|",
    "called": "|java+method:///org/apache/beam/sdk/runners/TransformHierarchy$Node/getInputs()|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/transforms/Combine$Globally/getSideInputs()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/beam/sdk/options/PipelineOptions/getJobName()|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getWindowFn()|",
      "|java+method:///org/apache/beam/sdk/transforms/Combine$PerKey/getSideInputs()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|",
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/isNonMerging()|",
      "|java+method:///org/apache/beam/sdk/runners/TransformHierarchy$Node/getInputs()|",
      "|java+method:///org/apache/beam/sdk/values/TaggedPValue/getValue()|",
      "|java+method:///org/apache/beam/spark/relocated/com/google/common/collect/Iterables/getOnlyElement(java.lang.Iterable)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/runners/TransformHierarchy$Node/getTransform()|",
      "|java+method:///org/apache/beam/sdk/Pipeline/getOptions()|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getPipeline()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/values/TaggedPValue/getValue()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/beam/sdk/options/PipelineOptions/getJobName()|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getWindowFn()|",
      "|java+method:///org/apache/beam/sdk/transforms/Combine$PerKey/getSideInputs()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|",
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/isNonMerging()|",
      "|java+method:///org/apache/beam/sdk/runners/TransformHierarchy$Node/getInputs()|",
      "|java+method:///org/apache/beam/spark/repackaged/com/google/common/collect/Iterables/getOnlyElement(java.lang.Iterable)|",
      "|java+method:///org/apache/beam/sdk/transforms/Combine$Globally/getSideInputs()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/runners/TransformHierarchy$Node/getTransform()|",
      "|java+method:///org/apache/beam/sdk/Pipeline/getOptions()|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getPipeline()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-spark:0.5.0",
    "coordinatesV2": "org.apache.beam:beam-runners-spark:0.6.0",
    "caller": "|java+method:///org/apache/beam/runners/spark/translation/streaming/StreamingTransformTranslator$6/evaluate(org.apache.beam.sdk.transforms.GroupByKey,org.apache.beam.runners.spark.translation.EvaluationContext)|",
    "called": "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
    "v1Body": [
      "|java+constructor:///org/apache/beam/runners/spark/translation/streaming/StreamingTransformTranslator$6$1/StreamingTransformTranslator$6$1(org.apache.beam.runners.spark.translation.streaming.StreamingTransformTranslator$6,org.apache.beam.sdk.coders.KvCoder,org.apache.beam.runners.spark.translation.SparkRuntimeContext,org.apache.beam.sdk.util.WindowingStrategy)|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/borrowDataset(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getRuntimeContext()|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getInput(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/runners/spark/translation/streaming/UnboundedDataset/getDStream()|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/streaming/UnboundedDataset/UnboundedDataset(org.apache.spark.streaming.api.java.JavaDStream)|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/putDataset(org.apache.beam.sdk.transforms.PTransform,org.apache.beam.runners.spark.translation.Dataset)|",
      "|java+method:///org/apache/spark/streaming/api/java/JavaDStream/transform(org.apache.spark.api.java.function.Function)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/windowCoder()|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/borrowDataset(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/runners/spark/translation/streaming/UnboundedDataset/getStreamSources()|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getRuntimeContext()|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/getValueCoder()|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/streaming/StreamingTransformTranslator$6$1/StreamingTransformTranslator$6$1(org.apache.beam.runners.spark.translation.streaming.StreamingTransformTranslator$6,org.apache.beam.sdk.coders.KvCoder,org.apache.beam.sdk.util.WindowedValue$WindowedValueCoder)|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue$FullWindowedValueCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/spark/stateful/SparkGroupAlsoByWindowViaWindowSet/groupAlsoByWindow(org.apache.spark.streaming.api.java.JavaDStream,org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.util.WindowingStrategy,org.apache.beam.runners.spark.translation.SparkRuntimeContext,java.util.List)|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/getKeyCoder()|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getInput(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getWindowFn()|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/putDataset(org.apache.beam.sdk.transforms.PTransform,org.apache.beam.runners.spark.translation.Dataset)|",
      "|java+method:///org/apache/spark/streaming/api/java/JavaDStream/transform(org.apache.spark.api.java.function.Function)|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/streaming/UnboundedDataset/UnboundedDataset(org.apache.spark.streaming.api.java.JavaDStream,java.util.List)|",
      "|java+method:///org/apache/beam/runners/spark/translation/streaming/UnboundedDataset/getDStream()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-spark:0.5.0",
    "coordinatesV2": "org.apache.beam:beam-runners-spark:0.6.0",
    "caller": "|java+method:///org/apache/beam/runners/spark/translation/TranslationUtils/getSideInputs(java.util.List,org.apache.spark.api.java.JavaSparkContext,org.apache.beam.runners.spark.translation.SparkPCollectionView)|",
    "called": "|java+method:///org/apache/beam/sdk/values/KV/of(java.lang.Object,java.lang.Object)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/beam/sdk/values/PCollectionView/getTagInternal()|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkPCollectionView/getPCollectionView(org.apache.beam.sdk.values.PCollectionView,org.apache.spark.api.java.JavaSparkContext)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/beam/sdk/values/PCollectionView/getWindowingStrategyInternal()|",
      "|java+method:///org/apache/beam/sdk/values/KV/of(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/beam/spark/relocated/com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///org/apache/beam/spark/relocated/com/google/common/collect/ImmutableMap/of()|",
      "|java+method:///java/util/List/iterator()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/beam/spark/repackaged/com/google/common/collect/ImmutableMap/of()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/beam/sdk/values/PCollectionView/getTagInternal()|",
      "|java+method:///org/apache/beam/runners/spark/translation/SparkPCollectionView/getPCollectionView(org.apache.beam.sdk.values.PCollectionView,org.apache.spark.api.java.JavaSparkContext)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/beam/sdk/values/PCollectionView/getWindowingStrategyInternal()|",
      "|java+method:///org/apache/beam/sdk/values/KV/of(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/beam/spark/repackaged/com/google/common/collect/Maps/newHashMap()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-spark:0.5.0",
    "coordinatesV2": "org.apache.beam:beam-runners-spark:0.6.0",
    "caller": "|java+method:///org/apache/beam/runners/spark/translation/streaming/StreamingTransformTranslator$7/evaluate(org.apache.beam.sdk.transforms.Combine$GroupedValues,org.apache.beam.runners.spark.translation.EvaluationContext)|",
    "called": "|java+method:///org/apache/beam/sdk/util/CombineFnUtil/toFnWithContext(org.apache.beam.sdk.transforms.CombineFnBase$PerKeyCombineFn)|",
    "v1Body": [
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/borrowDataset(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getRuntimeContext()|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/streaming/StreamingTransformTranslator$7$1/StreamingTransformTranslator$7$1(org.apache.beam.runners.spark.translation.streaming.StreamingTransformTranslator$7,org.apache.beam.sdk.transforms.CombineWithContext$KeyedCombineFnWithContext,org.apache.beam.runners.spark.translation.SparkRuntimeContext,org.apache.beam.sdk.transforms.Combine$GroupedValues,org.apache.beam.runners.spark.translation.SparkPCollectionView,org.apache.beam.sdk.util.WindowingStrategy)|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getPViews()|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getInput(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/runners/spark/translation/streaming/UnboundedDataset/getDStream()|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/streaming/UnboundedDataset/UnboundedDataset(org.apache.spark.streaming.api.java.JavaDStream)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|",
      "|java+method:///org/apache/beam/sdk/transforms/Combine$GroupedValues/getFn()|",
      "|java+method:///org/apache/beam/sdk/util/CombineFnUtil/toFnWithContext(org.apache.beam.sdk.transforms.CombineFnBase$PerKeyCombineFn)|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/putDataset(org.apache.beam.sdk.transforms.PTransform,org.apache.beam.runners.spark.translation.Dataset)|",
      "|java+method:///org/apache/spark/streaming/api/java/JavaDStream/transform(org.apache.spark.api.java.function.Function)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/borrowDataset(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/runners/spark/translation/streaming/UnboundedDataset/getStreamSources()|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getRuntimeContext()|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/streaming/StreamingTransformTranslator$7$1/StreamingTransformTranslator$7$1(org.apache.beam.runners.spark.translation.streaming.StreamingTransformTranslator$7,org.apache.beam.sdk.transforms.CombineWithContext$KeyedCombineFnWithContext,org.apache.beam.runners.spark.translation.SparkRuntimeContext,org.apache.beam.sdk.transforms.Combine$GroupedValues,org.apache.beam.runners.spark.translation.SparkPCollectionView,org.apache.beam.sdk.util.WindowingStrategy)|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getPViews()|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/getInput(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|",
      "|java+method:///org/apache/beam/sdk/transforms/Combine$GroupedValues/getFn()|",
      "|java+method:///org/apache/beam/sdk/util/CombineFnUtil/toFnWithContext(org.apache.beam.sdk.transforms.CombineFnBase$PerKeyCombineFn)|",
      "|java+method:///org/apache/beam/runners/spark/translation/EvaluationContext/putDataset(org.apache.beam.sdk.transforms.PTransform,org.apache.beam.runners.spark.translation.Dataset)|",
      "|java+method:///org/apache/spark/streaming/api/java/JavaDStream/transform(org.apache.spark.api.java.function.Function)|",
      "|java+constructor:///org/apache/beam/runners/spark/translation/streaming/UnboundedDataset/UnboundedDataset(org.apache.spark.streaming.api.java.JavaDStream,java.util.List)|",
      "|java+method:///org/apache/beam/runners/spark/translation/streaming/UnboundedDataset/getDStream()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:0.6.0",
    "change": "UPDATED"
  }
]