[
  {
    "coordinatesV1": "cn.vertxup:vertx-co:0.4.1",
    "coordinatesV2": "cn.vertxup:vertx-co:0.4.5",
    "caller": "|java+method:///io/vertx/zero/marshal/node/ZeroUniform/read()|",
    "called": "|java+method:///io/reactivex/Observable/subscribe(io.reactivex.functions.Consumer)|",
    "v1Body": [
      "|java+method:///java/util/concurrent/ConcurrentMap/keySet()|",
      "|java+method:///io/vertx/core/json/JsonObject/mergeIn(io.vertx.core.json.JsonObject,boolean)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/stream/Stream/collect(java.util.stream.Collector)|",
      "|java+constructor:///io/vertx/core/json/JsonObject/JsonObject()|",
      "|java+method:///java/util/stream/Collectors/toSet()|",
      "|java+method:///io/vertx/up/func/Fn/pool(java.util.concurrent.ConcurrentMap,java.lang.Object,java.util.function.Supplier)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///io/vertx/zero/marshal/node/Node/read()|",
      "|java+method:///java/util/Arrays/stream(java.lang.Object%5B%5D)|",
      "|java+method:///io/vertx/core/json/JsonObject/isEmpty()|",
      "|java+method:///io/vertx/zero/marshal/node/ZeroUniform/read()|",
      "|java+method:///java/util/concurrent/ConcurrentMap/get(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///java/util/concurrent/ConcurrentMap/keySet()|",
      "|java+method:///io/reactivex/Observable/fromIterable(java.lang.Iterable)|",
      "|java+method:///java/util/stream/Stream/collect(java.util.stream.Collector)|",
      "|java+constructor:///io/vertx/core/json/JsonObject/JsonObject()|",
      "|java+method:///java/util/stream/Collectors/toSet()|",
      "|java+method:///io/reactivex/Observable/subscribe(io.reactivex.functions.Consumer)|",
      "|java+method:///io/vertx/zero/marshal/node/Node/read()|",
      "|java+method:///io/reactivex/Observable/filter(io.reactivex.functions.Predicate)|",
      "|java+method:///io/vertx/zero/marshal/node/ZeroUniform/read()|",
      "|java+method:///java/util/Arrays/stream(java.lang.Object%5B%5D)|",
      "|java+method:///io/reactivex/Observable/map(io.reactivex.functions.Function)|"
    ],
    "affectedLib": "io.reactivex.rxjava2:rxjava:2.1.8",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "cn.vertxup:vertx-co:0.4.1",
    "coordinatesV2": "cn.vertxup:vertx-co:0.4.5",
    "caller": "|java+method:///io/vertx/zero/marshal/node/ZeroLime/build(java.lang.String)|",
    "called": "|java+method:///io/reactivex/Observable/subscribe(io.reactivex.functions.Consumer)|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/vertx/up/func/Fn/pool(java.util.concurrent.ConcurrentMap,java.lang.Object,java.util.function.Supplier)|",
      "|java+method:///io/vertx/up/tool/StringUtil/split(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///io/vertx/up/tool/StringUtil/isNil(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///io/reactivex/Observable/fromIterable(java.lang.Iterable)|",
      "|java+method:///io/vertx/up/tool/StringUtil/split(java.lang.String,java.lang.String)|",
      "|java+method:///io/reactivex/Observable/subscribe(io.reactivex.functions.Consumer)|",
      "|java+method:///io/reactivex/Observable/filter(io.reactivex.functions.Predicate)|"
    ],
    "affectedLib": "io.reactivex.rxjava2:rxjava:2.1.8",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "cn.vertxup:vertx-co:0.4.1",
    "coordinatesV2": "cn.vertxup:vertx-co:0.4.5",
    "caller": "|java+method:///io/vertx/up/tool/io/IO/lambda$getYamlNode$8(java.io.InputStream,java.lang.String)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readTree(java.io.InputStream)|",
    "v1Body": [
      "|java+constructor:///io/vertx/zero/exception/EmptyStreamException/EmptyStreamException(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readTree(java.io.InputStream)|"
    ],
    "v2Body": [
      "|java+constructor:///io/vertx/zero/exception/heart/EmptyStreamException/EmptyStreamException(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readTree(java.io.InputStream)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.9.3",
    "change": "ADDED"
  }
]