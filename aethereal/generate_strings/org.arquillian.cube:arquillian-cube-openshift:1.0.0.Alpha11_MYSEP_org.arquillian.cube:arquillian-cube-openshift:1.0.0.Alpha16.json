[
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.0.0.Alpha16",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.0.0.Alpha11",
    "caller": "|java+method:///org/arquillian/cube/openshift/impl/client/GitServer/push(java.io.File,java.lang.String)|",
    "called": "|java+method:///org/eclipse/jgit/api/Git/push()|",
    "v1Body": [
      "|java+method:///org/eclipse/jgit/api/CommitCommand/setMessage(java.lang.String)|",
      "|java+method:///org/eclipse/jgit/api/PushCommand/call()|",
      "|java+method:///org/eclipse/jgit/lib/StoredConfig/save()|",
      "|java+method:///org/eclipse/jgit/api/AddCommand/addFilepattern(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/GitServer/getServerURI()|",
      "|java+method:///org/eclipse/jgit/api/PushCommand/setRemote(java.lang.String)|",
      "|java+method:///org/eclipse/jgit/api/Git/commit()|",
      "|java+method:///org/eclipse/jgit/api/Git/push()|",
      "|java+method:///org/eclipse/jgit/api/CommitCommand/call()|",
      "|java+method:///org/eclipse/jgit/api/PushCommand/setPushAll()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/GitServer/init()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/eclipse/jgit/api/InitCommand/setDirectory(java.io.File)|",
      "|java+method:///org/apache/commons/io/FileUtils/copyDirectory(java.io.File,java.io.File)|",
      "|java+method:///org/eclipse/jgit/lib/Repository/getConfig()|",
      "|java+method:///org/eclipse/jgit/lib/Repository/close()|",
      "|java+constructor:///java/io/File/File(java.lang.String,java.lang.String)|",
      "|java+method:///org/eclipse/jgit/api/Git/init()|",
      "|java+method:///org/eclipse/jgit/api/PushCommand/setForce(boolean)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/eclipse/jgit/api/AddCommand/call()|",
      "|java+method:///org/eclipse/jgit/api/Git/getRepository()|",
      "|java+method:///org/eclipse/jgit/api/Git/add()|",
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+method:///org/eclipse/jgit/api/InitCommand/call()|",
      "|java+method:///org/eclipse/jgit/api/CommitCommand/setAuthor(java.lang.String,java.lang.String)|",
      "|java+method:///org/eclipse/jgit/lib/StoredConfig/setString(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/net/URI/toASCIIString()|"
    ],
    "v2Body": [
      "|java+method:///org/eclipse/jgit/api/CommitCommand/setMessage(java.lang.String)|",
      "|java+method:///org/eclipse/jgit/api/PushCommand/call()|",
      "|java+method:///org/eclipse/jgit/lib/StoredConfig/save()|",
      "|java+method:///org/eclipse/jgit/api/AddCommand/addFilepattern(java.lang.String)|",
      "|java+method:///org/eclipse/jgit/api/PushCommand/setRemote(java.lang.String)|",
      "|java+method:///org/eclipse/jgit/api/Git/commit()|",
      "|java+method:///org/eclipse/jgit/api/Git/push()|",
      "|java+method:///org/eclipse/jgit/api/CommitCommand/call()|",
      "|java+method:///org/eclipse/jgit/api/PushCommand/setPushAll()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/GitServer/init()|",
      "|java+method:///org/eclipse/jgit/api/InitCommand/setDirectory(java.io.File)|",
      "|java+method:///org/apache/commons/io/FileUtils/copyDirectory(java.io.File,java.io.File)|",
      "|java+method:///org/eclipse/jgit/lib/Repository/getConfig()|",
      "|java+method:///org/eclipse/jgit/lib/Repository/close()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/io/File/File(java.lang.String,java.lang.String)|",
      "|java+method:///org/eclipse/jgit/api/Git/init()|",
      "|java+method:///org/eclipse/jgit/api/PushCommand/setForce(boolean)|",
      "|java+method:///org/eclipse/jgit/api/AddCommand/call()|",
      "|java+method:///org/eclipse/jgit/api/Git/getRepository()|",
      "|java+method:///org/eclipse/jgit/api/Git/add()|",
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+method:///org/eclipse/jgit/api/InitCommand/call()|",
      "|java+method:///org/eclipse/jgit/api/CommitCommand/setAuthor(java.lang.String,java.lang.String)|",
      "|java+method:///org/eclipse/jgit/lib/StoredConfig/setString(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "org.eclipse.jgit:org.eclipse.jgit:4.0.0.201506090130-r",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.0.0.Alpha11",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.0.0.Alpha16",
    "caller": "|java+method:///org/arquillian/cube/openshift/impl/client/OpenShiftClientCreator/createClient(org.arquillian.cube.openshift.impl.client.CubeOpenShiftConfiguration)|",
    "called": "|java+method:///io/fabric8/openshift/client/OpenShiftConfig/wrap(io.fabric8.kubernetes.client.Config)|",
    "v1Body": [
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getOriginServer()|",
      "|java+method:///io/fabric8/openshift/client/OpenShiftConfig/wrap(io.fabric8.kubernetes.client.Config)|",
      "|java+method:///io/fabric8/kubernetes/client/ConfigBuilder/withMasterUrl(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/OpenShiftClientCreator/createClient(io.fabric8.openshift.client.OpenShiftConfig,java.lang.String,boolean)|",
      "|java+method:///io/fabric8/kubernetes/client/Config/setNoProxy(java.lang.String%5B%5D)|",
      "|java+method:///io/fabric8/kubernetes/client/ConfigBuilder/withTrustCerts(boolean)|",
      "|java+method:///io/fabric8/kubernetes/client/ConfigBuilder/build()|",
      "|java+method:///java/lang/System/setProperty(java.lang.String,java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getNamespace()|",
      "|java+method:///org/jboss/arquillian/core/api/InstanceProducer/set(java.lang.Object)|",
      "|java+method:///io/fabric8/kubernetes/client/Config/getNoProxy()|",
      "|java+constructor:///io/fabric8/kubernetes/client/ConfigBuilder/ConfigBuilder(io.fabric8.kubernetes.client.Config)|",
      "|java+constructor:///io/fabric8/kubernetes/client/Config/Config()|",
      "|java+method:///io/fabric8/kubernetes/client/ConfigBuilder/withNamespace(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/shouldKeepAliveGitServer()|"
    ],
    "v2Body": [
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getOriginServer()|",
      "|java+constructor:///org/arquillian/cube/openshift/impl/client/OpenShiftClientCreator$1/OpenShiftClientCreator$1(org.arquillian.cube.openshift.impl.client.OpenShiftClientCreator)|",
      "|java+constructor:///io/fabric8/kubernetes/client/ConfigBuilder/ConfigBuilder()|",
      "|java+method:///io/fabric8/openshift/client/OpenShiftConfig/wrap(io.fabric8.kubernetes.client.Config)|",
      "|java+method:///io/fabric8/kubernetes/client/ConfigBuilder/withMasterUrl(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/OpenShiftClientCreator/createClient(io.fabric8.openshift.client.OpenShiftConfig,java.lang.String,boolean)|",
      "|java+method:///io/fabric8/kubernetes/client/ConfigBuilder/accept(io.fabric8.kubernetes.api.builder.Visitor)|",
      "|java+method:///io/fabric8/kubernetes/client/ConfigBuilder/withTrustCerts(boolean)|",
      "|java+method:///java/lang/System/setProperty(java.lang.String,java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getNamespace()|",
      "|java+method:///org/jboss/arquillian/core/api/InstanceProducer/set(java.lang.Object)|",
      "|java+method:///java/lang/String/toString()|",
      "|java+method:///io/fabric8/kubernetes/client/ConfigBuilder/build()|",
      "|java+method:///io/fabric8/kubernetes/client/ConfigBuilder/withNamespace(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/shouldKeepAliveGitServer()|"
    ],
    "affectedLib": "io.fabric8:openshift-client:1.4.27",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.0.0.Alpha11",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.0.0.Alpha16",
    "caller": "|java+method:///io/undertow/protocols/spdy/SpdyChannelWithoutFlowControl/grabFlowControlBytes(int)|",
    "called": "|java+method:///io/undertow/protocols/spdy/SpdyChannel/updateReceiveFlowControlWindow(int)|",
    "v1Body": [
      "|java+constructor:///io/undertow/protocols/spdy/SpdyChannelWithoutFlowControl$1/SpdyChannelWithoutFlowControl$1(io.undertow.protocols.spdy.SpdyChannelWithoutFlowControl)|",
      "|java+method:///io/undertow/protocols/spdy/SpdyChannel/grabFlowControlBytes(int)|",
      "|java+method:///io/undertow/protocols/spdy/SpdyChannelWithoutFlowControl/getWorker()|",
      "|java+method:///org/xnio/XnioWorker/execute(java.lang.Runnable)|"
    ],
    "v2Body": [
      "|java+method:///io/undertow/protocols/spdy/SpdyChannelWithoutFlowControl/updateSettings(java.util.List)|",
      "|java+method:///io/undertow/protocols/spdy/SpdyChannel/grabFlowControlBytes(int)|",
      "|java+method:///io/undertow/protocols/spdy/SpdyChannel/updateReceiveFlowControlWindow(int)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+constructor:///io/undertow/protocols/spdy/SpdySetting/SpdySetting(int,int,int)|"
    ],
    "affectedLib": "io.undertow:undertow-core:1.3.24.Final",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.0.0.Alpha11",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.0.0.Alpha16",
    "caller": "|java+method:///org/arquillian/cube/openshift/impl/client/PortForwardOpenListener/handleEvent(org.xnio.StreamConnection)|",
    "called": "|java+constructor:///io/undertow/conduits/ReadTimeoutStreamSourceConduit/ReadTimeoutStreamSourceConduit(org.xnio.conduits.StreamSourceConduit,org.xnio.StreamConnection,io.undertow.server.OpenListener)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/PortForwardServerConnection/getWorker()|",
      "|java+constructor:///org/arquillian/cube/openshift/impl/client/PortForwardServerConnection/PortForwardServerConnection(org.xnio.StreamConnection,org.xnio.Pool,org.xnio.OptionMap,int)|",
      "|java+method:///org/xnio/StreamConnection/getOption(org.xnio.Option)|",
      "|java+method:///org/xnio/XnioWorker/execute(java.lang.Runnable)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///io/undertow/conduits/WriteTimeoutStreamSinkConduit/WriteTimeoutStreamSinkConduit(org.xnio.conduits.StreamSinkConduit,org.xnio.StreamConnection,io.undertow.server.OpenListener)|",
      "|java+method:///java/lang/Math/min(int,int)|",
      "|java+method:///org/xnio/StreamConnection/getSinkChannel()|",
      "|java+method:///org/xnio/OptionMap/get(org.xnio.Option)|",
      "|java+method:///org/xnio/conduits/ConduitStreamSourceChannel/setConduit(org.xnio.conduits.StreamSourceConduit)|",
      "|java+method:///org/xnio/conduits/ConduitStreamSinkChannel/setConduit(org.xnio.conduits.StreamSinkConduit)|",
      "|java+method:///io/undertow/UndertowLogger/ioException(java.io.IOException)|",
      "|java+constructor:///org/arquillian/cube/openshift/impl/client/PortForwardOpenListener$1/PortForwardOpenListener$1(org.arquillian.cube.openshift.impl.client.PortForwardOpenListener,org.arquillian.cube.openshift.impl.client.PortForwardServerConnection)|",
      "|java+method:///org/xnio/conduits/ConduitStreamSinkChannel/getConduit()|",
      "|java+constructor:///io/undertow/conduits/ReadTimeoutStreamSourceConduit/ReadTimeoutStreamSourceConduit(org.xnio.conduits.StreamSourceConduit,org.xnio.StreamConnection,io.undertow.server.OpenListener)|",
      "|java+method:///org/xnio/StreamConnection/getSourceChannel()|",
      "|java+method:///org/xnio/conduits/ConduitStreamSourceChannel/getConduit()|",
      "|java+method:///org/xnio/IoUtils/safeClose(java.io.Closeable)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/PortForwardServerConnection/getWorker()|",
      "|java+method:///org/xnio/StreamConnection/getOption(org.xnio.Option)|",
      "|java+method:///org/xnio/XnioWorker/execute(java.lang.Runnable)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/Math/min(int,int)|",
      "|java+method:///org/xnio/StreamConnection/getSinkChannel()|",
      "|java+method:///org/xnio/OptionMap/get(org.xnio.Option)|",
      "|java+method:///org/xnio/conduits/ConduitStreamSourceChannel/setConduit(org.xnio.conduits.StreamSourceConduit)|",
      "|java+method:///org/xnio/conduits/ConduitStreamSinkChannel/setConduit(org.xnio.conduits.StreamSinkConduit)|",
      "|java+method:///io/undertow/UndertowLogger/ioException(java.io.IOException)|",
      "|java+constructor:///org/arquillian/cube/openshift/impl/client/PortForwardOpenListener$1/PortForwardOpenListener$1(org.arquillian.cube.openshift.impl.client.PortForwardOpenListener,org.arquillian.cube.openshift.impl.client.PortForwardServerConnection)|",
      "|java+method:///org/xnio/conduits/ConduitStreamSinkChannel/getConduit()|",
      "|java+constructor:///io/undertow/conduits/ReadTimeoutStreamSourceConduit/ReadTimeoutStreamSourceConduit(org.xnio.conduits.StreamSourceConduit,org.xnio.StreamConnection,io.undertow.server.OpenListener)|",
      "|java+method:///org/xnio/StreamConnection/getSourceChannel()|",
      "|java+method:///org/xnio/conduits/ConduitStreamSourceChannel/getConduit()|",
      "|java+method:///org/xnio/IoUtils/safeClose(java.io.Closeable)|",
      "|java+constructor:///org/arquillian/cube/openshift/impl/client/PortForwardServerConnection/PortForwardServerConnection(org.xnio.StreamConnection,io.undertow.connector.ByteBufferPool,org.xnio.OptionMap,int)|",
      "|java+constructor:///io/undertow/conduits/WriteTimeoutStreamSinkConduit/WriteTimeoutStreamSinkConduit(org.xnio.conduits.StreamSinkConduit,org.xnio.StreamConnection,io.undertow.server.OpenListener)|"
    ],
    "affectedLib": "io.undertow:undertow-core:1.3.24.Final",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.0.0.Alpha11",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.0.0.Alpha16",
    "caller": "|java+method:///org/arquillian/cube/openshift/impl/client/PortForwardServerConnection$PingSpdyStream$1/run()|",
    "called": "|java+method:///io/undertow/protocols/spdy/SpdyChannel/sendPing(int)|",
    "v1Body": [
      "|java+method:///io/undertow/protocols/spdy/SpdyStreamStreamSinkChannel/getChannel()|",
      "|java+method:///io/undertow/protocols/spdy/SpdyStreamStreamSinkChannel/isOpen()|",
      "|java+method:///io/undertow/protocols/spdy/SpdyStreamStreamSinkChannel/getStreamId()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/PortForwardServerConnection$PingSpdyStream/access$600(org.arquillian.cube.openshift.impl.client.PortForwardServerConnection$PingSpdyStream)|",
      "|java+method:///io/undertow/protocols/spdy/SpdyChannel/sendPing(int)|"
    ],
    "v2Body": [
      "|java+method:///io/undertow/protocols/spdy/SpdyStreamStreamSinkChannel/getChannel()|",
      "|java+method:///io/undertow/protocols/spdy/SpdyStreamStreamSinkChannel/isOpen()|",
      "|java+method:///io/undertow/protocols/spdy/SpdyStreamStreamSinkChannel/getStreamId()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/PortForwardServerConnection$PingSpdyStream/access$500(org.arquillian.cube.openshift.impl.client.PortForwardServerConnection$PingSpdyStream)|",
      "|java+method:///io/undertow/protocols/spdy/SpdyChannel/sendPing(int)|"
    ],
    "affectedLib": "io.undertow:undertow-core:1.3.24.Final",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.0.0.Alpha11",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.0.0.Alpha16",
    "caller": "|java+method:///org/arquillian/cube/openshift/impl/client/PortForwarder/upgradeConnection(io.undertow.client.ClientExchange)|",
    "called": "|java+constructor:///io/undertow/server/XnioByteBufferPool/XnioByteBufferPool(org.xnio.Pool)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/xnio/OptionMap/get(org.xnio.Option)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/PortForwarder$3/setup(org.xnio.channels.StreamSourceChannel)|",
      "|java+method:///io/undertow/client/ClientExchange/getResponse()|",
      "|java+method:///io/undertow/client/ClientConnection/performUpgrade()|",
      "|java+constructor:///org/arquillian/cube/openshift/impl/client/PortForwarder$3/PortForwarder$3(org.arquillian.cube.openshift.impl.client.PortForwarder,org.xnio.Pool)|",
      "|java+method:///io/undertow/client/ClientResponse/getResponseCode()|",
      "|java+method:///io/undertow/client/ClientExchange/getResponseChannel()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+constructor:///io/undertow/client/spdy/SpdyClientConnection/SpdyClientConnection(io.undertow.protocols.spdy.SpdyChannel)|",
      "|java+constructor:///org/xnio/ByteBufferSlicePool/ByteBufferSlicePool(org.xnio.BufferAllocator,int,int)|",
      "|java+method:///io/undertow/protocols/spdy/SpdyChannel/setIdleTimeout(long)|",
      "|java+constructor:///io/undertow/protocols/spdy/SpdyChannelWithoutFlowControl/SpdyChannelWithoutFlowControl(org.xnio.StreamConnection,org.xnio.Pool,org.xnio.Pooled,org.xnio.Pool,boolean)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/xnio/OptionMap/get(org.xnio.Option)|",
      "|java+constructor:///org/arquillian/cube/openshift/impl/client/PortForwarder$3/PortForwarder$3(org.arquillian.cube.openshift.impl.client.PortForwarder,io.undertow.connector.ByteBufferPool)|",
      "|java+constructor:///org/xnio/ByteBufferSlicePool/ByteBufferSlicePool(org.xnio.BufferAllocator,int,int)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/PortForwarder$3/setup(org.xnio.channels.StreamSourceChannel)|",
      "|java+method:///io/undertow/protocols/spdy/SpdyChannel/setIdleTimeout(long)|",
      "|java+method:///io/undertow/client/ClientExchange/getResponse()|",
      "|java+constructor:///io/undertow/protocols/spdy/SpdyChannelWithoutFlowControl/SpdyChannelWithoutFlowControl(org.xnio.StreamConnection,io.undertow.connector.ByteBufferPool,io.undertow.connector.PooledByteBuffer,io.undertow.connector.ByteBufferPool,boolean,org.xnio.OptionMap)|",
      "|java+method:///io/undertow/client/ClientConnection/performUpgrade()|",
      "|java+method:///io/undertow/client/ClientResponse/getResponseCode()|",
      "|java+method:///io/undertow/client/ClientExchange/getResponseChannel()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+constructor:///io/undertow/server/XnioByteBufferPool/XnioByteBufferPool(org.xnio.Pool)|",
      "|java+constructor:///io/undertow/client/spdy/SpdyClientConnection/SpdyClientConnection(io.undertow.protocols.spdy.SpdyChannel,io.undertow.client.ClientStatistics)|"
    ],
    "affectedLib": "io.undertow:undertow-core:1.3.24.Final",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.0.0.Alpha11",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.0.0.Alpha16",
    "caller": "|java+constructor:///org/arquillian/cube/openshift/impl/client/PortForwardOpenListener/PortForwardOpenListener(io.undertow.client.ClientConnection,java.lang.String,int,java.util.concurrent.atomic.AtomicInteger,org.xnio.Pool,org.xnio.OptionMap)|",
    "called": "|java+constructor:///io/undertow/server/XnioByteBufferPool/XnioByteBufferPool(org.xnio.Pool)|",
    "v1Body": [
      "|java+method:///org/xnio/Pool/allocate()|",
      "|java+method:///org/xnio/Pooled/free()|",
      "|java+method:///java/nio/ByteBuffer/remaining()|",
      "|java+method:///org/xnio/Pooled/getResource()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///org/xnio/Pool/allocate()|",
      "|java+constructor:///io/undertow/server/XnioByteBufferPool/XnioByteBufferPool(org.xnio.Pool)|",
      "|java+method:///org/xnio/Pooled/free()|",
      "|java+method:///java/nio/ByteBuffer/remaining()|",
      "|java+method:///org/xnio/Pooled/getResource()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "io.undertow:undertow-core:1.3.24.Final",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.0.0.Alpha11",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.0.0.Alpha16",
    "caller": "|java+constructor:///org/arquillian/cube/openshift/impl/client/PortForwarder/PortForwarder(io.fabric8.kubernetes.client.Config,java.lang.String)|",
    "called": "|java+constructor:///io/undertow/server/XnioByteBufferPool/XnioByteBufferPool(org.xnio.Pool)|",
    "v1Body": [
      "|java+method:///org/xnio/OptionMap$Builder/set(org.xnio.Option,java.lang.Object)|",
      "|java+method:///org/xnio/OptionMap$Builder/set(org.xnio.Option,int)|",
      "|java+method:///io/fabric8/kubernetes/client/Config/getOauthToken()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/undertow/client/UndertowClient/getInstance()|",
      "|java+method:///org/xnio/OptionMap$Builder/set(org.xnio.Option,boolean)|",
      "|java+method:///org/xnio/IoFuture/getInterruptibly()|",
      "|java+method:///io/fabric8/kubernetes/client/Config/getNamespace()|",
      "|java+method:///java/util/concurrent/CountDownLatch/await()|",
      "|java+method:///io/undertow/client/ClientRequest/setPath(java.lang.String)|",
      "|java+method:///io/undertow/util/HeaderMap/put(io.undertow.util.HttpString,java.lang.String)|",
      "|java+constructor:///org/arquillian/cube/openshift/impl/client/PortForwarder$2/PortForwarder$2(org.arquillian.cube.openshift.impl.client.PortForwarder,java.io.IOException%5B%5D,java.util.concurrent.CountDownLatch)|",
      "|java+constructor:///io/undertow/client/ClientRequest/ClientRequest()|",
      "|java+constructor:///org/arquillian/cube/openshift/impl/client/PortForwarder$1/PortForwarder$1(org.arquillian.cube.openshift.impl.client.PortForwarder)|",
      "|java+method:///io/undertow/client/ClientRequest/getRequestHeaders()|",
      "|java+method:///org/xnio/OptionMap$Builder/getMap()|",
      "|java+method:///org/xnio/Xnio/getInstance()|",
      "|java+method:///org/xnio/XnioWorker/shutdown()|",
      "|java+method:///io/undertow/client/UndertowClient/connect(java.net.URI,org.xnio.XnioWorker,org.xnio.ssl.XnioSsl,org.xnio.Pool,org.xnio.OptionMap)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/xnio/OptionMap/builder()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/util/concurrent/CountDownLatch/CountDownLatch(int)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///org/xnio/ByteBufferSlicePool/ByteBufferSlicePool(org.xnio.BufferAllocator,int,int)|",
      "|java+method:///java/net/URI/getPath()|",
      "|java+method:///io/undertow/client/ClientRequest/setMethod(io.undertow.util.HttpString)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/xnio/Xnio/getSslProvider(javax.net.ssl.KeyManager%5B%5D,javax.net.ssl.TrustManager%5B%5D,org.xnio.OptionMap)|",
      "|java+method:///org/xnio/Xnio/createWorker(java.lang.ThreadGroup,org.xnio.OptionMap)|",
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+method:///org/xnio/IoUtils/safeClose(java.io.Closeable)|",
      "|java+method:///io/undertow/client/ClientConnection/sendRequest(io.undertow.client.ClientRequest,io.undertow.client.ClientCallback)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///io/fabric8/kubernetes/client/Config/getMasterUrl()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/fabric8/kubernetes/client/internal/SSLUtils/keyManagers(io.fabric8.kubernetes.client.Config)|"
    ],
    "v2Body": [
      "|java+method:///org/xnio/OptionMap$Builder/set(org.xnio.Option,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/xnio/OptionMap$Builder/set(org.xnio.Option,int)|",
      "|java+method:///io/fabric8/kubernetes/client/Config/getOauthToken()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/undertow/client/UndertowClient/getInstance()|",
      "|java+method:///org/xnio/IoFuture/getInterruptibly()|",
      "|java+method:///io/fabric8/kubernetes/client/Config/getNamespace()|",
      "|java+method:///java/util/concurrent/CountDownLatch/await()|",
      "|java+method:///io/undertow/client/ClientRequest/setPath(java.lang.String)|",
      "|java+method:///io/undertow/util/HeaderMap/put(io.undertow.util.HttpString,java.lang.String)|",
      "|java+constructor:///io/undertow/client/ClientRequest/ClientRequest()|",
      "|java+method:///io/undertow/client/ClientRequest/getRequestHeaders()|",
      "|java+method:///org/xnio/OptionMap$Builder/getMap()|",
      "|java+method:///org/xnio/Xnio/getInstance()|",
      "|java+method:///org/xnio/XnioWorker/shutdown()|",
      "|java+method:///org/xnio/OptionMap/builder()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///io/undertow/server/XnioByteBufferPool/XnioByteBufferPool(org.xnio.Pool)|",
      "|java+method:///org/xnio/OptionMap$Builder/set(org.xnio.Option,boolean)|",
      "|java+constructor:///java/util/concurrent/CountDownLatch/CountDownLatch(int)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///org/xnio/ByteBufferSlicePool/ByteBufferSlicePool(org.xnio.BufferAllocator,int,int)|",
      "|java+method:///java/net/URI/getPath()|",
      "|java+method:///io/undertow/client/ClientRequest/setMethod(io.undertow.util.HttpString)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/xnio/Xnio/getSslProvider(javax.net.ssl.KeyManager%5B%5D,javax.net.ssl.TrustManager%5B%5D,org.xnio.OptionMap)|",
      "|java+method:///org/xnio/Xnio/createWorker(java.lang.ThreadGroup,org.xnio.OptionMap)|",
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+constructor:///org/arquillian/cube/openshift/impl/client/PortForwarder$2/PortForwarder$2(org.arquillian.cube.openshift.impl.client.PortForwarder,java.io.IOException%5B%5D,java.util.concurrent.CountDownLatch)|",
      "|java+method:///java/net/URI/getHost()|",
      "|java+method:///org/xnio/IoUtils/safeClose(java.io.Closeable)|",
      "|java+method:///io/undertow/client/ClientConnection/sendRequest(io.undertow.client.ClientRequest,io.undertow.client.ClientCallback)|",
      "|java+constructor:///org/arquillian/cube/openshift/impl/client/PortForwarder$1/PortForwarder$1(org.arquillian.cube.openshift.impl.client.PortForwarder)|",
      "|java+method:///io/undertow/client/UndertowClient/connect(java.net.URI,org.xnio.XnioWorker,org.xnio.ssl.XnioSsl,io.undertow.connector.ByteBufferPool,org.xnio.OptionMap)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///io/fabric8/kubernetes/client/Config/getMasterUrl()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/fabric8/kubernetes/client/internal/SSLUtils/keyManagers(io.fabric8.kubernetes.client.Config)|"
    ],
    "affectedLib": "io.undertow:undertow-core:1.3.24.Final",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.0.0.Alpha11",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.0.0.Alpha16",
    "caller": "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/fromMap(java.util.Map)|",
    "called": "|java+method:///org/arquillian/cube/impl/util/ConfigUtil/getStringProperty(java.lang.String,java.util.Map,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getRequired(java.util.Map,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/CubeOpenShiftConfiguration()|",
      "|java+method:///java/io/File/exists()|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+constructor:///java/util/HashSet/HashSet(java.util.Collection)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+constructor:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/CubeOpenShiftConfigurationBuilder()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withNamespace(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withDefinitionsFile(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withProxiedContainerPorts(java.lang.String%5B%5D)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getDefinitionsFile()|",
      "|java+method:///org/arquillian/cube/impl/util/ConfigUtil/getBooleanProperty(java.lang.String,java.util.Map,java.lang.Boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withKeepAliveGitServer(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withDefinitions(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withAutoStartContainers(java.lang.String%5B%5D)|",
      "|java+method:///org/arquillian/cube/impl/util/ConfigUtil/getStringProperty(java.lang.String,java.util.Map,java.lang.String)|",
      "|java+method:///io/fabric8/kubernetes/client/Config/getNamespace()|",
      "|java+method:///org/arquillian/cube/impl/util/ConfigUtil/getStringProperty(java.lang.String,java.lang.String,java.util.Map,java.lang.String)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withOriginServer(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withPortForwardBindAddress(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/split(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getDefinitions()|",
      "|java+method:///io/fabric8/kubernetes/client/Config/getMasterUrl()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/build()|"
    ],
    "affectedLib": "org.arquillian.cube:arquillian-cube-core:1.0.0.Alpha16",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.0.0.Alpha11",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.0.0.Alpha16",
    "caller": "|java+method:///org/arquillian/cube/openshift/impl/client/metadata/CopyFromContainer/copyDirectory(java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/arquillian/cube/impl/util/IOUtil/untar(java.io.InputStream,java.io.File)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///io/fabric8/kubernetes/client/KubernetesClient/pods()|",
      "|java+method:///java/nio/file/Path/toString()|",
      "|java+method:///java/nio/file/Path/normalize()|",
      "|java+method:///io/fabric8/kubernetes/client/dsl/ExecWatch/getOutput()|",
      "|java+method:///io/fabric8/kubernetes/client/dsl/ClientPodResource/exec(java.lang.Object%5B%5D)|",
      "|java+method:///java/nio/file/FileSystems/getDefault()|",
      "|java+method:///java/nio/file/Path/getFileName()|",
      "|java+method:///java/nio/file/Path/getParent()|",
      "|java+method:///java/nio/file/FileSystem/getPath(java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///io/fabric8/kubernetes/client/KubernetesClient/getNamespace()|",
      "|java+method:///io/fabric8/kubernetes/client/dsl/ClientMixedOperation/withName(java.lang.String)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/OpenShiftClient/getClient()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///io/fabric8/kubernetes/client/KubernetesClient/inNamespace(java.lang.String)|",
      "|java+method:///io/fabric8/kubernetes/client/dsl/ExecWatch/close()|",
      "|java+method:///java/nio/file/Paths/get(java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///java/nio/file/Path/toFile()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/io/File/isFile()|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|",
      "|java+method:///java/nio/file/Files/createDirectories(java.nio.file.Path,java.nio.file.attribute.FileAttribute%5B%5D)|",
      "|java+method:///org/arquillian/cube/impl/util/IOUtil/untar(java.io.InputStream,java.io.File)|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///java/nio/file/Path/toString()|",
      "|java+method:///java/nio/file/Path/normalize()|",
      "|java+method:///io/fabric8/kubernetes/client/dsl/ExecWatch/getOutput()|",
      "|java+method:///io/fabric8/kubernetes/client/dsl/ClientPodResource/exec(java.lang.Object%5B%5D)|",
      "|java+method:///io/fabric8/kubernetes/client/NamespacedKubernetesClient/getNamespace()|",
      "|java+method:///java/nio/file/FileSystems/getDefault()|",
      "|java+method:///java/nio/file/Path/getParent()|",
      "|java+method:///java/nio/file/FileSystem/getPath(java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///io/fabric8/kubernetes/client/NamespacedKubernetesClient/pods()|",
      "|java+method:///io/fabric8/kubernetes/client/dsl/ClientMixedOperation/withName(java.lang.String)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/OpenShiftClient/getClient()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///io/fabric8/kubernetes/client/dsl/ExecWatch/close()|",
      "|java+method:///java/nio/file/Paths/get(java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///java/nio/file/Path/toFile()|",
      "|java+method:///io/fabric8/kubernetes/client/NamespacedKubernetesClient/inNamespace(java.lang.String)|",
      "|java+method:///java/nio/file/Path/getFileName()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/io/File/isFile()|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|",
      "|java+method:///java/nio/file/Files/createDirectories(java.nio.file.Path,java.nio.file.attribute.FileAttribute%5B%5D)|",
      "|java+method:///org/arquillian/cube/impl/util/IOUtil/untar(java.io.InputStream,java.io.File)|"
    ],
    "affectedLib": "org.arquillian.cube:arquillian-cube-core:1.0.0.Alpha16",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.0.0.Alpha11",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.0.0.Alpha16",
    "caller": "|java+constructor:///org/arquillian/cube/openshift/impl/model/BuildablePodCube$PortBindings/BuildablePodCube$PortBindings(org.arquillian.cube.openshift.impl.model.BuildablePodCube)|",
    "called": "|java+constructor:///org/arquillian/cube/spi/metadata/HasPortBindings$PortAddressImpl/HasPortBindings$PortAddressImpl(java.lang.String,int)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/fabric8/kubernetes/api/model/Container/getPorts()|",
      "|java+method:///io/fabric8/kubernetes/api/model/Pod/getSpec()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube/access$200(org.arquillian.cube.openshift.impl.model.BuildablePodCube)|",
      "|java+method:///io/fabric8/kubernetes/api/model/ContainerPort/getHostPort()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///java/util/Set/addAll(java.util.Collection)|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube/access$400(org.arquillian.cube.openshift.impl.model.BuildablePodCube)|",
      "|java+constructor:///java/util/LinkedHashSet/LinkedHashSet()|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube/access$300(org.arquillian.cube.openshift.impl.model.BuildablePodCube)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getProxiedContainerPorts()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///io/fabric8/kubernetes/api/model/ContainerPort/getContainerPort()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///org/arquillian/cube/spi/metadata/HasPortBindings$PortAddressImpl/HasPortBindings$PortAddressImpl(java.lang.String,int)|",
      "|java+method:///io/fabric8/kubernetes/api/model/ContainerPort/getHostIP()|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube$PortBindings/allocateLocalPort()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///io/fabric8/kubernetes/api/model/PodSpec/getContainers()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+constructor:///java/util/LinkedHashMap/LinkedHashMap()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///java/net/InetAddress/getHostAddress()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///io/fabric8/kubernetes/api/model/Container/getPorts()|",
      "|java+method:///io/fabric8/kubernetes/api/model/Pod/getSpec()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube/access$200(org.arquillian.cube.openshift.impl.model.BuildablePodCube)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube$PortBindings/allocateLocalPort(int)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Set/addAll(java.util.Collection)|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube/access$400(org.arquillian.cube.openshift.impl.model.BuildablePodCube)|",
      "|java+constructor:///java/util/LinkedHashSet/LinkedHashSet()|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube/access$300(org.arquillian.cube.openshift.impl.model.BuildablePodCube)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getProxiedContainerPorts()|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube$PortBindings/getPortForwardBindAddress()|",
      "|java+method:///io/fabric8/kubernetes/api/model/ContainerPort/getHostPort()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///io/fabric8/kubernetes/api/model/ContainerPort/getContainerPort()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///org/arquillian/cube/spi/metadata/HasPortBindings$PortAddressImpl/HasPortBindings$PortAddressImpl(java.lang.String,int)|",
      "|java+method:///io/fabric8/kubernetes/api/model/ContainerPort/getHostIP()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///io/fabric8/kubernetes/api/model/PodSpec/getContainers()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+constructor:///java/util/LinkedHashMap/LinkedHashMap()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "org.arquillian.cube:arquillian-cube-spi:1.0.0.Alpha16",
    "change": "UPDATED"
  }
]