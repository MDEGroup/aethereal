[
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "caller": "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/prepareHadoopJob(java.util.List)|",
    "called": "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputFormatClass(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapOutputKeyClass(java.lang.Class)|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///gobblin/util/SerializationUtils/serializeState(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,gobblin.configuration.State)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/getConfiguration()|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/SequenceFileOutputFormat/setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapperClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setInputFormatClass(java.lang.Class)|",
      "|java+method:///gobblin/metrics/event/TimingEvent/stop()|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///gobblin/runtime/JobContext/getJobState()|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///gobblin/metrics/event/EventSubmitter/getTimingEvent(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setNumReduceTasks(int)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setSpeculativeExecution(boolean)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setJarByClass(java.lang.Class)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/prepareJobInput(java.util.List)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/input/NLineInputFormat/setNumLinesPerSplit(org.apache.hadoop.mapreduce.Job,int)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputFormatClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/input/NLineInputFormat/addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapOutputKeyClass(java.lang.Class)|",
      "|java+method:///gobblin/metrics/event/TimingEvent/stop()|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputFormatClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/input/FileInputFormat/addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapperClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setInputFormatClass(java.lang.Class)|",
      "|java+method:///gobblin/runtime/JobContext/getJobState()|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///gobblin/metrics/event/EventSubmitter/getTimingEvent(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setNumReduceTasks(int)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setSpeculativeExecution(boolean)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setJarByClass(java.lang.Class)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/prepareJobInput(java.util.List)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/input/NLineInputFormat/setNumLinesPerSplit(org.apache.hadoop.mapreduce.Job,int)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/FileOutputFormat/setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/serializeJobState(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration,gobblin.runtime.JobState,org.apache.hadoop.mapreduce.Job)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:1.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "caller": "|java+method:///gobblin/runtime/FsDatasetStateStore/getAll(java.lang.String,java.lang.String)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///com/google/common/io/Closer/register(java.io.Closeable)|",
      "|java+method:///com/google/common/io/Closer/rethrow(java.lang.Throwable)|",
      "|java+constructor:///gobblin/runtime/JobState/JobState()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/getValueClass()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/next(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Reader/SequenceFile$Reader(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///gobblin/runtime/JobState/newDatasetState(boolean)|",
      "|java+constructor:///gobblin/runtime/JobState$DatasetState/JobState$DatasetState()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///com/google/common/io/Closer/close()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.Throwable)|",
      "|java+method:///com/google/common/io/Closer/create()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///gobblin/runtime/JobState/JobState()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/close()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/getValueClass()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.Throwable)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/next(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Reader/SequenceFile$Reader(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///gobblin/runtime/JobState/newDatasetState(boolean)|",
      "|java+constructor:///gobblin/runtime/JobState$DatasetState/JobState$DatasetState()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:1.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "caller": "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher$TaskRunner/run(org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+method:///org/apache/hadoop/mapreduce/TaskAttemptID/toString()|",
    "v1Body": [
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher$TaskRunner/map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/nextKeyValue()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getCurrentValue()|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher$TaskRunner/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher$TaskRunner/cleanup(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskAttemptID/toString()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getCurrentKey()|",
      "|java+method:///gobblin/runtime/AbstractJobLauncher/runWorkUnits(java.lang.String,java.lang.String,java.util.List,gobblin.runtime.TaskStateTracker,gobblin.runtime.TaskExecutor,gobblin.metastore.StateStore,org.slf4j.Logger)|",
      "|java+method:///gobblin/runtime/JobState/getJobId()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getTaskAttemptID()|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/access$000()|"
    ],
    "v2Body": [
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher$TaskRunner/map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getCurrentValue()|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher$TaskRunner/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher$TaskRunner/cleanup(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskAttemptID/toString()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getCurrentKey()|",
      "|java+method:///gobblin/runtime/JobState/getJobId()|",
      "|java+method:///gobblin/runtime/AbstractJobLauncher/runWorkUnits(java.lang.String,java.lang.String,gobblin.runtime.JobState,java.util.List,gobblin.runtime.TaskStateTracker,gobblin.runtime.TaskExecutor,gobblin.metastore.StateStore,org.slf4j.Logger)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/nextKeyValue()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getTaskAttemptID()|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/access$000()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:1.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "caller": "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/addDependencies()|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
    "v1Body": [
      "|java+method:///gobblin/metrics/event/TimingEvent/stop()|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/addHDFSFiles(java.lang.String)|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/addJars(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///gobblin/metrics/event/EventSubmitter/getTimingEvent(java.lang.String)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/addLocalFiles(org.apache.hadoop.fs.Path,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///gobblin/metrics/event/TimingEvent/stop()|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/addHDFSFiles(java.lang.String)|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/addJars(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/addHdfsJars(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///gobblin/metrics/event/EventSubmitter/getTimingEvent(java.lang.String)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/addLocalFiles(org.apache.hadoop.fs.Path,java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:1.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "caller": "|java+constructor:///gobblin/runtime/mapreduce/MRJobLauncher/MRJobLauncher(java.util.Properties,org.apache.hadoop.conf.Configuration)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///gobblin/runtime/AbstractJobLauncher/AbstractJobLauncher(java.util.Properties,java.util.Map)|",
      "|java+method:///java/lang/Integer/toString(int)|",
      "|java+constructor:///gobblin/runtime/TaskStateCollectorService/TaskStateCollectorService(java.util.Properties,gobblin.runtime.JobState,com.google.common.eventbus.EventBus,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/startCancellationExecutor()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/buildFileSystem(java.util.Properties,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/delete(org.apache.hadoop.fs.Path,boolean)|",
      "|java+method:///gobblin/runtime/JobContext/getJobId()|",
      "|java+method:///gobblin/util/JobConfigurationUtils/putPropertiesIntoConfiguration(java.util.Properties,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/getInstance(org.apache.hadoop.conf.Configuration,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///gobblin/runtime/JobContext/getJobState()|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/addDependencies()|",
      "|java+method:///com/google/common/collect/ImmutableMap/of()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/runtime/JobContext/getJobName()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/setBoolean(java.lang.String,boolean)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/mkdirs(org.apache.hadoop.fs.Path)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/ImmutableList/of()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/Integer/toString(int)|",
      "|java+constructor:///gobblin/runtime/AbstractJobLauncher/AbstractJobLauncher(java.util.Properties,java.util.List)|",
      "|java+constructor:///gobblin/runtime/TaskStateCollectorService/TaskStateCollectorService(java.util.Properties,gobblin.runtime.JobState,com.google.common.eventbus.EventBus,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/startCancellationExecutor()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/buildFileSystem(java.util.Properties,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/delete(org.apache.hadoop.fs.Path,boolean)|",
      "|java+method:///gobblin/runtime/JobContext/getJobId()|",
      "|java+method:///gobblin/util/JobConfigurationUtils/putPropertiesIntoConfiguration(java.util.Properties,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/getInstance(org.apache.hadoop.conf.Configuration,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///gobblin/runtime/JobContext/getJobState()|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/addDependencies()|",
      "|java+method:///gobblin/runtime/JobContext/getJobName()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/setBoolean(java.lang.String,boolean)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/mkdirs(org.apache.hadoop.fs.Path)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:1.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "caller": "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher$TaskRunner/map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
    "v1Body": [
      "|java+method:///gobblin/source/workunit/MultiWorkUnit/createEmpty()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///gobblin/source/workunit/WorkUnit/addAllIfNotExist(gobblin.configuration.State)|",
      "|java+method:///gobblin/util/JobLauncherUtils/flattenWorkUnits(java.util.List)|",
      "|java+method:///gobblin/util/SerializationUtils/deserializeState(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,gobblin.configuration.State)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|",
      "|java+method:///gobblin/source/workunit/MultiWorkUnit/getWorkUnits()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///gobblin/source/workunit/WorkUnit/createEmpty()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///gobblin/source/workunit/MultiWorkUnit/createEmpty()|",
      "|java+method:///gobblin/util/JobLauncherUtils/flattenWorkUnits(java.util.List)|",
      "|java+method:///gobblin/util/SerializationUtils/deserializeState(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,gobblin.configuration.State)|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|",
      "|java+method:///gobblin/source/workunit/MultiWorkUnit/getWorkUnits()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///gobblin/source/workunit/WorkUnit/createEmpty()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:1.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "caller": "|java+method:///gobblin/runtime/FsDatasetStateStore/getLatestDatasetStatesByUrns(java.lang.String)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+method:///gobblin/runtime/JobState$DatasetState/getProp(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+constructor:///gobblin/runtime/FsDatasetStateStore$1/FsDatasetStateStore$1(gobblin.runtime.FsDatasetStateStore)|",
      "|java+method:///java/util/Map/size()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/Map/remove(java.lang.Object)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///org/apache/hadoop/fs/Path/getName()|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///gobblin/runtime/FsDatasetStateStore/getAll(java.lang.String,java.lang.String)|",
      "|java+method:///com/google/common/collect/ImmutableMap/of()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+method:///gobblin/runtime/JobState$DatasetState/getDatasetUrn()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+constructor:///gobblin/runtime/FsDatasetStateStore$1/FsDatasetStateStore$1(gobblin.runtime.FsDatasetStateStore)|",
      "|java+method:///java/util/Map/size()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/Map/remove(java.lang.Object)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///org/apache/hadoop/fs/Path/getName()|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///gobblin/runtime/FsDatasetStateStore/getAll(java.lang.String,java.lang.String)|",
      "|java+method:///com/google/common/collect/ImmutableMap/of()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:1.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "caller": "|java+method:///gobblin/runtime/FsDatasetStateStore/get(java.lang.String,java.lang.String,java.lang.String)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///com/google/common/io/Closer/register(java.io.Closeable)|",
      "|java+method:///com/google/common/io/Closer/close()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/JobState/JobState()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text()|",
      "|java+method:///gobblin/runtime/FsDatasetStateStore/get(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/getValueClass()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/next(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Reader/SequenceFile$Reader(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///gobblin/runtime/JobState/newDatasetState(boolean)|",
      "|java+constructor:///gobblin/runtime/JobState$DatasetState/JobState$DatasetState()|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+method:///com/google/common/io/Closer/rethrow(java.lang.Throwable)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.Throwable)|",
      "|java+method:///com/google/common/io/Closer/create()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+constructor:///gobblin/runtime/JobState/JobState()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/close()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text()|",
      "|java+method:///gobblin/runtime/FsDatasetStateStore/get(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/getValueClass()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.Throwable)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/next(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Reader/SequenceFile$Reader(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///gobblin/runtime/JobState/newDatasetState(boolean)|",
      "|java+constructor:///gobblin/runtime/JobState$DatasetState/JobState$DatasetState()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:1.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "caller": "|java+method:///gobblin/runtime/TaskStateCollectorService$1/accept(org.apache.hadoop.fs.Path)|",
    "called": "|java+method:///org/apache/hadoop/fs/Path/getName()|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/fs/Path/getName()|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/getName()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:1.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "caller": "|java+method:///gobblin/runtime/mapreduce/CliMRJobLauncher/main(java.lang.String%5B%5D)|",
    "called": "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
    "v1Body": [
      "|java+constructor:///org/apache/commons/cli/Options/Options()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/commons/cli/OptionBuilder/create()|",
      "|java+method:///org/apache/hadoop/util/GenericOptionsParser/getCommandLine()|",
      "|java+method:///org/apache/commons/cli/OptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///org/apache/commons/cli/CommandLine/getOptionValue(java.lang.String)|",
      "|java+method:///org/apache/commons/cli/OptionBuilder/withArgName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli/OptionBuilder/hasArgs()|",
      "|java+constructor:///org/apache/commons/configuration/PropertiesConfiguration/PropertiesConfiguration(java.lang.String)|",
      "|java+method:///org/apache/hadoop/util/ToolRunner/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.util.Tool,java.lang.String%5B%5D)|",
      "|java+constructor:///org/apache/commons/cli/BasicParser/BasicParser()|",
      "|java+constructor:///gobblin/runtime/mapreduce/CliMRJobLauncher/CliMRJobLauncher(java.util.Properties,java.util.Properties)|",
      "|java+method:///org/apache/commons/cli/BasicParser/parse(org.apache.commons.cli.Options,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli/CommandLine/hasOption(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/util/GenericOptionsParser/GenericOptionsParser(org.apache.hadoop.conf.Configuration,java.lang.String%5B%5D)|",
      "|java+method:///gobblin/runtime/mapreduce/CliMRJobLauncher/printUsage(org.apache.commons.cli.Options)|",
      "|java+method:///java/lang/System/exit(int)|",
      "|java+method:///org/apache/commons/cli/OptionBuilder/withLongOpt(java.lang.String)|",
      "|java+method:///org/apache/commons/cli/CommandLine/getArgs()|",
      "|java+method:///org/apache/commons/cli/Options/addOption(org.apache.commons.cli.Option)|",
      "|java+method:///org/apache/commons/configuration/ConfigurationConverter/getProperties(org.apache.commons.configuration.Configuration)|",
      "|java+method:///org/apache/commons/cli/CommandLine/hasOption(char)|",
      "|java+method:///org/apache/commons/cli/OptionBuilder/create(char)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+constructor:///org/apache/hadoop/util/GenericOptionsParser/GenericOptionsParser(org.apache.hadoop.conf.Configuration,java.lang.String%5B%5D)|",
      "|java+constructor:///gobblin/runtime/mapreduce/CliMRJobLauncher/CliMRJobLauncher(org.apache.hadoop.conf.Configuration,java.util.Properties)|",
      "|java+method:///org/apache/hadoop/util/GenericOptionsParser/getCommandLine()|",
      "|java+method:///gobblin/runtime/cli/CliOptions/parseArgs(java.lang.Class,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/hadoop/util/ToolRunner/run(org.apache.hadoop.util.Tool,java.lang.String%5B%5D)|",
      "|java+method:///java/lang/System/exit(int)|",
      "|java+method:///org/apache/commons/cli/CommandLine/getArgs()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:1.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "caller": "|java+method:///gobblin/runtime/TaskStateCollectorService/collectOutputTaskStates()|",
    "called": "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
    "v1Body": [
      "|java+constructor:///gobblin/runtime/TaskStateCollectorService$1/TaskStateCollectorService$1(gobblin.runtime.TaskStateCollectorService)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/google/common/collect/Queues/newConcurrentLinkedQueue()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///gobblin/util/ParallelRunner/deserializeFromSequenceFile(java.lang.Class,java.lang.Class,org.apache.hadoop.fs.Path,java.util.Collection,boolean)|",
      "|java+constructor:///gobblin/util/ParallelRunner/ParallelRunner(int,org.apache.hadoop.fs.FileSystem)|",
      "|java+constructor:///gobblin/runtime/NewTaskCompletionEvent/NewTaskCompletionEvent(java.util.Collection)|",
      "|java+method:///java/util/Queue/size()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/google/common/eventbus/EventBus/post(java.lang.Object)|",
      "|java+method:///gobblin/util/ParallelRunner/close()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Queue/iterator()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/runtime/JobState/addTaskState(gobblin.runtime.TaskState)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/google/common/collect/ImmutableList/copyOf(java.util.Collection)|"
    ],
    "v2Body": [
      "|java+constructor:///gobblin/runtime/TaskStateCollectorService$1/TaskStateCollectorService$1(gobblin.runtime.TaskStateCollectorService)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/google/common/collect/Queues/newConcurrentLinkedQueue()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///gobblin/util/ParallelRunner/deserializeFromSequenceFile(java.lang.Class,java.lang.Class,org.apache.hadoop.fs.Path,java.util.Collection,boolean)|",
      "|java+constructor:///gobblin/util/ParallelRunner/ParallelRunner(int,org.apache.hadoop.fs.FileSystem)|",
      "|java+constructor:///gobblin/runtime/NewTaskCompletionEvent/NewTaskCompletionEvent(java.util.Collection)|",
      "|java+method:///java/util/Queue/size()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///gobblin/runtime/TaskState/setJobState(gobblin.configuration.State)|",
      "|java+method:///com/google/common/eventbus/EventBus/post(java.lang.Object)|",
      "|java+method:///gobblin/util/ParallelRunner/close()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Queue/iterator()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/runtime/JobState/addTaskState(gobblin.runtime.TaskState)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/google/common/collect/ImmutableList/copyOf(java.util.Collection)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:1.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "caller": "|java+constructor:///gobblin/runtime/JobContext/JobContext(java.util.Properties,org.slf4j.Logger)|",
    "called": "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
    "v1Body": [
      "|java+method:///com/google/inject/Injector/getInstance(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///gobblin/runtime/util/JobMetrics/get(gobblin.runtime.JobState)|",
      "|java+method:///com/google/inject/Guice/createInjector(com.google.inject.Module%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/SourceDecorator/SourceDecorator(gobblin.source.Source,java.lang.String,org.slf4j.Logger)|",
      "|java+constructor:///gobblin/configuration/State/State()|",
      "|java+constructor:///gobblin/metastore/MetaStoreModule/MetaStoreModule(java.util.Properties)|",
      "|java+method:///gobblin/runtime/FsDatasetStateStore/getLatestDatasetStatesByUrns(java.lang.String)|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///java/util/Properties/stringPropertyNames()|",
      "|java+method:///java/lang/Boolean/toString()|",
      "|java+method:///gobblin/util/JobLauncherUtils/newJobId(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/addAll(java.util.Properties)|",
      "|java+method:///gobblin/runtime/JobContext/setTaskStagingAndOutputDirs()|",
      "|java+method:///gobblin/source/extractor/JobCommitPolicy/getCommitPolicy(java.util.Properties)|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/getName()|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///java/util/Properties/setProperty(java.lang.String,java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///gobblin/runtime/JobState/setProp(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Class/cast(java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/FsDatasetStateStore/FsDatasetStateStore(org.apache.hadoop.fs.FileSystem,java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+method:///gobblin/metrics/GobblinMetrics/isEnabled(java.util.Properties)|",
      "|java+constructor:///gobblin/runtime/JobState/JobState(gobblin.configuration.State,java.util.Map,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///com/google/inject/Injector/getInstance(java.lang.Class)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/get(gobblin.runtime.JobState)|",
      "|java+method:///gobblin/commit/DeliverySemantics/parse(gobblin.configuration.State)|",
      "|java+method:///com/google/inject/Guice/createInjector(com.google.inject.Module%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/SourceDecorator/SourceDecorator(gobblin.source.Source,java.lang.String,org.slf4j.Logger)|",
      "|java+constructor:///gobblin/configuration/State/State()|",
      "|java+constructor:///gobblin/metastore/MetaStoreModule/MetaStoreModule(java.util.Properties)|",
      "|java+method:///gobblin/runtime/FsDatasetStateStore/getLatestDatasetStatesByUrns(java.lang.String)|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///java/util/Properties/stringPropertyNames()|",
      "|java+method:///java/lang/Boolean/toString()|",
      "|java+method:///gobblin/util/JobLauncherUtils/newJobId(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/addAll(java.util.Properties)|",
      "|java+method:///gobblin/runtime/JobContext/setTaskStagingAndOutputDirs()|",
      "|java+method:///gobblin/source/extractor/JobCommitPolicy/getCommitPolicy(java.util.Properties)|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/getName()|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///java/util/Properties/setProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///gobblin/runtime/JobContext/createCommitSequenceStore()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/NoopDatasetStateStore/NoopDatasetStateStore(org.apache.hadoop.fs.FileSystem,java.lang.String)|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///gobblin/runtime/JobState/setProp(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Class/cast(java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/FsDatasetStateStore/FsDatasetStateStore(org.apache.hadoop.fs.FileSystem,java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+method:///gobblin/metrics/GobblinMetrics/isEnabled(java.util.Properties)|",
      "|java+constructor:///gobblin/runtime/JobState/JobState(gobblin.configuration.State,java.util.Map,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:1.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "caller": "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher$TaskRunner/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///com/google/common/util/concurrent/ServiceManager/startAsync()|",
      "|java+constructor:///gobblin/metastore/FsStateStore/FsStateStore(org.apache.hadoop.fs.FileSystem,java.lang.String,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///java/net/URI/getPath()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/startMetricReportingWithFileSuffix(gobblin.configuration.State,java.lang.String)|",
      "|java+constructor:///com/google/common/util/concurrent/ServiceManager/ServiceManager(java.lang.Iterable)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskAttemptID/getTaskID()|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///gobblin/runtime/util/JobMetrics/get(gobblin.runtime.JobState)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///gobblin/util/SerializationUtils/deserializeState(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,gobblin.configuration.State)|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getTaskAttemptID()|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/access$000()|",
      "|java+method:///gobblin/util/HadoopUtils/getStateFromConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/SequenceFileOutputFormat/getOutputPath(org.apache.hadoop.mapreduce.JobContext)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskID/toString()|",
      "|java+constructor:///gobblin/runtime/TaskExecutor/TaskExecutor(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///com/google/common/util/concurrent/ServiceManager/awaitHealthy(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+constructor:///gobblin/runtime/mapreduce/MRTaskStateTracker/MRTaskStateTracker(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///java/lang/Boolean/booleanValue()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/getName()|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///com/google/common/util/concurrent/ServiceManager/startAsync()|",
      "|java+constructor:///gobblin/metastore/FsStateStore/FsStateStore(org.apache.hadoop.fs.FileSystem,java.lang.String,java.lang.Class)|",
      "|java+method:///gobblin/util/SerializationUtils/deserializeStateFromInputStream(java.io.InputStream,gobblin.configuration.State)|",
      "|java+method:///gobblin/util/HadoopUtils/getStateFromConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/net/URI/getPath()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/startMetricReportingWithFileSuffix(gobblin.configuration.State,java.lang.String)|",
      "|java+constructor:///com/google/common/util/concurrent/ServiceManager/ServiceManager(java.lang.Iterable)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskAttemptID/getTaskID()|",
      "|java+method:///gobblin/runtime/util/JobMetrics/get(gobblin.runtime.JobState)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///com/google/common/io/Closer/register(java.io.Closeable)|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getTaskAttemptID()|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/access$000()|",
      "|java+method:///com/google/common/io/Closer/close()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+constructor:///java/io/FileInputStream/FileInputStream(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/FileOutputFormat/getOutputPath(org.apache.hadoop.mapreduce.JobContext)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskID/toString()|",
      "|java+constructor:///gobblin/runtime/TaskExecutor/TaskExecutor(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/filecache/DistributedCache/getLocalCacheFiles(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///com/google/common/util/concurrent/ServiceManager/awaitHealthy(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+constructor:///gobblin/runtime/mapreduce/MRTaskStateTracker/MRTaskStateTracker(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///com/google/common/io/Closer/create()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:1.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher$TaskRunner/run(org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+method:///org/apache/hadoop/mapreduce/TaskAttemptID/toString()|",
    "v1Body": [
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher$TaskRunner/map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/nextKeyValue()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getCurrentValue()|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher$TaskRunner/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher$TaskRunner/cleanup(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskAttemptID/toString()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getCurrentKey()|",
      "|java+method:///gobblin/runtime/AbstractJobLauncher/runWorkUnits(java.lang.String,java.lang.String,java.util.List,gobblin.runtime.TaskStateTracker,gobblin.runtime.TaskExecutor,gobblin.metastore.StateStore,org.slf4j.Logger)|",
      "|java+method:///gobblin/runtime/JobState/getJobId()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getTaskAttemptID()|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/access$000()|"
    ],
    "v2Body": [
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher$TaskRunner/map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getCurrentValue()|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher$TaskRunner/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher$TaskRunner/cleanup(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskAttemptID/toString()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getCurrentKey()|",
      "|java+method:///gobblin/runtime/JobState/getJobId()|",
      "|java+method:///gobblin/runtime/AbstractJobLauncher/runWorkUnits(java.lang.String,java.lang.String,gobblin.runtime.JobState,java.util.List,gobblin.runtime.TaskStateTracker,gobblin.runtime.TaskExecutor,gobblin.metastore.StateStore,org.slf4j.Logger)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/nextKeyValue()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getTaskAttemptID()|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/access$000()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-mapreduce-client-core:2.3.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+constructor:///gobblin/runtime/mapreduce/MRJobLauncher/MRJobLauncher(java.util.Properties,org.apache.hadoop.conf.Configuration)|",
    "called": "|java+method:///org/apache/hadoop/mapreduce/Job/getInstance(org.apache.hadoop.conf.Configuration,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///gobblin/runtime/AbstractJobLauncher/AbstractJobLauncher(java.util.Properties,java.util.Map)|",
      "|java+method:///java/lang/Integer/toString(int)|",
      "|java+constructor:///gobblin/runtime/TaskStateCollectorService/TaskStateCollectorService(java.util.Properties,gobblin.runtime.JobState,com.google.common.eventbus.EventBus,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/startCancellationExecutor()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/buildFileSystem(java.util.Properties,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/delete(org.apache.hadoop.fs.Path,boolean)|",
      "|java+method:///gobblin/runtime/JobContext/getJobId()|",
      "|java+method:///gobblin/util/JobConfigurationUtils/putPropertiesIntoConfiguration(java.util.Properties,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/getInstance(org.apache.hadoop.conf.Configuration,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///gobblin/runtime/JobContext/getJobState()|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/addDependencies()|",
      "|java+method:///com/google/common/collect/ImmutableMap/of()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/runtime/JobContext/getJobName()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/setBoolean(java.lang.String,boolean)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/mkdirs(org.apache.hadoop.fs.Path)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/ImmutableList/of()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/Integer/toString(int)|",
      "|java+constructor:///gobblin/runtime/AbstractJobLauncher/AbstractJobLauncher(java.util.Properties,java.util.List)|",
      "|java+constructor:///gobblin/runtime/TaskStateCollectorService/TaskStateCollectorService(java.util.Properties,gobblin.runtime.JobState,com.google.common.eventbus.EventBus,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/startCancellationExecutor()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/buildFileSystem(java.util.Properties,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/delete(org.apache.hadoop.fs.Path,boolean)|",
      "|java+method:///gobblin/runtime/JobContext/getJobId()|",
      "|java+method:///gobblin/util/JobConfigurationUtils/putPropertiesIntoConfiguration(java.util.Properties,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/getInstance(org.apache.hadoop.conf.Configuration,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///gobblin/runtime/JobContext/getJobState()|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/addDependencies()|",
      "|java+method:///gobblin/runtime/JobContext/getJobName()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/setBoolean(java.lang.String,boolean)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/mkdirs(org.apache.hadoop.fs.Path)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-mapreduce-client-core:2.3.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/prepareHadoopJob(java.util.List)|",
    "called": "|java+method:///org/apache/hadoop/mapreduce/Job/setInputFormatClass(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapOutputKeyClass(java.lang.Class)|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///gobblin/util/SerializationUtils/serializeState(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,gobblin.configuration.State)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/getConfiguration()|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/SequenceFileOutputFormat/setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapperClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setInputFormatClass(java.lang.Class)|",
      "|java+method:///gobblin/metrics/event/TimingEvent/stop()|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///gobblin/runtime/JobContext/getJobState()|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///gobblin/metrics/event/EventSubmitter/getTimingEvent(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setNumReduceTasks(int)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setSpeculativeExecution(boolean)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setJarByClass(java.lang.Class)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/prepareJobInput(java.util.List)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/input/NLineInputFormat/setNumLinesPerSplit(org.apache.hadoop.mapreduce.Job,int)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputFormatClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/input/NLineInputFormat/addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapOutputKeyClass(java.lang.Class)|",
      "|java+method:///gobblin/metrics/event/TimingEvent/stop()|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputFormatClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/input/FileInputFormat/addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapperClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setInputFormatClass(java.lang.Class)|",
      "|java+method:///gobblin/runtime/JobContext/getJobState()|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///gobblin/metrics/event/EventSubmitter/getTimingEvent(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setNumReduceTasks(int)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setSpeculativeExecution(boolean)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setJarByClass(java.lang.Class)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/prepareJobInput(java.util.List)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/input/NLineInputFormat/setNumLinesPerSplit(org.apache.hadoop.mapreduce.Job,int)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/FileOutputFormat/setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/serializeJobState(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration,gobblin.runtime.JobState,org.apache.hadoop.mapreduce.Job)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-mapreduce-client-core:2.3.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher$TaskRunner/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+method:///org/apache/hadoop/mapreduce/TaskID/toString()|",
    "v1Body": [
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///com/google/common/util/concurrent/ServiceManager/startAsync()|",
      "|java+constructor:///gobblin/metastore/FsStateStore/FsStateStore(org.apache.hadoop.fs.FileSystem,java.lang.String,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///java/net/URI/getPath()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/startMetricReportingWithFileSuffix(gobblin.configuration.State,java.lang.String)|",
      "|java+constructor:///com/google/common/util/concurrent/ServiceManager/ServiceManager(java.lang.Iterable)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskAttemptID/getTaskID()|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///gobblin/runtime/util/JobMetrics/get(gobblin.runtime.JobState)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///gobblin/util/SerializationUtils/deserializeState(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,gobblin.configuration.State)|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getTaskAttemptID()|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/access$000()|",
      "|java+method:///gobblin/util/HadoopUtils/getStateFromConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/SequenceFileOutputFormat/getOutputPath(org.apache.hadoop.mapreduce.JobContext)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskID/toString()|",
      "|java+constructor:///gobblin/runtime/TaskExecutor/TaskExecutor(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///com/google/common/util/concurrent/ServiceManager/awaitHealthy(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+constructor:///gobblin/runtime/mapreduce/MRTaskStateTracker/MRTaskStateTracker(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///java/lang/Boolean/booleanValue()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/getName()|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///com/google/common/util/concurrent/ServiceManager/startAsync()|",
      "|java+constructor:///gobblin/metastore/FsStateStore/FsStateStore(org.apache.hadoop.fs.FileSystem,java.lang.String,java.lang.Class)|",
      "|java+method:///gobblin/util/SerializationUtils/deserializeStateFromInputStream(java.io.InputStream,gobblin.configuration.State)|",
      "|java+method:///gobblin/util/HadoopUtils/getStateFromConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/net/URI/getPath()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/startMetricReportingWithFileSuffix(gobblin.configuration.State,java.lang.String)|",
      "|java+constructor:///com/google/common/util/concurrent/ServiceManager/ServiceManager(java.lang.Iterable)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskAttemptID/getTaskID()|",
      "|java+method:///gobblin/runtime/util/JobMetrics/get(gobblin.runtime.JobState)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///com/google/common/io/Closer/register(java.io.Closeable)|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getTaskAttemptID()|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/access$000()|",
      "|java+method:///com/google/common/io/Closer/close()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+constructor:///java/io/FileInputStream/FileInputStream(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/FileOutputFormat/getOutputPath(org.apache.hadoop.mapreduce.JobContext)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskID/toString()|",
      "|java+constructor:///gobblin/runtime/TaskExecutor/TaskExecutor(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/filecache/DistributedCache/getLocalCacheFiles(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///com/google/common/util/concurrent/ServiceManager/awaitHealthy(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+constructor:///gobblin/runtime/mapreduce/MRTaskStateTracker/MRTaskStateTracker(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///com/google/common/io/Closer/create()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-mapreduce-client-core:2.3.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/JobState/toJobExecutionInfo()|",
    "called": "|java+method:///gobblin/rest/JobExecutionInfo/setJobName(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+constructor:///com/linkedin/data/template/StringMap/StringMap(java.util.Map)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/lang/Long/toString(long)|",
      "|java+method:///gobblin/rest/Metric/setValue(java.lang.String)|",
      "|java+method:///gobblin/rest/TaskExecutionInfoArray/add(com.linkedin.data.template.DataTemplate)|",
      "|java+method:///gobblin/runtime/JobState/getPropertyNames()|",
      "|java+method:///gobblin/runtime/JobState/getTaskStates()|",
      "|java+method:///com/codahale/metrics/Meter/getMeanRate()|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setJobProperties(com.linkedin.data.template.StringMap)|",
      "|java+method:///java/lang/Double/toString(double)|",
      "|java+method:///gobblin/runtime/MetricGroup/name()|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setState(gobblin.rest.JobStateEnum)|",
      "|java+method:///gobblin/runtime/TaskState/toTaskExecutionInfo()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setDuration(long)|",
      "|java+method:///gobblin/metrics/MetricContext/getCounters()|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setCompletedTasks(int)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/get(gobblin.runtime.JobState)|",
      "|java+method:///gobblin/metrics/MetricContext/getGauges()|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setJobName(java.lang.String)|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setTaskExecutions(gobblin.rest.TaskExecutionInfoArray)|",
      "|java+method:///gobblin/runtime/JobState/getLauncherType()|",
      "|java+constructor:///gobblin/rest/MetricArray/MetricArray()|",
      "|java+method:///gobblin/runtime/JobState$RunningState/name()|",
      "|java+method:///gobblin/rest/MetricArray/add(com.linkedin.data.template.DataTemplate)|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setLauncherType(gobblin.rest.LauncherTypeEnum)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/rest/MetricTypeEnum/valueOf(java.lang.String)|",
      "|java+method:///gobblin/runtime/JobState/getProp(java.lang.String)|",
      "|java+method:///gobblin/metrics/GobblinMetrics$MetricType/name()|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setLaunchedTasks(int)|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setEndTime(long)|",
      "|java+method:///gobblin/runtime/JobState/getCompletedTasks()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///gobblin/rest/Metric/setType(gobblin.rest.MetricTypeEnum)|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setMetrics(gobblin.rest.MetricArray)|",
      "|java+method:///gobblin/rest/JobStateEnum/valueOf(java.lang.String)|",
      "|java+method:///java/util/SortedMap/entrySet()|",
      "|java+method:///com/codahale/metrics/Counter/getCount()|",
      "|java+method:///gobblin/metrics/MetricContext/getMeters()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///gobblin/rest/Metric/setName(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///gobblin/rest/Metric/Metric()|",
      "|java+constructor:///gobblin/rest/TaskExecutionInfoArray/TaskExecutionInfoArray()|",
      "|java+constructor:///gobblin/rest/JobExecutionInfo/JobExecutionInfo()|",
      "|java+method:///gobblin/runtime/util/JobMetrics/getMetricContext()|",
      "|java+method:///gobblin/rest/Metric/setGroup(java.lang.String)|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setTrackingUrl(java.lang.String)|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setJobId(java.lang.String)|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setStartTime(long)|",
      "|java+method:///gobblin/runtime/JobState/getTrackingURL()|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///com/codahale/metrics/Gauge/getValue()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+constructor:///com/linkedin/data/template/StringMap/StringMap(java.util.Map)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/lang/Long/toString(long)|",
      "|java+method:///gobblin/rest/Metric/setValue(java.lang.String)|",
      "|java+method:///gobblin/rest/TaskExecutionInfoArray/add(com.linkedin.data.template.DataTemplate)|",
      "|java+method:///gobblin/runtime/JobState/getTaskStates()|",
      "|java+method:///com/codahale/metrics/Meter/getMeanRate()|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setJobProperties(com.linkedin.data.template.StringMap)|",
      "|java+method:///java/lang/Double/toString(double)|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setState(gobblin.rest.JobStateEnum)|",
      "|java+method:///gobblin/runtime/TaskState/toTaskExecutionInfo()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setDuration(long)|",
      "|java+method:///gobblin/metrics/MetricContext/getCounters()|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setCompletedTasks(int)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/get(gobblin.runtime.JobState)|",
      "|java+method:///gobblin/metrics/MetricContext/getGauges()|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setJobName(java.lang.String)|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setTaskExecutions(gobblin.rest.TaskExecutionInfoArray)|",
      "|java+method:///gobblin/runtime/JobState/getLauncherType()|",
      "|java+constructor:///gobblin/rest/MetricArray/MetricArray()|",
      "|java+method:///gobblin/runtime/JobState$RunningState/name()|",
      "|java+method:///gobblin/rest/MetricArray/add(com.linkedin.data.template.DataTemplate)|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setLauncherType(gobblin.rest.LauncherTypeEnum)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/rest/MetricTypeEnum/valueOf(java.lang.String)|",
      "|java+method:///gobblin/runtime/JobState/getProp(java.lang.String)|",
      "|java+method:///gobblin/metrics/GobblinMetrics$MetricType/name()|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setLaunchedTasks(int)|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setEndTime(long)|",
      "|java+method:///gobblin/runtime/JobState/getCompletedTasks()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///gobblin/runtime/JobState/getPropertyNames()|",
      "|java+method:///gobblin/runtime/util/MetricGroup/name()|",
      "|java+method:///gobblin/rest/Metric/setType(gobblin.rest.MetricTypeEnum)|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setMetrics(gobblin.rest.MetricArray)|",
      "|java+method:///gobblin/rest/JobStateEnum/valueOf(java.lang.String)|",
      "|java+method:///java/util/SortedMap/entrySet()|",
      "|java+method:///com/codahale/metrics/Counter/getCount()|",
      "|java+method:///gobblin/metrics/MetricContext/getMeters()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///gobblin/rest/Metric/setName(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///gobblin/rest/Metric/Metric()|",
      "|java+constructor:///gobblin/rest/TaskExecutionInfoArray/TaskExecutionInfoArray()|",
      "|java+constructor:///gobblin/rest/JobExecutionInfo/JobExecutionInfo()|",
      "|java+method:///gobblin/runtime/util/JobMetrics/getMetricContext()|",
      "|java+method:///gobblin/rest/Metric/setGroup(java.lang.String)|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setTrackingUrl(java.lang.String)|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setJobId(java.lang.String)|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setStartTime(long)|",
      "|java+method:///gobblin/runtime/JobState/getTrackingURL()|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///com/codahale/metrics/Gauge/getValue()|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-rest-api-data-template:0.7.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/FsDatasetStateStore/getAll(java.lang.String,java.lang.String)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///com/google/common/io/Closer/register(java.io.Closeable)|",
      "|java+method:///com/google/common/io/Closer/rethrow(java.lang.Throwable)|",
      "|java+constructor:///gobblin/runtime/JobState/JobState()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/getValueClass()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/next(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Reader/SequenceFile$Reader(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///gobblin/runtime/JobState/newDatasetState(boolean)|",
      "|java+constructor:///gobblin/runtime/JobState$DatasetState/JobState$DatasetState()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///com/google/common/io/Closer/close()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.Throwable)|",
      "|java+method:///com/google/common/io/Closer/create()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///gobblin/runtime/JobState/JobState()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/close()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/getValueClass()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.Throwable)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/next(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Reader/SequenceFile$Reader(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///gobblin/runtime/JobState/newDatasetState(boolean)|",
      "|java+constructor:///gobblin/runtime/JobState$DatasetState/JobState$DatasetState()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-common:2.3.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/addDependencies()|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
    "v1Body": [
      "|java+method:///gobblin/metrics/event/TimingEvent/stop()|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/addHDFSFiles(java.lang.String)|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/addJars(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///gobblin/metrics/event/EventSubmitter/getTimingEvent(java.lang.String)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/addLocalFiles(org.apache.hadoop.fs.Path,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///gobblin/metrics/event/TimingEvent/stop()|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/addHDFSFiles(java.lang.String)|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/addJars(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/addHdfsJars(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///gobblin/metrics/event/EventSubmitter/getTimingEvent(java.lang.String)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/addLocalFiles(org.apache.hadoop.fs.Path,java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-common:2.3.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+constructor:///gobblin/runtime/mapreduce/MRJobLauncher/MRJobLauncher(java.util.Properties,org.apache.hadoop.conf.Configuration)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///gobblin/runtime/AbstractJobLauncher/AbstractJobLauncher(java.util.Properties,java.util.Map)|",
      "|java+method:///java/lang/Integer/toString(int)|",
      "|java+constructor:///gobblin/runtime/TaskStateCollectorService/TaskStateCollectorService(java.util.Properties,gobblin.runtime.JobState,com.google.common.eventbus.EventBus,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/startCancellationExecutor()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/buildFileSystem(java.util.Properties,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/delete(org.apache.hadoop.fs.Path,boolean)|",
      "|java+method:///gobblin/runtime/JobContext/getJobId()|",
      "|java+method:///gobblin/util/JobConfigurationUtils/putPropertiesIntoConfiguration(java.util.Properties,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/getInstance(org.apache.hadoop.conf.Configuration,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///gobblin/runtime/JobContext/getJobState()|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/addDependencies()|",
      "|java+method:///com/google/common/collect/ImmutableMap/of()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/runtime/JobContext/getJobName()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/setBoolean(java.lang.String,boolean)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/mkdirs(org.apache.hadoop.fs.Path)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/ImmutableList/of()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/Integer/toString(int)|",
      "|java+constructor:///gobblin/runtime/AbstractJobLauncher/AbstractJobLauncher(java.util.Properties,java.util.List)|",
      "|java+constructor:///gobblin/runtime/TaskStateCollectorService/TaskStateCollectorService(java.util.Properties,gobblin.runtime.JobState,com.google.common.eventbus.EventBus,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/startCancellationExecutor()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/buildFileSystem(java.util.Properties,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/delete(org.apache.hadoop.fs.Path,boolean)|",
      "|java+method:///gobblin/runtime/JobContext/getJobId()|",
      "|java+method:///gobblin/util/JobConfigurationUtils/putPropertiesIntoConfiguration(java.util.Properties,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/getInstance(org.apache.hadoop.conf.Configuration,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///gobblin/runtime/JobContext/getJobState()|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/addDependencies()|",
      "|java+method:///gobblin/runtime/JobContext/getJobName()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/setBoolean(java.lang.String,boolean)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/mkdirs(org.apache.hadoop.fs.Path)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-common:2.3.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher$TaskRunner/map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+method:///org/apache/hadoop/io/Text/toString()|",
    "v1Body": [
      "|java+method:///gobblin/source/workunit/MultiWorkUnit/createEmpty()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///gobblin/source/workunit/WorkUnit/addAllIfNotExist(gobblin.configuration.State)|",
      "|java+method:///gobblin/util/JobLauncherUtils/flattenWorkUnits(java.util.List)|",
      "|java+method:///gobblin/util/SerializationUtils/deserializeState(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,gobblin.configuration.State)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|",
      "|java+method:///gobblin/source/workunit/MultiWorkUnit/getWorkUnits()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///gobblin/source/workunit/WorkUnit/createEmpty()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///gobblin/source/workunit/MultiWorkUnit/createEmpty()|",
      "|java+method:///gobblin/util/JobLauncherUtils/flattenWorkUnits(java.util.List)|",
      "|java+method:///gobblin/util/SerializationUtils/deserializeState(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,gobblin.configuration.State)|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|",
      "|java+method:///gobblin/source/workunit/MultiWorkUnit/getWorkUnits()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///gobblin/source/workunit/WorkUnit/createEmpty()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-common:2.3.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/FsDatasetStateStore/getLatestDatasetStatesByUrns(java.lang.String)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+method:///gobblin/runtime/JobState$DatasetState/getProp(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+constructor:///gobblin/runtime/FsDatasetStateStore$1/FsDatasetStateStore$1(gobblin.runtime.FsDatasetStateStore)|",
      "|java+method:///java/util/Map/size()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/Map/remove(java.lang.Object)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///org/apache/hadoop/fs/Path/getName()|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///gobblin/runtime/FsDatasetStateStore/getAll(java.lang.String,java.lang.String)|",
      "|java+method:///com/google/common/collect/ImmutableMap/of()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+method:///gobblin/runtime/JobState$DatasetState/getDatasetUrn()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+constructor:///gobblin/runtime/FsDatasetStateStore$1/FsDatasetStateStore$1(gobblin.runtime.FsDatasetStateStore)|",
      "|java+method:///java/util/Map/size()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/Map/remove(java.lang.Object)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///org/apache/hadoop/fs/Path/getName()|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///gobblin/runtime/FsDatasetStateStore/getAll(java.lang.String,java.lang.String)|",
      "|java+method:///com/google/common/collect/ImmutableMap/of()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-common:2.3.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/FsDatasetStateStore/get(java.lang.String,java.lang.String,java.lang.String)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///com/google/common/io/Closer/register(java.io.Closeable)|",
      "|java+method:///com/google/common/io/Closer/close()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/JobState/JobState()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text()|",
      "|java+method:///gobblin/runtime/FsDatasetStateStore/get(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/getValueClass()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/next(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Reader/SequenceFile$Reader(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///gobblin/runtime/JobState/newDatasetState(boolean)|",
      "|java+constructor:///gobblin/runtime/JobState$DatasetState/JobState$DatasetState()|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+method:///com/google/common/io/Closer/rethrow(java.lang.Throwable)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.Throwable)|",
      "|java+method:///com/google/common/io/Closer/create()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+constructor:///gobblin/runtime/JobState/JobState()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/close()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text()|",
      "|java+method:///gobblin/runtime/FsDatasetStateStore/get(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/getValueClass()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.Throwable)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/next(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Reader/SequenceFile$Reader(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///gobblin/runtime/JobState/newDatasetState(boolean)|",
      "|java+constructor:///gobblin/runtime/JobState$DatasetState/JobState$DatasetState()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-common:2.3.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/TaskStateCollectorService$1/accept(org.apache.hadoop.fs.Path)|",
    "called": "|java+method:///org/apache/hadoop/fs/Path/getName()|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/fs/Path/getName()|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/getName()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-common:2.3.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/mapreduce/CliMRJobLauncher/main(java.lang.String%5B%5D)|",
    "called": "|java+constructor:///org/apache/hadoop/util/GenericOptionsParser/GenericOptionsParser(org.apache.hadoop.conf.Configuration,java.lang.String%5B%5D)|",
    "v1Body": [
      "|java+constructor:///org/apache/commons/cli/Options/Options()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/commons/cli/OptionBuilder/create()|",
      "|java+method:///org/apache/hadoop/util/GenericOptionsParser/getCommandLine()|",
      "|java+method:///org/apache/commons/cli/OptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///org/apache/commons/cli/CommandLine/getOptionValue(java.lang.String)|",
      "|java+method:///org/apache/commons/cli/OptionBuilder/withArgName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli/OptionBuilder/hasArgs()|",
      "|java+constructor:///org/apache/commons/configuration/PropertiesConfiguration/PropertiesConfiguration(java.lang.String)|",
      "|java+method:///org/apache/hadoop/util/ToolRunner/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.util.Tool,java.lang.String%5B%5D)|",
      "|java+constructor:///org/apache/commons/cli/BasicParser/BasicParser()|",
      "|java+constructor:///gobblin/runtime/mapreduce/CliMRJobLauncher/CliMRJobLauncher(java.util.Properties,java.util.Properties)|",
      "|java+method:///org/apache/commons/cli/BasicParser/parse(org.apache.commons.cli.Options,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli/CommandLine/hasOption(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/util/GenericOptionsParser/GenericOptionsParser(org.apache.hadoop.conf.Configuration,java.lang.String%5B%5D)|",
      "|java+method:///gobblin/runtime/mapreduce/CliMRJobLauncher/printUsage(org.apache.commons.cli.Options)|",
      "|java+method:///java/lang/System/exit(int)|",
      "|java+method:///org/apache/commons/cli/OptionBuilder/withLongOpt(java.lang.String)|",
      "|java+method:///org/apache/commons/cli/CommandLine/getArgs()|",
      "|java+method:///org/apache/commons/cli/Options/addOption(org.apache.commons.cli.Option)|",
      "|java+method:///org/apache/commons/configuration/ConfigurationConverter/getProperties(org.apache.commons.configuration.Configuration)|",
      "|java+method:///org/apache/commons/cli/CommandLine/hasOption(char)|",
      "|java+method:///org/apache/commons/cli/OptionBuilder/create(char)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+constructor:///org/apache/hadoop/util/GenericOptionsParser/GenericOptionsParser(org.apache.hadoop.conf.Configuration,java.lang.String%5B%5D)|",
      "|java+constructor:///gobblin/runtime/mapreduce/CliMRJobLauncher/CliMRJobLauncher(org.apache.hadoop.conf.Configuration,java.util.Properties)|",
      "|java+method:///org/apache/hadoop/util/GenericOptionsParser/getCommandLine()|",
      "|java+method:///gobblin/runtime/cli/CliOptions/parseArgs(java.lang.Class,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/hadoop/util/ToolRunner/run(org.apache.hadoop.util.Tool,java.lang.String%5B%5D)|",
      "|java+method:///java/lang/System/exit(int)|",
      "|java+method:///org/apache/commons/cli/CommandLine/getArgs()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-common:2.3.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/TaskStateCollectorService/collectOutputTaskStates()|",
    "called": "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
    "v1Body": [
      "|java+constructor:///gobblin/runtime/TaskStateCollectorService$1/TaskStateCollectorService$1(gobblin.runtime.TaskStateCollectorService)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/google/common/collect/Queues/newConcurrentLinkedQueue()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///gobblin/util/ParallelRunner/deserializeFromSequenceFile(java.lang.Class,java.lang.Class,org.apache.hadoop.fs.Path,java.util.Collection,boolean)|",
      "|java+constructor:///gobblin/util/ParallelRunner/ParallelRunner(int,org.apache.hadoop.fs.FileSystem)|",
      "|java+constructor:///gobblin/runtime/NewTaskCompletionEvent/NewTaskCompletionEvent(java.util.Collection)|",
      "|java+method:///java/util/Queue/size()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/google/common/eventbus/EventBus/post(java.lang.Object)|",
      "|java+method:///gobblin/util/ParallelRunner/close()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Queue/iterator()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/runtime/JobState/addTaskState(gobblin.runtime.TaskState)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/google/common/collect/ImmutableList/copyOf(java.util.Collection)|"
    ],
    "v2Body": [
      "|java+constructor:///gobblin/runtime/TaskStateCollectorService$1/TaskStateCollectorService$1(gobblin.runtime.TaskStateCollectorService)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/google/common/collect/Queues/newConcurrentLinkedQueue()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///gobblin/util/ParallelRunner/deserializeFromSequenceFile(java.lang.Class,java.lang.Class,org.apache.hadoop.fs.Path,java.util.Collection,boolean)|",
      "|java+constructor:///gobblin/util/ParallelRunner/ParallelRunner(int,org.apache.hadoop.fs.FileSystem)|",
      "|java+constructor:///gobblin/runtime/NewTaskCompletionEvent/NewTaskCompletionEvent(java.util.Collection)|",
      "|java+method:///java/util/Queue/size()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///gobblin/runtime/TaskState/setJobState(gobblin.configuration.State)|",
      "|java+method:///com/google/common/eventbus/EventBus/post(java.lang.Object)|",
      "|java+method:///gobblin/util/ParallelRunner/close()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Queue/iterator()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/runtime/JobState/addTaskState(gobblin.runtime.TaskState)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/google/common/collect/ImmutableList/copyOf(java.util.Collection)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-common:2.3.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+constructor:///gobblin/runtime/JobContext/JobContext(java.util.Properties,org.slf4j.Logger)|",
    "called": "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///com/google/inject/Injector/getInstance(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///gobblin/runtime/util/JobMetrics/get(gobblin.runtime.JobState)|",
      "|java+method:///com/google/inject/Guice/createInjector(com.google.inject.Module%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/SourceDecorator/SourceDecorator(gobblin.source.Source,java.lang.String,org.slf4j.Logger)|",
      "|java+constructor:///gobblin/configuration/State/State()|",
      "|java+constructor:///gobblin/metastore/MetaStoreModule/MetaStoreModule(java.util.Properties)|",
      "|java+method:///gobblin/runtime/FsDatasetStateStore/getLatestDatasetStatesByUrns(java.lang.String)|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///java/util/Properties/stringPropertyNames()|",
      "|java+method:///java/lang/Boolean/toString()|",
      "|java+method:///gobblin/util/JobLauncherUtils/newJobId(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/addAll(java.util.Properties)|",
      "|java+method:///gobblin/runtime/JobContext/setTaskStagingAndOutputDirs()|",
      "|java+method:///gobblin/source/extractor/JobCommitPolicy/getCommitPolicy(java.util.Properties)|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/getName()|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///java/util/Properties/setProperty(java.lang.String,java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///gobblin/runtime/JobState/setProp(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Class/cast(java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/FsDatasetStateStore/FsDatasetStateStore(org.apache.hadoop.fs.FileSystem,java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+method:///gobblin/metrics/GobblinMetrics/isEnabled(java.util.Properties)|",
      "|java+constructor:///gobblin/runtime/JobState/JobState(gobblin.configuration.State,java.util.Map,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///com/google/inject/Injector/getInstance(java.lang.Class)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/get(gobblin.runtime.JobState)|",
      "|java+method:///gobblin/commit/DeliverySemantics/parse(gobblin.configuration.State)|",
      "|java+method:///com/google/inject/Guice/createInjector(com.google.inject.Module%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/SourceDecorator/SourceDecorator(gobblin.source.Source,java.lang.String,org.slf4j.Logger)|",
      "|java+constructor:///gobblin/configuration/State/State()|",
      "|java+constructor:///gobblin/metastore/MetaStoreModule/MetaStoreModule(java.util.Properties)|",
      "|java+method:///gobblin/runtime/FsDatasetStateStore/getLatestDatasetStatesByUrns(java.lang.String)|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///java/util/Properties/stringPropertyNames()|",
      "|java+method:///java/lang/Boolean/toString()|",
      "|java+method:///gobblin/util/JobLauncherUtils/newJobId(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/addAll(java.util.Properties)|",
      "|java+method:///gobblin/runtime/JobContext/setTaskStagingAndOutputDirs()|",
      "|java+method:///gobblin/source/extractor/JobCommitPolicy/getCommitPolicy(java.util.Properties)|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/getName()|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///java/util/Properties/setProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///gobblin/runtime/JobContext/createCommitSequenceStore()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/NoopDatasetStateStore/NoopDatasetStateStore(org.apache.hadoop.fs.FileSystem,java.lang.String)|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///gobblin/runtime/JobState/setProp(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Class/cast(java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/FsDatasetStateStore/FsDatasetStateStore(org.apache.hadoop.fs.FileSystem,java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+method:///gobblin/metrics/GobblinMetrics/isEnabled(java.util.Properties)|",
      "|java+constructor:///gobblin/runtime/JobState/JobState(gobblin.configuration.State,java.util.Map,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-common:2.3.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher$TaskRunner/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///com/google/common/util/concurrent/ServiceManager/startAsync()|",
      "|java+constructor:///gobblin/metastore/FsStateStore/FsStateStore(org.apache.hadoop.fs.FileSystem,java.lang.String,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///java/net/URI/getPath()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/startMetricReportingWithFileSuffix(gobblin.configuration.State,java.lang.String)|",
      "|java+constructor:///com/google/common/util/concurrent/ServiceManager/ServiceManager(java.lang.Iterable)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskAttemptID/getTaskID()|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///gobblin/runtime/util/JobMetrics/get(gobblin.runtime.JobState)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///gobblin/util/SerializationUtils/deserializeState(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,gobblin.configuration.State)|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getTaskAttemptID()|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/access$000()|",
      "|java+method:///gobblin/util/HadoopUtils/getStateFromConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/SequenceFileOutputFormat/getOutputPath(org.apache.hadoop.mapreduce.JobContext)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskID/toString()|",
      "|java+constructor:///gobblin/runtime/TaskExecutor/TaskExecutor(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///com/google/common/util/concurrent/ServiceManager/awaitHealthy(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+constructor:///gobblin/runtime/mapreduce/MRTaskStateTracker/MRTaskStateTracker(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///java/lang/Boolean/booleanValue()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/getName()|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///com/google/common/util/concurrent/ServiceManager/startAsync()|",
      "|java+constructor:///gobblin/metastore/FsStateStore/FsStateStore(org.apache.hadoop.fs.FileSystem,java.lang.String,java.lang.Class)|",
      "|java+method:///gobblin/util/SerializationUtils/deserializeStateFromInputStream(java.io.InputStream,gobblin.configuration.State)|",
      "|java+method:///gobblin/util/HadoopUtils/getStateFromConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/net/URI/getPath()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/startMetricReportingWithFileSuffix(gobblin.configuration.State,java.lang.String)|",
      "|java+constructor:///com/google/common/util/concurrent/ServiceManager/ServiceManager(java.lang.Iterable)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskAttemptID/getTaskID()|",
      "|java+method:///gobblin/runtime/util/JobMetrics/get(gobblin.runtime.JobState)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///com/google/common/io/Closer/register(java.io.Closeable)|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getTaskAttemptID()|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/access$000()|",
      "|java+method:///com/google/common/io/Closer/close()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+constructor:///java/io/FileInputStream/FileInputStream(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/FileOutputFormat/getOutputPath(org.apache.hadoop.mapreduce.JobContext)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskID/toString()|",
      "|java+constructor:///gobblin/runtime/TaskExecutor/TaskExecutor(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/filecache/DistributedCache/getLocalCacheFiles(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///com/google/common/util/concurrent/ServiceManager/awaitHealthy(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+constructor:///gobblin/runtime/mapreduce/MRTaskStateTracker/MRTaskStateTracker(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///com/google/common/io/Closer/create()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-common:2.3.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/JobState/toJobExecutionInfo()|",
    "called": "|java+method:///gobblin/metrics/MetricContext/getCounters()|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+constructor:///com/linkedin/data/template/StringMap/StringMap(java.util.Map)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/lang/Long/toString(long)|",
      "|java+method:///gobblin/rest/Metric/setValue(java.lang.String)|",
      "|java+method:///gobblin/rest/TaskExecutionInfoArray/add(com.linkedin.data.template.DataTemplate)|",
      "|java+method:///gobblin/runtime/JobState/getPropertyNames()|",
      "|java+method:///gobblin/runtime/JobState/getTaskStates()|",
      "|java+method:///com/codahale/metrics/Meter/getMeanRate()|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setJobProperties(com.linkedin.data.template.StringMap)|",
      "|java+method:///java/lang/Double/toString(double)|",
      "|java+method:///gobblin/runtime/MetricGroup/name()|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setState(gobblin.rest.JobStateEnum)|",
      "|java+method:///gobblin/runtime/TaskState/toTaskExecutionInfo()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setDuration(long)|",
      "|java+method:///gobblin/metrics/MetricContext/getCounters()|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setCompletedTasks(int)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/get(gobblin.runtime.JobState)|",
      "|java+method:///gobblin/metrics/MetricContext/getGauges()|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setJobName(java.lang.String)|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setTaskExecutions(gobblin.rest.TaskExecutionInfoArray)|",
      "|java+method:///gobblin/runtime/JobState/getLauncherType()|",
      "|java+constructor:///gobblin/rest/MetricArray/MetricArray()|",
      "|java+method:///gobblin/runtime/JobState$RunningState/name()|",
      "|java+method:///gobblin/rest/MetricArray/add(com.linkedin.data.template.DataTemplate)|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setLauncherType(gobblin.rest.LauncherTypeEnum)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/rest/MetricTypeEnum/valueOf(java.lang.String)|",
      "|java+method:///gobblin/runtime/JobState/getProp(java.lang.String)|",
      "|java+method:///gobblin/metrics/GobblinMetrics$MetricType/name()|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setLaunchedTasks(int)|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setEndTime(long)|",
      "|java+method:///gobblin/runtime/JobState/getCompletedTasks()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///gobblin/rest/Metric/setType(gobblin.rest.MetricTypeEnum)|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setMetrics(gobblin.rest.MetricArray)|",
      "|java+method:///gobblin/rest/JobStateEnum/valueOf(java.lang.String)|",
      "|java+method:///java/util/SortedMap/entrySet()|",
      "|java+method:///com/codahale/metrics/Counter/getCount()|",
      "|java+method:///gobblin/metrics/MetricContext/getMeters()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///gobblin/rest/Metric/setName(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///gobblin/rest/Metric/Metric()|",
      "|java+constructor:///gobblin/rest/TaskExecutionInfoArray/TaskExecutionInfoArray()|",
      "|java+constructor:///gobblin/rest/JobExecutionInfo/JobExecutionInfo()|",
      "|java+method:///gobblin/runtime/util/JobMetrics/getMetricContext()|",
      "|java+method:///gobblin/rest/Metric/setGroup(java.lang.String)|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setTrackingUrl(java.lang.String)|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setJobId(java.lang.String)|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setStartTime(long)|",
      "|java+method:///gobblin/runtime/JobState/getTrackingURL()|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///com/codahale/metrics/Gauge/getValue()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+constructor:///com/linkedin/data/template/StringMap/StringMap(java.util.Map)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/lang/Long/toString(long)|",
      "|java+method:///gobblin/rest/Metric/setValue(java.lang.String)|",
      "|java+method:///gobblin/rest/TaskExecutionInfoArray/add(com.linkedin.data.template.DataTemplate)|",
      "|java+method:///gobblin/runtime/JobState/getTaskStates()|",
      "|java+method:///com/codahale/metrics/Meter/getMeanRate()|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setJobProperties(com.linkedin.data.template.StringMap)|",
      "|java+method:///java/lang/Double/toString(double)|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setState(gobblin.rest.JobStateEnum)|",
      "|java+method:///gobblin/runtime/TaskState/toTaskExecutionInfo()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setDuration(long)|",
      "|java+method:///gobblin/metrics/MetricContext/getCounters()|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setCompletedTasks(int)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/get(gobblin.runtime.JobState)|",
      "|java+method:///gobblin/metrics/MetricContext/getGauges()|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setJobName(java.lang.String)|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setTaskExecutions(gobblin.rest.TaskExecutionInfoArray)|",
      "|java+method:///gobblin/runtime/JobState/getLauncherType()|",
      "|java+constructor:///gobblin/rest/MetricArray/MetricArray()|",
      "|java+method:///gobblin/runtime/JobState$RunningState/name()|",
      "|java+method:///gobblin/rest/MetricArray/add(com.linkedin.data.template.DataTemplate)|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setLauncherType(gobblin.rest.LauncherTypeEnum)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/rest/MetricTypeEnum/valueOf(java.lang.String)|",
      "|java+method:///gobblin/runtime/JobState/getProp(java.lang.String)|",
      "|java+method:///gobblin/metrics/GobblinMetrics$MetricType/name()|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setLaunchedTasks(int)|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setEndTime(long)|",
      "|java+method:///gobblin/runtime/JobState/getCompletedTasks()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///gobblin/runtime/JobState/getPropertyNames()|",
      "|java+method:///gobblin/runtime/util/MetricGroup/name()|",
      "|java+method:///gobblin/rest/Metric/setType(gobblin.rest.MetricTypeEnum)|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setMetrics(gobblin.rest.MetricArray)|",
      "|java+method:///gobblin/rest/JobStateEnum/valueOf(java.lang.String)|",
      "|java+method:///java/util/SortedMap/entrySet()|",
      "|java+method:///com/codahale/metrics/Counter/getCount()|",
      "|java+method:///gobblin/metrics/MetricContext/getMeters()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///gobblin/rest/Metric/setName(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///gobblin/rest/Metric/Metric()|",
      "|java+constructor:///gobblin/rest/TaskExecutionInfoArray/TaskExecutionInfoArray()|",
      "|java+constructor:///gobblin/rest/JobExecutionInfo/JobExecutionInfo()|",
      "|java+method:///gobblin/runtime/util/JobMetrics/getMetricContext()|",
      "|java+method:///gobblin/rest/Metric/setGroup(java.lang.String)|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setTrackingUrl(java.lang.String)|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setJobId(java.lang.String)|",
      "|java+method:///gobblin/rest/JobExecutionInfo/setStartTime(long)|",
      "|java+method:///gobblin/runtime/JobState/getTrackingURL()|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///com/codahale/metrics/Gauge/getValue()|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-metrics:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/prepareHadoopJob(java.util.List)|",
    "called": "|java+method:///gobblin/metrics/event/EventSubmitter/getTimingEvent(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapOutputKeyClass(java.lang.Class)|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///gobblin/util/SerializationUtils/serializeState(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,gobblin.configuration.State)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/getConfiguration()|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/SequenceFileOutputFormat/setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapperClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setInputFormatClass(java.lang.Class)|",
      "|java+method:///gobblin/metrics/event/TimingEvent/stop()|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///gobblin/runtime/JobContext/getJobState()|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///gobblin/metrics/event/EventSubmitter/getTimingEvent(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setNumReduceTasks(int)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setSpeculativeExecution(boolean)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setJarByClass(java.lang.Class)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/prepareJobInput(java.util.List)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/input/NLineInputFormat/setNumLinesPerSplit(org.apache.hadoop.mapreduce.Job,int)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputFormatClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/input/NLineInputFormat/addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapOutputKeyClass(java.lang.Class)|",
      "|java+method:///gobblin/metrics/event/TimingEvent/stop()|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputFormatClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/input/FileInputFormat/addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapperClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setInputFormatClass(java.lang.Class)|",
      "|java+method:///gobblin/runtime/JobContext/getJobState()|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///gobblin/metrics/event/EventSubmitter/getTimingEvent(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setNumReduceTasks(int)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setSpeculativeExecution(boolean)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setJarByClass(java.lang.Class)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/prepareJobInput(java.util.List)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/input/NLineInputFormat/setNumLinesPerSplit(org.apache.hadoop.mapreduce.Job,int)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/FileOutputFormat/setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/serializeJobState(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration,gobblin.runtime.JobState,org.apache.hadoop.mapreduce.Job)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-metrics:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+constructor:///gobblin/runtime/local/LocalJobLauncher/LocalJobLauncher(java.util.Properties)|",
    "called": "|java+method:///gobblin/metrics/event/EventSubmitter/getTimingEvent(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///gobblin/runtime/local/LocalTaskStateTracker/LocalTaskStateTracker(java.util.Properties,gobblin.runtime.JobState,gobblin.runtime.TaskExecutor,com.google.common.eventbus.EventBus)|",
      "|java+method:///gobblin/runtime/JobContext/getJobState()|",
      "|java+constructor:///com/google/common/util/concurrent/ServiceManager/ServiceManager(java.lang.Iterable)|",
      "|java+method:///com/google/common/util/concurrent/ServiceManager/startAsync()|",
      "|java+method:///com/google/common/collect/ImmutableMap/of()|",
      "|java+method:///gobblin/runtime/local/LocalJobLauncher/startCancellationExecutor()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Object%5B%5D)|",
      "|java+method:///com/google/common/util/concurrent/ServiceManager/awaitHealthy(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///gobblin/metrics/event/TimingEvent/stop()|",
      "|java+constructor:///gobblin/runtime/TaskExecutor/TaskExecutor(java.util.Properties)|",
      "|java+method:///gobblin/metrics/event/EventSubmitter/getTimingEvent(java.lang.String)|",
      "|java+constructor:///gobblin/runtime/AbstractJobLauncher/AbstractJobLauncher(java.util.Properties,java.util.Map)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/ImmutableList/of()|",
      "|java+constructor:///gobblin/runtime/local/LocalTaskStateTracker/LocalTaskStateTracker(java.util.Properties,gobblin.runtime.JobState,gobblin.runtime.TaskExecutor,com.google.common.eventbus.EventBus)|",
      "|java+method:///gobblin/runtime/JobContext/getJobState()|",
      "|java+constructor:///com/google/common/util/concurrent/ServiceManager/ServiceManager(java.lang.Iterable)|",
      "|java+method:///com/google/common/util/concurrent/ServiceManager/startAsync()|",
      "|java+method:///gobblin/metrics/event/EventSubmitter/getTimingEvent(java.lang.String)|",
      "|java+constructor:///gobblin/runtime/AbstractJobLauncher/AbstractJobLauncher(java.util.Properties,java.util.List)|",
      "|java+method:///gobblin/runtime/local/LocalJobLauncher/startCancellationExecutor()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Object%5B%5D)|",
      "|java+method:///com/google/common/util/concurrent/ServiceManager/awaitHealthy(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///gobblin/metrics/event/TimingEvent/stop()|",
      "|java+constructor:///gobblin/runtime/TaskExecutor/TaskExecutor(java.util.Properties)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-metrics:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/addDependencies()|",
    "called": "|java+method:///gobblin/metrics/event/EventSubmitter/getTimingEvent(java.lang.String)|",
    "v1Body": [
      "|java+method:///gobblin/metrics/event/TimingEvent/stop()|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/addHDFSFiles(java.lang.String)|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/addJars(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///gobblin/metrics/event/EventSubmitter/getTimingEvent(java.lang.String)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/addLocalFiles(org.apache.hadoop.fs.Path,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///gobblin/metrics/event/TimingEvent/stop()|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/addHDFSFiles(java.lang.String)|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/addJars(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/addHdfsJars(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///gobblin/metrics/event/EventSubmitter/getTimingEvent(java.lang.String)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/addLocalFiles(org.apache.hadoop.fs.Path,java.lang.String)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-metrics:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+constructor:///gobblin/runtime/Fork/Fork(gobblin.runtime.TaskContext,java.lang.Object,int,int)|",
    "called": "|java+method:///gobblin/metrics/MetricContext/getName()|",
    "v1Body": [
      "|java+method:///gobblin/runtime/TaskContext/getTaskMetrics()|",
      "|java+method:///gobblin/runtime/TaskState/getProp(java.lang.String,java.lang.String)|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue$Builder/useTimeout(long)|",
      "|java+method:///gobblin/runtime/TaskContext/getConverters(int,gobblin.runtime.TaskState)|",
      "|java+method:///gobblin/runtime/Fork/buildWriterIfNotPresent()|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.String)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicReference/AtomicReference(java.lang.Object)|",
      "|java+method:///gobblin/runtime/TaskContext/getRowLevelPolicyChecker(int)|",
      "|java+method:///java/util/concurrent/TimeUnit/valueOf(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///gobblin/runtime/TaskState/getPropAsLong(java.lang.String,long)|",
      "|java+method:///gobblin/converter/Converter/convertSchema(java.lang.Object,gobblin.configuration.WorkUnitState)|",
      "|java+method:///gobblin/runtime/util/TaskMetrics/getMetricContext()|",
      "|java+constructor:///gobblin/qualitychecker/row/RowLevelPolicyCheckResults/RowLevelPolicyCheckResults()|",
      "|java+method:///gobblin/metrics/GobblinMetrics/getMetricContext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/runtime/Fork/getForkMetricsName(gobblin.runtime.util.TaskMetrics,gobblin.configuration.State,int)|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue$Builder/useTimeoutTimeUnit(java.util.concurrent.TimeUnit)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///com/google/common/io/Closer/register(java.io.Closeable)|",
      "|java+method:///gobblin/instrumented/Instrumented/setMetricContextName(gobblin.configuration.State,java.lang.String)|",
      "|java+method:///gobblin/runtime/TaskState/getTaskId()|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///gobblin/runtime/TaskContext/getTaskState()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///gobblin/runtime/TaskState/TaskState(gobblin.runtime.TaskState)|",
      "|java+method:///gobblin/runtime/TaskState/getPropAsInt(java.lang.String,int)|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue$Builder/hasCapacity(int)|",
      "|java+method:///gobblin/runtime/TaskState/getPropAsBoolean(java.lang.String,boolean)|",
      "|java+method:///gobblin/metrics/GobblinMetrics/get(java.lang.String,gobblin.metrics.MetricContext,java.util.List)|",
      "|java+constructor:///gobblin/runtime/MultiConverter/MultiConverter(java.util.List)|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue$Builder/build()|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue/newBuilder()|",
      "|java+method:///gobblin/metrics/MetricContext/getName()|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue$Builder/collectStats()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///com/google/common/io/Closer/create()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///gobblin/runtime/Fork/getForkMetricsTags(gobblin.configuration.State,int)|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///gobblin/runtime/TaskState/getProp(java.lang.String,java.lang.String)|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue$Builder/useTimeout(long)|",
      "|java+method:///gobblin/runtime/TaskContext/getConverters(int,gobblin.runtime.TaskState)|",
      "|java+method:///gobblin/runtime/Fork/buildWriterIfNotPresent()|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.String)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicReference/AtomicReference(java.lang.Object)|",
      "|java+method:///gobblin/runtime/TaskContext/getRowLevelPolicyChecker(int)|",
      "|java+method:///java/util/concurrent/TimeUnit/valueOf(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///gobblin/runtime/TaskState/getPropAsLong(java.lang.String,long)|",
      "|java+method:///gobblin/runtime/TaskContext/getTaskMetrics()|",
      "|java+method:///gobblin/metrics/GobblinMetrics/isEnabled(gobblin.configuration.State)|",
      "|java+method:///gobblin/converter/Converter/convertSchema(java.lang.Object,gobblin.configuration.WorkUnitState)|",
      "|java+method:///gobblin/runtime/util/TaskMetrics/getMetricContext()|",
      "|java+constructor:///gobblin/qualitychecker/row/RowLevelPolicyCheckResults/RowLevelPolicyCheckResults()|",
      "|java+method:///gobblin/metrics/GobblinMetrics/getMetricContext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/runtime/Fork/getForkMetricsName(gobblin.runtime.util.TaskMetrics,gobblin.configuration.State,int)|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue$Builder/useTimeoutTimeUnit(java.util.concurrent.TimeUnit)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///com/google/common/io/Closer/register(java.io.Closeable)|",
      "|java+method:///gobblin/instrumented/Instrumented/setMetricContextName(gobblin.configuration.State,java.lang.String)|",
      "|java+method:///gobblin/runtime/TaskState/getTaskId()|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///gobblin/runtime/TaskContext/getTaskState()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///gobblin/runtime/TaskState/TaskState(gobblin.runtime.TaskState)|",
      "|java+method:///gobblin/runtime/TaskState/getPropAsInt(java.lang.String,int)|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue$Builder/hasCapacity(int)|",
      "|java+method:///gobblin/runtime/TaskState/getPropAsBoolean(java.lang.String,boolean)|",
      "|java+method:///gobblin/metrics/GobblinMetrics/get(java.lang.String,gobblin.metrics.MetricContext,java.util.List)|",
      "|java+constructor:///gobblin/runtime/MultiConverter/MultiConverter(java.util.List)|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue$Builder/build()|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue/newBuilder()|",
      "|java+method:///gobblin/metrics/MetricContext/getName()|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue$Builder/collectStats()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///com/google/common/io/Closer/create()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///gobblin/runtime/Fork/getForkMetricsTags(gobblin.configuration.State,int)|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-metrics:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/local/LocalJobLauncher/runWorkUnits(java.util.List)|",
    "called": "|java+method:///gobblin/metrics/event/EventSubmitter/getTimingEvent(java.lang.String)|",
    "v1Body": [
      "|java+method:///gobblin/metrics/event/TimingEvent/stop()|",
      "|java+method:///gobblin/runtime/JobContext/getJobState()|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/runtime/JobState/getState()|",
      "|java+method:///java/util/concurrent/CountDownLatch/getCount()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///gobblin/runtime/AbstractJobLauncher/runWorkUnits(java.lang.String,java.util.List,gobblin.runtime.TaskStateTracker,gobblin.runtime.TaskExecutor,java.util.concurrent.CountDownLatch)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///gobblin/runtime/JobContext/getJobId()|",
      "|java+method:///gobblin/source/workunit/WorkUnit/addAllIfNotExist(gobblin.configuration.State)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///gobblin/metrics/event/EventSubmitter/getTimingEvent(java.lang.String)|",
      "|java+method:///gobblin/util/JobLauncherUtils/flattenWorkUnits(java.util.List)|",
      "|java+constructor:///java/util/concurrent/CountDownLatch/CountDownLatch(int)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///gobblin/runtime/JobState/setState(gobblin.runtime.JobState$RunningState)|",
      "|java+method:///java/util/concurrent/CountDownLatch/await(long,java.util.concurrent.TimeUnit)|"
    ],
    "v2Body": [
      "|java+method:///gobblin/runtime/AbstractJobLauncher/runWorkUnits(java.lang.String,gobblin.runtime.JobState,java.util.List,gobblin.runtime.TaskStateTracker,gobblin.runtime.TaskExecutor,java.util.concurrent.CountDownLatch)|",
      "|java+method:///gobblin/metrics/event/TimingEvent/stop()|",
      "|java+method:///gobblin/runtime/JobContext/getJobState()|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/runtime/JobState/getState()|",
      "|java+method:///java/util/concurrent/CountDownLatch/getCount()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///gobblin/runtime/JobContext/getJobId()|",
      "|java+method:///gobblin/source/workunit/WorkUnit/addAllIfNotExist(gobblin.configuration.State)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///gobblin/metrics/event/EventSubmitter/getTimingEvent(java.lang.String)|",
      "|java+method:///gobblin/util/JobLauncherUtils/flattenWorkUnits(java.util.List)|",
      "|java+constructor:///java/util/concurrent/CountDownLatch/CountDownLatch(int)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///gobblin/runtime/JobState/setState(gobblin.runtime.JobState$RunningState)|",
      "|java+method:///java/util/concurrent/CountDownLatch/await(long,java.util.concurrent.TimeUnit)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-metrics:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+constructor:///gobblin/runtime/JobContext/JobContext(java.util.Properties,org.slf4j.Logger)|",
    "called": "|java+method:///com/google/inject/Guice/createInjector(com.google.inject.Module%5B%5D)|",
    "v1Body": [
      "|java+method:///com/google/inject/Injector/getInstance(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///gobblin/runtime/util/JobMetrics/get(gobblin.runtime.JobState)|",
      "|java+method:///com/google/inject/Guice/createInjector(com.google.inject.Module%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/SourceDecorator/SourceDecorator(gobblin.source.Source,java.lang.String,org.slf4j.Logger)|",
      "|java+constructor:///gobblin/configuration/State/State()|",
      "|java+constructor:///gobblin/metastore/MetaStoreModule/MetaStoreModule(java.util.Properties)|",
      "|java+method:///gobblin/runtime/FsDatasetStateStore/getLatestDatasetStatesByUrns(java.lang.String)|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///java/util/Properties/stringPropertyNames()|",
      "|java+method:///java/lang/Boolean/toString()|",
      "|java+method:///gobblin/util/JobLauncherUtils/newJobId(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/addAll(java.util.Properties)|",
      "|java+method:///gobblin/runtime/JobContext/setTaskStagingAndOutputDirs()|",
      "|java+method:///gobblin/source/extractor/JobCommitPolicy/getCommitPolicy(java.util.Properties)|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/getName()|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///java/util/Properties/setProperty(java.lang.String,java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///gobblin/runtime/JobState/setProp(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Class/cast(java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/FsDatasetStateStore/FsDatasetStateStore(org.apache.hadoop.fs.FileSystem,java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+method:///gobblin/metrics/GobblinMetrics/isEnabled(java.util.Properties)|",
      "|java+constructor:///gobblin/runtime/JobState/JobState(gobblin.configuration.State,java.util.Map,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///com/google/inject/Injector/getInstance(java.lang.Class)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/get(gobblin.runtime.JobState)|",
      "|java+method:///gobblin/commit/DeliverySemantics/parse(gobblin.configuration.State)|",
      "|java+method:///com/google/inject/Guice/createInjector(com.google.inject.Module%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/SourceDecorator/SourceDecorator(gobblin.source.Source,java.lang.String,org.slf4j.Logger)|",
      "|java+constructor:///gobblin/configuration/State/State()|",
      "|java+constructor:///gobblin/metastore/MetaStoreModule/MetaStoreModule(java.util.Properties)|",
      "|java+method:///gobblin/runtime/FsDatasetStateStore/getLatestDatasetStatesByUrns(java.lang.String)|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///java/util/Properties/stringPropertyNames()|",
      "|java+method:///java/lang/Boolean/toString()|",
      "|java+method:///gobblin/util/JobLauncherUtils/newJobId(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/addAll(java.util.Properties)|",
      "|java+method:///gobblin/runtime/JobContext/setTaskStagingAndOutputDirs()|",
      "|java+method:///gobblin/source/extractor/JobCommitPolicy/getCommitPolicy(java.util.Properties)|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/getName()|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///java/util/Properties/setProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///gobblin/runtime/JobContext/createCommitSequenceStore()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/NoopDatasetStateStore/NoopDatasetStateStore(org.apache.hadoop.fs.FileSystem,java.lang.String)|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///gobblin/runtime/JobState/setProp(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Class/cast(java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/FsDatasetStateStore/FsDatasetStateStore(org.apache.hadoop.fs.FileSystem,java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+method:///gobblin/metrics/GobblinMetrics/isEnabled(java.util.Properties)|",
      "|java+constructor:///gobblin/runtime/JobState/JobState(gobblin.configuration.State,java.util.Map,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "com.google.inject:guice:4.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+constructor:///gobblin/runtime/Fork/Fork(gobblin.runtime.TaskContext,java.lang.Object,int,int)|",
    "called": "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.String)|",
    "v1Body": [
      "|java+method:///gobblin/runtime/TaskContext/getTaskMetrics()|",
      "|java+method:///gobblin/runtime/TaskState/getProp(java.lang.String,java.lang.String)|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue$Builder/useTimeout(long)|",
      "|java+method:///gobblin/runtime/TaskContext/getConverters(int,gobblin.runtime.TaskState)|",
      "|java+method:///gobblin/runtime/Fork/buildWriterIfNotPresent()|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.String)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicReference/AtomicReference(java.lang.Object)|",
      "|java+method:///gobblin/runtime/TaskContext/getRowLevelPolicyChecker(int)|",
      "|java+method:///java/util/concurrent/TimeUnit/valueOf(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///gobblin/runtime/TaskState/getPropAsLong(java.lang.String,long)|",
      "|java+method:///gobblin/converter/Converter/convertSchema(java.lang.Object,gobblin.configuration.WorkUnitState)|",
      "|java+method:///gobblin/runtime/util/TaskMetrics/getMetricContext()|",
      "|java+constructor:///gobblin/qualitychecker/row/RowLevelPolicyCheckResults/RowLevelPolicyCheckResults()|",
      "|java+method:///gobblin/metrics/GobblinMetrics/getMetricContext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/runtime/Fork/getForkMetricsName(gobblin.runtime.util.TaskMetrics,gobblin.configuration.State,int)|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue$Builder/useTimeoutTimeUnit(java.util.concurrent.TimeUnit)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///com/google/common/io/Closer/register(java.io.Closeable)|",
      "|java+method:///gobblin/instrumented/Instrumented/setMetricContextName(gobblin.configuration.State,java.lang.String)|",
      "|java+method:///gobblin/runtime/TaskState/getTaskId()|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///gobblin/runtime/TaskContext/getTaskState()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///gobblin/runtime/TaskState/TaskState(gobblin.runtime.TaskState)|",
      "|java+method:///gobblin/runtime/TaskState/getPropAsInt(java.lang.String,int)|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue$Builder/hasCapacity(int)|",
      "|java+method:///gobblin/runtime/TaskState/getPropAsBoolean(java.lang.String,boolean)|",
      "|java+method:///gobblin/metrics/GobblinMetrics/get(java.lang.String,gobblin.metrics.MetricContext,java.util.List)|",
      "|java+constructor:///gobblin/runtime/MultiConverter/MultiConverter(java.util.List)|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue$Builder/build()|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue/newBuilder()|",
      "|java+method:///gobblin/metrics/MetricContext/getName()|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue$Builder/collectStats()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///com/google/common/io/Closer/create()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///gobblin/runtime/Fork/getForkMetricsTags(gobblin.configuration.State,int)|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///gobblin/runtime/TaskState/getProp(java.lang.String,java.lang.String)|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue$Builder/useTimeout(long)|",
      "|java+method:///gobblin/runtime/TaskContext/getConverters(int,gobblin.runtime.TaskState)|",
      "|java+method:///gobblin/runtime/Fork/buildWriterIfNotPresent()|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.String)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicReference/AtomicReference(java.lang.Object)|",
      "|java+method:///gobblin/runtime/TaskContext/getRowLevelPolicyChecker(int)|",
      "|java+method:///java/util/concurrent/TimeUnit/valueOf(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///gobblin/runtime/TaskState/getPropAsLong(java.lang.String,long)|",
      "|java+method:///gobblin/runtime/TaskContext/getTaskMetrics()|",
      "|java+method:///gobblin/metrics/GobblinMetrics/isEnabled(gobblin.configuration.State)|",
      "|java+method:///gobblin/converter/Converter/convertSchema(java.lang.Object,gobblin.configuration.WorkUnitState)|",
      "|java+method:///gobblin/runtime/util/TaskMetrics/getMetricContext()|",
      "|java+constructor:///gobblin/qualitychecker/row/RowLevelPolicyCheckResults/RowLevelPolicyCheckResults()|",
      "|java+method:///gobblin/metrics/GobblinMetrics/getMetricContext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/runtime/Fork/getForkMetricsName(gobblin.runtime.util.TaskMetrics,gobblin.configuration.State,int)|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue$Builder/useTimeoutTimeUnit(java.util.concurrent.TimeUnit)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///com/google/common/io/Closer/register(java.io.Closeable)|",
      "|java+method:///gobblin/instrumented/Instrumented/setMetricContextName(gobblin.configuration.State,java.lang.String)|",
      "|java+method:///gobblin/runtime/TaskState/getTaskId()|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///gobblin/runtime/TaskContext/getTaskState()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///gobblin/runtime/TaskState/TaskState(gobblin.runtime.TaskState)|",
      "|java+method:///gobblin/runtime/TaskState/getPropAsInt(java.lang.String,int)|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue$Builder/hasCapacity(int)|",
      "|java+method:///gobblin/runtime/TaskState/getPropAsBoolean(java.lang.String,boolean)|",
      "|java+method:///gobblin/metrics/GobblinMetrics/get(java.lang.String,gobblin.metrics.MetricContext,java.util.List)|",
      "|java+constructor:///gobblin/runtime/MultiConverter/MultiConverter(java.util.List)|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue$Builder/build()|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue/newBuilder()|",
      "|java+method:///gobblin/metrics/MetricContext/getName()|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue$Builder/collectStats()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///com/google/common/io/Closer/create()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///gobblin/runtime/Fork/getForkMetricsTags(gobblin.configuration.State,int)|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|"
    ],
    "affectedLib": "org.slf4j:slf4j-api:1.7.21",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/TaskState/toJson(com.google.gson.stream.JsonWriter,boolean)|",
    "called": "|java+method:///com/google/gson/stream/JsonWriter/beginObject()|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///com/google/gson/stream/JsonWriter/name(java.lang.String)|",
      "|java+method:///com/google/gson/stream/JsonWriter/beginObject()|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///com/google/gson/stream/JsonWriter/value(java.lang.String)|",
      "|java+method:///gobblin/runtime/TaskState/getTaskDuration()|",
      "|java+method:///gobblin/runtime/TaskState/getEndTime()|",
      "|java+method:///gobblin/configuration/WorkUnitState$WorkingState/name()|",
      "|java+method:///gobblin/runtime/TaskState/getStartTime()|",
      "|java+method:///gobblin/runtime/TaskState/getPropAsInt(java.lang.String,int)|",
      "|java+method:///gobblin/runtime/TaskState/getPropertyNames()|",
      "|java+method:///gobblin/runtime/TaskState/getTaskFailureException()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///gobblin/runtime/TaskState/getHighWaterMark()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/runtime/TaskState/getProp(java.lang.String)|",
      "|java+method:///com/google/gson/stream/JsonWriter/value(long)|",
      "|java+method:///gobblin/runtime/TaskState/getTaskId()|",
      "|java+method:///gobblin/runtime/TaskState/getWorkingState()|",
      "|java+method:///com/google/gson/stream/JsonWriter/endObject()|",
      "|java+method:///java/util/Set/iterator()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///com/google/gson/stream/JsonWriter/name(java.lang.String)|",
      "|java+method:///com/google/gson/stream/JsonWriter/beginObject()|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/google/gson/stream/JsonWriter/value(java.lang.String)|",
      "|java+method:///gobblin/runtime/TaskState/getTaskDuration()|",
      "|java+method:///gobblin/runtime/TaskState/getEndTime()|",
      "|java+method:///gobblin/configuration/WorkUnitState$WorkingState/name()|",
      "|java+method:///gobblin/runtime/TaskState/getStartTime()|",
      "|java+method:///gobblin/runtime/TaskState/getPropAsInt(java.lang.String,int)|",
      "|java+method:///gobblin/runtime/TaskState/getPropertyNames()|",
      "|java+method:///gobblin/runtime/TaskState/getTaskFailureException()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/runtime/TaskState/getProp(java.lang.String)|",
      "|java+method:///com/google/gson/stream/JsonWriter/value(long)|",
      "|java+method:///gobblin/runtime/TaskState/getTaskId()|",
      "|java+method:///gobblin/runtime/TaskState/getWorkingState()|",
      "|java+method:///com/google/gson/stream/JsonWriter/endObject()|",
      "|java+method:///java/util/Set/iterator()|"
    ],
    "affectedLib": "com.google.code.gson:gson:2.6.2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/JobState/toString()|",
    "called": "|java+method:///com/google/gson/stream/JsonWriter/close()|",
    "v1Body": [
      "|java+method:///com/google/gson/stream/JsonWriter/setIndent(java.lang.String)|",
      "|java+constructor:///com/google/gson/stream/JsonWriter/JsonWriter(java.io.Writer)|",
      "|java+constructor:///java/io/StringWriter/StringWriter()|",
      "|java+method:///java/io/StringWriter/toString()|",
      "|java+method:///gobblin/runtime/JobState/toJson(com.google.gson.stream.JsonWriter,boolean)|"
    ],
    "v2Body": [
      "|java+method:///com/google/gson/stream/JsonWriter/setIndent(java.lang.String)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+constructor:///com/google/gson/stream/JsonWriter/JsonWriter(java.io.Writer)|",
      "|java+method:///com/google/gson/stream/JsonWriter/close()|",
      "|java+constructor:///java/io/StringWriter/StringWriter()|",
      "|java+method:///java/io/StringWriter/toString()|",
      "|java+method:///gobblin/runtime/JobState/toJson(com.google.gson.stream.JsonWriter,boolean)|"
    ],
    "affectedLib": "com.google.code.gson:gson:2.6.2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/MultiConverter/getFinalState()|",
    "called": "|java+method:///gobblin/state/ConstructState/addConstructState(gobblin.Constructs,gobblin.state.ConstructState,java.lang.String)|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///gobblin/converter/Converter/getFinalState()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///gobblin/configuration/State/addAll(gobblin.configuration.State)|"
    ],
    "v2Body": [
      "|java+method:///gobblin/converter/Converter/getFinalState()|",
      "|java+method:///java/lang/Integer/toString(int)|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///gobblin/state/ConstructState/ConstructState(gobblin.configuration.State)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///gobblin/state/ConstructState/addConstructState(gobblin.Constructs,gobblin.state.ConstructState,java.lang.String)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-core:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/TaskContext/getForkOperator()|",
    "called": "|java+constructor:///gobblin/instrumented/fork/InstrumentedForkOperatorDecorator/InstrumentedForkOperatorDecorator(gobblin.fork.ForkOperator)|",
    "v1Body": [
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/lang/Class/cast(java.lang.Object)|",
      "|java+method:///gobblin/source/workunit/WorkUnit/getProp(java.lang.String,java.lang.String)|",
      "|java+constructor:///gobblin/instrumented/fork/InstrumentedForkOperatorDecorator/InstrumentedForkOperatorDecorator(gobblin.fork.ForkOperator)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///gobblin/runtime/TaskState/getProp(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/lang/Class/cast(java.lang.Object)|",
      "|java+constructor:///gobblin/instrumented/fork/InstrumentedForkOperatorDecorator/InstrumentedForkOperatorDecorator(gobblin.fork.ForkOperator)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-core:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/Fork/getFinalState()|",
    "called": "|java+method:///gobblin/qualitychecker/row/RowLevelPolicyChecker/getFinalState()|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///gobblin/converter/Converter/getFinalState()|",
      "|java+method:///gobblin/qualitychecker/row/RowLevelPolicyChecker/getFinalState()|",
      "|java+method:///gobblin/configuration/State/addAll(gobblin.configuration.State)|",
      "|java+method:///gobblin/util/FinalState/getFinalState()|",
      "|java+method:///com/google/common/base/Optional/isPresent()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///gobblin/converter/Converter/getFinalState()|",
      "|java+method:///gobblin/qualitychecker/row/RowLevelPolicyChecker/getFinalState()|",
      "|java+constructor:///gobblin/state/ConstructState/ConstructState()|",
      "|java+constructor:///gobblin/state/ConstructState/ConstructState(gobblin.configuration.State)|",
      "|java+method:///gobblin/state/ConstructState/addConstructState(gobblin.Constructs,gobblin.state.ConstructState)|",
      "|java+method:///gobblin/util/FinalState/getFinalState()|",
      "|java+method:///com/google/common/base/Optional/isPresent()|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-core:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/Task/processRecord(java.lang.Object,gobblin.fork.ForkOperator,gobblin.qualitychecker.row.RowLevelPolicyChecker,gobblin.qualitychecker.row.RowLevelPolicyCheckResults,int)|",
    "called": "|java+method:///gobblin/qualitychecker/row/RowLevelPolicyChecker/executePolicies(java.lang.Object,gobblin.qualitychecker.row.RowLevelPolicyCheckResults)|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+constructor:///gobblin/fork/CopyNotSupportedException/CopyNotSupportedException(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///gobblin/qualitychecker/row/RowLevelPolicyChecker/executePolicies(java.lang.Object,gobblin.qualitychecker.row.RowLevelPolicyCheckResults)|",
      "|java+constructor:///gobblin/runtime/ForkBranchMismatchException/ForkBranchMismatchException(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///gobblin/runtime/Task/inMultipleBranches(java.util.List)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///gobblin/runtime/Fork/putRecord(java.lang.Object)|",
      "|java+method:///gobblin/fork/ForkOperator/forkDataRecord(gobblin.configuration.WorkUnitState,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/fork/Copyable/copy()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+constructor:///gobblin/fork/CopyNotSupportedException/CopyNotSupportedException(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///gobblin/qualitychecker/row/RowLevelPolicyChecker/executePolicies(java.lang.Object,gobblin.qualitychecker.row.RowLevelPolicyCheckResults)|",
      "|java+constructor:///gobblin/runtime/ForkBranchMismatchException/ForkBranchMismatchException(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///gobblin/runtime/Fork/putRecord(java.lang.Object)|",
      "|java+method:///gobblin/fork/ForkOperator/forkDataRecord(gobblin.configuration.WorkUnitState,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/fork/Copyable/copy()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///gobblin/runtime/Task/inMultipleBranches(java.util.List)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-core:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher$TaskRunner/cleanup(org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+method:///gobblin/metrics/GobblinMetrics/remove(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///com/google/common/util/concurrent/ServiceManager/awaitStopped(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/remove(java.lang.String)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/triggerMetricReporting()|",
      "|java+method:///gobblin/runtime/util/JobMetrics/stopMetricReporting()|",
      "|java+method:///com/google/common/util/concurrent/ServiceManager/stopAsync()|",
      "|java+method:///gobblin/runtime/util/JobMetrics/getName()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///com/google/common/util/concurrent/ServiceManager/awaitStopped(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///gobblin/metrics/GobblinMetrics/remove(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///gobblin/runtime/util/JobMetrics/stopMetricsReporting()|",
      "|java+method:///com/google/common/util/concurrent/ServiceManager/stopAsync()|",
      "|java+method:///gobblin/runtime/util/JobMetrics/getName()|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-core:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+constructor:///gobblin/runtime/Fork/Fork(gobblin.runtime.TaskContext,java.lang.Object,int,int)|",
    "called": "|java+method:///gobblin/metrics/GobblinMetrics/get(java.lang.String,gobblin.metrics.MetricContext,java.util.List)|",
    "v1Body": [
      "|java+method:///gobblin/runtime/TaskContext/getTaskMetrics()|",
      "|java+method:///gobblin/runtime/TaskState/getProp(java.lang.String,java.lang.String)|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue$Builder/useTimeout(long)|",
      "|java+method:///gobblin/runtime/TaskContext/getConverters(int,gobblin.runtime.TaskState)|",
      "|java+method:///gobblin/runtime/Fork/buildWriterIfNotPresent()|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.String)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicReference/AtomicReference(java.lang.Object)|",
      "|java+method:///gobblin/runtime/TaskContext/getRowLevelPolicyChecker(int)|",
      "|java+method:///java/util/concurrent/TimeUnit/valueOf(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///gobblin/runtime/TaskState/getPropAsLong(java.lang.String,long)|",
      "|java+method:///gobblin/converter/Converter/convertSchema(java.lang.Object,gobblin.configuration.WorkUnitState)|",
      "|java+method:///gobblin/runtime/util/TaskMetrics/getMetricContext()|",
      "|java+constructor:///gobblin/qualitychecker/row/RowLevelPolicyCheckResults/RowLevelPolicyCheckResults()|",
      "|java+method:///gobblin/metrics/GobblinMetrics/getMetricContext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/runtime/Fork/getForkMetricsName(gobblin.runtime.util.TaskMetrics,gobblin.configuration.State,int)|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue$Builder/useTimeoutTimeUnit(java.util.concurrent.TimeUnit)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///com/google/common/io/Closer/register(java.io.Closeable)|",
      "|java+method:///gobblin/instrumented/Instrumented/setMetricContextName(gobblin.configuration.State,java.lang.String)|",
      "|java+method:///gobblin/runtime/TaskState/getTaskId()|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///gobblin/runtime/TaskContext/getTaskState()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///gobblin/runtime/TaskState/TaskState(gobblin.runtime.TaskState)|",
      "|java+method:///gobblin/runtime/TaskState/getPropAsInt(java.lang.String,int)|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue$Builder/hasCapacity(int)|",
      "|java+method:///gobblin/runtime/TaskState/getPropAsBoolean(java.lang.String,boolean)|",
      "|java+method:///gobblin/metrics/GobblinMetrics/get(java.lang.String,gobblin.metrics.MetricContext,java.util.List)|",
      "|java+constructor:///gobblin/runtime/MultiConverter/MultiConverter(java.util.List)|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue$Builder/build()|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue/newBuilder()|",
      "|java+method:///gobblin/metrics/MetricContext/getName()|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue$Builder/collectStats()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///com/google/common/io/Closer/create()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///gobblin/runtime/Fork/getForkMetricsTags(gobblin.configuration.State,int)|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///gobblin/runtime/TaskState/getProp(java.lang.String,java.lang.String)|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue$Builder/useTimeout(long)|",
      "|java+method:///gobblin/runtime/TaskContext/getConverters(int,gobblin.runtime.TaskState)|",
      "|java+method:///gobblin/runtime/Fork/buildWriterIfNotPresent()|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.String)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicReference/AtomicReference(java.lang.Object)|",
      "|java+method:///gobblin/runtime/TaskContext/getRowLevelPolicyChecker(int)|",
      "|java+method:///java/util/concurrent/TimeUnit/valueOf(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///gobblin/runtime/TaskState/getPropAsLong(java.lang.String,long)|",
      "|java+method:///gobblin/runtime/TaskContext/getTaskMetrics()|",
      "|java+method:///gobblin/metrics/GobblinMetrics/isEnabled(gobblin.configuration.State)|",
      "|java+method:///gobblin/converter/Converter/convertSchema(java.lang.Object,gobblin.configuration.WorkUnitState)|",
      "|java+method:///gobblin/runtime/util/TaskMetrics/getMetricContext()|",
      "|java+constructor:///gobblin/qualitychecker/row/RowLevelPolicyCheckResults/RowLevelPolicyCheckResults()|",
      "|java+method:///gobblin/metrics/GobblinMetrics/getMetricContext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/runtime/Fork/getForkMetricsName(gobblin.runtime.util.TaskMetrics,gobblin.configuration.State,int)|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue$Builder/useTimeoutTimeUnit(java.util.concurrent.TimeUnit)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///com/google/common/io/Closer/register(java.io.Closeable)|",
      "|java+method:///gobblin/instrumented/Instrumented/setMetricContextName(gobblin.configuration.State,java.lang.String)|",
      "|java+method:///gobblin/runtime/TaskState/getTaskId()|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///gobblin/runtime/TaskContext/getTaskState()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///gobblin/runtime/TaskState/TaskState(gobblin.runtime.TaskState)|",
      "|java+method:///gobblin/runtime/TaskState/getPropAsInt(java.lang.String,int)|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue$Builder/hasCapacity(int)|",
      "|java+method:///gobblin/runtime/TaskState/getPropAsBoolean(java.lang.String,boolean)|",
      "|java+method:///gobblin/metrics/GobblinMetrics/get(java.lang.String,gobblin.metrics.MetricContext,java.util.List)|",
      "|java+constructor:///gobblin/runtime/MultiConverter/MultiConverter(java.util.List)|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue$Builder/build()|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue/newBuilder()|",
      "|java+method:///gobblin/metrics/MetricContext/getName()|",
      "|java+method:///gobblin/runtime/BoundedBlockingRecordQueue$Builder/collectStats()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///com/google/common/io/Closer/create()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///gobblin/runtime/Fork/getForkMetricsTags(gobblin.configuration.State,int)|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-core:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/TaskContext/getConverters(int,gobblin.runtime.TaskState)|",
    "called": "|java+constructor:///gobblin/instrumented/converter/InstrumentedConverterDecorator/InstrumentedConverterDecorator(gobblin.converter.Converter)|",
    "v1Body": [
      "|java+method:///gobblin/instrumented/converter/InstrumentedConverterDecorator/init(gobblin.configuration.WorkUnitState)|",
      "|java+method:///gobblin/source/workunit/WorkUnit/contains(java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/split(java.lang.CharSequence)|",
      "|java+constructor:///gobblin/instrumented/converter/InstrumentedConverterDecorator/InstrumentedConverterDecorator(gobblin.converter.Converter)|",
      "|java+method:///gobblin/runtime/TaskState/setProp(java.lang.String,java.lang.Object)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Class/cast(java.lang.Object)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/google/common/base/Splitter/on(java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/omitEmptyStrings()|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///gobblin/source/workunit/WorkUnit/getProp(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///com/google/common/base/Splitter/trimResults()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///gobblin/instrumented/converter/InstrumentedConverterDecorator/init(gobblin.configuration.WorkUnitState)|",
      "|java+method:///com/google/common/base/Splitter/split(java.lang.CharSequence)|",
      "|java+constructor:///gobblin/instrumented/converter/InstrumentedConverterDecorator/InstrumentedConverterDecorator(gobblin.converter.Converter)|",
      "|java+method:///gobblin/runtime/TaskState/setProp(java.lang.String,java.lang.Object)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+method:///java/lang/Class/cast(java.lang.Object)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/google/common/base/Splitter/on(java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/omitEmptyStrings()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///com/google/common/base/Splitter/trimResults()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/runtime/TaskState/getProp(java.lang.String)|",
      "|java+method:///gobblin/runtime/TaskState/contains(java.lang.String)|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-core:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/Task/addConstructsFinalStateToTaskState(gobblin.instrumented.extractor.InstrumentedExtractorBase,gobblin.converter.Converter,gobblin.qualitychecker.row.RowLevelPolicyChecker)|",
    "called": "|java+method:///gobblin/qualitychecker/row/RowLevelPolicyChecker/getFinalState()|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/converter/Converter/getFinalState()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///gobblin/qualitychecker/row/RowLevelPolicyChecker/getFinalState()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/runtime/util/RuntimeConstructs/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///gobblin/Constructs/toString()|",
      "|java+method:///gobblin/runtime/TaskState/addFinalConstructState(java.lang.String,gobblin.configuration.State)|",
      "|java+method:///gobblin/instrumented/extractor/InstrumentedExtractorBase/getFinalState()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/String/toLowerCase()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///gobblin/runtime/Fork/getFinalState()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///gobblin/converter/Converter/getFinalState()|",
      "|java+method:///java/lang/Integer/toString(int)|",
      "|java+method:///gobblin/qualitychecker/row/RowLevelPolicyChecker/getFinalState()|",
      "|java+constructor:///gobblin/state/ConstructState/ConstructState()|",
      "|java+constructor:///gobblin/state/ConstructState/ConstructState(gobblin.configuration.State)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///gobblin/state/ConstructState/mergeIntoWorkUnitState(gobblin.configuration.WorkUnitState)|",
      "|java+method:///gobblin/state/ConstructState/addConstructState(gobblin.Constructs,gobblin.state.ConstructState,java.lang.String)|",
      "|java+method:///gobblin/instrumented/extractor/InstrumentedExtractorBase/getFinalState()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///gobblin/state/ConstructState/addConstructState(gobblin.Constructs,gobblin.state.ConstructState)|",
      "|java+method:///gobblin/runtime/Fork/getFinalState()|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-core:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+constructor:///gobblin/runtime/JobContext/JobContext(java.util.Properties,org.slf4j.Logger)|",
    "called": "|java+method:///gobblin/metrics/GobblinMetrics/isEnabled(java.util.Properties)|",
    "v1Body": [
      "|java+method:///com/google/inject/Injector/getInstance(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///gobblin/runtime/util/JobMetrics/get(gobblin.runtime.JobState)|",
      "|java+method:///com/google/inject/Guice/createInjector(com.google.inject.Module%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/SourceDecorator/SourceDecorator(gobblin.source.Source,java.lang.String,org.slf4j.Logger)|",
      "|java+constructor:///gobblin/configuration/State/State()|",
      "|java+constructor:///gobblin/metastore/MetaStoreModule/MetaStoreModule(java.util.Properties)|",
      "|java+method:///gobblin/runtime/FsDatasetStateStore/getLatestDatasetStatesByUrns(java.lang.String)|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///java/util/Properties/stringPropertyNames()|",
      "|java+method:///java/lang/Boolean/toString()|",
      "|java+method:///gobblin/util/JobLauncherUtils/newJobId(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/addAll(java.util.Properties)|",
      "|java+method:///gobblin/runtime/JobContext/setTaskStagingAndOutputDirs()|",
      "|java+method:///gobblin/source/extractor/JobCommitPolicy/getCommitPolicy(java.util.Properties)|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/getName()|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///java/util/Properties/setProperty(java.lang.String,java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///gobblin/runtime/JobState/setProp(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Class/cast(java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/FsDatasetStateStore/FsDatasetStateStore(org.apache.hadoop.fs.FileSystem,java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+method:///gobblin/metrics/GobblinMetrics/isEnabled(java.util.Properties)|",
      "|java+constructor:///gobblin/runtime/JobState/JobState(gobblin.configuration.State,java.util.Map,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///com/google/inject/Injector/getInstance(java.lang.Class)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/get(gobblin.runtime.JobState)|",
      "|java+method:///gobblin/commit/DeliverySemantics/parse(gobblin.configuration.State)|",
      "|java+method:///com/google/inject/Guice/createInjector(com.google.inject.Module%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/SourceDecorator/SourceDecorator(gobblin.source.Source,java.lang.String,org.slf4j.Logger)|",
      "|java+constructor:///gobblin/configuration/State/State()|",
      "|java+constructor:///gobblin/metastore/MetaStoreModule/MetaStoreModule(java.util.Properties)|",
      "|java+method:///gobblin/runtime/FsDatasetStateStore/getLatestDatasetStatesByUrns(java.lang.String)|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///java/util/Properties/stringPropertyNames()|",
      "|java+method:///java/lang/Boolean/toString()|",
      "|java+method:///gobblin/util/JobLauncherUtils/newJobId(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/addAll(java.util.Properties)|",
      "|java+method:///gobblin/runtime/JobContext/setTaskStagingAndOutputDirs()|",
      "|java+method:///gobblin/source/extractor/JobCommitPolicy/getCommitPolicy(java.util.Properties)|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/getName()|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///java/util/Properties/setProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///gobblin/runtime/JobContext/createCommitSequenceStore()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/NoopDatasetStateStore/NoopDatasetStateStore(org.apache.hadoop.fs.FileSystem,java.lang.String)|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///gobblin/runtime/JobState/setProp(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Class/cast(java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/FsDatasetStateStore/FsDatasetStateStore(org.apache.hadoop.fs.FileSystem,java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+method:///gobblin/metrics/GobblinMetrics/isEnabled(java.util.Properties)|",
      "|java+constructor:///gobblin/runtime/JobState/JobState(gobblin.configuration.State,java.util.Map,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-core:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/Task/run()|",
    "called": "|java+method:///gobblin/qualitychecker/row/RowLevelPolicyCheckResults/getResults()|",
    "v1Body": [
      "|java+method:///gobblin/runtime/Fork/isSucceeded()|",
      "|java+method:///gobblin/runtime/TaskStateTracker/onTaskCompletion(gobblin.runtime.Task)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///gobblin/runtime/Task/getBytesWritten()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///gobblin/runtime/TaskState/setWorkingState(gobblin.configuration.WorkUnitState$WorkingState)|",
      "|java+method:///gobblin/runtime/Task/shouldPublishDataInTask()|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///gobblin/runtime/TaskContext/getConverters()|",
      "|java+method:///gobblin/runtime/Fork/commit()|",
      "|java+method:///gobblin/instrumented/extractor/InstrumentedExtractorBase/getSchema()|",
      "|java+constructor:///gobblin/fork/CopyNotSupportedException/CopyNotSupportedException(java.lang.String)|",
      "|java+method:///gobblin/runtime/TaskState/setEndTime(long)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///gobblin/converter/Converter/convertSchema(java.lang.Object,gobblin.configuration.WorkUnitState)|",
      "|java+method:///gobblin/fork/ForkOperator/getBranches(gobblin.configuration.WorkUnitState)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///gobblin/runtime/Task/processRecord(java.lang.Object,gobblin.fork.ForkOperator,gobblin.qualitychecker.row.RowLevelPolicyChecker,gobblin.qualitychecker.row.RowLevelPolicyCheckResults,int)|",
      "|java+constructor:///gobblin/qualitychecker/row/RowLevelPolicyCheckResults/RowLevelPolicyCheckResults()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/fork/Copyable/copy()|",
      "|java+method:///gobblin/runtime/Task/addConstructsFinalStateToTaskState(gobblin.instrumented.extractor.InstrumentedExtractorBase,gobblin.converter.Converter,gobblin.qualitychecker.row.RowLevelPolicyChecker)|",
      "|java+constructor:///gobblin/instrumented/extractor/InstrumentedExtractorDecorator/InstrumentedExtractorDecorator(gobblin.configuration.WorkUnitState,gobblin.source.extractor.Extractor)|",
      "|java+method:///gobblin/runtime/TaskContext/getExtractor()|",
      "|java+method:///gobblin/runtime/Fork/markParentTaskDone()|",
      "|java+method:///com/google/common/io/Closer/register(java.io.Closeable)|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+method:///gobblin/converter/Converter/convertRecord(java.lang.Object,java.lang.Object,gobblin.configuration.WorkUnitState)|",
      "|java+method:///gobblin/runtime/TaskState/setStartTime(long)|",
      "|java+method:///gobblin/runtime/Task/publishTaskData()|",
      "|java+method:///gobblin/runtime/TaskState/setProp(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///com/google/common/io/Closer/close()|",
      "|java+method:///java/lang/Thread/interrupt()|",
      "|java+constructor:///gobblin/runtime/ForkBranchMismatchException/ForkBranchMismatchException(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///gobblin/runtime/Task/failTask(java.lang.Throwable)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/runtime/Task/inMultipleBranches(java.util.List)|",
      "|java+method:///java/util/concurrent/CompletionService/take()|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/concurrent/CompletionService/submit(java.lang.Runnable,java.lang.Object)|",
      "|java+method:///java/util/List/clear()|",
      "|java+method:///gobblin/runtime/TaskContext/getForkOperator()|",
      "|java+constructor:///gobblin/runtime/MultiConverter/MultiConverter(java.util.List)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///gobblin/qualitychecker/row/RowLevelPolicyCheckResults/getResults()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///gobblin/runtime/Task/getRecordsWritten()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///gobblin/instrumented/extractor/InstrumentedExtractorBase/getExpectedRecordCount()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///gobblin/fork/ForkOperator/init(gobblin.configuration.WorkUnitState)|",
      "|java+method:///gobblin/runtime/TaskState/setTaskDuration(long)|",
      "|java+method:///gobblin/instrumented/extractor/InstrumentedExtractorBase/readRecord(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///com/google/common/io/Closer/create()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///gobblin/runtime/TaskContext/getRowLevelPolicyChecker()|",
      "|java+constructor:///gobblin/runtime/Fork/Fork(gobblin.runtime.TaskContext,java.lang.Object,int,int)|",
      "|java+method:///gobblin/fork/ForkOperator/forkSchema(gobblin.configuration.WorkUnitState,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///gobblin/runtime/Fork/isSucceeded()|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///gobblin/runtime/TaskState/setWorkingState(gobblin.configuration.WorkUnitState$WorkingState)|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///gobblin/runtime/TaskStateTracker/onTaskCompletion(gobblin.runtime.Task)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///gobblin/runtime/TaskContext/getConverters()|",
      "|java+method:///gobblin/runtime/Fork/commit()|",
      "|java+method:///gobblin/instrumented/extractor/InstrumentedExtractorBase/getSchema()|",
      "|java+constructor:///gobblin/fork/CopyNotSupportedException/CopyNotSupportedException(java.lang.String)|",
      "|java+method:///gobblin/runtime/TaskState/setEndTime(long)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///gobblin/converter/Converter/convertSchema(java.lang.Object,gobblin.configuration.WorkUnitState)|",
      "|java+method:///gobblin/fork/ForkOperator/getBranches(gobblin.configuration.WorkUnitState)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///gobblin/runtime/Task/processRecord(java.lang.Object,gobblin.fork.ForkOperator,gobblin.qualitychecker.row.RowLevelPolicyChecker,gobblin.qualitychecker.row.RowLevelPolicyCheckResults,int)|",
      "|java+constructor:///gobblin/qualitychecker/row/RowLevelPolicyCheckResults/RowLevelPolicyCheckResults()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///gobblin/fork/Copyable/copy()|",
      "|java+method:///gobblin/runtime/Task/addConstructsFinalStateToTaskState(gobblin.instrumented.extractor.InstrumentedExtractorBase,gobblin.converter.Converter,gobblin.qualitychecker.row.RowLevelPolicyChecker)|",
      "|java+constructor:///gobblin/instrumented/extractor/InstrumentedExtractorDecorator/InstrumentedExtractorDecorator(gobblin.configuration.WorkUnitState,gobblin.source.extractor.Extractor)|",
      "|java+method:///gobblin/runtime/TaskContext/getExtractor()|",
      "|java+method:///gobblin/runtime/Fork/markParentTaskDone()|",
      "|java+method:///com/google/common/io/Closer/register(java.io.Closeable)|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+method:///gobblin/converter/Converter/convertRecord(java.lang.Object,java.lang.Object,gobblin.configuration.WorkUnitState)|",
      "|java+method:///gobblin/runtime/TaskState/setStartTime(long)|",
      "|java+method:///gobblin/runtime/Task/publishTaskData()|",
      "|java+method:///gobblin/runtime/TaskState/setProp(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///com/google/common/io/Closer/close()|",
      "|java+method:///java/lang/Thread/interrupt()|",
      "|java+constructor:///gobblin/runtime/ForkBranchMismatchException/ForkBranchMismatchException(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///gobblin/runtime/Task/failTask(java.lang.Throwable)|",
      "|java+method:///gobblin/runtime/Task/getBytesWritten()|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///gobblin/runtime/Task/inMultipleBranches(java.util.List)|",
      "|java+method:///gobblin/runtime/TaskExecutor/submit(gobblin.runtime.Fork)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/concurrent/Future/cancel(boolean)|",
      "|java+method:///gobblin/runtime/TaskContext/getForkOperator()|",
      "|java+method:///java/util/Map/clear()|",
      "|java+constructor:///gobblin/runtime/MultiConverter/MultiConverter(java.util.List)|",
      "|java+method:///gobblin/qualitychecker/row/RowLevelPolicyCheckResults/getResults()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///gobblin/runtime/Task/getRecordsWritten()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///gobblin/instrumented/extractor/InstrumentedExtractorBase/getExpectedRecordCount()|",
      "|java+method:///gobblin/fork/ForkOperator/init(gobblin.configuration.WorkUnitState)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///gobblin/runtime/TaskState/setTaskDuration(long)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///gobblin/runtime/Task/shouldPublishDataInTask()|",
      "|java+method:///gobblin/instrumented/extractor/InstrumentedExtractorBase/readRecord(java.lang.Object)|",
      "|java+method:///java/util/concurrent/Future/get()|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///com/google/common/io/Closer/create()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///gobblin/runtime/TaskContext/getRowLevelPolicyChecker()|",
      "|java+constructor:///gobblin/runtime/Fork/Fork(gobblin.runtime.TaskContext,java.lang.Object,int,int)|",
      "|java+method:///gobblin/fork/ForkOperator/forkSchema(gobblin.configuration.WorkUnitState,java.lang.Object)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-core:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+constructor:///gobblin/runtime/JobContext/JobContext(java.util.Properties,org.slf4j.Logger)|",
    "called": "|java+constructor:///gobblin/metastore/MetaStoreModule/MetaStoreModule(java.util.Properties)|",
    "v1Body": [
      "|java+method:///com/google/inject/Injector/getInstance(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///gobblin/runtime/util/JobMetrics/get(gobblin.runtime.JobState)|",
      "|java+method:///com/google/inject/Guice/createInjector(com.google.inject.Module%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/SourceDecorator/SourceDecorator(gobblin.source.Source,java.lang.String,org.slf4j.Logger)|",
      "|java+constructor:///gobblin/configuration/State/State()|",
      "|java+constructor:///gobblin/metastore/MetaStoreModule/MetaStoreModule(java.util.Properties)|",
      "|java+method:///gobblin/runtime/FsDatasetStateStore/getLatestDatasetStatesByUrns(java.lang.String)|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///java/util/Properties/stringPropertyNames()|",
      "|java+method:///java/lang/Boolean/toString()|",
      "|java+method:///gobblin/util/JobLauncherUtils/newJobId(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/addAll(java.util.Properties)|",
      "|java+method:///gobblin/runtime/JobContext/setTaskStagingAndOutputDirs()|",
      "|java+method:///gobblin/source/extractor/JobCommitPolicy/getCommitPolicy(java.util.Properties)|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/getName()|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///java/util/Properties/setProperty(java.lang.String,java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///gobblin/runtime/JobState/setProp(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Class/cast(java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/FsDatasetStateStore/FsDatasetStateStore(org.apache.hadoop.fs.FileSystem,java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+method:///gobblin/metrics/GobblinMetrics/isEnabled(java.util.Properties)|",
      "|java+constructor:///gobblin/runtime/JobState/JobState(gobblin.configuration.State,java.util.Map,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///com/google/inject/Injector/getInstance(java.lang.Class)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/get(gobblin.runtime.JobState)|",
      "|java+method:///gobblin/commit/DeliverySemantics/parse(gobblin.configuration.State)|",
      "|java+method:///com/google/inject/Guice/createInjector(com.google.inject.Module%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/SourceDecorator/SourceDecorator(gobblin.source.Source,java.lang.String,org.slf4j.Logger)|",
      "|java+constructor:///gobblin/configuration/State/State()|",
      "|java+constructor:///gobblin/metastore/MetaStoreModule/MetaStoreModule(java.util.Properties)|",
      "|java+method:///gobblin/runtime/FsDatasetStateStore/getLatestDatasetStatesByUrns(java.lang.String)|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///java/util/Properties/stringPropertyNames()|",
      "|java+method:///java/lang/Boolean/toString()|",
      "|java+method:///gobblin/util/JobLauncherUtils/newJobId(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/addAll(java.util.Properties)|",
      "|java+method:///gobblin/runtime/JobContext/setTaskStagingAndOutputDirs()|",
      "|java+method:///gobblin/source/extractor/JobCommitPolicy/getCommitPolicy(java.util.Properties)|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/getName()|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///java/util/Properties/setProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///gobblin/runtime/JobContext/createCommitSequenceStore()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/NoopDatasetStateStore/NoopDatasetStateStore(org.apache.hadoop.fs.FileSystem,java.lang.String)|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///gobblin/runtime/JobState/setProp(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Class/cast(java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/FsDatasetStateStore/FsDatasetStateStore(org.apache.hadoop.fs.FileSystem,java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+method:///gobblin/metrics/GobblinMetrics/isEnabled(java.util.Properties)|",
      "|java+constructor:///gobblin/runtime/JobState/JobState(gobblin.configuration.State,java.util.Map,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-metastore:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher$TaskRunner/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+constructor:///gobblin/metastore/FsStateStore/FsStateStore(org.apache.hadoop.fs.FileSystem,java.lang.String,java.lang.Class)|",
    "v1Body": [
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///com/google/common/util/concurrent/ServiceManager/startAsync()|",
      "|java+constructor:///gobblin/metastore/FsStateStore/FsStateStore(org.apache.hadoop.fs.FileSystem,java.lang.String,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///java/net/URI/getPath()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/startMetricReportingWithFileSuffix(gobblin.configuration.State,java.lang.String)|",
      "|java+constructor:///com/google/common/util/concurrent/ServiceManager/ServiceManager(java.lang.Iterable)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskAttemptID/getTaskID()|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///gobblin/runtime/util/JobMetrics/get(gobblin.runtime.JobState)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///gobblin/util/SerializationUtils/deserializeState(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,gobblin.configuration.State)|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getTaskAttemptID()|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/access$000()|",
      "|java+method:///gobblin/util/HadoopUtils/getStateFromConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/SequenceFileOutputFormat/getOutputPath(org.apache.hadoop.mapreduce.JobContext)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskID/toString()|",
      "|java+constructor:///gobblin/runtime/TaskExecutor/TaskExecutor(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///com/google/common/util/concurrent/ServiceManager/awaitHealthy(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+constructor:///gobblin/runtime/mapreduce/MRTaskStateTracker/MRTaskStateTracker(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///java/lang/Boolean/booleanValue()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/getName()|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///com/google/common/util/concurrent/ServiceManager/startAsync()|",
      "|java+constructor:///gobblin/metastore/FsStateStore/FsStateStore(org.apache.hadoop.fs.FileSystem,java.lang.String,java.lang.Class)|",
      "|java+method:///gobblin/util/SerializationUtils/deserializeStateFromInputStream(java.io.InputStream,gobblin.configuration.State)|",
      "|java+method:///gobblin/util/HadoopUtils/getStateFromConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/net/URI/getPath()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/startMetricReportingWithFileSuffix(gobblin.configuration.State,java.lang.String)|",
      "|java+constructor:///com/google/common/util/concurrent/ServiceManager/ServiceManager(java.lang.Iterable)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskAttemptID/getTaskID()|",
      "|java+method:///gobblin/runtime/util/JobMetrics/get(gobblin.runtime.JobState)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///com/google/common/io/Closer/register(java.io.Closeable)|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getTaskAttemptID()|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/access$000()|",
      "|java+method:///com/google/common/io/Closer/close()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+constructor:///java/io/FileInputStream/FileInputStream(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/FileOutputFormat/getOutputPath(org.apache.hadoop.mapreduce.JobContext)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskID/toString()|",
      "|java+constructor:///gobblin/runtime/TaskExecutor/TaskExecutor(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/filecache/DistributedCache/getLocalCacheFiles(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///com/google/common/util/concurrent/ServiceManager/awaitHealthy(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+constructor:///gobblin/runtime/mapreduce/MRTaskStateTracker/MRTaskStateTracker(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///com/google/common/io/Closer/create()|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-metastore:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/MultiConverter/getFinalState()|",
    "called": "|java+method:///gobblin/converter/Converter/getFinalState()|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///gobblin/converter/Converter/getFinalState()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///gobblin/configuration/State/addAll(gobblin.configuration.State)|"
    ],
    "v2Body": [
      "|java+method:///gobblin/converter/Converter/getFinalState()|",
      "|java+method:///java/lang/Integer/toString(int)|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///gobblin/state/ConstructState/ConstructState(gobblin.configuration.State)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///gobblin/state/ConstructState/addConstructState(gobblin.Constructs,gobblin.state.ConstructState,java.lang.String)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-api:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/JobState/getTaskStatesAsWorkUnitStates()|",
    "called": "|java+constructor:///gobblin/configuration/WorkUnitState/WorkUnitState(gobblin.source.workunit.WorkUnit,gobblin.configuration.State)|",
    "v1Body": [
      "|java+method:///gobblin/configuration/WorkUnitState/setId(java.lang.String)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///gobblin/configuration/WorkUnitState/addAll(gobblin.configuration.State)|",
      "|java+method:///gobblin/runtime/TaskState/getWorkunit()|",
      "|java+method:///com/google/common/collect/ImmutableList/builder()|",
      "|java+constructor:///gobblin/configuration/WorkUnitState/WorkUnitState(gobblin.source.workunit.WorkUnit)|",
      "|java+method:///gobblin/runtime/TaskState/getId()|",
      "|java+method:///com/google/common/collect/ImmutableList$Builder/build()|",
      "|java+method:///com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///gobblin/configuration/WorkUnitState/setId(java.lang.String)|",
      "|java+constructor:///gobblin/configuration/WorkUnitState/WorkUnitState(gobblin.source.workunit.WorkUnit,gobblin.configuration.State)|",
      "|java+method:///gobblin/runtime/TaskState/getId()|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///gobblin/runtime/TaskState/getJobState()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///gobblin/configuration/WorkUnitState/addAll(gobblin.configuration.State)|",
      "|java+method:///gobblin/runtime/TaskState/getWorkunit()|",
      "|java+method:///com/google/common/collect/ImmutableList/builder()|",
      "|java+method:///com/google/common/collect/ImmutableList$Builder/build()|",
      "|java+method:///com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-api:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/Fork/getFinalState()|",
    "called": "|java+method:///gobblin/converter/Converter/getFinalState()|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///gobblin/converter/Converter/getFinalState()|",
      "|java+method:///gobblin/qualitychecker/row/RowLevelPolicyChecker/getFinalState()|",
      "|java+method:///gobblin/configuration/State/addAll(gobblin.configuration.State)|",
      "|java+method:///gobblin/util/FinalState/getFinalState()|",
      "|java+method:///com/google/common/base/Optional/isPresent()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///gobblin/converter/Converter/getFinalState()|",
      "|java+method:///gobblin/qualitychecker/row/RowLevelPolicyChecker/getFinalState()|",
      "|java+constructor:///gobblin/state/ConstructState/ConstructState()|",
      "|java+constructor:///gobblin/state/ConstructState/ConstructState(gobblin.configuration.State)|",
      "|java+method:///gobblin/state/ConstructState/addConstructState(gobblin.Constructs,gobblin.state.ConstructState)|",
      "|java+method:///gobblin/util/FinalState/getFinalState()|",
      "|java+method:///com/google/common/base/Optional/isPresent()|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-api:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/Task/processRecord(java.lang.Object,gobblin.fork.ForkOperator,gobblin.qualitychecker.row.RowLevelPolicyChecker,gobblin.qualitychecker.row.RowLevelPolicyCheckResults,int)|",
    "called": "|java+constructor:///gobblin/fork/CopyNotSupportedException/CopyNotSupportedException(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+constructor:///gobblin/fork/CopyNotSupportedException/CopyNotSupportedException(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///gobblin/qualitychecker/row/RowLevelPolicyChecker/executePolicies(java.lang.Object,gobblin.qualitychecker.row.RowLevelPolicyCheckResults)|",
      "|java+constructor:///gobblin/runtime/ForkBranchMismatchException/ForkBranchMismatchException(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///gobblin/runtime/Task/inMultipleBranches(java.util.List)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///gobblin/runtime/Fork/putRecord(java.lang.Object)|",
      "|java+method:///gobblin/fork/ForkOperator/forkDataRecord(gobblin.configuration.WorkUnitState,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/fork/Copyable/copy()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+constructor:///gobblin/fork/CopyNotSupportedException/CopyNotSupportedException(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///gobblin/qualitychecker/row/RowLevelPolicyChecker/executePolicies(java.lang.Object,gobblin.qualitychecker.row.RowLevelPolicyCheckResults)|",
      "|java+constructor:///gobblin/runtime/ForkBranchMismatchException/ForkBranchMismatchException(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///gobblin/runtime/Fork/putRecord(java.lang.Object)|",
      "|java+method:///gobblin/fork/ForkOperator/forkDataRecord(gobblin.configuration.WorkUnitState,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/fork/Copyable/copy()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///gobblin/runtime/Task/inMultipleBranches(java.util.List)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-api:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+constructor:///gobblin/runtime/TaskState/TaskState(gobblin.configuration.WorkUnitState)|",
    "called": "|java+method:///gobblin/configuration/WorkUnitState/getWorkunit()|",
    "v1Body": [
      "|java+constructor:///gobblin/configuration/WorkUnitState/WorkUnitState(gobblin.source.workunit.WorkUnit)|",
      "|java+method:///gobblin/runtime/TaskState/setId(java.lang.String)|",
      "|java+method:///gobblin/configuration/WorkUnitState/getWorkunit()|",
      "|java+method:///gobblin/runtime/TaskState/addAll(gobblin.configuration.State)|",
      "|java+method:///gobblin/configuration/WorkUnitState/getProp(java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///gobblin/configuration/WorkUnitState/WorkUnitState(gobblin.source.workunit.WorkUnit,gobblin.configuration.State)|",
      "|java+method:///gobblin/configuration/WorkUnitState/getWorkunit()|",
      "|java+method:///gobblin/runtime/TaskState/addAll(gobblin.configuration.State)|",
      "|java+method:///gobblin/configuration/WorkUnitState/getProp(java.lang.String)|",
      "|java+method:///gobblin/configuration/WorkUnitState/getJobState()|",
      "|java+method:///gobblin/runtime/TaskState/setId(java.lang.String)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-api:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/AbstractJobLauncher/prepareWorkUnits(java.util.List,gobblin.runtime.JobState)|",
    "called": "|java+constructor:///gobblin/configuration/WorkUnitState/WorkUnitState(gobblin.source.workunit.WorkUnit,gobblin.configuration.State)|",
    "v1Body": [
      "|java+method:///gobblin/util/JobLauncherUtils/newTaskId(java.lang.String,int)|",
      "|java+method:///gobblin/source/workunit/WorkUnit/setId(java.lang.String)|",
      "|java+constructor:///gobblin/configuration/WorkUnitState/WorkUnitState(gobblin.source.workunit.WorkUnit)|",
      "|java+method:///gobblin/runtime/JobState/incrementTaskCount()|",
      "|java+method:///gobblin/runtime/JobContext/getJobId()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///gobblin/runtime/TaskState/TaskState(gobblin.configuration.WorkUnitState)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/runtime/JobState/addTaskState(gobblin.runtime.TaskState)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///gobblin/source/workunit/WorkUnit/setProp(java.lang.String,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///gobblin/util/JobLauncherUtils/newTaskId(java.lang.String,int)|",
      "|java+method:///gobblin/source/workunit/WorkUnit/setId(java.lang.String)|",
      "|java+constructor:///gobblin/configuration/WorkUnitState/WorkUnitState(gobblin.source.workunit.WorkUnit,gobblin.configuration.State)|",
      "|java+method:///gobblin/runtime/JobState/incrementTaskCount()|",
      "|java+method:///gobblin/runtime/JobContext/getJobId()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///gobblin/runtime/TaskState/TaskState(gobblin.configuration.WorkUnitState)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/runtime/JobState/addTaskState(gobblin.runtime.TaskState)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///gobblin/source/workunit/WorkUnit/setProp(java.lang.String,java.lang.Object)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-api:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/AbstractJobLauncher/cleanLeftoverStagingData(java.util.List,gobblin.runtime.JobState)|",
    "called": "|java+constructor:///gobblin/configuration/WorkUnitState/WorkUnitState(gobblin.source.workunit.WorkUnit,gobblin.configuration.State)|",
    "v1Body": [
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///gobblin/source/workunit/WorkUnit/addAllIfNotExist(gobblin.configuration.State)|",
      "|java+method:///gobblin/runtime/JobContext/shouldCleanupStagingDataPerTask()|",
      "|java+method:///gobblin/util/JobLauncherUtils/flattenWorkUnits(java.util.List)|",
      "|java+method:///com/google/common/io/Closer/close()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/common/io/Closer/rethrow(java.lang.Throwable)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///gobblin/source/workunit/WorkUnit/copyOf(gobblin.source.workunit.WorkUnit)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///gobblin/util/JobLauncherUtils/cleanJobStagingData(gobblin.configuration.State,org.slf4j.Logger)|",
      "|java+method:///gobblin/util/JobLauncherUtils/cleanTaskStagingData(gobblin.configuration.State,org.slf4j.Logger,com.google.common.io.Closer,java.util.Map)|",
      "|java+method:///com/google/common/io/Closer/create()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+constructor:///gobblin/configuration/WorkUnitState/WorkUnitState(gobblin.source.workunit.WorkUnit,gobblin.configuration.State)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///gobblin/util/JobLauncherUtils/flattenWorkUnits(java.util.List)|",
      "|java+method:///com/google/common/io/Closer/rethrow(java.lang.Throwable)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///gobblin/runtime/JobState/getPropAsBoolean(java.lang.String,boolean)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///gobblin/util/JobLauncherUtils/cleanJobStagingData(gobblin.configuration.State,org.slf4j.Logger)|",
      "|java+method:///gobblin/util/JobLauncherUtils/cleanTaskStagingData(gobblin.configuration.State,org.slf4j.Logger,com.google.common.io.Closer,java.util.Map)|",
      "|java+method:///com/google/common/io/Closer/create()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///gobblin/runtime/JobContext/shouldCleanupStagingDataPerTask()|",
      "|java+method:///gobblin/runtime/AbstractJobLauncher/canCleanStagingData(gobblin.runtime.JobState)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/runtime/JobState/getJobName()|",
      "|java+method:///com/google/common/io/Closer/close()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///gobblin/runtime/JobException/JobException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-api:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/Task/addConstructsFinalStateToTaskState(gobblin.instrumented.extractor.InstrumentedExtractorBase,gobblin.converter.Converter,gobblin.qualitychecker.row.RowLevelPolicyChecker)|",
    "called": "|java+method:///gobblin/converter/Converter/getFinalState()|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/converter/Converter/getFinalState()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///gobblin/qualitychecker/row/RowLevelPolicyChecker/getFinalState()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/runtime/util/RuntimeConstructs/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///gobblin/Constructs/toString()|",
      "|java+method:///gobblin/runtime/TaskState/addFinalConstructState(java.lang.String,gobblin.configuration.State)|",
      "|java+method:///gobblin/instrumented/extractor/InstrumentedExtractorBase/getFinalState()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/String/toLowerCase()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///gobblin/runtime/Fork/getFinalState()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///gobblin/converter/Converter/getFinalState()|",
      "|java+method:///java/lang/Integer/toString(int)|",
      "|java+method:///gobblin/qualitychecker/row/RowLevelPolicyChecker/getFinalState()|",
      "|java+constructor:///gobblin/state/ConstructState/ConstructState()|",
      "|java+constructor:///gobblin/state/ConstructState/ConstructState(gobblin.configuration.State)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///gobblin/state/ConstructState/mergeIntoWorkUnitState(gobblin.configuration.WorkUnitState)|",
      "|java+method:///gobblin/state/ConstructState/addConstructState(gobblin.Constructs,gobblin.state.ConstructState,java.lang.String)|",
      "|java+method:///gobblin/instrumented/extractor/InstrumentedExtractorBase/getFinalState()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///gobblin/state/ConstructState/addConstructState(gobblin.Constructs,gobblin.state.ConstructState)|",
      "|java+method:///gobblin/runtime/Fork/getFinalState()|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-api:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher$TaskRunner/map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+method:///gobblin/source/workunit/WorkUnit/createEmpty()|",
    "v1Body": [
      "|java+method:///gobblin/source/workunit/MultiWorkUnit/createEmpty()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///gobblin/source/workunit/WorkUnit/addAllIfNotExist(gobblin.configuration.State)|",
      "|java+method:///gobblin/util/JobLauncherUtils/flattenWorkUnits(java.util.List)|",
      "|java+method:///gobblin/util/SerializationUtils/deserializeState(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,gobblin.configuration.State)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|",
      "|java+method:///gobblin/source/workunit/MultiWorkUnit/getWorkUnits()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///gobblin/source/workunit/WorkUnit/createEmpty()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///gobblin/source/workunit/MultiWorkUnit/createEmpty()|",
      "|java+method:///gobblin/util/JobLauncherUtils/flattenWorkUnits(java.util.List)|",
      "|java+method:///gobblin/util/SerializationUtils/deserializeState(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,gobblin.configuration.State)|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|",
      "|java+method:///gobblin/source/workunit/MultiWorkUnit/getWorkUnits()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///gobblin/source/workunit/WorkUnit/createEmpty()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-api:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/Task/publishTaskData()|",
    "called": "|java+method:///gobblin/publisher/SingleTaskDataPublisher/getInstance(java.lang.Class,gobblin.configuration.State)|",
    "v1Body": [
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///java/lang/Class/getSimpleName()|",
      "|java+method:///gobblin/runtime/TaskState/getProp(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/google/common/io/Closer/register(java.io.Closeable)|",
      "|java+method:///com/google/common/io/Closer/close()|",
      "|java+method:///gobblin/runtime/TaskState/setTaskFailureException(java.lang.Throwable)|",
      "|java+method:///com/google/common/io/Closer/rethrow(java.lang.Throwable)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///gobblin/publisher/SingleTaskDataPublisher/getInstance(java.lang.Class,gobblin.configuration.State)|",
      "|java+method:///com/google/common/io/Closer/create()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///gobblin/publisher/SingleTaskDataPublisher/publish(gobblin.configuration.WorkUnitState)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/google/common/io/Closer/register(java.io.Closeable)|",
      "|java+method:///com/google/common/io/Closer/close()|",
      "|java+method:///gobblin/runtime/TaskState/setTaskFailureException(java.lang.Throwable)|",
      "|java+method:///com/google/common/io/Closer/rethrow(java.lang.Throwable)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///gobblin/publisher/SingleTaskDataPublisher/getInstance(java.lang.Class,gobblin.configuration.State)|",
      "|java+method:///com/google/common/io/Closer/create()|",
      "|java+method:///gobblin/runtime/Task/getTaskPublisherClass()|",
      "|java+method:///java/lang/Class/getSimpleName()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///gobblin/publisher/SingleTaskDataPublisher/publish(gobblin.configuration.WorkUnitState)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-api:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+constructor:///gobblin/runtime/TaskState/TaskState(gobblin.runtime.TaskState)|",
    "called": "|java+constructor:///gobblin/configuration/WorkUnitState/WorkUnitState(gobblin.source.workunit.WorkUnit,gobblin.configuration.State)|",
    "v1Body": [
      "|java+method:///gobblin/runtime/TaskState/getWorkunit()|",
      "|java+constructor:///gobblin/configuration/WorkUnitState/WorkUnitState(gobblin.source.workunit.WorkUnit)|",
      "|java+method:///gobblin/runtime/TaskState/getProp(java.lang.String)|",
      "|java+method:///gobblin/runtime/TaskState/setId(java.lang.String)|",
      "|java+method:///gobblin/runtime/TaskState/addAll(gobblin.configuration.State)|"
    ],
    "v2Body": [
      "|java+constructor:///gobblin/configuration/WorkUnitState/WorkUnitState(gobblin.source.workunit.WorkUnit,gobblin.configuration.State)|",
      "|java+method:///gobblin/runtime/TaskState/getJobState()|",
      "|java+method:///gobblin/runtime/TaskState/getWorkunit()|",
      "|java+method:///gobblin/runtime/TaskState/getProp(java.lang.String)|",
      "|java+method:///gobblin/runtime/TaskState/setId(java.lang.String)|",
      "|java+method:///gobblin/runtime/TaskState/addAll(gobblin.configuration.State)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-api:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+constructor:///gobblin/runtime/JobContext/JobContext(java.util.Properties,org.slf4j.Logger)|",
    "called": "|java+constructor:///gobblin/configuration/State/State()|",
    "v1Body": [
      "|java+method:///com/google/inject/Injector/getInstance(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///gobblin/runtime/util/JobMetrics/get(gobblin.runtime.JobState)|",
      "|java+method:///com/google/inject/Guice/createInjector(com.google.inject.Module%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/SourceDecorator/SourceDecorator(gobblin.source.Source,java.lang.String,org.slf4j.Logger)|",
      "|java+constructor:///gobblin/configuration/State/State()|",
      "|java+constructor:///gobblin/metastore/MetaStoreModule/MetaStoreModule(java.util.Properties)|",
      "|java+method:///gobblin/runtime/FsDatasetStateStore/getLatestDatasetStatesByUrns(java.lang.String)|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///java/util/Properties/stringPropertyNames()|",
      "|java+method:///java/lang/Boolean/toString()|",
      "|java+method:///gobblin/util/JobLauncherUtils/newJobId(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/addAll(java.util.Properties)|",
      "|java+method:///gobblin/runtime/JobContext/setTaskStagingAndOutputDirs()|",
      "|java+method:///gobblin/source/extractor/JobCommitPolicy/getCommitPolicy(java.util.Properties)|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/getName()|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///java/util/Properties/setProperty(java.lang.String,java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///gobblin/runtime/JobState/setProp(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Class/cast(java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/FsDatasetStateStore/FsDatasetStateStore(org.apache.hadoop.fs.FileSystem,java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+method:///gobblin/metrics/GobblinMetrics/isEnabled(java.util.Properties)|",
      "|java+constructor:///gobblin/runtime/JobState/JobState(gobblin.configuration.State,java.util.Map,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///com/google/inject/Injector/getInstance(java.lang.Class)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/get(gobblin.runtime.JobState)|",
      "|java+method:///gobblin/commit/DeliverySemantics/parse(gobblin.configuration.State)|",
      "|java+method:///com/google/inject/Guice/createInjector(com.google.inject.Module%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/SourceDecorator/SourceDecorator(gobblin.source.Source,java.lang.String,org.slf4j.Logger)|",
      "|java+constructor:///gobblin/configuration/State/State()|",
      "|java+constructor:///gobblin/metastore/MetaStoreModule/MetaStoreModule(java.util.Properties)|",
      "|java+method:///gobblin/runtime/FsDatasetStateStore/getLatestDatasetStatesByUrns(java.lang.String)|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///java/util/Properties/stringPropertyNames()|",
      "|java+method:///java/lang/Boolean/toString()|",
      "|java+method:///gobblin/util/JobLauncherUtils/newJobId(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/addAll(java.util.Properties)|",
      "|java+method:///gobblin/runtime/JobContext/setTaskStagingAndOutputDirs()|",
      "|java+method:///gobblin/source/extractor/JobCommitPolicy/getCommitPolicy(java.util.Properties)|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/getName()|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///java/util/Properties/setProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///gobblin/runtime/JobContext/createCommitSequenceStore()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/NoopDatasetStateStore/NoopDatasetStateStore(org.apache.hadoop.fs.FileSystem,java.lang.String)|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///gobblin/runtime/JobState/setProp(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Class/cast(java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/FsDatasetStateStore/FsDatasetStateStore(org.apache.hadoop.fs.FileSystem,java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+method:///gobblin/metrics/GobblinMetrics/isEnabled(java.util.Properties)|",
      "|java+constructor:///gobblin/runtime/JobState/JobState(gobblin.configuration.State,java.util.Map,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-api:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/Task/run()|",
    "called": "|java+constructor:///gobblin/fork/CopyNotSupportedException/CopyNotSupportedException(java.lang.String)|",
    "v1Body": [
      "|java+method:///gobblin/runtime/Fork/isSucceeded()|",
      "|java+method:///gobblin/runtime/TaskStateTracker/onTaskCompletion(gobblin.runtime.Task)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///gobblin/runtime/Task/getBytesWritten()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///gobblin/runtime/TaskState/setWorkingState(gobblin.configuration.WorkUnitState$WorkingState)|",
      "|java+method:///gobblin/runtime/Task/shouldPublishDataInTask()|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///gobblin/runtime/TaskContext/getConverters()|",
      "|java+method:///gobblin/runtime/Fork/commit()|",
      "|java+method:///gobblin/instrumented/extractor/InstrumentedExtractorBase/getSchema()|",
      "|java+constructor:///gobblin/fork/CopyNotSupportedException/CopyNotSupportedException(java.lang.String)|",
      "|java+method:///gobblin/runtime/TaskState/setEndTime(long)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///gobblin/converter/Converter/convertSchema(java.lang.Object,gobblin.configuration.WorkUnitState)|",
      "|java+method:///gobblin/fork/ForkOperator/getBranches(gobblin.configuration.WorkUnitState)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///gobblin/runtime/Task/processRecord(java.lang.Object,gobblin.fork.ForkOperator,gobblin.qualitychecker.row.RowLevelPolicyChecker,gobblin.qualitychecker.row.RowLevelPolicyCheckResults,int)|",
      "|java+constructor:///gobblin/qualitychecker/row/RowLevelPolicyCheckResults/RowLevelPolicyCheckResults()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/fork/Copyable/copy()|",
      "|java+method:///gobblin/runtime/Task/addConstructsFinalStateToTaskState(gobblin.instrumented.extractor.InstrumentedExtractorBase,gobblin.converter.Converter,gobblin.qualitychecker.row.RowLevelPolicyChecker)|",
      "|java+constructor:///gobblin/instrumented/extractor/InstrumentedExtractorDecorator/InstrumentedExtractorDecorator(gobblin.configuration.WorkUnitState,gobblin.source.extractor.Extractor)|",
      "|java+method:///gobblin/runtime/TaskContext/getExtractor()|",
      "|java+method:///gobblin/runtime/Fork/markParentTaskDone()|",
      "|java+method:///com/google/common/io/Closer/register(java.io.Closeable)|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+method:///gobblin/converter/Converter/convertRecord(java.lang.Object,java.lang.Object,gobblin.configuration.WorkUnitState)|",
      "|java+method:///gobblin/runtime/TaskState/setStartTime(long)|",
      "|java+method:///gobblin/runtime/Task/publishTaskData()|",
      "|java+method:///gobblin/runtime/TaskState/setProp(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///com/google/common/io/Closer/close()|",
      "|java+method:///java/lang/Thread/interrupt()|",
      "|java+constructor:///gobblin/runtime/ForkBranchMismatchException/ForkBranchMismatchException(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///gobblin/runtime/Task/failTask(java.lang.Throwable)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/runtime/Task/inMultipleBranches(java.util.List)|",
      "|java+method:///java/util/concurrent/CompletionService/take()|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/concurrent/CompletionService/submit(java.lang.Runnable,java.lang.Object)|",
      "|java+method:///java/util/List/clear()|",
      "|java+method:///gobblin/runtime/TaskContext/getForkOperator()|",
      "|java+constructor:///gobblin/runtime/MultiConverter/MultiConverter(java.util.List)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///gobblin/qualitychecker/row/RowLevelPolicyCheckResults/getResults()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///gobblin/runtime/Task/getRecordsWritten()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///gobblin/instrumented/extractor/InstrumentedExtractorBase/getExpectedRecordCount()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///gobblin/fork/ForkOperator/init(gobblin.configuration.WorkUnitState)|",
      "|java+method:///gobblin/runtime/TaskState/setTaskDuration(long)|",
      "|java+method:///gobblin/instrumented/extractor/InstrumentedExtractorBase/readRecord(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///com/google/common/io/Closer/create()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///gobblin/runtime/TaskContext/getRowLevelPolicyChecker()|",
      "|java+constructor:///gobblin/runtime/Fork/Fork(gobblin.runtime.TaskContext,java.lang.Object,int,int)|",
      "|java+method:///gobblin/fork/ForkOperator/forkSchema(gobblin.configuration.WorkUnitState,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///gobblin/runtime/Fork/isSucceeded()|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///gobblin/runtime/TaskState/setWorkingState(gobblin.configuration.WorkUnitState$WorkingState)|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///gobblin/runtime/TaskStateTracker/onTaskCompletion(gobblin.runtime.Task)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///gobblin/runtime/TaskContext/getConverters()|",
      "|java+method:///gobblin/runtime/Fork/commit()|",
      "|java+method:///gobblin/instrumented/extractor/InstrumentedExtractorBase/getSchema()|",
      "|java+constructor:///gobblin/fork/CopyNotSupportedException/CopyNotSupportedException(java.lang.String)|",
      "|java+method:///gobblin/runtime/TaskState/setEndTime(long)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///gobblin/converter/Converter/convertSchema(java.lang.Object,gobblin.configuration.WorkUnitState)|",
      "|java+method:///gobblin/fork/ForkOperator/getBranches(gobblin.configuration.WorkUnitState)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///gobblin/runtime/Task/processRecord(java.lang.Object,gobblin.fork.ForkOperator,gobblin.qualitychecker.row.RowLevelPolicyChecker,gobblin.qualitychecker.row.RowLevelPolicyCheckResults,int)|",
      "|java+constructor:///gobblin/qualitychecker/row/RowLevelPolicyCheckResults/RowLevelPolicyCheckResults()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///gobblin/fork/Copyable/copy()|",
      "|java+method:///gobblin/runtime/Task/addConstructsFinalStateToTaskState(gobblin.instrumented.extractor.InstrumentedExtractorBase,gobblin.converter.Converter,gobblin.qualitychecker.row.RowLevelPolicyChecker)|",
      "|java+constructor:///gobblin/instrumented/extractor/InstrumentedExtractorDecorator/InstrumentedExtractorDecorator(gobblin.configuration.WorkUnitState,gobblin.source.extractor.Extractor)|",
      "|java+method:///gobblin/runtime/TaskContext/getExtractor()|",
      "|java+method:///gobblin/runtime/Fork/markParentTaskDone()|",
      "|java+method:///com/google/common/io/Closer/register(java.io.Closeable)|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+method:///gobblin/converter/Converter/convertRecord(java.lang.Object,java.lang.Object,gobblin.configuration.WorkUnitState)|",
      "|java+method:///gobblin/runtime/TaskState/setStartTime(long)|",
      "|java+method:///gobblin/runtime/Task/publishTaskData()|",
      "|java+method:///gobblin/runtime/TaskState/setProp(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///com/google/common/io/Closer/close()|",
      "|java+method:///java/lang/Thread/interrupt()|",
      "|java+constructor:///gobblin/runtime/ForkBranchMismatchException/ForkBranchMismatchException(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///gobblin/runtime/Task/failTask(java.lang.Throwable)|",
      "|java+method:///gobblin/runtime/Task/getBytesWritten()|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///gobblin/runtime/Task/inMultipleBranches(java.util.List)|",
      "|java+method:///gobblin/runtime/TaskExecutor/submit(gobblin.runtime.Fork)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/concurrent/Future/cancel(boolean)|",
      "|java+method:///gobblin/runtime/TaskContext/getForkOperator()|",
      "|java+method:///java/util/Map/clear()|",
      "|java+constructor:///gobblin/runtime/MultiConverter/MultiConverter(java.util.List)|",
      "|java+method:///gobblin/qualitychecker/row/RowLevelPolicyCheckResults/getResults()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///gobblin/runtime/Task/getRecordsWritten()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///gobblin/instrumented/extractor/InstrumentedExtractorBase/getExpectedRecordCount()|",
      "|java+method:///gobblin/fork/ForkOperator/init(gobblin.configuration.WorkUnitState)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///gobblin/runtime/TaskState/setTaskDuration(long)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///gobblin/runtime/Task/shouldPublishDataInTask()|",
      "|java+method:///gobblin/instrumented/extractor/InstrumentedExtractorBase/readRecord(java.lang.Object)|",
      "|java+method:///java/util/concurrent/Future/get()|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///com/google/common/io/Closer/create()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///gobblin/runtime/TaskContext/getRowLevelPolicyChecker()|",
      "|java+constructor:///gobblin/runtime/Fork/Fork(gobblin.runtime.TaskContext,java.lang.Object,int,int)|",
      "|java+method:///gobblin/fork/ForkOperator/forkSchema(gobblin.configuration.WorkUnitState,java.lang.Object)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-api:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/TaskContext/getDestinationType(int,int)|",
    "called": "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
    "v1Body": [
      "|java+method:///gobblin/writer/Destination$DestinationType/valueOf(java.lang.String)|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///gobblin/source/workunit/WorkUnit/getProp(java.lang.String,java.lang.String)|",
      "|java+method:///gobblin/writer/Destination$DestinationType/name()|"
    ],
    "v2Body": [
      "|java+method:///gobblin/runtime/TaskState/getProp(java.lang.String,java.lang.String)|",
      "|java+method:///gobblin/writer/Destination$DestinationType/valueOf(java.lang.String)|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///gobblin/writer/Destination$DestinationType/name()|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-utility:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/TaskContext/getConverters(int,gobblin.runtime.TaskState)|",
    "called": "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int)|",
    "v1Body": [
      "|java+method:///gobblin/instrumented/converter/InstrumentedConverterDecorator/init(gobblin.configuration.WorkUnitState)|",
      "|java+method:///gobblin/source/workunit/WorkUnit/contains(java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/split(java.lang.CharSequence)|",
      "|java+constructor:///gobblin/instrumented/converter/InstrumentedConverterDecorator/InstrumentedConverterDecorator(gobblin.converter.Converter)|",
      "|java+method:///gobblin/runtime/TaskState/setProp(java.lang.String,java.lang.Object)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Class/cast(java.lang.Object)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/google/common/base/Splitter/on(java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/omitEmptyStrings()|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///gobblin/source/workunit/WorkUnit/getProp(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///com/google/common/base/Splitter/trimResults()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///gobblin/instrumented/converter/InstrumentedConverterDecorator/init(gobblin.configuration.WorkUnitState)|",
      "|java+method:///com/google/common/base/Splitter/split(java.lang.CharSequence)|",
      "|java+constructor:///gobblin/instrumented/converter/InstrumentedConverterDecorator/InstrumentedConverterDecorator(gobblin.converter.Converter)|",
      "|java+method:///gobblin/runtime/TaskState/setProp(java.lang.String,java.lang.Object)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+method:///java/lang/Class/cast(java.lang.Object)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/google/common/base/Splitter/on(java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/omitEmptyStrings()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///com/google/common/base/Splitter/trimResults()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/runtime/TaskState/getProp(java.lang.String)|",
      "|java+method:///gobblin/runtime/TaskState/contains(java.lang.String)|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-utility:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+constructor:///gobblin/runtime/mapreduce/MRJobLauncher/MRJobLauncher(java.util.Properties,org.apache.hadoop.conf.Configuration)|",
    "called": "|java+method:///gobblin/util/JobConfigurationUtils/putPropertiesIntoConfiguration(java.util.Properties,org.apache.hadoop.conf.Configuration)|",
    "v1Body": [
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///gobblin/runtime/AbstractJobLauncher/AbstractJobLauncher(java.util.Properties,java.util.Map)|",
      "|java+method:///java/lang/Integer/toString(int)|",
      "|java+constructor:///gobblin/runtime/TaskStateCollectorService/TaskStateCollectorService(java.util.Properties,gobblin.runtime.JobState,com.google.common.eventbus.EventBus,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/startCancellationExecutor()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/buildFileSystem(java.util.Properties,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/delete(org.apache.hadoop.fs.Path,boolean)|",
      "|java+method:///gobblin/runtime/JobContext/getJobId()|",
      "|java+method:///gobblin/util/JobConfigurationUtils/putPropertiesIntoConfiguration(java.util.Properties,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/getInstance(org.apache.hadoop.conf.Configuration,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///gobblin/runtime/JobContext/getJobState()|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/addDependencies()|",
      "|java+method:///com/google/common/collect/ImmutableMap/of()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/runtime/JobContext/getJobName()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/setBoolean(java.lang.String,boolean)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/mkdirs(org.apache.hadoop.fs.Path)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/ImmutableList/of()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/Integer/toString(int)|",
      "|java+constructor:///gobblin/runtime/AbstractJobLauncher/AbstractJobLauncher(java.util.Properties,java.util.List)|",
      "|java+constructor:///gobblin/runtime/TaskStateCollectorService/TaskStateCollectorService(java.util.Properties,gobblin.runtime.JobState,com.google.common.eventbus.EventBus,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/startCancellationExecutor()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/buildFileSystem(java.util.Properties,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/delete(org.apache.hadoop.fs.Path,boolean)|",
      "|java+method:///gobblin/runtime/JobContext/getJobId()|",
      "|java+method:///gobblin/util/JobConfigurationUtils/putPropertiesIntoConfiguration(java.util.Properties,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/getInstance(org.apache.hadoop.conf.Configuration,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///gobblin/runtime/JobContext/getJobState()|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/addDependencies()|",
      "|java+method:///gobblin/runtime/JobContext/getJobName()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/setBoolean(java.lang.String,boolean)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/mkdirs(org.apache.hadoop.fs.Path)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-utility:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher$TaskRunner/map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+method:///gobblin/util/JobLauncherUtils/flattenWorkUnits(java.util.List)|",
    "v1Body": [
      "|java+method:///gobblin/source/workunit/MultiWorkUnit/createEmpty()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///gobblin/source/workunit/WorkUnit/addAllIfNotExist(gobblin.configuration.State)|",
      "|java+method:///gobblin/util/JobLauncherUtils/flattenWorkUnits(java.util.List)|",
      "|java+method:///gobblin/util/SerializationUtils/deserializeState(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,gobblin.configuration.State)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|",
      "|java+method:///gobblin/source/workunit/MultiWorkUnit/getWorkUnits()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///gobblin/source/workunit/WorkUnit/createEmpty()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///gobblin/source/workunit/MultiWorkUnit/createEmpty()|",
      "|java+method:///gobblin/util/JobLauncherUtils/flattenWorkUnits(java.util.List)|",
      "|java+method:///gobblin/util/SerializationUtils/deserializeState(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,gobblin.configuration.State)|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|",
      "|java+method:///gobblin/source/workunit/MultiWorkUnit/getWorkUnits()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///gobblin/source/workunit/WorkUnit/createEmpty()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-utility:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/cli/CliOptions/parseArgs(java.lang.Class,java.lang.String%5B%5D)|",
    "called": "|java+method:///gobblin/util/JobConfigurationUtils/combineSysAndJobProperties(java.util.Properties,java.util.Properties)|",
    "v1Body": [
      "|java+method:///org/apache/commons/cli/Option/getOpt()|",
      "|java+constructor:///org/apache/commons/cli/DefaultParser/DefaultParser()|",
      "|java+method:///org/apache/commons/cli/CommandLine/hasOption(java.lang.String)|",
      "|java+method:///org/apache/commons/cli/Option/getLongOpt()|",
      "|java+method:///gobblin/runtime/cli/CliOptions/printUsage(java.lang.Class)|",
      "|java+method:///java/lang/System/exit(int)|",
      "|java+method:///gobblin/runtime/cli/CliOptions/options()|",
      "|java+method:///org/apache/commons/configuration/ConfigurationConverter/getProperties(org.apache.commons.configuration.Configuration)|",
      "|java+method:///org/apache/commons/cli/DefaultParser/parse(org.apache.commons.cli.Options,java.lang.String%5B%5D)|",
      "|java+constructor:///org/apache/commons/configuration/PropertiesConfiguration/PropertiesConfiguration(java.lang.String)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.Throwable)|",
      "|java+method:///org/apache/commons/cli/CommandLine/getOptionValue(java.lang.String)|",
      "|java+method:///gobblin/util/JobConfigurationUtils/combineSysAndJobProperties(java.util.Properties,java.util.Properties)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/cli/Option/getOpt()|",
      "|java+constructor:///org/apache/commons/cli/DefaultParser/DefaultParser()|",
      "|java+method:///org/apache/commons/cli/CommandLine/hasOption(java.lang.String)|",
      "|java+method:///org/apache/commons/cli/Option/getLongOpt()|",
      "|java+method:///gobblin/runtime/cli/CliOptions/printUsage(java.lang.Class)|",
      "|java+method:///java/lang/System/exit(int)|",
      "|java+method:///gobblin/runtime/cli/CliOptions/options()|",
      "|java+method:///org/apache/commons/cli/DefaultParser/parse(org.apache.commons.cli.Options,java.lang.String%5B%5D)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.Throwable)|",
      "|java+method:///gobblin/util/JobConfigurationUtils/fileToProperties(java.lang.String)|",
      "|java+method:///org/apache/commons/cli/CommandLine/getOptionValue(java.lang.String)|",
      "|java+method:///gobblin/util/JobConfigurationUtils/combineSysAndJobProperties(java.util.Properties,java.util.Properties)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-utility:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/util/JobStateToJsonConverter/main(java.lang.String%5B%5D)|",
    "called": "|java+method:///gobblin/util/JobConfigurationUtils/fileToProperties(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/apache/commons/cli/BasicParser/BasicParser()|",
      "|java+constructor:///org/apache/commons/cli/Options/Options()|",
      "|java+constructor:///java/io/BufferedWriter/BufferedWriter(java.io.Writer)|",
      "|java+method:///com/google/common/io/Closer/close()|",
      "|java+method:///gobblin/runtime/util/JobStateToJsonConverter/convertAll(java.lang.String,java.io.Writer)|",
      "|java+method:///org/apache/commons/cli/Options/addOption(org.apache.commons.cli.Option)|",
      "|java+method:///org/apache/commons/cli/HelpFormatter/printHelp(java.lang.String,org.apache.commons.cli.Options)|",
      "|java+constructor:///org/apache/commons/cli/HelpFormatter/HelpFormatter()|",
      "|java+method:///gobblin/runtime/util/JobStateToJsonConverter/convert(java.lang.String,java.io.Writer)|",
      "|java+method:///org/apache/commons/cli/OptionBuilder/isRequired()|",
      "|java+method:///org/apache/commons/cli/OptionBuilder/withArgName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli/OptionBuilder/hasArgs()|",
      "|java+method:///com/google/common/io/Closer/create()|",
      "|java+method:///gobblin/runtime/util/JobStateToJsonConverter/convert(java.lang.String,java.lang.String,java.io.Writer)|",
      "|java+method:///org/apache/commons/cli/CommandLine/getOptionValue(char)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///org/apache/commons/cli/CommandLine/hasOption(java.lang.String)|",
      "|java+method:///org/apache/commons/cli/OptionBuilder/create(java.lang.String)|",
      "|java+method:///com/google/common/io/Closer/register(java.io.Closeable)|",
      "|java+constructor:///java/io/OutputStreamWriter/OutputStreamWriter(java.io.OutputStream,java.nio.charset.Charset)|",
      "|java+method:///java/lang/System/exit(int)|",
      "|java+method:///org/apache/commons/cli/OptionBuilder/withLongOpt(java.lang.String)|",
      "|java+constructor:///java/io/FileOutputStream/FileOutputStream(java.lang.String)|",
      "|java+method:///java/io/BufferedWriter/write(java.lang.String)|",
      "|java+method:///com/google/common/io/Closer/rethrow(java.lang.Throwable)|",
      "|java+constructor:///gobblin/runtime/util/JobStateToJsonConverter/JobStateToJsonConverter(java.lang.String,boolean)|",
      "|java+constructor:///java/io/StringWriter/StringWriter()|",
      "|java+method:///org/apache/commons/cli/OptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///org/apache/commons/cli/CommandLineParser/parse(org.apache.commons.cli.Options,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli/CommandLine/hasOption(char)|",
      "|java+method:///java/io/StringWriter/toString()|",
      "|java+method:///org/apache/commons/cli/OptionBuilder/create(char)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/commons/cli/BasicParser/BasicParser()|",
      "|java+constructor:///org/apache/commons/cli/Options/Options()|",
      "|java+constructor:///gobblin/runtime/util/JobStateToJsonConverter/JobStateToJsonConverter(java.util.Properties,java.lang.String,boolean)|",
      "|java+constructor:///java/io/BufferedWriter/BufferedWriter(java.io.Writer)|",
      "|java+method:///org/apache/commons/cli/Option/getLongOpt()|",
      "|java+method:///com/google/common/io/Closer/close()|",
      "|java+method:///gobblin/runtime/util/JobStateToJsonConverter/convertAll(java.lang.String,java.io.Writer)|",
      "|java+constructor:///java/util/Properties/Properties()|",
      "|java+method:///org/apache/commons/cli/Options/addOption(org.apache.commons.cli.Option)|",
      "|java+method:///org/apache/commons/cli/HelpFormatter/printHelp(java.lang.String,org.apache.commons.cli.Options)|",
      "|java+constructor:///org/apache/commons/cli/HelpFormatter/HelpFormatter()|",
      "|java+method:///org/apache/commons/cli/OptionBuilder/isRequired()|",
      "|java+method:///org/apache/commons/cli/OptionBuilder/withArgName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli/OptionBuilder/hasArgs()|",
      "|java+method:///com/google/common/io/Closer/create()|",
      "|java+method:///gobblin/util/JobConfigurationUtils/fileToProperties(java.lang.String)|",
      "|java+method:///gobblin/runtime/util/JobStateToJsonConverter/convert(java.lang.String,java.lang.String,java.io.Writer)|",
      "|java+method:///org/apache/commons/cli/CommandLine/getOptionValue(char)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///org/apache/commons/cli/CommandLine/hasOption(java.lang.String)|",
      "|java+method:///org/apache/commons/cli/OptionBuilder/create(java.lang.String)|",
      "|java+method:///com/google/common/io/Closer/register(java.io.Closeable)|",
      "|java+constructor:///java/io/OutputStreamWriter/OutputStreamWriter(java.io.OutputStream,java.nio.charset.Charset)|",
      "|java+method:///java/lang/System/exit(int)|",
      "|java+method:///org/apache/commons/cli/OptionBuilder/withLongOpt(java.lang.String)|",
      "|java+constructor:///java/io/FileOutputStream/FileOutputStream(java.lang.String)|",
      "|java+method:///java/io/BufferedWriter/write(java.lang.String)|",
      "|java+method:///com/google/common/io/Closer/rethrow(java.lang.Throwable)|",
      "|java+constructor:///java/io/StringWriter/StringWriter()|",
      "|java+method:///org/apache/commons/cli/OptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///org/apache/commons/cli/CommandLineParser/parse(org.apache.commons.cli.Options,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli/CommandLine/hasOption(char)|",
      "|java+method:///java/io/StringWriter/toString()|",
      "|java+method:///org/apache/commons/cli/OptionBuilder/create(char)|",
      "|java+method:///org/apache/commons/cli/CommandLine/getOptionValue(java.lang.String)|",
      "|java+method:///gobblin/runtime/util/JobStateToJsonConverter/convert(java.lang.String,java.io.Writer)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-utility:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/TaskStateCollectorService/collectOutputTaskStates()|",
    "called": "|java+constructor:///gobblin/util/ParallelRunner/ParallelRunner(int,org.apache.hadoop.fs.FileSystem)|",
    "v1Body": [
      "|java+constructor:///gobblin/runtime/TaskStateCollectorService$1/TaskStateCollectorService$1(gobblin.runtime.TaskStateCollectorService)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/google/common/collect/Queues/newConcurrentLinkedQueue()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///gobblin/util/ParallelRunner/deserializeFromSequenceFile(java.lang.Class,java.lang.Class,org.apache.hadoop.fs.Path,java.util.Collection,boolean)|",
      "|java+constructor:///gobblin/util/ParallelRunner/ParallelRunner(int,org.apache.hadoop.fs.FileSystem)|",
      "|java+constructor:///gobblin/runtime/NewTaskCompletionEvent/NewTaskCompletionEvent(java.util.Collection)|",
      "|java+method:///java/util/Queue/size()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/google/common/eventbus/EventBus/post(java.lang.Object)|",
      "|java+method:///gobblin/util/ParallelRunner/close()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Queue/iterator()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/runtime/JobState/addTaskState(gobblin.runtime.TaskState)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/google/common/collect/ImmutableList/copyOf(java.util.Collection)|"
    ],
    "v2Body": [
      "|java+constructor:///gobblin/runtime/TaskStateCollectorService$1/TaskStateCollectorService$1(gobblin.runtime.TaskStateCollectorService)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/google/common/collect/Queues/newConcurrentLinkedQueue()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///gobblin/util/ParallelRunner/deserializeFromSequenceFile(java.lang.Class,java.lang.Class,org.apache.hadoop.fs.Path,java.util.Collection,boolean)|",
      "|java+constructor:///gobblin/util/ParallelRunner/ParallelRunner(int,org.apache.hadoop.fs.FileSystem)|",
      "|java+constructor:///gobblin/runtime/NewTaskCompletionEvent/NewTaskCompletionEvent(java.util.Collection)|",
      "|java+method:///java/util/Queue/size()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///gobblin/runtime/TaskState/setJobState(gobblin.configuration.State)|",
      "|java+method:///com/google/common/eventbus/EventBus/post(java.lang.Object)|",
      "|java+method:///gobblin/util/ParallelRunner/close()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Queue/iterator()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/runtime/JobState/addTaskState(gobblin.runtime.TaskState)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/google/common/collect/ImmutableList/copyOf(java.util.Collection)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-utility:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/local/LocalJobLauncher/runWorkUnits(java.util.List)|",
    "called": "|java+method:///gobblin/util/JobLauncherUtils/flattenWorkUnits(java.util.List)|",
    "v1Body": [
      "|java+method:///gobblin/metrics/event/TimingEvent/stop()|",
      "|java+method:///gobblin/runtime/JobContext/getJobState()|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/runtime/JobState/getState()|",
      "|java+method:///java/util/concurrent/CountDownLatch/getCount()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///gobblin/runtime/AbstractJobLauncher/runWorkUnits(java.lang.String,java.util.List,gobblin.runtime.TaskStateTracker,gobblin.runtime.TaskExecutor,java.util.concurrent.CountDownLatch)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///gobblin/runtime/JobContext/getJobId()|",
      "|java+method:///gobblin/source/workunit/WorkUnit/addAllIfNotExist(gobblin.configuration.State)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///gobblin/metrics/event/EventSubmitter/getTimingEvent(java.lang.String)|",
      "|java+method:///gobblin/util/JobLauncherUtils/flattenWorkUnits(java.util.List)|",
      "|java+constructor:///java/util/concurrent/CountDownLatch/CountDownLatch(int)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///gobblin/runtime/JobState/setState(gobblin.runtime.JobState$RunningState)|",
      "|java+method:///java/util/concurrent/CountDownLatch/await(long,java.util.concurrent.TimeUnit)|"
    ],
    "v2Body": [
      "|java+method:///gobblin/runtime/AbstractJobLauncher/runWorkUnits(java.lang.String,gobblin.runtime.JobState,java.util.List,gobblin.runtime.TaskStateTracker,gobblin.runtime.TaskExecutor,java.util.concurrent.CountDownLatch)|",
      "|java+method:///gobblin/metrics/event/TimingEvent/stop()|",
      "|java+method:///gobblin/runtime/JobContext/getJobState()|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/runtime/JobState/getState()|",
      "|java+method:///java/util/concurrent/CountDownLatch/getCount()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///gobblin/runtime/JobContext/getJobId()|",
      "|java+method:///gobblin/source/workunit/WorkUnit/addAllIfNotExist(gobblin.configuration.State)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///gobblin/metrics/event/EventSubmitter/getTimingEvent(java.lang.String)|",
      "|java+method:///gobblin/util/JobLauncherUtils/flattenWorkUnits(java.util.List)|",
      "|java+constructor:///java/util/concurrent/CountDownLatch/CountDownLatch(int)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///gobblin/runtime/JobState/setState(gobblin.runtime.JobState$RunningState)|",
      "|java+method:///java/util/concurrent/CountDownLatch/await(long,java.util.concurrent.TimeUnit)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-utility:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/TaskContext/getWriterOutputFormat(int,int)|",
    "called": "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
    "v1Body": [
      "|java+method:///java/lang/String/toUpperCase()|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///gobblin/writer/WriterOutputFormat/name()|",
      "|java+method:///gobblin/source/workunit/WorkUnit/getProp(java.lang.String,java.lang.String)|",
      "|java+method:///com/google/common/base/Enums/getIfPresent(java.lang.Class,java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/or(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///gobblin/runtime/TaskState/getProp(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/toUpperCase()|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///gobblin/writer/WriterOutputFormat/name()|",
      "|java+method:///com/google/common/base/Enums/getIfPresent(java.lang.Class,java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/or(java.lang.Object)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-utility:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/AbstractJobLauncher/cleanupStagingDataPerTask(gobblin.runtime.JobState)|",
    "called": "|java+method:///gobblin/util/JobLauncherUtils/cleanTaskStagingData(gobblin.configuration.State,org.slf4j.Logger,com.google.common.io.Closer,java.util.Map)|",
    "v1Body": [
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/google/common/io/Closer/close()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/runtime/TaskState/getTaskId()|",
      "|java+constructor:///gobblin/runtime/TaskState/TaskState(gobblin.runtime.TaskState)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///gobblin/runtime/TaskState/addAllIfNotExist(gobblin.configuration.State)|",
      "|java+method:///gobblin/runtime/JobState/getTaskStates()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///gobblin/util/JobLauncherUtils/cleanTaskStagingData(gobblin.configuration.State,org.slf4j.Logger,com.google.common.io.Closer,java.util.Map)|",
      "|java+method:///com/google/common/io/Closer/create()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/google/common/io/Closer/close()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/runtime/TaskState/getTaskId()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///gobblin/runtime/JobState/getTaskStates()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///gobblin/util/JobLauncherUtils/cleanTaskStagingData(gobblin.configuration.State,org.slf4j.Logger,com.google.common.io.Closer,java.util.Map)|",
      "|java+method:///com/google/common/io/Closer/create()|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-utility:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/AbstractJobLauncher/prepareWorkUnits(java.util.List,gobblin.runtime.JobState)|",
    "called": "|java+method:///gobblin/util/JobLauncherUtils/newTaskId(java.lang.String,int)|",
    "v1Body": [
      "|java+method:///gobblin/util/JobLauncherUtils/newTaskId(java.lang.String,int)|",
      "|java+method:///gobblin/source/workunit/WorkUnit/setId(java.lang.String)|",
      "|java+constructor:///gobblin/configuration/WorkUnitState/WorkUnitState(gobblin.source.workunit.WorkUnit)|",
      "|java+method:///gobblin/runtime/JobState/incrementTaskCount()|",
      "|java+method:///gobblin/runtime/JobContext/getJobId()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///gobblin/runtime/TaskState/TaskState(gobblin.configuration.WorkUnitState)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/runtime/JobState/addTaskState(gobblin.runtime.TaskState)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///gobblin/source/workunit/WorkUnit/setProp(java.lang.String,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///gobblin/util/JobLauncherUtils/newTaskId(java.lang.String,int)|",
      "|java+method:///gobblin/source/workunit/WorkUnit/setId(java.lang.String)|",
      "|java+constructor:///gobblin/configuration/WorkUnitState/WorkUnitState(gobblin.source.workunit.WorkUnit,gobblin.configuration.State)|",
      "|java+method:///gobblin/runtime/JobState/incrementTaskCount()|",
      "|java+method:///gobblin/runtime/JobContext/getJobId()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///gobblin/runtime/TaskState/TaskState(gobblin.configuration.WorkUnitState)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/runtime/JobState/addTaskState(gobblin.runtime.TaskState)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///gobblin/source/workunit/WorkUnit/setProp(java.lang.String,java.lang.Object)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-utility:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/AbstractJobLauncher/cleanLeftoverStagingData(java.util.List,gobblin.runtime.JobState)|",
    "called": "|java+method:///gobblin/util/JobLauncherUtils/cleanJobStagingData(gobblin.configuration.State,org.slf4j.Logger)|",
    "v1Body": [
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///gobblin/source/workunit/WorkUnit/addAllIfNotExist(gobblin.configuration.State)|",
      "|java+method:///gobblin/runtime/JobContext/shouldCleanupStagingDataPerTask()|",
      "|java+method:///gobblin/util/JobLauncherUtils/flattenWorkUnits(java.util.List)|",
      "|java+method:///com/google/common/io/Closer/close()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/common/io/Closer/rethrow(java.lang.Throwable)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///gobblin/source/workunit/WorkUnit/copyOf(gobblin.source.workunit.WorkUnit)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///gobblin/util/JobLauncherUtils/cleanJobStagingData(gobblin.configuration.State,org.slf4j.Logger)|",
      "|java+method:///gobblin/util/JobLauncherUtils/cleanTaskStagingData(gobblin.configuration.State,org.slf4j.Logger,com.google.common.io.Closer,java.util.Map)|",
      "|java+method:///com/google/common/io/Closer/create()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+constructor:///gobblin/configuration/WorkUnitState/WorkUnitState(gobblin.source.workunit.WorkUnit,gobblin.configuration.State)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///gobblin/util/JobLauncherUtils/flattenWorkUnits(java.util.List)|",
      "|java+method:///com/google/common/io/Closer/rethrow(java.lang.Throwable)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///gobblin/runtime/JobState/getPropAsBoolean(java.lang.String,boolean)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///gobblin/util/JobLauncherUtils/cleanJobStagingData(gobblin.configuration.State,org.slf4j.Logger)|",
      "|java+method:///gobblin/util/JobLauncherUtils/cleanTaskStagingData(gobblin.configuration.State,org.slf4j.Logger,com.google.common.io.Closer,java.util.Map)|",
      "|java+method:///com/google/common/io/Closer/create()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///gobblin/runtime/JobContext/shouldCleanupStagingDataPerTask()|",
      "|java+method:///gobblin/runtime/AbstractJobLauncher/canCleanStagingData(gobblin.runtime.JobState)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/runtime/JobState/getJobName()|",
      "|java+method:///com/google/common/io/Closer/close()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///gobblin/runtime/JobException/JobException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-utility:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/TaskContext/getDataWriterBuilder(int,int)|",
    "called": "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
    "v1Body": [
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///gobblin/source/workunit/WorkUnit/getProp(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Class/cast(java.lang.Object)|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///gobblin/runtime/TaskState/getProp(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/lang/Class/cast(java.lang.Object)|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-utility:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+constructor:///gobblin/runtime/JobContext/JobContext(java.util.Properties,org.slf4j.Logger)|",
    "called": "|java+method:///gobblin/util/JobLauncherUtils/newJobId(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/google/inject/Injector/getInstance(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///gobblin/runtime/util/JobMetrics/get(gobblin.runtime.JobState)|",
      "|java+method:///com/google/inject/Guice/createInjector(com.google.inject.Module%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/SourceDecorator/SourceDecorator(gobblin.source.Source,java.lang.String,org.slf4j.Logger)|",
      "|java+constructor:///gobblin/configuration/State/State()|",
      "|java+constructor:///gobblin/metastore/MetaStoreModule/MetaStoreModule(java.util.Properties)|",
      "|java+method:///gobblin/runtime/FsDatasetStateStore/getLatestDatasetStatesByUrns(java.lang.String)|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///java/util/Properties/stringPropertyNames()|",
      "|java+method:///java/lang/Boolean/toString()|",
      "|java+method:///gobblin/util/JobLauncherUtils/newJobId(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/addAll(java.util.Properties)|",
      "|java+method:///gobblin/runtime/JobContext/setTaskStagingAndOutputDirs()|",
      "|java+method:///gobblin/source/extractor/JobCommitPolicy/getCommitPolicy(java.util.Properties)|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/getName()|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///java/util/Properties/setProperty(java.lang.String,java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///gobblin/runtime/JobState/setProp(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Class/cast(java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/FsDatasetStateStore/FsDatasetStateStore(org.apache.hadoop.fs.FileSystem,java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+method:///gobblin/metrics/GobblinMetrics/isEnabled(java.util.Properties)|",
      "|java+constructor:///gobblin/runtime/JobState/JobState(gobblin.configuration.State,java.util.Map,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///com/google/inject/Injector/getInstance(java.lang.Class)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/get(gobblin.runtime.JobState)|",
      "|java+method:///gobblin/commit/DeliverySemantics/parse(gobblin.configuration.State)|",
      "|java+method:///com/google/inject/Guice/createInjector(com.google.inject.Module%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/SourceDecorator/SourceDecorator(gobblin.source.Source,java.lang.String,org.slf4j.Logger)|",
      "|java+constructor:///gobblin/configuration/State/State()|",
      "|java+constructor:///gobblin/metastore/MetaStoreModule/MetaStoreModule(java.util.Properties)|",
      "|java+method:///gobblin/runtime/FsDatasetStateStore/getLatestDatasetStatesByUrns(java.lang.String)|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///java/util/Properties/stringPropertyNames()|",
      "|java+method:///java/lang/Boolean/toString()|",
      "|java+method:///gobblin/util/JobLauncherUtils/newJobId(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/addAll(java.util.Properties)|",
      "|java+method:///gobblin/runtime/JobContext/setTaskStagingAndOutputDirs()|",
      "|java+method:///gobblin/source/extractor/JobCommitPolicy/getCommitPolicy(java.util.Properties)|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/getName()|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///java/util/Properties/setProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///gobblin/runtime/JobContext/createCommitSequenceStore()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/NoopDatasetStateStore/NoopDatasetStateStore(org.apache.hadoop.fs.FileSystem,java.lang.String)|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///gobblin/runtime/JobState/setProp(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Class/cast(java.lang.Object)|",
      "|java+constructor:///gobblin/runtime/FsDatasetStateStore/FsDatasetStateStore(org.apache.hadoop.fs.FileSystem,java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+method:///gobblin/metrics/GobblinMetrics/isEnabled(java.util.Properties)|",
      "|java+constructor:///gobblin/runtime/JobState/JobState(gobblin.configuration.State,java.util.Map,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-utility:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-runtime:0.6.0-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-runtime:0.7.0",
    "caller": "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher$TaskRunner/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+method:///gobblin/util/SerializationUtils/deserializeStateFromInputStream(java.io.InputStream,gobblin.configuration.State)|",
    "v1Body": [
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///com/google/common/util/concurrent/ServiceManager/startAsync()|",
      "|java+constructor:///gobblin/metastore/FsStateStore/FsStateStore(org.apache.hadoop.fs.FileSystem,java.lang.String,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///java/net/URI/getPath()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/startMetricReportingWithFileSuffix(gobblin.configuration.State,java.lang.String)|",
      "|java+constructor:///com/google/common/util/concurrent/ServiceManager/ServiceManager(java.lang.Iterable)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskAttemptID/getTaskID()|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///gobblin/runtime/util/JobMetrics/get(gobblin.runtime.JobState)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///gobblin/util/SerializationUtils/deserializeState(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,gobblin.configuration.State)|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getTaskAttemptID()|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/access$000()|",
      "|java+method:///gobblin/util/HadoopUtils/getStateFromConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/SequenceFileOutputFormat/getOutputPath(org.apache.hadoop.mapreduce.JobContext)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskID/toString()|",
      "|java+constructor:///gobblin/runtime/TaskExecutor/TaskExecutor(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///com/google/common/util/concurrent/ServiceManager/awaitHealthy(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+constructor:///gobblin/runtime/mapreduce/MRTaskStateTracker/MRTaskStateTracker(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///java/lang/Boolean/booleanValue()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/getName()|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///com/google/common/util/concurrent/ServiceManager/startAsync()|",
      "|java+constructor:///gobblin/metastore/FsStateStore/FsStateStore(org.apache.hadoop.fs.FileSystem,java.lang.String,java.lang.Class)|",
      "|java+method:///gobblin/util/SerializationUtils/deserializeStateFromInputStream(java.io.InputStream,gobblin.configuration.State)|",
      "|java+method:///gobblin/util/HadoopUtils/getStateFromConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/net/URI/getPath()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///gobblin/runtime/util/JobMetrics/startMetricReportingWithFileSuffix(gobblin.configuration.State,java.lang.String)|",
      "|java+constructor:///com/google/common/util/concurrent/ServiceManager/ServiceManager(java.lang.Iterable)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskAttemptID/getTaskID()|",
      "|java+method:///gobblin/runtime/util/JobMetrics/get(gobblin.runtime.JobState)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///com/google/common/io/Closer/register(java.io.Closeable)|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getTaskAttemptID()|",
      "|java+method:///gobblin/runtime/mapreduce/MRJobLauncher/access$000()|",
      "|java+method:///com/google/common/io/Closer/close()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+constructor:///java/io/FileInputStream/FileInputStream(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/FileOutputFormat/getOutputPath(org.apache.hadoop.mapreduce.JobContext)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskID/toString()|",
      "|java+constructor:///gobblin/runtime/TaskExecutor/TaskExecutor(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/filecache/DistributedCache/getLocalCacheFiles(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///com/google/common/util/concurrent/ServiceManager/awaitHealthy(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+constructor:///gobblin/runtime/mapreduce/MRTaskStateTracker/MRTaskStateTracker(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///com/google/common/io/Closer/create()|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-utility:0.7.0",
    "change": "UPDATED"
  }
]