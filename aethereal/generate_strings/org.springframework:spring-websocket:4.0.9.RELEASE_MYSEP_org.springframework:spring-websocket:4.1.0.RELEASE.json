[
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/doHandshake(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,org.springframework.web.socket.WebSocketHandler,java.util.Map)|",
    "called": "|java+method:///org/springframework/http/HttpHeaders/setAllow(java.util.Set)|",
    "v1Body": [
      "|java+method:///org/springframework/http/server/ServerHttpResponse/getHeaders()|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getHeaders()|",
      "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/handleInvalidConnectHeader(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse)|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/setStatusCode(org.springframework.http.HttpStatus)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/web/socket/server/RequestUpgradeStrategy/getSupportedExtensions(org.springframework.http.server.ServerHttpRequest)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/getSecWebSocketKey()|",
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/getConnection()|",
      "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/handleWebSocketVersionNotSupported(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse)|",
      "|java+method:///org/springframework/http/HttpHeaders/setAllow(java.util.Set)|",
      "|java+constructor:///org/springframework/web/socket/server/HandshakeFailureException/HandshakeFailureException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/getSecWebSocketExtensions()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/getUpgrade()|",
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/getSecWebSocketProtocol()|",
      "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/determineUser(org.springframework.http.server.ServerHttpRequest,org.springframework.web.socket.WebSocketHandler,java.util.Map)|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getURI()|",
      "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/isValidOrigin(org.springframework.http.server.ServerHttpRequest)|",
      "|java+method:///org/springframework/http/HttpMethod/equals(java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/selectProtocol(java.util.List,org.springframework.web.socket.WebSocketHandler)|",
      "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/isWebSocketVersionSupported(org.springframework.web.socket.WebSocketHttpHeaders)|",
      "|java+method:///org/springframework/web/socket/server/RequestUpgradeStrategy/upgrade(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,java.lang.String,java.util.List,java.security.Principal,org.springframework.web.socket.WebSocketHandler,java.util.Map)|",
      "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/filterRequestedExtensions(org.springframework.http.server.ServerHttpRequest,java.util.List,java.util.List)|",
      "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/handleInvalidUpgradeHeader(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse)|",
      "|java+constructor:///org/springframework/web/socket/WebSocketHttpHeaders/WebSocketHttpHeaders(org.springframework.http.HttpHeaders)|",
      "|java+method:///java/util/List/contains(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/Collections/singleton(java.lang.Object)|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getMethod()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/http/server/ServerHttpResponse/getHeaders()|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getHeaders()|",
      "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/handleInvalidConnectHeader(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse)|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/setStatusCode(org.springframework.http.HttpStatus)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/web/socket/server/RequestUpgradeStrategy/getSupportedExtensions(org.springframework.http.server.ServerHttpRequest)|",
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/getSecWebSocketKey()|",
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/getConnection()|",
      "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/handleWebSocketVersionNotSupported(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse)|",
      "|java+method:///org/springframework/http/HttpHeaders/setAllow(java.util.Set)|",
      "|java+constructor:///org/springframework/web/socket/server/HandshakeFailureException/HandshakeFailureException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/getSecWebSocketExtensions()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/getUpgrade()|",
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/getSecWebSocketProtocol()|",
      "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/determineUser(org.springframework.http.server.ServerHttpRequest,org.springframework.web.socket.WebSocketHandler,java.util.Map)|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getURI()|",
      "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/isValidOrigin(org.springframework.http.server.ServerHttpRequest)|",
      "|java+method:///org/springframework/http/HttpMethod/equals(java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/selectProtocol(java.util.List,org.springframework.web.socket.WebSocketHandler)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/commons/logging/Log/trace(java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/isWebSocketVersionSupported(org.springframework.web.socket.WebSocketHttpHeaders)|",
      "|java+method:///org/springframework/web/socket/server/RequestUpgradeStrategy/upgrade(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,java.lang.String,java.util.List,java.security.Principal,org.springframework.web.socket.WebSocketHandler,java.util.Map)|",
      "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/handleInvalidUpgradeHeader(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/filterRequestedExtensions(org.springframework.http.server.ServerHttpRequest,java.util.List,java.util.List)|",
      "|java+method:///org/apache/commons/logging/Log/isErrorEnabled()|",
      "|java+constructor:///org/springframework/web/socket/WebSocketHttpHeaders/WebSocketHttpHeaders(org.springframework.http.HttpHeaders)|",
      "|java+method:///java/util/List/contains(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/Collections/singleton(java.lang.Object)|",
      "|java+method:///org/apache/commons/logging/Log/isTraceEnabled()|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getMethod()|"
    ],
    "affectedLib": "org.springframework:spring-web:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/handleInvalidConnectHeader(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse)|",
    "called": "|java+method:///org/springframework/http/HttpHeaders/getConnection()|",
    "v1Body": [
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getHeaders()|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/setStatusCode(org.springframework.http.HttpStatus)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/getBytes(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/io/OutputStream/write(byte%5B%5D)|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/getBody()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/http/HttpHeaders/getConnection()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getHeaders()|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/setStatusCode(org.springframework.http.HttpStatus)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/getBytes(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/commons/logging/Log/isErrorEnabled()|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object)|",
      "|java+method:///java/io/OutputStream/write(byte%5B%5D)|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/getBody()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/http/HttpHeaders/getConnection()|"
    ],
    "affectedLib": "org.springframework:spring-web:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/sockjs/support/AbstractSockJsService/sendMethodNotAllowed(org.springframework.http.server.ServerHttpResponse,org.springframework.http.HttpMethod%5B%5D)|",
    "called": "|java+method:///org/springframework/http/HttpHeaders/setAllow(java.util.Set)|",
    "v1Body": [
      "|java+method:///org/springframework/http/server/ServerHttpResponse/getHeaders()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/setStatusCode(org.springframework.http.HttpStatus)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///org/springframework/http/HttpHeaders/setAllow(java.util.Set)|",
      "|java+constructor:///java/util/HashSet/HashSet(java.util.Collection)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/http/server/ServerHttpResponse/getHeaders()|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/setStatusCode(org.springframework.http.HttpStatus)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///org/springframework/http/HttpHeaders/setAllow(java.util.Set)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object)|",
      "|java+constructor:///java/util/HashSet/HashSet(java.util.Collection)|"
    ],
    "affectedLib": "org.springframework:spring-web:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/handleInvalidUpgradeHeader(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse)|",
    "called": "|java+method:///org/springframework/http/HttpHeaders/getUpgrade()|",
    "v1Body": [
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getHeaders()|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/setStatusCode(org.springframework.http.HttpStatus)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/http/HttpHeaders/getUpgrade()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/getBytes(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/OutputStream/write(byte%5B%5D)|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/getBody()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getHeaders()|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/setStatusCode(org.springframework.http.HttpStatus)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/http/HttpHeaders/getUpgrade()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/getBytes(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/commons/logging/Log/isErrorEnabled()|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object)|",
      "|java+method:///java/io/OutputStream/write(byte%5B%5D)|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/getBody()|"
    ],
    "affectedLib": "org.springframework:spring-web:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/server/support/WebSocketHttpRequestHandler/handleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)|",
    "called": "|java+constructor:///org/springframework/http/server/ServletServerHttpRequest/ServletServerHttpRequest(javax.servlet.http.HttpServletRequest)|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getURI()|",
      "|java+constructor:///org/springframework/http/server/ServletServerHttpResponse/ServletServerHttpResponse(javax.servlet.http.HttpServletResponse)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///org/springframework/web/socket/server/HandshakeHandler/doHandshake(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,org.springframework.web.socket.WebSocketHandler,java.util.Map)|",
      "|java+constructor:///org/springframework/web/socket/server/HandshakeFailureException/HandshakeFailureException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/springframework/web/socket/server/support/HandshakeInterceptorChain/HandshakeInterceptorChain(java.util.List,org.springframework.web.socket.WebSocketHandler)|",
      "|java+method:///org/springframework/web/socket/server/support/HandshakeInterceptorChain/applyBeforeHandshake(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,java.util.Map)|",
      "|java+constructor:///org/springframework/http/server/ServletServerHttpRequest/ServletServerHttpRequest(javax.servlet.http.HttpServletRequest)|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/close()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/server/support/HandshakeInterceptorChain/applyAfterHandshake(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,java.lang.Exception)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getURI()|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+constructor:///org/springframework/http/server/ServletServerHttpResponse/ServletServerHttpResponse(javax.servlet.http.HttpServletResponse)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///org/springframework/web/socket/server/HandshakeHandler/doHandshake(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,org.springframework.web.socket.WebSocketHandler,java.util.Map)|",
      "|java+constructor:///org/springframework/web/socket/server/HandshakeFailureException/HandshakeFailureException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///javax/servlet/http/HttpServletRequest/getRequestURI()|",
      "|java+constructor:///org/springframework/web/socket/server/support/HandshakeInterceptorChain/HandshakeInterceptorChain(java.util.List,org.springframework.web.socket.WebSocketHandler)|",
      "|java+method:///org/springframework/web/socket/server/support/HandshakeInterceptorChain/applyBeforeHandshake(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,java.util.Map)|",
      "|java+constructor:///org/springframework/http/server/ServletServerHttpRequest/ServletServerHttpRequest(javax.servlet.http.HttpServletRequest)|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/close()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///javax/servlet/http/HttpServletRequest/getMethod()|",
      "|java+method:///org/springframework/web/socket/server/support/HandshakeInterceptorChain/applyAfterHandshake(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,java.lang.Exception)|"
    ],
    "affectedLib": "org.springframework:spring-web:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/client/AbstractWebSocketClient/doHandshake(org.springframework.web.socket.WebSocketHandler,org.springframework.web.socket.WebSocketHttpHeaders,java.net.URI)|",
    "called": "|java+constructor:///org/springframework/http/HttpHeaders/HttpHeaders()|",
    "v1Body": [
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/getSecWebSocketProtocol()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///java/util/Collections/emptyMap()|",
      "|java+method:///org/springframework/http/HttpHeaders/put(java.lang.String,java.util.List)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+method:///org/springframework/util/Assert/isTrue(boolean,java.lang.String)|",
      "|java+method:///org/springframework/web/socket/client/AbstractWebSocketClient/doHandshakeInternal(org.springframework.web.socket.WebSocketHandler,org.springframework.http.HttpHeaders,java.net.URI,java.util.List,java.util.List,java.util.Map)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/getSecWebSocketExtensions()|",
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/keySet()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/String/toLowerCase()|",
      "|java+constructor:///org/springframework/http/HttpHeaders/HttpHeaders()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/net/URI/getScheme()|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/get(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/getSecWebSocketProtocol()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///java/util/Collections/emptyMap()|",
      "|java+method:///org/springframework/http/HttpHeaders/put(java.lang.String,java.util.List)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+method:///org/springframework/web/socket/client/AbstractWebSocketClient/doHandshakeInternal(org.springframework.web.socket.WebSocketHandler,org.springframework.http.HttpHeaders,java.net.URI,java.util.List,java.util.List,java.util.Map)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/getSecWebSocketExtensions()|",
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/keySet()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/String/toLowerCase()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/web/socket/client/AbstractWebSocketClient/assertUri(java.net.URI)|",
      "|java+constructor:///org/springframework/http/HttpHeaders/HttpHeaders()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/get(java.lang.Object)|"
    ],
    "affectedLib": "org.springframework:spring-web:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/sockjs/support/AbstractSockJsService/handleRequest(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,java.lang.String,org.springframework.web.socket.WebSocketHandler)|",
    "called": "|java+method:///org/springframework/http/HttpHeaders/setContentType(org.springframework.http.MediaType)|",
    "v1Body": [
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getHeaders()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/web/socket/sockjs/support/AbstractSockJsService/isWebSocketEnabled()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/commons/logging/Log/isWarnEnabled()|",
      "|java+method:///org/springframework/web/socket/sockjs/support/AbstractSockJsService$SockJsRequestHandler/handle(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse)|",
      "|java+method:///java/nio/charset/Charset/forName(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/util/StringUtils/tokenizeToStringArray(java.lang.String,java.lang.String)|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/getHeaders()|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/setStatusCode(org.springframework.http.HttpStatus)|",
      "|java+method:///org/apache/commons/logging/Log/warn(java.lang.Object)|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getURI()|",
      "|java+method:///org/springframework/http/InvalidMediaTypeException/getMediaType()|",
      "|java+constructor:///org/springframework/http/MediaType/MediaType(java.lang.String,java.lang.String,java.nio.charset.Charset)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/web/socket/sockjs/support/AbstractSockJsService/handleRawWebSocketRequest(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,org.springframework.web.socket.WebSocketHandler)|",
      "|java+method:///java/lang/String/getBytes(java.lang.String)|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///org/springframework/web/socket/sockjs/SockJsException/SockJsException(java.lang.String,java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getMethod()|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/getBody()|",
      "|java+method:///org/springframework/http/HttpHeaders/setContentType(org.springframework.http.MediaType)|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/close()|",
      "|java+method:///org/springframework/web/socket/sockjs/support/AbstractSockJsService/validateRequest(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/io/OutputStream/write(byte%5B%5D)|",
      "|java+method:///java/lang/String/matches(java.lang.String)|",
      "|java+method:///org/springframework/web/socket/sockjs/support/AbstractSockJsService/handleTransportRequest(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,org.springframework.web.socket.WebSocketHandler,java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getHeaders()|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/setStatusCode(org.springframework.http.HttpStatus)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getURI()|",
      "|java+method:///org/springframework/web/socket/sockjs/support/AbstractSockJsService/isWebSocketEnabled()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/nio/charset/Charset/forName(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/util/StringUtils/tokenizeToStringArray(java.lang.String,java.lang.String)|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/getHeaders()|",
      "|java+constructor:///org/springframework/http/MediaType/MediaType(java.lang.String,java.lang.String,java.nio.charset.Charset)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/web/socket/sockjs/support/AbstractSockJsService/handleRawWebSocketRequest(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,org.springframework.web.socket.WebSocketHandler)|",
      "|java+method:///java/lang/String/getBytes(java.lang.String)|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///org/springframework/web/socket/sockjs/support/AbstractSockJsService$SockJsRequestHandler/handle(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///org/springframework/web/socket/sockjs/SockJsException/SockJsException(java.lang.String,java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getMethod()|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/getBody()|",
      "|java+method:///org/springframework/http/HttpHeaders/setContentType(org.springframework.http.MediaType)|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/close()|",
      "|java+method:///org/springframework/web/socket/sockjs/support/AbstractSockJsService/validateRequest(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/io/OutputStream/write(byte%5B%5D)|",
      "|java+method:///java/lang/String/matches(java.lang.String)|",
      "|java+method:///org/springframework/web/socket/sockjs/support/AbstractSockJsService/handleTransportRequest(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,org.springframework.web.socket.WebSocketHandler,java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "org.springframework:spring-web:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/handleWebSocketVersionNotSupported(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse)|",
    "called": "|java+method:///org/springframework/http/HttpHeaders/getFirst(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/http/server/ServerHttpResponse/getHeaders()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getHeaders()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/http/HttpHeaders/get(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/springframework/util/StringUtils/arrayToCommaDelimitedString(java.lang.Object%5B%5D)|",
      "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/getSupportedVersions()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/http/HttpHeaders/put(java.lang.String,java.util.List)|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/setStatusCode(org.springframework.http.HttpStatus)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/http/HttpHeaders/getFirst(java.lang.String)|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/getHeaders()|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getHeaders()|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/util/StringUtils/arrayToCommaDelimitedString(java.lang.Object%5B%5D)|",
      "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/getSupportedVersions()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/http/HttpHeaders/put(java.lang.String,java.util.List)|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/setStatusCode(org.springframework.http.HttpStatus)|",
      "|java+method:///java/util/Arrays/toString(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/isErrorEnabled()|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object)|"
    ],
    "affectedLib": "org.springframework:spring-web:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/adapter/jetty/JettyWebSocketSession/initializeNativeSession(org.eclipse.jetty.websocket.api.Session)|",
    "called": "|java+method:///org/springframework/http/HttpHeaders/readOnlyHttpHeaders(org.springframework.http.HttpHeaders)|",
    "v1Body": [
      "|java+method:///org/eclipse/jetty/websocket/api/UpgradeRequest/getUserPrincipal()|",
      "|java+method:///org/eclipse/jetty/websocket/api/UpgradeResponse/getAcceptedSubProtocol()|",
      "|java+method:///org/eclipse/jetty/websocket/api/Session/getUpgradeRequest()|",
      "|java+method:///org/springframework/web/socket/adapter/AbstractWebSocketSession/initializeNativeSession(java.lang.Object)|",
      "|java+method:///org/eclipse/jetty/websocket/api/Session/getUpgradeResponse()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/util/ObjectUtils/getIdentityHexString(java.lang.Object)|",
      "|java+method:///org/eclipse/jetty/websocket/api/UpgradeRequest/getUserPrincipal()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/eclipse/jetty/websocket/api/UpgradeRequest/getHeaders()|",
      "|java+method:///org/eclipse/jetty/websocket/api/Session/getUpgradeRequest()|",
      "|java+method:///org/springframework/http/HttpHeaders/putAll(java.util.Map)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+constructor:///org/springframework/web/socket/WebSocketExtension/WebSocketExtension(java.lang.String,java.util.Map)|",
      "|java+method:///org/springframework/http/HttpHeaders/readOnlyHttpHeaders(org.springframework.http.HttpHeaders)|",
      "|java+method:///org/eclipse/jetty/websocket/api/UpgradeResponse/getAcceptedSubProtocol()|",
      "|java+constructor:///org/springframework/http/HttpHeaders/HttpHeaders()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/springframework/web/socket/adapter/jetty/JettyWebSocketSession/getNativeSession()|",
      "|java+method:///org/eclipse/jetty/websocket/api/UpgradeRequest/getRequestURI()|",
      "|java+method:///org/springframework/web/socket/adapter/AbstractWebSocketSession/initializeNativeSession(java.lang.Object)|",
      "|java+method:///org/eclipse/jetty/websocket/api/extensions/ExtensionConfig/getParameters()|",
      "|java+method:///org/eclipse/jetty/websocket/api/UpgradeResponse/getExtensions()|",
      "|java+method:///org/eclipse/jetty/websocket/api/extensions/ExtensionConfig/getName()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/eclipse/jetty/websocket/api/Session/getUpgradeResponse()|"
    ],
    "affectedLib": "org.springframework:spring-web:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/sockjs/support/AbstractSockJsService/addCorsHeaders(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,org.springframework.http.HttpMethod%5B%5D)|",
    "called": "|java+method:///org/springframework/http/HttpHeaders/getFirst(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/http/HttpHeaders/getFirst(java.lang.String)|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/getHeaders()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getHeaders()|",
      "|java+method:///org/springframework/util/StringUtils/arrayToDelimitedString(java.lang.Object%5B%5D,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/util/ObjectUtils/isEmpty(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/String/valueOf(long)|",
      "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)|",
      "|java+method:///org/springframework/http/HttpHeaders/add(java.lang.String,java.lang.String)|",
      "|java+method:///org/springframework/http/HttpHeaders/get(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/http/HttpHeaders/getFirst(java.lang.String)|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/getHeaders()|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getHeaders()|",
      "|java+method:///org/springframework/util/StringUtils/arrayToDelimitedString(java.lang.Object%5B%5D,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/util/ObjectUtils/isEmpty(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/String/valueOf(long)|",
      "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)|",
      "|java+method:///org/springframework/http/HttpHeaders/add(java.lang.String,java.lang.String)|",
      "|java+method:///org/springframework/http/HttpHeaders/get(java.lang.Object)|"
    ],
    "affectedLib": "org.springframework:spring-web:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)|",
    "called": "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/pushContainingComponent(org.springframework.beans.factory.parsing.CompositeComponentDefinition)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/getMessageChannel(java.lang.String,org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerBrokerMessagingTemplate(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/popAndRegisterContainingComponent()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/springframework/beans/MutablePropertyValues/add(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/w3c/dom/Element/getTagName()|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerAnnotationMethodMessageHandler(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/util/StringUtils/tokenizeToStringArray(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///org/springframework/beans/factory/parsing/CompositeComponentDefinition/CompositeComponentDefinition(java.lang.String,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerUserDestinationResolver(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElementByTagName(org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerHttpRequestHandler(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerBrokerMessageConverter(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/support/ManagedMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerBeanDef(org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/ManagedMap/setSource(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerSubProtocolWebSocketHandler(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/extractSource(java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerUserDestinationMessageHandler(org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerMessageBroker(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/getPropertyValues()|",
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElementsByTagName(org.w3c.dom.Element,java.lang.String)|",
      "|java+constructor:///org/springframework/beans/factory/config/RuntimeBeanReference/RuntimeBeanReference(java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///org/springframework/beans/factory/support/RootBeanDefinition/RootBeanDefinition(java.lang.Class)|",
      "|java+constructor:///org/springframework/beans/factory/support/ManagedMap/ManagedMap()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|",
      "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/pushContainingComponent(org.springframework.beans.factory.parsing.CompositeComponentDefinition)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerBeanDefByName(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/getMessageChannel(java.lang.String,org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerMessageConverter(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/popAndRegisterContainingComponent()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/springframework/beans/MutablePropertyValues/add(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/w3c/dom/Element/getTagName()|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerAnnotationMethodMessageHandler(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerRequestHandler(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/util/StringUtils/tokenizeToStringArray(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///org/springframework/beans/factory/parsing/CompositeComponentDefinition/CompositeComponentDefinition(java.lang.String,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerUserDestinationResolver(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElementByTagName(org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerMessagingTemplate(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerWebSocketMessageBrokerStats(org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerUserDestinationMessageHandler(org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/support/ManagedMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerBeanDef(org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/ManagedMap/setSource(java.lang.Object)|",
      "|java+constructor:///org/springframework/messaging/simp/SimpSessionScope/SimpSessionScope()|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/extractSource(java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerMessageBroker(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///java/util/Collections/singletonMap(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/getPropertyValues()|",
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElementsByTagName(org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerSubProtoHandler(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+constructor:///org/springframework/beans/factory/config/RuntimeBeanReference/RuntimeBeanReference(java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///org/springframework/beans/factory/support/RootBeanDefinition/RootBeanDefinition(java.lang.Class)|",
      "|java+constructor:///org/springframework/beans/factory/support/ManagedMap/ManagedMap()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|",
      "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/server/support/HttpSessionHandshakeInterceptor/beforeHandshake(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,org.springframework.web.socket.WebSocketHandler,java.util.Map)|",
    "called": "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///javax/servlet/http/HttpServletRequest/getSession(boolean)|",
      "|java+method:///javax/servlet/http/HttpSession/getAttributeNames()|",
      "|java+method:///org/springframework/http/server/ServletServerHttpRequest/getServletRequest()|",
      "|java+method:///java/util/Collection/contains(java.lang.Object)|",
      "|java+method:///java/util/Enumeration/nextElement()|",
      "|java+method:///javax/servlet/http/HttpSession/getAttribute(java.lang.String)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/commons/logging/Log/trace(java.lang.Object)|",
      "|java+method:///org/apache/commons/logging/Log/isTraceEnabled()|",
      "|java+method:///java/util/Enumeration/hasMoreElements()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)|"
    ],
    "v2Body": [
      "|java+method:///javax/servlet/http/HttpServletRequest/getSession(boolean)|",
      "|java+method:///javax/servlet/http/HttpSession/getAttributeNames()|",
      "|java+method:///org/springframework/http/server/ServletServerHttpRequest/getServletRequest()|",
      "|java+method:///java/util/Collection/contains(java.lang.Object)|",
      "|java+method:///java/util/Enumeration/hasMoreElements()|",
      "|java+method:///java/util/Enumeration/nextElement()|",
      "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)|",
      "|java+method:///javax/servlet/http/HttpSession/getAttribute(java.lang.String)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerMessageBroker(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
    "called": "|java+method:///org/springframework/util/StringUtils/tokenizeToStringArray(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/util/StringUtils/tokenizeToStringArray(java.lang.String,java.lang.String)|",
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElementByTagName(org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+constructor:///org/springframework/beans/factory/config/ConstructorArgumentValues/ConstructorArgumentValues()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/springframework/beans/MutablePropertyValues/add(java.lang.String,java.lang.Object)|",
      "|java+constructor:///org/springframework/beans/MutablePropertyValues/MutablePropertyValues()|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/config/ConstructorArgumentValues/addIndexedArgumentValue(int,java.lang.Object)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerBeanDef(org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+constructor:///org/springframework/beans/factory/support/RootBeanDefinition/RootBeanDefinition(java.lang.Class,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.MutablePropertyValues)|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/util/StringUtils/tokenizeToStringArray(java.lang.String,java.lang.String)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElementByTagName(org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/config/ConstructorArgumentValues/addIndexedArgumentValue(int,java.lang.Object)|",
      "|java+method:///org/w3c/dom/Element/hasAttribute(java.lang.String)|",
      "|java+constructor:///org/springframework/beans/factory/config/ConstructorArgumentValues/ConstructorArgumentValues()|",
      "|java+method:///org/springframework/beans/MutablePropertyValues/add(java.lang.String,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/getPropertyValues()|",
      "|java+constructor:///org/springframework/beans/factory/config/RuntimeBeanReference/RuntimeBeanReference(java.lang.String)|",
      "|java+constructor:///org/springframework/beans/MutablePropertyValues/MutablePropertyValues()|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerBeanDef(org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+constructor:///org/springframework/beans/factory/support/RootBeanDefinition/RootBeanDefinition(java.lang.Class,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.MutablePropertyValues)|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/sockjs/transport/session/AbstractSockJsSession/scheduleHeartbeat()|",
    "called": "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/web/socket/sockjs/transport/SockJsServiceConfig/getHeartbeatTime()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/web/socket/sockjs/transport/session/AbstractSockJsSession/cancelHeartbeat()|",
      "|java+method:///org/springframework/web/socket/sockjs/transport/SockJsServiceConfig/getTaskScheduler()|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+constructor:///java/util/Date/Date(long)|",
      "|java+method:///org/springframework/web/socket/sockjs/transport/session/AbstractSockJsSession/isActive()|",
      "|java+constructor:///org/springframework/web/socket/sockjs/transport/session/AbstractSockJsSession$2/AbstractSockJsSession$2(org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/commons/logging/Log/trace(java.lang.Object)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///org/apache/commons/logging/Log/isTraceEnabled()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|",
      "|java+method:///org/springframework/scheduling/TaskScheduler/schedule(java.lang.Runnable,java.util.Date)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/web/socket/sockjs/transport/SockJsServiceConfig/getHeartbeatTime()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/web/socket/sockjs/transport/session/AbstractSockJsSession/cancelHeartbeat()|",
      "|java+method:///org/springframework/web/socket/sockjs/transport/SockJsServiceConfig/getTaskScheduler()|",
      "|java+constructor:///java/util/Date/Date(long)|",
      "|java+method:///org/springframework/web/socket/sockjs/transport/session/AbstractSockJsSession/isActive()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/commons/logging/Log/trace(java.lang.Object)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///org/apache/commons/logging/Log/isTraceEnabled()|",
      "|java+method:///org/springframework/web/socket/sockjs/transport/session/AbstractSockJsSession/getId()|",
      "|java+constructor:///org/springframework/web/socket/sockjs/transport/session/AbstractSockJsSession$2/AbstractSockJsSession$2(org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|",
      "|java+method:///org/springframework/scheduling/TaskScheduler/schedule(java.lang.Runnable,java.util.Date)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/sockjs/support/AbstractSockJsService/validateRequest(java.lang.String,java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/commons/logging/Log/warn(java.lang.Object)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/web/socket/sockjs/support/AbstractSockJsService/isWebSocketEnabled()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/lang/String/contains(java.lang.CharSequence)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object)|",
      "|java+method:///java/lang/String/contains(java.lang.CharSequence)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/sockjs/support/AbstractSockJsService/handleRequest(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,java.lang.String,org.springframework.web.socket.WebSocketHandler)|",
    "called": "|java+method:///org/springframework/util/StringUtils/tokenizeToStringArray(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getHeaders()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/web/socket/sockjs/support/AbstractSockJsService/isWebSocketEnabled()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/commons/logging/Log/isWarnEnabled()|",
      "|java+method:///org/springframework/web/socket/sockjs/support/AbstractSockJsService$SockJsRequestHandler/handle(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse)|",
      "|java+method:///java/nio/charset/Charset/forName(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/util/StringUtils/tokenizeToStringArray(java.lang.String,java.lang.String)|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/getHeaders()|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/setStatusCode(org.springframework.http.HttpStatus)|",
      "|java+method:///org/apache/commons/logging/Log/warn(java.lang.Object)|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getURI()|",
      "|java+method:///org/springframework/http/InvalidMediaTypeException/getMediaType()|",
      "|java+constructor:///org/springframework/http/MediaType/MediaType(java.lang.String,java.lang.String,java.nio.charset.Charset)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/web/socket/sockjs/support/AbstractSockJsService/handleRawWebSocketRequest(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,org.springframework.web.socket.WebSocketHandler)|",
      "|java+method:///java/lang/String/getBytes(java.lang.String)|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///org/springframework/web/socket/sockjs/SockJsException/SockJsException(java.lang.String,java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getMethod()|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/getBody()|",
      "|java+method:///org/springframework/http/HttpHeaders/setContentType(org.springframework.http.MediaType)|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/close()|",
      "|java+method:///org/springframework/web/socket/sockjs/support/AbstractSockJsService/validateRequest(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/io/OutputStream/write(byte%5B%5D)|",
      "|java+method:///java/lang/String/matches(java.lang.String)|",
      "|java+method:///org/springframework/web/socket/sockjs/support/AbstractSockJsService/handleTransportRequest(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,org.springframework.web.socket.WebSocketHandler,java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getHeaders()|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/setStatusCode(org.springframework.http.HttpStatus)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getURI()|",
      "|java+method:///org/springframework/web/socket/sockjs/support/AbstractSockJsService/isWebSocketEnabled()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/nio/charset/Charset/forName(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/util/StringUtils/tokenizeToStringArray(java.lang.String,java.lang.String)|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/getHeaders()|",
      "|java+constructor:///org/springframework/http/MediaType/MediaType(java.lang.String,java.lang.String,java.nio.charset.Charset)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/web/socket/sockjs/support/AbstractSockJsService/handleRawWebSocketRequest(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,org.springframework.web.socket.WebSocketHandler)|",
      "|java+method:///java/lang/String/getBytes(java.lang.String)|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///org/springframework/web/socket/sockjs/support/AbstractSockJsService$SockJsRequestHandler/handle(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///org/springframework/web/socket/sockjs/SockJsException/SockJsException(java.lang.String,java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getMethod()|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/getBody()|",
      "|java+method:///org/springframework/http/HttpHeaders/setContentType(org.springframework.http.MediaType)|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/close()|",
      "|java+method:///org/springframework/web/socket/sockjs/support/AbstractSockJsService/validateRequest(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/io/OutputStream/write(byte%5B%5D)|",
      "|java+method:///java/lang/String/matches(java.lang.String)|",
      "|java+method:///org/springframework/web/socket/sockjs/support/AbstractSockJsService/handleTransportRequest(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,org.springframework.web.socket.WebSocketHandler,java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/adapter/jetty/JettyWebSocketSession/initializeNativeSession(org.eclipse.jetty.websocket.api.Session)|",
    "called": "|java+method:///org/springframework/util/ObjectUtils/getIdentityHexString(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/eclipse/jetty/websocket/api/UpgradeRequest/getUserPrincipal()|",
      "|java+method:///org/eclipse/jetty/websocket/api/UpgradeResponse/getAcceptedSubProtocol()|",
      "|java+method:///org/eclipse/jetty/websocket/api/Session/getUpgradeRequest()|",
      "|java+method:///org/springframework/web/socket/adapter/AbstractWebSocketSession/initializeNativeSession(java.lang.Object)|",
      "|java+method:///org/eclipse/jetty/websocket/api/Session/getUpgradeResponse()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/util/ObjectUtils/getIdentityHexString(java.lang.Object)|",
      "|java+method:///org/eclipse/jetty/websocket/api/UpgradeRequest/getUserPrincipal()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/eclipse/jetty/websocket/api/UpgradeRequest/getHeaders()|",
      "|java+method:///org/eclipse/jetty/websocket/api/Session/getUpgradeRequest()|",
      "|java+method:///org/springframework/http/HttpHeaders/putAll(java.util.Map)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+constructor:///org/springframework/web/socket/WebSocketExtension/WebSocketExtension(java.lang.String,java.util.Map)|",
      "|java+method:///org/springframework/http/HttpHeaders/readOnlyHttpHeaders(org.springframework.http.HttpHeaders)|",
      "|java+method:///org/eclipse/jetty/websocket/api/UpgradeResponse/getAcceptedSubProtocol()|",
      "|java+constructor:///org/springframework/http/HttpHeaders/HttpHeaders()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/springframework/web/socket/adapter/jetty/JettyWebSocketSession/getNativeSession()|",
      "|java+method:///org/eclipse/jetty/websocket/api/UpgradeRequest/getRequestURI()|",
      "|java+method:///org/springframework/web/socket/adapter/AbstractWebSocketSession/initializeNativeSession(java.lang.Object)|",
      "|java+method:///org/eclipse/jetty/websocket/api/extensions/ExtensionConfig/getParameters()|",
      "|java+method:///org/eclipse/jetty/websocket/api/UpgradeResponse/getExtensions()|",
      "|java+method:///org/eclipse/jetty/websocket/api/extensions/ExtensionConfig/getName()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/eclipse/jetty/websocket/api/Session/getUpgradeResponse()|"
    ],
    "affectedLib": "org.springframework:spring-core:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+constructor:///org/springframework/web/socket/sockjs/transport/session/AbstractSockJsSession/AbstractSockJsSession(java.lang.String,org.springframework.web.socket.sockjs.transport.SockJsServiceConfig,org.springframework.web.socket.WebSocketHandler,java.util.Map)|",
    "called": "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/apache/commons/logging/LogFactory/getLog(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap()|",
      "|java+method:///java/util/Map/putAll(java.util.Map)|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/apache/commons/logging/LogFactory/getLog(java.lang.Class)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+constructor:///org/springframework/web/socket/sockjs/transport/handler/SockJsWebSocketHandler/SockJsWebSocketHandler(org.springframework.web.socket.sockjs.transport.SockJsServiceConfig,org.springframework.web.socket.WebSocketHandler,org.springframework.web.socket.sockjs.transport.session.WebSocketServerSockJsSession)|",
    "called": "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/springframework/web/socket/handler/TextWebSocketHandler/TextWebSocketHandler()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicInteger/AtomicInteger(int)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+method:///org/springframework/web/socket/SubProtocolCapable/getSubProtocols()|",
      "|java+constructor:///org/springframework/web/socket/handler/TextWebSocketHandler/TextWebSocketHandler()|",
      "|java+method:///org/springframework/web/socket/handler/WebSocketHandlerDecorator/unwrap(org.springframework.web.socket.WebSocketHandler)|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicInteger/AtomicInteger(int)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/config/annotation/WebMvcStompWebSocketEndpointRegistration/getMappings()|",
    "called": "|java+constructor:///org/springframework/util/LinkedMultiValueMap/LinkedMultiValueMap()|",
    "v1Body": [
      "|java+constructor:///org/springframework/web/socket/server/support/WebSocketHttpRequestHandler/WebSocketHttpRequestHandler(org.springframework.web.socket.WebSocketHandler,org.springframework.web.socket.server.HandshakeHandler)|",
      "|java+constructor:///org/springframework/web/socket/server/support/WebSocketHttpRequestHandler/WebSocketHttpRequestHandler(org.springframework.web.socket.WebSocketHandler)|",
      "|java+constructor:///org/springframework/util/LinkedMultiValueMap/LinkedMultiValueMap()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/util/MultiValueMap/add(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/springframework/web/socket/sockjs/support/SockJsHttpRequestHandler/SockJsHttpRequestHandler(org.springframework.web.socket.sockjs.SockJsService,org.springframework.web.socket.WebSocketHandler)|",
      "|java+method:///org/springframework/web/socket/config/annotation/WebMvcStompWebSocketEndpointRegistration$StompSockJsServiceRegistration/getSockJsService()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///org/springframework/web/socket/server/support/WebSocketHttpRequestHandler/WebSocketHttpRequestHandler(org.springframework.web.socket.WebSocketHandler,org.springframework.web.socket.server.HandshakeHandler)|",
      "|java+constructor:///org/springframework/web/socket/server/support/WebSocketHttpRequestHandler/WebSocketHttpRequestHandler(org.springframework.web.socket.WebSocketHandler)|",
      "|java+constructor:///org/springframework/util/LinkedMultiValueMap/LinkedMultiValueMap()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///org/springframework/util/MultiValueMap/add(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/web/socket/server/support/WebSocketHttpRequestHandler/setHandshakeInterceptors(java.util.List)|",
      "|java+constructor:///org/springframework/web/socket/sockjs/support/SockJsHttpRequestHandler/SockJsHttpRequestHandler(org.springframework.web.socket.sockjs.SockJsService,org.springframework.web.socket.WebSocketHandler)|",
      "|java+method:///org/springframework/web/socket/config/annotation/WebMvcStompWebSocketEndpointRegistration$StompSockJsServiceRegistration/getSockJsService()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+constructor:///org/springframework/web/socket/sockjs/frame/SockJsFrame/SockJsFrame(java.lang.String)|",
    "called": "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/charAt(int)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+constructor:///org/springframework/web/socket/client/jetty/JettyWebSocketClient/JettyWebSocketClient()|",
    "called": "|java+constructor:///org/springframework/core/task/SimpleAsyncTaskExecutor/SimpleAsyncTaskExecutor()|",
    "v1Body": [
      "|java+constructor:///org/springframework/web/socket/client/AbstractWebSocketClient/AbstractWebSocketClient()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+constructor:///org/eclipse/jetty/websocket/client/WebSocketClient/WebSocketClient()|"
    ],
    "v2Body": [
      "|java+constructor:///org/springframework/web/socket/client/AbstractWebSocketClient/AbstractWebSocketClient()|",
      "|java+constructor:///org/springframework/core/task/SimpleAsyncTaskExecutor/SimpleAsyncTaskExecutor()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+constructor:///org/eclipse/jetty/websocket/client/WebSocketClient/WebSocketClient()|"
    ],
    "affectedLib": "org.springframework:spring-core:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/handleMessageFromClient(org.springframework.web.socket.WebSocketSession,org.springframework.web.socket.WebSocketMessage,org.springframework.messaging.MessageChannel)|",
    "called": "|java+method:///org/springframework/util/Assert/isInstanceOf(java.lang.Class,java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/wrap(org.springframework.messaging.Message)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/getId()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/sendErrorMessage(org.springframework.web.socket.WebSocketSession,java.lang.Throwable)|",
      "|java+method:///org/springframework/messaging/MessageChannel/send(org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/messaging/Message/getPayload()|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/setUser(java.security.Principal)|",
      "|java+constructor:///org/springframework/web/socket/messaging/SessionConnectEvent/SessionConnectEvent(java.lang.Object,org.springframework.messaging.Message)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/getAttributes()|",
      "|java+method:///org/springframework/messaging/support/MessageBuilder/build()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/publishEvent(org.springframework.context.ApplicationEvent)|",
      "|java+method:///org/springframework/web/socket/TextMessage/asBytes()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/messaging/support/MessageBuilder/withPayload(java.lang.Object)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/setSessionId(java.lang.String)|",
      "|java+method:///org/springframework/messaging/simp/SimpMessageType/equals(java.lang.Object)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/getMessageType()|",
      "|java+method:///org/springframework/messaging/simp/stomp/BufferingStompDecoder/decode(java.nio.ByteBuffer)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/messaging/support/MessageBuilder/setHeaders(org.springframework.messaging.support.MessageHeaderAccessor)|",
      "|java+method:///org/apache/commons/logging/Log/trace(java.lang.Object)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/springframework/messaging/simp/stomp/BufferingStompDecoder/getBufferSize()|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/setSessionAttributes(java.util.Map)|",
      "|java+method:///java/nio/ByteBuffer/wrap(byte%5B%5D)|",
      "|java+method:///org/springframework/util/Assert/isInstanceOf(java.lang.Class,java.lang.Object)|",
      "|java+method:///org/springframework/messaging/simp/stomp/BufferingStompDecoder/getBufferSizeLimit()|",
      "|java+method:///org/apache/commons/logging/Log/isTraceEnabled()|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/getPrincipal()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompCommand/equals(java.lang.Object)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/getCommand()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/web/socket/WebSocketSession/getAttributes()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/getId()|",
      "|java+method:///org/springframework/messaging/support/MessageHeaderAccessor/getAccessor(org.springframework.messaging.Message,java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/sendErrorMessage(org.springframework.web.socket.WebSocketSession,java.lang.Throwable)|",
      "|java+method:///org/springframework/messaging/MessageChannel/send(org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/messaging/Message/getPayload()|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/getShortLogMessage(java.lang.Object)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/setUser(java.security.Principal)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/publishEvent(org.springframework.context.ApplicationEvent)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/setImmutable()|",
      "|java+method:///org/springframework/web/socket/TextMessage/asBytes()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/springframework/messaging/simp/SimpAttributesContextHolder/setAttributesFromMessage(org.springframework.messaging.Message)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/setSessionId(java.lang.String)|",
      "|java+constructor:///org/springframework/web/socket/messaging/SessionUnsubscribeEvent/SessionUnsubscribeEvent(java.lang.Object,org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/messaging/simp/stomp/BufferingStompDecoder/decode(java.nio.ByteBuffer)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/commons/logging/Log/trace(java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler$Stats/incrementDisconnectCount()|",
      "|java+method:///org/apache/commons/logging/Log/isErrorEnabled()|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/springframework/messaging/simp/stomp/BufferingStompDecoder/getBufferSize()|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/setSessionAttributes(java.util.Map)|",
      "|java+method:///java/nio/ByteBuffer/wrap(byte%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/springframework/messaging/simp/SimpAttributesContextHolder/resetAttributes()|",
      "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler$Stats/incrementConnectCount()|",
      "|java+method:///org/springframework/util/Assert/isInstanceOf(java.lang.Class,java.lang.Object)|",
      "|java+method:///org/springframework/messaging/simp/stomp/BufferingStompDecoder/getBufferSizeLimit()|",
      "|java+method:///org/apache/commons/logging/Log/isTraceEnabled()|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/getPrincipal()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompCommand/equals(java.lang.Object)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/getCommand()|",
      "|java+constructor:///org/springframework/web/socket/messaging/SessionConnectEvent/SessionConnectEvent(java.lang.Object,org.springframework.messaging.Message)|",
      "|java+constructor:///org/springframework/web/socket/messaging/SessionSubscribeEvent/SessionSubscribeEvent(java.lang.Object,org.springframework.messaging.Message)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerAnnotationMethodMessageHandler(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
    "called": "|java+method:///org/springframework/util/StringUtils/tokenizeToStringArray(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/util/StringUtils/tokenizeToStringArray(java.lang.String,java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/config/ConstructorArgumentValues/addIndexedArgumentValue(int,java.lang.Object)|",
      "|java+constructor:///org/springframework/beans/factory/config/ConstructorArgumentValues/ConstructorArgumentValues()|",
      "|java+method:///org/springframework/beans/MutablePropertyValues/add(java.lang.String,java.lang.Object)|",
      "|java+constructor:///org/springframework/beans/MutablePropertyValues/MutablePropertyValues()|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerBeanDef(org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+constructor:///org/springframework/beans/factory/support/RootBeanDefinition/RootBeanDefinition(java.lang.Class,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.MutablePropertyValues)|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/util/StringUtils/tokenizeToStringArray(java.lang.String,java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/config/ConstructorArgumentValues/addIndexedArgumentValue(int,java.lang.Object)|",
      "|java+method:///org/w3c/dom/Element/hasAttribute(java.lang.String)|",
      "|java+constructor:///org/springframework/beans/factory/config/ConstructorArgumentValues/ConstructorArgumentValues()|",
      "|java+method:///org/springframework/beans/MutablePropertyValues/add(java.lang.String,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/getPropertyValues()|",
      "|java+constructor:///org/springframework/beans/factory/config/RuntimeBeanReference/RuntimeBeanReference(java.lang.String)|",
      "|java+constructor:///org/springframework/beans/MutablePropertyValues/MutablePropertyValues()|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerBeanDef(org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+constructor:///org/springframework/beans/factory/support/RootBeanDefinition/RootBeanDefinition(java.lang.Class,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.MutablePropertyValues)|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/AbstractWebSocketMessage/hashCode()|",
    "called": "|java+method:///org/springframework/util/ObjectUtils/nullSafeHashCode(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/springframework/util/ObjectUtils/nullSafeHashCode(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Object/hashCode()|",
      "|java+method:///org/springframework/util/ObjectUtils/nullSafeHashCode(java.lang.Object)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/sockjs/transport/session/WebSocketServerSockJsSession/handleMessage(org.springframework.web.socket.TextMessage,org.springframework.web.socket.WebSocketSession)|",
    "called": "|java+method:///org/springframework/util/StringUtils/isEmpty(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/springframework/web/socket/TextMessage/getPayload()|",
      "|java+method:///org/springframework/web/socket/sockjs/transport/session/WebSocketServerSockJsSession/tryCloseWithSockJsTransportError(java.lang.Throwable,org.springframework.web.socket.CloseStatus)|",
      "|java+method:///org/springframework/web/socket/sockjs/transport/session/WebSocketServerSockJsSession/delegateMessages(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/logging/Log/trace(java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/sockjs/transport/SockJsServiceConfig/getMessageCodec()|",
      "|java+method:///org/springframework/web/socket/sockjs/frame/SockJsMessageCodec/decode(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/springframework/util/StringUtils/isEmpty(java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/sockjs/transport/session/WebSocketServerSockJsSession/getSockJsServiceConfig()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/web/socket/TextMessage/getPayload()|",
      "|java+method:///org/springframework/web/socket/sockjs/transport/session/WebSocketServerSockJsSession/tryCloseWithSockJsTransportError(java.lang.Throwable,org.springframework.web.socket.CloseStatus)|",
      "|java+method:///org/springframework/web/socket/sockjs/transport/session/WebSocketServerSockJsSession/delegateMessages(java.lang.String%5B%5D)|",
      "|java+method:///org/springframework/web/socket/sockjs/transport/SockJsServiceConfig/getMessageCodec()|",
      "|java+method:///org/springframework/web/socket/sockjs/frame/SockJsMessageCodec/decode(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/springframework/util/StringUtils/isEmpty(java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/sockjs/transport/session/WebSocketServerSockJsSession/getSockJsServiceConfig()|"
    ],
    "affectedLib": "org.springframework:spring-core:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/client/AbstractWebSocketClient/doHandshake(org.springframework.web.socket.WebSocketHandler,org.springframework.web.socket.WebSocketHttpHeaders,java.net.URI)|",
    "called": "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/getSecWebSocketProtocol()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///java/util/Collections/emptyMap()|",
      "|java+method:///org/springframework/http/HttpHeaders/put(java.lang.String,java.util.List)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+method:///org/springframework/util/Assert/isTrue(boolean,java.lang.String)|",
      "|java+method:///org/springframework/web/socket/client/AbstractWebSocketClient/doHandshakeInternal(org.springframework.web.socket.WebSocketHandler,org.springframework.http.HttpHeaders,java.net.URI,java.util.List,java.util.List,java.util.Map)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/getSecWebSocketExtensions()|",
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/keySet()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/String/toLowerCase()|",
      "|java+constructor:///org/springframework/http/HttpHeaders/HttpHeaders()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/net/URI/getScheme()|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/get(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/getSecWebSocketProtocol()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///java/util/Collections/emptyMap()|",
      "|java+method:///org/springframework/http/HttpHeaders/put(java.lang.String,java.util.List)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+method:///org/springframework/web/socket/client/AbstractWebSocketClient/doHandshakeInternal(org.springframework.web.socket.WebSocketHandler,org.springframework.http.HttpHeaders,java.net.URI,java.util.List,java.util.List,java.util.Map)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/getSecWebSocketExtensions()|",
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/keySet()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/String/toLowerCase()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/web/socket/client/AbstractWebSocketClient/assertUri(java.net.URI)|",
      "|java+constructor:///org/springframework/http/HttpHeaders/HttpHeaders()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/get(java.lang.Object)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/messaging/SubProtocolWebSocketHandler/findProtocolHandler(org.springframework.web.socket.WebSocketSession)|",
    "called": "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/warn(java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/getAcceptedProtocol()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/springframework/util/StringUtils/isEmpty(java.lang.Object)|",
      "|java+constructor:///java/util/HashSet/HashSet(java.util.Collection)|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Exception/toString()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/getAcceptedProtocol()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/springframework/util/StringUtils/isEmpty(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+constructor:///org/springframework/web/socket/client/jetty/JettyWebSocketClient/JettyWebSocketClient(org.eclipse.jetty.websocket.client.WebSocketClient)|",
    "called": "|java+constructor:///org/springframework/core/task/SimpleAsyncTaskExecutor/SimpleAsyncTaskExecutor()|",
    "v1Body": [
      "|java+constructor:///org/springframework/web/socket/client/AbstractWebSocketClient/AbstractWebSocketClient()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+constructor:///org/springframework/web/socket/client/AbstractWebSocketClient/AbstractWebSocketClient()|",
      "|java+constructor:///org/springframework/core/task/SimpleAsyncTaskExecutor/SimpleAsyncTaskExecutor()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "org.springframework:spring-core:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/messaging/SubProtocolWebSocketHandler/start()|",
    "called": "|java+method:///org/springframework/util/Assert/isTrue(boolean,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/messaging/SubscribableChannel/subscribe(org.springframework.messaging.MessageHandler)|"
    ],
    "v2Body": [
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/springframework/util/Assert/isTrue(boolean,java.lang.String)|",
      "|java+method:///org/springframework/messaging/SubscribableChannel/subscribe(org.springframework.messaging.MessageHandler)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+constructor:///org/springframework/web/socket/messaging/SubProtocolWebSocketHandler/SubProtocolWebSocketHandler(org.springframework.messaging.MessageChannel,org.springframework.messaging.SubscribableChannel)|",
    "called": "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/util/concurrent/locks/ReentrantLock/ReentrantLock()|",
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+constructor:///java/util/TreeMap/TreeMap(java.util.Comparator)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/apache/commons/logging/LogFactory/getLog(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///org/springframework/web/socket/messaging/SubProtocolWebSocketHandler$Stats/SubProtocolWebSocketHandler$Stats(org.springframework.web.socket.messaging.SubProtocolWebSocketHandler,org.springframework.web.socket.messaging.SubProtocolWebSocketHandler$1)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///java/util/concurrent/locks/ReentrantLock/ReentrantLock()|",
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+constructor:///java/util/TreeMap/TreeMap(java.util.Comparator)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/apache/commons/logging/LogFactory/getLog(java.lang.Class)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/messaging/SubProtocolWebSocketHandler/addProtocolHandler(org.springframework.web.socket.messaging.SubProtocolHandler)|",
    "called": "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/springframework/web/socket/messaging/SubProtocolHandler/getSupportedProtocols()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/commons/logging/Log/warn(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/springframework/web/socket/messaging/SubProtocolHandler/getSupportedProtocols()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/handleWebSocketVersionNotSupported(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse)|",
    "called": "|java+method:///org/springframework/util/StringUtils/arrayToCommaDelimitedString(java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///org/springframework/http/server/ServerHttpResponse/getHeaders()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getHeaders()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/http/HttpHeaders/get(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/springframework/util/StringUtils/arrayToCommaDelimitedString(java.lang.Object%5B%5D)|",
      "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/getSupportedVersions()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/http/HttpHeaders/put(java.lang.String,java.util.List)|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/setStatusCode(org.springframework.http.HttpStatus)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/http/HttpHeaders/getFirst(java.lang.String)|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/getHeaders()|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getHeaders()|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/util/StringUtils/arrayToCommaDelimitedString(java.lang.Object%5B%5D)|",
      "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/getSupportedVersions()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/http/HttpHeaders/put(java.lang.String,java.util.List)|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/setStatusCode(org.springframework.http.HttpStatus)|",
      "|java+method:///java/util/Arrays/toString(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/isErrorEnabled()|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/getMessageChannel(java.lang.String,org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
    "called": "|java+method:///org/springframework/util/xml/DomUtils/getChildElementByTagName(org.w3c.dom.Element,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElementByTagName(org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/config/ConstructorArgumentValues/addIndexedArgumentValue(int,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerBeanDefByName(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/springframework/beans/factory/config/ConstructorArgumentValues/ConstructorArgumentValues()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/beans/MutablePropertyValues/add(java.lang.String,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/WebSocketNamespaceUtils/parseBeanSubElements(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/springframework/beans/factory/support/RootBeanDefinition/RootBeanDefinition(java.lang.Class,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.MutablePropertyValues)|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/getPropertyValues()|",
      "|java+method:///org/springframework/util/StringUtils/isEmpty(java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/getDefaultExecutorBeanDefinition(java.lang.String)|",
      "|java+constructor:///org/springframework/beans/factory/config/RuntimeBeanReference/RuntimeBeanReference(java.lang.String)|",
      "|java+constructor:///org/springframework/beans/factory/support/RootBeanDefinition/RootBeanDefinition(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElementByTagName(org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/config/ConstructorArgumentValues/addIndexedArgumentValue(int,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerBeanDefByName(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/w3c/dom/Element/hasAttribute(java.lang.String)|",
      "|java+constructor:///org/springframework/beans/factory/config/ConstructorArgumentValues/ConstructorArgumentValues()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/beans/MutablePropertyValues/add(java.lang.String,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/getPropertyValues()|",
      "|java+method:///org/springframework/web/socket/config/WebSocketNamespaceUtils/parseBeanSubElements(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/springframework/beans/factory/support/RootBeanDefinition/RootBeanDefinition(java.lang.Class,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.MutablePropertyValues)|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/getDefaultExecutorBeanDefinition(java.lang.String)|",
      "|java+constructor:///org/springframework/beans/factory/config/RuntimeBeanReference/RuntimeBeanReference(java.lang.String)|",
      "|java+constructor:///org/springframework/beans/factory/support/RootBeanDefinition/RootBeanDefinition(java.lang.Class)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/config/HandlersBeanDefinitionParser/parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)|",
    "called": "|java+method:///org/springframework/util/xml/DomUtils/getChildElementsByTagName(org.w3c.dom.Element,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/registerComponent(org.springframework.beans.factory.parsing.ComponentDefinition)|",
      "|java+method:///org/springframework/beans/factory/xml/XmlReaderContext/registerWithGeneratedName(org.springframework.beans.factory.config.BeanDefinition)|",
      "|java+method:///org/springframework/beans/factory/support/ManagedMap/setSource(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/popAndRegisterContainingComponent()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/setRole(int)|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+method:///org/w3c/dom/Element/getTagName()|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/getReaderContext()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/springframework/web/socket/config/HandlersBeanDefinitionParser$HandlerMappingStrategy/createMappings(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)|",
      "|java+constructor:///org/springframework/beans/factory/parsing/CompositeComponentDefinition/CompositeComponentDefinition(java.lang.String,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/pushContainingComponent(org.springframework.beans.factory.parsing.CompositeComponentDefinition)|",
      "|java+constructor:///org/springframework/beans/factory/parsing/BeanComponentDefinition/BeanComponentDefinition(org.springframework.beans.factory.config.BeanDefinition,java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/support/ManagedMap/putAll(java.util.Map)|",
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElementByTagName(org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/web/socket/config/HandlersBeanDefinitionParser/createHandlerMappingStrategy(org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.support.ManagedList)|",
      "|java+method:///org/springframework/web/socket/config/WebSocketNamespaceUtils/registerHandshakeHandler(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/extractSource(java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/setSource(java.lang.Object)|",
      "|java+method:///org/springframework/beans/MutablePropertyValues/add(java.lang.String,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/WebSocketNamespaceUtils/registerSockJsService(org.w3c.dom.Element,java.lang.String,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/getPropertyValues()|",
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElementsByTagName(org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///org/springframework/beans/factory/support/RootBeanDefinition/RootBeanDefinition(java.lang.Class)|",
      "|java+constructor:///org/springframework/beans/factory/support/ManagedMap/ManagedMap()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/springframework/web/socket/config/WebSocketNamespaceUtils/parseBeanSubElements(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElementByTagName(org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/beans/factory/xml/XmlReaderContext/registerWithGeneratedName(org.springframework.beans.factory.config.BeanDefinition)|",
      "|java+method:///org/springframework/beans/factory/support/ManagedMap/setSource(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/popAndRegisterContainingComponent()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/setRole(int)|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/getReaderContext()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///org/springframework/beans/factory/parsing/CompositeComponentDefinition/CompositeComponentDefinition(java.lang.String,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/pushContainingComponent(org.springframework.beans.factory.parsing.CompositeComponentDefinition)|",
      "|java+constructor:///org/springframework/beans/factory/parsing/BeanComponentDefinition/BeanComponentDefinition(org.springframework.beans.factory.config.BeanDefinition,java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/registerComponent(org.springframework.beans.factory.parsing.ComponentDefinition)|",
      "|java+method:///org/springframework/web/socket/config/HandlersBeanDefinitionParser$HandlerMappingStrategy/addMapping(org.w3c.dom.Element,org.springframework.beans.factory.support.ManagedMap,org.springframework.beans.factory.xml.ParserContext)|",
      "|java+method:///org/springframework/web/socket/config/WebSocketNamespaceUtils/registerHandshakeHandler(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/extractSource(java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/setSource(java.lang.Object)|",
      "|java+method:///org/springframework/beans/MutablePropertyValues/add(java.lang.String,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/WebSocketNamespaceUtils/registerSockJsService(org.w3c.dom.Element,java.lang.String,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/getPropertyValues()|",
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElementsByTagName(org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///org/springframework/beans/factory/support/RootBeanDefinition/RootBeanDefinition(java.lang.Class)|",
      "|java+constructor:///org/springframework/beans/factory/support/ManagedMap/ManagedMap()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/springframework/web/socket/config/WebSocketNamespaceUtils/parseBeanSubElements(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)|",
      "|java+method:///org/w3c/dom/Element/getTagName()|",
      "|java+constructor:///org/springframework/web/socket/config/HandlersBeanDefinitionParser$WebSocketHandlerMappingStrategy/HandlersBeanDefinitionParser$WebSocketHandlerMappingStrategy(org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.support.ManagedList,org.springframework.web.socket.config.HandlersBeanDefinitionParser$1)|",
      "|java+constructor:///org/springframework/web/socket/config/HandlersBeanDefinitionParser$SockJsHandlerMappingStrategy/HandlersBeanDefinitionParser$SockJsHandlerMappingStrategy(org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.web.socket.config.HandlersBeanDefinitionParser$1)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/config/WebSocketNamespaceUtils/registerSockJsService(org.w3c.dom.Element,java.lang.String,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
    "called": "|java+method:///org/springframework/util/xml/DomUtils/getChildElementByTagName(org.w3c.dom.Element,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/getReaderContext()|",
      "|java+method:///org/springframework/beans/factory/config/ConstructorArgumentValues/addIndexedArgumentValue(int,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/WebSocketNamespaceUtils/registerSockJsTaskScheduler(java.lang.String,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/xml/XmlReaderContext/registerWithGeneratedName(org.springframework.beans.factory.config.BeanDefinition)|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/getConstructorArgumentValues()|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/setBeanClass(java.lang.Class)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/setSource(java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/setRole(int)|",
      "|java+method:///org/springframework/beans/MutablePropertyValues/add(java.lang.String,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/getPropertyValues()|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+method:///org/springframework/web/socket/config/WebSocketNamespaceUtils/parseBeanSubElements(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)|",
      "|java+method:///java/lang/Long/valueOf(java.lang.String)|",
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElementByTagName(org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+constructor:///org/springframework/beans/factory/config/RuntimeBeanReference/RuntimeBeanReference(java.lang.String)|",
      "|java+constructor:///org/springframework/beans/factory/support/RootBeanDefinition/RootBeanDefinition(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/getReaderContext()|",
      "|java+method:///org/springframework/web/socket/config/WebSocketNamespaceUtils/registerSockJsScheduler(java.lang.String,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/config/ConstructorArgumentValues/addIndexedArgumentValue(int,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/xml/XmlReaderContext/registerWithGeneratedName(org.springframework.beans.factory.config.BeanDefinition)|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/getConstructorArgumentValues()|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/setBeanClass(java.lang.Class)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/setSource(java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/setRole(int)|",
      "|java+method:///org/springframework/beans/MutablePropertyValues/add(java.lang.String,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/getPropertyValues()|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+method:///org/springframework/web/socket/config/WebSocketNamespaceUtils/parseBeanSubElements(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)|",
      "|java+method:///java/lang/Long/valueOf(java.lang.String)|",
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElementByTagName(org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+constructor:///org/springframework/beans/factory/config/RuntimeBeanReference/RuntimeBeanReference(java.lang.String)|",
      "|java+constructor:///org/springframework/beans/factory/support/RootBeanDefinition/RootBeanDefinition(java.lang.Class)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/sockjs/support/AbstractSockJsService/addCorsHeaders(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,org.springframework.http.HttpMethod%5B%5D)|",
    "called": "|java+method:///org/springframework/util/StringUtils/arrayToDelimitedString(java.lang.Object%5B%5D,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/http/HttpHeaders/getFirst(java.lang.String)|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/getHeaders()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getHeaders()|",
      "|java+method:///org/springframework/util/StringUtils/arrayToDelimitedString(java.lang.Object%5B%5D,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/util/ObjectUtils/isEmpty(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/String/valueOf(long)|",
      "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)|",
      "|java+method:///org/springframework/http/HttpHeaders/add(java.lang.String,java.lang.String)|",
      "|java+method:///org/springframework/http/HttpHeaders/get(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/http/HttpHeaders/getFirst(java.lang.String)|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/getHeaders()|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getHeaders()|",
      "|java+method:///org/springframework/util/StringUtils/arrayToDelimitedString(java.lang.Object%5B%5D,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/util/ObjectUtils/isEmpty(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/String/valueOf(long)|",
      "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)|",
      "|java+method:///org/springframework/http/HttpHeaders/add(java.lang.String,java.lang.String)|",
      "|java+method:///org/springframework/http/HttpHeaders/get(java.lang.Object)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+constructor:///org/springframework/web/socket/client/jetty/JettyWebSocketClient/JettyWebSocketClient()|",
    "called": "|java+constructor:///org/eclipse/jetty/websocket/client/WebSocketClient/WebSocketClient()|",
    "v1Body": [
      "|java+constructor:///org/springframework/web/socket/client/AbstractWebSocketClient/AbstractWebSocketClient()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+constructor:///org/eclipse/jetty/websocket/client/WebSocketClient/WebSocketClient()|"
    ],
    "v2Body": [
      "|java+constructor:///org/springframework/web/socket/client/AbstractWebSocketClient/AbstractWebSocketClient()|",
      "|java+constructor:///org/springframework/core/task/SimpleAsyncTaskExecutor/SimpleAsyncTaskExecutor()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+constructor:///org/eclipse/jetty/websocket/client/WebSocketClient/WebSocketClient()|"
    ],
    "affectedLib": "org.eclipse.jetty.websocket:websocket-client:9.2.2.v20140723",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/config/annotation/ServletWebSocketHandlerRegistry/getHandlerMapping()|",
    "called": "|java+constructor:///org/springframework/web/servlet/handler/SimpleUrlHandlerMapping/SimpleUrlHandlerMapping()|",
    "v1Body": [
      "|java+method:///org/springframework/web/servlet/handler/SimpleUrlHandlerMapping/setUrlMap(java.util.Map)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/springframework/web/servlet/handler/SimpleUrlHandlerMapping/SimpleUrlHandlerMapping()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/springframework/web/socket/config/annotation/ServletWebSocketHandlerRegistration/getMappings()|",
      "|java+constructor:///java/util/LinkedHashMap/LinkedHashMap()|",
      "|java+method:///org/springframework/util/MultiValueMap/keySet()|",
      "|java+method:///org/springframework/util/MultiValueMap/get(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/web/servlet/handler/SimpleUrlHandlerMapping/setUrlMap(java.util.Map)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/springframework/web/servlet/handler/SimpleUrlHandlerMapping/SimpleUrlHandlerMapping()|",
      "|java+method:///org/springframework/web/servlet/handler/SimpleUrlHandlerMapping/setUrlPathHelper(org.springframework.web.util.UrlPathHelper)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/springframework/web/socket/config/annotation/ServletWebSocketHandlerRegistration/getMappings()|",
      "|java+constructor:///java/util/LinkedHashMap/LinkedHashMap()|",
      "|java+method:///org/springframework/util/MultiValueMap/keySet()|",
      "|java+method:///org/springframework/util/MultiValueMap/get(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/springframework/web/servlet/handler/SimpleUrlHandlerMapping/setOrder(int)|"
    ],
    "affectedLib": "org.springframework:spring-webmvc:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/config/annotation/WebMvcStompEndpointRegistry/getHandlerMapping()|",
    "called": "|java+constructor:///org/springframework/web/servlet/handler/SimpleUrlHandlerMapping/SimpleUrlHandlerMapping()|",
    "v1Body": [
      "|java+method:///org/springframework/web/servlet/handler/SimpleUrlHandlerMapping/setUrlMap(java.util.Map)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/springframework/web/servlet/handler/SimpleUrlHandlerMapping/SimpleUrlHandlerMapping()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/springframework/web/socket/config/annotation/WebMvcStompWebSocketEndpointRegistration/getMappings()|",
      "|java+constructor:///java/util/LinkedHashMap/LinkedHashMap()|",
      "|java+method:///org/springframework/util/MultiValueMap/keySet()|",
      "|java+method:///org/springframework/util/MultiValueMap/get(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/springframework/web/servlet/handler/SimpleUrlHandlerMapping/setOrder(int)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/web/servlet/handler/SimpleUrlHandlerMapping/setUrlMap(java.util.Map)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/springframework/web/servlet/handler/SimpleUrlHandlerMapping/SimpleUrlHandlerMapping()|",
      "|java+method:///org/springframework/web/servlet/handler/SimpleUrlHandlerMapping/setUrlPathHelper(org.springframework.web.util.UrlPathHelper)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/springframework/web/socket/config/annotation/WebMvcStompWebSocketEndpointRegistration/getMappings()|",
      "|java+constructor:///java/util/LinkedHashMap/LinkedHashMap()|",
      "|java+method:///org/springframework/util/MultiValueMap/keySet()|",
      "|java+method:///org/springframework/util/MultiValueMap/get(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/springframework/web/servlet/handler/SimpleUrlHandlerMapping/setOrder(int)|"
    ],
    "affectedLib": "org.springframework:spring-webmvc:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy$1/handleUpgrade(org.xnio.StreamConnection,io.undertow.server.HttpServerExchange)|",
    "called": "|java+method:///io/undertow/websockets/jsr/EndpointSessionHandler/onConnect(io.undertow.websockets.spi.WebSocketHttpExchange,io.undertow.websockets.core.WebSocketChannel)|",
    "v1Body": [
      "|java+method:///io/undertow/servlet/websockets/ServletWebSocketHttpExchange/getBufferPool()|",
      "|java+method:///io/undertow/websockets/jsr/handshake/HandshakeUtil/setConfig(io.undertow.websockets.core.WebSocketChannel,io.undertow.websockets.jsr.ConfiguredServerEndpoint)|",
      "|java+method:///io/undertow/websockets/jsr/EndpointSessionHandler/onConnect(io.undertow.websockets.spi.WebSocketHttpExchange,io.undertow.websockets.core.WebSocketChannel)|",
      "|java+method:///io/undertow/websockets/core/protocol/Handshake/createChannel(io.undertow.websockets.spi.WebSocketHttpExchange,org.xnio.StreamConnection,org.xnio.Pool)|"
    ],
    "v2Body": [
      "|java+method:///io/undertow/servlet/websockets/ServletWebSocketHttpExchange/getBufferPool()|",
      "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/access$000(org.springframework.web.socket.server.standard.UndertowRequestUpgradeStrategy)|",
      "|java+method:///io/undertow/websockets/jsr/EndpointSessionHandler/onConnect(io.undertow.websockets.spi.WebSocketHttpExchange,io.undertow.websockets.core.WebSocketChannel)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///io/undertow/websockets/core/protocol/Handshake/createChannel(io.undertow.websockets.spi.WebSocketHttpExchange,org.xnio.StreamConnection,org.xnio.Pool)|"
    ],
    "affectedLib": "io.undertow:undertow-websockets-jsr:1.0.15.Final",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/upgradeInternal(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,java.lang.String,java.util.List,javax.websocket.Endpoint)|",
    "called": "|java+constructor:///io/undertow/websockets/jsr/EndpointSessionHandler/EndpointSessionHandler(io.undertow.websockets.jsr.ServerWebSocketContainer)|",
    "v1Body": [
      "|java+method:///io/undertow/websockets/core/protocol/Handshake/handshake(io.undertow.websockets.spi.WebSocketHttpExchange)|",
      "|java+method:///java/util/Collections/emptyMap()|",
      "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/getHandshakeToUse(io.undertow.servlet.websockets.ServletWebSocketHttpExchange)|",
      "|java+constructor:///io/undertow/websockets/jsr/EndpointSessionHandler/EndpointSessionHandler(io.undertow.websockets.jsr.ServerWebSocketContainer)|",
      "|java+constructor:///io/undertow/servlet/websockets/ServletWebSocketHttpExchange/ServletWebSocketHttpExchange(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)|",
      "|java+method:///io/undertow/servlet/websockets/ServletWebSocketHttpExchange/upgradeChannel(io.undertow.server.HttpUpgradeListener)|",
      "|java+constructor:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy$1/UndertowRequestUpgradeStrategy$1(org.springframework.web.socket.server.standard.UndertowRequestUpgradeStrategy,io.undertow.websockets.core.protocol.Handshake,io.undertow.servlet.websockets.ServletWebSocketHttpExchange,io.undertow.websockets.jsr.ConfiguredServerEndpoint,io.undertow.websockets.jsr.EndpointSessionHandler)|",
      "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/createConfiguredServerEndpoint(java.lang.String,java.util.List,javax.websocket.Endpoint,javax.servlet.http.HttpServletRequest)|",
      "|java+method:///io/undertow/servlet/websockets/ServletWebSocketHttpExchange/putAttachment(io.undertow.util.AttachmentKey,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/getContainer(javax.servlet.http.HttpServletRequest)|",
      "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/getHttpServletRequest(org.springframework.http.server.ServerHttpRequest)|",
      "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/getHttpServletResponse(org.springframework.http.server.ServerHttpResponse)|"
    ],
    "v2Body": [
      "|java+method:///io/undertow/websockets/core/protocol/Handshake/handshake(io.undertow.websockets.spi.WebSocketHttpExchange)|",
      "|java+method:///java/util/Collections/emptyMap()|",
      "|java+constructor:///io/undertow/websockets/jsr/EndpointSessionHandler/EndpointSessionHandler(io.undertow.websockets.jsr.ServerWebSocketContainer)|",
      "|java+method:///io/undertow/servlet/websockets/ServletWebSocketHttpExchange/upgradeChannel(io.undertow.server.HttpUpgradeListener)|",
      "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/createConfiguredServerEndpoint(java.lang.String,java.util.List,javax.websocket.Endpoint,javax.servlet.http.HttpServletRequest)|",
      "|java+method:///io/undertow/servlet/websockets/ServletWebSocketHttpExchange/putAttachment(io.undertow.util.AttachmentKey,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/getHandshakeToUse(io.undertow.servlet.websockets.ServletWebSocketHttpExchange,io.undertow.websockets.jsr.ConfiguredServerEndpoint)|",
      "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/getContainer(javax.servlet.http.HttpServletRequest)|",
      "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/createHttpExchange(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)|",
      "|java+constructor:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy$1/UndertowRequestUpgradeStrategy$1(org.springframework.web.socket.server.standard.UndertowRequestUpgradeStrategy,io.undertow.websockets.core.protocol.Handshake,io.undertow.servlet.websockets.ServletWebSocketHttpExchange,io.undertow.websockets.jsr.EndpointSessionHandler)|",
      "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/getHttpServletRequest(org.springframework.http.server.ServerHttpRequest)|",
      "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/getHttpServletResponse(org.springframework.http.server.ServerHttpResponse)|"
    ],
    "affectedLib": "io.undertow:undertow-websockets-jsr:1.0.15.Final",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/afterSessionStarted(org.springframework.web.socket.WebSocketSession,org.springframework.messaging.MessageChannel)|",
    "called": "|java+constructor:///org/springframework/messaging/simp/stomp/BufferingStompDecoder/BufferingStompDecoder(org.springframework.messaging.simp.stomp.StompDecoder,int)|",
    "v1Body": [
      "|java+method:///org/springframework/web/socket/WebSocketSession/setTextMessageSizeLimit(int)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/getId()|",
      "|java+constructor:///org/springframework/messaging/simp/stomp/BufferingStompDecoder/BufferingStompDecoder(int)|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/getTextMessageSizeLimit()|",
      "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/getMessageSizeLimit()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/getId()|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/getTextMessageSizeLimit()|",
      "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/getMessageSizeLimit()|",
      "|java+constructor:///org/springframework/messaging/simp/stomp/BufferingStompDecoder/BufferingStompDecoder(org.springframework.messaging.simp.stomp.StompDecoder,int)|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/setTextMessageSizeLimit(int)|"
    ],
    "affectedLib": "org.springframework:spring-messaging:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/handleMessageFromClient(org.springframework.web.socket.WebSocketSession,org.springframework.web.socket.WebSocketMessage,org.springframework.messaging.MessageChannel)|",
    "called": "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/getCommand()|",
    "v1Body": [
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/wrap(org.springframework.messaging.Message)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/getId()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/sendErrorMessage(org.springframework.web.socket.WebSocketSession,java.lang.Throwable)|",
      "|java+method:///org/springframework/messaging/MessageChannel/send(org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/messaging/Message/getPayload()|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/setUser(java.security.Principal)|",
      "|java+constructor:///org/springframework/web/socket/messaging/SessionConnectEvent/SessionConnectEvent(java.lang.Object,org.springframework.messaging.Message)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/getAttributes()|",
      "|java+method:///org/springframework/messaging/support/MessageBuilder/build()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/publishEvent(org.springframework.context.ApplicationEvent)|",
      "|java+method:///org/springframework/web/socket/TextMessage/asBytes()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/messaging/support/MessageBuilder/withPayload(java.lang.Object)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/setSessionId(java.lang.String)|",
      "|java+method:///org/springframework/messaging/simp/SimpMessageType/equals(java.lang.Object)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/getMessageType()|",
      "|java+method:///org/springframework/messaging/simp/stomp/BufferingStompDecoder/decode(java.nio.ByteBuffer)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/messaging/support/MessageBuilder/setHeaders(org.springframework.messaging.support.MessageHeaderAccessor)|",
      "|java+method:///org/apache/commons/logging/Log/trace(java.lang.Object)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/springframework/messaging/simp/stomp/BufferingStompDecoder/getBufferSize()|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/setSessionAttributes(java.util.Map)|",
      "|java+method:///java/nio/ByteBuffer/wrap(byte%5B%5D)|",
      "|java+method:///org/springframework/util/Assert/isInstanceOf(java.lang.Class,java.lang.Object)|",
      "|java+method:///org/springframework/messaging/simp/stomp/BufferingStompDecoder/getBufferSizeLimit()|",
      "|java+method:///org/apache/commons/logging/Log/isTraceEnabled()|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/getPrincipal()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompCommand/equals(java.lang.Object)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/getCommand()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/web/socket/WebSocketSession/getAttributes()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/getId()|",
      "|java+method:///org/springframework/messaging/support/MessageHeaderAccessor/getAccessor(org.springframework.messaging.Message,java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/sendErrorMessage(org.springframework.web.socket.WebSocketSession,java.lang.Throwable)|",
      "|java+method:///org/springframework/messaging/MessageChannel/send(org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/messaging/Message/getPayload()|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/getShortLogMessage(java.lang.Object)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/setUser(java.security.Principal)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/publishEvent(org.springframework.context.ApplicationEvent)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/setImmutable()|",
      "|java+method:///org/springframework/web/socket/TextMessage/asBytes()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/springframework/messaging/simp/SimpAttributesContextHolder/setAttributesFromMessage(org.springframework.messaging.Message)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/setSessionId(java.lang.String)|",
      "|java+constructor:///org/springframework/web/socket/messaging/SessionUnsubscribeEvent/SessionUnsubscribeEvent(java.lang.Object,org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/messaging/simp/stomp/BufferingStompDecoder/decode(java.nio.ByteBuffer)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/commons/logging/Log/trace(java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler$Stats/incrementDisconnectCount()|",
      "|java+method:///org/apache/commons/logging/Log/isErrorEnabled()|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/springframework/messaging/simp/stomp/BufferingStompDecoder/getBufferSize()|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/setSessionAttributes(java.util.Map)|",
      "|java+method:///java/nio/ByteBuffer/wrap(byte%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/springframework/messaging/simp/SimpAttributesContextHolder/resetAttributes()|",
      "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler$Stats/incrementConnectCount()|",
      "|java+method:///org/springframework/util/Assert/isInstanceOf(java.lang.Class,java.lang.Object)|",
      "|java+method:///org/springframework/messaging/simp/stomp/BufferingStompDecoder/getBufferSizeLimit()|",
      "|java+method:///org/apache/commons/logging/Log/isTraceEnabled()|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/getPrincipal()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompCommand/equals(java.lang.Object)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/getCommand()|",
      "|java+constructor:///org/springframework/web/socket/messaging/SessionConnectEvent/SessionConnectEvent(java.lang.Object,org.springframework.messaging.Message)|",
      "|java+constructor:///org/springframework/web/socket/messaging/SessionSubscribeEvent/SessionSubscribeEvent(java.lang.Object,org.springframework.messaging.Message)|"
    ],
    "affectedLib": "org.springframework:spring-messaging:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/afterSessionEnded(org.springframework.web.socket.WebSocketSession,org.springframework.web.socket.CloseStatus,org.springframework.messaging.MessageChannel)|",
    "called": "|java+method:///org/springframework/messaging/simp/SimpAttributes/sessionCompleted()|",
    "v1Body": [
      "|java+method:///org/springframework/messaging/support/MessageBuilder/build()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/getId()|",
      "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/publishEvent(org.springframework.context.ApplicationEvent)|",
      "|java+method:///org/springframework/messaging/support/MessageBuilder/withPayload(java.lang.Object)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/create(org.springframework.messaging.simp.stomp.StompCommand)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/springframework/messaging/MessageChannel/send(org.springframework.messaging.Message)|",
      "|java+constructor:///org/springframework/web/socket/messaging/SessionDisconnectEvent/SessionDisconnectEvent(java.lang.Object,java.lang.String,org.springframework.web.socket.CloseStatus)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/setSessionId(java.lang.String)|",
      "|java+method:///org/springframework/messaging/simp/user/UserSessionRegistry/unregisterSessionId(java.lang.String,java.lang.String)|",
      "|java+method:///org/springframework/messaging/support/MessageBuilder/setHeaders(org.springframework.messaging.support.MessageHeaderAccessor)|",
      "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/resolveNameForUserSessionRegistry(java.security.Principal)|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/getPrincipal()|",
      "|java+method:///java/util/Map/remove(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/createDisconnectMessage(org.springframework.web.socket.WebSocketSession)|",
      "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/publishEvent(org.springframework.context.ApplicationEvent)|",
      "|java+method:///org/springframework/messaging/simp/SimpAttributes/sessionCompleted()|",
      "|java+method:///org/springframework/messaging/MessageChannel/send(org.springframework.messaging.Message)|",
      "|java+constructor:///org/springframework/web/socket/messaging/SessionDisconnectEvent/SessionDisconnectEvent(java.lang.Object,java.lang.String,org.springframework.web.socket.CloseStatus)|",
      "|java+method:///org/springframework/messaging/simp/user/UserSessionRegistry/unregisterSessionId(java.lang.String,java.lang.String)|",
      "|java+method:///org/springframework/messaging/simp/SimpAttributes/fromMessage(org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/getSessionRegistryUserName(java.security.Principal)|",
      "|java+method:///java/util/Map/remove(java.lang.Object)|",
      "|java+method:///org/springframework/messaging/simp/SimpAttributesContextHolder/setAttributes(org.springframework.messaging.simp.SimpAttributes)|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/getId()|",
      "|java+method:///org/springframework/messaging/simp/SimpAttributesContextHolder/resetAttributes()|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/getPrincipal()|"
    ],
    "affectedLib": "org.springframework:spring-messaging:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/handleMessageToClient(org.springframework.web.socket.WebSocketSession,org.springframework.messaging.Message)|",
    "called": "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/getCommand()|",
    "v1Body": [
      "|java+method:///org/springframework/messaging/support/MessageBuilder/build()|",
      "|java+constructor:///org/springframework/web/socket/TextMessage/TextMessage(byte%5B%5D)|",
      "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/publishEvent(org.springframework.context.ApplicationEvent)|",
      "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/sendErrorMessage(org.springframework.web.socket.WebSocketSession,java.lang.Throwable)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/setDestination(java.lang.String)|",
      "|java+method:///org/springframework/messaging/Message/getPayload()|",
      "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/afterStompSessionConnected(org.springframework.messaging.simp.stomp.StompHeaderAccessor,org.springframework.web.socket.WebSocketSession)|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/sendMessage(org.springframework.web.socket.WebSocketMessage)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/getSubscriptionId()|",
      "|java+constructor:///org/springframework/web/socket/messaging/SessionConnectedEvent/SessionConnectedEvent(java.lang.Object,org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/wrap(org.springframework.messaging.Message)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/messaging/support/MessageBuilder/withPayload(java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/getVersion(org.springframework.messaging.simp.stomp.StompHeaderAccessor)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/create(org.springframework.messaging.simp.stomp.StompCommand)|",
      "|java+method:///org/springframework/messaging/simp/SimpMessageType/equals(java.lang.Object)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/getMessageType()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/messaging/support/MessageBuilder/setHeaders(org.springframework.messaging.support.MessageHeaderAccessor)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/setVersion(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/setHeartbeat(long,long)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompCommand/equals(java.lang.Object)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/getCommand()|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompEncoder/encode(org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/close(org.springframework.web.socket.CloseStatus)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/getFirstNativeHeader(java.lang.String)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/updateStompCommandAsServerMessage()|"
    ],
    "v2Body": [
      "|java+constructor:///org/springframework/web/socket/messaging/SessionConnectedEvent/SessionConnectedEvent(java.lang.Object,org.springframework.messaging.Message)|",
      "|java+constructor:///org/springframework/web/socket/TextMessage/TextMessage(byte%5B%5D)|",
      "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/publishEvent(org.springframework.context.ApplicationEvent)|",
      "|java+method:///org/apache/commons/logging/Log/warn(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/removeNativeHeader(java.lang.String)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/setDestination(java.lang.String)|",
      "|java+method:///org/springframework/messaging/Message/getPayload()|",
      "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/toMutableAccessor(org.springframework.messaging.simp.stomp.StompHeaderAccessor,org.springframework.messaging.Message)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/getStompHeaderAccessor(org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/sendMessage(org.springframework.web.socket.WebSocketMessage)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/getSubscriptionId()|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/getId()|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/getMessageHeaders()|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompEncoder/encode(java.util.Map,byte%5B%5D)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompCommand/equals(java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler$Stats/incrementConnectedCount()|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/getCommand()|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/close(org.springframework.web.socket.CloseStatus)|",
      "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/afterStompSessionConnected(org.springframework.messaging.Message,org.springframework.messaging.simp.stomp.StompHeaderAccessor,org.springframework.web.socket.WebSocketSession)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/getFirstNativeHeader(java.lang.String)|"
    ],
    "affectedLib": "org.springframework:spring-messaging:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)|",
    "called": "|java+constructor:///org/springframework/messaging/simp/SimpSessionScope/SimpSessionScope()|",
    "v1Body": [
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/pushContainingComponent(org.springframework.beans.factory.parsing.CompositeComponentDefinition)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/getMessageChannel(java.lang.String,org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerBrokerMessagingTemplate(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/popAndRegisterContainingComponent()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/springframework/beans/MutablePropertyValues/add(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/w3c/dom/Element/getTagName()|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerAnnotationMethodMessageHandler(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/util/StringUtils/tokenizeToStringArray(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///org/springframework/beans/factory/parsing/CompositeComponentDefinition/CompositeComponentDefinition(java.lang.String,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerUserDestinationResolver(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElementByTagName(org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerHttpRequestHandler(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerBrokerMessageConverter(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/support/ManagedMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerBeanDef(org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/ManagedMap/setSource(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerSubProtocolWebSocketHandler(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/extractSource(java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerUserDestinationMessageHandler(org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerMessageBroker(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/getPropertyValues()|",
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElementsByTagName(org.w3c.dom.Element,java.lang.String)|",
      "|java+constructor:///org/springframework/beans/factory/config/RuntimeBeanReference/RuntimeBeanReference(java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///org/springframework/beans/factory/support/RootBeanDefinition/RootBeanDefinition(java.lang.Class)|",
      "|java+constructor:///org/springframework/beans/factory/support/ManagedMap/ManagedMap()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|",
      "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/pushContainingComponent(org.springframework.beans.factory.parsing.CompositeComponentDefinition)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerBeanDefByName(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/getMessageChannel(java.lang.String,org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerMessageConverter(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/popAndRegisterContainingComponent()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/springframework/beans/MutablePropertyValues/add(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/w3c/dom/Element/getTagName()|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerAnnotationMethodMessageHandler(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerRequestHandler(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/util/StringUtils/tokenizeToStringArray(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///org/springframework/beans/factory/parsing/CompositeComponentDefinition/CompositeComponentDefinition(java.lang.String,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerUserDestinationResolver(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElementByTagName(org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerMessagingTemplate(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerWebSocketMessageBrokerStats(org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerUserDestinationMessageHandler(org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/support/ManagedMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerBeanDef(org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/ManagedMap/setSource(java.lang.Object)|",
      "|java+constructor:///org/springframework/messaging/simp/SimpSessionScope/SimpSessionScope()|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/extractSource(java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerMessageBroker(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///java/util/Collections/singletonMap(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/getPropertyValues()|",
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElementsByTagName(org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerSubProtoHandler(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+constructor:///org/springframework/beans/factory/config/RuntimeBeanReference/RuntimeBeanReference(java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///org/springframework/beans/factory/support/RootBeanDefinition/RootBeanDefinition(java.lang.Class)|",
      "|java+constructor:///org/springframework/beans/factory/support/ManagedMap/ManagedMap()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|",
      "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|"
    ],
    "affectedLib": "org.springframework:spring-messaging:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+constructor:///org/springframework/web/socket/messaging/StompSubProtocolHandler/StompSubProtocolHandler()|",
    "called": "|java+constructor:///org/springframework/messaging/simp/stomp/StompEncoder/StompEncoder()|",
    "v1Body": [
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap()|",
      "|java+constructor:///org/springframework/messaging/simp/stomp/StompEncoder/StompEncoder()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+constructor:///org/springframework/messaging/simp/stomp/StompDecoder/StompDecoder()|",
      "|java+constructor:///org/springframework/web/socket/messaging/StompSubProtocolHandler$Stats/StompSubProtocolHandler$Stats(org.springframework.web.socket.messaging.StompSubProtocolHandler,org.springframework.web.socket.messaging.StompSubProtocolHandler$1)|",
      "|java+constructor:///org/springframework/messaging/simp/stomp/StompEncoder/StompEncoder()|"
    ],
    "affectedLib": "org.springframework:spring-messaging:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/sendErrorMessage(org.springframework.web.socket.WebSocketSession,java.lang.Throwable)|",
    "called": "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/create(org.springframework.messaging.simp.stomp.StompCommand)|",
    "v1Body": [
      "|java+method:///org/springframework/messaging/support/MessageBuilder/build()|",
      "|java+constructor:///org/springframework/web/socket/TextMessage/TextMessage(byte%5B%5D)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/setMessage(java.lang.String)|",
      "|java+method:///org/springframework/messaging/support/MessageBuilder/withPayload(java.lang.Object)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/create(org.springframework.messaging.simp.stomp.StompCommand)|",
      "|java+method:///java/lang/Throwable/getMessage()|",
      "|java+method:///org/springframework/messaging/support/MessageBuilder/setHeaders(org.springframework.messaging.support.MessageHeaderAccessor)|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/sendMessage(org.springframework.web.socket.WebSocketMessage)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompEncoder/encode(org.springframework.messaging.Message)|"
    ],
    "v2Body": [
      "|java+constructor:///org/springframework/web/socket/TextMessage/TextMessage(byte%5B%5D)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/getMessageHeaders()|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/setMessage(java.lang.String)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/create(org.springframework.messaging.simp.stomp.StompCommand)|",
      "|java+method:///java/lang/Throwable/getMessage()|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/sendMessage(org.springframework.web.socket.WebSocketMessage)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompEncoder/encode(java.util.Map,byte%5B%5D)|"
    ],
    "affectedLib": "org.springframework:spring-messaging:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/resolveSessionId(org.springframework.messaging.Message)|",
    "called": "|java+method:///org/springframework/messaging/simp/SimpMessageHeaderAccessor/getSessionId(java.util.Map)|",
    "v1Body": [
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/wrap(org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/getSessionId()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/messaging/simp/SimpMessageHeaderAccessor/getSessionId(java.util.Map)|",
      "|java+method:///org/springframework/messaging/Message/getHeaders()|"
    ],
    "affectedLib": "org.springframework:spring-messaging:4.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy$1/handleUpgrade(org.xnio.StreamConnection,io.undertow.server.HttpServerExchange)|",
    "called": "|java+method:///io/undertow/servlet/websockets/ServletWebSocketHttpExchange/getBufferPool()|",
    "v1Body": [
      "|java+method:///io/undertow/servlet/websockets/ServletWebSocketHttpExchange/getBufferPool()|",
      "|java+method:///io/undertow/websockets/jsr/handshake/HandshakeUtil/setConfig(io.undertow.websockets.core.WebSocketChannel,io.undertow.websockets.jsr.ConfiguredServerEndpoint)|",
      "|java+method:///io/undertow/websockets/jsr/EndpointSessionHandler/onConnect(io.undertow.websockets.spi.WebSocketHttpExchange,io.undertow.websockets.core.WebSocketChannel)|",
      "|java+method:///io/undertow/websockets/core/protocol/Handshake/createChannel(io.undertow.websockets.spi.WebSocketHttpExchange,org.xnio.StreamConnection,org.xnio.Pool)|"
    ],
    "v2Body": [
      "|java+method:///io/undertow/servlet/websockets/ServletWebSocketHttpExchange/getBufferPool()|",
      "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/access$000(org.springframework.web.socket.server.standard.UndertowRequestUpgradeStrategy)|",
      "|java+method:///io/undertow/websockets/jsr/EndpointSessionHandler/onConnect(io.undertow.websockets.spi.WebSocketHttpExchange,io.undertow.websockets.core.WebSocketChannel)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///io/undertow/websockets/core/protocol/Handshake/createChannel(io.undertow.websockets.spi.WebSocketHttpExchange,org.xnio.StreamConnection,org.xnio.Pool)|"
    ],
    "affectedLib": "io.undertow:undertow-servlet:1.0.15.Final",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/upgradeInternal(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,java.lang.String,java.util.List,javax.websocket.Endpoint)|",
    "called": "|java+method:///io/undertow/servlet/websockets/ServletWebSocketHttpExchange/upgradeChannel(io.undertow.server.HttpUpgradeListener)|",
    "v1Body": [
      "|java+method:///io/undertow/websockets/core/protocol/Handshake/handshake(io.undertow.websockets.spi.WebSocketHttpExchange)|",
      "|java+method:///java/util/Collections/emptyMap()|",
      "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/getHandshakeToUse(io.undertow.servlet.websockets.ServletWebSocketHttpExchange)|",
      "|java+constructor:///io/undertow/websockets/jsr/EndpointSessionHandler/EndpointSessionHandler(io.undertow.websockets.jsr.ServerWebSocketContainer)|",
      "|java+constructor:///io/undertow/servlet/websockets/ServletWebSocketHttpExchange/ServletWebSocketHttpExchange(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)|",
      "|java+method:///io/undertow/servlet/websockets/ServletWebSocketHttpExchange/upgradeChannel(io.undertow.server.HttpUpgradeListener)|",
      "|java+constructor:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy$1/UndertowRequestUpgradeStrategy$1(org.springframework.web.socket.server.standard.UndertowRequestUpgradeStrategy,io.undertow.websockets.core.protocol.Handshake,io.undertow.servlet.websockets.ServletWebSocketHttpExchange,io.undertow.websockets.jsr.ConfiguredServerEndpoint,io.undertow.websockets.jsr.EndpointSessionHandler)|",
      "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/createConfiguredServerEndpoint(java.lang.String,java.util.List,javax.websocket.Endpoint,javax.servlet.http.HttpServletRequest)|",
      "|java+method:///io/undertow/servlet/websockets/ServletWebSocketHttpExchange/putAttachment(io.undertow.util.AttachmentKey,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/getContainer(javax.servlet.http.HttpServletRequest)|",
      "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/getHttpServletRequest(org.springframework.http.server.ServerHttpRequest)|",
      "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/getHttpServletResponse(org.springframework.http.server.ServerHttpResponse)|"
    ],
    "v2Body": [
      "|java+method:///io/undertow/websockets/core/protocol/Handshake/handshake(io.undertow.websockets.spi.WebSocketHttpExchange)|",
      "|java+method:///java/util/Collections/emptyMap()|",
      "|java+constructor:///io/undertow/websockets/jsr/EndpointSessionHandler/EndpointSessionHandler(io.undertow.websockets.jsr.ServerWebSocketContainer)|",
      "|java+method:///io/undertow/servlet/websockets/ServletWebSocketHttpExchange/upgradeChannel(io.undertow.server.HttpUpgradeListener)|",
      "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/createConfiguredServerEndpoint(java.lang.String,java.util.List,javax.websocket.Endpoint,javax.servlet.http.HttpServletRequest)|",
      "|java+method:///io/undertow/servlet/websockets/ServletWebSocketHttpExchange/putAttachment(io.undertow.util.AttachmentKey,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/getHandshakeToUse(io.undertow.servlet.websockets.ServletWebSocketHttpExchange,io.undertow.websockets.jsr.ConfiguredServerEndpoint)|",
      "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/getContainer(javax.servlet.http.HttpServletRequest)|",
      "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/createHttpExchange(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)|",
      "|java+constructor:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy$1/UndertowRequestUpgradeStrategy$1(org.springframework.web.socket.server.standard.UndertowRequestUpgradeStrategy,io.undertow.websockets.core.protocol.Handshake,io.undertow.servlet.websockets.ServletWebSocketHttpExchange,io.undertow.websockets.jsr.EndpointSessionHandler)|",
      "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/getHttpServletRequest(org.springframework.http.server.ServerHttpRequest)|",
      "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/getHttpServletResponse(org.springframework.http.server.ServerHttpResponse)|"
    ],
    "affectedLib": "io.undertow:undertow-servlet:1.0.15.Final",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.9.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.1.0.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/upgradeInternal(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,java.lang.String,java.util.List,javax.websocket.Endpoint)|",
    "called": "|java+method:///io/undertow/websockets/core/protocol/Handshake/handshake(io.undertow.websockets.spi.WebSocketHttpExchange)|",
    "v1Body": [
      "|java+method:///io/undertow/websockets/core/protocol/Handshake/handshake(io.undertow.websockets.spi.WebSocketHttpExchange)|",
      "|java+method:///java/util/Collections/emptyMap()|",
      "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/getHandshakeToUse(io.undertow.servlet.websockets.ServletWebSocketHttpExchange)|",
      "|java+constructor:///io/undertow/websockets/jsr/EndpointSessionHandler/EndpointSessionHandler(io.undertow.websockets.jsr.ServerWebSocketContainer)|",
      "|java+constructor:///io/undertow/servlet/websockets/ServletWebSocketHttpExchange/ServletWebSocketHttpExchange(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)|",
      "|java+method:///io/undertow/servlet/websockets/ServletWebSocketHttpExchange/upgradeChannel(io.undertow.server.HttpUpgradeListener)|",
      "|java+constructor:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy$1/UndertowRequestUpgradeStrategy$1(org.springframework.web.socket.server.standard.UndertowRequestUpgradeStrategy,io.undertow.websockets.core.protocol.Handshake,io.undertow.servlet.websockets.ServletWebSocketHttpExchange,io.undertow.websockets.jsr.ConfiguredServerEndpoint,io.undertow.websockets.jsr.EndpointSessionHandler)|",
      "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/createConfiguredServerEndpoint(java.lang.String,java.util.List,javax.websocket.Endpoint,javax.servlet.http.HttpServletRequest)|",
      "|java+method:///io/undertow/servlet/websockets/ServletWebSocketHttpExchange/putAttachment(io.undertow.util.AttachmentKey,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/getContainer(javax.servlet.http.HttpServletRequest)|",
      "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/getHttpServletRequest(org.springframework.http.server.ServerHttpRequest)|",
      "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/getHttpServletResponse(org.springframework.http.server.ServerHttpResponse)|"
    ],
    "v2Body": [
      "|java+method:///io/undertow/websockets/core/protocol/Handshake/handshake(io.undertow.websockets.spi.WebSocketHttpExchange)|",
      "|java+method:///java/util/Collections/emptyMap()|",
      "|java+constructor:///io/undertow/websockets/jsr/EndpointSessionHandler/EndpointSessionHandler(io.undertow.websockets.jsr.ServerWebSocketContainer)|",
      "|java+method:///io/undertow/servlet/websockets/ServletWebSocketHttpExchange/upgradeChannel(io.undertow.server.HttpUpgradeListener)|",
      "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/createConfiguredServerEndpoint(java.lang.String,java.util.List,javax.websocket.Endpoint,javax.servlet.http.HttpServletRequest)|",
      "|java+method:///io/undertow/servlet/websockets/ServletWebSocketHttpExchange/putAttachment(io.undertow.util.AttachmentKey,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/getHandshakeToUse(io.undertow.servlet.websockets.ServletWebSocketHttpExchange,io.undertow.websockets.jsr.ConfiguredServerEndpoint)|",
      "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/getContainer(javax.servlet.http.HttpServletRequest)|",
      "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/createHttpExchange(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)|",
      "|java+constructor:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy$1/UndertowRequestUpgradeStrategy$1(org.springframework.web.socket.server.standard.UndertowRequestUpgradeStrategy,io.undertow.websockets.core.protocol.Handshake,io.undertow.servlet.websockets.ServletWebSocketHttpExchange,io.undertow.websockets.jsr.EndpointSessionHandler)|",
      "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/getHttpServletRequest(org.springframework.http.server.ServerHttpRequest)|",
      "|java+method:///org/springframework/web/socket/server/standard/UndertowRequestUpgradeStrategy/getHttpServletResponse(org.springframework.http.server.ServerHttpResponse)|"
    ],
    "affectedLib": "io.undertow:undertow-core:1.0.15.Final",
    "change": "UPDATED"
  }
]