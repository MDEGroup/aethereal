[
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+method:///io/atomix/protocols/raft/storage/snapshot/Snapshot/timestamp()|",
    "called": "|java+method:///io/atomix/time/WallClockTimestamp/from(long)|",
    "v1Body": [
      "|java+method:///io/atomix/time/WallClockTimestamp/from(long)|",
      "|java+method:///io/atomix/protocols/raft/storage/snapshot/SnapshotDescriptor/timestamp()|"
    ],
    "v2Body": [
      "|java+method:///io/atomix/utils/time/WallClockTimestamp/from(long)|",
      "|java+method:///io/atomix/protocols/raft/storage/snapshot/SnapshotDescriptor/timestamp()|"
    ],
    "affectedLib": "io.atomix:atomix-time:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+method:///io/atomix/protocols/raft/roles/PassiveRole/onInstall(io.atomix.protocols.raft.protocol.InstallRequest)|",
    "called": "|java+method:///io/atomix/time/WallClockTimestamp/from(long)|",
    "v1Body": [
      "|java+method:///io/atomix/protocols/raft/storage/snapshot/Snapshot/index()|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallRequest/leader()|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallRequest/data()|",
      "|java+method:///io/atomix/protocols/raft/storage/snapshot/SnapshotStore/newTemporarySnapshot(long,io.atomix.time.WallClockTimestamp)|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallRequest/term()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getTerm()|",
      "|java+constructor:///io/atomix/protocols/raft/roles/PassiveRole$PendingSnapshot/PassiveRole$PendingSnapshot(io.atomix.protocols.raft.storage.snapshot.Snapshot)|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallRequest/snapshotTimestamp()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getSnapshotStore()|",
      "|java+method:///io/atomix/protocols/raft/storage/snapshot/SnapshotWriter/write(byte%5B%5D)|",
      "|java+method:///io/atomix/protocols/raft/storage/snapshot/SnapshotWriter/close()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/checkThread()|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type,java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallRequest/chunkOffset()|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole$PendingSnapshot/snapshot()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole$PendingSnapshot/rollback()|",
      "|java+method:///io/atomix/protocols/raft/storage/snapshot/Snapshot/openWriter()|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallResponse/newBuilder()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole$PendingSnapshot/nextOffset()|",
      "|java+method:///io/atomix/time/WallClockTimestamp/from(long)|",
      "|java+method:///io/atomix/protocols/raft/storage/snapshot/SnapshotStore/getSnapshot(long)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallRequest/snapshotIndex()|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallResponse$Builder/build()|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallRequest/complete()|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole$PendingSnapshot/incrementOffset()|",
      "|java+method:///java/util/concurrent/CompletableFuture/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole/updateTermAndLeader(long,io.atomix.protocols.raft.cluster.MemberId)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole$PendingSnapshot/commit()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getLastApplied()|"
    ],
    "v2Body": [
      "|java+method:///io/atomix/protocols/raft/storage/snapshot/Snapshot/index()|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallRequest/leader()|",
      "|java+method:///io/atomix/primitive/PrimitiveId/from(long)|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallRequest/term()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getTerm()|",
      "|java+constructor:///io/atomix/protocols/raft/roles/PassiveRole$PendingSnapshot/PassiveRole$PendingSnapshot(io.atomix.protocols.raft.storage.snapshot.Snapshot)|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallRequest/serviceId()|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallRequest/snapshotTimestamp()|",
      "|java+method:///io/atomix/protocols/raft/storage/snapshot/SnapshotStore/getSnapshot(io.atomix.primitive.PrimitiveId,long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getSnapshotStore()|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole$PendingSnapshot/commit()|",
      "|java+method:///io/atomix/protocols/raft/storage/snapshot/SnapshotWriter/close()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/checkThread()|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type,java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallRequest/data()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole$PendingSnapshot/snapshot()|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallResponse/builder()|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole$PendingSnapshot/rollback()|",
      "|java+method:///io/atomix/protocols/raft/storage/snapshot/Snapshot/openWriter()|",
      "|java+method:///io/atomix/utils/time/WallClockTimestamp/from(long)|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole$PendingSnapshot/nextOffset()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/atomix/protocols/raft/storage/snapshot/SnapshotStore/newSnapshot(io.atomix.primitive.PrimitiveId,java.lang.String,long,io.atomix.utils.time.WallClockTimestamp)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallRequest/snapshotIndex()|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallResponse$Builder/build()|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallRequest/complete()|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///io/atomix/protocols/raft/storage/snapshot/SnapshotWriter/write(byte%5B%5D)|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole/updateTermAndLeader(long,io.atomix.cluster.NodeId)|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole$PendingSnapshot/incrementOffset()|",
      "|java+method:///java/util/concurrent/CompletableFuture/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallRequest/serviceName()|",
      "|java+method:///java/util/Map/remove(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallRequest/chunkOffset()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|"
    ],
    "affectedLib": "io.atomix:atomix-time:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+constructor:///io/atomix/protocols/raft/cluster/RaftClusterEvent/RaftClusterEvent(io.atomix.protocols.raft.cluster.RaftClusterEvent$Type,io.atomix.protocols.raft.cluster.RaftMember,long)|",
    "called": "|java+constructor:///io/atomix/event/AbstractEvent/AbstractEvent(java.lang.Enum,java.lang.Object,long)|",
    "v1Body": [
      "|java+constructor:///io/atomix/event/AbstractEvent/AbstractEvent(java.lang.Enum,java.lang.Object,long)|"
    ],
    "v2Body": [
      "|java+constructor:///io/atomix/utils/event/AbstractEvent/AbstractEvent(java.lang.Enum,java.lang.Object,long)|"
    ],
    "affectedLib": "io.atomix:atomix-event:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+constructor:///io/atomix/protocols/raft/cluster/RaftClusterEvent/RaftClusterEvent(io.atomix.protocols.raft.cluster.RaftClusterEvent$Type,io.atomix.protocols.raft.cluster.RaftMember)|",
    "called": "|java+constructor:///io/atomix/event/AbstractEvent/AbstractEvent(java.lang.Enum,java.lang.Object)|",
    "v1Body": [
      "|java+constructor:///io/atomix/event/AbstractEvent/AbstractEvent(java.lang.Enum,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+constructor:///io/atomix/utils/event/AbstractEvent/AbstractEvent(java.lang.Enum,java.lang.Object)|"
    ],
    "affectedLib": "io.atomix:atomix-event:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+method:///io/atomix/protocols/raft/roles/LeaderRole/onQuery(io.atomix.protocols.raft.protocol.QueryRequest)|",
    "called": "|java+constructor:///io/atomix/storage/journal/Indexed/Indexed(long,java.lang.Object,int)|",
    "v1Body": [
      "|java+method:///io/atomix/protocols/raft/roles/LeaderRole/queryBoundedLinearizable(io.atomix.storage.journal.Indexed)|",
      "|java+method:///io/atomix/protocols/raft/session/impl/RaftSessionContext/readConsistency()|",
      "|java+method:///io/atomix/protocols/raft/ReadConsistency/ordinal()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryRequest/sequenceNumber()|",
      "|java+constructor:///io/atomix/protocols/raft/storage/log/entry/QueryEntry/QueryEntry(long,long,long,long,io.atomix.protocols.raft.operation.RaftOperation)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/atomix/protocols/raft/session/impl/RaftSessionRegistry/getSession(long)|",
      "|java+method:///io/atomix/utils/concurrent/Futures/exceptionalFuture(java.lang.Throwable)|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryRequest/operation()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getSessions()|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryResponse$Builder/build()|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/roles/LeaderRole/queryLocal(io.atomix.storage.journal.Indexed)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryRequest/index()|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryRequest/session()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/atomix/protocols/raft/roles/LeaderRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getTerm()|",
      "|java+constructor:///io/atomix/storage/journal/Indexed/Indexed(long,java.lang.Object,int)|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type,java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type)|",
      "|java+method:///java/util/concurrent/CompletableFuture/thenApply(java.util.function.Function)|",
      "|java+method:///io/atomix/protocols/raft/roles/LeaderRole/queryLinearizable(io.atomix.storage.journal.Indexed)|",
      "|java+method:///java/util/concurrent/CompletableFuture/completedFuture(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryResponse/newBuilder()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/checkThread()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getLastApplied()|",
      "|java+method:///io/atomix/protocols/raft/roles/LeaderRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|"
    ],
    "v2Body": [
      "|java+method:///io/atomix/protocols/raft/roles/LeaderRole/queryBoundedLinearizable(io.atomix.storage.journal.Indexed)|",
      "|java+method:///io/atomix/protocols/raft/ReadConsistency/ordinal()|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryRequest/sequenceNumber()|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryResponse/builder()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/atomix/protocols/raft/session/RaftSession/readConsistency()|",
      "|java+method:///io/atomix/utils/concurrent/Futures/exceptionalFuture(java.lang.Throwable)|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryRequest/operation()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getSessions()|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryResponse$Builder/build()|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/roles/LeaderRole/queryLocal(io.atomix.storage.journal.Indexed)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryRequest/index()|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryRequest/session()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/atomix/protocols/raft/roles/LeaderRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+constructor:///io/atomix/protocols/raft/storage/log/entry/QueryEntry/QueryEntry(long,long,long,long,io.atomix.primitive.operation.PrimitiveOperation)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getTerm()|",
      "|java+method:///io/atomix/protocols/raft/session/RaftSessionRegistry/getSession(long)|",
      "|java+constructor:///io/atomix/storage/journal/Indexed/Indexed(long,java.lang.Object,int)|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type,java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type)|",
      "|java+method:///java/util/concurrent/CompletableFuture/thenApply(java.util.function.Function)|",
      "|java+method:///io/atomix/protocols/raft/roles/LeaderRole/queryLinearizable(io.atomix.storage.journal.Indexed)|",
      "|java+method:///java/util/concurrent/CompletableFuture/completedFuture(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/checkThread()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getLastApplied()|",
      "|java+method:///io/atomix/protocols/raft/roles/LeaderRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|"
    ],
    "affectedLib": "io.atomix:atomix-journal:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+method:///io/atomix/protocols/raft/roles/PassiveRole/onQuery(io.atomix.protocols.raft.protocol.QueryRequest)|",
    "called": "|java+constructor:///io/atomix/storage/journal/Indexed/Indexed(long,java.lang.Object,int)|",
    "v1Body": [
      "|java+method:///io/atomix/protocols/raft/session/impl/RaftSessionContext/readConsistency()|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryRequest/index()|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryRequest/session()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getState()|",
      "|java+method:///java/util/concurrent/CompletableFuture/thenApply(java.util.function.Function)|",
      "|java+method:///io/atomix/protocols/raft/storage/log/RaftLogWriter/getLastIndex()|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole/queryForward(io.atomix.protocols.raft.protocol.QueryRequest)|",
      "|java+constructor:///io/atomix/protocols/raft/storage/log/entry/QueryEntry/QueryEntry(long,long,long,long,io.atomix.protocols.raft.operation.RaftOperation)|",
      "|java+method:///org/slf4j/Logger/trace(java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/session/impl/RaftSessionRegistry/getSession(long)|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryRequest/operation()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getSessions()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getLastApplied()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getTerm()|",
      "|java+constructor:///io/atomix/storage/journal/Indexed/Indexed(long,java.lang.Object,int)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getLogWriter()|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryRequest/sequenceNumber()|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole/applyQuery(io.atomix.storage.journal.Indexed)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getCommitIndex()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/checkThread()|"
    ],
    "v2Body": [
      "|java+method:///io/atomix/protocols/raft/protocol/QueryRequest/index()|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryRequest/session()|",
      "|java+constructor:///io/atomix/protocols/raft/storage/log/entry/QueryEntry/QueryEntry(long,long,long,long,io.atomix.primitive.operation.PrimitiveOperation)|",
      "|java+method:///java/util/concurrent/CompletableFuture/thenApply(java.util.function.Function)|",
      "|java+method:///io/atomix/protocols/raft/storage/log/RaftLogWriter/getLastIndex()|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole/queryForward(io.atomix.protocols.raft.protocol.QueryRequest)|",
      "|java+method:///org/slf4j/Logger/trace(java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/session/RaftSession/readConsistency()|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryRequest/operation()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getSessions()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getLastApplied()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getTerm()|",
      "|java+method:///io/atomix/protocols/raft/session/RaftSessionRegistry/getSession(long)|",
      "|java+constructor:///io/atomix/storage/journal/Indexed/Indexed(long,java.lang.Object,int)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getLogWriter()|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryRequest/sequenceNumber()|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole/applyQuery(io.atomix.storage.journal.Indexed)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getCommitIndex()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/checkThread()|"
    ],
    "affectedLib": "io.atomix:atomix-journal:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+method:///io/atomix/protocols/raft/roles/LeaderRole/onMetadata(io.atomix.protocols.raft.protocol.MetadataRequest)|",
    "called": "|java+constructor:///io/atomix/storage/journal/Indexed/Indexed(long,java.lang.Object,int)|",
    "v1Body": [
      "|java+method:///io/atomix/protocols/raft/impl/RaftServiceManager/apply(io.atomix.storage.journal.Indexed)|",
      "|java+method:///io/atomix/protocols/raft/protocol/MetadataRequest/session()|",
      "|java+method:///java/util/concurrent/CompletableFuture/whenComplete(java.util.function.BiConsumer)|",
      "|java+method:///io/atomix/protocols/raft/roles/LeaderRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+constructor:///java/util/concurrent/CompletableFuture/CompletableFuture()|",
      "|java+method:///io/atomix/protocols/raft/protocol/MetadataResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getServiceManager()|",
      "|java+method:///io/atomix/protocols/raft/protocol/MetadataResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type)|",
      "|java+constructor:///io/atomix/protocols/raft/storage/log/entry/MetadataEntry/MetadataEntry(long,long,long)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getTerm()|",
      "|java+constructor:///io/atomix/storage/journal/Indexed/Indexed(long,java.lang.Object,int)|",
      "|java+method:///io/atomix/protocols/raft/protocol/MetadataResponse/newBuilder()|",
      "|java+method:///java/util/concurrent/CompletableFuture/completedFuture(java.lang.Object)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/checkThread()|",
      "|java+method:///io/atomix/protocols/raft/roles/LeaderRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getLastApplied()|",
      "|java+method:///io/atomix/protocols/raft/protocol/MetadataResponse$Builder/build()|"
    ],
    "v2Body": [
      "|java+method:///io/atomix/protocols/raft/impl/RaftServiceManager/apply(io.atomix.storage.journal.Indexed)|",
      "|java+method:///io/atomix/protocols/raft/protocol/MetadataRequest/session()|",
      "|java+method:///java/util/concurrent/CompletableFuture/whenComplete(java.util.function.BiConsumer)|",
      "|java+method:///io/atomix/protocols/raft/roles/LeaderRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+constructor:///java/util/concurrent/CompletableFuture/CompletableFuture()|",
      "|java+method:///io/atomix/protocols/raft/protocol/MetadataResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getStateMachine()|",
      "|java+method:///io/atomix/protocols/raft/protocol/MetadataResponse/builder()|",
      "|java+method:///java/util/concurrent/CompletableFuture/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/protocol/MetadataResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type)|",
      "|java+constructor:///io/atomix/protocols/raft/storage/log/entry/MetadataEntry/MetadataEntry(long,long,long)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getTerm()|",
      "|java+constructor:///io/atomix/storage/journal/Indexed/Indexed(long,java.lang.Object,int)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/checkThread()|",
      "|java+method:///io/atomix/protocols/raft/roles/LeaderRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getLastApplied()|",
      "|java+method:///io/atomix/protocols/raft/protocol/MetadataResponse$Builder/build()|"
    ],
    "affectedLib": "io.atomix:atomix-journal:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+constructor:///io/atomix/protocols/raft/storage/log/RaftLog$Builder/RaftLog$Builder()|",
    "called": "|java+method:///io/atomix/storage/journal/SegmentedJournal/newBuilder()|",
    "v1Body": [
      "|java+method:///io/atomix/storage/journal/SegmentedJournal/newBuilder()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///io/atomix/storage/journal/SegmentedJournal/builder()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "io.atomix:atomix-journal:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/onReconfigure(io.atomix.protocols.raft.protocol.ReconfigureRequest)|",
    "called": "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
    "v1Body": [
      "|java+method:///io/atomix/protocols/raft/protocol/ReconfigureResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type)|",
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|",
      "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/protocol/ReconfigureResponse$Builder/build()|",
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/protocol/ReconfigureResponse/newBuilder()|",
      "|java+method:///io/atomix/protocols/raft/protocol/ReconfigureResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|"
    ],
    "v2Body": [
      "|java+method:///io/atomix/protocols/raft/protocol/ReconfigureResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type)|",
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|",
      "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/protocol/ReconfigureResponse$Builder/build()|",
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/protocol/ReconfigureResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|",
      "|java+method:///io/atomix/protocols/raft/protocol/ReconfigureResponse/builder()|"
    ],
    "affectedLib": "io.atomix:atomix-utils:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyConnection/openSession(io.atomix.protocols.raft.protocol.OpenSessionRequest)|",
    "called": "|java+method:///io/atomix/utils/concurrent/ThreadContext/isCurrentContext()|",
    "v1Body": [
      "|java+method:///io/atomix/utils/concurrent/ThreadContext/execute(java.lang.Runnable)|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyConnection/sendRequest(io.atomix.protocols.raft.protocol.RaftRequest,java.util.function.BiFunction,java.util.concurrent.CompletableFuture)|",
      "|java+constructor:///java/util/concurrent/CompletableFuture/CompletableFuture()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/atomix/utils/concurrent/ThreadContext/isCurrentContext()|"
    ],
    "v2Body": [
      "|java+method:///io/atomix/utils/concurrent/ThreadContext/execute(java.lang.Runnable)|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyConnection/sendRequest(io.atomix.protocols.raft.protocol.RaftRequest,java.util.function.BiFunction,io.atomix.cluster.NodeId,java.util.concurrent.CompletableFuture)|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyConnection/next()|",
      "|java+constructor:///java/util/concurrent/CompletableFuture/CompletableFuture()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/atomix/utils/concurrent/ThreadContext/isCurrentContext()|"
    ],
    "affectedLib": "io.atomix:atomix-utils:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/onQuery(io.atomix.protocols.raft.protocol.QueryRequest)|",
    "called": "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
    "v1Body": [
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|",
      "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type)|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryResponse/newBuilder()|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryResponse$Builder/build()|"
    ],
    "v2Body": [
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|",
      "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type)|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryResponse/builder()|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryResponse$Builder/build()|"
    ],
    "affectedLib": "io.atomix:atomix-utils:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/onKeepAlive(io.atomix.protocols.raft.protocol.KeepAliveRequest)|",
    "called": "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
    "v1Body": [
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|",
      "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/protocol/KeepAliveResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type)|",
      "|java+method:///io/atomix/protocols/raft/protocol/KeepAliveResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|",
      "|java+method:///io/atomix/protocols/raft/protocol/KeepAliveResponse/newBuilder()|",
      "|java+method:///io/atomix/protocols/raft/protocol/KeepAliveResponse$Builder/build()|"
    ],
    "v2Body": [
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|",
      "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/protocol/KeepAliveResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type)|",
      "|java+method:///io/atomix/protocols/raft/protocol/KeepAliveResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|",
      "|java+method:///io/atomix/protocols/raft/protocol/KeepAliveResponse/builder()|",
      "|java+method:///io/atomix/protocols/raft/protocol/KeepAliveResponse$Builder/build()|"
    ],
    "affectedLib": "io.atomix:atomix-utils:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/onInstall(io.atomix.protocols.raft.protocol.InstallRequest)|",
    "called": "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
    "v1Body": [
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|",
      "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallResponse/newBuilder()|",
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallResponse$Builder/build()|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type)|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|"
    ],
    "v2Body": [
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|",
      "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallResponse/builder()|",
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallResponse$Builder/build()|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type)|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|"
    ],
    "affectedLib": "io.atomix:atomix-utils:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+method:///io/atomix/protocols/raft/roles/AbstractRole/forward(io.atomix.protocols.raft.protocol.RaftRequest,java.util.function.BiFunction)|",
    "called": "|java+method:///io/atomix/utils/concurrent/Futures/exceptionalFuture(java.lang.Throwable)|",
    "v1Body": [
      "|java+constructor:///io/atomix/protocols/raft/RaftException$NoLeader/RaftException$NoLeader(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getLeader()|",
      "|java+method:///io/atomix/protocols/raft/cluster/impl/DefaultRaftMember/memberId()|",
      "|java+method:///java/util/function/BiFunction/apply(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/concurrent/CompletableFuture/CompletableFuture()|",
      "|java+method:///java/util/concurrent/CompletableFuture/whenCompleteAsync(java.util.function.BiConsumer,java.util.concurrent.Executor)|",
      "|java+method:///io/atomix/utils/concurrent/Futures/exceptionalFuture(java.lang.Throwable)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getThreadContext()|"
    ],
    "v2Body": [
      "|java+constructor:///io/atomix/protocols/raft/RaftException$NoLeader/RaftException$NoLeader(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getLeader()|",
      "|java+method:///java/util/function/BiFunction/apply(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/concurrent/CompletableFuture/CompletableFuture()|",
      "|java+method:///io/atomix/utils/concurrent/Futures/exceptionalFuture(java.lang.Throwable)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getThreadContext()|",
      "|java+method:///java/util/concurrent/CompletableFuture/whenCompleteAsync(java.util.function.BiConsumer,java.util.concurrent.Executor)|",
      "|java+method:///io/atomix/protocols/raft/cluster/impl/DefaultRaftMember/nodeId()|"
    ],
    "affectedLib": "io.atomix:atomix-utils:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/onCloseSession(io.atomix.protocols.raft.protocol.CloseSessionRequest)|",
    "called": "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
    "v1Body": [
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|",
      "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/protocol/CloseSessionResponse/newBuilder()|",
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/protocol/CloseSessionResponse$Builder/build()|",
      "|java+method:///io/atomix/protocols/raft/protocol/CloseSessionResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type)|",
      "|java+method:///io/atomix/protocols/raft/protocol/CloseSessionResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|"
    ],
    "v2Body": [
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|",
      "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/protocol/CloseSessionResponse/builder()|",
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/protocol/CloseSessionResponse$Builder/build()|",
      "|java+method:///io/atomix/protocols/raft/protocol/CloseSessionResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type)|",
      "|java+method:///io/atomix/protocols/raft/protocol/CloseSessionResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|"
    ],
    "affectedLib": "io.atomix:atomix-utils:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+method:///io/atomix/protocols/raft/roles/LeaderRole/appendAndCompact(io.atomix.protocols.raft.storage.log.entry.RaftLogEntry,int)|",
    "called": "|java+method:///io/atomix/utils/concurrent/Futures/exceptionalFuture(java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///java/util/concurrent/CompletableFuture/thenCompose(java.util.function.Function)|",
      "|java+method:///java/util/concurrent/CompletableFuture/thenApply(java.util.function.Function)|",
      "|java+method:///java/util/concurrent/CompletableFuture/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftServiceManager/compact()|",
      "|java+constructor:///io/atomix/storage/StorageException$OutOfDiskSpace/StorageException$OutOfDiskSpace(java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/storage/log/RaftLogWriter/append(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getLogWriter()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getServiceManager()|",
      "|java+method:///io/atomix/utils/concurrent/Futures/exceptionalFuture(java.lang.Throwable)|"
    ],
    "v2Body": [
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getLogCompactor()|",
      "|java+method:///io/atomix/protocols/raft/storage/compactor/RaftLogCompactor/compact()|",
      "|java+method:///java/util/concurrent/CompletableFuture/thenCompose(java.util.function.Function)|",
      "|java+method:///io/atomix/utils/concurrent/Futures/exceptionalFuture(java.lang.Throwable)|",
      "|java+method:///java/util/concurrent/CompletableFuture/completedFuture(java.lang.Object)|",
      "|java+constructor:///io/atomix/storage/StorageException$OutOfDiskSpace/StorageException$OutOfDiskSpace(java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/storage/log/RaftLogWriter/append(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getLogWriter()|"
    ],
    "affectedLib": "io.atomix:atomix-utils:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/onCommand(io.atomix.protocols.raft.protocol.CommandRequest)|",
    "called": "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
    "v1Body": [
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|",
      "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/protocol/CommandResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type)|",
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/protocol/CommandResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|",
      "|java+method:///io/atomix/protocols/raft/protocol/CommandResponse/newBuilder()|",
      "|java+method:///io/atomix/protocols/raft/protocol/CommandResponse$Builder/build()|"
    ],
    "v2Body": [
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|",
      "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/protocol/CommandResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type)|",
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/protocol/CommandResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|",
      "|java+method:///io/atomix/protocols/raft/protocol/CommandResponse/builder()|",
      "|java+method:///io/atomix/protocols/raft/protocol/CommandResponse$Builder/build()|"
    ],
    "affectedLib": "io.atomix:atomix-utils:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/onJoin(io.atomix.protocols.raft.protocol.JoinRequest)|",
    "called": "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
    "v1Body": [
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|",
      "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/protocol/JoinResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|",
      "|java+method:///io/atomix/protocols/raft/protocol/JoinResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type)|",
      "|java+method:///io/atomix/protocols/raft/protocol/JoinResponse$Builder/build()|",
      "|java+method:///io/atomix/protocols/raft/protocol/JoinResponse/newBuilder()|"
    ],
    "v2Body": [
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|",
      "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/protocol/JoinResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|",
      "|java+method:///io/atomix/protocols/raft/protocol/JoinResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type)|",
      "|java+method:///io/atomix/protocols/raft/protocol/JoinResponse/builder()|",
      "|java+method:///io/atomix/protocols/raft/protocol/JoinResponse$Builder/build()|"
    ],
    "affectedLib": "io.atomix:atomix-utils:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+method:///io/atomix/protocols/raft/roles/LeaderRole/onQuery(io.atomix.protocols.raft.protocol.QueryRequest)|",
    "called": "|java+method:///io/atomix/utils/concurrent/Futures/exceptionalFuture(java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///io/atomix/protocols/raft/roles/LeaderRole/queryBoundedLinearizable(io.atomix.storage.journal.Indexed)|",
      "|java+method:///io/atomix/protocols/raft/session/impl/RaftSessionContext/readConsistency()|",
      "|java+method:///io/atomix/protocols/raft/ReadConsistency/ordinal()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryRequest/sequenceNumber()|",
      "|java+constructor:///io/atomix/protocols/raft/storage/log/entry/QueryEntry/QueryEntry(long,long,long,long,io.atomix.protocols.raft.operation.RaftOperation)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/atomix/protocols/raft/session/impl/RaftSessionRegistry/getSession(long)|",
      "|java+method:///io/atomix/utils/concurrent/Futures/exceptionalFuture(java.lang.Throwable)|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryRequest/operation()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getSessions()|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryResponse$Builder/build()|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/roles/LeaderRole/queryLocal(io.atomix.storage.journal.Indexed)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryRequest/index()|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryRequest/session()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/atomix/protocols/raft/roles/LeaderRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getTerm()|",
      "|java+constructor:///io/atomix/storage/journal/Indexed/Indexed(long,java.lang.Object,int)|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type,java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type)|",
      "|java+method:///java/util/concurrent/CompletableFuture/thenApply(java.util.function.Function)|",
      "|java+method:///io/atomix/protocols/raft/roles/LeaderRole/queryLinearizable(io.atomix.storage.journal.Indexed)|",
      "|java+method:///java/util/concurrent/CompletableFuture/completedFuture(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryResponse/newBuilder()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/checkThread()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getLastApplied()|",
      "|java+method:///io/atomix/protocols/raft/roles/LeaderRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|"
    ],
    "v2Body": [
      "|java+method:///io/atomix/protocols/raft/roles/LeaderRole/queryBoundedLinearizable(io.atomix.storage.journal.Indexed)|",
      "|java+method:///io/atomix/protocols/raft/ReadConsistency/ordinal()|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryRequest/sequenceNumber()|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryResponse/builder()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/atomix/protocols/raft/session/RaftSession/readConsistency()|",
      "|java+method:///io/atomix/utils/concurrent/Futures/exceptionalFuture(java.lang.Throwable)|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryRequest/operation()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getSessions()|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryResponse$Builder/build()|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/roles/LeaderRole/queryLocal(io.atomix.storage.journal.Indexed)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryRequest/index()|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryRequest/session()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/atomix/protocols/raft/roles/LeaderRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+constructor:///io/atomix/protocols/raft/storage/log/entry/QueryEntry/QueryEntry(long,long,long,long,io.atomix.primitive.operation.PrimitiveOperation)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getTerm()|",
      "|java+method:///io/atomix/protocols/raft/session/RaftSessionRegistry/getSession(long)|",
      "|java+constructor:///io/atomix/storage/journal/Indexed/Indexed(long,java.lang.Object,int)|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type,java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/protocol/QueryResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type)|",
      "|java+method:///java/util/concurrent/CompletableFuture/thenApply(java.util.function.Function)|",
      "|java+method:///io/atomix/protocols/raft/roles/LeaderRole/queryLinearizable(io.atomix.storage.journal.Indexed)|",
      "|java+method:///java/util/concurrent/CompletableFuture/completedFuture(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/checkThread()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getLastApplied()|",
      "|java+method:///io/atomix/protocols/raft/roles/LeaderRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|"
    ],
    "affectedLib": "io.atomix:atomix-utils:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+method:///io/atomix/protocols/raft/impl/DefaultRaftClient$Builder/build()|",
    "called": "|java+method:///io/atomix/utils/logging/LoggerContext$Builder/addValue(java.lang.Object)|",
    "v1Body": [
      "|java+method:///io/atomix/utils/logging/LoggerContext/builder(java.lang.Class)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/atomix/utils/logging/ContextualLoggerFactory/getLogger(java.lang.Class,io.atomix.utils.logging.LoggerContext)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/atomix/utils/logging/LoggerContext$Builder/addValue(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/impl/DefaultRaftClient$Builder/build()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///io/atomix/protocols/raft/impl/DefaultRaftClient/DefaultRaftClient(java.lang.String,io.atomix.protocols.raft.cluster.MemberId,java.util.Collection,io.atomix.protocols.raft.protocol.RaftClientProtocol,io.atomix.utils.concurrent.ThreadContextFactory)|",
      "|java+method:///io/atomix/utils/logging/LoggerContext$Builder/build()|",
      "|java+method:///io/atomix/utils/concurrent/ThreadModel/factory(java.lang.String,int,org.slf4j.Logger)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/atomix/utils/logging/LoggerContext/builder(java.lang.Class)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/atomix/utils/logging/ContextualLoggerFactory/getLogger(java.lang.Class,io.atomix.utils.logging.LoggerContext)|",
      "|java+constructor:///io/atomix/protocols/raft/impl/DefaultRaftClient/DefaultRaftClient(java.lang.String,io.atomix.cluster.NodeId,java.util.Collection,io.atomix.protocols.raft.protocol.RaftClientProtocol,io.atomix.utils.concurrent.ThreadContextFactory)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/atomix/utils/logging/LoggerContext$Builder/addValue(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/impl/DefaultRaftClient$Builder/build()|",
      "|java+method:///io/atomix/utils/logging/LoggerContext$Builder/build()|",
      "|java+method:///io/atomix/utils/concurrent/ThreadModel/factory(java.lang.String,int,org.slf4j.Logger)|"
    ],
    "affectedLib": "io.atomix:atomix-utils:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/onVote(io.atomix.protocols.raft.protocol.VoteRequest)|",
    "called": "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
    "v1Body": [
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|",
      "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/protocol/VoteResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|",
      "|java+method:///io/atomix/protocols/raft/protocol/VoteResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type)|",
      "|java+method:///io/atomix/protocols/raft/protocol/VoteResponse$Builder/build()|",
      "|java+method:///io/atomix/protocols/raft/protocol/VoteResponse/newBuilder()|"
    ],
    "v2Body": [
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|",
      "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/protocol/VoteResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|",
      "|java+method:///io/atomix/protocols/raft/protocol/VoteResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type)|",
      "|java+method:///io/atomix/protocols/raft/protocol/VoteResponse/builder()|",
      "|java+method:///io/atomix/protocols/raft/protocol/VoteResponse$Builder/build()|"
    ],
    "affectedLib": "io.atomix:atomix-utils:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/onMetadata(io.atomix.protocols.raft.protocol.MetadataRequest)|",
    "called": "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
    "v1Body": [
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|",
      "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/protocol/MetadataResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type)|",
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/protocol/MetadataResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|",
      "|java+method:///io/atomix/protocols/raft/protocol/MetadataResponse/newBuilder()|",
      "|java+method:///io/atomix/protocols/raft/protocol/MetadataResponse$Builder/build()|"
    ],
    "v2Body": [
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|",
      "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/protocol/MetadataResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type)|",
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/protocol/MetadataResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|",
      "|java+method:///io/atomix/protocols/raft/protocol/MetadataResponse/builder()|",
      "|java+method:///io/atomix/protocols/raft/protocol/MetadataResponse$Builder/build()|"
    ],
    "affectedLib": "io.atomix:atomix-utils:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/onAppend(io.atomix.protocols.raft.protocol.AppendRequest)|",
    "called": "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
    "v1Body": [
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|",
      "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/protocol/AppendResponse$Builder/build()|",
      "|java+method:///io/atomix/protocols/raft/protocol/AppendResponse/newBuilder()|",
      "|java+method:///io/atomix/protocols/raft/protocol/AppendResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|",
      "|java+method:///io/atomix/protocols/raft/protocol/AppendResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type)|"
    ],
    "v2Body": [
      "|java+method:///io/atomix/protocols/raft/protocol/AppendResponse/builder()|",
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|",
      "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/protocol/AppendResponse$Builder/build()|",
      "|java+method:///io/atomix/protocols/raft/protocol/AppendResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|",
      "|java+method:///io/atomix/protocols/raft/protocol/AppendResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type)|"
    ],
    "affectedLib": "io.atomix:atomix-utils:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/onPoll(io.atomix.protocols.raft.protocol.PollRequest)|",
    "called": "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
    "v1Body": [
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|",
      "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/protocol/PollResponse/newBuilder()|",
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/protocol/PollResponse$Builder/build()|",
      "|java+method:///io/atomix/protocols/raft/protocol/PollResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type)|",
      "|java+method:///io/atomix/protocols/raft/protocol/PollResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|"
    ],
    "v2Body": [
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|",
      "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/protocol/PollResponse/builder()|",
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/protocol/PollResponse$Builder/build()|",
      "|java+method:///io/atomix/protocols/raft/protocol/PollResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type)|",
      "|java+method:///io/atomix/protocols/raft/protocol/PollResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|"
    ],
    "affectedLib": "io.atomix:atomix-utils:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyConnection/metadata(io.atomix.protocols.raft.protocol.MetadataRequest)|",
    "called": "|java+method:///io/atomix/utils/concurrent/ThreadContext/isCurrentContext()|",
    "v1Body": [
      "|java+method:///io/atomix/utils/concurrent/ThreadContext/execute(java.lang.Runnable)|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyConnection/sendRequest(io.atomix.protocols.raft.protocol.RaftRequest,java.util.function.BiFunction,java.util.concurrent.CompletableFuture)|",
      "|java+constructor:///java/util/concurrent/CompletableFuture/CompletableFuture()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/atomix/utils/concurrent/ThreadContext/isCurrentContext()|"
    ],
    "v2Body": [
      "|java+method:///io/atomix/utils/concurrent/ThreadContext/execute(java.lang.Runnable)|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyConnection/sendRequest(io.atomix.protocols.raft.protocol.RaftRequest,java.util.function.BiFunction,io.atomix.cluster.NodeId,java.util.concurrent.CompletableFuture)|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyConnection/next()|",
      "|java+constructor:///java/util/concurrent/CompletableFuture/CompletableFuture()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/atomix/utils/concurrent/ThreadContext/isCurrentContext()|"
    ],
    "affectedLib": "io.atomix:atomix-utils:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+method:///io/atomix/protocols/raft/storage/log/entry/OpenSessionEntry/toString()|",
    "called": "|java+constructor:///io/atomix/utils/TimestampPrinter/TimestampPrinter(long)|",
    "v1Body": [
      "|java+method:///com/google/common/base/MoreObjects$ToStringHelper/add(java.lang.String,int)|",
      "|java+constructor:///io/atomix/utils/TimestampPrinter/TimestampPrinter(long)|",
      "|java+method:///com/google/common/base/MoreObjects/toStringHelper(java.lang.Object)|",
      "|java+method:///com/google/common/base/MoreObjects$ToStringHelper/add(java.lang.String,java.lang.Object)|",
      "|java+method:///com/google/common/base/MoreObjects$ToStringHelper/toString()|",
      "|java+method:///com/google/common/base/MoreObjects$ToStringHelper/add(java.lang.String,long)|"
    ],
    "v2Body": [
      "|java+constructor:///io/atomix/utils/TimestampPrinter/TimestampPrinter(long)|",
      "|java+method:///com/google/common/base/MoreObjects/toStringHelper(java.lang.Object)|",
      "|java+method:///com/google/common/base/MoreObjects$ToStringHelper/add(java.lang.String,java.lang.Object)|",
      "|java+method:///com/google/common/base/MoreObjects$ToStringHelper/toString()|",
      "|java+method:///com/google/common/base/MoreObjects$ToStringHelper/add(java.lang.String,long)|"
    ],
    "affectedLib": "io.atomix:atomix-utils:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyConnection/command(io.atomix.protocols.raft.protocol.CommandRequest)|",
    "called": "|java+method:///io/atomix/utils/concurrent/ThreadContext/isCurrentContext()|",
    "v1Body": [
      "|java+method:///io/atomix/utils/concurrent/ThreadContext/execute(java.lang.Runnable)|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyConnection/sendRequest(io.atomix.protocols.raft.protocol.RaftRequest,java.util.function.BiFunction,java.util.concurrent.CompletableFuture)|",
      "|java+constructor:///java/util/concurrent/CompletableFuture/CompletableFuture()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/atomix/utils/concurrent/ThreadContext/isCurrentContext()|"
    ],
    "v2Body": [
      "|java+method:///io/atomix/utils/concurrent/ThreadContext/execute(java.lang.Runnable)|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyConnection/sendRequest(io.atomix.protocols.raft.protocol.RaftRequest,java.util.function.BiFunction,io.atomix.cluster.NodeId,java.util.concurrent.CompletableFuture)|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyConnection/next()|",
      "|java+constructor:///java/util/concurrent/CompletableFuture/CompletableFuture()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/atomix/utils/concurrent/ThreadContext/isCurrentContext()|"
    ],
    "affectedLib": "io.atomix:atomix-utils:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/onTransfer(io.atomix.protocols.raft.protocol.TransferRequest)|",
    "called": "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
    "v1Body": [
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|",
      "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/protocol/TransferResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|",
      "|java+method:///io/atomix/protocols/raft/protocol/TransferResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type)|",
      "|java+method:///io/atomix/protocols/raft/protocol/TransferResponse/newBuilder()|",
      "|java+method:///io/atomix/protocols/raft/protocol/TransferResponse$Builder/build()|"
    ],
    "v2Body": [
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|",
      "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/protocol/TransferResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|",
      "|java+method:///io/atomix/protocols/raft/protocol/TransferResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type)|",
      "|java+method:///io/atomix/protocols/raft/protocol/TransferResponse/builder()|",
      "|java+method:///io/atomix/protocols/raft/protocol/TransferResponse$Builder/build()|"
    ],
    "affectedLib": "io.atomix:atomix-utils:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyConnection/query(io.atomix.protocols.raft.protocol.QueryRequest)|",
    "called": "|java+method:///io/atomix/utils/concurrent/ThreadContext/isCurrentContext()|",
    "v1Body": [
      "|java+method:///io/atomix/utils/concurrent/ThreadContext/execute(java.lang.Runnable)|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyConnection/sendRequest(io.atomix.protocols.raft.protocol.RaftRequest,java.util.function.BiFunction,java.util.concurrent.CompletableFuture)|",
      "|java+constructor:///java/util/concurrent/CompletableFuture/CompletableFuture()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/atomix/utils/concurrent/ThreadContext/isCurrentContext()|"
    ],
    "v2Body": [
      "|java+method:///io/atomix/utils/concurrent/ThreadContext/execute(java.lang.Runnable)|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyConnection/sendRequest(io.atomix.protocols.raft.protocol.RaftRequest,java.util.function.BiFunction,io.atomix.cluster.NodeId,java.util.concurrent.CompletableFuture)|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyConnection/next()|",
      "|java+constructor:///java/util/concurrent/CompletableFuture/CompletableFuture()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/atomix/utils/concurrent/ThreadContext/isCurrentContext()|"
    ],
    "affectedLib": "io.atomix:atomix-utils:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+method:///io/atomix/protocols/raft/impl/RaftServiceManager/applyQuery(io.atomix.storage.journal.Indexed)|",
    "called": "|java+method:///io/atomix/utils/concurrent/Futures/exceptionalFuture(java.lang.Throwable)|",
    "v1Body": [
      "|java+constructor:///io/atomix/protocols/raft/RaftException$UnknownSession/RaftException$UnknownSession(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/service/impl/DefaultServiceContext/executeQuery(long,long,long,io.atomix.protocols.raft.session.impl.RaftSessionContext,io.atomix.protocols.raft.operation.RaftOperation)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///io/atomix/protocols/raft/storage/log/entry/QueryEntry/operation()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getSessions()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/atomix/protocols/raft/storage/log/entry/QueryEntry/session()|",
      "|java+method:///io/atomix/protocols/raft/storage/log/entry/QueryEntry/timestamp()|",
      "|java+method:///io/atomix/protocols/raft/session/impl/RaftSessionRegistry/getSession(long)|",
      "|java+method:///io/atomix/protocols/raft/storage/log/entry/QueryEntry/sequenceNumber()|",
      "|java+method:///io/atomix/utils/concurrent/Futures/exceptionalFuture(java.lang.Throwable)|",
      "|java+method:///io/atomix/protocols/raft/session/impl/RaftSessionContext/getService()|",
      "|java+method:///io/atomix/storage/journal/Indexed/entry()|",
      "|java+method:///io/atomix/storage/journal/Indexed/index()|"
    ],
    "v2Body": [
      "|java+constructor:///io/atomix/protocols/raft/RaftException$UnknownSession/RaftException$UnknownSession(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/atomix/protocols/raft/session/RaftSession/getService()|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/session/RaftSessionRegistry/getSession(long)|",
      "|java+method:///io/atomix/protocols/raft/service/RaftServiceContext/executeQuery(long,long,long,io.atomix.protocols.raft.session.RaftSession,io.atomix.primitive.operation.PrimitiveOperation)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///io/atomix/protocols/raft/storage/log/entry/QueryEntry/operation()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/atomix/protocols/raft/storage/log/entry/QueryEntry/sequenceNumber()|",
      "|java+method:///io/atomix/utils/concurrent/Futures/exceptionalFuture(java.lang.Throwable)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getSessions()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/atomix/protocols/raft/storage/log/entry/QueryEntry/session()|",
      "|java+method:///io/atomix/protocols/raft/storage/log/entry/QueryEntry/timestamp()|",
      "|java+method:///io/atomix/storage/journal/Indexed/entry()|",
      "|java+method:///io/atomix/storage/journal/Indexed/index()|"
    ],
    "affectedLib": "io.atomix:atomix-utils:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyConnection/closeSession(io.atomix.protocols.raft.protocol.CloseSessionRequest)|",
    "called": "|java+method:///io/atomix/utils/concurrent/ThreadContext/isCurrentContext()|",
    "v1Body": [
      "|java+method:///io/atomix/utils/concurrent/ThreadContext/execute(java.lang.Runnable)|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyConnection/sendRequest(io.atomix.protocols.raft.protocol.RaftRequest,java.util.function.BiFunction,java.util.concurrent.CompletableFuture)|",
      "|java+constructor:///java/util/concurrent/CompletableFuture/CompletableFuture()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/atomix/utils/concurrent/ThreadContext/isCurrentContext()|"
    ],
    "v2Body": [
      "|java+method:///io/atomix/utils/concurrent/ThreadContext/execute(java.lang.Runnable)|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyConnection/sendRequest(io.atomix.protocols.raft.protocol.RaftRequest,java.util.function.BiFunction,io.atomix.cluster.NodeId,java.util.concurrent.CompletableFuture)|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyConnection/next()|",
      "|java+constructor:///java/util/concurrent/CompletableFuture/CompletableFuture()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/atomix/utils/concurrent/ThreadContext/isCurrentContext()|"
    ],
    "affectedLib": "io.atomix:atomix-utils:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/onLeave(io.atomix.protocols.raft.protocol.LeaveRequest)|",
    "called": "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
    "v1Body": [
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|",
      "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/protocol/LeaveResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|",
      "|java+method:///io/atomix/protocols/raft/protocol/LeaveResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type)|",
      "|java+method:///io/atomix/protocols/raft/protocol/LeaveResponse/newBuilder()|",
      "|java+method:///io/atomix/protocols/raft/protocol/LeaveResponse$Builder/build()|"
    ],
    "v2Body": [
      "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/protocol/LeaveResponse$Builder/build()|",
      "|java+method:///io/atomix/protocols/raft/protocol/LeaveResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|",
      "|java+method:///io/atomix/protocols/raft/protocol/LeaveResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type)|",
      "|java+method:///io/atomix/protocols/raft/protocol/LeaveResponse/builder()|",
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|"
    ],
    "affectedLib": "io.atomix:atomix-utils:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyConnection/keepAlive(io.atomix.protocols.raft.protocol.KeepAliveRequest)|",
    "called": "|java+method:///io/atomix/utils/concurrent/ThreadContext/isCurrentContext()|",
    "v1Body": [
      "|java+method:///io/atomix/utils/concurrent/ThreadContext/execute(java.lang.Runnable)|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyConnection/sendRequest(io.atomix.protocols.raft.protocol.RaftRequest,java.util.function.BiFunction,java.util.concurrent.CompletableFuture)|",
      "|java+constructor:///java/util/concurrent/CompletableFuture/CompletableFuture()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/atomix/utils/concurrent/ThreadContext/isCurrentContext()|"
    ],
    "v2Body": [
      "|java+method:///io/atomix/utils/concurrent/ThreadContext/execute(java.lang.Runnable)|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyConnection/sendRequest(io.atomix.protocols.raft.protocol.RaftRequest,java.util.function.BiFunction,io.atomix.cluster.NodeId,java.util.concurrent.CompletableFuture)|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyConnection/next()|",
      "|java+constructor:///java/util/concurrent/CompletableFuture/CompletableFuture()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/atomix/utils/concurrent/ThreadContext/isCurrentContext()|"
    ],
    "affectedLib": "io.atomix:atomix-utils:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/onOpenSession(io.atomix.protocols.raft.protocol.OpenSessionRequest)|",
    "called": "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
    "v1Body": [
      "|java+method:///io/atomix/protocols/raft/protocol/OpenSessionResponse$Builder/build()|",
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|",
      "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/protocol/OpenSessionResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type)|",
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/protocol/OpenSessionResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|",
      "|java+method:///io/atomix/protocols/raft/protocol/OpenSessionResponse/newBuilder()|"
    ],
    "v2Body": [
      "|java+method:///io/atomix/protocols/raft/protocol/OpenSessionResponse$Builder/build()|",
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|",
      "|java+method:///io/atomix/utils/concurrent/Futures/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/protocol/OpenSessionResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type)|",
      "|java+method:///io/atomix/protocols/raft/roles/InactiveRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/protocol/OpenSessionResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|",
      "|java+method:///io/atomix/protocols/raft/protocol/OpenSessionResponse/builder()|"
    ],
    "affectedLib": "io.atomix:atomix-utils:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+constructor:///io/atomix/protocols/raft/proxy/impl/RaftProxyListener/RaftProxyListener(io.atomix.protocols.raft.protocol.RaftClientProtocol,io.atomix.protocols.raft.proxy.impl.MemberSelector,io.atomix.protocols.raft.proxy.impl.RaftProxyState,io.atomix.protocols.raft.proxy.impl.RaftProxySequencer,java.util.concurrent.Executor)|",
    "called": "|java+method:///io/atomix/utils/logging/LoggerContext$Builder/addValue(java.lang.Object)|",
    "v1Body": [
      "|java+method:///io/atomix/utils/logging/LoggerContext$Builder/addValue(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/protocol/RaftClientProtocol/registerPublishListener(io.atomix.protocols.raft.session.SessionId,java.util.function.Consumer,java.util.concurrent.Executor)|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyState/getServiceType()|",
      "|java+method:///io/atomix/utils/logging/LoggerContext/builder(java.lang.Class)|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyState/getSessionId()|",
      "|java+method:///com/google/common/collect/Sets/newLinkedHashSet()|",
      "|java+method:///com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/atomix/utils/logging/ContextualLoggerFactory/getLogger(java.lang.Class,io.atomix.utils.logging.LoggerContext)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/atomix/utils/logging/LoggerContext$Builder/add(java.lang.String,java.lang.Object)|",
      "|java+method:///io/atomix/utils/logging/LoggerContext$Builder/build()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyState/getServiceName()|"
    ],
    "v2Body": [
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyState/getPrimitiveType()|",
      "|java+method:///io/atomix/utils/logging/LoggerContext$Builder/addValue(java.lang.Object)|",
      "|java+method:///io/atomix/utils/logging/LoggerContext/builder(java.lang.Class)|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyState/getSessionId()|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyState/getPrimitiveName()|",
      "|java+method:///io/atomix/protocols/raft/protocol/RaftClientProtocol/registerPublishListener(io.atomix.primitive.session.SessionId,java.util.function.Consumer,java.util.concurrent.Executor)|",
      "|java+method:///com/google/common/collect/Sets/newLinkedHashSet()|",
      "|java+method:///com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/atomix/utils/logging/ContextualLoggerFactory/getLogger(java.lang.Class,io.atomix.utils.logging.LoggerContext)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/atomix/utils/logging/LoggerContext$Builder/add(java.lang.String,java.lang.Object)|",
      "|java+method:///io/atomix/utils/logging/LoggerContext$Builder/build()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "io.atomix:atomix-utils:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+constructor:///io/atomix/protocols/raft/proxy/impl/RaftProxySequencer/RaftProxySequencer(io.atomix.protocols.raft.proxy.impl.RaftProxyState)|",
    "called": "|java+method:///io/atomix/utils/logging/LoggerContext$Builder/addValue(java.lang.Object)|",
    "v1Body": [
      "|java+method:///io/atomix/utils/logging/LoggerContext$Builder/addValue(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyState/getServiceType()|",
      "|java+method:///io/atomix/utils/logging/LoggerContext/builder(java.lang.Class)|",
      "|java+constructor:///java/util/ArrayDeque/ArrayDeque()|",
      "|java+method:///io/atomix/utils/logging/ContextualLoggerFactory/getLogger(java.lang.Class,io.atomix.utils.logging.LoggerContext)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/atomix/utils/logging/LoggerContext$Builder/add(java.lang.String,java.lang.Object)|",
      "|java+method:///io/atomix/utils/logging/LoggerContext$Builder/build()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyState/getServiceName()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyState/getSessionId()|"
    ],
    "v2Body": [
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyState/getPrimitiveType()|",
      "|java+method:///io/atomix/utils/logging/LoggerContext$Builder/addValue(java.lang.Object)|",
      "|java+method:///io/atomix/utils/logging/LoggerContext/builder(java.lang.Class)|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyState/getPrimitiveName()|",
      "|java+constructor:///java/util/ArrayDeque/ArrayDeque()|",
      "|java+method:///io/atomix/utils/logging/ContextualLoggerFactory/getLogger(java.lang.Class,io.atomix.utils.logging.LoggerContext)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/atomix/utils/logging/LoggerContext$Builder/add(java.lang.String,java.lang.Object)|",
      "|java+method:///io/atomix/utils/logging/LoggerContext$Builder/build()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyState/getSessionId()|"
    ],
    "affectedLib": "io.atomix:atomix-utils:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+method:///io/atomix/protocols/raft/roles/LeaderRole/appendAndCompact(io.atomix.protocols.raft.storage.log.entry.RaftLogEntry,int)|",
    "called": "|java+constructor:///io/atomix/storage/StorageException$OutOfDiskSpace/StorageException$OutOfDiskSpace(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///java/util/concurrent/CompletableFuture/thenCompose(java.util.function.Function)|",
      "|java+method:///java/util/concurrent/CompletableFuture/thenApply(java.util.function.Function)|",
      "|java+method:///java/util/concurrent/CompletableFuture/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftServiceManager/compact()|",
      "|java+constructor:///io/atomix/storage/StorageException$OutOfDiskSpace/StorageException$OutOfDiskSpace(java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/storage/log/RaftLogWriter/append(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getLogWriter()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getServiceManager()|",
      "|java+method:///io/atomix/utils/concurrent/Futures/exceptionalFuture(java.lang.Throwable)|"
    ],
    "v2Body": [
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getLogCompactor()|",
      "|java+method:///io/atomix/protocols/raft/storage/compactor/RaftLogCompactor/compact()|",
      "|java+method:///java/util/concurrent/CompletableFuture/thenCompose(java.util.function.Function)|",
      "|java+method:///io/atomix/utils/concurrent/Futures/exceptionalFuture(java.lang.Throwable)|",
      "|java+method:///java/util/concurrent/CompletableFuture/completedFuture(java.lang.Object)|",
      "|java+constructor:///io/atomix/storage/StorageException$OutOfDiskSpace/StorageException$OutOfDiskSpace(java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/storage/log/RaftLogWriter/append(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getLogWriter()|"
    ],
    "affectedLib": "io.atomix:atomix-storage:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.1.0-beta1",
    "coordinatesV2": "io.atomix:atomix-raft:2.0.23",
    "caller": "|java+constructor:///io/atomix/protocols/raft/roles/FollowerRole/FollowerRole(io.atomix.protocols.raft.impl.RaftContext)|",
    "called": "|java+constructor:///io/atomix/protocols/phi/PhiAccrualFailureDetector/PhiAccrualFailureDetector(int,long)|",
    "v1Body": [
      "|java+method:///java/time/Duration/toMillis()|",
      "|java+constructor:///io/atomix/protocols/phi/PhiAccrualFailureDetector/PhiAccrualFailureDetector(int,long)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getHeartbeatInterval()|",
      "|java+constructor:///io/atomix/protocols/raft/roles/ActiveRole/ActiveRole(io.atomix.protocols.raft.impl.RaftContext)|",
      "|java+constructor:///java/util/Random/Random()|"
    ],
    "v2Body": [
      "|java+constructor:///io/atomix/protocols/raft/roles/ActiveRole/ActiveRole(io.atomix.protocols.raft.impl.RaftContext)|",
      "|java+constructor:///java/util/Random/Random()|"
    ],
    "affectedLib": "io.atomix:atomix-failure-detection:2.0.23",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.0.23",
    "coordinatesV2": "io.atomix:atomix-raft:2.1.0-beta1",
    "caller": "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyInvoker/close()|",
    "called": "|java+constructor:///io/atomix/primitive/PrimitiveException$ClosedSession/PrimitiveException$ClosedSession(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/util/ArrayList/iterator()|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///io/atomix/protocols/raft/RaftException$ClosedSession/RaftException$ClosedSession(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Map/clear()|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyInvoker$OperationAttempt/fail(java.lang.Throwable)|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyState/setState(io.atomix.protocols.raft.proxy.RaftProxy$State)|"
    ],
    "v2Body": [
      "|java+method:///java/util/ArrayList/iterator()|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Map/clear()|",
      "|java+method:///java/util/concurrent/CompletableFuture/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyInvoker$OperationAttempt/fail(java.lang.Throwable)|",
      "|java+constructor:///io/atomix/primitive/PrimitiveException$ClosedSession/PrimitiveException$ClosedSession(java.lang.String)|"
    ],
    "affectedLib": "io.atomix:atomix-primitive:2.1.0-beta1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.0.23",
    "coordinatesV2": "io.atomix:atomix-raft:2.1.0-beta1",
    "caller": "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyInvoker$QueryAttempt/defaultException()|",
    "called": "|java+constructor:///io/atomix/primitive/PrimitiveException$QueryFailure/PrimitiveException$QueryFailure(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///io/atomix/protocols/raft/RaftException$QueryFailure/RaftException$QueryFailure(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+constructor:///io/atomix/primitive/PrimitiveException$QueryFailure/PrimitiveException$QueryFailure(java.lang.String)|"
    ],
    "affectedLib": "io.atomix:atomix-primitive:2.1.0-beta1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.0.23",
    "coordinatesV2": "io.atomix:atomix-raft:2.1.0-beta1",
    "caller": "|java+method:///io/atomix/protocols/raft/protocol/CommandRequest/equals(java.lang.Object)|",
    "called": "|java+method:///io/atomix/primitive/operation/PrimitiveOperation/equals(java.lang.Object)|",
    "v1Body": [
      "|java+method:///io/atomix/protocols/raft/operation/RaftOperation/equals(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///io/atomix/primitive/operation/PrimitiveOperation/equals(java.lang.Object)|"
    ],
    "affectedLib": "io.atomix:atomix-primitive:2.1.0-beta1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.0.23",
    "coordinatesV2": "io.atomix:atomix-raft:2.1.0-beta1",
    "caller": "|java+method:///io/atomix/protocols/raft/protocol/QueryRequest/equals(java.lang.Object)|",
    "called": "|java+method:///io/atomix/primitive/operation/PrimitiveOperation/equals(java.lang.Object)|",
    "v1Body": [
      "|java+method:///io/atomix/protocols/raft/operation/RaftOperation/equals(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///io/atomix/primitive/operation/PrimitiveOperation/equals(java.lang.Object)|"
    ],
    "affectedLib": "io.atomix:atomix-primitive:2.1.0-beta1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.0.23",
    "coordinatesV2": "io.atomix:atomix-raft:2.1.0-beta1",
    "caller": "|java+method:///io/atomix/protocols/raft/impl/DefaultRaftServer$Builder/build()|",
    "called": "|java+method:///io/atomix/primitive/PrimitiveTypeRegistry/size()|",
    "v1Body": [
      "|java+constructor:///io/atomix/protocols/raft/impl/RaftContext/RaftContext(java.lang.String,io.atomix.protocols.raft.cluster.MemberId,io.atomix.protocols.raft.protocol.RaftServerProtocol,io.atomix.protocols.raft.storage.RaftStorage,io.atomix.protocols.raft.impl.RaftServiceFactoryRegistry,io.atomix.utils.concurrent.ThreadModel,int)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/setHeartbeatInterval(java.time.Duration)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftServiceFactoryRegistry/size()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/setElectionTimeout(java.time.Duration)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/setSessionTimeout(java.time.Duration)|",
      "|java+method:///io/atomix/protocols/raft/impl/DefaultRaftServer$Builder/build()|",
      "|java+method:///io/atomix/protocols/raft/storage/RaftStorage$Builder/build()|",
      "|java+method:///io/atomix/protocols/raft/cluster/MemberId/id()|",
      "|java+method:///io/atomix/protocols/raft/storage/RaftStorage/newBuilder()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/setSessionFailureThreshold(int)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/setElectionThreshold(int)|",
      "|java+constructor:///io/atomix/protocols/raft/impl/DefaultRaftServer/DefaultRaftServer(io.atomix.protocols.raft.impl.RaftContext)|"
    ],
    "v2Body": [
      "|java+method:///io/atomix/protocols/raft/storage/RaftStorage$Builder/build()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/setHeartbeatInterval(java.time.Duration)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/setElectionTimeout(java.time.Duration)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/setSessionTimeout(java.time.Duration)|",
      "|java+method:///io/atomix/cluster/NodeId/id()|",
      "|java+method:///io/atomix/protocols/raft/storage/RaftStorage/builder()|",
      "|java+constructor:///io/atomix/protocols/raft/impl/DefaultRaftServer/DefaultRaftServer(io.atomix.protocols.raft.impl.RaftContext)|",
      "|java+method:///io/atomix/primitive/PrimitiveTypeRegistry/size()|",
      "|java+method:///io/atomix/protocols/raft/impl/DefaultRaftServer$Builder/build()|",
      "|java+constructor:///io/atomix/protocols/raft/impl/RaftContext/RaftContext(java.lang.String,io.atomix.cluster.NodeId,io.atomix.cluster.ClusterService,io.atomix.protocols.raft.protocol.RaftServerProtocol,io.atomix.protocols.raft.storage.RaftStorage,io.atomix.primitive.PrimitiveTypeRegistry,io.atomix.utils.concurrent.ThreadModel,int)|"
    ],
    "affectedLib": "io.atomix:atomix-primitive:2.1.0-beta1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.0.23",
    "coordinatesV2": "io.atomix:atomix-raft:2.1.0-beta1",
    "caller": "|java+method:///io/atomix/protocols/raft/impl/RaftServiceManager/applyMetadata(io.atomix.storage.journal.Indexed)|",
    "called": "|java+method:///io/atomix/primitive/PrimitiveType/id()|",
    "v1Body": [
      "|java+constructor:///io/atomix/protocols/raft/RaftException$UnknownSession/RaftException$UnknownSession(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/service/ServiceType/id()|",
      "|java+method:///io/atomix/protocols/raft/session/impl/RaftSessionContext/serviceType()|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///io/atomix/protocols/raft/impl/MetadataResult/MetadataResult(java.util.Set)|",
      "|java+method:///io/atomix/protocols/raft/session/impl/RaftSessionRegistry/getSessions()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///io/atomix/storage/journal/Indexed/entry()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/atomix/protocols/raft/session/SessionId/id()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/atomix/protocols/raft/storage/log/entry/MetadataEntry/session()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///io/atomix/protocols/raft/session/impl/RaftSessionContext/sessionId()|",
      "|java+method:///io/atomix/protocols/raft/session/impl/RaftSessionRegistry/getSession(long)|",
      "|java+constructor:///io/atomix/protocols/raft/session/RaftSessionMetadata/RaftSessionMetadata(long,java.lang.String,java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getSessions()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/atomix/protocols/raft/session/impl/RaftSessionContext/serviceName()|"
    ],
    "v2Body": [
      "|java+constructor:///io/atomix/protocols/raft/RaftException$UnknownSession/RaftException$UnknownSession(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/atomix/protocols/raft/session/RaftSession/serviceType()|",
      "|java+method:///io/atomix/protocols/raft/session/RaftSessionRegistry/getSessions()|",
      "|java+method:///io/atomix/protocols/raft/session/RaftSession/sessionId()|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/session/RaftSessionRegistry/getSession(long)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/session/RaftSession/serviceName()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/atomix/utils/concurrent/Futures/exceptionalFuture(java.lang.Throwable)|",
      "|java+method:///io/atomix/primitive/session/SessionId/id()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///io/atomix/storage/journal/Indexed/entry()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///io/atomix/protocols/raft/storage/log/entry/MetadataEntry/session()|",
      "|java+method:///io/atomix/primitive/PrimitiveType/id()|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+constructor:///io/atomix/protocols/raft/impl/MetadataResult/MetadataResult(java.util.Set)|",
      "|java+method:///java/util/concurrent/CompletableFuture/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getSessions()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+constructor:///io/atomix/primitive/session/SessionMetadata/SessionMetadata(long,java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "io.atomix:atomix-primitive:2.1.0-beta1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.0.23",
    "coordinatesV2": "io.atomix:atomix-raft:2.1.0-beta1",
    "caller": "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyInvoker/invoke(io.atomix.protocols.raft.proxy.impl.RaftProxyInvoker$OperationAttempt)|",
    "called": "|java+constructor:///io/atomix/primitive/PrimitiveException$ClosedSession/PrimitiveException$ClosedSession(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+constructor:///io/atomix/protocols/raft/RaftException$ClosedSession/RaftException$ClosedSession(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyState/getState()|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyInvoker$OperationAttempt/fail(java.lang.Throwable)|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyInvoker$OperationAttempt/send()|",
      "|java+method:///java/util/concurrent/CompletableFuture/whenComplete(java.util.function.BiConsumer)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyState/getState()|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyInvoker$OperationAttempt/fail(java.lang.Throwable)|",
      "|java+constructor:///io/atomix/primitive/PrimitiveException$ClosedSession/PrimitiveException$ClosedSession(java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyInvoker$OperationAttempt/send()|",
      "|java+method:///java/util/concurrent/CompletableFuture/whenComplete(java.util.function.BiConsumer)|"
    ],
    "affectedLib": "io.atomix:atomix-primitive:2.1.0-beta1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.0.23",
    "coordinatesV2": "io.atomix:atomix-raft:2.1.0-beta1",
    "caller": "|java+method:///io/atomix/protocols/raft/proxy/impl/RaftProxyInvoker$CommandAttempt/defaultException()|",
    "called": "|java+constructor:///io/atomix/primitive/PrimitiveException$CommandFailure/PrimitiveException$CommandFailure(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///io/atomix/protocols/raft/RaftException$CommandFailure/RaftException$CommandFailure(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+constructor:///io/atomix/primitive/PrimitiveException$CommandFailure/PrimitiveException$CommandFailure(java.lang.String)|"
    ],
    "affectedLib": "io.atomix:atomix-primitive:2.1.0-beta1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.0.23",
    "coordinatesV2": "io.atomix:atomix-raft:2.1.0-beta1",
    "caller": "|java+method:///io/atomix/protocols/raft/impl/RaftServiceManager/applyOpenSession(io.atomix.storage.journal.Indexed)|",
    "called": "|java+method:///io/atomix/primitive/PrimitiveTypeRegistry/get(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///io/atomix/protocols/raft/RaftException$UnknownService/RaftException$UnknownService(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/atomix/protocols/raft/service/impl/DefaultServiceContext/openSession(long,long,io.atomix.protocols.raft.session.impl.RaftSessionContext)|",
      "|java+method:///io/atomix/protocols/raft/storage/log/entry/OpenSessionEntry/propagationStrategy()|",
      "|java+method:///io/atomix/protocols/raft/storage/log/entry/OpenSessionEntry/serviceName()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/storage/log/entry/OpenSessionEntry/readConsistency()|",
      "|java+method:///io/atomix/protocols/raft/session/impl/RaftSessionRegistry/addSession(io.atomix.protocols.raft.session.impl.RaftSessionContext)|",
      "|java+method:///io/atomix/protocols/raft/service/ServiceType/from(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/atomix/protocols/raft/storage/log/entry/OpenSessionEntry/serviceType()|",
      "|java+method:///io/atomix/protocols/raft/session/SessionId/from(long)|",
      "|java+method:///io/atomix/protocols/raft/storage/log/entry/OpenSessionEntry/timestamp()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///io/atomix/protocols/raft/session/impl/RaftSessionContext/RaftSessionContext(io.atomix.protocols.raft.session.SessionId,io.atomix.protocols.raft.cluster.MemberId,java.lang.String,io.atomix.protocols.raft.service.ServiceType,io.atomix.protocols.raft.ReadConsistency,long,long,long,io.atomix.protocols.raft.service.impl.DefaultServiceContext,io.atomix.protocols.raft.impl.RaftContext,io.atomix.utils.concurrent.ThreadContextFactory)|",
      "|java+method:///io/atomix/protocols/raft/storage/log/entry/OpenSessionEntry/memberId()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftServiceManager/getOrInitializeService(io.atomix.protocols.raft.service.ServiceId,io.atomix.protocols.raft.service.ServiceType,java.lang.String,int,io.atomix.protocols.raft.service.PropagationStrategy)|",
      "|java+method:///io/atomix/protocols/raft/storage/log/entry/OpenSessionEntry/revision()|",
      "|java+method:///io/atomix/protocols/raft/cluster/MemberId/from(java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/storage/log/entry/OpenSessionEntry/maxTimeout()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getSessions()|",
      "|java+method:///io/atomix/protocols/raft/service/ServiceId/from(long)|",
      "|java+method:///io/atomix/storage/journal/Indexed/index()|",
      "|java+method:///io/atomix/storage/journal/Indexed/entry()|",
      "|java+method:///io/atomix/protocols/raft/storage/log/entry/OpenSessionEntry/minTimeout()|"
    ],
    "v2Body": [
      "|java+constructor:///io/atomix/protocols/raft/RaftException$UnknownService/RaftException$UnknownService(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/atomix/primitive/PrimitiveId/from(long)|",
      "|java+method:///io/atomix/protocols/raft/storage/log/entry/OpenSessionEntry/memberId()|",
      "|java+method:///io/atomix/protocols/raft/storage/log/entry/OpenSessionEntry/serviceName()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/storage/log/entry/OpenSessionEntry/readConsistency()|",
      "|java+method:///io/atomix/protocols/raft/storage/log/entry/OpenSessionEntry/maxTimeout()|",
      "|java+method:///io/atomix/primitive/session/SessionId/from(long)|",
      "|java+method:///io/atomix/primitive/PrimitiveTypeRegistry/get(java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getPrimitiveTypes()|",
      "|java+method:///io/atomix/protocols/raft/session/RaftSessionRegistry/addSession(io.atomix.protocols.raft.session.RaftSession)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftServiceManager/getOrInitializeService(io.atomix.primitive.PrimitiveId,io.atomix.primitive.PrimitiveType,java.lang.String)|",
      "|java+method:///io/atomix/cluster/NodeId/from(java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/service/RaftServiceContext/openSession(long,long,io.atomix.protocols.raft.session.RaftSession)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getSessions()|",
      "|java+method:///io/atomix/protocols/raft/storage/log/entry/OpenSessionEntry/timestamp()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///io/atomix/protocols/raft/session/RaftSession/RaftSession(io.atomix.primitive.session.SessionId,io.atomix.cluster.NodeId,java.lang.String,io.atomix.primitive.PrimitiveType,io.atomix.protocols.raft.ReadConsistency,long,long,long,io.atomix.protocols.raft.service.RaftServiceContext,io.atomix.protocols.raft.impl.RaftContext,io.atomix.utils.concurrent.ThreadContextFactory)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/atomix/protocols/raft/storage/log/entry/OpenSessionEntry/serviceType()|",
      "|java+method:///io/atomix/utils/concurrent/Futures/exceptionalFuture(java.lang.Throwable)|",
      "|java+method:///io/atomix/storage/journal/Indexed/index()|",
      "|java+method:///io/atomix/storage/journal/Indexed/entry()|",
      "|java+method:///io/atomix/protocols/raft/storage/log/entry/OpenSessionEntry/minTimeout()|"
    ],
    "affectedLib": "io.atomix:atomix-primitive:2.1.0-beta1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.atomix:atomix-raft:2.0.23",
    "coordinatesV2": "io.atomix:atomix-raft:2.1.0-beta1",
    "caller": "|java+method:///io/atomix/protocols/raft/roles/PassiveRole/onInstall(io.atomix.protocols.raft.protocol.InstallRequest)|",
    "called": "|java+method:///io/atomix/primitive/PrimitiveId/from(long)|",
    "v1Body": [
      "|java+method:///io/atomix/protocols/raft/storage/snapshot/Snapshot/index()|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallRequest/leader()|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallRequest/data()|",
      "|java+method:///io/atomix/protocols/raft/storage/snapshot/SnapshotStore/newTemporarySnapshot(long,io.atomix.time.WallClockTimestamp)|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallRequest/term()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getTerm()|",
      "|java+constructor:///io/atomix/protocols/raft/roles/PassiveRole$PendingSnapshot/PassiveRole$PendingSnapshot(io.atomix.protocols.raft.storage.snapshot.Snapshot)|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallRequest/snapshotTimestamp()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getSnapshotStore()|",
      "|java+method:///io/atomix/protocols/raft/storage/snapshot/SnapshotWriter/write(byte%5B%5D)|",
      "|java+method:///io/atomix/protocols/raft/storage/snapshot/SnapshotWriter/close()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/checkThread()|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type,java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallRequest/chunkOffset()|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole$PendingSnapshot/snapshot()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole$PendingSnapshot/rollback()|",
      "|java+method:///io/atomix/protocols/raft/storage/snapshot/Snapshot/openWriter()|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallResponse/newBuilder()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole$PendingSnapshot/nextOffset()|",
      "|java+method:///io/atomix/time/WallClockTimestamp/from(long)|",
      "|java+method:///io/atomix/protocols/raft/storage/snapshot/SnapshotStore/getSnapshot(long)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallRequest/snapshotIndex()|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallResponse$Builder/build()|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallRequest/complete()|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole$PendingSnapshot/incrementOffset()|",
      "|java+method:///java/util/concurrent/CompletableFuture/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole/updateTermAndLeader(long,io.atomix.protocols.raft.cluster.MemberId)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole$PendingSnapshot/commit()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getLastApplied()|"
    ],
    "v2Body": [
      "|java+method:///io/atomix/protocols/raft/storage/snapshot/Snapshot/index()|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallRequest/leader()|",
      "|java+method:///io/atomix/primitive/PrimitiveId/from(long)|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallRequest/term()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getTerm()|",
      "|java+constructor:///io/atomix/protocols/raft/roles/PassiveRole$PendingSnapshot/PassiveRole$PendingSnapshot(io.atomix.protocols.raft.storage.snapshot.Snapshot)|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallRequest/serviceId()|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallRequest/snapshotTimestamp()|",
      "|java+method:///io/atomix/protocols/raft/storage/snapshot/SnapshotStore/getSnapshot(io.atomix.primitive.PrimitiveId,long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/getSnapshotStore()|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole$PendingSnapshot/commit()|",
      "|java+method:///io/atomix/protocols/raft/storage/snapshot/SnapshotWriter/close()|",
      "|java+method:///io/atomix/protocols/raft/impl/RaftContext/checkThread()|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallResponse$Builder/withError(io.atomix.protocols.raft.RaftError$Type,java.lang.String)|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallRequest/data()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole$PendingSnapshot/snapshot()|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallResponse/builder()|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole$PendingSnapshot/rollback()|",
      "|java+method:///io/atomix/protocols/raft/storage/snapshot/Snapshot/openWriter()|",
      "|java+method:///io/atomix/utils/time/WallClockTimestamp/from(long)|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole/logResponse(io.atomix.protocols.raft.protocol.RaftResponse)|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole$PendingSnapshot/nextOffset()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/atomix/protocols/raft/storage/snapshot/SnapshotStore/newSnapshot(io.atomix.primitive.PrimitiveId,java.lang.String,long,io.atomix.utils.time.WallClockTimestamp)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallRequest/snapshotIndex()|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallResponse$Builder/build()|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole/logRequest(io.atomix.protocols.raft.protocol.RaftRequest)|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallRequest/complete()|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///io/atomix/protocols/raft/storage/snapshot/SnapshotWriter/write(byte%5B%5D)|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole/updateTermAndLeader(long,io.atomix.cluster.NodeId)|",
      "|java+method:///io/atomix/protocols/raft/roles/PassiveRole$PendingSnapshot/incrementOffset()|",
      "|java+method:///java/util/concurrent/CompletableFuture/completedFuture(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallRequest/serviceName()|",
      "|java+method:///java/util/Map/remove(java.lang.Object)|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallRequest/chunkOffset()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/atomix/protocols/raft/protocol/InstallResponse$Builder/withStatus(io.atomix.protocols.raft.protocol.RaftResponse$Status)|"
    ],
    "affectedLib": "io.atomix:atomix-primitive:2.1.0-beta1",
    "change": "ADDED"
  }
]