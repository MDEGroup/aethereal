[
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "caller": "|java+initializer:///org/apache/beam/runners/dataflow/internal/CustomSources/CustomSources$initializer|",
    "called": "|java+method:///com/google/protobuf/ByteString/copyFromUtf8(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/google/protobuf/ByteString/copyFromUtf8(java.lang.String)|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|"
    ],
    "affectedLib": "com.google.protobuf:protobuf-java:3.1.0",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "caller": "|java+initializer:///org/apache/beam/runners/dataflow/internal/CustomSources/CustomSources$initializer|",
    "called": "|java+method:///com/google/protobuf/ByteString/copyFromUtf8(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/google/protobuf/ByteString/copyFromUtf8(java.lang.String)|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|"
    ],
    "affectedLib": "com.google.protobuf:protobuf-lite:3.0.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "caller": "|java+constructor:///org/apache/beam/runners/dataflow/DataflowRunner/DataflowRunner(org.apache.beam.runners.dataflow.options.DataflowPipelineOptions)|",
    "called": "|java+method:///org/apache/beam/runners/core/construction/PTransformMatchers/stateOrTimerParDoSingle()|",
    "v1Body": [
      "|java+method:///org/apache/beam/runners/dataflow/BatchStatefulParDoOverrides/singleOutputOverrideFactory()|",
      "|java+method:///org/apache/beam/runners/core/construction/PTransformMatchers/parDoWithFnType(java.lang.Class)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/fromOptions(org.apache.beam.runners.dataflow.options.DataflowPipelineOptions)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/beam/sdk/runners/PipelineRunner/PipelineRunner()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/collect/ImmutableMap$Builder/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/core/construction/UnsupportedOverrideFactory/withMessage(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/isStreaming()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/collect/ImmutableSet/of(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/collect/ImmutableSet/iterator()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///org/apache/beam/runners/core/construction/EmptyFlattenAsCreateFactory/instance()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/collect/ImmutableMap/builder()|",
      "|java+method:///org/apache/beam/runners/core/construction/PTransformMatchers/classEqualTo(java.lang.Class)|",
      "|java+method:///org/apache/beam/runners/core/construction/PTransformMatchers/emptyFlatten()|",
      "|java+method:///org/apache/beam/runners/core/construction/PTransformMatchers/stateOrTimerParDoMulti()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowRunner$PrimitiveCombineGroupedValuesOverrideFactory/DataflowRunner$PrimitiveCombineGroupedValuesOverrideFactory(org.apache.beam.runners.dataflow.DataflowRunner$1)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/collect/ImmutableMap$Builder/build()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/getUnsupportedMessage(java.lang.Class,boolean)|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchStatefulParDoOverrides/multiOutputOverrideFactory()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/StreamingViewOverrides$StreamingCreatePCollectionViewFactory/StreamingViewOverrides$StreamingCreatePCollectionViewFactory()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowClient/create(org.apache.beam.runners.dataflow.options.DataflowPipelineOptions)|",
      "|java+method:///org/apache/beam/runners/core/construction/PTransformMatchers/stateOrTimerParDoSingle()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowRunner$StreamingPubsubIOWriteOverrideFactory/DataflowRunner$StreamingPubsubIOWriteOverrideFactory(org.apache.beam.runners.dataflow.DataflowRunner,org.apache.beam.runners.dataflow.DataflowRunner,org.apache.beam.runners.dataflow.DataflowRunner$1)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowRunner$BatchWriteFactory/DataflowRunner$BatchWriteFactory(org.apache.beam.runners.dataflow.DataflowRunner,org.apache.beam.runners.dataflow.DataflowRunner,org.apache.beam.runners.dataflow.DataflowRunner$1)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowRunner$ReflectiveRootOverrideFactory/DataflowRunner$ReflectiveRootOverrideFactory(java.lang.Class,org.apache.beam.runners.dataflow.DataflowRunner,org.apache.beam.runners.dataflow.DataflowRunner$1)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowRunner$ReflectiveOneToOneOverrideFactory/DataflowRunner$ReflectiveOneToOneOverrideFactory(java.lang.Class,org.apache.beam.runners.dataflow.DataflowRunner,org.apache.beam.runners.dataflow.DataflowRunner$1)|",
      "|java+method:///java/util/List/contains(java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getExperiments()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/fromOptions(org.apache.beam.runners.dataflow.options.DataflowPipelineOptions)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowClient/create(org.apache.beam.runners.dataflow.options.DataflowPipelineOptions)|",
      "|java+constructor:///org/apache/beam/sdk/PipelineRunner/PipelineRunner()|",
      "|java+constructor:///java/util/HashSet/HashSet()|"
    ],
    "affectedLib": "org.apache.beam:beam-runners-core-construction-java:0.6.0",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "caller": "|java+constructor:///org/apache/beam/runners/dataflow/DataflowRunner$ReflectiveOneToOneOverrideFactory/DataflowRunner$ReflectiveOneToOneOverrideFactory(java.lang.Class,org.apache.beam.runners.dataflow.DataflowRunner)|",
    "called": "|java+constructor:///org/apache/beam/runners/core/construction/SingleInputOutputOverrideFactory/SingleInputOutputOverrideFactory()|",
    "v1Body": [
      "|java+constructor:///org/apache/beam/runners/core/construction/SingleInputOutputOverrideFactory/SingleInputOutputOverrideFactory()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/beam/runners/dataflow/repackaged/org/apache/beam/runners/core/construction/SingleInputOutputOverrideFactory/SingleInputOutputOverrideFactory()|"
    ],
    "affectedLib": "org.apache.beam:beam-runners-core-construction-java:0.6.0",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "caller": "|java+constructor:///org/apache/beam/runners/dataflow/StreamingViewOverrides$StreamingCreatePCollectionViewFactory/StreamingViewOverrides$StreamingCreatePCollectionViewFactory()|",
    "called": "|java+constructor:///org/apache/beam/runners/core/construction/SingleInputOutputOverrideFactory/SingleInputOutputOverrideFactory()|",
    "v1Body": [
      "|java+constructor:///org/apache/beam/runners/core/construction/SingleInputOutputOverrideFactory/SingleInputOutputOverrideFactory()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/beam/runners/dataflow/repackaged/org/apache/beam/runners/core/construction/SingleInputOutputOverrideFactory/SingleInputOutputOverrideFactory()|"
    ],
    "affectedLib": "org.apache.beam:beam-runners-core-construction-java:0.6.0",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner$StreamingPubsubIORead/expand(org.apache.beam.sdk.values.PBegin)|",
    "called": "|java+constructor:///org/apache/beam/sdk/io/gcp/pubsub/PubsubMessageWithAttributesCoder/PubsubMessageWithAttributesCoder()|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/globalDefault()|",
      "|java+method:///org/apache/beam/sdk/io/PubsubUnboundedSource/getElementCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/createPrimitiveOutputInternal(org.apache.beam.sdk.Pipeline,org.apache.beam.sdk.util.WindowingStrategy,org.apache.beam.sdk.values.PCollection$IsBounded)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/setCoder(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/values/PBegin/getPipeline()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/values/WindowingStrategy/globalDefault()|",
      "|java+constructor:///org/apache/beam/sdk/io/gcp/pubsub/PubsubMessageWithAttributesCoder/PubsubMessageWithAttributesCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/createPrimitiveOutputInternal(org.apache.beam.sdk.Pipeline,org.apache.beam.sdk.values.WindowingStrategy,org.apache.beam.sdk.values.PCollection$IsBounded)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/setCoder(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/values/PBegin/getPipeline()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-io-google-cloud-platform:2.0.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner$StreamingPubsubIOWriteTranslator/translate(org.apache.beam.runners.dataflow.DataflowRunner$StreamingPubsubIOWrite,org.apache.beam.runners.dataflow.TransformTranslator$TranslationContext)|",
    "called": "|java+method:///org/apache/beam/sdk/io/gcp/pubsub/PubsubClient$TopicPath/getV1Beta1Path()|",
    "v1Body": [
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/getInput(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/util/SerializableUtils/serializeToByteArray(java.io.Serializable)|",
      "|java+method:///org/apache/beam/sdk/io/PubsubUnboundedSink/getIdLabel()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addInput(java.lang.String,org.apache.beam.sdk.values.PInput)|",
      "|java+method:///org/apache/beam/sdk/io/PubsubUnboundedSink/getTimestampLabel()|",
      "|java+method:///org/apache/beam/sdk/io/PubsubUnboundedSink/getFormatFn()|",
      "|java+method:///org/apache/beam/sdk/io/PubsubUnboundedSink/getTopicProvider()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/addStep(org.apache.beam.sdk.transforms.PTransform,java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/options/ValueProvider$NestedValueProvider/propertyName()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addInput(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/beam/sdk/coders/VoidCoder/of()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/isStreaming()|",
      "|java+method:///org/apache/beam/sdk/options/ValueProvider/isAccessible()|",
      "|java+method:///org/apache/beam/sdk/util/StringUtils/byteArrayToJsonString(byte%5B%5D)|",
      "|java+method:///org/apache/beam/sdk/io/PubsubUnboundedSink/getTopic()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getValueOnlyCoder(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner$StreamingPubsubIOWrite/getOverriddenTransform()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/getPipelineOptions()|",
      "|java+method:///org/apache/beam/sdk/util/PubsubClient$TopicPath/getV1Beta1Path()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addEncodingInput(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/io/PubsubUnboundedSink/getElementCoder()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/getInput(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/util/SerializableUtils/serializeToByteArray(java.io.Serializable)|",
      "|java+method:///org/apache/beam/sdk/io/gcp/pubsub/PubsubUnboundedSink/getTopicProvider()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/addStep(org.apache.beam.sdk.transforms.PTransform,java.lang.String)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowRunner$IdentityMessageFn/DataflowRunner$IdentityMessageFn(org.apache.beam.runners.dataflow.DataflowRunner$1)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/options/ValueProvider$NestedValueProvider/propertyName()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addInput(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/getPipelineOptions()|",
      "|java+method:///org/apache/beam/sdk/coders/VoidCoder/of()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addEncodingInput(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/io/gcp/pubsub/PubsubUnboundedSink/getTimestampAttribute()|",
      "|java+method:///org/apache/beam/sdk/options/ValueProvider/isAccessible()|",
      "|java+method:///org/apache/beam/sdk/util/StringUtils/byteArrayToJsonString(byte%5B%5D)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner$StreamingPubsubIOWrite/getOverriddenTransform()|",
      "|java+method:///org/apache/beam/sdk/io/gcp/pubsub/PubsubUnboundedSink/getIdAttribute()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addInput(java.lang.String,org.apache.beam.sdk.values.PInput)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/isStreaming()|",
      "|java+method:///org/apache/beam/sdk/io/gcp/pubsub/PubsubUnboundedSink/getTopic()|",
      "|java+method:///org/apache/beam/sdk/io/gcp/pubsub/PubsubClient$TopicPath/getV1Beta1Path()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getValueOnlyCoder(org.apache.beam.sdk.coders.Coder)|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-io-google-cloud-platform:2.0.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner$StreamingPubsubIOReadTranslator/translate(org.apache.beam.runners.dataflow.DataflowRunner$StreamingPubsubIORead,org.apache.beam.runners.dataflow.TransformTranslator$TranslationContext)|",
    "called": "|java+method:///org/apache/beam/sdk/io/gcp/pubsub/PubsubUnboundedSource/getTopic()|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/util/SerializableUtils/serializeToByteArray(java.io.Serializable)|",
      "|java+method:///org/apache/beam/sdk/io/PubsubUnboundedSource/getTopicProvider()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner$StreamingPubsubIORead/getOverriddenTransform()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/addStep(org.apache.beam.sdk.transforms.PTransform,java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/isStreaming()|",
      "|java+method:///org/apache/beam/sdk/util/PubsubClient$SubscriptionPath/getV1Beta1Path()|",
      "|java+method:///org/apache/beam/sdk/options/ValueProvider/isAccessible()|",
      "|java+method:///org/apache/beam/sdk/util/StringUtils/byteArrayToJsonString(byte%5B%5D)|",
      "|java+method:///org/apache/beam/sdk/io/PubsubUnboundedSource/getIdLabel()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addOutput(org.apache.beam.sdk.values.PValue)|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/getOutput(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/io/PubsubUnboundedSource/getWithAttributesParseFn()|",
      "|java+method:///org/apache/beam/sdk/io/PubsubUnboundedSource/getSubscriptionProvider()|",
      "|java+method:///org/apache/beam/sdk/io/PubsubUnboundedSource/getSubscription()|",
      "|java+method:///org/apache/beam/sdk/options/ValueProvider$NestedValueProvider/propertyName()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addInput(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/beam/sdk/io/PubsubUnboundedSource/getTimestampLabel()|",
      "|java+method:///org/apache/beam/sdk/util/PubsubClient$TopicPath/getV1Beta1Path()|",
      "|java+method:///org/apache/beam/sdk/io/PubsubUnboundedSource/getTopic()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/getPipelineOptions()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/util/SerializableUtils/serializeToByteArray(java.io.Serializable)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner$StreamingPubsubIORead/getOverriddenTransform()|",
      "|java+method:///org/apache/beam/sdk/io/gcp/pubsub/PubsubUnboundedSource/getSubscriptionProvider()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/addStep(org.apache.beam.sdk.transforms.PTransform,java.lang.String)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowRunner$IdentityMessageFn/DataflowRunner$IdentityMessageFn(org.apache.beam.runners.dataflow.DataflowRunner$1)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/options/ValueProvider$NestedValueProvider/propertyName()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addInput(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/beam/sdk/options/ValueProvider/isAccessible()|",
      "|java+method:///org/apache/beam/sdk/util/StringUtils/byteArrayToJsonString(byte%5B%5D)|",
      "|java+method:///org/apache/beam/sdk/io/gcp/pubsub/PubsubClient$TopicPath/getV1Beta1Path()|",
      "|java+method:///org/apache/beam/sdk/io/gcp/pubsub/PubsubUnboundedSource/getTopic()|",
      "|java+method:///org/apache/beam/sdk/io/gcp/pubsub/PubsubClient$SubscriptionPath/getV1Beta1Path()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/getPipelineOptions()|",
      "|java+method:///org/apache/beam/sdk/io/gcp/pubsub/PubsubUnboundedSource/getNeedsAttributes()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/isStreaming()|",
      "|java+method:///org/apache/beam/sdk/io/gcp/pubsub/PubsubUnboundedSource/getSubscription()|",
      "|java+method:///org/apache/beam/sdk/io/gcp/pubsub/PubsubUnboundedSource/getTimestampAttribute()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addOutput(org.apache.beam.sdk.values.PValue)|",
      "|java+method:///org/apache/beam/sdk/io/gcp/pubsub/PubsubUnboundedSource/getTopicProvider()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/getOutput(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/io/gcp/pubsub/PubsubUnboundedSource/getIdAttribute()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-io-google-cloud-platform:2.0.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/util/GcsStager/stageFiles()|",
    "called": "|java+method:///org/apache/beam/sdk/extensions/gcp/storage/GcsCreateOptions/builder()|",
    "v1Body": [
      "|java+method:///org/apache/beam/runners/dataflow/util/PackageUtil/stageClasspathElements(java.util.Collection,java.lang.String,org.apache.beam.sdk.util.GcsUtil)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/beam/sdk/util/Transport/newStorageClient(org.apache.beam.sdk.options.GcsOptions)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineDebugOptions/getOverrideWindmillBinary()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getStagingLocation()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/Math/min(int,int)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/MoreObjects/firstNonNull(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getGcsUploadBufferSizeBytes()|",
      "|java+method:///com/google/api/services/storage/Storage$Builder/build()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getExecutorService()|",
      "|java+method:///com/google/api/services/storage/Storage$Builder/getHttpRequestInitializer()|",
      "|java+method:///org/apache/beam/sdk/util/GcsUtil$GcsUtilFactory/create(com.google.api.services.storage.Storage,com.google.api.client.http.HttpRequestInitializer,java.util.concurrent.ExecutorService,java.lang.Integer)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Preconditions/checkNotNull(java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/as(java.lang.Class)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getFilesToStage()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineDebugOptions/getOverrideWindmillBinary()|",
      "|java+method:///org/apache/beam/sdk/extensions/gcp/storage/GcsCreateOptions$Builder/setGcsUploadBufferSizeBytes(java.lang.Integer)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/util/PackageUtil/stageClasspathElements(java.util.Collection,java.lang.String,org.apache.beam.sdk.io.fs.CreateOptions)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getStagingLocation()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/Math/min(int,int)|",
      "|java+method:///org/apache/beam/sdk/extensions/gcp/storage/GcsCreateOptions/builder()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/MoreObjects/firstNonNull(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/extensions/gcp/storage/GcsCreateOptions$Builder/setMimeType(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getGcsUploadBufferSizeBytes()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/beam/sdk/extensions/gcp/storage/GcsCreateOptions$Builder/build()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Preconditions/checkNotNull(java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/as(java.lang.Class)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getFilesToStage()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-extensions-google-cloud-platform-core:2.0.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineJob/getState()|",
    "called": "|java+method:///org/apache/beam/sdk/util/BackOffAdapter/toGcpBackOff(org.apache.beam.sdk.util.BackOff)|",
    "v1Body": [
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineJob/getStateWithRetries(com.google.api.client.util.BackOff,com.google.api.client.util.Sleeper)|",
      "|java+method:///org/apache/beam/sdk/util/FluentBackoff/backoff()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/util/BackOffAdapter/toGcpBackOff(org.apache.beam.sdk.util.BackOff)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineJob/getStateWithRetries(com.google.api.client.util.BackOff,com.google.api.client.util.Sleeper)|",
      "|java+method:///org/apache/beam/sdk/util/FluentBackoff/backoff()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-extensions-google-cloud-platform-core:2.0.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/util/DataflowTransport/chainHttpRequestInitializer(com.google.auth.Credentials,com.google.api.client.http.HttpRequestInitializer)|",
    "called": "|java+method:///org/apache/beam/sdk/extensions/gcp/auth/NullCredentialInitializer/throwNullCredentialException()|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/util/NullCredentialInitializer/throwNullCredentialException()|",
      "|java+constructor:///com/google/cloud/hadoop/util/ChainingHttpRequestInitializer/ChainingHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer%5B%5D)|",
      "|java+constructor:///com/google/auth/http/HttpCredentialsAdapter/HttpCredentialsAdapter(com.google.auth.Credentials)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/extensions/gcp/auth/NullCredentialInitializer/throwNullCredentialException()|",
      "|java+constructor:///com/google/cloud/hadoop/util/ChainingHttpRequestInitializer/ChainingHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer%5B%5D)|",
      "|java+constructor:///com/google/auth/http/HttpCredentialsAdapter/HttpCredentialsAdapter(com.google.auth.Credentials)|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-extensions-google-cloud-platform-core:2.0.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner$StreamingBoundedRead/expand(org.apache.beam.sdk.values.PBegin)|",
    "called": "|java+method:///org/apache/beam/sdk/Pipeline/applyTransform(org.apache.beam.sdk.values.PInput,org.apache.beam.sdk.transforms.PTransform)|",
    "v1Body": [
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowUnboundedReadFromBoundedSource/DataflowUnboundedReadFromBoundedSource(org.apache.beam.sdk.io.BoundedSource)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/setIsBoundedInternal(org.apache.beam.sdk.values.PCollection$IsBounded)|",
      "|java+method:///org/apache/beam/sdk/io/BoundedSource/validate()|",
      "|java+method:///org/apache/beam/sdk/Pipeline/applyTransform(org.apache.beam.sdk.values.PInput,org.apache.beam.sdk.transforms.PTransform)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/beam/runners/dataflow/repackaged/org/apache/beam/runners/core/construction/UnboundedReadFromBoundedSource/UnboundedReadFromBoundedSource(org.apache.beam.sdk.io.BoundedSource)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/setIsBoundedInternal(org.apache.beam.sdk.values.PCollection$IsBounded)|",
      "|java+method:///org/apache/beam/sdk/io/BoundedSource/validate()|",
      "|java+method:///org/apache/beam/sdk/Pipeline/applyTransform(org.apache.beam.sdk.values.PInput,org.apache.beam.sdk.transforms.PTransform)|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$GroupByKeyAndSortValuesOnly/expand(org.apache.beam.sdk.values.PCollection)|",
    "called": "|java+method:///org/apache/beam/sdk/coders/KvCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/globalDefault()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getPipeline()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/setCoder(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/getValueCoder()|",
      "|java+method:///org/apache/beam/sdk/coders/IterableCoder/of(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/createPrimitiveOutputInternal(org.apache.beam.sdk.Pipeline,org.apache.beam.sdk.util.WindowingStrategy,org.apache.beam.sdk.values.PCollection$IsBounded)|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/getKeyCoder()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/values/WindowingStrategy/globalDefault()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getPipeline()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/setCoder(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/getValueCoder()|",
      "|java+method:///org/apache/beam/sdk/coders/IterableCoder/of(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/createPrimitiveOutputInternal(org.apache.beam.sdk.Pipeline,org.apache.beam.sdk.values.WindowingStrategy,org.apache.beam.sdk.values.PCollection$IsBounded)|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/getKeyCoder()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsMultimap/applyInternal(org.apache.beam.sdk.values.PCollection)|",
    "called": "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/values/PCollection/getPipeline()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/recordViewUsesNonDeterministicKeyCoder(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/util/PCollectionViews/multimapView(org.apache.beam.sdk.Pipeline,org.apache.beam.sdk.util.WindowingStrategy,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsMultimap/applyForSingletonFallback(org.apache.beam.sdk.values.PCollection)|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsMultimap/applyForMapLike(org.apache.beam.runners.dataflow.DataflowRunner,org.apache.beam.sdk.values.PCollection,org.apache.beam.sdk.values.PCollectionView,boolean)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/recordViewUsesNonDeterministicKeyCoder(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/values/PCollectionViews/multimapView(org.apache.beam.sdk.values.PCollection,org.apache.beam.sdk.values.WindowingStrategy,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsMultimap/applyForSingletonFallback(org.apache.beam.sdk.values.PCollection)|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsMultimap/applyForMapLike(org.apache.beam.runners.dataflow.DataflowRunner,org.apache.beam.sdk.values.PCollection,org.apache.beam.sdk.values.PCollectionView,boolean)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/BatchStatefulParDoOverrides$StatefulSingleOutputParDo/expand(org.apache.beam.sdk.values.PCollection)|",
    "called": "|java+method:///org/apache/beam/sdk/values/PCollection/apply(org.apache.beam.sdk.transforms.PTransform)|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/transforms/ParDo$Bound/getFn()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/apply(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo/of(org.apache.beam.sdk.transforms.DoFn)|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchStatefulParDoOverrides/access$200(org.apache.beam.sdk.transforms.DoFn)|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo$Bound/withSideInputs(java.lang.Iterable)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchStatefulParDoOverrides$GbkBeforeStatefulParDo/BatchStatefulParDoOverrides$GbkBeforeStatefulParDo()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchStatefulParDoOverrides$BatchStatefulDoFn/BatchStatefulParDoOverrides$BatchStatefulDoFn(org.apache.beam.sdk.transforms.DoFn)|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo$Bound/getSideInputs()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/values/PCollection/apply(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo/of(org.apache.beam.sdk.transforms.DoFn)|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchStatefulParDoOverrides/access$200(org.apache.beam.sdk.transforms.DoFn)|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo$SingleOutput/getSideInputs()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchStatefulParDoOverrides$GbkBeforeStatefulParDo/BatchStatefulParDoOverrides$GbkBeforeStatefulParDo()|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo$SingleOutput/getFn()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchStatefulParDoOverrides$BatchStatefulDoFn/BatchStatefulParDoOverrides$BatchStatefulDoFn(org.apache.beam.sdk.transforms.DoFn)|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo$SingleOutput/withSideInputs(java.lang.Iterable)|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsMap/applyInternal(org.apache.beam.sdk.values.PCollection)|",
    "called": "|java+method:///org/apache/beam/sdk/values/PCollectionViews/mapView(org.apache.beam.sdk.values.PCollection,org.apache.beam.sdk.values.WindowingStrategy,org.apache.beam.sdk.coders.Coder)|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/values/PCollection/getPipeline()|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsMap/applyForSingletonFallback(org.apache.beam.sdk.values.PCollection)|",
      "|java+method:///org/apache/beam/sdk/util/PCollectionViews/mapView(org.apache.beam.sdk.Pipeline,org.apache.beam.sdk.util.WindowingStrategy,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/recordViewUsesNonDeterministicKeyCoder(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsMultimap/access$100(org.apache.beam.runners.dataflow.DataflowRunner,org.apache.beam.sdk.values.PCollection,org.apache.beam.sdk.values.PCollectionView,boolean)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsMap/applyForSingletonFallback(org.apache.beam.sdk.values.PCollection)|",
      "|java+method:///org/apache/beam/sdk/values/PCollectionViews/mapView(org.apache.beam.sdk.values.PCollection,org.apache.beam.sdk.values.WindowingStrategy,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/recordViewUsesNonDeterministicKeyCoder(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsMultimap/access$100(org.apache.beam.runners.dataflow.DataflowRunner,org.apache.beam.sdk.values.PCollection,org.apache.beam.sdk.values.PCollectionView,boolean)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsList/applyForIterableLike(org.apache.beam.runners.dataflow.DataflowRunner,org.apache.beam.sdk.values.PCollection,org.apache.beam.sdk.values.PCollectionView)|",
    "called": "|java+method:///org/apache/beam/sdk/values/PCollection/apply(org.apache.beam.sdk.transforms.PTransform)|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/windowCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/apply(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo/of(org.apache.beam.sdk.transforms.DoFn)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsList$ToIsmRecordForNonGlobalWindowDoFn/BatchViewOverrides$BatchViewAsList$ToIsmRecordForNonGlobalWindowDoFn(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getWindowFn()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/addPCollectionRequiringIndexedFormat(org.apache.beam.sdk.values.PCollection)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$GroupByWindowHashAsKeyAndWindowAsSortKey/BatchViewOverrides$GroupByWindowHashAsKeyAndWindowAsSortKey(org.apache.beam.runners.dataflow.internal.IsmFormat$IsmRecordCoder,org.apache.beam.runners.dataflow.BatchViewOverrides$1)|",
      "|java+method:///org/apache/beam/sdk/transforms/View$CreatePCollectionView/of(org.apache.beam.sdk.values.PCollectionView)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsList$ToIsmRecordForGlobalWindowDoFn/BatchViewOverrides$BatchViewAsList$ToIsmRecordForGlobalWindowDoFn()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/setCoder(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsList/coderForListLike(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/windowCoder()|",
      "|java+method:///org/apache/beam/runners/dataflow/CreateDataflowView/of(org.apache.beam.sdk.values.PCollectionView)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/apply(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo/of(org.apache.beam.sdk.transforms.DoFn)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsList$ToIsmRecordForNonGlobalWindowDoFn/BatchViewOverrides$BatchViewAsList$ToIsmRecordForNonGlobalWindowDoFn(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/values/WindowingStrategy/getWindowFn()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/addPCollectionRequiringIndexedFormat(org.apache.beam.sdk.values.PCollection)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$GroupByWindowHashAsKeyAndWindowAsSortKey/BatchViewOverrides$GroupByWindowHashAsKeyAndWindowAsSortKey(org.apache.beam.runners.dataflow.internal.IsmFormat$IsmRecordCoder,org.apache.beam.runners.dataflow.BatchViewOverrides$1)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsList$ToIsmRecordForGlobalWindowDoFn/BatchViewOverrides$BatchViewAsList$ToIsmRecordForGlobalWindowDoFn()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/setCoder(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsList/coderForListLike(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+initializer:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/DataflowPipelineTranslator$initializer|",
    "called": "|java+method:///org/apache/beam/sdk/util/common/ReflectHelpers/findClassLoader()|",
    "v1Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/registerTransformTranslator(java.lang.Class,org.apache.beam.runners.dataflow.TransformTranslator)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$2/DataflowPipelineTranslator$2()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$1/DataflowPipelineTranslator$1()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$8/DataflowPipelineTranslator$8()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/ReadTranslator/ReadTranslator()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$7/DataflowPipelineTranslator$7()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$6/DataflowPipelineTranslator$6()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$5/DataflowPipelineTranslator$5()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$4/DataflowPipelineTranslator$4()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$3/DataflowPipelineTranslator$3()|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/registerModules(java.lang.Iterable)|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/findModules(java.lang.ClassLoader)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/registerTransformTranslator(java.lang.Class,org.apache.beam.runners.dataflow.TransformTranslator)|",
      "|java+method:///org/apache/beam/sdk/util/common/ReflectHelpers/findClassLoader()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$2/DataflowPipelineTranslator$2()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$1/DataflowPipelineTranslator$1()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$8/DataflowPipelineTranslator$8()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/ReadTranslator/ReadTranslator()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$7/DataflowPipelineTranslator$7()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$6/DataflowPipelineTranslator$6()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$5/DataflowPipelineTranslator$5()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$4/DataflowPipelineTranslator$4()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$3/DataflowPipelineTranslator$3()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$8/translateHelper(org.apache.beam.sdk.transforms.windowing.Window$Assign,org.apache.beam.runners.dataflow.TransformTranslator$TranslationContext)|",
    "called": "|java+method:///org/apache/beam/sdk/util/StringUtils/byteArrayToJsonString(byte%5B%5D)|",
    "v1Body": [
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/getInput(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/util/SerializableUtils/serializeToByteArray(java.io.Serializable)|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addInput(java.lang.String,org.apache.beam.sdk.values.PInput)|",
      "|java+method:///java/util/Arrays/equals(byte%5B%5D,byte%5B%5D)|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/addStep(org.apache.beam.sdk.transforms.PTransform,java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addInput(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/beam/sdk/util/StringUtils/jsonStringToByteArray(java.lang.String)|",
      "|java+method:///org/apache/beam/sdk/util/StringUtils/byteArrayToJsonString(byte%5B%5D)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/getOutput(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addOutput(org.apache.beam.sdk.values.PValue)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/getInput(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addInput(java.lang.String,org.apache.beam.sdk.values.PInput)|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/addStep(org.apache.beam.sdk.transforms.PTransform,java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/access$1300(org.apache.beam.sdk.values.WindowingStrategy)|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addInput(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/beam/sdk/util/StringUtils/byteArrayToJsonString(byte%5B%5D)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addOutput(org.apache.beam.sdk.values.PValue)|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/getOutput(org.apache.beam.sdk.transforms.PTransform)|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$StepTranslator/addCollectionToSingletonOutput(org.apache.beam.sdk.values.PValue,org.apache.beam.sdk.values.PValue)|",
    "called": "|java+method:///org/apache/beam/sdk/coders/IterableCoder/of(org.apache.beam.sdk.coders.Coder)|",
    "v1Body": [
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Preconditions/checkState(boolean)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$StepTranslator/addOutput(org.apache.beam.sdk.values.PValue,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/coders/IterableCoder/of(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$Translator/access$700(org.apache.beam.runners.dataflow.DataflowPipelineTranslator$Translator)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Preconditions/checkNotNull(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Preconditions/checkState(boolean)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$StepTranslator/addOutput(org.apache.beam.sdk.values.PValue,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/coders/IterableCoder/of(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$Translator/access$800(org.apache.beam.runners.dataflow.DataflowPipelineTranslator$Translator)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Preconditions/checkNotNull(java.lang.Object)|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsMultimap$ToIsmRecordForMapLikeDoFn/outputMetadataRecordForSize(org.apache.beam.sdk.transforms.DoFn$ProcessContext,org.apache.beam.sdk.values.KV,long)|",
    "called": "|java+method:///org/apache/beam/sdk/values/KV/of(java.lang.Object,java.lang.Object)|",
    "v1Body": [
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/apache/beam/sdk/values/KV/getValue()|",
      "|java+method:///org/apache/beam/runners/dataflow/internal/IsmFormat$IsmRecordCoder/hash(java.util.List)|",
      "|java+method:///org/apache/beam/sdk/values/KV/of(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/beam/sdk/values/KV/getKey()|",
      "|java+method:///org/apache/beam/runners/dataflow/internal/IsmFormat/getMetadataKey()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/transforms/DoFn$ProcessContext/sideOutput(org.apache.beam.sdk.values.TupleTag,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/transforms/DoFn$ProcessContext/output(org.apache.beam.sdk.values.TupleTag,java.lang.Object)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/apache/beam/sdk/values/KV/getValue()|",
      "|java+method:///org/apache/beam/runners/dataflow/internal/IsmFormat$IsmRecordCoder/hash(java.util.List)|",
      "|java+method:///org/apache/beam/sdk/values/KV/of(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/beam/sdk/values/KV/getKey()|",
      "|java+method:///org/apache/beam/runners/dataflow/internal/IsmFormat/getMetadataKey()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsMap/applyForSingletonFallback(org.apache.beam.sdk.values.PCollection)|",
    "called": "|java+method:///org/apache/beam/sdk/coders/SerializableCoder/of(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/windowCoder()|",
      "|java+method:///org/apache/beam/sdk/coders/SerializableCoder/of(java.lang.Class)|",
      "|java+method:///org/apache/beam/sdk/coders/MapCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/collect/ImmutableMap/of()|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$WindowedValueToValue/access$000()|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/getValueCoder()|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getWindowFn()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue$FullWindowedValueCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsMap$ToMapDoFn/BatchViewOverrides$BatchViewAsMap$ToMapDoFn(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/getKeyCoder()|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsSingleton/applyForSingleton(org.apache.beam.runners.dataflow.DataflowRunner,org.apache.beam.sdk.values.PCollection,org.apache.beam.sdk.transforms.DoFn,boolean,java.lang.Object,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$TransformedMapCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$TransformedMap/BatchViewOverrides$TransformedMap(org.apache.beam.runners.dataflow.repackaged.com.google.common.base.Function,java.util.Map)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/windowCoder()|",
      "|java+method:///org/apache/beam/sdk/coders/SerializableCoder/of(java.lang.Class)|",
      "|java+method:///org/apache/beam/sdk/coders/MapCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/collect/ImmutableMap/of()|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$WindowedValueToValue/access$000()|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/getValueCoder()|",
      "|java+method:///org/apache/beam/sdk/values/WindowingStrategy/getWindowFn()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue$FullWindowedValueCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsMap$ToMapDoFn/BatchViewOverrides$BatchViewAsMap$ToMapDoFn(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/getKeyCoder()|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsSingleton/applyForSingleton(org.apache.beam.runners.dataflow.DataflowRunner,org.apache.beam.sdk.values.PCollection,org.apache.beam.sdk.transforms.DoFn,boolean,java.lang.Object,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$TransformedMapCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$TransformedMap/BatchViewOverrides$TransformedMap(org.apache.beam.runners.dataflow.repackaged.com.google.common.base.Function,java.util.Map)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsMultimap$GroupByKeyHashAndSortByKeyAndWindow/expand(org.apache.beam.sdk.values.PCollection)|",
    "called": "|java+method:///org/apache/beam/sdk/coders/KvCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/windowCoder()|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo/of(org.apache.beam.sdk.transforms.DoFn)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/setCoder(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/getValueCoder()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$GroupByKeyAndSortValuesOnly/BatchViewOverrides$GroupByKeyAndSortValuesOnly()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue$FullWindowedValueCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/getKeyCoder()|",
      "|java+method:///org/apache/beam/sdk/coders/VarIntCoder/of()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/apply(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getWindowFn()|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsMultimap$GroupByKeyHashAndSortByKeyAndWindow$GroupByKeyHashAndSortByKeyAndWindowDoFn/BatchViewOverrides$BatchViewAsMultimap$GroupByKeyHashAndSortByKeyAndWindow$GroupByKeyHashAndSortByKeyAndWindowDoFn(org.apache.beam.runners.dataflow.internal.IsmFormat$IsmRecordCoder,org.apache.beam.runners.dataflow.BatchViewOverrides$1)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/windowCoder()|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo/of(org.apache.beam.sdk.transforms.DoFn)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/setCoder(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/getValueCoder()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$GroupByKeyAndSortValuesOnly/BatchViewOverrides$GroupByKeyAndSortValuesOnly()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue$FullWindowedValueCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/getKeyCoder()|",
      "|java+method:///org/apache/beam/sdk/coders/VarIntCoder/of()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/apply(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/values/WindowingStrategy/getWindowFn()|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsMultimap$GroupByKeyHashAndSortByKeyAndWindow$GroupByKeyHashAndSortByKeyAndWindowDoFn/BatchViewOverrides$BatchViewAsMultimap$GroupByKeyHashAndSortByKeyAndWindow$GroupByKeyHashAndSortByKeyAndWindowDoFn(org.apache.beam.runners.dataflow.internal.IsmFormat$IsmRecordCoder,org.apache.beam.runners.dataflow.BatchViewOverrides$1)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner$StreamingPubsubIOReadTranslator/translate(org.apache.beam.runners.dataflow.DataflowRunner$StreamingPubsubIORead,org.apache.beam.runners.dataflow.TransformTranslator$TranslationContext)|",
    "called": "|java+method:///org/apache/beam/sdk/util/StringUtils/byteArrayToJsonString(byte%5B%5D)|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/util/SerializableUtils/serializeToByteArray(java.io.Serializable)|",
      "|java+method:///org/apache/beam/sdk/io/PubsubUnboundedSource/getTopicProvider()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner$StreamingPubsubIORead/getOverriddenTransform()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/addStep(org.apache.beam.sdk.transforms.PTransform,java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/isStreaming()|",
      "|java+method:///org/apache/beam/sdk/util/PubsubClient$SubscriptionPath/getV1Beta1Path()|",
      "|java+method:///org/apache/beam/sdk/options/ValueProvider/isAccessible()|",
      "|java+method:///org/apache/beam/sdk/util/StringUtils/byteArrayToJsonString(byte%5B%5D)|",
      "|java+method:///org/apache/beam/sdk/io/PubsubUnboundedSource/getIdLabel()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addOutput(org.apache.beam.sdk.values.PValue)|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/getOutput(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/io/PubsubUnboundedSource/getWithAttributesParseFn()|",
      "|java+method:///org/apache/beam/sdk/io/PubsubUnboundedSource/getSubscriptionProvider()|",
      "|java+method:///org/apache/beam/sdk/io/PubsubUnboundedSource/getSubscription()|",
      "|java+method:///org/apache/beam/sdk/options/ValueProvider$NestedValueProvider/propertyName()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addInput(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/beam/sdk/io/PubsubUnboundedSource/getTimestampLabel()|",
      "|java+method:///org/apache/beam/sdk/util/PubsubClient$TopicPath/getV1Beta1Path()|",
      "|java+method:///org/apache/beam/sdk/io/PubsubUnboundedSource/getTopic()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/getPipelineOptions()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/util/SerializableUtils/serializeToByteArray(java.io.Serializable)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner$StreamingPubsubIORead/getOverriddenTransform()|",
      "|java+method:///org/apache/beam/sdk/io/gcp/pubsub/PubsubUnboundedSource/getSubscriptionProvider()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/addStep(org.apache.beam.sdk.transforms.PTransform,java.lang.String)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowRunner$IdentityMessageFn/DataflowRunner$IdentityMessageFn(org.apache.beam.runners.dataflow.DataflowRunner$1)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/options/ValueProvider$NestedValueProvider/propertyName()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addInput(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/beam/sdk/options/ValueProvider/isAccessible()|",
      "|java+method:///org/apache/beam/sdk/util/StringUtils/byteArrayToJsonString(byte%5B%5D)|",
      "|java+method:///org/apache/beam/sdk/io/gcp/pubsub/PubsubClient$TopicPath/getV1Beta1Path()|",
      "|java+method:///org/apache/beam/sdk/io/gcp/pubsub/PubsubUnboundedSource/getTopic()|",
      "|java+method:///org/apache/beam/sdk/io/gcp/pubsub/PubsubClient$SubscriptionPath/getV1Beta1Path()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/getPipelineOptions()|",
      "|java+method:///org/apache/beam/sdk/io/gcp/pubsub/PubsubUnboundedSource/getNeedsAttributes()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/isStreaming()|",
      "|java+method:///org/apache/beam/sdk/io/gcp/pubsub/PubsubUnboundedSource/getSubscription()|",
      "|java+method:///org/apache/beam/sdk/io/gcp/pubsub/PubsubUnboundedSource/getTimestampAttribute()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addOutput(org.apache.beam.sdk.values.PValue)|",
      "|java+method:///org/apache/beam/sdk/io/gcp/pubsub/PubsubUnboundedSource/getTopicProvider()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/getOutput(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/io/gcp/pubsub/PubsubUnboundedSource/getIdAttribute()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$StepTranslator/addDisplayData(com.google.api.services.dataflow.model.Step,java.lang.String,org.apache.beam.sdk.transforms.display.HasDisplayData)|",
    "called": "|java+method:///org/apache/beam/sdk/transforms/display/DisplayData/from(org.apache.beam.sdk.transforms.display.HasDisplayData)|",
    "v1Body": [
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/access$200()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$StepTranslator/getProperties()|",
      "|java+method:///org/apache/beam/sdk/util/Structs/addList(java.util.Map,java.lang.String,java.util.List)|",
      "|java+method:///org/apache/beam/sdk/transforms/display/DisplayData/from(org.apache.beam.sdk.transforms.display.HasDisplayData)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/access$300()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$StepTranslator/getProperties()|",
      "|java+method:///org/apache/beam/runners/dataflow/util/Structs/addList(java.util.Map,java.lang.String,java.util.List)|",
      "|java+method:///org/apache/beam/sdk/transforms/display/DisplayData/from(org.apache.beam.sdk.transforms.display.HasDisplayData)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+constructor:///org/apache/beam/runners/dataflow/internal/IsmFormat$IsmRecordCoder/IsmFormat$IsmRecordCoder(int,int,java.util.List,org.apache.beam.sdk.coders.Coder)|",
    "called": "|java+constructor:///org/apache/beam/sdk/coders/CustomCoder/CustomCoder()|",
    "v1Body": [
      "|java+constructor:///org/apache/beam/sdk/coders/StandardCoder/StandardCoder()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/beam/sdk/coders/CustomCoder/CustomCoder()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/internal/CustomSources/serializeToCloudSource(org.apache.beam.sdk.io.Source,org.apache.beam.sdk.options.PipelineOptions)|",
    "called": "|java+method:///org/apache/beam/sdk/util/SerializableUtils/serializeToByteArray(java.io.Serializable)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/beam/sdk/util/CloudObject/forClass(java.lang.Class)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/beam/sdk/util/Structs/addString(java.util.Map,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/google/api/services/dataflow/model/SourceMetadata/setEstimatedSizeBytes(java.lang.Long)|",
      "|java+method:///com/google/api/client/util/Base64/encodeBase64String(byte%5B%5D)|",
      "|java+method:///org/apache/beam/sdk/util/SerializableUtils/serializeToByteArray(java.io.Serializable)|",
      "|java+method:///com/google/api/services/dataflow/model/Source/getSpec()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/beam/sdk/util/Structs/addStringList(java.util.Map,java.lang.String,java.util.List)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+constructor:///com/google/api/services/dataflow/model/Source/Source()|",
      "|java+constructor:///com/google/api/services/dataflow/model/SourceMetadata/SourceMetadata()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/apache/beam/sdk/io/UnboundedSource/generateInitialSplits(int,org.apache.beam.sdk.options.PipelineOptions)|",
      "|java+method:///org/apache/beam/sdk/options/PipelineOptions/as(java.lang.Class)|",
      "|java+method:///com/google/api/services/dataflow/model/Source/setMetadata(com.google.api.services.dataflow.model.SourceMetadata)|",
      "|java+method:///org/apache/beam/runners/dataflow/internal/CustomSources/getDesiredNumUnboundedSourceSplits(org.apache.beam.runners.dataflow.options.DataflowPipelineOptions)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/apache/beam/sdk/io/BoundedSource/getEstimatedSizeBytes(org.apache.beam.sdk.options.PipelineOptions)|",
      "|java+method:///com/google/api/services/dataflow/model/Source/setSpec(java.util.Map)|",
      "|java+method:///com/google/api/services/dataflow/model/SourceMetadata/setInfinite(java.lang.Boolean)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/beam/runners/dataflow/util/CloudObject/forClass(java.lang.Class)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/google/api/services/dataflow/model/SourceMetadata/setEstimatedSizeBytes(java.lang.Long)|",
      "|java+method:///com/google/api/client/util/Base64/encodeBase64String(byte%5B%5D)|",
      "|java+method:///org/apache/beam/sdk/util/SerializableUtils/serializeToByteArray(java.io.Serializable)|",
      "|java+method:///org/apache/beam/runners/dataflow/util/Structs/addStringList(java.util.Map,java.lang.String,java.util.List)|",
      "|java+method:///com/google/api/services/dataflow/model/Source/getSpec()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+constructor:///com/google/api/services/dataflow/model/Source/Source()|",
      "|java+constructor:///com/google/api/services/dataflow/model/SourceMetadata/SourceMetadata()|",
      "|java+method:///org/apache/beam/sdk/options/PipelineOptions/as(java.lang.Class)|",
      "|java+method:///com/google/api/services/dataflow/model/Source/setMetadata(com.google.api.services.dataflow.model.SourceMetadata)|",
      "|java+method:///org/apache/beam/runners/dataflow/internal/CustomSources/getDesiredNumUnboundedSourceSplits(org.apache.beam.runners.dataflow.options.DataflowPipelineOptions)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/util/Structs/addString(java.util.Map,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/io/UnboundedSource/split(int,org.apache.beam.sdk.options.PipelineOptions)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/apache/beam/sdk/io/BoundedSource/getEstimatedSizeBytes(org.apache.beam.sdk.options.PipelineOptions)|",
      "|java+method:///com/google/api/services/dataflow/model/Source/setSpec(java.util.Map)|",
      "|java+method:///com/google/api/services/dataflow/model/SourceMetadata/setInfinite(java.lang.Boolean)|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner$StreamingPubsubIOWriteTranslator/translate(org.apache.beam.runners.dataflow.DataflowRunner$StreamingPubsubIOWrite,org.apache.beam.runners.dataflow.TransformTranslator$TranslationContext)|",
    "called": "|java+method:///org/apache/beam/sdk/util/WindowedValue/getValueOnlyCoder(org.apache.beam.sdk.coders.Coder)|",
    "v1Body": [
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/getInput(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/util/SerializableUtils/serializeToByteArray(java.io.Serializable)|",
      "|java+method:///org/apache/beam/sdk/io/PubsubUnboundedSink/getIdLabel()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addInput(java.lang.String,org.apache.beam.sdk.values.PInput)|",
      "|java+method:///org/apache/beam/sdk/io/PubsubUnboundedSink/getTimestampLabel()|",
      "|java+method:///org/apache/beam/sdk/io/PubsubUnboundedSink/getFormatFn()|",
      "|java+method:///org/apache/beam/sdk/io/PubsubUnboundedSink/getTopicProvider()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/addStep(org.apache.beam.sdk.transforms.PTransform,java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/options/ValueProvider$NestedValueProvider/propertyName()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addInput(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/beam/sdk/coders/VoidCoder/of()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/isStreaming()|",
      "|java+method:///org/apache/beam/sdk/options/ValueProvider/isAccessible()|",
      "|java+method:///org/apache/beam/sdk/util/StringUtils/byteArrayToJsonString(byte%5B%5D)|",
      "|java+method:///org/apache/beam/sdk/io/PubsubUnboundedSink/getTopic()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getValueOnlyCoder(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner$StreamingPubsubIOWrite/getOverriddenTransform()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/getPipelineOptions()|",
      "|java+method:///org/apache/beam/sdk/util/PubsubClient$TopicPath/getV1Beta1Path()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addEncodingInput(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/io/PubsubUnboundedSink/getElementCoder()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/getInput(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/util/SerializableUtils/serializeToByteArray(java.io.Serializable)|",
      "|java+method:///org/apache/beam/sdk/io/gcp/pubsub/PubsubUnboundedSink/getTopicProvider()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/addStep(org.apache.beam.sdk.transforms.PTransform,java.lang.String)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowRunner$IdentityMessageFn/DataflowRunner$IdentityMessageFn(org.apache.beam.runners.dataflow.DataflowRunner$1)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/options/ValueProvider$NestedValueProvider/propertyName()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addInput(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/getPipelineOptions()|",
      "|java+method:///org/apache/beam/sdk/coders/VoidCoder/of()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addEncodingInput(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/io/gcp/pubsub/PubsubUnboundedSink/getTimestampAttribute()|",
      "|java+method:///org/apache/beam/sdk/options/ValueProvider/isAccessible()|",
      "|java+method:///org/apache/beam/sdk/util/StringUtils/byteArrayToJsonString(byte%5B%5D)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner$StreamingPubsubIOWrite/getOverriddenTransform()|",
      "|java+method:///org/apache/beam/sdk/io/gcp/pubsub/PubsubUnboundedSink/getIdAttribute()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addInput(java.lang.String,org.apache.beam.sdk.values.PInput)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/isStreaming()|",
      "|java+method:///org/apache/beam/sdk/io/gcp/pubsub/PubsubUnboundedSink/getTopic()|",
      "|java+method:///org/apache/beam/sdk/io/gcp/pubsub/PubsubClient$TopicPath/getV1Beta1Path()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getValueOnlyCoder(org.apache.beam.sdk.coders.Coder)|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner$1/enterCompositeTransform(org.apache.beam.sdk.runners.TransformHierarchy$Node)|",
    "called": "|java+method:///org/apache/beam/sdk/runners/TransformHierarchy$Node/getInputs()|",
    "v1Body": [
      "|java+method:///java/util/SortedSet/add(java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/values/TaggedPValue/getValue()|",
      "|java+method:///org/apache/beam/sdk/runners/TransformHierarchy$Node/getTransform()|",
      "|java+method:///org/apache/beam/sdk/runners/TransformHierarchy$Node/getFullName()|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/runners/TransformHierarchy$Node/getInputs()|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/getKeyCoder()|",
      "|java+method:///org/apache/beam/sdk/coders/Coder/verifyDeterministic()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/access$500(org.apache.beam.runners.dataflow.DataflowRunner)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/collect/Iterables/getOnlyElement(java.lang.Iterable)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|"
    ],
    "v2Body": [
      "|java+method:///java/util/SortedSet/add(java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/coders/Coder/verifyDeterministic()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/access$400(org.apache.beam.runners.dataflow.DataflowRunner)|",
      "|java+method:///org/apache/beam/sdk/runners/TransformHierarchy$Node/getTransform()|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/runners/TransformHierarchy$Node/getInputs()|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/getKeyCoder()|",
      "|java+method:///org/apache/beam/sdk/runners/TransformHierarchy$Node/getFullName()|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/collect/Iterables/getOnlyElement(java.lang.Iterable)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsIterable/expand(org.apache.beam.sdk.values.PCollection)|",
    "called": "|java+method:///org/apache/beam/sdk/values/PCollectionViews/iterableView(org.apache.beam.sdk.values.PCollection,org.apache.beam.sdk.values.WindowingStrategy,org.apache.beam.sdk.coders.Coder)|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/values/PCollection/getPipeline()|",
      "|java+method:///org/apache/beam/sdk/util/PCollectionViews/iterableView(org.apache.beam.sdk.Pipeline,org.apache.beam.sdk.util.WindowingStrategy,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsList/applyForIterableLike(org.apache.beam.runners.dataflow.DataflowRunner,org.apache.beam.sdk.values.PCollection,org.apache.beam.sdk.values.PCollectionView)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/values/PCollectionViews/iterableView(org.apache.beam.sdk.values.PCollection,org.apache.beam.sdk.values.WindowingStrategy,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsList/applyForIterableLike(org.apache.beam.runners.dataflow.DataflowRunner,org.apache.beam.sdk.values.PCollection,org.apache.beam.sdk.values.PCollectionView)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$Translator/visitValue(org.apache.beam.sdk.values.PValue,org.apache.beam.sdk.runners.TransformHierarchy$Node)|",
    "called": "|java+method:///org/apache/beam/sdk/runners/TransformHierarchy$Node/isCompositeNode()|",
    "v1Body": [
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$Translator/asOutputReference(org.apache.beam.sdk.values.PValue,org.apache.beam.sdk.transforms.AppliedPTransform)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/runners/TransformHierarchy$Node/toAppliedPTransform()|",
      "|java+method:///org/apache/beam/sdk/runners/TransformHierarchy$Node/isCompositeNode()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/access$300()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$Translator/asOutputReference(org.apache.beam.sdk.values.PValue,org.apache.beam.sdk.runners.AppliedPTransform)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/access$400()|",
      "|java+method:///org/apache/beam/sdk/runners/TransformHierarchy$Node/toAppliedPTransform()|",
      "|java+method:///org/apache/beam/sdk/runners/TransformHierarchy$Node/isCompositeNode()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsList/expand(org.apache.beam.sdk.values.PCollection)|",
    "called": "|java+method:///org/apache/beam/sdk/values/PCollectionViews/listView(org.apache.beam.sdk.values.PCollection,org.apache.beam.sdk.values.WindowingStrategy,org.apache.beam.sdk.coders.Coder)|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/values/PCollection/getPipeline()|",
      "|java+method:///org/apache/beam/sdk/util/PCollectionViews/listView(org.apache.beam.sdk.Pipeline,org.apache.beam.sdk.util.WindowingStrategy,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsList/applyForIterableLike(org.apache.beam.runners.dataflow.DataflowRunner,org.apache.beam.sdk.values.PCollection,org.apache.beam.sdk.values.PCollectionView)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/values/PCollectionViews/listView(org.apache.beam.sdk.values.PCollection,org.apache.beam.sdk.values.WindowingStrategy,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsList/applyForIterableLike(org.apache.beam.runners.dataflow.DataflowRunner,org.apache.beam.sdk.values.PCollection,org.apache.beam.sdk.values.PCollectionView)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+constructor:///org/apache/beam/runners/dataflow/internal/IsmFormat$MetadataKeyCoder/IsmFormat$MetadataKeyCoder(org.apache.beam.sdk.coders.Coder)|",
    "called": "|java+constructor:///org/apache/beam/sdk/coders/StructuredCoder/StructuredCoder()|",
    "v1Body": [
      "|java+constructor:///org/apache/beam/sdk/coders/StandardCoder/StandardCoder()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/beam/sdk/coders/StructuredCoder/StructuredCoder()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsSingleton/applyForSingleton(org.apache.beam.runners.dataflow.DataflowRunner,org.apache.beam.sdk.values.PCollection,org.apache.beam.sdk.transforms.DoFn,boolean,java.lang.Object,org.apache.beam.sdk.coders.Coder)|",
    "called": "|java+method:///org/apache/beam/sdk/values/PCollection/apply(org.apache.beam.sdk.transforms.PTransform)|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/windowCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getPipeline()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/apply(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo/of(org.apache.beam.sdk.transforms.DoFn)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/setCoder(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/util/PCollectionViews/singletonView(org.apache.beam.sdk.Pipeline,org.apache.beam.sdk.util.WindowingStrategy,boolean,java.lang.Object,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getWindowFn()|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsSingleton/coderForSingleton(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/addPCollectionRequiringIndexedFormat(org.apache.beam.sdk.values.PCollection)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$GroupByWindowHashAsKeyAndWindowAsSortKey/BatchViewOverrides$GroupByWindowHashAsKeyAndWindowAsSortKey(org.apache.beam.runners.dataflow.internal.IsmFormat$IsmRecordCoder,org.apache.beam.runners.dataflow.BatchViewOverrides$1)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|",
      "|java+method:///org/apache/beam/sdk/transforms/View$CreatePCollectionView/of(org.apache.beam.sdk.values.PCollectionView)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/windowCoder()|",
      "|java+method:///org/apache/beam/runners/dataflow/CreateDataflowView/of(org.apache.beam.sdk.values.PCollectionView)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/apply(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo/of(org.apache.beam.sdk.transforms.DoFn)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/setCoder(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/values/PCollectionViews/singletonView(org.apache.beam.sdk.values.PCollection,org.apache.beam.sdk.values.WindowingStrategy,boolean,java.lang.Object,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/values/WindowingStrategy/getWindowFn()|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsSingleton/coderForSingleton(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/addPCollectionRequiringIndexedFormat(org.apache.beam.sdk.values.PCollection)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$GroupByWindowHashAsKeyAndWindowAsSortKey/BatchViewOverrides$GroupByWindowHashAsKeyAndWindowAsSortKey(org.apache.beam.runners.dataflow.internal.IsmFormat$IsmRecordCoder,org.apache.beam.runners.dataflow.BatchViewOverrides$1)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions$StagingLocationFactory/create(org.apache.beam.sdk.options.PipelineOptions)|",
    "called": "|java+method:///org/apache/beam/sdk/io/FileSystems/matchNewResource(java.lang.String,boolean)|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/options/GcsOptions/getPathValidator()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/beam/sdk/util/PathValidator/validateOutputFilePrefixSupported(java.lang.String)|",
      "|java+method:///org/apache/beam/sdk/options/PipelineOptions/as(java.lang.Class)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/beam/sdk/options/GcsOptions/getGcpTempLocation()|",
      "|java+method:///org/apache/beam/sdk/util/IOChannelUtils/resolve(java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions$StagingLocationFactory/create(org.apache.beam.sdk.options.PipelineOptions)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/extensions/gcp/options/GcsOptions/getGcpTempLocation()|",
      "|java+method:///org/apache/beam/sdk/options/PipelineOptions/as(java.lang.Class)|",
      "|java+method:///org/apache/beam/sdk/io/FileSystems/matchNewResource(java.lang.String,boolean)|",
      "|java+method:///org/apache/beam/sdk/io/fs/ResourceId/toString()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions$StagingLocationFactory/create(org.apache.beam.sdk.options.PipelineOptions)|",
      "|java+method:///org/apache/beam/sdk/io/fs/ResourceId/resolve(java.lang.String,org.apache.beam.sdk.io.fs.ResolveOptions)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/beam/sdk/extensions/gcp/storage/PathValidator/validateOutputFilePrefixSupported(java.lang.String)|",
      "|java+method:///org/apache/beam/sdk/extensions/gcp/options/GcsOptions/getPathValidator()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/StreamingViewOverrides$StreamingCreatePCollectionViewFactory$StreamingCreatePCollectionView/expand(org.apache.beam.sdk.values.PCollection)|",
    "called": "|java+method:///org/apache/beam/sdk/values/PCollection/apply(org.apache.beam.sdk.transforms.PTransform)|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/transforms/Combine$Globally/withoutDefaults()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/apply(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo/of(org.apache.beam.sdk.transforms.DoFn)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/StreamingViewOverrides$Concatenate/StreamingViewOverrides$Concatenate(org.apache.beam.runners.dataflow.StreamingViewOverrides$1)|",
      "|java+method:///org/apache/beam/sdk/transforms/Combine/globally(org.apache.beam.sdk.transforms.CombineFnBase$GlobalCombineFn)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/transforms/View$CreatePCollectionView/of(org.apache.beam.sdk.values.PCollectionView)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner$StreamingPCollectionViewWriterFn/create(org.apache.beam.sdk.values.PCollectionView,org.apache.beam.sdk.coders.Coder)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/runners/dataflow/CreateDataflowView/of(org.apache.beam.sdk.values.PCollectionView)|",
      "|java+method:///org/apache/beam/sdk/transforms/Combine$Globally/withoutDefaults()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/apply(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo/of(org.apache.beam.sdk.transforms.DoFn)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/StreamingViewOverrides$Concatenate/StreamingViewOverrides$Concatenate(org.apache.beam.runners.dataflow.StreamingViewOverrides$1)|",
      "|java+method:///org/apache/beam/sdk/transforms/Combine/globally(org.apache.beam.sdk.transforms.CombineFnBase$GlobalCombineFn)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner$StreamingPCollectionViewWriterFn/create(org.apache.beam.sdk.values.PCollectionView,org.apache.beam.sdk.coders.Coder)|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner$StreamingUnboundedRead/expand(org.apache.beam.sdk.values.PBegin)|",
    "called": "|java+method:///org/apache/beam/sdk/values/PCollection/apply(org.apache.beam.sdk.transforms.PTransform)|",
    "v1Body": [
      "|java+constructor:///org/apache/beam/sdk/util/ValueWithRecordId$StripIdsDoFn/ValueWithRecordId$StripIdsDoFn()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/apply(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/io/UnboundedSource/requiresDeduping()|",
      "|java+method:///org/apache/beam/sdk/io/UnboundedSource/validate()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowRunner$Deduplicate/DataflowRunner$Deduplicate(org.apache.beam.runners.dataflow.DataflowRunner$1)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/apply(java.lang.String,org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/Pipeline/applyTransform(org.apache.beam.sdk.values.PInput,org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo/of(org.apache.beam.sdk.transforms.DoFn)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowRunner$StreamingUnboundedRead$ReadWithIds/DataflowRunner$StreamingUnboundedRead$ReadWithIds(org.apache.beam.sdk.io.UnboundedSource,org.apache.beam.runners.dataflow.DataflowRunner$1)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/beam/sdk/values/ValueWithRecordId$StripIdsDoFn/ValueWithRecordId$StripIdsDoFn()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/apply(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/io/UnboundedSource/requiresDeduping()|",
      "|java+method:///org/apache/beam/sdk/io/UnboundedSource/validate()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowRunner$Deduplicate/DataflowRunner$Deduplicate(org.apache.beam.runners.dataflow.DataflowRunner$1)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/apply(java.lang.String,org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/Pipeline/applyTransform(org.apache.beam.sdk.values.PInput,org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo/of(org.apache.beam.sdk.transforms.DoFn)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowRunner$StreamingUnboundedRead$ReadWithIds/DataflowRunner$StreamingUnboundedRead$ReadWithIds(org.apache.beam.sdk.io.UnboundedSource,org.apache.beam.runners.dataflow.DataflowRunner$1)|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/AssignWindows/expand(org.apache.beam.sdk.values.PCollection)|",
    "called": "|java+method:///org/apache/beam/sdk/transforms/windowing/Window/getOutputStrategyInternal(org.apache.beam.sdk.values.WindowingStrategy)|",
    "v1Body": [
      "|java+constructor:///org/apache/beam/runners/dataflow/AssignWindows$1/AssignWindows$1(org.apache.beam.runners.dataflow.AssignWindows)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getPipeline()|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo/of(org.apache.beam.sdk.transforms.DoFn)|",
      "|java+method:///org/apache/beam/sdk/transforms/windowing/Window$Bound/getWindowFn()|",
      "|java+method:///org/apache/beam/sdk/transforms/windowing/Window$Bound/getOutputStrategyInternal(org.apache.beam.sdk.util.WindowingStrategy)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/setWindowingStrategyInternal(org.apache.beam.sdk.util.WindowingStrategy)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/createPrimitiveOutputInternal(org.apache.beam.sdk.Pipeline,org.apache.beam.sdk.util.WindowingStrategy,org.apache.beam.sdk.values.PCollection$IsBounded)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/isBounded()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/apply(java.lang.String,org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/beam/runners/dataflow/AssignWindows$1/AssignWindows$1(org.apache.beam.runners.dataflow.AssignWindows)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getPipeline()|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo/of(org.apache.beam.sdk.transforms.DoFn)|",
      "|java+method:///org/apache/beam/sdk/transforms/windowing/Window/getWindowFn()|",
      "|java+method:///org/apache/beam/sdk/transforms/windowing/Window/getOutputStrategyInternal(org.apache.beam.sdk.values.WindowingStrategy)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/setWindowingStrategyInternal(org.apache.beam.sdk.values.WindowingStrategy)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/createPrimitiveOutputInternal(org.apache.beam.sdk.Pipeline,org.apache.beam.sdk.values.WindowingStrategy,org.apache.beam.sdk.values.PCollection$IsBounded)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/isBounded()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/apply(java.lang.String,org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner$StreamingPubsubIORead/expand(org.apache.beam.sdk.values.PBegin)|",
    "called": "|java+method:///org/apache/beam/sdk/values/PCollection/setCoder(org.apache.beam.sdk.coders.Coder)|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/globalDefault()|",
      "|java+method:///org/apache/beam/sdk/io/PubsubUnboundedSource/getElementCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/createPrimitiveOutputInternal(org.apache.beam.sdk.Pipeline,org.apache.beam.sdk.util.WindowingStrategy,org.apache.beam.sdk.values.PCollection$IsBounded)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/setCoder(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/values/PBegin/getPipeline()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/values/WindowingStrategy/globalDefault()|",
      "|java+constructor:///org/apache/beam/sdk/io/gcp/pubsub/PubsubMessageWithAttributesCoder/PubsubMessageWithAttributesCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/createPrimitiveOutputInternal(org.apache.beam.sdk.Pipeline,org.apache.beam.sdk.values.WindowingStrategy,org.apache.beam.sdk.values.PCollection$IsBounded)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/setCoder(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/values/PBegin/getPipeline()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner$StreamingUnboundedRead$ReadWithIds/expand(org.apache.beam.sdk.values.PInput)|",
    "called": "|java+method:///org/apache/beam/sdk/values/PCollection/createPrimitiveOutputInternal(org.apache.beam.sdk.Pipeline,org.apache.beam.sdk.values.WindowingStrategy,org.apache.beam.sdk.values.PCollection$IsBounded)|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/globalDefault()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner$StreamingUnboundedRead$ReadWithIds/expand(org.apache.beam.sdk.values.PInput)|",
      "|java+method:///org/apache/beam/sdk/values/PInput/getPipeline()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/createPrimitiveOutputInternal(org.apache.beam.sdk.Pipeline,org.apache.beam.sdk.util.WindowingStrategy,org.apache.beam.sdk.values.PCollection$IsBounded)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/values/WindowingStrategy/globalDefault()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner$StreamingUnboundedRead$ReadWithIds/expand(org.apache.beam.sdk.values.PInput)|",
      "|java+method:///org/apache/beam/sdk/values/PInput/getPipeline()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/createPrimitiveOutputInternal(org.apache.beam.sdk.Pipeline,org.apache.beam.sdk.values.WindowingStrategy,org.apache.beam.sdk.values.PCollection$IsBounded)|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+constructor:///org/apache/beam/runners/dataflow/DataflowRunner/DataflowRunner(org.apache.beam.runners.dataflow.options.DataflowPipelineOptions)|",
    "called": "|java+constructor:///org/apache/beam/sdk/PipelineRunner/PipelineRunner()|",
    "v1Body": [
      "|java+method:///org/apache/beam/runners/dataflow/BatchStatefulParDoOverrides/singleOutputOverrideFactory()|",
      "|java+method:///org/apache/beam/runners/core/construction/PTransformMatchers/parDoWithFnType(java.lang.Class)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/fromOptions(org.apache.beam.runners.dataflow.options.DataflowPipelineOptions)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/beam/sdk/runners/PipelineRunner/PipelineRunner()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/collect/ImmutableMap$Builder/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/core/construction/UnsupportedOverrideFactory/withMessage(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/isStreaming()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/collect/ImmutableSet/of(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/collect/ImmutableSet/iterator()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///org/apache/beam/runners/core/construction/EmptyFlattenAsCreateFactory/instance()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/collect/ImmutableMap/builder()|",
      "|java+method:///org/apache/beam/runners/core/construction/PTransformMatchers/classEqualTo(java.lang.Class)|",
      "|java+method:///org/apache/beam/runners/core/construction/PTransformMatchers/emptyFlatten()|",
      "|java+method:///org/apache/beam/runners/core/construction/PTransformMatchers/stateOrTimerParDoMulti()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowRunner$PrimitiveCombineGroupedValuesOverrideFactory/DataflowRunner$PrimitiveCombineGroupedValuesOverrideFactory(org.apache.beam.runners.dataflow.DataflowRunner$1)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/collect/ImmutableMap$Builder/build()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/getUnsupportedMessage(java.lang.Class,boolean)|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchStatefulParDoOverrides/multiOutputOverrideFactory()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/StreamingViewOverrides$StreamingCreatePCollectionViewFactory/StreamingViewOverrides$StreamingCreatePCollectionViewFactory()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowClient/create(org.apache.beam.runners.dataflow.options.DataflowPipelineOptions)|",
      "|java+method:///org/apache/beam/runners/core/construction/PTransformMatchers/stateOrTimerParDoSingle()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowRunner$StreamingPubsubIOWriteOverrideFactory/DataflowRunner$StreamingPubsubIOWriteOverrideFactory(org.apache.beam.runners.dataflow.DataflowRunner,org.apache.beam.runners.dataflow.DataflowRunner,org.apache.beam.runners.dataflow.DataflowRunner$1)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowRunner$BatchWriteFactory/DataflowRunner$BatchWriteFactory(org.apache.beam.runners.dataflow.DataflowRunner,org.apache.beam.runners.dataflow.DataflowRunner,org.apache.beam.runners.dataflow.DataflowRunner$1)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowRunner$ReflectiveRootOverrideFactory/DataflowRunner$ReflectiveRootOverrideFactory(java.lang.Class,org.apache.beam.runners.dataflow.DataflowRunner,org.apache.beam.runners.dataflow.DataflowRunner$1)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowRunner$ReflectiveOneToOneOverrideFactory/DataflowRunner$ReflectiveOneToOneOverrideFactory(java.lang.Class,org.apache.beam.runners.dataflow.DataflowRunner,org.apache.beam.runners.dataflow.DataflowRunner$1)|",
      "|java+method:///java/util/List/contains(java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getExperiments()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/fromOptions(org.apache.beam.runners.dataflow.options.DataflowPipelineOptions)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowClient/create(org.apache.beam.runners.dataflow.options.DataflowPipelineOptions)|",
      "|java+constructor:///org/apache/beam/sdk/PipelineRunner/PipelineRunner()|",
      "|java+constructor:///java/util/HashSet/HashSet()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner$Deduplicate/expand(org.apache.beam.sdk.values.PCollection)|",
    "called": "|java+method:///org/apache/beam/sdk/values/PCollection/apply(org.apache.beam.sdk.transforms.PTransform)|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/values/PCollection/apply(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/transforms/WithKeys/of(org.apache.beam.sdk.transforms.SerializableFunction)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/apply(java.lang.String,org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo/of(org.apache.beam.sdk.transforms.DoFn)|",
      "|java+method:///org/apache/beam/sdk/util/Reshuffle/of()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowRunner$Deduplicate$2/DataflowRunner$Deduplicate$2(org.apache.beam.runners.dataflow.DataflowRunner$Deduplicate)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowRunner$Deduplicate$1/DataflowRunner$Deduplicate$1(org.apache.beam.runners.dataflow.DataflowRunner$Deduplicate)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/transforms/Reshuffle/of()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/apply(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/transforms/WithKeys/of(org.apache.beam.sdk.transforms.SerializableFunction)|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo/of(org.apache.beam.sdk.transforms.DoFn)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/apply(java.lang.String,org.apache.beam.sdk.transforms.PTransform)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowRunner$Deduplicate$2/DataflowRunner$Deduplicate$2(org.apache.beam.runners.dataflow.DataflowRunner$Deduplicate)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowRunner$Deduplicate$1/DataflowRunner$Deduplicate$1(org.apache.beam.runners.dataflow.DataflowRunner$Deduplicate)|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineJob/getState()|",
    "called": "|java+method:///org/apache/beam/sdk/util/FluentBackoff/backoff()|",
    "v1Body": [
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineJob/getStateWithRetries(com.google.api.client.util.BackOff,com.google.api.client.util.Sleeper)|",
      "|java+method:///org/apache/beam/sdk/util/FluentBackoff/backoff()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/util/BackOffAdapter/toGcpBackOff(org.apache.beam.sdk.util.BackOff)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineJob/getStateWithRetries(com.google.api.client.util.BackOff,com.google.api.client.util.Sleeper)|",
      "|java+method:///org/apache/beam/sdk/util/FluentBackoff/backoff()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$Translator/translate(java.util.List)|",
    "called": "|java+method:///org/apache/beam/sdk/Pipeline/traverseTopologically(org.apache.beam.sdk.Pipeline$PipelineVisitor)|",
    "v1Body": [
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setMachineType(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getNumWorkers()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(byte%5B%5D,java.lang.Class)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setDiskType(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineWorkerPoolOptions$AutoscalingAlgorithmType/getAlgorithm()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getWorkerDiskType()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getAutoscalingAlgorithm()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getDiskSizeGb()|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setNetwork(java.lang.String)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setIpConfiguration(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/isStreaming()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/google/api/services/dataflow/model/Environment/setWorkerPools(java.util.List)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setPackages(java.util.List)|",
      "|java+method:///com/google/api/services/dataflow/model/AutoscalingSettings/setAlgorithm(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getSubnetwork()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getWorkerMachineType()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/access$200()|",
      "|java+method:///java/lang/String/toLowerCase()|",
      "|java+method:///com/google/api/services/dataflow/model/Job/setName(java.lang.String)|",
      "|java+constructor:///com/google/api/services/dataflow/model/WorkerPool/WorkerPool()|",
      "|java+method:///com/google/api/services/dataflow/model/Disk/setDiskType(java.lang.String)|",
      "|java+constructor:///com/google/api/services/dataflow/model/Disk/Disk()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getServiceAccount()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getJobName()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/access$100(org.apache.beam.runners.dataflow.DataflowPipelineTranslator)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setAutoscalingSettings(com.google.api.services.dataflow.model.AutoscalingSettings)|",
      "|java+constructor:///com/google/api/services/dataflow/model/Environment/Environment()|",
      "|java+method:///org/apache/beam/sdk/Pipeline/traverseTopologically(org.apache.beam.sdk.Pipeline$PipelineVisitor)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getUsePublicIps()|",
      "|java+method:///com/google/api/services/dataflow/model/Environment/setSdkPipelineOptions(java.util.Map)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getNetwork()|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setDiskSizeGb(java.lang.Integer)|",
      "|java+method:///com/google/api/services/dataflow/model/AutoscalingSettings/setMaxNumWorkers(java.lang.Integer)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setDataDisks(java.util.List)|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getMaxNumWorkers()|",
      "|java+method:///com/google/api/services/dataflow/model/Job/setType(java.lang.String)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/contains(java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getExperiments()|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setZone(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setSubnetwork(java.lang.String)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setNumWorkers(java.lang.Integer)|",
      "|java+method:///com/google/api/services/dataflow/model/Job/setEnvironment(com.google.api.services.dataflow.model.Environment)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsBytes(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///com/google/api/services/dataflow/model/Environment/setServiceAccountEmail(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getZone()|",
      "|java+constructor:///com/google/api/services/dataflow/model/AutoscalingSettings/AutoscalingSettings()|"
    ],
    "v2Body": [
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setMachineType(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getNumWorkers()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(byte%5B%5D,java.lang.Class)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setDiskType(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineWorkerPoolOptions$AutoscalingAlgorithmType/getAlgorithm()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getWorkerDiskType()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getAutoscalingAlgorithm()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getDiskSizeGb()|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setNetwork(java.lang.String)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setIpConfiguration(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/hasExperiment(org.apache.beam.runners.dataflow.options.DataflowPipelineDebugOptions,java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/isStreaming()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/google/api/services/dataflow/model/Environment/setWorkerPools(java.util.List)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setPackages(java.util.List)|",
      "|java+method:///com/google/api/services/dataflow/model/AutoscalingSettings/setAlgorithm(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getSubnetwork()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getWorkerMachineType()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/access$200()|",
      "|java+method:///java/lang/String/toLowerCase()|",
      "|java+method:///com/google/api/services/dataflow/model/Job/setName(java.lang.String)|",
      "|java+constructor:///com/google/api/services/dataflow/model/WorkerPool/WorkerPool()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/access$300()|",
      "|java+method:///com/google/api/services/dataflow/model/Disk/setDiskType(java.lang.String)|",
      "|java+constructor:///com/google/api/services/dataflow/model/Disk/Disk()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getServiceAccount()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getJobName()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/access$100(org.apache.beam.runners.dataflow.DataflowPipelineTranslator)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setAutoscalingSettings(com.google.api.services.dataflow.model.AutoscalingSettings)|",
      "|java+constructor:///com/google/api/services/dataflow/model/Environment/Environment()|",
      "|java+method:///org/apache/beam/sdk/Pipeline/traverseTopologically(org.apache.beam.sdk.Pipeline$PipelineVisitor)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getUsePublicIps()|",
      "|java+method:///com/google/api/services/dataflow/model/Environment/setSdkPipelineOptions(java.util.Map)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getNetwork()|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setDiskSizeGb(java.lang.Integer)|",
      "|java+method:///com/google/api/services/dataflow/model/AutoscalingSettings/setMaxNumWorkers(java.lang.Integer)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setDataDisks(java.util.List)|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getMaxNumWorkers()|",
      "|java+method:///com/google/api/services/dataflow/model/Job/setType(java.lang.String)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setZone(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setSubnetwork(java.lang.String)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setNumWorkers(java.lang.Integer)|",
      "|java+method:///com/google/api/services/dataflow/model/Job/setEnvironment(com.google.api.services.dataflow.model.Environment)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsBytes(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///com/google/api/services/dataflow/model/Environment/setServiceAccountEmail(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getZone()|",
      "|java+constructor:///com/google/api/services/dataflow/model/AutoscalingSettings/AutoscalingSettings()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner$StreamingUnboundedRead$ReadWithIds/getDefaultOutputCoder()|",
    "called": "|java+method:///org/apache/beam/sdk/values/ValueWithRecordId$ValueWithRecordIdCoder/of(org.apache.beam.sdk.coders.Coder)|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/util/ValueWithRecordId$ValueWithRecordIdCoder/of(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/io/UnboundedSource/getDefaultOutputCoder()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/values/ValueWithRecordId$ValueWithRecordIdCoder/of(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/io/UnboundedSource/getDefaultOutputCoder()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsMultimap/applyForSingletonFallback(org.apache.beam.sdk.values.PCollection)|",
    "called": "|java+method:///org/apache/beam/sdk/coders/SerializableCoder/of(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/windowCoder()|",
      "|java+method:///org/apache/beam/sdk/coders/SerializableCoder/of(java.lang.Class)|",
      "|java+method:///org/apache/beam/sdk/coders/MapCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsMultimap$ToMultimapDoFn/BatchViewOverrides$BatchViewAsMultimap$ToMultimapDoFn(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/collect/ImmutableMap/of()|",
      "|java+method:///org/apache/beam/sdk/coders/IterableCoder/of(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getWindowFn()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue$FullWindowedValueCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/getKeyCoder()|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$IterableWithWindowedValuesToIterable/access$300()|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/getValueCoder()|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsSingleton/applyForSingleton(org.apache.beam.runners.dataflow.DataflowRunner,org.apache.beam.sdk.values.PCollection,org.apache.beam.sdk.transforms.DoFn,boolean,java.lang.Object,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$TransformedMapCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$TransformedMap/BatchViewOverrides$TransformedMap(org.apache.beam.runners.dataflow.repackaged.com.google.common.base.Function,java.util.Map)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/windowCoder()|",
      "|java+method:///org/apache/beam/sdk/coders/SerializableCoder/of(java.lang.Class)|",
      "|java+method:///org/apache/beam/sdk/coders/MapCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsMultimap$ToMultimapDoFn/BatchViewOverrides$BatchViewAsMultimap$ToMultimapDoFn(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/collect/ImmutableMap/of()|",
      "|java+method:///org/apache/beam/sdk/coders/IterableCoder/of(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/values/WindowingStrategy/getWindowFn()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue$FullWindowedValueCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/getKeyCoder()|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$IterableWithWindowedValuesToIterable/access$300()|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/getValueCoder()|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsSingleton/applyForSingleton(org.apache.beam.runners.dataflow.DataflowRunner,org.apache.beam.sdk.values.PCollection,org.apache.beam.sdk.transforms.DoFn,boolean,java.lang.Object,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$TransformedMapCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$TransformedMap/BatchViewOverrides$TransformedMap(org.apache.beam.runners.dataflow.repackaged.com.google.common.base.Function,java.util.Map)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$TransformedMapCoder/BatchViewOverrides$TransformedMapCoder(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
    "called": "|java+constructor:///org/apache/beam/sdk/coders/StructuredCoder/StructuredCoder()|",
    "v1Body": [
      "|java+constructor:///org/apache/beam/sdk/coders/StandardCoder/StandardCoder()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/beam/sdk/coders/StructuredCoder/StructuredCoder()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsMultimap$ToIsmRecordForMapLikeDoFn/outputMetadataRecordForEntrySet(org.apache.beam.sdk.transforms.DoFn$ProcessContext,org.apache.beam.sdk.values.KV)|",
    "called": "|java+method:///org/apache/beam/sdk/values/KV/of(java.lang.Object,java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/values/KV/getValue()|",
      "|java+method:///org/apache/beam/runners/dataflow/internal/IsmFormat$IsmRecordCoder/hash(java.util.List)|",
      "|java+method:///org/apache/beam/sdk/values/KV/of(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/beam/sdk/values/KV/getKey()|",
      "|java+method:///org/apache/beam/runners/dataflow/internal/IsmFormat/getMetadataKey()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/transforms/DoFn$ProcessContext/sideOutput(org.apache.beam.sdk.values.TupleTag,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/transforms/DoFn$ProcessContext/output(org.apache.beam.sdk.values.TupleTag,java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/values/KV/getValue()|",
      "|java+method:///org/apache/beam/runners/dataflow/internal/IsmFormat$IsmRecordCoder/hash(java.util.List)|",
      "|java+method:///org/apache/beam/sdk/values/KV/of(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/beam/sdk/values/KV/getKey()|",
      "|java+method:///org/apache/beam/runners/dataflow/internal/IsmFormat/getMetadataKey()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/BatchStatefulParDoOverrides$GbkBeforeStatefulParDo/expand(org.apache.beam.sdk.values.PCollection)|",
    "called": "|java+method:///org/apache/beam/sdk/coders/KvCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/windowCoder()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getFullCoder(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///java/lang/Class/getSimpleName()|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo/of(org.apache.beam.sdk.transforms.DoFn)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/setCoder(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Preconditions/checkState(boolean,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/setWindowingStrategyInternal(org.apache.beam.sdk.util.WindowingStrategy)|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/getKeyCoder()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$GroupByKeyAndSortValuesOnly/BatchViewOverrides$GroupByKeyAndSortValuesOnly()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchStatefulParDoOverrides$ReifyWindowedValueFn/BatchStatefulParDoOverrides$ReifyWindowedValueFn()|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getWindowFn()|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/apply(java.lang.String,org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/coders/InstantCoder/of()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/windowCoder()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getFullCoder(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///java/lang/Class/getSimpleName()|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo/of(org.apache.beam.sdk.transforms.DoFn)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/setCoder(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Preconditions/checkState(boolean,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/setWindowingStrategyInternal(org.apache.beam.sdk.values.WindowingStrategy)|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/getKeyCoder()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$GroupByKeyAndSortValuesOnly/BatchViewOverrides$GroupByKeyAndSortValuesOnly()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchStatefulParDoOverrides$ReifyWindowedValueFn/BatchStatefulParDoOverrides$ReifyWindowedValueFn()|",
      "|java+method:///org/apache/beam/sdk/values/WindowingStrategy/getWindowFn()|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/apply(java.lang.String,org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/coders/InstantCoder/of()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$2/translateHelper(org.apache.beam.runners.dataflow.DataflowRunner$CombineGroupedValues,org.apache.beam.runners.dataflow.TransformTranslator$TranslationContext)|",
    "called": "|java+method:///org/apache/beam/sdk/transforms/Combine$GroupedValues/getAppliedFn(org.apache.beam.sdk.coders.CoderRegistry,org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.values.WindowingStrategy)|",
    "v1Body": [
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/getInput(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/util/SerializableUtils/serializeToByteArray(java.io.Serializable)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getPipeline()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner$CombineGroupedValues/getOriginalCombine()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/access$1100(org.apache.beam.runners.dataflow.TransformTranslator$StepTranslationContext,org.apache.beam.sdk.values.PCollection,java.util.List,org.apache.beam.runners.dataflow.TransformTranslator$TranslationContext)|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/addStep(org.apache.beam.sdk.transforms.PTransform,java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addInput(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/beam/sdk/transforms/Combine$GroupedValues/getSideInputs()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addEncodingInput(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/transforms/Combine$GroupedValues/getAppliedFn(org.apache.beam.sdk.coders.CoderRegistry,org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.util.WindowingStrategy)|",
      "|java+method:///org/apache/beam/sdk/Pipeline/getCoderRegistry()|",
      "|java+method:///org/apache/beam/sdk/util/StringUtils/byteArrayToJsonString(byte%5B%5D)|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addOutput(org.apache.beam.sdk.values.PValue)|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/getOutput(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/util/AppliedCombineFn/getAccumulatorCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/getInput(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/util/SerializableUtils/serializeToByteArray(java.io.Serializable)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getPipeline()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner$CombineGroupedValues/getOriginalCombine()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/access$1200(org.apache.beam.runners.dataflow.TransformTranslator$StepTranslationContext,org.apache.beam.sdk.values.PCollection,java.util.List,org.apache.beam.runners.dataflow.TransformTranslator$TranslationContext)|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/addStep(org.apache.beam.sdk.transforms.PTransform,java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addInput(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/beam/sdk/transforms/Combine$GroupedValues/getSideInputs()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addEncodingInput(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/transforms/Combine$GroupedValues/getAppliedFn(org.apache.beam.sdk.coders.CoderRegistry,org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.values.WindowingStrategy)|",
      "|java+method:///org/apache/beam/sdk/Pipeline/getCoderRegistry()|",
      "|java+method:///org/apache/beam/sdk/util/StringUtils/byteArrayToJsonString(byte%5B%5D)|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addOutput(org.apache.beam.sdk.values.PValue)|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/getOutput(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/util/AppliedCombineFn/getAccumulatorCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/replaceTransforms(org.apache.beam.sdk.Pipeline)|",
    "called": "|java+method:///org/apache/beam/sdk/Pipeline/replaceAll(java.util.List)|",
    "v1Body": [
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/collect/ImmutableMap/entrySet()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/apache/beam/sdk/Pipeline/replace(org.apache.beam.sdk.runners.PTransformMatcher,org.apache.beam.sdk.runners.PTransformOverrideFactory)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/collect/ImmutableSet/iterator()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/containsUnboundedPCollection(org.apache.beam.sdk.Pipeline)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/getOverrides(boolean)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/org/apache/beam/runners/core/construction/UnconsumedReads/ensureAllReadsConsumed(org.apache.beam.sdk.Pipeline)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/isStreaming()|",
      "|java+method:///org/apache/beam/sdk/Pipeline/replaceAll(java.util.List)|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/fromOptions(org.apache.beam.sdk.options.PipelineOptions)|",
    "called": "|java+method:///org/apache/beam/sdk/options/PipelineOptionsValidator/validate(java.lang.Class,org.apache.beam.sdk.options.PipelineOptions)|",
    "v1Body": [
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getGcpTempLocation()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/detectClassPathResourcesToStage(java.lang.ClassLoader)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/beam/sdk/options/PipelineOptionsValidator/validate(java.lang.Class,org.apache.beam.sdk.options.PipelineOptions)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getGcsUploadBufferSizeBytes()|",
      "|java+method:///java/lang/String/toLowerCase()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getPathValidator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/isStreaming()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Joiner/on(char)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/as(java.lang.Class)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowRunner/DataflowRunner(org.apache.beam.runners.dataflow.options.DataflowPipelineOptions)|",
      "|java+method:///java/lang/String/matches(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/setGcsUploadBufferSizeBytes(java.lang.Integer)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getJobName()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/setFilesToStage(java.util.List)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/util/PathValidator/validateOutputFilePrefixSupported(java.lang.String)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getAppName()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Joiner/join(java.lang.Iterable)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineDebugOptions/getNumberOfWorkerHarnessThreads()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/util/ArrayList/add(java.lang.Object)|",
      "|java+method:///java/util/ArrayList/size()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getStagingLocation()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getSaveProfilesToGcs()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/beam/sdk/util/IOChannelUtils/registerIOFactoriesAllowOverride(org.apache.beam.sdk.options.PipelineOptions)|",
      "|java+method:///java/lang/Class/getClassLoader()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/setJobName(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getProject()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getFilesToStage()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getGcpTempLocation()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/detectClassPathResourcesToStage(java.lang.ClassLoader)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/beam/sdk/options/PipelineOptionsValidator/validate(java.lang.Class,org.apache.beam.sdk.options.PipelineOptions)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getGcsUploadBufferSizeBytes()|",
      "|java+method:///java/lang/String/toLowerCase()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getPathValidator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/isStreaming()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Joiner/on(char)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/as(java.lang.Class)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowRunner/DataflowRunner(org.apache.beam.runners.dataflow.options.DataflowPipelineOptions)|",
      "|java+method:///java/lang/String/matches(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/setGcsUploadBufferSizeBytes(java.lang.Integer)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getJobName()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/setFilesToStage(java.util.List)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getAppName()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Joiner/join(java.lang.Iterable)|",
      "|java+method:///org/apache/beam/sdk/extensions/gcp/storage/PathValidator/validateOutputFilePrefixSupported(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineDebugOptions/getNumberOfWorkerHarnessThreads()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/util/ArrayList/add(java.lang.Object)|",
      "|java+method:///java/util/ArrayList/size()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getStagingLocation()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getSaveProfilesToGcs()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/Class/getClassLoader()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/setJobName(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getProject()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getFilesToStage()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/run(org.apache.beam.sdk.Pipeline)|",
    "called": "|java+method:///org/apache/beam/sdk/io/FileSystems/matchNewResource(java.lang.String,boolean)|",
    "v1Body": [
      "|java+method:///org/joda/time/format/DateTimeFormat/forPattern(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunnerInfo/getEnvironmentMajorVersion()|",
      "|java+method:///com/google/api/services/dataflow/model/Environment/setUserAgent(java.util.Map)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$JobSpecification/getJob()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/util/DataflowTemplateJob/DataflowTemplateJob()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/google/api/services/dataflow/model/Job/getName()|",
      "|java+method:///org/joda/time/format/DateTimeFormatter/withZone(org.joda.time.DateTimeZone)|",
      "|java+method:///com/google/api/services/dataflow/model/Job/getClientRequestId()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getGcpTempLocation()|",
      "|java+method:///com/google/api/services/dataflow/model/Job/setReplaceJobId(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/run(org.apache.beam.sdk.Pipeline)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getTempDatasetId()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getTemplateLocation()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/google/api/services/dataflow/model/Job/toString()|",
      "|java+method:///org/apache/beam/sdk/util/ReleaseInfo/getReleaseInfo()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getDataflowJobFile()|",
      "|java+method:///org/apache/beam/runners/dataflow/util/Stager/stageFiles()|",
      "|java+method:///com/google/api/services/dataflow/model/Environment/getWorkerPools()|",
      "|java+method:///com/google/api/client/googleapis/json/GoogleJsonError/getMessage()|",
      "|java+method:///org/apache/beam/sdk/util/PathValidator/verifyPath(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/MoreObjects/firstNonNull(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/util/MonitoringUtil/getGcloudCancelCommand(org.apache.beam.runners.dataflow.options.DataflowPipelineOptions,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineJob/DataflowPipelineJob(java.lang.String,org.apache.beam.runners.dataflow.options.DataflowPipelineOptions,org.apache.beam.runners.dataflow.DataflowAggregatorTransforms)|",
      "|java+method:///org/apache/beam/sdk/util/ReleaseInfo/getVersion()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Preconditions/checkState(boolean,java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getStager()|",
      "|java+method:///org/apache/beam/runners/dataflow/util/MonitoringUtil/getJobMonitoringPageURL(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/logWarningIfPCollectionViewHasNonDeterministicKeyCoder(org.apache.beam.sdk.Pipeline)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/translate(org.apache.beam.sdk.Pipeline,org.apache.beam.runners.dataflow.DataflowRunner,java.util.List)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineWorkerPoolOptions/getWorkerHarnessContainerImage()|",
      "|java+method:///java/io/PrintWriter/close()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunnerHooks/modifyEnvironmentBeforeSubmission(com.google.api.services.dataflow.model.Environment)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getTransformNameMapping()|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setWorkerHarnessContainerImage(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getJobName()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/isUpdate()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Utf8/encodedLength(java.lang.CharSequence)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///java/util/Random/nextInt(int)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/google/api/services/dataflow/model/Job/setClientRequestId(java.lang.String)|",
      "|java+method:///org/joda/time/DateTimeUtils/currentTimeMillis()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getPathValidator()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/api/services/dataflow/model/Job/getId()|",
      "|java+method:///java/nio/channels/Channels/newOutputStream(java.nio.channels.WritableByteChannel)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunnerInfo/getDataflowRunnerInfo()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/getJobIdFromName(java.lang.String)|",
      "|java+method:///org/apache/beam/sdk/Pipeline/getAggregatorSteps()|",
      "|java+method:///com/google/api/services/dataflow/model/Job/setTransformNameMapping(java.util.Map)|",
      "|java+constructor:///java/util/Random/Random()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/replaceTransforms(org.apache.beam.sdk.Pipeline)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/maybeRegisterDebuggee(org.apache.beam.runners.dataflow.options.DataflowPipelineOptions,java.lang.String)|",
      "|java+method:///com/google/api/services/dataflow/model/Environment/setDataset(java.lang.String)|",
      "|java+method:///com/google/api/services/dataflow/model/Environment/setTempStoragePrefix(java.lang.String)|",
      "|java+method:///org/joda/time/format/DateTimeFormatter/print(long)|",
      "|java+method:///com/google/api/services/dataflow/model/Environment/setVersion(java.util.Map)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowJobAlreadyExistsException/DataflowJobAlreadyExistsException(org.apache.beam.runners.dataflow.DataflowPipelineJob,java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/google/api/services/dataflow/model/Job/getEnvironment()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/isStreaming()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowJobAlreadyUpdatedException/DataflowJobAlreadyUpdatedException(org.apache.beam.runners.dataflow.DataflowPipelineJob,java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/jobToString(com.google.api.services.dataflow.model.Job)|",
      "|java+method:///org/apache/beam/sdk/util/IOChannelUtils/create(java.lang.String,java.lang.String)|",
      "|java+method:///com/google/api/services/dataflow/model/Environment/setExperiments(java.util.List)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/as(java.lang.Class)|",
      "|java+method:///com/google/api/client/googleapis/json/GoogleJsonResponseException/getDetails()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowAggregatorTransforms/DataflowAggregatorTransforms(java.util.Map,java.util.Map)|",
      "|java+method:///java/io/PrintWriter/print(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getExperiments()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///java/io/PrintWriter/PrintWriter(java.io.OutputStream)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowClient/createJob(com.google.api.services.dataflow.model.Job)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$JobSpecification/getStepNames()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getProject()|"
    ],
    "v2Body": [
      "|java+method:///org/joda/time/format/DateTimeFormat/forPattern(java.lang.String)|",
      "|java+method:///com/google/api/services/dataflow/model/Environment/setUserAgent(java.util.Map)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$JobSpecification/getJob()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/util/DataflowTemplateJob/DataflowTemplateJob()|",
      "|java+method:///com/google/api/services/dataflow/model/Job/getName()|",
      "|java+method:///org/joda/time/format/DateTimeFormatter/withZone(org.joda.time.DateTimeZone)|",
      "|java+method:///com/google/api/services/dataflow/model/Job/getClientRequestId()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getGcpTempLocation()|",
      "|java+method:///com/google/api/services/dataflow/model/Job/setReplaceJobId(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/run(org.apache.beam.sdk.Pipeline)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getTempDatasetId()|",
      "|java+method:///org/apache/beam/sdk/extensions/gcp/storage/PathValidator/verifyPath(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getTemplateLocation()|",
      "|java+method:///com/google/api/services/dataflow/model/Job/toString()|",
      "|java+method:///org/apache/beam/sdk/util/ReleaseInfo/getReleaseInfo()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getDataflowJobFile()|",
      "|java+method:///org/apache/beam/runners/dataflow/util/Stager/stageFiles()|",
      "|java+method:///com/google/api/services/dataflow/model/Environment/getWorkerPools()|",
      "|java+method:///com/google/api/client/googleapis/json/GoogleJsonError/getMessage()|",
      "|java+method:///org/apache/beam/runners/dataflow/util/MonitoringUtil/getGcloudCancelCommand(org.apache.beam.runners.dataflow.options.DataflowPipelineOptions,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/MoreObjects/firstNonNull(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/setStreaming(boolean)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/beam/sdk/util/ReleaseInfo/getVersion()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Preconditions/checkState(boolean,java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getStager()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/getContainerImageForJob(org.apache.beam.runners.dataflow.options.DataflowPipelineOptions)|",
      "|java+method:///org/apache/beam/runners/dataflow/util/MonitoringUtil/getJobMonitoringPageURL(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/logWarningIfPCollectionViewHasNonDeterministicKeyCoder(org.apache.beam.sdk.Pipeline)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/translate(org.apache.beam.sdk.Pipeline,org.apache.beam.runners.dataflow.DataflowRunner,java.util.List)|",
      "|java+method:///java/io/PrintWriter/close()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/containsUnboundedPCollection(org.apache.beam.sdk.Pipeline)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunnerHooks/modifyEnvironmentBeforeSubmission(com.google.api.services.dataflow.model.Environment)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Preconditions/checkArgument(boolean,java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getTransformNameMapping()|",
      "|java+method:///org/apache/beam/sdk/io/FileSystems/create(org.apache.beam.sdk.io.fs.ResourceId,java.lang.String)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setWorkerHarnessContainerImage(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getJobName()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/isUpdate()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Utf8/encodedLength(java.lang.CharSequence)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///java/util/Random/nextInt(int)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/google/api/services/dataflow/model/Job/setClientRequestId(java.lang.String)|",
      "|java+method:///org/joda/time/DateTimeUtils/currentTimeMillis()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowClient/create(org.apache.beam.runners.dataflow.options.DataflowPipelineOptions)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getPathValidator()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/api/services/dataflow/model/Job/getId()|",
      "|java+method:///java/nio/channels/Channels/newOutputStream(java.nio.channels.WritableByteChannel)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/getJobIdFromName(java.lang.String)|",
      "|java+method:///com/google/api/services/dataflow/model/Job/setTransformNameMapping(java.util.Map)|",
      "|java+constructor:///java/util/Random/Random()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/replaceTransforms(org.apache.beam.sdk.Pipeline)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/maybeRegisterDebuggee(org.apache.beam.runners.dataflow.options.DataflowPipelineOptions,java.lang.String)|",
      "|java+method:///com/google/api/services/dataflow/model/Environment/setDataset(java.lang.String)|",
      "|java+method:///com/google/api/services/dataflow/model/Environment/setTempStoragePrefix(java.lang.String)|",
      "|java+method:///org/joda/time/format/DateTimeFormatter/print(long)|",
      "|java+method:///com/google/api/services/dataflow/model/Environment/setVersion(java.util.Map)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowJobAlreadyExistsException/DataflowJobAlreadyExistsException(org.apache.beam.runners.dataflow.DataflowPipelineJob,java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/google/api/services/dataflow/model/Job/getEnvironment()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowJobAlreadyUpdatedException/DataflowJobAlreadyUpdatedException(org.apache.beam.runners.dataflow.DataflowPipelineJob,java.lang.String)|",
      "|java+method:///org/apache/beam/sdk/io/FileSystems/matchNewResource(java.lang.String,boolean)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/jobToString(com.google.api.services.dataflow.model.Job)|",
      "|java+method:///com/google/api/services/dataflow/model/Environment/setExperiments(java.util.List)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/as(java.lang.Class)|",
      "|java+method:///com/google/api/client/googleapis/json/GoogleJsonResponseException/getDetails()|",
      "|java+method:///java/io/PrintWriter/print(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getExperiments()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///java/io/PrintWriter/PrintWriter(java.io.OutputStream)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineJob/DataflowPipelineJob(org.apache.beam.runners.dataflow.DataflowClient,java.lang.String,org.apache.beam.runners.dataflow.options.DataflowPipelineOptions,java.util.Map)|",
      "|java+method:///org/apache/beam/sdk/util/ReleaseInfo/getProperties()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowClient/createJob(com.google.api.services.dataflow.model.Job)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$JobSpecification/getStepNames()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getProject()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/getEnvironmentVersion(org.apache.beam.runners.dataflow.options.DataflowPipelineOptions)|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/internal/IsmFormat$IsmRecordCoder/structuralValue(org.apache.beam.runners.dataflow.internal.IsmFormat$IsmRecord)|",
    "called": "|java+method:///org/apache/beam/sdk/coders/Coder/structuralValue(java.lang.Object)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/beam/runners/dataflow/internal/IsmFormat$IsmRecordCoder/getKeyComponentCoder(int)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Preconditions/checkState(boolean,java.lang.String,int,java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/internal/IsmFormat$IsmRecordCoder/consistentWithEquals()|",
      "|java+method:///org/apache/beam/runners/dataflow/internal/IsmFormat$IsmRecord/meta(java.util.List,byte%5B%5D)|",
      "|java+method:///org/apache/beam/runners/dataflow/internal/IsmFormat$IsmRecord/getKeyComponent(int)|",
      "|java+method:///org/apache/beam/runners/dataflow/internal/IsmFormat$IsmRecord/getMetadata()|",
      "|java+method:///org/apache/beam/runners/dataflow/internal/IsmFormat$IsmRecord/getValue()|",
      "|java+method:///org/apache/beam/sdk/coders/Coder/structuralValue(java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/internal/IsmFormat$IsmRecord/getKeyComponents()|",
      "|java+method:///java/util/ArrayList/add(java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/coders/StandardCoder/structuralValue(java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/internal/IsmFormat$IsmRecord/of(java.util.List,java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/internal/IsmFormat/isMetadataKey(java.util.List)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/beam/runners/dataflow/internal/IsmFormat$IsmRecordCoder/getKeyComponentCoder(int)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/ArrayList/add(java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Preconditions/checkNotNull(java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Preconditions/checkState(boolean,java.lang.String,int,java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/internal/IsmFormat$IsmRecordCoder/consistentWithEquals()|",
      "|java+method:///org/apache/beam/runners/dataflow/internal/IsmFormat$IsmRecord/meta(java.util.List,byte%5B%5D)|",
      "|java+method:///org/apache/beam/runners/dataflow/internal/IsmFormat$IsmRecord/getKeyComponent(int)|",
      "|java+method:///org/apache/beam/runners/dataflow/internal/IsmFormat$IsmRecord/getMetadata()|",
      "|java+method:///org/apache/beam/runners/dataflow/internal/IsmFormat$IsmRecord/getValue()|",
      "|java+method:///org/apache/beam/sdk/coders/Coder/structuralValue(java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/internal/IsmFormat$IsmRecord/getKeyComponents()|",
      "|java+method:///org/apache/beam/runners/dataflow/internal/IsmFormat$IsmRecord/of(java.util.List,java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/coders/CustomCoder/structuralValue(java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/internal/IsmFormat/isMetadataKey(java.util.List)|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner$CombineGroupedValues/expand(org.apache.beam.sdk.values.PCollection)|",
    "called": "|java+method:///org/apache/beam/sdk/values/PCollection/createPrimitiveOutputInternal(org.apache.beam.sdk.Pipeline,org.apache.beam.sdk.values.WindowingStrategy,org.apache.beam.sdk.values.PCollection$IsBounded)|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/values/PCollection/getPipeline()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/createPrimitiveOutputInternal(org.apache.beam.sdk.Pipeline,org.apache.beam.sdk.util.WindowingStrategy,org.apache.beam.sdk.values.PCollection$IsBounded)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/isBounded()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/values/PCollection/getPipeline()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/createPrimitiveOutputInternal(org.apache.beam.sdk.Pipeline,org.apache.beam.sdk.values.WindowingStrategy,org.apache.beam.sdk.values.PCollection$IsBounded)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/isBounded()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$StepTranslator/addOutput(org.apache.beam.sdk.values.PValue)|",
    "called": "|java+method:///org/apache/beam/sdk/util/WindowedValue/getFullCoder(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/windowCoder()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getFullCoder(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$StepTranslator/addOutput(org.apache.beam.sdk.values.PValue,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getWindowFn()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|",
      "|java+method:///org/apache/beam/sdk/values/TypedPValue/getCoder()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/windowCoder()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue/getFullCoder(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$StepTranslator/addOutput(org.apache.beam.sdk.values.PValue,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/values/WindowingStrategy/getWindowFn()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$5/groupByKeyHelper(org.apache.beam.sdk.transforms.GroupByKey,org.apache.beam.runners.dataflow.TransformTranslator$TranslationContext)|",
    "called": "|java+method:///org/apache/beam/sdk/util/StringUtils/byteArrayToJsonString(byte%5B%5D)|",
    "v1Body": [
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/getInput(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/util/SerializableUtils/serializeToByteArray(java.io.Serializable)|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addInput(java.lang.String,org.apache.beam.sdk.values.PInput)|",
      "|java+method:///org/apache/beam/sdk/transforms/GroupByKey/fewKeys()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/addStep(org.apache.beam.sdk.transforms.PTransform,java.lang.String)|",
      "|java+method:///org/apache/beam/sdk/options/StreamingOptions/isStreaming()|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getWindowFn()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addInput(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/getPipelineOptions()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getTrigger()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/as(java.lang.Class)|",
      "|java+method:///org/apache/beam/sdk/util/StringUtils/byteArrayToJsonString(byte%5B%5D)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addInput(java.lang.String,java.lang.Boolean)|",
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/isNonMerging()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addOutput(org.apache.beam.sdk.values.PValue)|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/getOutput(org.apache.beam.sdk.transforms.PTransform)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/getInput(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addInput(java.lang.String,org.apache.beam.sdk.values.PInput)|",
      "|java+method:///org/apache/beam/sdk/transforms/GroupByKey/fewKeys()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/addStep(org.apache.beam.sdk.transforms.PTransform,java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/access$1300(org.apache.beam.sdk.values.WindowingStrategy)|",
      "|java+method:///org/apache/beam/sdk/options/StreamingOptions/isStreaming()|",
      "|java+method:///org/apache/beam/sdk/values/WindowingStrategy/getWindowFn()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addInput(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/getPipelineOptions()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/apache/beam/sdk/values/WindowingStrategy/getTrigger()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/as(java.lang.Class)|",
      "|java+method:///org/apache/beam/sdk/util/StringUtils/byteArrayToJsonString(byte%5B%5D)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addInput(java.lang.String,java.lang.Boolean)|",
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/isNonMerging()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$StepTranslationContext/addOutput(org.apache.beam.sdk.values.PValue)|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator$TranslationContext/getOutput(org.apache.beam.sdk.transforms.PTransform)|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$GroupByWindowHashAsKeyAndWindowAsSortKey/expand(org.apache.beam.sdk.values.PCollection)|",
    "called": "|java+method:///org/apache/beam/sdk/coders/KvCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/windowCoder()|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo/of(org.apache.beam.sdk.transforms.DoFn)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/setCoder(org.apache.beam.sdk.coders.Coder)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$GroupByKeyAndSortValuesOnly/BatchViewOverrides$GroupByKeyAndSortValuesOnly()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue$FullWindowedValueCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/coders/VarIntCoder/of()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/apply(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getWindowFn()|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$GroupByWindowHashAsKeyAndWindowAsSortKey$UseWindowHashAsKeyAndWindowAsSortKeyDoFn/BatchViewOverrides$GroupByWindowHashAsKeyAndWindowAsSortKey$UseWindowHashAsKeyAndWindowAsSortKeyDoFn(org.apache.beam.runners.dataflow.internal.IsmFormat$IsmRecordCoder,org.apache.beam.runners.dataflow.BatchViewOverrides$1)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/windowCoder()|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo/of(org.apache.beam.sdk.transforms.DoFn)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/setCoder(org.apache.beam.sdk.coders.Coder)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$GroupByKeyAndSortValuesOnly/BatchViewOverrides$GroupByKeyAndSortValuesOnly()|",
      "|java+method:///org/apache/beam/sdk/util/WindowedValue$FullWindowedValueCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/coders/VarIntCoder/of()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/apply(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/values/WindowingStrategy/getWindowFn()|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$GroupByWindowHashAsKeyAndWindowAsSortKey$UseWindowHashAsKeyAndWindowAsSortKeyDoFn/BatchViewOverrides$GroupByWindowHashAsKeyAndWindowAsSortKey$UseWindowHashAsKeyAndWindowAsSortKeyDoFn(org.apache.beam.runners.dataflow.internal.IsmFormat$IsmRecordCoder,org.apache.beam.runners.dataflow.BatchViewOverrides$1)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$Translator/visitPrimitiveTransform(org.apache.beam.sdk.runners.TransformHierarchy$Node)|",
    "called": "|java+method:///org/apache/beam/sdk/runners/TransformHierarchy$Node/toAppliedPTransform()|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/runners/TransformHierarchy$Node/getTransform()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator/translate(org.apache.beam.sdk.transforms.PTransform,org.apache.beam.runners.dataflow.TransformTranslator$TranslationContext)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Preconditions/checkState(boolean,java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/apache/beam/sdk/runners/TransformHierarchy$Node/toAppliedPTransform()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/getTransformTranslator(java.lang.Class)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/access$300()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/access$400()|",
      "|java+method:///org/apache/beam/sdk/runners/TransformHierarchy$Node/getTransform()|",
      "|java+method:///org/apache/beam/sdk/runners/TransformHierarchy$Node/getFullName()|",
      "|java+method:///org/apache/beam/runners/dataflow/TransformTranslator/translate(org.apache.beam.sdk.transforms.PTransform,org.apache.beam.runners.dataflow.TransformTranslator$TranslationContext)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Preconditions/checkState(boolean,java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/apache/beam/sdk/runners/TransformHierarchy$Node/toAppliedPTransform()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/getTransformTranslator(java.lang.Class)|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsSingleton/expand(org.apache.beam.sdk.values.PCollection)|",
    "called": "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/windowCoder()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsSingleton$IsmRecordForSingularValuePerWindowDoFn/BatchViewOverrides$BatchViewAsSingleton$IsmRecordForSingularValuePerWindowDoFn(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getWindowFn()|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsSingleton/applyForSingleton(org.apache.beam.runners.dataflow.DataflowRunner,org.apache.beam.sdk.values.PCollection,org.apache.beam.sdk.transforms.DoFn,boolean,java.lang.Object,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/transforms/View$AsSingleton/defaultValue()|",
      "|java+method:///org/apache/beam/sdk/transforms/View$AsSingleton/hasDefaultValue()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/windowCoder()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsSingleton$IsmRecordForSingularValuePerWindowDoFn/BatchViewOverrides$BatchViewAsSingleton$IsmRecordForSingularValuePerWindowDoFn(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/values/WindowingStrategy/getWindowFn()|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsSingleton/applyForSingleton(org.apache.beam.runners.dataflow.DataflowRunner,org.apache.beam.sdk.values.PCollection,org.apache.beam.sdk.transforms.DoFn,boolean,java.lang.Object,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/transforms/View$AsSingleton/defaultValue()|",
      "|java+method:///org/apache/beam/sdk/transforms/View$AsSingleton/hasDefaultValue()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/BatchStatefulParDoOverrides$StatefulMultiOutputParDo/expand(org.apache.beam.sdk.values.PCollection)|",
    "called": "|java+method:///org/apache/beam/sdk/values/PCollection/apply(org.apache.beam.sdk.transforms.PTransform)|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/transforms/ParDo$Bound/withOutputTags(org.apache.beam.sdk.values.TupleTag,org.apache.beam.sdk.values.TupleTagList)|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo/of(org.apache.beam.sdk.transforms.DoFn)|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchStatefulParDoOverrides/access$200(org.apache.beam.sdk.transforms.DoFn)|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo$Bound/withSideInputs(java.lang.Iterable)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchStatefulParDoOverrides$GbkBeforeStatefulParDo/BatchStatefulParDoOverrides$GbkBeforeStatefulParDo()|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo$BoundMulti/getSideOutputTags()|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo$BoundMulti/getMainOutputTag()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchStatefulParDoOverrides$BatchStatefulDoFn/BatchStatefulParDoOverrides$BatchStatefulDoFn(org.apache.beam.sdk.transforms.DoFn)|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo$BoundMulti/getSideInputs()|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo$BoundMulti/getFn()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/apply(org.apache.beam.sdk.transforms.PTransform)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/transforms/ParDo$MultiOutput/getFn()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/apply(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo/of(org.apache.beam.sdk.transforms.DoFn)|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchStatefulParDoOverrides/access$200(org.apache.beam.sdk.transforms.DoFn)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchStatefulParDoOverrides$GbkBeforeStatefulParDo/BatchStatefulParDoOverrides$GbkBeforeStatefulParDo()|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo$SingleOutput/withOutputTags(org.apache.beam.sdk.values.TupleTag,org.apache.beam.sdk.values.TupleTagList)|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo$MultiOutput/getAdditionalOutputTags()|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo$MultiOutput/getMainOutputTag()|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo$SingleOutput/withSideInputs(java.lang.Iterable)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchStatefulParDoOverrides$BatchStatefulDoFn/BatchStatefulParDoOverrides$BatchStatefulDoFn(org.apache.beam.sdk.transforms.DoFn)|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo$MultiOutput/getSideInputs()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/util/PackageUtil/createPackageAttributes(java.io.File,java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/apache/beam/sdk/io/FileSystems/matchNewResource(java.lang.String,boolean)|",
    "v1Body": [
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/Files/asByteSource(java.io.File)|",
      "|java+method:///com/google/api/services/dataflow/model/DataflowPackage/setLocation(java.lang.String)|",
      "|java+method:///org/apache/beam/sdk/util/ZipFiles/zipDirectory(java.io.File,java.io.OutputStream)|",
      "|java+constructor:///com/google/api/services/dataflow/model/DataflowPackage/DataflowPackage()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/hash/HashFunction/newHasher()|",
      "|java+method:///com/google/api/services/dataflow/model/DataflowPackage/setName(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/util/PackageUtil$PackageAttributes/PackageUtil$PackageAttributes(long,java.lang.String,boolean,com.google.api.services.dataflow.model.DataflowPackage,java.lang.String)|",
      "|java+method:///org/apache/beam/sdk/util/IOChannelUtils/resolve(java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/beam/runners/dataflow/util/PackageUtil/getUniqueContentName(java.io.File,java.lang.String)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/CountingOutputStream/CountingOutputStream(java.io.OutputStream)|",
      "|java+method:///java/io/File/isDirectory()|",
      "|java+method:///com/fasterxml/jackson/core/Base64Variant/encode(byte%5B%5D)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/hash/HashCode/asBytes()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/ByteSource/copyTo(java.io.OutputStream)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/CountingOutputStream/close()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/hash/Hasher/hash()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/hash/Hashing/md5()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/CountingOutputStream/flush()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/hash/Funnels/asOutputStream(org.apache.beam.runners.dataflow.repackaged.com.google.common.hash.PrimitiveSink)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/CountingOutputStream/getCount()|",
      "|java+method:///java/io/File/getPath()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/Files/asByteSource(java.io.File)|",
      "|java+method:///com/google/api/services/dataflow/model/DataflowPackage/setLocation(java.lang.String)|",
      "|java+method:///org/apache/beam/sdk/util/ZipFiles/zipDirectory(java.io.File,java.io.OutputStream)|",
      "|java+constructor:///com/google/api/services/dataflow/model/DataflowPackage/DataflowPackage()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///com/google/api/services/dataflow/model/DataflowPackage/setName(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/util/PackageUtil$PackageAttributes/PackageUtil$PackageAttributes(long,java.lang.String,boolean,com.google.api.services.dataflow.model.DataflowPackage,java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/util/PackageUtil/getUniqueContentName(java.io.File,java.lang.String)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/CountingOutputStream/CountingOutputStream(java.io.OutputStream)|",
      "|java+method:///java/io/File/isDirectory()|",
      "|java+method:///com/fasterxml/jackson/core/Base64Variant/encode(byte%5B%5D)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/hash/HashCode/asBytes()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/ByteSource/copyTo(java.io.OutputStream)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/CountingOutputStream/close()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/hash/Hasher/hash()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/hash/Hashing/md5()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/CountingOutputStream/flush()|",
      "|java+method:///org/apache/beam/sdk/io/FileSystems/matchNewResource(java.lang.String,boolean)|",
      "|java+method:///org/apache/beam/sdk/io/fs/ResourceId/toString()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/hash/HashFunction/newHasher()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/hash/Funnels/asOutputStream(org.apache.beam.runners.dataflow.repackaged.com.google.common.hash.PrimitiveSink)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/CountingOutputStream/getCount()|",
      "|java+method:///java/io/File/getPath()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/beam/sdk/io/fs/ResourceId/resolve(java.lang.String,org.apache.beam.sdk.io.fs.ResolveOptions)|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsMultimap/applyForMapLike(org.apache.beam.runners.dataflow.DataflowRunner,org.apache.beam.sdk.values.PCollection,org.apache.beam.sdk.values.PCollectionView,boolean)|",
    "called": "|java+method:///org/apache/beam/sdk/coders/KvCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/windowCoder()|",
      "|java+constructor:///org/apache/beam/sdk/values/TupleTag/TupleTag()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsMultimap$GroupByKeyHashAndSortByKeyAndWindow/BatchViewOverrides$BatchViewAsMultimap$GroupByKeyHashAndSortByKeyAndWindow(org.apache.beam.runners.dataflow.internal.IsmFormat$IsmRecordCoder)|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo/of(org.apache.beam.sdk.transforms.DoFn)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/setCoder(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/getValueCoder()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$GroupByKeyAndSortValuesOnly/BatchViewOverrides$GroupByKeyAndSortValuesOnly()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsMultimap$ToIsmMetadataRecordForSizeDoFn/BatchViewOverrides$BatchViewAsMultimap$ToIsmMetadataRecordForSizeDoFn(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/addPCollectionRequiringIndexedFormat(org.apache.beam.sdk.values.PCollection)|",
      "|java+method:///org/apache/beam/sdk/transforms/Flatten/pCollections()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsMultimap$ToIsmMetadataRecordForKeyDoFn/BatchViewOverrides$BatchViewAsMultimap$ToIsmMetadataRecordForKeyDoFn(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/values/PCollectionList/of(java.lang.Iterable)|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/getKeyCoder()|",
      "|java+method:///org/apache/beam/sdk/values/TupleTagList/of(java.util.List)|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo$Bound/withOutputTags(org.apache.beam.sdk.values.TupleTag,org.apache.beam.sdk.values.TupleTagList)|",
      "|java+method:///org/apache/beam/sdk/coders/Coder/verifyDeterministic()|",
      "|java+method:///org/apache/beam/sdk/coders/VarIntCoder/of()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/apply(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/util/WindowingStrategy/getWindowFn()|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsMultimap/coderForMapLike(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsMultimap$ToIsmRecordForMapLikeDoFn/BatchViewOverrides$BatchViewAsMultimap$ToIsmRecordForMapLikeDoFn(org.apache.beam.sdk.values.TupleTag,org.apache.beam.sdk.values.TupleTag,org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder,org.apache.beam.runners.dataflow.internal.IsmFormat$IsmRecordCoder,boolean)|",
      "|java+method:///org/apache/beam/sdk/values/PCollectionTuple/get(org.apache.beam.sdk.values.TupleTag)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/apply(java.lang.String,org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|",
      "|java+method:///org/apache/beam/sdk/Pipeline/applyTransform(org.apache.beam.sdk.values.PInput,org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/transforms/View$CreatePCollectionView/of(org.apache.beam.sdk.values.PCollectionView)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/coders/VarLongCoder/of()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/transforms/windowing/WindowFn/windowCoder()|",
      "|java+method:///org/apache/beam/sdk/values/TupleTagList/of(java.util.List)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsMultimap$GroupByKeyHashAndSortByKeyAndWindow/BatchViewOverrides$BatchViewAsMultimap$GroupByKeyHashAndSortByKeyAndWindow(org.apache.beam.runners.dataflow.internal.IsmFormat$IsmRecordCoder)|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo/of(org.apache.beam.sdk.transforms.DoFn)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/setCoder(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/getValueCoder()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$GroupByKeyAndSortValuesOnly/BatchViewOverrides$GroupByKeyAndSortValuesOnly()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsMultimap$ToIsmMetadataRecordForSizeDoFn/BatchViewOverrides$BatchViewAsMultimap$ToIsmMetadataRecordForSizeDoFn(org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/addPCollectionRequiringIndexedFormat(org.apache.beam.sdk.values.PCollection)|",
      "|java+method:///org/apache/beam/sdk/transforms/Flatten/pCollections()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsMultimap$ToIsmMetadataRecordForKeyDoFn/BatchViewOverrides$BatchViewAsMultimap$ToIsmMetadataRecordForKeyDoFn(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/Pipeline/applyTransform(org.apache.beam.sdk.values.PInput,org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/values/PCollectionList/of(java.lang.Iterable)|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/getKeyCoder()|",
      "|java+method:///org/apache/beam/runners/dataflow/CreateDataflowView/of(org.apache.beam.sdk.values.PCollectionView)|",
      "|java+constructor:///org/apache/beam/sdk/values/TupleTag/TupleTag()|",
      "|java+method:///org/apache/beam/sdk/coders/Coder/verifyDeterministic()|",
      "|java+method:///org/apache/beam/sdk/coders/VarIntCoder/of()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/apply(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/values/WindowingStrategy/getWindowFn()|",
      "|java+method:///org/apache/beam/sdk/coders/KvCoder/of(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+method:///org/apache/beam/sdk/transforms/ParDo$SingleOutput/withOutputTags(org.apache.beam.sdk.values.TupleTag,org.apache.beam.sdk.values.TupleTagList)|",
      "|java+method:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsMultimap/coderForMapLike(org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/BatchViewOverrides$BatchViewAsMultimap$ToIsmRecordForMapLikeDoFn/BatchViewOverrides$BatchViewAsMultimap$ToIsmRecordForMapLikeDoFn(org.apache.beam.sdk.values.TupleTag,org.apache.beam.sdk.values.TupleTag,org.apache.beam.sdk.coders.Coder,org.apache.beam.sdk.coders.Coder,org.apache.beam.runners.dataflow.internal.IsmFormat$IsmRecordCoder,boolean)|",
      "|java+method:///org/apache/beam/sdk/values/PCollectionTuple/get(org.apache.beam.sdk.values.TupleTag)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/apply(java.lang.String,org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getCoder()|",
      "|java+method:///org/apache/beam/sdk/values/PCollection/getWindowingStrategy()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/coders/VarLongCoder/of()|"
    ],
    "affectedLib": "org.apache.beam:beam-sdks-java-core:2.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+initializer:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/DataflowPipelineTranslator$initializer|",
    "called": "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/registerModules(java.lang.Iterable)|",
    "v1Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/registerTransformTranslator(java.lang.Class,org.apache.beam.runners.dataflow.TransformTranslator)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$2/DataflowPipelineTranslator$2()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$1/DataflowPipelineTranslator$1()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$8/DataflowPipelineTranslator$8()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/ReadTranslator/ReadTranslator()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$7/DataflowPipelineTranslator$7()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$6/DataflowPipelineTranslator$6()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$5/DataflowPipelineTranslator$5()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$4/DataflowPipelineTranslator$4()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$3/DataflowPipelineTranslator$3()|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/registerModules(java.lang.Iterable)|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/findModules(java.lang.ClassLoader)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/registerTransformTranslator(java.lang.Class,org.apache.beam.runners.dataflow.TransformTranslator)|",
      "|java+method:///org/apache/beam/sdk/util/common/ReflectHelpers/findClassLoader()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$2/DataflowPipelineTranslator$2()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$1/DataflowPipelineTranslator$1()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$8/DataflowPipelineTranslator$8()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/ReadTranslator/ReadTranslator()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$7/DataflowPipelineTranslator$7()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$6/DataflowPipelineTranslator$6()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$5/DataflowPipelineTranslator$5()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$4/DataflowPipelineTranslator$4()|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$3/DataflowPipelineTranslator$3()|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.8.8",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$Translator/translate(java.util.List)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsBytes(java.lang.Object)|",
    "v1Body": [
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setMachineType(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getNumWorkers()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(byte%5B%5D,java.lang.Class)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setDiskType(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineWorkerPoolOptions$AutoscalingAlgorithmType/getAlgorithm()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getWorkerDiskType()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getAutoscalingAlgorithm()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getDiskSizeGb()|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setNetwork(java.lang.String)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setIpConfiguration(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/isStreaming()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/google/api/services/dataflow/model/Environment/setWorkerPools(java.util.List)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setPackages(java.util.List)|",
      "|java+method:///com/google/api/services/dataflow/model/AutoscalingSettings/setAlgorithm(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getSubnetwork()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getWorkerMachineType()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/access$200()|",
      "|java+method:///java/lang/String/toLowerCase()|",
      "|java+method:///com/google/api/services/dataflow/model/Job/setName(java.lang.String)|",
      "|java+constructor:///com/google/api/services/dataflow/model/WorkerPool/WorkerPool()|",
      "|java+method:///com/google/api/services/dataflow/model/Disk/setDiskType(java.lang.String)|",
      "|java+constructor:///com/google/api/services/dataflow/model/Disk/Disk()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getServiceAccount()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getJobName()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/access$100(org.apache.beam.runners.dataflow.DataflowPipelineTranslator)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setAutoscalingSettings(com.google.api.services.dataflow.model.AutoscalingSettings)|",
      "|java+constructor:///com/google/api/services/dataflow/model/Environment/Environment()|",
      "|java+method:///org/apache/beam/sdk/Pipeline/traverseTopologically(org.apache.beam.sdk.Pipeline$PipelineVisitor)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getUsePublicIps()|",
      "|java+method:///com/google/api/services/dataflow/model/Environment/setSdkPipelineOptions(java.util.Map)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getNetwork()|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setDiskSizeGb(java.lang.Integer)|",
      "|java+method:///com/google/api/services/dataflow/model/AutoscalingSettings/setMaxNumWorkers(java.lang.Integer)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setDataDisks(java.util.List)|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getMaxNumWorkers()|",
      "|java+method:///com/google/api/services/dataflow/model/Job/setType(java.lang.String)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/contains(java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getExperiments()|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setZone(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setSubnetwork(java.lang.String)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setNumWorkers(java.lang.Integer)|",
      "|java+method:///com/google/api/services/dataflow/model/Job/setEnvironment(com.google.api.services.dataflow.model.Environment)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsBytes(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///com/google/api/services/dataflow/model/Environment/setServiceAccountEmail(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getZone()|",
      "|java+constructor:///com/google/api/services/dataflow/model/AutoscalingSettings/AutoscalingSettings()|"
    ],
    "v2Body": [
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setMachineType(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getNumWorkers()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(byte%5B%5D,java.lang.Class)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setDiskType(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineWorkerPoolOptions$AutoscalingAlgorithmType/getAlgorithm()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getWorkerDiskType()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getAutoscalingAlgorithm()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getDiskSizeGb()|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setNetwork(java.lang.String)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setIpConfiguration(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/hasExperiment(org.apache.beam.runners.dataflow.options.DataflowPipelineDebugOptions,java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/isStreaming()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/google/api/services/dataflow/model/Environment/setWorkerPools(java.util.List)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setPackages(java.util.List)|",
      "|java+method:///com/google/api/services/dataflow/model/AutoscalingSettings/setAlgorithm(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getSubnetwork()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getWorkerMachineType()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/access$200()|",
      "|java+method:///java/lang/String/toLowerCase()|",
      "|java+method:///com/google/api/services/dataflow/model/Job/setName(java.lang.String)|",
      "|java+constructor:///com/google/api/services/dataflow/model/WorkerPool/WorkerPool()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/access$300()|",
      "|java+method:///com/google/api/services/dataflow/model/Disk/setDiskType(java.lang.String)|",
      "|java+constructor:///com/google/api/services/dataflow/model/Disk/Disk()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getServiceAccount()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getJobName()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/access$100(org.apache.beam.runners.dataflow.DataflowPipelineTranslator)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setAutoscalingSettings(com.google.api.services.dataflow.model.AutoscalingSettings)|",
      "|java+constructor:///com/google/api/services/dataflow/model/Environment/Environment()|",
      "|java+method:///org/apache/beam/sdk/Pipeline/traverseTopologically(org.apache.beam.sdk.Pipeline$PipelineVisitor)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getUsePublicIps()|",
      "|java+method:///com/google/api/services/dataflow/model/Environment/setSdkPipelineOptions(java.util.Map)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getNetwork()|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setDiskSizeGb(java.lang.Integer)|",
      "|java+method:///com/google/api/services/dataflow/model/AutoscalingSettings/setMaxNumWorkers(java.lang.Integer)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setDataDisks(java.util.List)|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getMaxNumWorkers()|",
      "|java+method:///com/google/api/services/dataflow/model/Job/setType(java.lang.String)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setZone(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setSubnetwork(java.lang.String)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setNumWorkers(java.lang.Integer)|",
      "|java+method:///com/google/api/services/dataflow/model/Job/setEnvironment(com.google.api.services.dataflow.model.Environment)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsBytes(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///com/google/api/services/dataflow/model/Environment/setServiceAccountEmail(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getZone()|",
      "|java+constructor:///com/google/api/services/dataflow/model/AutoscalingSettings/AutoscalingSettings()|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.8.8",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$StepTranslator/addDisplayData(com.google.api.services.dataflow.model.Step,java.lang.String,org.apache.beam.sdk.transforms.display.HasDisplayData)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/access$200()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$StepTranslator/getProperties()|",
      "|java+method:///org/apache/beam/sdk/util/Structs/addList(java.util.Map,java.lang.String,java.util.List)|",
      "|java+method:///org/apache/beam/sdk/transforms/display/DisplayData/from(org.apache.beam.sdk.transforms.display.HasDisplayData)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/access$300()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$StepTranslator/getProperties()|",
      "|java+method:///org/apache/beam/runners/dataflow/util/Structs/addList(java.util.Map,java.lang.String,java.util.List)|",
      "|java+method:///org/apache/beam/sdk/transforms/display/DisplayData/from(org.apache.beam.sdk.transforms.display.HasDisplayData)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.8.8",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$Translator/addStep(org.apache.beam.sdk.transforms.PTransform,java.lang.String)|",
    "called": "|java+constructor:///com/google/api/services/dataflow/model/Step/Step()|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$Translator/getCurrentTransform(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+constructor:///com/google/api/services/dataflow/model/Step/Step()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$StepTranslator/access$500(org.apache.beam.runners.dataflow.DataflowPipelineTranslator$StepTranslator,com.google.api.services.dataflow.model.Step,java.lang.String,org.apache.beam.sdk.transforms.display.HasDisplayData)|",
      "|java+method:///com/google/api/services/dataflow/model/Step/setName(java.lang.String)|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///com/google/api/services/dataflow/model/Step/setKind(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$Translator/addStep(org.apache.beam.sdk.transforms.PTransform,java.lang.String)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$Translator/getFullName(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///com/google/api/services/dataflow/model/Job/setSteps(java.util.List)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/google/api/services/dataflow/model/Job/getSteps()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$StepTranslator/DataflowPipelineTranslator$StepTranslator(org.apache.beam.runners.dataflow.DataflowPipelineTranslator$Translator,com.google.api.services.dataflow.model.Step,org.apache.beam.runners.dataflow.DataflowPipelineTranslator$1)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$StepTranslator/addInput(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$Translator/genStepName()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$Translator/getCurrentTransform(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+constructor:///com/google/api/services/dataflow/model/Step/Step()|",
      "|java+method:///com/google/api/services/dataflow/model/Step/setName(java.lang.String)|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///com/google/api/services/dataflow/model/Step/setKind(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$Translator/addStep(org.apache.beam.sdk.transforms.PTransform,java.lang.String)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$Translator/getFullName(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///com/google/api/services/dataflow/model/Job/setSteps(java.util.List)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/google/api/services/dataflow/model/Job/getSteps()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$StepTranslator/access$600(org.apache.beam.runners.dataflow.DataflowPipelineTranslator$StepTranslator,com.google.api.services.dataflow.model.Step,java.lang.String,org.apache.beam.sdk.transforms.display.HasDisplayData)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$StepTranslator/DataflowPipelineTranslator$StepTranslator(org.apache.beam.runners.dataflow.DataflowPipelineTranslator$Translator,com.google.api.services.dataflow.model.Step,org.apache.beam.runners.dataflow.DataflowPipelineTranslator$1)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$StepTranslator/addInput(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$Translator/genStepName()|"
    ],
    "affectedLib": "com.google.apis:google-api-services-dataflow:v1b3-rev196-1.22.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$Translator/addStep(org.apache.beam.sdk.transforms.PTransform,com.google.api.services.dataflow.model.Step)|",
    "called": "|java+method:///com/google/api/services/dataflow/model/Step/clone()|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/google/api/services/dataflow/model/Step/getProperties()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/util/Structs/getString(java.util.Map,java.lang.String)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$Translator/registerOutputName(org.apache.beam.sdk.values.PValue,java.lang.String)|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$Translator/getOutput(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///com/google/api/services/dataflow/model/Job/setSteps(java.util.List)|",
      "|java+method:///com/google/api/services/dataflow/model/Step/getName()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$Translator/getCurrentTransform(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///com/google/api/services/dataflow/model/Job/getSteps()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/google/api/services/dataflow/model/Step/clone()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/google/api/services/dataflow/model/Step/getProperties()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$Translator/registerOutputName(org.apache.beam.sdk.values.PValue,java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/util/Structs/getString(java.util.Map,java.lang.String)|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$Translator/getOutput(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///com/google/api/services/dataflow/model/Job/setSteps(java.util.List)|",
      "|java+method:///com/google/api/services/dataflow/model/Step/getName()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$Translator/getCurrentTransform(org.apache.beam.sdk.transforms.PTransform)|",
      "|java+method:///com/google/api/services/dataflow/model/Job/getSteps()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/google/api/services/dataflow/model/Step/clone()|"
    ],
    "affectedLib": "com.google.apis:google-api-services-dataflow:v1b3-rev196-1.22.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator$Translator/translate(java.util.List)|",
    "called": "|java+constructor:///com/google/api/services/dataflow/model/WorkerPool/WorkerPool()|",
    "v1Body": [
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setMachineType(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getNumWorkers()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(byte%5B%5D,java.lang.Class)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setDiskType(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineWorkerPoolOptions$AutoscalingAlgorithmType/getAlgorithm()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getWorkerDiskType()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getAutoscalingAlgorithm()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getDiskSizeGb()|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setNetwork(java.lang.String)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setIpConfiguration(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/isStreaming()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/google/api/services/dataflow/model/Environment/setWorkerPools(java.util.List)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setPackages(java.util.List)|",
      "|java+method:///com/google/api/services/dataflow/model/AutoscalingSettings/setAlgorithm(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getSubnetwork()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getWorkerMachineType()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/access$200()|",
      "|java+method:///java/lang/String/toLowerCase()|",
      "|java+method:///com/google/api/services/dataflow/model/Job/setName(java.lang.String)|",
      "|java+constructor:///com/google/api/services/dataflow/model/WorkerPool/WorkerPool()|",
      "|java+method:///com/google/api/services/dataflow/model/Disk/setDiskType(java.lang.String)|",
      "|java+constructor:///com/google/api/services/dataflow/model/Disk/Disk()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getServiceAccount()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getJobName()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/access$100(org.apache.beam.runners.dataflow.DataflowPipelineTranslator)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setAutoscalingSettings(com.google.api.services.dataflow.model.AutoscalingSettings)|",
      "|java+constructor:///com/google/api/services/dataflow/model/Environment/Environment()|",
      "|java+method:///org/apache/beam/sdk/Pipeline/traverseTopologically(org.apache.beam.sdk.Pipeline$PipelineVisitor)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getUsePublicIps()|",
      "|java+method:///com/google/api/services/dataflow/model/Environment/setSdkPipelineOptions(java.util.Map)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getNetwork()|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setDiskSizeGb(java.lang.Integer)|",
      "|java+method:///com/google/api/services/dataflow/model/AutoscalingSettings/setMaxNumWorkers(java.lang.Integer)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setDataDisks(java.util.List)|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getMaxNumWorkers()|",
      "|java+method:///com/google/api/services/dataflow/model/Job/setType(java.lang.String)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/contains(java.lang.Object)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getExperiments()|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setZone(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setSubnetwork(java.lang.String)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setNumWorkers(java.lang.Integer)|",
      "|java+method:///com/google/api/services/dataflow/model/Job/setEnvironment(com.google.api.services.dataflow.model.Environment)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsBytes(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///com/google/api/services/dataflow/model/Environment/setServiceAccountEmail(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getZone()|",
      "|java+constructor:///com/google/api/services/dataflow/model/AutoscalingSettings/AutoscalingSettings()|"
    ],
    "v2Body": [
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setMachineType(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getNumWorkers()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(byte%5B%5D,java.lang.Class)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setDiskType(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineWorkerPoolOptions$AutoscalingAlgorithmType/getAlgorithm()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getWorkerDiskType()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getAutoscalingAlgorithm()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getDiskSizeGb()|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setNetwork(java.lang.String)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setIpConfiguration(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowRunner/hasExperiment(org.apache.beam.runners.dataflow.options.DataflowPipelineDebugOptions,java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/isStreaming()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/google/api/services/dataflow/model/Environment/setWorkerPools(java.util.List)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setPackages(java.util.List)|",
      "|java+method:///com/google/api/services/dataflow/model/AutoscalingSettings/setAlgorithm(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getSubnetwork()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getWorkerMachineType()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/access$200()|",
      "|java+method:///java/lang/String/toLowerCase()|",
      "|java+method:///com/google/api/services/dataflow/model/Job/setName(java.lang.String)|",
      "|java+constructor:///com/google/api/services/dataflow/model/WorkerPool/WorkerPool()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/access$300()|",
      "|java+method:///com/google/api/services/dataflow/model/Disk/setDiskType(java.lang.String)|",
      "|java+constructor:///com/google/api/services/dataflow/model/Disk/Disk()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getServiceAccount()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getJobName()|",
      "|java+method:///org/apache/beam/runners/dataflow/DataflowPipelineTranslator/access$100(org.apache.beam.runners.dataflow.DataflowPipelineTranslator)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setAutoscalingSettings(com.google.api.services.dataflow.model.AutoscalingSettings)|",
      "|java+constructor:///com/google/api/services/dataflow/model/Environment/Environment()|",
      "|java+method:///org/apache/beam/sdk/Pipeline/traverseTopologically(org.apache.beam.sdk.Pipeline$PipelineVisitor)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getUsePublicIps()|",
      "|java+method:///com/google/api/services/dataflow/model/Environment/setSdkPipelineOptions(java.util.Map)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getNetwork()|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setDiskSizeGb(java.lang.Integer)|",
      "|java+method:///com/google/api/services/dataflow/model/AutoscalingSettings/setMaxNumWorkers(java.lang.Integer)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setDataDisks(java.util.List)|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getMaxNumWorkers()|",
      "|java+method:///com/google/api/services/dataflow/model/Job/setType(java.lang.String)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setZone(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setSubnetwork(java.lang.String)|",
      "|java+method:///com/google/api/services/dataflow/model/WorkerPool/setNumWorkers(java.lang.Integer)|",
      "|java+method:///com/google/api/services/dataflow/model/Job/setEnvironment(com.google.api.services.dataflow.model.Environment)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsBytes(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///com/google/api/services/dataflow/model/Environment/setServiceAccountEmail(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/options/DataflowPipelineOptions/getZone()|",
      "|java+constructor:///com/google/api/services/dataflow/model/AutoscalingSettings/AutoscalingSettings()|"
    ],
    "affectedLib": "com.google.apis:google-api-services-dataflow:v1b3-rev196-1.22.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/internal/CustomSources/serializeToCloudSource(org.apache.beam.sdk.io.Source,org.apache.beam.sdk.options.PipelineOptions)|",
    "called": "|java+constructor:///com/google/api/services/dataflow/model/Source/Source()|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/beam/sdk/util/CloudObject/forClass(java.lang.Class)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/beam/sdk/util/Structs/addString(java.util.Map,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/google/api/services/dataflow/model/SourceMetadata/setEstimatedSizeBytes(java.lang.Long)|",
      "|java+method:///com/google/api/client/util/Base64/encodeBase64String(byte%5B%5D)|",
      "|java+method:///org/apache/beam/sdk/util/SerializableUtils/serializeToByteArray(java.io.Serializable)|",
      "|java+method:///com/google/api/services/dataflow/model/Source/getSpec()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/beam/sdk/util/Structs/addStringList(java.util.Map,java.lang.String,java.util.List)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+constructor:///com/google/api/services/dataflow/model/Source/Source()|",
      "|java+constructor:///com/google/api/services/dataflow/model/SourceMetadata/SourceMetadata()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/apache/beam/sdk/io/UnboundedSource/generateInitialSplits(int,org.apache.beam.sdk.options.PipelineOptions)|",
      "|java+method:///org/apache/beam/sdk/options/PipelineOptions/as(java.lang.Class)|",
      "|java+method:///com/google/api/services/dataflow/model/Source/setMetadata(com.google.api.services.dataflow.model.SourceMetadata)|",
      "|java+method:///org/apache/beam/runners/dataflow/internal/CustomSources/getDesiredNumUnboundedSourceSplits(org.apache.beam.runners.dataflow.options.DataflowPipelineOptions)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/apache/beam/sdk/io/BoundedSource/getEstimatedSizeBytes(org.apache.beam.sdk.options.PipelineOptions)|",
      "|java+method:///com/google/api/services/dataflow/model/Source/setSpec(java.util.Map)|",
      "|java+method:///com/google/api/services/dataflow/model/SourceMetadata/setInfinite(java.lang.Boolean)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/beam/runners/dataflow/util/CloudObject/forClass(java.lang.Class)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/google/api/services/dataflow/model/SourceMetadata/setEstimatedSizeBytes(java.lang.Long)|",
      "|java+method:///com/google/api/client/util/Base64/encodeBase64String(byte%5B%5D)|",
      "|java+method:///org/apache/beam/sdk/util/SerializableUtils/serializeToByteArray(java.io.Serializable)|",
      "|java+method:///org/apache/beam/runners/dataflow/util/Structs/addStringList(java.util.Map,java.lang.String,java.util.List)|",
      "|java+method:///com/google/api/services/dataflow/model/Source/getSpec()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+constructor:///com/google/api/services/dataflow/model/Source/Source()|",
      "|java+constructor:///com/google/api/services/dataflow/model/SourceMetadata/SourceMetadata()|",
      "|java+method:///org/apache/beam/sdk/options/PipelineOptions/as(java.lang.Class)|",
      "|java+method:///com/google/api/services/dataflow/model/Source/setMetadata(com.google.api.services.dataflow.model.SourceMetadata)|",
      "|java+method:///org/apache/beam/runners/dataflow/internal/CustomSources/getDesiredNumUnboundedSourceSplits(org.apache.beam.runners.dataflow.options.DataflowPipelineOptions)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/util/Structs/addString(java.util.Map,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/beam/sdk/io/UnboundedSource/split(int,org.apache.beam.sdk.options.PipelineOptions)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/apache/beam/sdk/io/BoundedSource/getEstimatedSizeBytes(org.apache.beam.sdk.options.PipelineOptions)|",
      "|java+method:///com/google/api/services/dataflow/model/Source/setSpec(java.util.Map)|",
      "|java+method:///com/google/api/services/dataflow/model/SourceMetadata/setInfinite(java.lang.Boolean)|"
    ],
    "affectedLib": "com.google.apis:google-api-services-dataflow:v1b3-rev196-1.22.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/util/PackageUtil/createPackageAttributes(java.io.File,java.lang.String,java.lang.String)|",
    "called": "|java+constructor:///com/google/api/services/dataflow/model/DataflowPackage/DataflowPackage()|",
    "v1Body": [
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/Files/asByteSource(java.io.File)|",
      "|java+method:///com/google/api/services/dataflow/model/DataflowPackage/setLocation(java.lang.String)|",
      "|java+method:///org/apache/beam/sdk/util/ZipFiles/zipDirectory(java.io.File,java.io.OutputStream)|",
      "|java+constructor:///com/google/api/services/dataflow/model/DataflowPackage/DataflowPackage()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/hash/HashFunction/newHasher()|",
      "|java+method:///com/google/api/services/dataflow/model/DataflowPackage/setName(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/util/PackageUtil$PackageAttributes/PackageUtil$PackageAttributes(long,java.lang.String,boolean,com.google.api.services.dataflow.model.DataflowPackage,java.lang.String)|",
      "|java+method:///org/apache/beam/sdk/util/IOChannelUtils/resolve(java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/beam/runners/dataflow/util/PackageUtil/getUniqueContentName(java.io.File,java.lang.String)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/CountingOutputStream/CountingOutputStream(java.io.OutputStream)|",
      "|java+method:///java/io/File/isDirectory()|",
      "|java+method:///com/fasterxml/jackson/core/Base64Variant/encode(byte%5B%5D)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/hash/HashCode/asBytes()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/ByteSource/copyTo(java.io.OutputStream)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/CountingOutputStream/close()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/hash/Hasher/hash()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/hash/Hashing/md5()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/CountingOutputStream/flush()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/hash/Funnels/asOutputStream(org.apache.beam.runners.dataflow.repackaged.com.google.common.hash.PrimitiveSink)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/CountingOutputStream/getCount()|",
      "|java+method:///java/io/File/getPath()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/Files/asByteSource(java.io.File)|",
      "|java+method:///com/google/api/services/dataflow/model/DataflowPackage/setLocation(java.lang.String)|",
      "|java+method:///org/apache/beam/sdk/util/ZipFiles/zipDirectory(java.io.File,java.io.OutputStream)|",
      "|java+constructor:///com/google/api/services/dataflow/model/DataflowPackage/DataflowPackage()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///com/google/api/services/dataflow/model/DataflowPackage/setName(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/util/PackageUtil$PackageAttributes/PackageUtil$PackageAttributes(long,java.lang.String,boolean,com.google.api.services.dataflow.model.DataflowPackage,java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/util/PackageUtil/getUniqueContentName(java.io.File,java.lang.String)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/CountingOutputStream/CountingOutputStream(java.io.OutputStream)|",
      "|java+method:///java/io/File/isDirectory()|",
      "|java+method:///com/fasterxml/jackson/core/Base64Variant/encode(byte%5B%5D)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/hash/HashCode/asBytes()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/ByteSource/copyTo(java.io.OutputStream)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/CountingOutputStream/close()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/hash/Hasher/hash()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/hash/Hashing/md5()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/CountingOutputStream/flush()|",
      "|java+method:///org/apache/beam/sdk/io/FileSystems/matchNewResource(java.lang.String,boolean)|",
      "|java+method:///org/apache/beam/sdk/io/fs/ResourceId/toString()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/hash/HashFunction/newHasher()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/hash/Funnels/asOutputStream(org.apache.beam.runners.dataflow.repackaged.com.google.common.hash.PrimitiveSink)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/CountingOutputStream/getCount()|",
      "|java+method:///java/io/File/getPath()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/beam/sdk/io/fs/ResourceId/resolve(java.lang.String,org.apache.beam.sdk.io.fs.ResolveOptions)|"
    ],
    "affectedLib": "com.google.apis:google-api-services-dataflow:v1b3-rev196-1.22.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/util/DataflowTransport/chainHttpRequestInitializer(com.google.auth.Credentials,com.google.api.client.http.HttpRequestInitializer)|",
    "called": "|java+constructor:///com/google/auth/http/HttpCredentialsAdapter/HttpCredentialsAdapter(com.google.auth.Credentials)|",
    "v1Body": [
      "|java+method:///org/apache/beam/sdk/util/NullCredentialInitializer/throwNullCredentialException()|",
      "|java+constructor:///com/google/cloud/hadoop/util/ChainingHttpRequestInitializer/ChainingHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer%5B%5D)|",
      "|java+constructor:///com/google/auth/http/HttpCredentialsAdapter/HttpCredentialsAdapter(com.google.auth.Credentials)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/sdk/extensions/gcp/auth/NullCredentialInitializer/throwNullCredentialException()|",
      "|java+constructor:///com/google/cloud/hadoop/util/ChainingHttpRequestInitializer/ChainingHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer%5B%5D)|",
      "|java+constructor:///com/google/auth/http/HttpCredentialsAdapter/HttpCredentialsAdapter(com.google.auth.Credentials)|"
    ],
    "affectedLib": "com.google.auth:google-auth-library-oauth2-http:0.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.beam:beam-runners-google-cloud-dataflow-java:0.6.0",
    "coordinatesV2": "org.apache.beam:beam-runners-google-cloud-dataflow-java:2.0.0",
    "caller": "|java+method:///org/apache/beam/runners/dataflow/util/PackageUtil/createPackageAttributes(java.io.File,java.lang.String,java.lang.String)|",
    "called": "|java+method:///com/fasterxml/jackson/core/Base64Variant/encode(byte%5B%5D)|",
    "v1Body": [
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/Files/asByteSource(java.io.File)|",
      "|java+method:///com/google/api/services/dataflow/model/DataflowPackage/setLocation(java.lang.String)|",
      "|java+method:///org/apache/beam/sdk/util/ZipFiles/zipDirectory(java.io.File,java.io.OutputStream)|",
      "|java+constructor:///com/google/api/services/dataflow/model/DataflowPackage/DataflowPackage()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/hash/HashFunction/newHasher()|",
      "|java+method:///com/google/api/services/dataflow/model/DataflowPackage/setName(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/util/PackageUtil$PackageAttributes/PackageUtil$PackageAttributes(long,java.lang.String,boolean,com.google.api.services.dataflow.model.DataflowPackage,java.lang.String)|",
      "|java+method:///org/apache/beam/sdk/util/IOChannelUtils/resolve(java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/beam/runners/dataflow/util/PackageUtil/getUniqueContentName(java.io.File,java.lang.String)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/CountingOutputStream/CountingOutputStream(java.io.OutputStream)|",
      "|java+method:///java/io/File/isDirectory()|",
      "|java+method:///com/fasterxml/jackson/core/Base64Variant/encode(byte%5B%5D)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/hash/HashCode/asBytes()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/ByteSource/copyTo(java.io.OutputStream)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/CountingOutputStream/close()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/hash/Hasher/hash()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/hash/Hashing/md5()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/CountingOutputStream/flush()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/hash/Funnels/asOutputStream(org.apache.beam.runners.dataflow.repackaged.com.google.common.hash.PrimitiveSink)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/CountingOutputStream/getCount()|",
      "|java+method:///java/io/File/getPath()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/Files/asByteSource(java.io.File)|",
      "|java+method:///com/google/api/services/dataflow/model/DataflowPackage/setLocation(java.lang.String)|",
      "|java+method:///org/apache/beam/sdk/util/ZipFiles/zipDirectory(java.io.File,java.io.OutputStream)|",
      "|java+constructor:///com/google/api/services/dataflow/model/DataflowPackage/DataflowPackage()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///com/google/api/services/dataflow/model/DataflowPackage/setName(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/util/PackageUtil$PackageAttributes/PackageUtil$PackageAttributes(long,java.lang.String,boolean,com.google.api.services.dataflow.model.DataflowPackage,java.lang.String)|",
      "|java+method:///org/apache/beam/runners/dataflow/util/PackageUtil/getUniqueContentName(java.io.File,java.lang.String)|",
      "|java+constructor:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/CountingOutputStream/CountingOutputStream(java.io.OutputStream)|",
      "|java+method:///java/io/File/isDirectory()|",
      "|java+method:///com/fasterxml/jackson/core/Base64Variant/encode(byte%5B%5D)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/hash/HashCode/asBytes()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/ByteSource/copyTo(java.io.OutputStream)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/CountingOutputStream/close()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/hash/Hasher/hash()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/hash/Hashing/md5()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/CountingOutputStream/flush()|",
      "|java+method:///org/apache/beam/sdk/io/FileSystems/matchNewResource(java.lang.String,boolean)|",
      "|java+method:///org/apache/beam/sdk/io/fs/ResourceId/toString()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/hash/HashFunction/newHasher()|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/hash/Funnels/asOutputStream(org.apache.beam.runners.dataflow.repackaged.com.google.common.hash.PrimitiveSink)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/beam/runners/dataflow/repackaged/com/google/common/io/CountingOutputStream/getCount()|",
      "|java+method:///java/io/File/getPath()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/beam/sdk/io/fs/ResourceId/resolve(java.lang.String,org.apache.beam.sdk.io.fs.ResolveOptions)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-core:2.8.8",
    "change": "UPDATED"
  }
]