[
  {
    "coordinatesV1": "io.druid:druid-processing:0.12.0",
    "coordinatesV2": "io.druid:druid-processing:0.11.0",
    "caller": "|java+method:///io/druid/segment/IndexIO$LegacyIndexLoader/load(java.io.File,com.fasterxml.jackson.databind.ObjectMapper)|",
    "called": "|java+constructor:///io/druid/collections/bitmap/ConciseBitmapFactory/ConciseBitmapFactory()|",
    "v1Body": [
      "|java+method:///io/druid/segment/MMappedIndex/getBitmapIndexes()|",
      "|java+method:///io/druid/segment/MMappedIndex/getSpatialIndexes()|",
      "|java+method:///io/druid/segment/MMappedIndex/getFileMapper()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/druid/segment/column/ColumnConfig/columnCacheSizeBytes()|",
      "|java+method:///io/druid/segment/MetricHolder/getType()|",
      "|java+constructor:///io/druid/segment/serde/FloatGenericColumnSupplier/FloatGenericColumnSupplier(io.druid.segment.data.CompressedFloatsIndexedSupplier,java.nio.ByteOrder)|",
      "|java+constructor:///io/druid/segment/column/ColumnBuilder/ColumnBuilder()|",
      "|java+method:///io/druid/segment/column/ColumnBuilder/build()|",
      "|java+method:///io/druid/segment/MMappedIndex/getMetricHolder(java.lang.String)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///io/druid/segment/MMappedIndex/getAvailableMetrics()|",
      "|java+method:///io/druid/segment/column/ColumnBuilder/setDictionaryEncodedColumn(com.google.common.base.Supplier)|",
      "|java+constructor:///io/druid/collections/bitmap/ConciseBitmapFactory/ConciseBitmapFactory()|",
      "|java+method:///io/druid/segment/column/ColumnBuilder/setGenericColumn(com.google.common.base.Supplier)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///io/druid/segment/serde/ComplexColumnPartSupplier/ComplexColumnPartSupplier(java.lang.String,io.druid.segment.data.GenericIndexed)|",
      "|java+method:///io/druid/segment/MMappedIndex/getDimValueLookup(java.lang.String)|",
      "|java+method:///io/druid/segment/MMappedIndex/getAvailableDimensions()|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///io/druid/segment/MMappedIndex/getDimColumn(java.lang.String)|",
      "|java+method:///io/druid/segment/column/ColumnBuilder/setHasMultipleValues(boolean)|",
      "|java+method:///io/druid/segment/column/ColumnBuilder/setComplexColumn(com.google.common.base.Supplier)|",
      "|java+constructor:///io/druid/segment/serde/BitmapIndexColumnPartSupplier/BitmapIndexColumnPartSupplier(io.druid.collections.bitmap.BitmapFactory,io.druid.segment.data.GenericIndexed,io.druid.segment.data.GenericIndexed)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/iterator()|",
      "|java+method:///io/druid/segment/column/ColumnBuilder/setBitmapIndex(com.google.common.base.Supplier)|",
      "|java+constructor:///io/druid/segment/serde/LongGenericColumnSupplier/LongGenericColumnSupplier(io.druid.segment.data.CompressedLongsIndexedSupplier)|",
      "|java+constructor:///io/druid/segment/serde/DictionaryEncodedColumnSupplier/DictionaryEncodedColumnSupplier(io.druid.segment.data.GenericIndexed,com.google.common.base.Supplier,com.google.common.base.Supplier,int)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/druid/segment/IndexIO$IndexIOHandler/mapDir(java.io.File)|",
      "|java+constructor:///io/druid/segment/data/ArrayIndexed/ArrayIndexed(java.lang.Object%5B%5D,java.lang.Class)|",
      "|java+method:///io/druid/segment/MMappedIndex/getDataInterval()|",
      "|java+method:///io/druid/segment/MetricHolder/getTypeName()|",
      "|java+constructor:///io/druid/segment/SimpleQueryableIndex/SimpleQueryableIndex(org.joda.time.Interval,io.druid.segment.data.Indexed,io.druid.segment.data.Indexed,io.druid.collections.bitmap.BitmapFactory,java.util.Map,io.druid.java.util.common.io.smoosh.SmooshedFileMapper,io.druid.segment.Metadata)|",
      "|java+method:///java/util/Set/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/segment/column/ColumnBuilder/setType(io.druid.segment.column.ValueType)|",
      "|java+method:///io/druid/segment/column/ColumnBuilder/setSpatialIndex(com.google.common.base.Supplier)|",
      "|java+method:///com/google/common/collect/Sets/newTreeSet()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///com/google/common/base/Suppliers/ofInstance(java.lang.Object)|",
      "|java+constructor:///io/druid/segment/serde/SpatialIndexColumnPartSupplier/SpatialIndexColumnPartSupplier(io.druid.collections.spatial.ImmutableRTree)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/segment/MMappedIndex/getBitmapIndexes()|",
      "|java+method:///io/druid/segment/MMappedIndex/getSpatialIndexes()|",
      "|java+method:///io/druid/segment/MMappedIndex/getFileMapper()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/druid/segment/column/ColumnConfig/columnCacheSizeBytes()|",
      "|java+method:///io/druid/segment/MetricHolder/getType()|",
      "|java+constructor:///io/druid/segment/column/ColumnBuilder/ColumnBuilder()|",
      "|java+method:///io/druid/segment/column/ColumnBuilder/build()|",
      "|java+method:///io/druid/segment/MMappedIndex/getMetricHolder(java.lang.String)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///io/druid/segment/MMappedIndex/getAvailableMetrics()|",
      "|java+method:///io/druid/segment/column/ColumnBuilder/setDictionaryEncodedColumn(com.google.common.base.Supplier)|",
      "|java+constructor:///io/druid/collections/bitmap/ConciseBitmapFactory/ConciseBitmapFactory()|",
      "|java+method:///io/druid/segment/column/ColumnBuilder/setGenericColumn(com.google.common.base.Supplier)|",
      "|java+constructor:///io/druid/segment/serde/LongGenericColumnSupplier/LongGenericColumnSupplier(io.druid.segment.data.CompressedColumnarLongsSupplier)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///io/druid/segment/serde/ComplexColumnPartSupplier/ComplexColumnPartSupplier(java.lang.String,io.druid.segment.data.GenericIndexed)|",
      "|java+method:///io/druid/segment/MMappedIndex/getDimValueLookup(java.lang.String)|",
      "|java+method:///io/druid/segment/MMappedIndex/getAvailableDimensions()|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///io/druid/segment/MMappedIndex/getDimColumn(java.lang.String)|",
      "|java+method:///io/druid/segment/column/ColumnBuilder/setHasMultipleValues(boolean)|",
      "|java+method:///io/druid/segment/column/ColumnBuilder/setComplexColumn(com.google.common.base.Supplier)|",
      "|java+constructor:///io/druid/segment/serde/BitmapIndexColumnPartSupplier/BitmapIndexColumnPartSupplier(io.druid.collections.bitmap.BitmapFactory,io.druid.segment.data.GenericIndexed,io.druid.segment.data.GenericIndexed)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/iterator()|",
      "|java+method:///io/druid/segment/column/ColumnBuilder/setBitmapIndex(com.google.common.base.Supplier)|",
      "|java+constructor:///io/druid/segment/serde/FloatGenericColumnSupplier/FloatGenericColumnSupplier(io.druid.segment.data.CompressedColumnarFloatsSupplier)|",
      "|java+constructor:///io/druid/segment/serde/DictionaryEncodedColumnSupplier/DictionaryEncodedColumnSupplier(io.druid.segment.data.GenericIndexed,com.google.common.base.Supplier,com.google.common.base.Supplier,int)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/druid/segment/IndexIO$IndexIOHandler/mapDir(java.io.File)|",
      "|java+constructor:///io/druid/segment/data/ArrayIndexed/ArrayIndexed(java.lang.Object%5B%5D,java.lang.Class)|",
      "|java+method:///io/druid/segment/MMappedIndex/getDataInterval()|",
      "|java+method:///io/druid/segment/MetricHolder/getTypeName()|",
      "|java+constructor:///io/druid/segment/SimpleQueryableIndex/SimpleQueryableIndex(org.joda.time.Interval,io.druid.segment.data.Indexed,io.druid.segment.data.Indexed,io.druid.collections.bitmap.BitmapFactory,java.util.Map,io.druid.java.util.common.io.smoosh.SmooshedFileMapper,io.druid.segment.Metadata)|",
      "|java+method:///java/util/Set/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/segment/column/ColumnBuilder/setType(io.druid.segment.column.ValueType)|",
      "|java+method:///io/druid/segment/column/ColumnBuilder/setSpatialIndex(com.google.common.base.Supplier)|",
      "|java+method:///com/google/common/collect/Sets/newTreeSet()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///com/google/common/base/Suppliers/ofInstance(java.lang.Object)|",
      "|java+constructor:///io/druid/segment/serde/SpatialIndexColumnPartSupplier/SpatialIndexColumnPartSupplier(io.druid.collections.spatial.ImmutableRTree)|"
    ],
    "affectedLib": "io.druid:bytebuffer-collections:0.11.0",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.12.0",
    "coordinatesV2": "io.druid:druid-processing:0.11.0",
    "caller": "|java+method:///io/druid/segment/ColumnSelectorBitmapIndexSelector/getSpatialIndex(java.lang.String)|",
    "called": "|java+constructor:///io/druid/collections/spatial/ImmutableRTree/ImmutableRTree()|",
    "v1Body": [
      "|java+method:///io/druid/segment/column/Column/getSpatialIndex()|",
      "|java+method:///io/druid/segment/column/SpatialIndex/getRTree()|",
      "|java+constructor:///io/druid/collections/spatial/ImmutableRTree/ImmutableRTree()|",
      "|java+method:///io/druid/segment/ColumnSelectorBitmapIndexSelector/isVirtualColumn(java.lang.String)|",
      "|java+method:///io/druid/segment/ColumnSelector/getColumn(java.lang.String)|",
      "|java+method:///io/druid/segment/column/ColumnCapabilities/hasSpatialIndexes()|",
      "|java+method:///io/druid/segment/column/Column/getCapabilities()|"
    ],
    "v2Body": [
      "|java+method:///io/druid/collections/spatial/ImmutableRTree/empty()|",
      "|java+method:///io/druid/segment/column/Column/getSpatialIndex()|",
      "|java+method:///io/druid/segment/column/SpatialIndex/getRTree()|",
      "|java+method:///io/druid/segment/ColumnSelectorBitmapIndexSelector/isVirtualColumn(java.lang.String)|",
      "|java+method:///io/druid/segment/ColumnSelector/getColumn(java.lang.String)|",
      "|java+method:///io/druid/segment/column/ColumnCapabilities/hasSpatialIndexes()|",
      "|java+method:///io/druid/segment/column/Column/getCapabilities()|"
    ],
    "affectedLib": "io.druid:bytebuffer-collections:0.11.0",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.12.0",
    "coordinatesV2": "io.druid:druid-processing:0.11.0",
    "caller": "|java+initializer:///io/druid/segment/data/ConciseBitmapSerdeFactory/ConciseBitmapSerdeFactory$initializer|",
    "called": "|java+constructor:///io/druid/collections/bitmap/ConciseBitmapFactory/ConciseBitmapFactory()|",
    "v1Body": [
      "|java+method:///io/druid/segment/data/ConciseBitmapSerdeFactory$1/nullsFirst()|",
      "|java+constructor:///io/druid/collections/bitmap/ConciseBitmapFactory/ConciseBitmapFactory()|",
      "|java+constructor:///io/druid/segment/data/ConciseBitmapSerdeFactory$ImmutableConciseSetObjectStrategy/ConciseBitmapSerdeFactory$ImmutableConciseSetObjectStrategy(io.druid.segment.data.ConciseBitmapSerdeFactory$1)|",
      "|java+constructor:///io/druid/segment/data/ConciseBitmapSerdeFactory$1/ConciseBitmapSerdeFactory$1()|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/collections/bitmap/ConciseBitmapFactory/ConciseBitmapFactory()|",
      "|java+constructor:///io/druid/segment/data/ConciseBitmapSerdeFactory$ImmutableConciseSetObjectStrategy/ConciseBitmapSerdeFactory$ImmutableConciseSetObjectStrategy(io.druid.segment.data.ConciseBitmapSerdeFactory$1)|"
    ],
    "affectedLib": "io.druid:bytebuffer-collections:0.11.0",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.12.0",
    "coordinatesV2": "io.druid:druid-processing:0.11.0",
    "caller": "|java+initializer:///io/druid/query/search/AutoStrategy/AutoStrategy$initializer|",
    "called": "|java+constructor:///com/metamx/emitter/EmittingLogger/EmittingLogger(java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///com/metamx/emitter/EmittingLogger/EmittingLogger(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/java/util/emitter/EmittingLogger/EmittingLogger(java.lang.Class)|"
    ],
    "affectedLib": "com.metamx:java-util:1.3.2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.12.0",
    "coordinatesV2": "io.druid:druid-processing:0.11.0",
    "caller": "|java+method:///io/druid/query/DefaultQueryMetrics/setDimension(java.lang.String,java.lang.String)|",
    "called": "|java+method:///com/metamx/emitter/service/ServiceMetricEvent$Builder/setDimension(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///com/metamx/emitter/service/ServiceMetricEvent$Builder/setDimension(java.lang.String,java.lang.String)|",
      "|java+method:///io/druid/query/DefaultQueryMetrics/checkModifiedFromOwnerThread()|"
    ],
    "v2Body": [
      "|java+method:///io/druid/java/util/emitter/service/ServiceMetricEvent$Builder/setDimension(java.lang.String,java.lang.String)|",
      "|java+method:///io/druid/query/DefaultQueryMetrics/checkModifiedFromOwnerThread()|"
    ],
    "affectedLib": "com.metamx:java-util:1.3.2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.12.0",
    "coordinatesV2": "io.druid:druid-processing:0.11.0",
    "caller": "|java+constructor:///io/druid/query/ExecutorServiceMonitor/ExecutorServiceMonitor()|",
    "called": "|java+constructor:///com/metamx/metrics/AbstractMonitor/AbstractMonitor()|",
    "v1Body": [
      "|java+constructor:///com/metamx/emitter/service/ServiceMetricEvent$Builder/ServiceMetricEvent$Builder()|",
      "|java+constructor:///com/metamx/metrics/AbstractMonitor/AbstractMonitor()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/java/util/metrics/AbstractMonitor/AbstractMonitor()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+constructor:///io/druid/java/util/emitter/service/ServiceMetricEvent$Builder/ServiceMetricEvent$Builder()|"
    ],
    "affectedLib": "com.metamx:java-util:1.3.2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.12.0",
    "coordinatesV2": "io.druid:druid-processing:0.11.0",
    "caller": "|java+method:///io/druid/query/aggregation/first/LongFirstAggregatorFactory/getCacheKey()|",
    "called": "|java+method:///com/metamx/common/StringUtils/toUtf8(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///java/nio/ByteBuffer/put(byte%5B%5D)|",
      "|java+method:///com/metamx/common/StringUtils/toUtf8(java.lang.String)|",
      "|java+method:///java/nio/ByteBuffer/put(byte)|",
      "|java+method:///java/nio/ByteBuffer/array()|"
    ],
    "v2Body": [
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///java/nio/ByteBuffer/put(byte%5B%5D)|",
      "|java+method:///java/nio/ByteBuffer/put(byte)|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///io/druid/java/util/common/StringUtils/toUtf8(java.lang.String)|"
    ],
    "affectedLib": "com.metamx:java-util:1.3.2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.12.0",
    "coordinatesV2": "io.druid:druid-processing:0.11.0",
    "caller": "|java+constructor:///io/druid/query/groupby/epinephelinae/ByteBufferIntList/ByteBufferIntList(java.nio.ByteBuffer,int)|",
    "called": "|java+constructor:///com/metamx/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///java/nio/ByteBuffer/capacity()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///com/metamx/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///java/nio/ByteBuffer/capacity()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "com.metamx:java-util:1.3.2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.12.0",
    "coordinatesV2": "io.druid:druid-processing:0.11.0",
    "caller": "|java+initializer:///io/druid/segment/IndexIO/IndexIO$initializer|",
    "called": "|java+constructor:///com/metamx/emitter/EmittingLogger/EmittingLogger(java.lang.Class)|",
    "v1Body": [
      "|java+method:///java/nio/ByteOrder/nativeOrder()|",
      "|java+constructor:///io/druid/common/utils/SerializerUtils/SerializerUtils()|",
      "|java+constructor:///com/metamx/emitter/EmittingLogger/EmittingLogger(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///java/nio/ByteOrder/nativeOrder()|",
      "|java+constructor:///io/druid/common/utils/SerializerUtils/SerializerUtils()|",
      "|java+constructor:///io/druid/java/util/emitter/EmittingLogger/EmittingLogger(java.lang.Class)|"
    ],
    "affectedLib": "com.metamx:java-util:1.3.2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.12.0",
    "coordinatesV2": "io.druid:druid-processing:0.11.0",
    "caller": "|java+method:///io/druid/query/aggregation/last/DoubleLastAggregatorFactory/getCacheKey()|",
    "called": "|java+method:///com/metamx/common/StringUtils/toUtf8(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///java/nio/ByteBuffer/put(byte%5B%5D)|",
      "|java+method:///com/metamx/common/StringUtils/toUtf8(java.lang.String)|",
      "|java+method:///java/nio/ByteBuffer/put(byte)|",
      "|java+method:///java/nio/ByteBuffer/array()|"
    ],
    "v2Body": [
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///java/nio/ByteBuffer/put(byte%5B%5D)|",
      "|java+method:///java/nio/ByteBuffer/put(byte)|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///io/druid/java/util/common/StringUtils/toUtf8(java.lang.String)|"
    ],
    "affectedLib": "com.metamx:java-util:1.3.2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.12.0",
    "coordinatesV2": "io.druid:druid-processing:0.11.0",
    "caller": "|java+initializer:///io/druid/query/RetryQueryRunner/RetryQueryRunner$initializer|",
    "called": "|java+constructor:///com/metamx/emitter/EmittingLogger/EmittingLogger(java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///com/metamx/emitter/EmittingLogger/EmittingLogger(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/java/util/emitter/EmittingLogger/EmittingLogger(java.lang.Class)|"
    ],
    "affectedLib": "com.metamx:java-util:1.3.2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.12.0",
    "coordinatesV2": "io.druid:druid-processing:0.11.0",
    "caller": "|java+method:///io/druid/query/aggregation/last/FloatLastAggregatorFactory/getCacheKey()|",
    "called": "|java+method:///com/metamx/common/StringUtils/toUtf8(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///java/nio/ByteBuffer/put(byte%5B%5D)|",
      "|java+method:///com/metamx/common/StringUtils/toUtf8(java.lang.String)|",
      "|java+method:///java/nio/ByteBuffer/put(byte)|",
      "|java+method:///java/nio/ByteBuffer/array()|"
    ],
    "v2Body": [
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///java/nio/ByteBuffer/put(byte%5B%5D)|",
      "|java+method:///java/nio/ByteBuffer/put(byte)|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///io/druid/java/util/common/StringUtils/toUtf8(java.lang.String)|"
    ],
    "affectedLib": "com.metamx:java-util:1.3.2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.12.0",
    "coordinatesV2": "io.druid:druid-processing:0.11.0",
    "caller": "|java+initializer:///io/druid/query/search/SearchStrategySelector/SearchStrategySelector$initializer|",
    "called": "|java+constructor:///com/metamx/emitter/EmittingLogger/EmittingLogger(java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///com/metamx/emitter/EmittingLogger/EmittingLogger(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/java/util/emitter/EmittingLogger/EmittingLogger(java.lang.Class)|"
    ],
    "affectedLib": "com.metamx:java-util:1.3.2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.12.0",
    "coordinatesV2": "io.druid:druid-processing:0.11.0",
    "caller": "|java+method:///io/druid/query/aggregation/first/FloatFirstAggregatorFactory/getCacheKey()|",
    "called": "|java+method:///com/metamx/common/StringUtils/toUtf8(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///java/nio/ByteBuffer/put(byte%5B%5D)|",
      "|java+method:///com/metamx/common/StringUtils/toUtf8(java.lang.String)|",
      "|java+method:///java/nio/ByteBuffer/put(byte)|",
      "|java+method:///java/nio/ByteBuffer/array()|"
    ],
    "v2Body": [
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///java/nio/ByteBuffer/put(byte%5B%5D)|",
      "|java+method:///java/nio/ByteBuffer/put(byte)|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///io/druid/java/util/common/StringUtils/toUtf8(java.lang.String)|"
    ],
    "affectedLib": "com.metamx:java-util:1.3.2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.12.0",
    "coordinatesV2": "io.druid:druid-processing:0.11.0",
    "caller": "|java+constructor:///io/druid/query/DefaultQueryMetrics/DefaultQueryMetrics(com.fasterxml.jackson.databind.ObjectMapper)|",
    "called": "|java+constructor:///com/metamx/emitter/service/ServiceMetricEvent$Builder/ServiceMetricEvent$Builder()|",
    "v1Body": [
      "|java+constructor:///com/metamx/emitter/service/ServiceMetricEvent$Builder/ServiceMetricEvent$Builder()|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+constructor:///io/druid/java/util/emitter/service/ServiceMetricEvent$Builder/ServiceMetricEvent$Builder()|"
    ],
    "affectedLib": "com.metamx:java-util:1.3.2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.12.0",
    "coordinatesV2": "io.druid:druid-processing:0.11.0",
    "caller": "|java+method:///io/druid/query/DefaultQueryMetrics/interval(io.druid.query.Query)|",
    "called": "|java+method:///com/metamx/emitter/service/ServiceMetricEvent$Builder/setDimension(java.lang.String,java.lang.String%5B%5D)|",
    "v1Body": [
      "|java+method:///java/util/stream/Stream/map(java.util.function.Function)|",
      "|java+method:///com/metamx/emitter/service/ServiceMetricEvent$Builder/setDimension(java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///java/util/stream/Stream/toArray(java.util.function.IntFunction)|",
      "|java+method:///java/util/List/stream()|",
      "|java+method:///io/druid/query/DefaultQueryMetrics/checkModifiedFromOwnerThread()|",
      "|java+method:///io/druid/query/Query/getIntervals()|"
    ],
    "v2Body": [
      "|java+method:///java/util/stream/Stream/map(java.util.function.Function)|",
      "|java+method:///io/druid/java/util/emitter/service/ServiceMetricEvent$Builder/setDimension(java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///java/util/stream/Stream/toArray(java.util.function.IntFunction)|",
      "|java+method:///java/util/List/stream()|",
      "|java+method:///io/druid/query/DefaultQueryMetrics/checkModifiedFromOwnerThread()|",
      "|java+method:///io/druid/query/Query/getIntervals()|"
    ],
    "affectedLib": "com.metamx:java-util:1.3.2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.12.0",
    "coordinatesV2": "io.druid:druid-processing:0.11.0",
    "caller": "|java+initializer:///io/druid/segment/ReferenceCountingSegment/ReferenceCountingSegment$initializer|",
    "called": "|java+constructor:///com/metamx/emitter/EmittingLogger/EmittingLogger(java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///com/metamx/emitter/EmittingLogger/EmittingLogger(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/java/util/emitter/EmittingLogger/EmittingLogger(java.lang.Class)|"
    ],
    "affectedLib": "com.metamx:java-util:1.3.2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.12.0",
    "coordinatesV2": "io.druid:druid-processing:0.11.0",
    "caller": "|java+method:///io/druid/query/aggregation/first/DoubleFirstAggregatorFactory/getCacheKey()|",
    "called": "|java+method:///com/metamx/common/StringUtils/toUtf8(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///java/nio/ByteBuffer/put(byte%5B%5D)|",
      "|java+method:///com/metamx/common/StringUtils/toUtf8(java.lang.String)|",
      "|java+method:///java/nio/ByteBuffer/put(byte)|",
      "|java+method:///java/nio/ByteBuffer/array()|"
    ],
    "v2Body": [
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///java/nio/ByteBuffer/put(byte%5B%5D)|",
      "|java+method:///java/nio/ByteBuffer/put(byte)|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///io/druid/java/util/common/StringUtils/toUtf8(java.lang.String)|"
    ],
    "affectedLib": "com.metamx:java-util:1.3.2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.12.0",
    "coordinatesV2": "io.druid:druid-processing:0.11.0",
    "caller": "|java+method:///io/druid/query/aggregation/last/LongLastAggregatorFactory/getCacheKey()|",
    "called": "|java+method:///com/metamx/common/StringUtils/toUtf8(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///java/nio/ByteBuffer/put(byte%5B%5D)|",
      "|java+method:///com/metamx/common/StringUtils/toUtf8(java.lang.String)|",
      "|java+method:///java/nio/ByteBuffer/put(byte)|",
      "|java+method:///java/nio/ByteBuffer/array()|"
    ],
    "v2Body": [
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///java/nio/ByteBuffer/put(byte%5B%5D)|",
      "|java+method:///java/nio/ByteBuffer/put(byte)|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///io/druid/java/util/common/StringUtils/toUtf8(java.lang.String)|"
    ],
    "affectedLib": "com.metamx:java-util:1.3.2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/groupby/epinephelinae/SpillingGrouper/iterator(boolean)|",
    "called": "|java+method:///io/druid/java/util/common/io/Closer/create()|",
    "v1Body": [
      "|java+method:///io/druid/query/groupby/epinephelinae/Grouper$KeySerde/keyClazz()|",
      "|java+method:///com/google/common/collect/Iterators/transform(java.util.Iterator,com.google.common.base.Function)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/druid/query/groupby/epinephelinae/Grouper/iterator(boolean)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///io/druid/query/groupby/epinephelinae/SpillingGrouper$1/SpillingGrouper$1(io.druid.query.groupby.epinephelinae.SpillingGrouper)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///io/druid/query/groupby/epinephelinae/SpillingGrouper/read(java.io.File,java.lang.Class)|",
      "|java+method:///io/druid/query/groupby/epinephelinae/Groupers/mergeIterators(java.lang.Iterable,java.util.Comparator)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/druid/query/groupby/epinephelinae/Grouper/iterator(boolean)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///io/druid/java/util/common/CloseableIterators/withEmptyBaggage(java.util.Iterator)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///io/druid/java/util/common/io/Closer/register(java.io.Closeable)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///io/druid/java/util/common/CloseableIterators/wrap(java.util.Iterator,java.io.Closeable)|",
      "|java+constructor:///io/druid/query/groupby/epinephelinae/SpillingGrouper$1/SpillingGrouper$1(io.druid.query.groupby.epinephelinae.SpillingGrouper)|",
      "|java+method:///io/druid/java/util/common/CloseableIterators/concat(java.util.List)|",
      "|java+method:///io/druid/query/groupby/epinephelinae/Grouper$KeySerde/keyClazz()|",
      "|java+method:///com/google/common/collect/Iterators/transform(java.util.Iterator,com.google.common.base.Function)|",
      "|java+method:///io/druid/java/util/common/CloseableIterators/mergeSorted(java.util.List,java.util.Comparator)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///io/druid/query/groupby/epinephelinae/SpillingGrouper/read(java.io.File,java.lang.Class)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/druid/java/util/common/io/Closer/create()|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/aggregation/first/FloatFirstAggregatorFactory/getCacheKey()|",
    "called": "|java+method:///io/druid/java/util/common/StringUtils/toUtf8(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///java/nio/ByteBuffer/put(byte%5B%5D)|",
      "|java+method:///com/metamx/common/StringUtils/toUtf8(java.lang.String)|",
      "|java+method:///java/nio/ByteBuffer/put(byte)|",
      "|java+method:///java/nio/ByteBuffer/array()|"
    ],
    "v2Body": [
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///java/nio/ByteBuffer/put(byte%5B%5D)|",
      "|java+method:///java/nio/ByteBuffer/put(byte)|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///io/druid/java/util/common/StringUtils/toUtf8(java.lang.String)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/aggregation/last/DoubleLastAggregatorFactory/getCacheKey()|",
    "called": "|java+method:///io/druid/java/util/common/StringUtils/toUtf8(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///java/nio/ByteBuffer/put(byte%5B%5D)|",
      "|java+method:///com/metamx/common/StringUtils/toUtf8(java.lang.String)|",
      "|java+method:///java/nio/ByteBuffer/put(byte)|",
      "|java+method:///java/nio/ByteBuffer/array()|"
    ],
    "v2Body": [
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///java/nio/ByteBuffer/put(byte%5B%5D)|",
      "|java+method:///java/nio/ByteBuffer/put(byte)|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///io/druid/java/util/common/StringUtils/toUtf8(java.lang.String)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/scan/ScanQueryEngine$1$1$1/getColumnValue(int)|",
    "called": "|java+method:///io/druid/java/util/common/DateTimes/utc(long)|",
    "v1Body": [
      "|java+method:///io/druid/segment/ObjectColumnSelector/getObject()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///io/druid/java/util/common/DateTimes/utc(long)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///io/druid/java/util/common/DateTimes/utc(long)|",
      "|java+method:///io/druid/segment/BaseObjectColumnValueSelector/getObject()|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/jackson/JodaStuff$DateTimeDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "called": "|java+method:///io/druid/java/util/common/DateTimes$UtcFormatter/parse(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/joda/time/format/ISODateTimeFormat/dateTimeParser()|",
      "|java+method:///io/druid/jackson/JodaStuff$DateTimeDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///org/joda/time/format/DateTimeFormatter/parseDateTime(java.lang.String)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/mappingException(java.lang.Class)|",
      "|java+method:///org/joda/time/format/DateTimeFormatter/withOffsetParsed()|",
      "|java+method:///io/druid/java/util/common/DateTimes/utc(long)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getText()|",
      "|java+method:///io/druid/jackson/JodaStuff$DateTimeDeserializer/getValueClass()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getLongValue()|"
    ],
    "v2Body": [
      "|java+method:///io/druid/jackson/JodaStuff$DateTimeDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/mappingException(java.lang.Class)|",
      "|java+method:///io/druid/java/util/common/DateTimes$UtcFormatter/parse(java.lang.String)|",
      "|java+method:///io/druid/java/util/common/DateTimes/utc(long)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getText()|",
      "|java+method:///io/druid/jackson/JodaStuff$DateTimeDeserializer/getValueClass()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getLongValue()|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+initializer:///io/druid/segment/IndexIO/IndexIO$initializer|",
    "called": "|java+constructor:///io/druid/java/util/emitter/EmittingLogger/EmittingLogger(java.lang.Class)|",
    "v1Body": [
      "|java+method:///java/nio/ByteOrder/nativeOrder()|",
      "|java+constructor:///io/druid/common/utils/SerializerUtils/SerializerUtils()|",
      "|java+constructor:///com/metamx/emitter/EmittingLogger/EmittingLogger(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///java/nio/ByteOrder/nativeOrder()|",
      "|java+constructor:///io/druid/common/utils/SerializerUtils/SerializerUtils()|",
      "|java+constructor:///io/druid/java/util/emitter/EmittingLogger/EmittingLogger(java.lang.Class)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+initializer:///io/druid/query/RetryQueryRunner/RetryQueryRunner$initializer|",
    "called": "|java+constructor:///io/druid/java/util/emitter/EmittingLogger/EmittingLogger(java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///com/metamx/emitter/EmittingLogger/EmittingLogger(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/java/util/emitter/EmittingLogger/EmittingLogger(java.lang.Class)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/segment/MetricHolder/fromByteBuffer(java.nio.ByteBuffer,io.druid.segment.data.ObjectStrategy,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
    "called": "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///java/nio/ByteOrder/nativeOrder()|",
      "|java+method:///io/druid/segment/data/CompressedLongsIndexedSupplier/fromByteBuffer(java.nio.ByteBuffer,java.nio.ByteOrder,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+method:///java/lang/Byte/valueOf(byte)|",
      "|java+constructor:///io/druid/segment/MetricHolder/MetricHolder(java.lang.String,java.lang.String)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/read(java.nio.ByteBuffer,io.druid.segment.data.ObjectStrategy)|",
      "|java+method:///io/druid/segment/data/CompressedDoublesIndexedSupplier/fromByteBuffer(java.nio.ByteBuffer,java.nio.ByteOrder,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/read(java.nio.ByteBuffer,io.druid.segment.data.ObjectStrategy,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+method:///io/druid/common/utils/SerializerUtils/readString(java.nio.ByteBuffer)|",
      "|java+method:///io/druid/segment/data/CompressedFloatsIndexedSupplier/fromByteBuffer(java.nio.ByteBuffer,java.nio.ByteOrder,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+method:///java/nio/ByteBuffer/get()|",
      "|java+method:///io/druid/segment/serde/ComplexMetrics/getSerdeForType(java.lang.String)|",
      "|java+method:///io/druid/segment/serde/ComplexMetricSerde/getObjectStrategy()|",
      "|java+method:///io/druid/segment/MetricHolder/getTypeName()|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/segment/MetricHolder$MetricType/ordinal()|"
    ],
    "v2Body": [
      "|java+method:///java/nio/ByteOrder/nativeOrder()|",
      "|java+method:///io/druid/segment/data/CompressedColumnarFloatsSupplier/fromByteBuffer(java.nio.ByteBuffer,java.nio.ByteOrder)|",
      "|java+method:///java/lang/Byte/valueOf(byte)|",
      "|java+constructor:///io/druid/segment/MetricHolder/MetricHolder(java.lang.String,java.lang.String)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/read(java.nio.ByteBuffer,io.druid.segment.data.ObjectStrategy)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/read(java.nio.ByteBuffer,io.druid.segment.data.ObjectStrategy,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+method:///io/druid/common/utils/SerializerUtils/readString(java.nio.ByteBuffer)|",
      "|java+method:///java/nio/ByteBuffer/get()|",
      "|java+method:///io/druid/segment/serde/ComplexMetrics/getSerdeForType(java.lang.String)|",
      "|java+method:///io/druid/segment/serde/ComplexMetricSerde/getObjectStrategy()|",
      "|java+method:///io/druid/segment/MetricHolder/getTypeName()|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/segment/MetricHolder$MetricType/ordinal()|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/search/SearchStrategySelector/strategize(io.druid.query.search.SearchQuery)|",
    "called": "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///java/lang/String/hashCode()|",
      "|java+method:///io/druid/query/search/UseIndexesStrategy/of(io.druid.query.search.SearchQuery)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/query/search/SearchQueryConfig/withOverrides(io.druid.query.search.SearchQuery)|",
      "|java+method:///io/druid/query/search/CursorOnlyStrategy/of(io.druid.query.search.SearchQuery)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///io/druid/query/search/SearchQuery/getId()|",
      "|java+method:///io/druid/query/search/SearchQueryConfig/getSearchStrategy()|",
      "|java+method:///io/druid/query/search/AutoStrategy/of(io.druid.query.search.SearchQuery)|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/String/hashCode()|",
      "|java+method:///io/druid/java/util/emitter/EmittingLogger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/query/search/UseIndexesStrategy/of(io.druid.query.search.SearchQuery)|",
      "|java+method:///io/druid/query/search/SearchQueryConfig/withOverrides(io.druid.query.search.SearchQuery)|",
      "|java+method:///io/druid/query/search/CursorOnlyStrategy/of(io.druid.query.search.SearchQuery)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///io/druid/query/search/SearchQuery/getId()|",
      "|java+method:///io/druid/query/search/SearchQueryConfig/getSearchStrategy()|",
      "|java+method:///io/druid/query/search/AutoStrategy/of(io.druid.query.search.SearchQuery)|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/segment/serde/ComplexColumnSerializer/open()|",
    "called": "|java+method:///io/druid/java/util/common/StringUtils/format(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+constructor:///io/druid/segment/data/GenericIndexedWriter/GenericIndexedWriter(io.druid.segment.data.IOPeon,java.lang.String,io.druid.segment.data.ObjectStrategy)|",
      "|java+method:///io/druid/segment/data/GenericIndexedWriter/open()|",
      "|java+method:///io/druid/java/util/common/StringUtils/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/segment/data/GenericIndexedWriter/GenericIndexedWriter(io.druid.segment.writeout.SegmentWriteOutMedium,java.lang.String,io.druid.segment.data.ObjectStrategy)|",
      "|java+method:///io/druid/segment/data/GenericIndexedWriter/open()|",
      "|java+method:///io/druid/java/util/common/StringUtils/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/segment/IndexMergerV9/makeMetricsColumns(io.druid.java.util.common.io.smoosh.FileSmoosher,io.druid.segment.ProgressIndicator,java.util.List,java.util.Map,java.util.Map,java.util.List)|",
    "called": "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///io/druid/segment/serde/DoubleGenericColumnPartSerde$SerializerBuilder/withByteOrder(java.nio.ByteOrder)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/druid/segment/IndexMergerV9/makeColumn(io.druid.java.util.common.io.smoosh.FileSmoosher,java.lang.String,io.druid.segment.column.ColumnDescriptor)|",
      "|java+method:///io/druid/segment/serde/FloatGenericColumnPartSerde$SerializerBuilder/withByteOrder(java.nio.ByteOrder)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///io/druid/segment/serde/LongGenericColumnPartSerde$SerializerBuilder/withByteOrder(java.nio.ByteOrder)|",
      "|java+method:///io/druid/segment/GenericColumnSerializer/close()|",
      "|java+method:///io/druid/segment/serde/FloatGenericColumnPartSerde/serializerBuilder()|",
      "|java+method:///io/druid/java/util/common/logger/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/segment/serde/ComplexColumnPartSerde$SerializerBuilder/withDelegate(io.druid.segment.GenericColumnSerializer)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///io/druid/segment/serde/FloatGenericColumnPartSerde$SerializerBuilder/build()|",
      "|java+method:///io/druid/segment/serde/LongGenericColumnPartSerde$SerializerBuilder/build()|",
      "|java+method:///io/druid/segment/serde/ComplexColumnPartSerde/serializerBuilder()|",
      "|java+method:///io/druid/segment/serde/FloatGenericColumnPartSerde$SerializerBuilder/withDelegate(io.druid.segment.FloatColumnSerializer)|",
      "|java+method:///io/druid/segment/serde/LongGenericColumnPartSerde$SerializerBuilder/withDelegate(io.druid.segment.LongColumnSerializer)|",
      "|java+method:///io/druid/segment/serde/DoubleGenericColumnPartSerde$SerializerBuilder/withDelegate(io.druid.segment.DoubleColumnSerializer)|",
      "|java+method:///io/druid/segment/serde/ComplexColumnPartSerde$SerializerBuilder/withTypeName(java.lang.String)|",
      "|java+method:///io/druid/segment/column/ValueType/ordinal()|",
      "|java+method:///io/druid/segment/serde/ComplexColumnPartSerde$SerializerBuilder/build()|",
      "|java+method:///io/druid/segment/serde/DoubleGenericColumnPartSerde/serializerBuilder()|",
      "|java+method:///io/druid/segment/column/ColumnDescriptor$Builder/addSerde(io.druid.segment.serde.ColumnPartSerde)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///io/druid/segment/serde/DoubleGenericColumnPartSerde$SerializerBuilder/build()|",
      "|java+method:///io/druid/segment/column/ColumnDescriptor/builder()|",
      "|java+method:///io/druid/segment/serde/LongGenericColumnPartSerde/serializerBuilder()|",
      "|java+method:///io/druid/segment/column/ColumnDescriptor$Builder/setValueType(io.druid.segment.column.ValueType)|",
      "|java+method:///io/druid/segment/ProgressIndicator/startSection(java.lang.String)|",
      "|java+method:///io/druid/segment/ProgressIndicator/stopSection(java.lang.String)|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/segment/column/ColumnDescriptor$Builder/build()|"
    ],
    "v2Body": [
      "|java+method:///io/druid/segment/serde/DoubleGenericColumnPartSerde$SerializerBuilder/withByteOrder(java.nio.ByteOrder)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/druid/segment/IndexMergerV9/makeColumn(io.druid.java.util.common.io.smoosh.FileSmoosher,java.lang.String,io.druid.segment.column.ColumnDescriptor)|",
      "|java+method:///io/druid/segment/serde/FloatGenericColumnPartSerde$SerializerBuilder/withByteOrder(java.nio.ByteOrder)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///io/druid/segment/serde/LongGenericColumnPartSerde$SerializerBuilder/withByteOrder(java.nio.ByteOrder)|",
      "|java+method:///io/druid/segment/serde/FloatGenericColumnPartSerde/serializerBuilder()|",
      "|java+method:///io/druid/java/util/common/logger/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/segment/serde/ComplexColumnPartSerde$SerializerBuilder/withDelegate(io.druid.segment.GenericColumnSerializer)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///io/druid/segment/serde/FloatGenericColumnPartSerde$SerializerBuilder/build()|",
      "|java+method:///io/druid/segment/serde/LongGenericColumnPartSerde$SerializerBuilder/build()|",
      "|java+method:///io/druid/segment/serde/ComplexColumnPartSerde/serializerBuilder()|",
      "|java+method:///io/druid/segment/serde/FloatGenericColumnPartSerde$SerializerBuilder/withDelegate(io.druid.segment.FloatColumnSerializer)|",
      "|java+method:///io/druid/segment/serde/LongGenericColumnPartSerde$SerializerBuilder/withDelegate(io.druid.segment.LongColumnSerializer)|",
      "|java+method:///io/druid/segment/serde/DoubleGenericColumnPartSerde$SerializerBuilder/withDelegate(io.druid.segment.DoubleColumnSerializer)|",
      "|java+method:///io/druid/segment/serde/ComplexColumnPartSerde$SerializerBuilder/withTypeName(java.lang.String)|",
      "|java+method:///io/druid/segment/column/ValueType/ordinal()|",
      "|java+method:///io/druid/segment/serde/ComplexColumnPartSerde$SerializerBuilder/build()|",
      "|java+method:///io/druid/segment/serde/DoubleGenericColumnPartSerde/serializerBuilder()|",
      "|java+method:///io/druid/segment/column/ColumnDescriptor$Builder/addSerde(io.druid.segment.serde.ColumnPartSerde)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///io/druid/segment/serde/DoubleGenericColumnPartSerde$SerializerBuilder/build()|",
      "|java+method:///io/druid/segment/column/ColumnDescriptor/builder()|",
      "|java+method:///io/druid/segment/serde/LongGenericColumnPartSerde/serializerBuilder()|",
      "|java+method:///io/druid/segment/column/ColumnDescriptor$Builder/setValueType(io.druid.segment.column.ValueType)|",
      "|java+method:///io/druid/segment/ProgressIndicator/startSection(java.lang.String)|",
      "|java+method:///io/druid/segment/ProgressIndicator/stopSection(java.lang.String)|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/segment/column/ColumnDescriptor$Builder/build()|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/aggregation/AggregatorFactory/mergeAggregators(java.util.List)|",
    "called": "|java+method:///io/druid/java/util/common/logger/Logger/warn(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/druid/query/aggregation/AggregatorFactory/getName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map/size()|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///io/druid/java/util/common/logger/Logger/warn(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/util/LinkedHashMap/LinkedHashMap()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Collection/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/query/aggregation/AggregatorFactory/getMergingFactory(io.druid.query.aggregation.AggregatorFactory)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/druid/query/aggregation/AggregatorFactory/getName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///io/druid/java/util/common/logger/Logger/warn(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/util/LinkedHashMap/LinkedHashMap()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Arrays/setAll(java.lang.Object%5B%5D,java.util.function.IntFunction)|",
      "|java+method:///java/util/Map/size()|",
      "|java+method:///java/util/Collection/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/query/aggregation/AggregatorFactory/getMergingFactory(io.druid.query.aggregation.AggregatorFactory)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/segment/IntIteratorUtils/skip(it.unimi.dsi.fastutil.ints.IntIterator,int)|",
    "called": "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///it/unimi/dsi/fastutil/ints/IntIterator/next()|",
      "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///it/unimi/dsi/fastutil/ints/IntIterator/hasNext()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///it/unimi/dsi/fastutil/ints/IntIterator/nextInt()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///it/unimi/dsi/fastutil/ints/IntIterator/hasNext()|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/groupby/epinephelinae/BufferHashGrouper/iterator(boolean)|",
    "called": "|java+method:///io/druid/java/util/common/CloseableIterators/withEmptyBaggage(java.util.Iterator)|",
    "v1Body": [
      "|java+constructor:///io/druid/query/groupby/epinephelinae/BufferHashGrouper$3/BufferHashGrouper$3(io.druid.query.groupby.epinephelinae.BufferHashGrouper,java.util.List)|",
      "|java+constructor:///io/druid/query/groupby/epinephelinae/BufferHashGrouper$2/BufferHashGrouper$2(io.druid.query.groupby.epinephelinae.BufferHashGrouper,io.druid.query.groupby.epinephelinae.Grouper$BufferComparator)|",
      "|java+constructor:///io/druid/query/groupby/epinephelinae/BufferHashGrouper$1/BufferHashGrouper$1(io.druid.query.groupby.epinephelinae.BufferHashGrouper)|",
      "|java+constructor:///io/druid/query/groupby/epinephelinae/BufferHashGrouper$4/BufferHashGrouper$4(io.druid.query.groupby.epinephelinae.BufferHashGrouper)|",
      "|java+method:///com/google/common/collect/Iterators/emptyIterator()|",
      "|java+method:///java/util/Collections/sort(java.util.List,java.util.Comparator)|",
      "|java+method:///io/druid/query/groupby/epinephelinae/Grouper$KeySerde/bufferComparatorWithAggregators(io.druid.query.aggregation.AggregatorFactory%5B%5D,int%5B%5D)|",
      "|java+method:///io/druid/query/groupby/epinephelinae/Grouper$KeySerde/bufferComparator()|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/query/groupby/epinephelinae/BufferHashGrouper$3/BufferHashGrouper$3(io.druid.query.groupby.epinephelinae.BufferHashGrouper,java.util.List)|",
      "|java+constructor:///io/druid/query/groupby/epinephelinae/BufferHashGrouper$2/BufferHashGrouper$2(io.druid.query.groupby.epinephelinae.BufferHashGrouper,io.druid.query.groupby.epinephelinae.Grouper$BufferComparator)|",
      "|java+constructor:///io/druid/query/groupby/epinephelinae/BufferHashGrouper$1/BufferHashGrouper$1(io.druid.query.groupby.epinephelinae.BufferHashGrouper)|",
      "|java+constructor:///io/druid/query/groupby/epinephelinae/BufferHashGrouper$4/BufferHashGrouper$4(io.druid.query.groupby.epinephelinae.BufferHashGrouper)|",
      "|java+method:///com/google/common/collect/Iterators/emptyIterator()|",
      "|java+method:///java/util/Collections/sort(java.util.List,java.util.Comparator)|",
      "|java+method:///io/druid/java/util/common/CloseableIterators/withEmptyBaggage(java.util.Iterator)|",
      "|java+method:///io/druid/query/groupby/epinephelinae/Grouper$KeySerde/bufferComparatorWithAggregators(io.druid.query.aggregation.AggregatorFactory%5B%5D,int%5B%5D)|",
      "|java+method:///io/druid/query/groupby/epinephelinae/Grouper$KeySerde/bufferComparator()|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/segment/DoubleColumnSerializer/open()|",
    "called": "|java+method:///io/druid/java/util/common/StringUtils/format(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///io/druid/segment/data/CompressionFactory/getDoubleSerializer(io.druid.segment.data.IOPeon,java.lang.String,java.nio.ByteOrder,io.druid.segment.data.CompressedObjectStrategy$CompressionStrategy)|",
      "|java+method:///io/druid/segment/data/DoubleSupplierSerializer/open()|",
      "|java+method:///io/druid/java/util/common/StringUtils/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/segment/data/CompressionFactory/getDoubleSerializer(io.druid.segment.writeout.SegmentWriteOutMedium,java.lang.String,java.nio.ByteOrder,io.druid.segment.data.CompressionStrategy)|",
      "|java+method:///io/druid/segment/data/ColumnarDoublesSerializer/open()|",
      "|java+method:///io/druid/java/util/common/StringUtils/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/groupby/GroupByQuery/lambda$makePostProcessingFn$1(io.druid.java.util.common.guava.Sequence)|",
    "called": "|java+method:///io/druid/java/util/common/guava/Sequences/filter(io.druid.java.util.common.guava.Sequence,com.google.common.base.Predicate)|",
    "v1Body": [
      "|java+method:///io/druid/query/groupby/having/HavingSpec/setRowSignature(java.util.Map)|",
      "|java+method:///io/druid/query/groupby/GroupByQueryHelper/rowSignatureFor(io.druid.query.groupby.GroupByQuery)|",
      "|java+method:///io/druid/java/util/common/guava/Sequences/filter(io.druid.java.util.common.guava.Sequence,com.google.common.base.Predicate)|",
      "|java+method:///java/lang/Object/getClass()|"
    ],
    "v2Body": [
      "|java+method:///io/druid/query/groupby/GroupByQueryHelper/rowSignatureFor(io.druid.query.groupby.GroupByQuery)|",
      "|java+method:///io/druid/java/util/common/guava/Sequences/filter(io.druid.java.util.common.guava.Sequence,com.google.common.base.Predicate)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/druid/query/groupby/GroupByQuery/getAggregatorsMap(java.util.List)|",
      "|java+method:///io/druid/query/groupby/having/HavingSpec/setRowSignature(java.util.Map)|",
      "|java+method:///io/druid/query/groupby/having/HavingSpec/setAggregators(java.util.Map)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/segment/FloatColumnSerializer/open()|",
    "called": "|java+method:///io/druid/java/util/common/StringUtils/format(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///io/druid/segment/data/FloatSupplierSerializer/open()|",
      "|java+method:///io/druid/segment/data/CompressionFactory/getFloatSerializer(io.druid.segment.data.IOPeon,java.lang.String,java.nio.ByteOrder,io.druid.segment.data.CompressedObjectStrategy$CompressionStrategy)|",
      "|java+method:///io/druid/java/util/common/StringUtils/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/segment/data/CompressionFactory/getFloatSerializer(io.druid.segment.writeout.SegmentWriteOutMedium,java.lang.String,java.nio.ByteOrder,io.druid.segment.data.CompressionStrategy)|",
      "|java+method:///io/druid/segment/data/ColumnarFloatsSerializer/open()|",
      "|java+method:///io/druid/java/util/common/StringUtils/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/groupby/epinephelinae/ConcurrentGrouper/reset()|",
    "called": "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/query/groupby/epinephelinae/Grouper/reset()|"
    ],
    "v2Body": [
      "|java+method:///java/util/List/forEach(java.util.function.Consumer)|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+initializer:///io/druid/query/search/SearchStrategySelector/SearchStrategySelector$initializer|",
    "called": "|java+constructor:///io/druid/java/util/emitter/EmittingLogger/EmittingLogger(java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///com/metamx/emitter/EmittingLogger/EmittingLogger(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/java/util/emitter/EmittingLogger/EmittingLogger(java.lang.Class)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/segment/QueryableIndexStorageAdapter$CursorSequenceBuilder/build()|",
    "called": "|java+method:///io/druid/java/util/common/io/Closer/create()|",
    "v1Body": [
      "|java+method:///io/druid/java/util/common/guava/Sequences/simple(java.lang.Iterable)|",
      "|java+method:///io/druid/segment/QueryableIndex/getColumn(java.lang.String)|",
      "|java+method:///io/druid/java/util/common/io/Closer/register(java.io.Closeable)|",
      "|java+method:///com/google/common/collect/Lists/reverse(java.util.List)|",
      "|java+method:///io/druid/segment/column/Column/getGenericColumn()|",
      "|java+method:///io/druid/segment/data/Offset/clone()|",
      "|java+constructor:///io/druid/segment/QueryableIndexStorageAdapter$CursorSequenceBuilder$1/QueryableIndexStorageAdapter$CursorSequenceBuilder$1(io.druid.segment.QueryableIndexStorageAdapter$CursorSequenceBuilder,io.druid.segment.data.Offset,io.druid.segment.column.GenericColumn,io.druid.java.util.common.io.Closer,java.util.Map,java.util.Map,java.util.Map)|",
      "|java+method:///io/druid/java/util/common/guava/Sequences/map(io.druid.java.util.common.guava.Sequence,com.google.common.base.Function)|",
      "|java+method:///io/druid/java/util/common/guava/Sequences/withBaggage(io.druid.java.util.common.guava.Sequence,java.io.Closeable)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///com/google/common/collect/ImmutableList/copyOf(java.lang.Iterable)|",
      "|java+method:///io/druid/java/util/common/io/Closer/create()|",
      "|java+method:///io/druid/java/util/common/granularity/Granularity/getIterable(org.joda.time.Interval)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/java/util/common/guava/Sequences/simple(java.lang.Iterable)|",
      "|java+method:///io/druid/segment/QueryableIndex/getColumn(java.lang.String)|",
      "|java+method:///io/druid/java/util/common/io/Closer/register(java.io.Closeable)|",
      "|java+method:///com/google/common/collect/Lists/reverse(java.util.List)|",
      "|java+method:///io/druid/segment/column/Column/getGenericColumn()|",
      "|java+method:///io/druid/java/util/common/guava/Sequences/map(io.druid.java.util.common.guava.Sequence,com.google.common.base.Function)|",
      "|java+constructor:///io/druid/segment/QueryableIndexStorageAdapter$CursorSequenceBuilder$1/QueryableIndexStorageAdapter$CursorSequenceBuilder$1(io.druid.segment.QueryableIndexStorageAdapter$CursorSequenceBuilder,io.druid.segment.data.Offset,io.druid.segment.column.GenericColumn,io.druid.java.util.common.io.Closer,java.util.Map)|",
      "|java+method:///io/druid/segment/data/Offset/clone()|",
      "|java+method:///io/druid/java/util/common/guava/Sequences/withBaggage(io.druid.java.util.common.guava.Sequence,java.io.Closeable)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///com/google/common/collect/ImmutableList/copyOf(java.lang.Iterable)|",
      "|java+method:///io/druid/java/util/common/io/Closer/create()|",
      "|java+method:///io/druid/java/util/common/granularity/Granularity/getIterable(org.joda.time.Interval)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/segment/IndexIO$DefaultIndexIOHandler/mapDir(java.io.File)|",
    "called": "|java+method:///io/druid/java/util/common/io/smoosh/SmooshedFileMapper/mapFile(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///io/druid/segment/data/IndexedRTree$ImmutableRTreeObjectStrategy/IndexedRTree$ImmutableRTreeObjectStrategy(io.druid.collections.bitmap.BitmapFactory)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/druid/java/util/common/io/smoosh/Smoosh/map(java.io.File)|",
      "|java+method:///com/google/common/collect/Maps/newLinkedHashMap()|",
      "|java+method:///io/druid/java/util/common/logger/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/java/util/common/io/smoosh/SmooshedFileMapper/mapFile(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/io/InputStream/read()|",
      "|java+method:///io/druid/segment/IndexIO/makeTimeFile(java.io.File,java.nio.ByteOrder)|",
      "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///com/google/common/io/Closeables/close(java.io.Closeable,boolean)|",
      "|java+method:///io/druid/segment/data/CompressedLongsIndexedSupplier/fromByteBuffer(java.nio.ByteBuffer,java.nio.ByteOrder,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+method:///java/io/File/getName()|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///io/druid/segment/data/BitmapSerdeFactory/getBitmapFactory()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/druid/segment/IndexIO/makeDimFile(java.io.File,java.lang.String)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/Byte/valueOf(byte)|",
      "|java+method:///io/druid/segment/data/IndexedIterable/iterator()|",
      "|java+method:///io/druid/segment/IndexIO/makeMetricFile(java.io.File,java.lang.String,java.nio.ByteOrder)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/iterator()|",
      "|java+method:///io/druid/segment/data/ByteBufferSerializer/read(java.nio.ByteBuffer,io.druid.segment.data.ObjectStrategy)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/read(java.nio.ByteBuffer,io.druid.segment.data.ObjectStrategy)|",
      "|java+method:///io/druid/segment/data/VSizeIndexed/readFromByteBuffer(java.nio.ByteBuffer)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/nio/ByteBuffer/get()|",
      "|java+method:///com/google/common/base/Preconditions/checkState(boolean,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/segment/MMappedIndex/MMappedIndex(io.druid.segment.data.GenericIndexed,io.druid.segment.data.GenericIndexed,org.joda.time.Interval,io.druid.segment.data.CompressedLongsIndexedSupplier,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+method:///java/nio/ByteBuffer/hasRemaining()|",
      "|java+method:///io/druid/segment/IndexIO/access$000()|",
      "|java+method:///io/druid/segment/data/IndexedIterable/create(io.druid.segment.data.Indexed)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/read(java.nio.ByteBuffer,io.druid.segment.data.ObjectStrategy,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///io/druid/common/utils/SerializerUtils/readString(java.nio.ByteBuffer)|",
      "|java+method:///io/druid/java/util/common/Intervals/of(java.lang.String)|",
      "|java+constructor:///java/io/FileInputStream/FileInputStream(java.io.File)|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/segment/MetricHolder/getName()|",
      "|java+method:///io/druid/segment/data/BitmapSerdeFactory/getObjectStrategy()|",
      "|java+method:///io/druid/segment/MetricHolder/fromByteBuffer(java.nio.ByteBuffer,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+constructor:///io/druid/segment/data/BitmapSerde$LegacyBitmapSerdeFactory/BitmapSerde$LegacyBitmapSerdeFactory()|",
      "|java+method:///io/druid/segment/data/GenericIndexed/size()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/druid/java/util/common/io/smoosh/Smoosh/map(java.io.File)|",
      "|java+method:///java/io/File/getName()|",
      "|java+method:///com/google/common/collect/Maps/newLinkedHashMap()|",
      "|java+method:///io/druid/java/util/common/logger/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/java/util/common/io/smoosh/SmooshedFileMapper/mapFile(java.lang.String)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/read(java.nio.ByteBuffer,io.druid.segment.data.ObjectStrategy)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/io/InputStream/read()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///io/druid/segment/IndexIO/makeTimeFile(java.io.File,java.nio.ByteOrder)|",
      "|java+method:///io/druid/segment/data/VSizeColumnarMultiInts/readFromByteBuffer(java.nio.ByteBuffer)|",
      "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///com/google/common/io/Closeables/close(java.io.Closeable,boolean)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///io/druid/segment/data/BitmapSerdeFactory/getBitmapFactory()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/druid/segment/IndexIO/makeDimFile(java.io.File,java.lang.String)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/druid/segment/data/IndexedIterable/iterator()|",
      "|java+method:///io/druid/segment/data/ImmutableRTreeObjectStrategy/fromByteBufferWithSize(java.nio.ByteBuffer)|",
      "|java+constructor:///io/druid/segment/MMappedIndex/MMappedIndex(io.druid.segment.data.GenericIndexed,io.druid.segment.data.GenericIndexed,org.joda.time.Interval,io.druid.segment.data.CompressedColumnarLongsSupplier,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+method:///java/lang/Byte/valueOf(byte)|",
      "|java+method:///io/druid/segment/IndexIO/makeMetricFile(java.io.File,java.lang.String,java.nio.ByteOrder)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/iterator()|",
      "|java+constructor:///io/druid/segment/data/ImmutableRTreeObjectStrategy/ImmutableRTreeObjectStrategy(io.druid.collections.bitmap.BitmapFactory)|",
      "|java+method:///java/nio/ByteBuffer/get()|",
      "|java+method:///com/google/common/base/Preconditions/checkState(boolean,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/nio/ByteBuffer/hasRemaining()|",
      "|java+method:///io/druid/segment/IndexIO/access$000()|",
      "|java+method:///io/druid/segment/data/CompressedColumnarLongsSupplier/fromByteBuffer(java.nio.ByteBuffer,java.nio.ByteOrder)|",
      "|java+method:///io/druid/segment/data/IndexedIterable/create(io.druid.segment.data.Indexed)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/read(java.nio.ByteBuffer,io.druid.segment.data.ObjectStrategy,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///io/druid/common/utils/SerializerUtils/readString(java.nio.ByteBuffer)|",
      "|java+method:///io/druid/java/util/common/Intervals/of(java.lang.String)|",
      "|java+constructor:///java/io/FileInputStream/FileInputStream(java.io.File)|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/segment/MetricHolder/getName()|",
      "|java+method:///io/druid/segment/data/BitmapSerdeFactory/getObjectStrategy()|",
      "|java+method:///io/druid/segment/MetricHolder/fromByteBuffer(java.nio.ByteBuffer,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+constructor:///io/druid/segment/data/BitmapSerde$LegacyBitmapSerdeFactory/BitmapSerde$LegacyBitmapSerdeFactory()|",
      "|java+method:///io/druid/segment/data/GenericIndexed/size()|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+initializer:///io/druid/segment/ReferenceCountingSegment/ReferenceCountingSegment$initializer|",
    "called": "|java+constructor:///io/druid/java/util/emitter/EmittingLogger/EmittingLogger(java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///com/metamx/emitter/EmittingLogger/EmittingLogger(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/java/util/emitter/EmittingLogger/EmittingLogger(java.lang.Class)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/segment/incremental/OffheapIncrementalIndex/close()|",
    "called": "|java+method:///io/druid/java/util/common/io/Closer/create()|",
    "v1Body": [
      "|java+method:///io/druid/segment/incremental/IncrementalIndex/close()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex$FactsHolder/clear()|",
      "|java+method:///io/druid/collections/ResourceHolder/close()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/List/clear()|",
      "|java+method:///java/util/Map/clear()|"
    ],
    "v2Body": [
      "|java+method:///io/druid/segment/incremental/IncrementalIndex/close()|",
      "|java+method:///java/util/List/forEach(java.util.function.Consumer)|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex$FactsHolder/clear()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///io/druid/java/util/common/io/Closer/create()|",
      "|java+method:///java/util/List/clear()|",
      "|java+method:///java/util/Map/clear()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/druid/java/util/common/io/Closer/close()|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/groupby/epinephelinae/RowBasedGrouperHelper$RowBasedKeySerde/bufferComparatorWithAggregators(io.druid.query.aggregation.AggregatorFactory%5B%5D,int%5B%5D)|",
    "called": "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///io/druid/query/groupby/epinephelinae/RowBasedGrouperHelper$RowBasedKeySerde$LimitPushDownFloatRowBasedKeySerdeHelper/RowBasedGrouperHelper$RowBasedKeySerde$LimitPushDownFloatRowBasedKeySerdeHelper(io.druid.query.groupby.epinephelinae.RowBasedGrouperHelper$RowBasedKeySerde,int,io.druid.query.ordering.StringComparator)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///io/druid/query/groupby/orderby/OrderByColumnSpec/getDimIndexForOrderBy(io.druid.query.groupby.orderby.OrderByColumnSpec,java.util.List)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///io/druid/query/groupby/orderby/OrderByColumnSpec/getDirection()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///io/druid/query/groupby/epinephelinae/RowBasedGrouperHelper$RowBasedKeySerde$DoubleRowBasedKeySerdeHelper/RowBasedGrouperHelper$RowBasedKeySerde$DoubleRowBasedKeySerdeHelper(io.druid.query.groupby.epinephelinae.RowBasedGrouperHelper$RowBasedKeySerde,int)|",
      "|java+constructor:///io/druid/query/groupby/epinephelinae/RowBasedGrouperHelper$RowBasedKeySerde$FloatRowBasedKeySerdeHelper/RowBasedGrouperHelper$RowBasedKeySerde$FloatRowBasedKeySerdeHelper(io.druid.query.groupby.epinephelinae.RowBasedGrouperHelper$RowBasedKeySerde,int)|",
      "|java+constructor:///io/druid/query/groupby/epinephelinae/RowBasedGrouperHelper$RowBasedKeySerde$6/RowBasedGrouperHelper$RowBasedKeySerde$6(io.druid.query.groupby.epinephelinae.RowBasedGrouperHelper$RowBasedKeySerde,int,java.util.List,java.util.List)|",
      "|java+constructor:///io/druid/query/groupby/epinephelinae/RowBasedGrouperHelper$RowBasedKeySerde$5/RowBasedGrouperHelper$RowBasedKeySerde$5(io.druid.query.groupby.epinephelinae.RowBasedGrouperHelper$RowBasedKeySerde,java.util.List,java.util.List,int)|",
      "|java+constructor:///io/druid/query/groupby/epinephelinae/RowBasedGrouperHelper$RowBasedKeySerde$4/RowBasedGrouperHelper$RowBasedKeySerde$4(io.druid.query.groupby.epinephelinae.RowBasedGrouperHelper$RowBasedKeySerde,java.util.List,java.util.List,int)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///io/druid/query/groupby/epinephelinae/RowBasedGrouperHelper$RowBasedKeySerde$LongRowBasedKeySerdeHelper/RowBasedGrouperHelper$RowBasedKeySerde$LongRowBasedKeySerdeHelper(io.druid.query.groupby.epinephelinae.RowBasedGrouperHelper$RowBasedKeySerde,int)|",
      "|java+method:///io/druid/query/groupby/orderby/OrderByColumnSpec/getAggIndexForOrderBy(io.druid.query.groupby.orderby.OrderByColumnSpec,java.util.List)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+constructor:///io/druid/query/groupby/epinephelinae/RowBasedGrouperHelper$RowBasedKeySerde$LimitPushDownLongRowBasedKeySerdeHelper/RowBasedGrouperHelper$RowBasedKeySerde$LimitPushDownLongRowBasedKeySerdeHelper(io.druid.query.groupby.epinephelinae.RowBasedGrouperHelper$RowBasedKeySerde,int,io.druid.query.ordering.StringComparator)|",
      "|java+constructor:///io/druid/query/groupby/epinephelinae/RowBasedGrouperHelper$RowBasedKeySerde$LimitPushDownDoubleRowBasedKeySerdeHelper/RowBasedGrouperHelper$RowBasedKeySerde$LimitPushDownDoubleRowBasedKeySerdeHelper(io.druid.query.groupby.epinephelinae.RowBasedGrouperHelper$RowBasedKeySerde,int,io.druid.query.ordering.StringComparator)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///io/druid/query/groupby/orderby/OrderByColumnSpec/getDimensionComparator()|",
      "|java+method:///io/druid/query/groupby/orderby/DefaultLimitSpec/getColumns()|",
      "|java+method:///io/druid/query/aggregation/AggregatorFactory/getTypeName()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/query/groupby/epinephelinae/RowBasedGrouperHelper$RowBasedKeySerde/makeNumericSerdeHelper(io.druid.segment.column.ValueType,int,boolean,io.druid.query.ordering.StringComparator)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///io/druid/query/groupby/orderby/OrderByColumnSpec/getDimIndexForOrderBy(io.druid.query.groupby.orderby.OrderByColumnSpec,java.util.List)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///io/druid/query/groupby/orderby/OrderByColumnSpec/getDirection()|",
      "|java+constructor:///io/druid/query/groupby/epinephelinae/RowBasedGrouperHelper$RowBasedKeySerde$4/RowBasedGrouperHelper$RowBasedKeySerde$4(io.druid.query.groupby.epinephelinae.RowBasedGrouperHelper$RowBasedKeySerde,io.druid.query.groupby.epinephelinae.Grouper$BufferComparator%5B%5D,java.util.List,int)|",
      "|java+constructor:///io/druid/query/groupby/epinephelinae/RowBasedGrouperHelper$RowBasedKeySerde$5/RowBasedGrouperHelper$RowBasedKeySerde$5(io.druid.query.groupby.epinephelinae.RowBasedGrouperHelper$RowBasedKeySerde,io.druid.query.groupby.epinephelinae.Grouper$BufferComparator%5B%5D,java.util.List,int)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Arrays/setAll(java.lang.Object%5B%5D,java.util.function.IntFunction)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/druid/segment/column/ValueType/isNumeric(io.druid.segment.column.ValueType)|",
      "|java+method:///io/druid/query/groupby/orderby/OrderByColumnSpec/getAggIndexForOrderBy(io.druid.query.groupby.orderby.OrderByColumnSpec,java.util.List)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///io/druid/query/groupby/epinephelinae/RowBasedGrouperHelper$RowBasedKeySerde$6/RowBasedGrouperHelper$RowBasedKeySerde$6(io.druid.query.groupby.epinephelinae.RowBasedGrouperHelper$RowBasedKeySerde,int,java.util.List,io.druid.query.groupby.epinephelinae.Grouper$BufferComparator%5B%5D)|",
      "|java+method:///io/druid/segment/column/ValueType/fromString(java.lang.String)|",
      "|java+method:///io/druid/query/groupby/orderby/OrderByColumnSpec/getDimensionComparator()|",
      "|java+method:///io/druid/query/groupby/orderby/DefaultLimitSpec/getColumns()|",
      "|java+method:///io/druid/query/aggregation/AggregatorFactory/getTypeName()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/segment/QueryableIndexStorageAdapter$CursorSequenceBuilder$1/apply(org.joda.time.Interval)|",
    "called": "|java+method:///io/druid/java/util/common/granularity/Granularity/toDateTime(long)|",
    "v1Body": [
      "|java+method:///io/druid/segment/data/Offset/increment()|",
      "|java+method:///org/joda/time/DateTime/getMillis()|",
      "|java+method:///io/druid/java/util/common/granularity/Granularity/toDateTime(long)|",
      "|java+method:///io/druid/segment/data/Offset/withinBounds()|",
      "|java+constructor:///io/druid/segment/FilteredOffset/FilteredOffset(io.druid.segment.data.Offset,io.druid.segment.ColumnSelectorFactory,boolean,io.druid.query.filter.Filter,io.druid.segment.ColumnSelectorBitmapIndexSelector)|",
      "|java+method:///io/druid/segment/QueryableIndexStorageAdapter$CursorSequenceBuilder/access$900(io.druid.segment.QueryableIndexStorageAdapter$CursorSequenceBuilder)|",
      "|java+method:///io/druid/segment/QueryableIndexStorageAdapter$CursorSequenceBuilder/access$800(io.druid.segment.QueryableIndexStorageAdapter$CursorSequenceBuilder)|",
      "|java+method:///io/druid/segment/QueryableIndexStorageAdapter$CursorSequenceBuilder/access$700(io.druid.segment.QueryableIndexStorageAdapter$CursorSequenceBuilder)|",
      "|java+method:///io/druid/segment/QueryableIndexStorageAdapter$CursorSequenceBuilder/access$600(io.druid.segment.QueryableIndexStorageAdapter$CursorSequenceBuilder)|",
      "|java+method:///io/druid/segment/QueryableIndexStorageAdapter$CursorSequenceBuilder/access$500(io.druid.segment.QueryableIndexStorageAdapter$CursorSequenceBuilder)|",
      "|java+method:///io/druid/segment/QueryableIndexStorageAdapter$CursorSequenceBuilder/access$400(io.druid.segment.QueryableIndexStorageAdapter$CursorSequenceBuilder)|",
      "|java+constructor:///io/druid/segment/QueryableIndexStorageAdapter$QueryableIndexCursor/QueryableIndexStorageAdapter$QueryableIndexCursor(io.druid.segment.data.Offset,io.druid.segment.ColumnSelectorFactory,org.joda.time.DateTime)|",
      "|java+method:///org/joda/time/Interval/getEndMillis()|",
      "|java+method:///org/joda/time/Interval/getStartMillis()|",
      "|java+method:///io/druid/segment/data/Offset/getBaseReadableOffset()|",
      "|java+method:///io/druid/segment/column/GenericColumn/getLongSingleValueRow(int)|",
      "|java+method:///io/druid/java/util/common/granularity/Granularity/increment(org.joda.time.DateTime)|",
      "|java+method:///java/lang/Math/min(long,long)|",
      "|java+constructor:///io/druid/segment/QueryableIndexColumnSelectorFactory/QueryableIndexColumnSelectorFactory(io.druid.segment.QueryableIndex,io.druid.segment.VirtualColumns,boolean,io.druid.java.util.common.io.Closer,io.druid.segment.data.ReadableOffset,java.util.Map,java.util.Map,java.util.Map)|",
      "|java+method:///io/druid/segment/QueryableIndexStorageAdapter$CursorSequenceBuilder/access$300(io.druid.segment.QueryableIndexStorageAdapter$CursorSequenceBuilder)|",
      "|java+method:///io/druid/segment/data/Offset/clone()|",
      "|java+method:///io/druid/segment/QueryableIndexStorageAdapter$CursorSequenceBuilder/access$200(io.druid.segment.QueryableIndexStorageAdapter$CursorSequenceBuilder)|",
      "|java+method:///io/druid/segment/QueryableIndexStorageAdapter$CursorSequenceBuilder/access$100(io.druid.segment.QueryableIndexStorageAdapter$CursorSequenceBuilder)|",
      "|java+method:///java/lang/Math/max(long,long)|",
      "|java+constructor:///io/druid/segment/QueryableIndexStorageAdapter$DescendingTimestampCheckingOffset/QueryableIndexStorageAdapter$DescendingTimestampCheckingOffset(io.druid.segment.data.Offset,io.druid.segment.column.GenericColumn,long,boolean)|",
      "|java+method:///org/joda/time/Interval/getStart()|",
      "|java+method:///io/druid/segment/data/Offset/getOffset()|",
      "|java+constructor:///io/druid/segment/QueryableIndexStorageAdapter$AscendingTimestampCheckingOffset/QueryableIndexStorageAdapter$AscendingTimestampCheckingOffset(io.druid.segment.data.Offset,io.druid.segment.column.GenericColumn,long,boolean)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/segment/data/Offset/increment()|",
      "|java+method:///org/joda/time/DateTime/getMillis()|",
      "|java+method:///io/druid/java/util/common/granularity/Granularity/toDateTime(long)|",
      "|java+method:///io/druid/segment/data/Offset/withinBounds()|",
      "|java+constructor:///io/druid/segment/FilteredOffset/FilteredOffset(io.druid.segment.data.Offset,io.druid.segment.ColumnSelectorFactory,boolean,io.druid.query.filter.Filter,io.druid.segment.ColumnSelectorBitmapIndexSelector)|",
      "|java+method:///io/druid/segment/QueryableIndexStorageAdapter$CursorSequenceBuilder/access$900(io.druid.segment.QueryableIndexStorageAdapter$CursorSequenceBuilder)|",
      "|java+method:///io/druid/segment/QueryableIndexStorageAdapter$CursorSequenceBuilder/access$800(io.druid.segment.QueryableIndexStorageAdapter$CursorSequenceBuilder)|",
      "|java+method:///io/druid/segment/QueryableIndexStorageAdapter$CursorSequenceBuilder/access$700(io.druid.segment.QueryableIndexStorageAdapter$CursorSequenceBuilder)|",
      "|java+method:///io/druid/segment/QueryableIndexStorageAdapter$CursorSequenceBuilder/access$600(io.druid.segment.QueryableIndexStorageAdapter$CursorSequenceBuilder)|",
      "|java+method:///io/druid/segment/QueryableIndexStorageAdapter$CursorSequenceBuilder/access$500(io.druid.segment.QueryableIndexStorageAdapter$CursorSequenceBuilder)|",
      "|java+method:///io/druid/segment/QueryableIndexStorageAdapter$CursorSequenceBuilder/access$400(io.druid.segment.QueryableIndexStorageAdapter$CursorSequenceBuilder)|",
      "|java+constructor:///io/druid/segment/QueryableIndexStorageAdapter$QueryableIndexCursor/QueryableIndexStorageAdapter$QueryableIndexCursor(io.druid.segment.data.Offset,io.druid.segment.ColumnSelectorFactory,org.joda.time.DateTime)|",
      "|java+method:///org/joda/time/Interval/getEndMillis()|",
      "|java+method:///org/joda/time/Interval/getStartMillis()|",
      "|java+method:///io/druid/segment/data/Offset/getBaseReadableOffset()|",
      "|java+method:///io/druid/segment/column/GenericColumn/getLongSingleValueRow(int)|",
      "|java+method:///io/druid/java/util/common/granularity/Granularity/increment(org.joda.time.DateTime)|",
      "|java+method:///java/lang/Math/min(long,long)|",
      "|java+constructor:///io/druid/segment/QueryableIndexColumnSelectorFactory/QueryableIndexColumnSelectorFactory(io.druid.segment.QueryableIndex,io.druid.segment.VirtualColumns,boolean,io.druid.java.util.common.io.Closer,io.druid.segment.data.ReadableOffset,java.util.Map)|",
      "|java+method:///io/druid/segment/QueryableIndexStorageAdapter$CursorSequenceBuilder/access$300(io.druid.segment.QueryableIndexStorageAdapter$CursorSequenceBuilder)|",
      "|java+method:///io/druid/segment/data/Offset/clone()|",
      "|java+method:///io/druid/segment/QueryableIndexStorageAdapter$CursorSequenceBuilder/access$200(io.druid.segment.QueryableIndexStorageAdapter$CursorSequenceBuilder)|",
      "|java+method:///io/druid/segment/QueryableIndexStorageAdapter$CursorSequenceBuilder/access$100(io.druid.segment.QueryableIndexStorageAdapter$CursorSequenceBuilder)|",
      "|java+method:///java/lang/Math/max(long,long)|",
      "|java+constructor:///io/druid/segment/QueryableIndexStorageAdapter$DescendingTimestampCheckingOffset/QueryableIndexStorageAdapter$DescendingTimestampCheckingOffset(io.druid.segment.data.Offset,io.druid.segment.column.GenericColumn,long,boolean)|",
      "|java+method:///org/joda/time/Interval/getStart()|",
      "|java+method:///io/druid/segment/data/Offset/getOffset()|",
      "|java+constructor:///io/druid/segment/QueryableIndexStorageAdapter$AscendingTimestampCheckingOffset/QueryableIndexStorageAdapter$AscendingTimestampCheckingOffset(io.druid.segment.data.Offset,io.druid.segment.column.GenericColumn,long,boolean)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/groupby/epinephelinae/GroupByMergingQueryRunnerV2/run(io.druid.query.QueryPlus,java.util.Map)|",
    "called": "|java+constructor:///io/druid/java/util/common/guava/BaseSequence/BaseSequence(io.druid.java.util.common.guava.BaseSequence$IteratorMaker)|",
    "v1Body": [
      "|java+method:///io/druid/query/groupby/GroupByQuery/withOverriddenContext(java.util.Map)|",
      "|java+method:///io/druid/query/ChainedExecutionQueryRunner/run(io.druid.query.QueryPlus,java.util.Map)|",
      "|java+constructor:///io/druid/query/groupby/epinephelinae/GroupByMergingQueryRunnerV2$1/GroupByMergingQueryRunnerV2$1(io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2,java.io.File,io.druid.query.groupby.GroupByQueryConfig,boolean,long,io.druid.query.groupby.GroupByQuery,io.druid.query.aggregation.AggregatorFactory%5B%5D,int,io.druid.query.QueryPlus,java.util.Map,boolean)|",
      "|java+method:///io/druid/query/groupby/GroupByQuery/getContextBoolean(java.lang.String,boolean)|",
      "|java+method:///io/druid/query/QueryPlus/withQuery(io.druid.query.Query)|",
      "|java+method:///io/druid/query/groupby/GroupByQueryConfig/withOverrides(io.druid.query.groupby.GroupByQuery)|",
      "|java+constructor:///io/druid/java/util/common/guava/BaseSequence/BaseSequence(io.druid.java.util.common.guava.BaseSequence$IteratorMaker)|",
      "|java+constructor:///java/io/File/File(java.lang.String,java.lang.String)|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/druid/query/QueryContexts/getTimeout(io.druid.query.Query)|",
      "|java+method:///io/druid/java/util/common/StringUtils/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/query/QueryContexts/isBySegment(io.druid.query.Query)|",
      "|java+method:///io/druid/query/QueryPlus/withoutThreadUnsafeState()|",
      "|java+method:///io/druid/query/QueryContexts/getPriority(io.druid.query.Query)|",
      "|java+method:///io/druid/query/aggregation/AggregatorFactory/getCombiningFactory()|",
      "|java+method:///io/druid/query/groupby/GroupByQuery/getId()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/UUID/randomUUID()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///io/druid/query/QueryContexts/hasTimeout(io.druid.query.Query)|",
      "|java+method:///io/druid/query/QueryPlus/getQuery()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///io/druid/query/groupby/GroupByQuery/getAggregatorSpecs()|",
      "|java+constructor:///io/druid/query/ChainedExecutionQueryRunner/ChainedExecutionQueryRunner(java.util.concurrent.ExecutorService,io.druid.query.QueryWatcher,java.lang.Iterable)|",
      "|java+method:///io/druid/query/groupby/GroupByQueryConfig/isSingleThreaded()|",
      "|java+method:///java/lang/System/currentTimeMillis()|"
    ],
    "v2Body": [
      "|java+method:///io/druid/query/groupby/GroupByQuery/withOverriddenContext(java.util.Map)|",
      "|java+method:///io/druid/query/ChainedExecutionQueryRunner/run(io.druid.query.QueryPlus,java.util.Map)|",
      "|java+constructor:///io/druid/query/groupby/epinephelinae/GroupByMergingQueryRunnerV2$2/GroupByMergingQueryRunnerV2$2(io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2,java.io.File,io.druid.query.groupby.GroupByQueryConfig,boolean,long,io.druid.query.groupby.GroupByQuery,com.google.common.base.Supplier,io.druid.query.aggregation.AggregatorFactory%5B%5D,int,io.druid.query.QueryPlus,java.util.Map,boolean)|",
      "|java+method:///io/druid/query/groupby/GroupByQuery/getContextBoolean(java.lang.String,boolean)|",
      "|java+method:///io/druid/query/QueryPlus/withQuery(io.druid.query.Query)|",
      "|java+method:///io/druid/query/groupby/GroupByQueryConfig/withOverrides(io.druid.query.groupby.GroupByQuery)|",
      "|java+constructor:///io/druid/java/util/common/guava/BaseSequence/BaseSequence(io.druid.java.util.common.guava.BaseSequence$IteratorMaker)|",
      "|java+constructor:///java/io/File/File(java.lang.String,java.lang.String)|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/druid/query/QueryContexts/getTimeout(io.druid.query.Query)|",
      "|java+method:///io/druid/query/QueryContexts/isBySegment(io.druid.query.Query)|",
      "|java+method:///io/druid/query/QueryPlus/withoutThreadUnsafeState()|",
      "|java+method:///io/druid/query/QueryContexts/getPriority(io.druid.query.Query)|",
      "|java+method:///io/druid/query/aggregation/AggregatorFactory/getCombiningFactory()|",
      "|java+method:///io/druid/query/groupby/GroupByQuery/getId()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/UUID/randomUUID()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///io/druid/query/QueryContexts/hasTimeout(io.druid.query.Query)|",
      "|java+method:///io/druid/query/QueryPlus/getQuery()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///io/druid/query/groupby/GroupByQuery/getAggregatorSpecs()|",
      "|java+constructor:///io/druid/query/ChainedExecutionQueryRunner/ChainedExecutionQueryRunner(java.util.concurrent.ExecutorService,io.druid.query.QueryWatcher,java.lang.Iterable)|",
      "|java+method:///io/druid/query/groupby/GroupByQueryConfig/isSingleThreaded()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+constructor:///io/druid/query/groupby/epinephelinae/GroupByMergingQueryRunnerV2$1/GroupByMergingQueryRunnerV2$1(io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2)|",
      "|java+method:///io/druid/java/util/common/StringUtils/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+constructor:///io/druid/query/DefaultQueryMetrics/DefaultQueryMetrics(com.fasterxml.jackson.databind.ObjectMapper)|",
    "called": "|java+constructor:///io/druid/java/util/emitter/service/ServiceMetricEvent$Builder/ServiceMetricEvent$Builder()|",
    "v1Body": [
      "|java+constructor:///com/metamx/emitter/service/ServiceMetricEvent$Builder/ServiceMetricEvent$Builder()|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+constructor:///io/druid/java/util/emitter/service/ServiceMetricEvent$Builder/ServiceMetricEvent$Builder()|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/RetryQueryRunner$1/toYielder(java.lang.Object,io.druid.java.util.common.guava.YieldingAccumulator)|",
    "called": "|java+method:///io/druid/java/util/common/guava/MergeSequence/toYielder(java.lang.Object,io.druid.java.util.common.guava.YieldingAccumulator)|",
    "v1Body": [
      "|java+method:///io/druid/query/RetryQueryRunnerConfig/getNumTries()|",
      "|java+method:///io/druid/query/RetryQueryRunnerConfig/isReturnPartialResults()|",
      "|java+method:///io/druid/query/RetryQueryRunner/access$100(io.druid.query.RetryQueryRunner)|",
      "|java+method:///io/druid/java/util/common/guava/Sequence/toYielder(java.lang.Object,io.druid.java.util.common.guava.YieldingAccumulator)|",
      "|java+method:///io/druid/query/QueryPlus/withQuerySegmentSpec(io.druid.query.spec.QuerySegmentSpec)|",
      "|java+constructor:///io/druid/java/util/common/guava/MergeSequence/MergeSequence(com.google.common.collect.Ordering,io.druid.java.util.common.guava.Sequence)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/query/QueryRunner/run(io.druid.query.QueryPlus,java.util.Map)|",
      "|java+constructor:///io/druid/segment/SegmentMissingException/SegmentMissingException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/query/RetryQueryRunner/access$000(io.druid.query.RetryQueryRunner,java.util.Map)|",
      "|java+method:///io/druid/java/util/common/guava/Sequences/simple(java.lang.Iterable)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///io/druid/java/util/common/guava/MergeSequence/toYielder(java.lang.Object,io.druid.java.util.common.guava.YieldingAccumulator)|",
      "|java+method:///io/druid/query/RetryQueryRunner/access$300(io.druid.query.RetryQueryRunner)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///io/druid/query/RetryQueryRunner/access$200()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///io/druid/query/spec/MultipleSpecificSegmentSpec/MultipleSpecificSegmentSpec(java.util.List)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///io/druid/query/QueryPlus/getQuery()|",
      "|java+method:///com/google/common/collect/Iterables/getOnlyElement(java.lang.Iterable)|",
      "|java+method:///io/druid/query/Query/getResultOrdering()|"
    ],
    "v2Body": [
      "|java+method:///io/druid/query/RetryQueryRunnerConfig/getNumTries()|",
      "|java+method:///io/druid/query/RetryQueryRunnerConfig/isReturnPartialResults()|",
      "|java+method:///io/druid/query/RetryQueryRunner/access$100(io.druid.query.RetryQueryRunner)|",
      "|java+method:///io/druid/java/util/common/guava/Sequence/toYielder(java.lang.Object,io.druid.java.util.common.guava.YieldingAccumulator)|",
      "|java+method:///io/druid/query/QueryPlus/withQuerySegmentSpec(io.druid.query.spec.QuerySegmentSpec)|",
      "|java+constructor:///io/druid/java/util/common/guava/MergeSequence/MergeSequence(com.google.common.collect.Ordering,io.druid.java.util.common.guava.Sequence)|",
      "|java+method:///io/druid/query/QueryRunner/run(io.druid.query.QueryPlus,java.util.Map)|",
      "|java+method:///io/druid/java/util/emitter/EmittingLogger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/segment/SegmentMissingException/SegmentMissingException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/query/RetryQueryRunner/access$000(io.druid.query.RetryQueryRunner,java.util.Map)|",
      "|java+method:///io/druid/java/util/common/guava/Sequences/simple(java.lang.Iterable)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///io/druid/java/util/common/guava/MergeSequence/toYielder(java.lang.Object,io.druid.java.util.common.guava.YieldingAccumulator)|",
      "|java+method:///io/druid/query/RetryQueryRunner/access$300(io.druid.query.RetryQueryRunner)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///io/druid/query/RetryQueryRunner/access$200()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///io/druid/query/spec/MultipleSpecificSegmentSpec/MultipleSpecificSegmentSpec(java.util.List)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///io/druid/query/QueryPlus/getQuery()|",
      "|java+method:///com/google/common/collect/Iterables/getOnlyElement(java.lang.Iterable)|",
      "|java+method:///io/druid/query/Query/getResultOrdering()|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/aggregation/first/LongFirstAggregatorFactory/getCacheKey()|",
    "called": "|java+method:///io/druid/java/util/common/StringUtils/toUtf8(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///java/nio/ByteBuffer/put(byte%5B%5D)|",
      "|java+method:///com/metamx/common/StringUtils/toUtf8(java.lang.String)|",
      "|java+method:///java/nio/ByteBuffer/put(byte)|",
      "|java+method:///java/nio/ByteBuffer/array()|"
    ],
    "v2Body": [
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///java/nio/ByteBuffer/put(byte%5B%5D)|",
      "|java+method:///java/nio/ByteBuffer/put(byte)|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///io/druid/java/util/common/StringUtils/toUtf8(java.lang.String)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+constructor:///io/druid/query/lookup/LookupSnapshotTaker/LookupSnapshotTaker(com.fasterxml.jackson.databind.ObjectMapper,java.lang.String)|",
    "called": "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///java/io/File/isDirectory()|",
      "|java+method:///java/io/File/exists()|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///java/io/File/mkdirs()|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+constructor:///java/io/File/File(java.lang.String,java.lang.String)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///java/io/File/isDirectory()|",
      "|java+method:///java/io/File/exists()|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///java/io/File/mkdirs()|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/segment/StringDimensionMergerV9/writeMergedValueMetadata(java.util.List)|",
    "called": "|java+method:///io/druid/java/util/common/StringUtils/format(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///io/druid/segment/data/Indexed/indexOf(java.lang.Object)|",
      "|java+method:///io/druid/segment/data/GenericIndexedWriter/close()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+constructor:///io/druid/segment/IndexMerger$DictionaryMergeIterator/IndexMerger$DictionaryMergeIterator(io.druid.segment.data.Indexed%5B%5D,boolean)|",
      "|java+method:///com/google/common/collect/Lists/newArrayListWithCapacity(int)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/ArrayList/add(java.lang.Object)|",
      "|java+method:///io/druid/java/util/common/logger/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/segment/data/GenericIndexedWriter/open()|",
      "|java+method:///io/druid/segment/data/GenericIndexedWriter/write(java.lang.Object)|",
      "|java+method:///io/druid/segment/data/Indexed/iterator()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///io/druid/java/util/common/StringUtils/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/segment/IndexMerger$DictionaryMergeIterator/needConversion(int)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/druid/segment/StringDimensionMergerV9/isNullColumn(java.lang.Iterable)|",
      "|java+method:///io/druid/segment/data/Indexed/size()|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///io/druid/segment/data/GenericIndexedWriter/GenericIndexedWriter(io.druid.segment.data.IOPeon,java.lang.String,io.druid.segment.data.ObjectStrategy)|",
      "|java+method:///java/util/ArrayList/set(int,java.lang.Object)|",
      "|java+method:///io/druid/segment/IndexableAdapter/getDimValueLookup(java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///io/druid/segment/IndexMerger$DictionaryMergeIterator/next()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///io/druid/segment/StringDimensionMergerV9/setupEncodedValueWriter()|",
      "|java+method:///io/druid/segment/IndexMerger$DictionaryMergeIterator/hasNext()|"
    ],
    "v2Body": [
      "|java+method:///io/druid/segment/data/Indexed/indexOf(java.lang.Object)|",
      "|java+method:///io/druid/segment/IndexMerger$DictionaryMergeIterator/needConversion(int)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+constructor:///io/druid/segment/IndexMerger$DictionaryMergeIterator/IndexMerger$DictionaryMergeIterator(io.druid.segment.data.Indexed%5B%5D,boolean)|",
      "|java+method:///com/google/common/collect/Lists/newArrayListWithCapacity(int)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/ArrayList/add(java.lang.Object)|",
      "|java+method:///io/druid/java/util/common/logger/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/segment/data/GenericIndexedWriter/open()|",
      "|java+method:///io/druid/java/util/common/StringUtils/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/segment/StringDimensionMergerV9/setupEncodedValueWriter()|",
      "|java+method:///io/druid/segment/StringDimensionMergerV9/isNullColumn(java.lang.Iterable)|",
      "|java+method:///io/druid/segment/data/Indexed/size()|",
      "|java+constructor:///io/druid/segment/data/GenericIndexedWriter/GenericIndexedWriter(io.druid.segment.writeout.SegmentWriteOutMedium,java.lang.String,io.druid.segment.data.ObjectStrategy)|",
      "|java+method:///java/util/ArrayList/set(int,java.lang.Object)|",
      "|java+method:///io/druid/segment/IndexableAdapter/getDimValueLookup(java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///io/druid/segment/StringDimensionMergerV9/writeDictionary(java.lang.Iterable)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/segment/IndexMergerV9/makeIndexBinary(io.druid.java.util.common.io.smoosh.FileSmoosher,java.util.List,java.io.File,java.util.List,java.util.List,io.druid.segment.ProgressIndicator,io.druid.segment.IndexSpec,java.util.List)|",
    "called": "|java+method:///io/druid/java/util/common/JodaUtils/minDateTime(org.joda.time.DateTime%5B%5D)|",
    "v1Body": [
      "|java+method:///io/druid/common/utils/SerializerUtils/writeString(java.nio.channels.WritableByteChannel,java.lang.String)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/druid/segment/DimensionMerger/canSkip()|",
      "|java+constructor:///org/joda/time/Interval/Interval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)|",
      "|java+method:///org/joda/time/Interval/getEnd()|",
      "|java+method:///io/druid/common/utils/SerializerUtils/getSerializedStringByteSize(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/joda/time/Interval/getStart()|",
      "|java+method:///io/druid/common/utils/SerializerUtils/writeLong(java.nio.channels.WritableByteChannel,long)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///io/druid/segment/data/GenericIndexed/writeToChannel(java.nio.channels.WritableByteChannel)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///io/druid/segment/IndexIO/checkFileSize(java.io.File)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/druid/segment/IndexableAdapter/getDataInterval()|",
      "|java+method:///java/util/Set/addAll(java.util.Collection)|",
      "|java+method:///io/druid/java/util/common/io/smoosh/SmooshedWriter/close()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsString(java.lang.Object)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///io/druid/java/util/common/JodaUtils/maxDateTime(org.joda.time.DateTime%5B%5D)|",
      "|java+method:///org/joda/time/Interval/getEndMillis()|",
      "|java+method:///io/druid/segment/data/GenericIndexed/getSerializedSize()|",
      "|java+method:///io/druid/java/util/common/io/smoosh/FileSmoosher/addWithSmooshedWriter(java.lang.String,long)|",
      "|java+method:///com/google/common/collect/Sets/newLinkedHashSet()|",
      "|java+method:///io/druid/segment/IndexSpec/getBitmapSerdeFactory()|",
      "|java+method:///io/druid/java/util/common/logger/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/joda/time/Interval/getStartMillis()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///io/druid/segment/ProgressIndicator/startSection(java.lang.String)|",
      "|java+method:///io/druid/segment/ProgressIndicator/stopSection(java.lang.String)|",
      "|java+method:///io/druid/java/util/common/JodaUtils/minDateTime(org.joda.time.DateTime%5B%5D)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/fromIterable(java.lang.Iterable,io.druid.segment.data.ObjectStrategy)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/common/utils/SerializerUtils/writeString(java.nio.channels.WritableByteChannel,java.lang.String)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/druid/segment/DimensionMerger/canSkip()|",
      "|java+constructor:///org/joda/time/Interval/Interval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)|",
      "|java+method:///io/druid/common/utils/SerializerUtils/getSerializedStringByteSize(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/joda/time/Interval/getStart()|",
      "|java+method:///io/druid/common/utils/SerializerUtils/writeLong(java.nio.channels.WritableByteChannel,long)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///io/druid/segment/IndexIO/checkFileSize(java.io.File)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/druid/segment/IndexableAdapter/getDataInterval()|",
      "|java+method:///java/util/Set/addAll(java.util.Collection)|",
      "|java+method:///io/druid/java/util/common/io/smoosh/SmooshedWriter/close()|",
      "|java+method:///org/joda/time/Interval/getEnd()|",
      "|java+method:///io/druid/segment/data/GenericIndexed/writeTo(java.nio.channels.WritableByteChannel,io.druid.java.util.common.io.smoosh.FileSmoosher)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsString(java.lang.Object)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///io/druid/java/util/common/JodaUtils/maxDateTime(org.joda.time.DateTime%5B%5D)|",
      "|java+method:///org/joda/time/Interval/getEndMillis()|",
      "|java+method:///io/druid/segment/data/GenericIndexed/getSerializedSize()|",
      "|java+method:///io/druid/java/util/common/io/smoosh/FileSmoosher/addWithSmooshedWriter(java.lang.String,long)|",
      "|java+method:///com/google/common/collect/Sets/newLinkedHashSet()|",
      "|java+method:///io/druid/segment/IndexSpec/getBitmapSerdeFactory()|",
      "|java+method:///io/druid/java/util/common/logger/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/joda/time/Interval/getStartMillis()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///io/druid/segment/ProgressIndicator/startSection(java.lang.String)|",
      "|java+method:///io/druid/segment/ProgressIndicator/stopSection(java.lang.String)|",
      "|java+method:///io/druid/java/util/common/JodaUtils/minDateTime(org.joda.time.DateTime%5B%5D)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/fromIterable(java.lang.Iterable,io.druid.segment.data.ObjectStrategy)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/groupby/epinephelinae/LimitedBufferHashGrouper/iterator(boolean)|",
    "called": "|java+method:///io/druid/java/util/common/CloseableIterators/withEmptyBaggage(java.util.Iterator)|",
    "v1Body": [
      "|java+method:///io/druid/query/groupby/epinephelinae/LimitedBufferHashGrouper/makeHeapIterator()|",
      "|java+method:///com/google/common/collect/Iterators/emptyIterator()|",
      "|java+method:///io/druid/query/groupby/epinephelinae/LimitedBufferHashGrouper/makeDefaultOrderingIterator()|"
    ],
    "v2Body": [
      "|java+method:///io/druid/query/groupby/epinephelinae/LimitedBufferHashGrouper/makeHeapIterator()|",
      "|java+method:///com/google/common/collect/Iterators/emptyIterator()|",
      "|java+method:///io/druid/query/groupby/epinephelinae/LimitedBufferHashGrouper/makeDefaultOrderingIterator()|",
      "|java+method:///io/druid/java/util/common/CloseableIterators/withEmptyBaggage(java.util.Iterator)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/expression/TimestampParseExprMacro$1TimestampParseExpr/eval(io.druid.math.expr.Expr$ObjectBinding)|",
    "called": "|java+method:///io/druid/java/util/common/DateTimes$UtcFormatter/parse(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/joda/time/DateTime/getMillis()|",
      "|java+method:///io/druid/math/expr/ExprEval/of(long)|",
      "|java+method:///org/joda/time/format/DateTimeFormatter/parseDateTime(java.lang.String)|",
      "|java+method:///io/druid/math/expr/ExprEval/asString()|",
      "|java+method:///io/druid/math/expr/Expr/eval(io.druid.math.expr.Expr$ObjectBinding)|",
      "|java+method:///io/druid/math/expr/ExprEval/of(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/joda/time/DateTime/getMillis()|",
      "|java+method:///io/druid/math/expr/ExprEval/of(long)|",
      "|java+method:///io/druid/math/expr/ExprEval/asString()|",
      "|java+method:///io/druid/java/util/common/DateTimes$UtcFormatter/parse(java.lang.String)|",
      "|java+method:///io/druid/math/expr/Expr/eval(io.druid.math.expr.Expr$ObjectBinding)|",
      "|java+method:///io/druid/math/expr/ExprEval/of(java.lang.String)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/segment/column/SimpleDictionaryEncodedColumn/close()|",
    "called": "|java+method:///io/druid/java/util/common/guava/CloseQuietly/close(java.io.Closeable)|",
    "v1Body": [
      "|java+method:///io/druid/java/util/common/guava/CloseQuietly/close(java.io.Closeable)|",
      "|java+method:///io/druid/segment/data/IndexedInts/close()|",
      "|java+method:///io/druid/segment/data/IndexedMultivalue/close()|"
    ],
    "v2Body": [
      "|java+method:///io/druid/segment/data/ColumnarInts/close()|",
      "|java+method:///io/druid/java/util/common/guava/CloseQuietly/close(java.io.Closeable)|",
      "|java+method:///io/druid/segment/data/ColumnarMultiInts/close()|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/segment/StringDimensionMergerV9/setupEncodedValueWriter()|",
    "called": "|java+method:///io/druid/java/util/common/StringUtils/format(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///io/druid/segment/data/CompressedVSizeIndexedV3Writer/create(io.druid.segment.data.IOPeon,java.lang.String,int,io.druid.segment.data.CompressedObjectStrategy$CompressionStrategy)|",
      "|java+method:///io/druid/segment/data/CompressedVSizeIntsIndexedWriter/create(io.druid.segment.data.IOPeon,java.lang.String,int,io.druid.segment.data.CompressedObjectStrategy$CompressionStrategy)|",
      "|java+method:///io/druid/segment/column/ColumnCapabilities/hasMultipleValues()|",
      "|java+method:///io/druid/segment/data/IndexedIntsWriter/open()|",
      "|java+constructor:///io/druid/segment/data/VSizeIndexedIntsWriter/VSizeIndexedIntsWriter(io.druid.segment.data.IOPeon,java.lang.String,int)|",
      "|java+constructor:///io/druid/segment/data/VSizeIndexedWriter/VSizeIndexedWriter(io.druid.segment.data.IOPeon,java.lang.String,int)|",
      "|java+method:///io/druid/segment/IndexSpec/getDimensionCompression()|",
      "|java+method:///io/druid/java/util/common/StringUtils/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/segment/data/VSizeColumnarIntsSerializer/VSizeColumnarIntsSerializer(io.druid.segment.writeout.SegmentWriteOutMedium,int)|",
      "|java+method:///io/druid/segment/data/ColumnarIntsSerializer/open()|",
      "|java+method:///io/druid/segment/column/ColumnCapabilities/hasMultipleValues()|",
      "|java+constructor:///io/druid/segment/data/VSizeColumnarMultiIntsSerializer/VSizeColumnarMultiIntsSerializer(io.druid.segment.writeout.SegmentWriteOutMedium,int)|",
      "|java+method:///io/druid/segment/data/V3CompressedVSizeColumnarMultiIntsSerializer/create(io.druid.segment.writeout.SegmentWriteOutMedium,java.lang.String,int,io.druid.segment.data.CompressionStrategy)|",
      "|java+method:///io/druid/segment/data/CompressedVSizeColumnarIntsSerializer/create(io.druid.segment.writeout.SegmentWriteOutMedium,java.lang.String,int,io.druid.segment.data.CompressionStrategy)|",
      "|java+method:///io/druid/segment/IndexSpec/getDimensionCompression()|",
      "|java+method:///io/druid/java/util/common/StringUtils/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+initializer:///io/druid/query/monomorphicprocessing/SpecializationService/SpecializationService$initializer|",
    "called": "|java+constructor:///io/druid/java/util/common/logger/Logger/Logger(java.lang.Class)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/lang/Boolean/getBoolean(java.lang.String)|",
      "|java+method:///java/lang/reflect/Field/get(java.lang.Object)|",
      "|java+method:///java/lang/reflect/Field/setAccessible(boolean)|",
      "|java+constructor:///io/druid/java/util/common/logger/Logger/Logger(java.lang.Class)|",
      "|java+method:///io/druid/concurrent/Execs/singleThreaded(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/Integer/getInteger(java.lang.String,int)|",
      "|java+constructor:///io/druid/query/monomorphicprocessing/SpecializationService$1/SpecializationService$1()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicLong/AtomicLong()|",
      "|java+method:///java/lang/Class/getDeclaredField(java.lang.String)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicBoolean/AtomicBoolean(boolean)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/lang/Boolean/getBoolean(java.lang.String)|",
      "|java+method:///java/lang/reflect/Field/get(java.lang.Object)|",
      "|java+method:///java/lang/reflect/Field/setAccessible(boolean)|",
      "|java+constructor:///io/druid/java/util/common/logger/Logger/Logger(java.lang.Class)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///io/druid/query/monomorphicprocessing/SpecializationService$1/SpecializationService$1()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicLong/AtomicLong()|",
      "|java+method:///java/lang/Class/getDeclaredField(java.lang.String)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicBoolean/AtomicBoolean(boolean)|",
      "|java+method:///java/lang/Integer/getInteger(java.lang.String,int)|",
      "|java+method:///io/druid/java/util/common/concurrent/Execs/singleThreaded(java.lang.String)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/DefaultQueryMetrics/interval(io.druid.query.Query)|",
    "called": "|java+method:///io/druid/java/util/emitter/service/ServiceMetricEvent$Builder/setDimension(java.lang.String,java.lang.String%5B%5D)|",
    "v1Body": [
      "|java+method:///java/util/stream/Stream/map(java.util.function.Function)|",
      "|java+method:///com/metamx/emitter/service/ServiceMetricEvent$Builder/setDimension(java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///java/util/stream/Stream/toArray(java.util.function.IntFunction)|",
      "|java+method:///java/util/List/stream()|",
      "|java+method:///io/druid/query/DefaultQueryMetrics/checkModifiedFromOwnerThread()|",
      "|java+method:///io/druid/query/Query/getIntervals()|"
    ],
    "v2Body": [
      "|java+method:///java/util/stream/Stream/map(java.util.function.Function)|",
      "|java+method:///io/druid/java/util/emitter/service/ServiceMetricEvent$Builder/setDimension(java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///java/util/stream/Stream/toArray(java.util.function.IntFunction)|",
      "|java+method:///java/util/List/stream()|",
      "|java+method:///io/druid/query/DefaultQueryMetrics/checkModifiedFromOwnerThread()|",
      "|java+method:///io/druid/query/Query/getIntervals()|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/expression/TimestampFloorExprMacro$TimestampFloorExpr/eval(io.druid.math.expr.Expr$ObjectBinding)|",
    "called": "|java+method:///io/druid/java/util/common/DateTimes/utc(long)|",
    "v1Body": [
      "|java+method:///io/druid/math/expr/Expr/eval(io.druid.math.expr.Expr$ObjectBinding)|",
      "|java+method:///org/joda/time/DateTime/getMillis()|",
      "|java+method:///io/druid/math/expr/ExprEval/asLong()|",
      "|java+method:///io/druid/java/util/common/DateTimes/utc(long)|",
      "|java+method:///io/druid/java/util/common/granularity/Granularity/bucketStart(org.joda.time.DateTime)|",
      "|java+method:///io/druid/math/expr/ExprEval/of(long)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/math/expr/Expr/eval(io.druid.math.expr.Expr$ObjectBinding)|",
      "|java+method:///org/joda/time/DateTime/getMillis()|",
      "|java+method:///io/druid/java/util/common/granularity/PeriodGranularity/bucketStart(org.joda.time.DateTime)|",
      "|java+method:///io/druid/math/expr/ExprEval/of(long)|",
      "|java+method:///io/druid/math/expr/ExprEval/asLong()|",
      "|java+method:///io/druid/java/util/common/DateTimes/utc(long)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/aggregation/first/DoubleFirstAggregatorFactory/getCacheKey()|",
    "called": "|java+method:///io/druid/java/util/common/StringUtils/toUtf8(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///java/nio/ByteBuffer/put(byte%5B%5D)|",
      "|java+method:///com/metamx/common/StringUtils/toUtf8(java.lang.String)|",
      "|java+method:///java/nio/ByteBuffer/put(byte)|",
      "|java+method:///java/nio/ByteBuffer/array()|"
    ],
    "v2Body": [
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///java/nio/ByteBuffer/put(byte%5B%5D)|",
      "|java+method:///java/nio/ByteBuffer/put(byte)|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///io/druid/java/util/common/StringUtils/toUtf8(java.lang.String)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+initializer:///io/druid/query/search/AutoStrategy/AutoStrategy$initializer|",
    "called": "|java+constructor:///io/druid/java/util/emitter/EmittingLogger/EmittingLogger(java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///com/metamx/emitter/EmittingLogger/EmittingLogger(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/java/util/emitter/EmittingLogger/EmittingLogger(java.lang.Class)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/expression/TimestampParseExprMacro/apply(java.util.List)|",
    "called": "|java+method:///io/druid/java/util/common/DateTimes/wrapFormatter(org.joda.time.format.DateTimeFormatter)|",
    "v1Body": [
      "|java+method:///org/joda/time/format/DateTimeFormatter/withZone(org.joda.time.DateTimeZone)|",
      "|java+method:///org/joda/time/format/DateTimeFormat/forPattern(java.lang.String)|",
      "|java+method:///io/druid/math/expr/Expr/getLiteralValue()|",
      "|java+method:///org/joda/time/format/ISODateTimeFormat/dateTimeParser()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/joda/time/DateTimeZone/forID(java.lang.String)|",
      "|java+method:///io/druid/query/expression/TimestampParseExprMacro/name()|",
      "|java+constructor:///io/druid/query/expression/TimestampParseExprMacro$1TimestampParseExpr/TimestampParseExprMacro$1TimestampParseExpr(io.druid.query.expression.TimestampParseExprMacro,org.joda.time.format.DateTimeFormatter,io.druid.math.expr.Expr)|",
      "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "v2Body": [
      "|java+method:///org/joda/time/format/DateTimeFormat/forPattern(java.lang.String)|",
      "|java+method:///io/druid/math/expr/Expr/getLiteralValue()|",
      "|java+method:///io/druid/query/expression/TimestampParseExprMacro/createDefaultParser(org.joda.time.DateTimeZone)|",
      "|java+constructor:///io/druid/query/expression/TimestampParseExprMacro$1TimestampParseExpr/TimestampParseExprMacro$1TimestampParseExpr(io.druid.query.expression.TimestampParseExprMacro,io.druid.math.expr.Expr,io.druid.java.util.common.DateTimes$UtcFormatter)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/joda/time/DateTimeZone/forID(java.lang.String)|",
      "|java+method:///io/druid/query/expression/TimestampParseExprMacro/name()|",
      "|java+method:///org/joda/time/format/DateTimeFormatter/withZone(org.joda.time.DateTimeZone)|",
      "|java+method:///io/druid/java/util/common/DateTimes/wrapFormatter(org.joda.time.format.DateTimeFormatter)|",
      "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/TimewarpOperator$1/run(io.druid.query.QueryPlus,java.util.Map)|",
    "called": "|java+method:///io/druid/java/util/common/guava/Sequences/map(io.druid.java.util.common.guava.Sequence,com.google.common.base.Function)|",
    "v1Body": [
      "|java+method:///java/lang/Math/min(long,long)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/query/TimewarpOperator$1$1/TimewarpOperator$1$1(io.druid.query.TimewarpOperator$1,io.druid.query.QueryPlus,long)|",
      "|java+method:///io/druid/java/util/common/guava/Sequences/map(io.druid.java.util.common.guava.Sequence,com.google.common.base.Function)|",
      "|java+method:///io/druid/query/QueryPlus/withQuerySegmentSpec(io.druid.query.spec.QuerySegmentSpec)|",
      "|java+method:///io/druid/query/QueryRunner/run(io.druid.query.QueryPlus,java.util.Map)|",
      "|java+constructor:///org/joda/time/Interval/Interval(long,long,org.joda.time.Chronology)|",
      "|java+method:///org/joda/time/Interval/getChronology()|",
      "|java+constructor:///io/druid/query/spec/MultipleIntervalSegmentSpec/MultipleIntervalSegmentSpec(java.util.List)|",
      "|java+method:///org/joda/time/Interval/getEndMillis()|",
      "|java+method:///io/druid/query/TimewarpOperator/computeOffset(long)|",
      "|java+method:///io/druid/query/QueryPlus/getQuery()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/joda/time/Interval/getStartMillis()|",
      "|java+method:///io/druid/query/Query/getIntervals()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Math/min(long,long)|",
      "|java+method:///io/druid/query/TimewarpOperator/computeOffset(long,org.joda.time.DateTimeZone)|",
      "|java+method:///io/druid/query/Query/getTimezone()|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/query/TimewarpOperator$1$1/TimewarpOperator$1$1(io.druid.query.TimewarpOperator$1,io.druid.query.QueryPlus,long)|",
      "|java+method:///io/druid/java/util/common/guava/Sequences/map(io.druid.java.util.common.guava.Sequence,com.google.common.base.Function)|",
      "|java+method:///io/druid/query/QueryPlus/withQuerySegmentSpec(io.druid.query.spec.QuerySegmentSpec)|",
      "|java+method:///io/druid/query/QueryRunner/run(io.druid.query.QueryPlus,java.util.Map)|",
      "|java+constructor:///org/joda/time/Interval/Interval(long,long,org.joda.time.Chronology)|",
      "|java+method:///org/joda/time/Interval/getChronology()|",
      "|java+constructor:///io/druid/query/spec/MultipleIntervalSegmentSpec/MultipleIntervalSegmentSpec(java.util.List)|",
      "|java+method:///org/joda/time/Interval/getEndMillis()|",
      "|java+method:///io/druid/query/QueryPlus/getQuery()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/joda/time/Interval/getStartMillis()|",
      "|java+method:///io/druid/query/Query/getIntervals()|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/aggregation/hyperloglog/HyperUniquesAggregatorFactory/factorize(io.druid.segment.ColumnSelectorFactory)|",
    "called": "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///io/druid/segment/ObjectColumnSelector/classOfObject()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///io/druid/segment/ColumnSelectorFactory/makeObjectColumnSelector(java.lang.String)|",
      "|java+method:///io/druid/query/aggregation/NoopAggregator/instance()|",
      "|java+constructor:///io/druid/query/aggregation/hyperloglog/HyperUniquesAggregator/HyperUniquesAggregator(io.druid.segment.ObjectColumnSelector)|",
      "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+constructor:///io/druid/query/aggregation/hyperloglog/HyperUniquesAggregator/HyperUniquesAggregator(io.druid.segment.BaseObjectColumnValueSelector)|",
      "|java+method:///io/druid/query/aggregation/NoopAggregator/instance()|",
      "|java+method:///io/druid/segment/BaseObjectColumnValueSelector/classOfObject()|",
      "|java+method:///io/druid/segment/ColumnSelectorFactory/makeColumnValueSelector(java.lang.String)|",
      "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/groupby/epinephelinae/ConcurrentGrouper/iterator(boolean)|",
    "called": "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///io/druid/query/groupby/epinephelinae/Groupers/mergeIterators(java.lang.Iterable,java.util.Comparator)|",
      "|java+method:///io/druid/query/groupby/epinephelinae/ConcurrentGrouper/isParallelSortAvailable()|",
      "|java+method:///io/druid/query/groupby/epinephelinae/ConcurrentGrouper/parallelSortAndGetGroupersIterator()|",
      "|java+method:///io/druid/query/groupby/epinephelinae/ConcurrentGrouper/getGroupersIterator(boolean)|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/java/util/common/CloseableIterators/concat(java.util.List)|",
      "|java+method:///io/druid/java/util/common/CloseableIterators/mergeSorted(java.util.List,java.util.Comparator)|",
      "|java+method:///io/druid/query/groupby/epinephelinae/ParallelCombiner/combine(java.util.List,java.util.List)|",
      "|java+method:///io/druid/query/groupby/epinephelinae/ConcurrentGrouper/tryMergeDictionary()|",
      "|java+method:///io/druid/query/groupby/epinephelinae/ConcurrentGrouper/parallelSortAndGetGroupersIterator()|",
      "|java+method:///io/druid/query/groupby/epinephelinae/ConcurrentGrouper/isParallelizable()|",
      "|java+method:///io/druid/query/groupby/epinephelinae/ConcurrentGrouper/getGroupersIterator(boolean)|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/aggregation/last/FloatLastAggregatorFactory/getCacheKey()|",
    "called": "|java+method:///io/druid/java/util/common/StringUtils/toUtf8(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///java/nio/ByteBuffer/put(byte%5B%5D)|",
      "|java+method:///com/metamx/common/StringUtils/toUtf8(java.lang.String)|",
      "|java+method:///java/nio/ByteBuffer/put(byte)|",
      "|java+method:///java/nio/ByteBuffer/array()|"
    ],
    "v2Body": [
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///java/nio/ByteBuffer/put(byte%5B%5D)|",
      "|java+method:///java/nio/ByteBuffer/put(byte)|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///io/druid/java/util/common/StringUtils/toUtf8(java.lang.String)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+constructor:///io/druid/query/ExecutorServiceMonitor/ExecutorServiceMonitor()|",
    "called": "|java+constructor:///io/druid/java/util/metrics/AbstractMonitor/AbstractMonitor()|",
    "v1Body": [
      "|java+constructor:///com/metamx/emitter/service/ServiceMetricEvent$Builder/ServiceMetricEvent$Builder()|",
      "|java+constructor:///com/metamx/metrics/AbstractMonitor/AbstractMonitor()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/java/util/metrics/AbstractMonitor/AbstractMonitor()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+constructor:///io/druid/java/util/emitter/service/ServiceMetricEvent$Builder/ServiceMetricEvent$Builder()|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/segment/LongColumnSerializer/open()|",
    "called": "|java+method:///io/druid/java/util/common/StringUtils/format(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///io/druid/segment/data/CompressionFactory/getLongSerializer(io.druid.segment.data.IOPeon,java.lang.String,java.nio.ByteOrder,io.druid.segment.data.CompressionFactory$LongEncodingStrategy,io.druid.segment.data.CompressedObjectStrategy$CompressionStrategy)|",
      "|java+method:///io/druid/segment/data/LongSupplierSerializer/open()|",
      "|java+method:///io/druid/java/util/common/StringUtils/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/segment/data/ColumnarLongsSerializer/open()|",
      "|java+method:///io/druid/segment/data/CompressionFactory/getLongSerializer(io.druid.segment.writeout.SegmentWriteOutMedium,java.lang.String,java.nio.ByteOrder,io.druid.segment.data.CompressionFactory$LongEncodingStrategy,io.druid.segment.data.CompressionStrategy)|",
      "|java+method:///io/druid/java/util/common/StringUtils/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/segment/IndexIO$V9IndexLoader/load(java.io.File,com.fasterxml.jackson.databind.ObjectMapper)|",
    "called": "|java+method:///io/druid/java/util/common/io/smoosh/SmooshedFileMapper/mapFile(java.lang.String)|",
    "v1Body": [
      "|java+method:///io/druid/common/utils/SerializerUtils/readBytes(java.nio.ByteBuffer,int)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/druid/java/util/common/Intervals/utc(long,long)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/iterator()|",
      "|java+method:///io/druid/java/util/common/io/smoosh/SmooshedFileMapper/mapFile(java.lang.String)|",
      "|java+method:///java/nio/ByteBuffer/getLong()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/druid/segment/IndexIO/access$100()|",
      "|java+method:///io/druid/common/utils/SerializerUtils/readString(java.nio.ByteBuffer)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/warn(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/segment/data/BitmapSerde$LegacyBitmapSerdeFactory/BitmapSerde$LegacyBitmapSerdeFactory()|",
      "|java+method:///io/druid/java/util/common/io/smoosh/Smoosh/map(java.io.File)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(byte%5B%5D,java.lang.Class)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///io/druid/segment/data/BitmapSerdeFactory/getBitmapFactory()|",
      "|java+method:///com/metamx/emitter/EmittingLogger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/druid/segment/IndexIO$V9IndexLoader/deserializeColumn(com.fasterxml.jackson.databind.ObjectMapper,java.nio.ByteBuffer,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(java.lang.String,java.lang.Class)|",
      "|java+method:///java/nio/ByteBuffer/remaining()|",
      "|java+method:///com/google/common/io/Files/toByteArray(java.io.File)|",
      "|java+method:///java/nio/ByteBuffer/hasRemaining()|",
      "|java+method:///io/druid/segment/IndexIO/access$000()|",
      "|java+method:///com/google/common/primitives/Ints/fromByteArray(byte%5B%5D)|",
      "|java+constructor:///io/druid/segment/SimpleQueryableIndex/SimpleQueryableIndex(org.joda.time.Interval,io.druid.segment.data.Indexed,io.druid.segment.data.Indexed,io.druid.collections.bitmap.BitmapFactory,java.util.Map,io.druid.java.util.common.io.smoosh.SmooshedFileMapper,io.druid.segment.Metadata)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/read(java.nio.ByteBuffer,io.druid.segment.data.ObjectStrategy,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+method:///java/lang/System/currentTimeMillis()|"
    ],
    "v2Body": [
      "|java+method:///io/druid/common/utils/SerializerUtils/readBytes(java.nio.ByteBuffer,int)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/druid/java/util/common/Intervals/utc(long,long)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/iterator()|",
      "|java+method:///io/druid/java/util/common/io/smoosh/SmooshedFileMapper/mapFile(java.lang.String)|",
      "|java+method:///java/nio/ByteBuffer/getLong()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/druid/segment/IndexIO/access$100()|",
      "|java+method:///io/druid/common/utils/SerializerUtils/readString(java.nio.ByteBuffer)|",
      "|java+constructor:///io/druid/segment/data/BitmapSerde$LegacyBitmapSerdeFactory/BitmapSerde$LegacyBitmapSerdeFactory()|",
      "|java+method:///io/druid/java/util/emitter/EmittingLogger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/druid/java/util/common/io/smoosh/Smoosh/map(java.io.File)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(byte%5B%5D,java.lang.Class)|",
      "|java+method:///io/druid/java/util/emitter/EmittingLogger/warn(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///io/druid/segment/data/BitmapSerdeFactory/getBitmapFactory()|",
      "|java+method:///io/druid/segment/IndexIO$V9IndexLoader/deserializeColumn(com.fasterxml.jackson.databind.ObjectMapper,java.nio.ByteBuffer,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(java.lang.String,java.lang.Class)|",
      "|java+method:///java/nio/ByteBuffer/remaining()|",
      "|java+method:///com/google/common/io/Files/toByteArray(java.io.File)|",
      "|java+method:///java/nio/ByteBuffer/hasRemaining()|",
      "|java+method:///io/druid/segment/IndexIO/access$000()|",
      "|java+method:///com/google/common/primitives/Ints/fromByteArray(byte%5B%5D)|",
      "|java+constructor:///io/druid/segment/SimpleQueryableIndex/SimpleQueryableIndex(org.joda.time.Interval,io.druid.segment.data.Indexed,io.druid.segment.data.Indexed,io.druid.collections.bitmap.BitmapFactory,java.util.Map,io.druid.java.util.common.io.smoosh.SmooshedFileMapper,io.druid.segment.Metadata)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/read(java.nio.ByteBuffer,io.druid.segment.data.ObjectStrategy,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+method:///java/lang/System/currentTimeMillis()|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/aggregation/last/LongLastAggregatorFactory/getCacheKey()|",
    "called": "|java+method:///io/druid/java/util/common/StringUtils/toUtf8(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///java/nio/ByteBuffer/put(byte%5B%5D)|",
      "|java+method:///com/metamx/common/StringUtils/toUtf8(java.lang.String)|",
      "|java+method:///java/nio/ByteBuffer/put(byte)|",
      "|java+method:///java/nio/ByteBuffer/array()|"
    ],
    "v2Body": [
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///java/nio/ByteBuffer/put(byte%5B%5D)|",
      "|java+method:///java/nio/ByteBuffer/put(byte)|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///io/druid/java/util/common/StringUtils/toUtf8(java.lang.String)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/segment/IndexMergerV9/makeColumn(io.druid.java.util.common.io.smoosh.FileSmoosher,java.lang.String,io.druid.segment.column.ColumnDescriptor)|",
    "called": "|java+method:///io/druid/java/util/common/io/smoosh/FileSmoosher/addWithSmooshedWriter(java.lang.String,long)|",
    "v1Body": [
      "|java+method:///io/druid/common/utils/SerializerUtils/writeString(java.io.OutputStream,java.lang.String)|",
      "|java+method:///io/druid/segment/column/ColumnDescriptor/numBytes()|",
      "|java+method:///io/druid/io/ZeroCopyByteArrayOutputStream/size()|",
      "|java+method:///io/druid/java/util/common/io/smoosh/SmooshedWriter/close()|",
      "|java+constructor:///io/druid/io/ZeroCopyByteArrayOutputStream/ZeroCopyByteArrayOutputStream()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsString(java.lang.Object)|",
      "|java+method:///io/druid/segment/column/ColumnDescriptor/write(java.nio.channels.WritableByteChannel,io.druid.java.util.common.io.smoosh.FileSmoosher)|",
      "|java+method:///io/druid/java/util/common/io/smoosh/FileSmoosher/addWithSmooshedWriter(java.lang.String,long)|",
      "|java+method:///io/druid/io/ZeroCopyByteArrayOutputStream/writeTo(java.nio.channels.WritableByteChannel)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/common/utils/SerializerUtils/writeString(java.io.OutputStream,java.lang.String)|",
      "|java+method:///io/druid/io/ZeroCopyByteArrayOutputStream/size()|",
      "|java+method:///io/druid/java/util/common/io/smoosh/SmooshedWriter/close()|",
      "|java+method:///io/druid/segment/column/ColumnDescriptor/writeTo(java.nio.channels.WritableByteChannel,io.druid.java.util.common.io.smoosh.FileSmoosher)|",
      "|java+constructor:///io/druid/io/ZeroCopyByteArrayOutputStream/ZeroCopyByteArrayOutputStream()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsString(java.lang.Object)|",
      "|java+method:///io/druid/segment/column/ColumnDescriptor/getSerializedSize()|",
      "|java+method:///io/druid/java/util/common/io/smoosh/FileSmoosher/addWithSmooshedWriter(java.lang.String,long)|",
      "|java+method:///io/druid/io/ZeroCopyByteArrayOutputStream/writeTo(java.nio.channels.WritableByteChannel)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/DefaultQueryMetrics/setDimension(java.lang.String,java.lang.String)|",
    "called": "|java+method:///io/druid/java/util/emitter/service/ServiceMetricEvent$Builder/setDimension(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///com/metamx/emitter/service/ServiceMetricEvent$Builder/setDimension(java.lang.String,java.lang.String)|",
      "|java+method:///io/druid/query/DefaultQueryMetrics/checkModifiedFromOwnerThread()|"
    ],
    "v2Body": [
      "|java+method:///io/druid/java/util/emitter/service/ServiceMetricEvent$Builder/setDimension(java.lang.String,java.lang.String)|",
      "|java+method:///io/druid/query/DefaultQueryMetrics/checkModifiedFromOwnerThread()|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/aggregation/hyperloglog/HyperUniquesAggregatorFactory/factorizeBuffered(io.druid.segment.ColumnSelectorFactory)|",
    "called": "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///io/druid/segment/ObjectColumnSelector/classOfObject()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///io/druid/segment/ColumnSelectorFactory/makeObjectColumnSelector(java.lang.String)|",
      "|java+method:///io/druid/query/aggregation/NoopBufferAggregator/instance()|",
      "|java+constructor:///io/druid/query/aggregation/hyperloglog/HyperUniquesBufferAggregator/HyperUniquesBufferAggregator(io.druid.segment.ObjectColumnSelector)|",
      "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+constructor:///io/druid/query/aggregation/hyperloglog/HyperUniquesBufferAggregator/HyperUniquesBufferAggregator(io.druid.segment.BaseObjectColumnValueSelector)|",
      "|java+method:///io/druid/query/aggregation/NoopBufferAggregator/instance()|",
      "|java+method:///io/druid/segment/BaseObjectColumnValueSelector/classOfObject()|",
      "|java+method:///io/druid/segment/ColumnSelectorFactory/makeColumnValueSelector(java.lang.String)|",
      "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/segment/serde/LargeColumnSupportedComplexColumnSerializer/open()|",
    "called": "|java+method:///io/druid/java/util/common/StringUtils/format(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+constructor:///io/druid/segment/data/GenericIndexedWriter/GenericIndexedWriter(io.druid.segment.data.IOPeon,java.lang.String,io.druid.segment.data.ObjectStrategy,int)|",
      "|java+method:///io/druid/segment/data/GenericIndexedWriter/open()|",
      "|java+method:///io/druid/java/util/common/StringUtils/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/segment/data/GenericIndexedWriter/GenericIndexedWriter(io.druid.segment.writeout.SegmentWriteOutMedium,java.lang.String,io.druid.segment.data.ObjectStrategy,int)|",
      "|java+method:///io/druid/segment/data/GenericIndexedWriter/open()|",
      "|java+method:///io/druid/java/util/common/StringUtils/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/segment/incremental/IncrementalIndex/toTimeAndDims(io.druid.data.input.InputRow)|",
    "called": "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///io/druid/segment/incremental/IncrementalIndex$DimensionDesc/getIndexer()|",
      "|java+method:///io/druid/segment/DimensionIndexer/processRowValsToUnsortedEncodedKeyComponent(java.lang.Object)|",
      "|java+constructor:///io/druid/segment/incremental/IncrementalIndex$TimeAndDims/IncrementalIndex$TimeAndDims(long,java.lang.Object%5B%5D,java.util.List)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Math/max(long,long)|",
      "|java+method:///io/druid/data/input/InputRow/getDimensions()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex$DimensionDesc/getIndex()|",
      "|java+method:///io/druid/data/input/InputRow/getRaw(java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///io/druid/segment/DimensionHandler/getLengthOfEncodedKeyComponent(java.lang.Object)|",
      "|java+method:///io/druid/segment/DimensionHandlerUtils/getHandlerFromCapabilities(java.lang.String,io.druid.segment.column.ColumnCapabilities,io.druid.data.input.impl.DimensionSchema$MultiValueHandling)|",
      "|java+method:///io/druid/java/util/common/DateTimes/utc(long)|",
      "|java+method:///org/joda/time/DateTime/getMillis()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/druid/segment/column/ColumnCapabilitiesImpl/setHasBitmapIndexes(boolean)|",
      "|java+method:///io/druid/data/input/InputRow/getTimestamp()|",
      "|java+method:///io/druid/segment/column/ColumnCapabilitiesImpl/hasMultipleValues()|",
      "|java+method:///io/druid/segment/column/ColumnCapabilitiesImpl/setType(io.druid.segment.column.ValueType)|",
      "|java+method:///io/druid/java/util/common/granularity/Granularity/bucketStart(org.joda.time.DateTime)|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex$DimensionDesc/getHandler()|",
      "|java+constructor:///io/druid/segment/column/ColumnCapabilitiesImpl/ColumnCapabilitiesImpl()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex$DimensionDesc/getCapabilities()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex/formatRow(io.druid.data.input.InputRow)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Map/size()|",
      "|java+method:///io/druid/data/input/InputRow/getTimestampFromEpoch()|",
      "|java+method:///io/druid/segment/column/ColumnCapabilitiesImpl/setDictionaryEncoded(boolean)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex/addNewDimension(java.lang.String,io.druid.segment.column.ColumnCapabilitiesImpl,io.druid.segment.DimensionHandler)|",
      "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)|",
      "|java+method:///io/druid/segment/column/ColumnCapabilitiesImpl/setHasMultipleValues(boolean)|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/segment/incremental/IncrementalIndex$DimensionDesc/getIndexer()|",
      "|java+constructor:///io/druid/segment/incremental/IncrementalIndex$TimeAndDims/IncrementalIndex$TimeAndDims(long,java.lang.Object%5B%5D,java.util.List)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Math/max(long,long)|",
      "|java+method:///io/druid/data/input/InputRow/getDimensions()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex$DimensionDesc/getIndex()|",
      "|java+method:///io/druid/data/input/InputRow/getRaw(java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///io/druid/segment/DimensionHandler/getLengthOfEncodedKeyComponent(java.lang.Object)|",
      "|java+method:///io/druid/segment/DimensionHandlerUtils/getHandlerFromCapabilities(java.lang.String,io.druid.segment.column.ColumnCapabilities,io.druid.data.input.impl.DimensionSchema$MultiValueHandling)|",
      "|java+method:///io/druid/java/util/common/DateTimes/utc(long)|",
      "|java+method:///org/joda/time/DateTime/getMillis()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/druid/segment/DimensionIndexer/processRowValsToUnsortedEncodedKeyComponent(java.lang.Object,boolean)|",
      "|java+method:///io/druid/segment/column/ColumnCapabilitiesImpl/setHasBitmapIndexes(boolean)|",
      "|java+method:///io/druid/data/input/InputRow/getTimestamp()|",
      "|java+method:///io/druid/segment/column/ColumnCapabilitiesImpl/hasMultipleValues()|",
      "|java+method:///io/druid/segment/column/ColumnCapabilitiesImpl/setType(io.druid.segment.column.ValueType)|",
      "|java+method:///io/druid/java/util/common/granularity/Granularity/bucketStart(org.joda.time.DateTime)|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex$DimensionDesc/getHandler()|",
      "|java+constructor:///io/druid/segment/column/ColumnCapabilitiesImpl/ColumnCapabilitiesImpl()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex$DimensionDesc/getCapabilities()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex/formatRow(io.druid.data.input.InputRow)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Map/size()|",
      "|java+method:///io/druid/data/input/InputRow/getTimestampFromEpoch()|",
      "|java+method:///io/druid/segment/column/ColumnCapabilitiesImpl/setDictionaryEncoded(boolean)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex/addNewDimension(java.lang.String,io.druid.segment.column.ColumnCapabilitiesImpl,io.druid.segment.DimensionHandler)|",
      "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)|",
      "|java+method:///io/druid/segment/column/ColumnCapabilitiesImpl/setHasMultipleValues(boolean)|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/segment/data/GenericIndexed$1/toBytes(java.lang.String)|",
    "called": "|java+method:///io/druid/java/util/common/StringUtils/toUtf8(java.lang.String)|",
    "v1Body": [
      "|java+method:///io/druid/java/util/common/StringUtils/toUtf8(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/java/util/common/StringUtils/toUtf8(java.lang.String)|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+constructor:///io/druid/query/groupby/epinephelinae/ByteBufferIntList/ByteBufferIntList(java.nio.ByteBuffer,int)|",
    "called": "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///java/nio/ByteBuffer/capacity()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///com/metamx/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///java/nio/ByteBuffer/capacity()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/segment/data/GenericIndexedWriter/bagSizePower()|",
    "called": "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///com/google/common/io/CountingOutputStream/getCount()|",
      "|java+method:///java/io/RandomAccessFile/close()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///io/druid/segment/data/GenericIndexedWriter/makeFilename(java.lang.String)|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/io/RandomAccessFile/RandomAccessFile(java.io.File,java.lang.String)|",
      "|java+method:///io/druid/segment/data/IOPeon/getFile(java.lang.String)|",
      "|java+method:///io/druid/segment/data/GenericIndexedWriter/actuallyFits(int,java.io.RandomAccessFile)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/druid/segment/data/GenericIndexedWriter/actuallyFits(int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///io/druid/segment/writeout/WriteOutBytes/size()|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/segment/IndexMergerV9/makeTimeColumn(io.druid.java.util.common.io.smoosh.FileSmoosher,io.druid.segment.ProgressIndicator,io.druid.segment.LongColumnSerializer)|",
    "called": "|java+method:///io/druid/java/util/common/logger/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///io/druid/segment/serde/LongGenericColumnPartSerde$SerializerBuilder/withDelegate(io.druid.segment.LongColumnSerializer)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/druid/segment/IndexMergerV9/makeColumn(io.druid.java.util.common.io.smoosh.FileSmoosher,java.lang.String,io.druid.segment.column.ColumnDescriptor)|",
      "|java+method:///io/druid/segment/column/ColumnDescriptor$Builder/addSerde(io.druid.segment.serde.ColumnPartSerde)|",
      "|java+method:///io/druid/segment/serde/LongGenericColumnPartSerde$SerializerBuilder/withByteOrder(java.nio.ByteOrder)|",
      "|java+method:///io/druid/segment/column/ColumnDescriptor/builder()|",
      "|java+method:///io/druid/java/util/common/logger/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///io/druid/segment/LongColumnSerializer/close()|",
      "|java+method:///io/druid/segment/column/ColumnDescriptor$Builder/build()|",
      "|java+method:///io/druid/segment/serde/LongGenericColumnPartSerde$SerializerBuilder/build()|",
      "|java+method:///io/druid/segment/serde/LongGenericColumnPartSerde/serializerBuilder()|",
      "|java+method:///io/druid/segment/column/ColumnDescriptor$Builder/setValueType(io.druid.segment.column.ValueType)|",
      "|java+method:///io/druid/segment/ProgressIndicator/startSection(java.lang.String)|",
      "|java+method:///io/druid/segment/ProgressIndicator/stopSection(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/segment/serde/LongGenericColumnPartSerde$SerializerBuilder/withDelegate(io.druid.segment.LongColumnSerializer)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/druid/segment/IndexMergerV9/makeColumn(io.druid.java.util.common.io.smoosh.FileSmoosher,java.lang.String,io.druid.segment.column.ColumnDescriptor)|",
      "|java+method:///io/druid/segment/column/ColumnDescriptor$Builder/addSerde(io.druid.segment.serde.ColumnPartSerde)|",
      "|java+method:///io/druid/segment/serde/LongGenericColumnPartSerde$SerializerBuilder/withByteOrder(java.nio.ByteOrder)|",
      "|java+method:///io/druid/segment/column/ColumnDescriptor/builder()|",
      "|java+method:///io/druid/java/util/common/logger/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///io/druid/segment/column/ColumnDescriptor$Builder/build()|",
      "|java+method:///io/druid/segment/serde/LongGenericColumnPartSerde$SerializerBuilder/build()|",
      "|java+method:///io/druid/segment/serde/LongGenericColumnPartSerde/serializerBuilder()|",
      "|java+method:///io/druid/segment/column/ColumnDescriptor$Builder/setValueType(io.druid.segment.column.ValueType)|",
      "|java+method:///io/druid/segment/ProgressIndicator/startSection(java.lang.String)|",
      "|java+method:///io/druid/segment/ProgressIndicator/stopSection(java.lang.String)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/groupby/epinephelinae/CloseableGrouperIterator/close()|",
    "called": "|java+method:///io/druid/java/util/common/io/Closer/close()|",
    "v1Body": [
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///java/io/Closeable/close()|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///io/druid/java/util/common/io/Closer/close()|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/timeboundary/TimeBoundaryQueryRunnerFactory$TimeBoundaryQueryRunner$1/apply(io.druid.segment.Cursor)|",
    "called": "|java+method:///io/druid/java/util/common/DateTimes/utc(long)|",
    "v1Body": [
      "|java+method:///io/druid/segment/Cursor/getColumnSelectorFactory()|",
      "|java+method:///io/druid/segment/Cursor/isDone()|",
      "|java+method:///io/druid/segment/StorageAdapter/getInterval()|",
      "|java+method:///org/joda/time/Interval/getStart()|",
      "|java+method:///io/druid/query/timeboundary/TimeBoundaryQueryRunnerFactory$TimeBoundaryQueryRunner/access$000(io.druid.query.timeboundary.TimeBoundaryQueryRunnerFactory$TimeBoundaryQueryRunner)|",
      "|java+constructor:///io/druid/query/Result/Result(org.joda.time.DateTime,java.lang.Object)|",
      "|java+method:///io/druid/java/util/common/DateTimes/utc(long)|",
      "|java+method:///io/druid/segment/ColumnSelectorFactory/makeLongColumnSelector(java.lang.String)|",
      "|java+method:///io/druid/segment/LongColumnSelector/getLong()|"
    ],
    "v2Body": [
      "|java+method:///io/druid/segment/Cursor/getColumnSelectorFactory()|",
      "|java+method:///io/druid/segment/Cursor/isDone()|",
      "|java+method:///io/druid/segment/StorageAdapter/getInterval()|",
      "|java+method:///org/joda/time/Interval/getStart()|",
      "|java+method:///io/druid/segment/ColumnSelectorFactory/makeColumnValueSelector(java.lang.String)|",
      "|java+method:///io/druid/query/timeboundary/TimeBoundaryQueryRunnerFactory$TimeBoundaryQueryRunner/access$000(io.druid.query.timeboundary.TimeBoundaryQueryRunnerFactory$TimeBoundaryQueryRunner)|",
      "|java+method:///io/druid/segment/BaseLongColumnValueSelector/getLong()|",
      "|java+constructor:///io/druid/query/Result/Result(org.joda.time.DateTime,java.lang.Object)|",
      "|java+method:///io/druid/java/util/common/DateTimes/utc(long)|"
    ],
    "affectedLib": "io.druid:java-util:0.12.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/jackson/JodaStuff$DateTimeDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/mappingException(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/joda/time/format/ISODateTimeFormat/dateTimeParser()|",
      "|java+method:///io/druid/jackson/JodaStuff$DateTimeDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///org/joda/time/format/DateTimeFormatter/parseDateTime(java.lang.String)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/mappingException(java.lang.Class)|",
      "|java+method:///org/joda/time/format/DateTimeFormatter/withOffsetParsed()|",
      "|java+method:///io/druid/java/util/common/DateTimes/utc(long)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getText()|",
      "|java+method:///io/druid/jackson/JodaStuff$DateTimeDeserializer/getValueClass()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getLongValue()|"
    ],
    "v2Body": [
      "|java+method:///io/druid/jackson/JodaStuff$DateTimeDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/mappingException(java.lang.Class)|",
      "|java+method:///io/druid/java/util/common/DateTimes$UtcFormatter/parse(java.lang.String)|",
      "|java+method:///io/druid/java/util/common/DateTimes/utc(long)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getText()|",
      "|java+method:///io/druid/jackson/JodaStuff$DateTimeDeserializer/getValueClass()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getLongValue()|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.4.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/segment/IndexIO$V9IndexLoader/load(java.io.File,com.fasterxml.jackson.databind.ObjectMapper)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(byte%5B%5D,java.lang.Class)|",
    "v1Body": [
      "|java+method:///io/druid/common/utils/SerializerUtils/readBytes(java.nio.ByteBuffer,int)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/druid/java/util/common/Intervals/utc(long,long)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/iterator()|",
      "|java+method:///io/druid/java/util/common/io/smoosh/SmooshedFileMapper/mapFile(java.lang.String)|",
      "|java+method:///java/nio/ByteBuffer/getLong()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/druid/segment/IndexIO/access$100()|",
      "|java+method:///io/druid/common/utils/SerializerUtils/readString(java.nio.ByteBuffer)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/warn(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/segment/data/BitmapSerde$LegacyBitmapSerdeFactory/BitmapSerde$LegacyBitmapSerdeFactory()|",
      "|java+method:///io/druid/java/util/common/io/smoosh/Smoosh/map(java.io.File)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(byte%5B%5D,java.lang.Class)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///io/druid/segment/data/BitmapSerdeFactory/getBitmapFactory()|",
      "|java+method:///com/metamx/emitter/EmittingLogger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/druid/segment/IndexIO$V9IndexLoader/deserializeColumn(com.fasterxml.jackson.databind.ObjectMapper,java.nio.ByteBuffer,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(java.lang.String,java.lang.Class)|",
      "|java+method:///java/nio/ByteBuffer/remaining()|",
      "|java+method:///com/google/common/io/Files/toByteArray(java.io.File)|",
      "|java+method:///java/nio/ByteBuffer/hasRemaining()|",
      "|java+method:///io/druid/segment/IndexIO/access$000()|",
      "|java+method:///com/google/common/primitives/Ints/fromByteArray(byte%5B%5D)|",
      "|java+constructor:///io/druid/segment/SimpleQueryableIndex/SimpleQueryableIndex(org.joda.time.Interval,io.druid.segment.data.Indexed,io.druid.segment.data.Indexed,io.druid.collections.bitmap.BitmapFactory,java.util.Map,io.druid.java.util.common.io.smoosh.SmooshedFileMapper,io.druid.segment.Metadata)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/read(java.nio.ByteBuffer,io.druid.segment.data.ObjectStrategy,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+method:///java/lang/System/currentTimeMillis()|"
    ],
    "v2Body": [
      "|java+method:///io/druid/common/utils/SerializerUtils/readBytes(java.nio.ByteBuffer,int)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/druid/java/util/common/Intervals/utc(long,long)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/iterator()|",
      "|java+method:///io/druid/java/util/common/io/smoosh/SmooshedFileMapper/mapFile(java.lang.String)|",
      "|java+method:///java/nio/ByteBuffer/getLong()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/druid/segment/IndexIO/access$100()|",
      "|java+method:///io/druid/common/utils/SerializerUtils/readString(java.nio.ByteBuffer)|",
      "|java+constructor:///io/druid/segment/data/BitmapSerde$LegacyBitmapSerdeFactory/BitmapSerde$LegacyBitmapSerdeFactory()|",
      "|java+method:///io/druid/java/util/emitter/EmittingLogger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/druid/java/util/common/io/smoosh/Smoosh/map(java.io.File)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(byte%5B%5D,java.lang.Class)|",
      "|java+method:///io/druid/java/util/emitter/EmittingLogger/warn(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///io/druid/segment/data/BitmapSerdeFactory/getBitmapFactory()|",
      "|java+method:///io/druid/segment/IndexIO$V9IndexLoader/deserializeColumn(com.fasterxml.jackson.databind.ObjectMapper,java.nio.ByteBuffer,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(java.lang.String,java.lang.Class)|",
      "|java+method:///java/nio/ByteBuffer/remaining()|",
      "|java+method:///com/google/common/io/Files/toByteArray(java.io.File)|",
      "|java+method:///java/nio/ByteBuffer/hasRemaining()|",
      "|java+method:///io/druid/segment/IndexIO/access$000()|",
      "|java+method:///com/google/common/primitives/Ints/fromByteArray(byte%5B%5D)|",
      "|java+constructor:///io/druid/segment/SimpleQueryableIndex/SimpleQueryableIndex(org.joda.time.Interval,io.druid.segment.data.Indexed,io.druid.segment.data.Indexed,io.druid.collections.bitmap.BitmapFactory,java.util.Map,io.druid.java.util.common.io.smoosh.SmooshedFileMapper,io.druid.segment.Metadata)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/read(java.nio.ByteBuffer,io.druid.segment.data.ObjectStrategy,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+method:///java/lang/System/currentTimeMillis()|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.4.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/segment/IndexMergerV9/makeColumn(io.druid.java.util.common.io.smoosh.FileSmoosher,java.lang.String,io.druid.segment.column.ColumnDescriptor)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsString(java.lang.Object)|",
    "v1Body": [
      "|java+method:///io/druid/common/utils/SerializerUtils/writeString(java.io.OutputStream,java.lang.String)|",
      "|java+method:///io/druid/segment/column/ColumnDescriptor/numBytes()|",
      "|java+method:///io/druid/io/ZeroCopyByteArrayOutputStream/size()|",
      "|java+method:///io/druid/java/util/common/io/smoosh/SmooshedWriter/close()|",
      "|java+constructor:///io/druid/io/ZeroCopyByteArrayOutputStream/ZeroCopyByteArrayOutputStream()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsString(java.lang.Object)|",
      "|java+method:///io/druid/segment/column/ColumnDescriptor/write(java.nio.channels.WritableByteChannel,io.druid.java.util.common.io.smoosh.FileSmoosher)|",
      "|java+method:///io/druid/java/util/common/io/smoosh/FileSmoosher/addWithSmooshedWriter(java.lang.String,long)|",
      "|java+method:///io/druid/io/ZeroCopyByteArrayOutputStream/writeTo(java.nio.channels.WritableByteChannel)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/common/utils/SerializerUtils/writeString(java.io.OutputStream,java.lang.String)|",
      "|java+method:///io/druid/io/ZeroCopyByteArrayOutputStream/size()|",
      "|java+method:///io/druid/java/util/common/io/smoosh/SmooshedWriter/close()|",
      "|java+method:///io/druid/segment/column/ColumnDescriptor/writeTo(java.nio.channels.WritableByteChannel,io.druid.java.util.common.io.smoosh.FileSmoosher)|",
      "|java+constructor:///io/druid/io/ZeroCopyByteArrayOutputStream/ZeroCopyByteArrayOutputStream()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsString(java.lang.Object)|",
      "|java+method:///io/druid/segment/column/ColumnDescriptor/getSerializedSize()|",
      "|java+method:///io/druid/java/util/common/io/smoosh/FileSmoosher/addWithSmooshedWriter(java.lang.String,long)|",
      "|java+method:///io/druid/io/ZeroCopyByteArrayOutputStream/writeTo(java.nio.channels.WritableByteChannel)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.4.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/segment/IndexMergerV9/makeIndexBinary(io.druid.java.util.common.io.smoosh.FileSmoosher,java.util.List,java.io.File,java.util.List,java.util.List,io.druid.segment.ProgressIndicator,io.druid.segment.IndexSpec,java.util.List)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsString(java.lang.Object)|",
    "v1Body": [
      "|java+method:///io/druid/common/utils/SerializerUtils/writeString(java.nio.channels.WritableByteChannel,java.lang.String)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/druid/segment/DimensionMerger/canSkip()|",
      "|java+constructor:///org/joda/time/Interval/Interval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)|",
      "|java+method:///org/joda/time/Interval/getEnd()|",
      "|java+method:///io/druid/common/utils/SerializerUtils/getSerializedStringByteSize(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/joda/time/Interval/getStart()|",
      "|java+method:///io/druid/common/utils/SerializerUtils/writeLong(java.nio.channels.WritableByteChannel,long)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///io/druid/segment/data/GenericIndexed/writeToChannel(java.nio.channels.WritableByteChannel)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///io/druid/segment/IndexIO/checkFileSize(java.io.File)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/druid/segment/IndexableAdapter/getDataInterval()|",
      "|java+method:///java/util/Set/addAll(java.util.Collection)|",
      "|java+method:///io/druid/java/util/common/io/smoosh/SmooshedWriter/close()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsString(java.lang.Object)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///io/druid/java/util/common/JodaUtils/maxDateTime(org.joda.time.DateTime%5B%5D)|",
      "|java+method:///org/joda/time/Interval/getEndMillis()|",
      "|java+method:///io/druid/segment/data/GenericIndexed/getSerializedSize()|",
      "|java+method:///io/druid/java/util/common/io/smoosh/FileSmoosher/addWithSmooshedWriter(java.lang.String,long)|",
      "|java+method:///com/google/common/collect/Sets/newLinkedHashSet()|",
      "|java+method:///io/druid/segment/IndexSpec/getBitmapSerdeFactory()|",
      "|java+method:///io/druid/java/util/common/logger/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/joda/time/Interval/getStartMillis()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///io/druid/segment/ProgressIndicator/startSection(java.lang.String)|",
      "|java+method:///io/druid/segment/ProgressIndicator/stopSection(java.lang.String)|",
      "|java+method:///io/druid/java/util/common/JodaUtils/minDateTime(org.joda.time.DateTime%5B%5D)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/fromIterable(java.lang.Iterable,io.druid.segment.data.ObjectStrategy)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/common/utils/SerializerUtils/writeString(java.nio.channels.WritableByteChannel,java.lang.String)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/druid/segment/DimensionMerger/canSkip()|",
      "|java+constructor:///org/joda/time/Interval/Interval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)|",
      "|java+method:///io/druid/common/utils/SerializerUtils/getSerializedStringByteSize(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/joda/time/Interval/getStart()|",
      "|java+method:///io/druid/common/utils/SerializerUtils/writeLong(java.nio.channels.WritableByteChannel,long)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///io/druid/segment/IndexIO/checkFileSize(java.io.File)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/druid/segment/IndexableAdapter/getDataInterval()|",
      "|java+method:///java/util/Set/addAll(java.util.Collection)|",
      "|java+method:///io/druid/java/util/common/io/smoosh/SmooshedWriter/close()|",
      "|java+method:///org/joda/time/Interval/getEnd()|",
      "|java+method:///io/druid/segment/data/GenericIndexed/writeTo(java.nio.channels.WritableByteChannel,io.druid.java.util.common.io.smoosh.FileSmoosher)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsString(java.lang.Object)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///io/druid/java/util/common/JodaUtils/maxDateTime(org.joda.time.DateTime%5B%5D)|",
      "|java+method:///org/joda/time/Interval/getEndMillis()|",
      "|java+method:///io/druid/segment/data/GenericIndexed/getSerializedSize()|",
      "|java+method:///io/druid/java/util/common/io/smoosh/FileSmoosher/addWithSmooshedWriter(java.lang.String,long)|",
      "|java+method:///com/google/common/collect/Sets/newLinkedHashSet()|",
      "|java+method:///io/druid/segment/IndexSpec/getBitmapSerdeFactory()|",
      "|java+method:///io/druid/java/util/common/logger/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/joda/time/Interval/getStartMillis()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///io/druid/segment/ProgressIndicator/startSection(java.lang.String)|",
      "|java+method:///io/druid/segment/ProgressIndicator/stopSection(java.lang.String)|",
      "|java+method:///io/druid/java/util/common/JodaUtils/minDateTime(org.joda.time.DateTime%5B%5D)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/fromIterable(java.lang.Iterable,io.druid.segment.data.ObjectStrategy)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.4.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/segment/IndexMergerV9/makeIndexBinary(io.druid.java.util.common.io.smoosh.FileSmoosher,java.util.List,java.io.File,java.util.List,java.util.List,io.druid.segment.ProgressIndicator,io.druid.segment.IndexSpec,java.util.List)|",
    "called": "|java+method:///io/druid/common/utils/SerializerUtils/writeString(java.nio.channels.WritableByteChannel,java.lang.String)|",
    "v1Body": [
      "|java+method:///io/druid/common/utils/SerializerUtils/writeString(java.nio.channels.WritableByteChannel,java.lang.String)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/druid/segment/DimensionMerger/canSkip()|",
      "|java+constructor:///org/joda/time/Interval/Interval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)|",
      "|java+method:///org/joda/time/Interval/getEnd()|",
      "|java+method:///io/druid/common/utils/SerializerUtils/getSerializedStringByteSize(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/joda/time/Interval/getStart()|",
      "|java+method:///io/druid/common/utils/SerializerUtils/writeLong(java.nio.channels.WritableByteChannel,long)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///io/druid/segment/data/GenericIndexed/writeToChannel(java.nio.channels.WritableByteChannel)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///io/druid/segment/IndexIO/checkFileSize(java.io.File)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/druid/segment/IndexableAdapter/getDataInterval()|",
      "|java+method:///java/util/Set/addAll(java.util.Collection)|",
      "|java+method:///io/druid/java/util/common/io/smoosh/SmooshedWriter/close()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsString(java.lang.Object)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///io/druid/java/util/common/JodaUtils/maxDateTime(org.joda.time.DateTime%5B%5D)|",
      "|java+method:///org/joda/time/Interval/getEndMillis()|",
      "|java+method:///io/druid/segment/data/GenericIndexed/getSerializedSize()|",
      "|java+method:///io/druid/java/util/common/io/smoosh/FileSmoosher/addWithSmooshedWriter(java.lang.String,long)|",
      "|java+method:///com/google/common/collect/Sets/newLinkedHashSet()|",
      "|java+method:///io/druid/segment/IndexSpec/getBitmapSerdeFactory()|",
      "|java+method:///io/druid/java/util/common/logger/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/joda/time/Interval/getStartMillis()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///io/druid/segment/ProgressIndicator/startSection(java.lang.String)|",
      "|java+method:///io/druid/segment/ProgressIndicator/stopSection(java.lang.String)|",
      "|java+method:///io/druid/java/util/common/JodaUtils/minDateTime(org.joda.time.DateTime%5B%5D)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/fromIterable(java.lang.Iterable,io.druid.segment.data.ObjectStrategy)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/common/utils/SerializerUtils/writeString(java.nio.channels.WritableByteChannel,java.lang.String)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/druid/segment/DimensionMerger/canSkip()|",
      "|java+constructor:///org/joda/time/Interval/Interval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)|",
      "|java+method:///io/druid/common/utils/SerializerUtils/getSerializedStringByteSize(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/joda/time/Interval/getStart()|",
      "|java+method:///io/druid/common/utils/SerializerUtils/writeLong(java.nio.channels.WritableByteChannel,long)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///io/druid/segment/IndexIO/checkFileSize(java.io.File)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/druid/segment/IndexableAdapter/getDataInterval()|",
      "|java+method:///java/util/Set/addAll(java.util.Collection)|",
      "|java+method:///io/druid/java/util/common/io/smoosh/SmooshedWriter/close()|",
      "|java+method:///org/joda/time/Interval/getEnd()|",
      "|java+method:///io/druid/segment/data/GenericIndexed/writeTo(java.nio.channels.WritableByteChannel,io.druid.java.util.common.io.smoosh.FileSmoosher)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsString(java.lang.Object)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///io/druid/java/util/common/JodaUtils/maxDateTime(org.joda.time.DateTime%5B%5D)|",
      "|java+method:///org/joda/time/Interval/getEndMillis()|",
      "|java+method:///io/druid/segment/data/GenericIndexed/getSerializedSize()|",
      "|java+method:///io/druid/java/util/common/io/smoosh/FileSmoosher/addWithSmooshedWriter(java.lang.String,long)|",
      "|java+method:///com/google/common/collect/Sets/newLinkedHashSet()|",
      "|java+method:///io/druid/segment/IndexSpec/getBitmapSerdeFactory()|",
      "|java+method:///io/druid/java/util/common/logger/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/joda/time/Interval/getStartMillis()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///io/druid/segment/ProgressIndicator/startSection(java.lang.String)|",
      "|java+method:///io/druid/segment/ProgressIndicator/stopSection(java.lang.String)|",
      "|java+method:///io/druid/java/util/common/JodaUtils/minDateTime(org.joda.time.DateTime%5B%5D)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/fromIterable(java.lang.Iterable,io.druid.segment.data.ObjectStrategy)|"
    ],
    "affectedLib": "io.druid:druid-common:0.12.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/segment/virtual/ExpressionSelectors$1ExtractionExpressionDimensionSelector/getValue()|",
    "called": "|java+method:///io/druid/math/expr/ExprEval/asString()|",
    "v1Body": [
      "|java+method:///io/druid/math/expr/ExprEval/asString()|",
      "|java+method:///com/google/common/base/Strings/emptyToNull(java.lang.String)|",
      "|java+method:///io/druid/segment/virtual/ExpressionObjectSelector/getObject()|",
      "|java+method:///io/druid/query/extraction/ExtractionFn/apply(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/segment/ColumnValueSelector/getObject()|",
      "|java+method:///io/druid/query/extraction/ExtractionFn/apply(java.lang.String)|",
      "|java+method:///io/druid/math/expr/ExprEval/asString()|",
      "|java+method:///com/google/common/base/Strings/emptyToNull(java.lang.String)|"
    ],
    "affectedLib": "io.druid:druid-common:0.12.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/segment/IndexIO$V9IndexLoader/load(java.io.File,com.fasterxml.jackson.databind.ObjectMapper)|",
    "called": "|java+method:///io/druid/common/utils/SerializerUtils/readBytes(java.nio.ByteBuffer,int)|",
    "v1Body": [
      "|java+method:///io/druid/common/utils/SerializerUtils/readBytes(java.nio.ByteBuffer,int)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/druid/java/util/common/Intervals/utc(long,long)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/iterator()|",
      "|java+method:///io/druid/java/util/common/io/smoosh/SmooshedFileMapper/mapFile(java.lang.String)|",
      "|java+method:///java/nio/ByteBuffer/getLong()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/druid/segment/IndexIO/access$100()|",
      "|java+method:///io/druid/common/utils/SerializerUtils/readString(java.nio.ByteBuffer)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/warn(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/segment/data/BitmapSerde$LegacyBitmapSerdeFactory/BitmapSerde$LegacyBitmapSerdeFactory()|",
      "|java+method:///io/druid/java/util/common/io/smoosh/Smoosh/map(java.io.File)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(byte%5B%5D,java.lang.Class)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///io/druid/segment/data/BitmapSerdeFactory/getBitmapFactory()|",
      "|java+method:///com/metamx/emitter/EmittingLogger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/druid/segment/IndexIO$V9IndexLoader/deserializeColumn(com.fasterxml.jackson.databind.ObjectMapper,java.nio.ByteBuffer,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(java.lang.String,java.lang.Class)|",
      "|java+method:///java/nio/ByteBuffer/remaining()|",
      "|java+method:///com/google/common/io/Files/toByteArray(java.io.File)|",
      "|java+method:///java/nio/ByteBuffer/hasRemaining()|",
      "|java+method:///io/druid/segment/IndexIO/access$000()|",
      "|java+method:///com/google/common/primitives/Ints/fromByteArray(byte%5B%5D)|",
      "|java+constructor:///io/druid/segment/SimpleQueryableIndex/SimpleQueryableIndex(org.joda.time.Interval,io.druid.segment.data.Indexed,io.druid.segment.data.Indexed,io.druid.collections.bitmap.BitmapFactory,java.util.Map,io.druid.java.util.common.io.smoosh.SmooshedFileMapper,io.druid.segment.Metadata)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/read(java.nio.ByteBuffer,io.druid.segment.data.ObjectStrategy,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+method:///java/lang/System/currentTimeMillis()|"
    ],
    "v2Body": [
      "|java+method:///io/druid/common/utils/SerializerUtils/readBytes(java.nio.ByteBuffer,int)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/druid/java/util/common/Intervals/utc(long,long)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/iterator()|",
      "|java+method:///io/druid/java/util/common/io/smoosh/SmooshedFileMapper/mapFile(java.lang.String)|",
      "|java+method:///java/nio/ByteBuffer/getLong()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/druid/segment/IndexIO/access$100()|",
      "|java+method:///io/druid/common/utils/SerializerUtils/readString(java.nio.ByteBuffer)|",
      "|java+constructor:///io/druid/segment/data/BitmapSerde$LegacyBitmapSerdeFactory/BitmapSerde$LegacyBitmapSerdeFactory()|",
      "|java+method:///io/druid/java/util/emitter/EmittingLogger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/druid/java/util/common/io/smoosh/Smoosh/map(java.io.File)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(byte%5B%5D,java.lang.Class)|",
      "|java+method:///io/druid/java/util/emitter/EmittingLogger/warn(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///io/druid/segment/data/BitmapSerdeFactory/getBitmapFactory()|",
      "|java+method:///io/druid/segment/IndexIO$V9IndexLoader/deserializeColumn(com.fasterxml.jackson.databind.ObjectMapper,java.nio.ByteBuffer,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(java.lang.String,java.lang.Class)|",
      "|java+method:///java/nio/ByteBuffer/remaining()|",
      "|java+method:///com/google/common/io/Files/toByteArray(java.io.File)|",
      "|java+method:///java/nio/ByteBuffer/hasRemaining()|",
      "|java+method:///io/druid/segment/IndexIO/access$000()|",
      "|java+method:///com/google/common/primitives/Ints/fromByteArray(byte%5B%5D)|",
      "|java+constructor:///io/druid/segment/SimpleQueryableIndex/SimpleQueryableIndex(org.joda.time.Interval,io.druid.segment.data.Indexed,io.druid.segment.data.Indexed,io.druid.collections.bitmap.BitmapFactory,java.util.Map,io.druid.java.util.common.io.smoosh.SmooshedFileMapper,io.druid.segment.Metadata)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/read(java.nio.ByteBuffer,io.druid.segment.data.ObjectStrategy,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+method:///java/lang/System/currentTimeMillis()|"
    ],
    "affectedLib": "io.druid:druid-common:0.12.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/segment/virtual/ExpressionSelectors$1DefaultExpressionDimensionSelector/getValue()|",
    "called": "|java+method:///io/druid/math/expr/ExprEval/asString()|",
    "v1Body": [
      "|java+method:///io/druid/segment/virtual/ExpressionObjectSelector/getObject()|",
      "|java+method:///io/druid/math/expr/ExprEval/asString()|",
      "|java+method:///com/google/common/base/Strings/emptyToNull(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/segment/ColumnValueSelector/getObject()|",
      "|java+method:///io/druid/math/expr/ExprEval/asString()|",
      "|java+method:///com/google/common/base/Strings/emptyToNull(java.lang.String)|"
    ],
    "affectedLib": "io.druid:druid-common:0.12.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/segment/IndexMergerV9/makeColumn(io.druid.java.util.common.io.smoosh.FileSmoosher,java.lang.String,io.druid.segment.column.ColumnDescriptor)|",
    "called": "|java+method:///io/druid/common/utils/SerializerUtils/writeString(java.io.OutputStream,java.lang.String)|",
    "v1Body": [
      "|java+method:///io/druid/common/utils/SerializerUtils/writeString(java.io.OutputStream,java.lang.String)|",
      "|java+method:///io/druid/segment/column/ColumnDescriptor/numBytes()|",
      "|java+method:///io/druid/io/ZeroCopyByteArrayOutputStream/size()|",
      "|java+method:///io/druid/java/util/common/io/smoosh/SmooshedWriter/close()|",
      "|java+constructor:///io/druid/io/ZeroCopyByteArrayOutputStream/ZeroCopyByteArrayOutputStream()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsString(java.lang.Object)|",
      "|java+method:///io/druid/segment/column/ColumnDescriptor/write(java.nio.channels.WritableByteChannel,io.druid.java.util.common.io.smoosh.FileSmoosher)|",
      "|java+method:///io/druid/java/util/common/io/smoosh/FileSmoosher/addWithSmooshedWriter(java.lang.String,long)|",
      "|java+method:///io/druid/io/ZeroCopyByteArrayOutputStream/writeTo(java.nio.channels.WritableByteChannel)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/common/utils/SerializerUtils/writeString(java.io.OutputStream,java.lang.String)|",
      "|java+method:///io/druid/io/ZeroCopyByteArrayOutputStream/size()|",
      "|java+method:///io/druid/java/util/common/io/smoosh/SmooshedWriter/close()|",
      "|java+method:///io/druid/segment/column/ColumnDescriptor/writeTo(java.nio.channels.WritableByteChannel,io.druid.java.util.common.io.smoosh.FileSmoosher)|",
      "|java+constructor:///io/druid/io/ZeroCopyByteArrayOutputStream/ZeroCopyByteArrayOutputStream()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsString(java.lang.Object)|",
      "|java+method:///io/druid/segment/column/ColumnDescriptor/getSerializedSize()|",
      "|java+method:///io/druid/java/util/common/io/smoosh/FileSmoosher/addWithSmooshedWriter(java.lang.String,long)|",
      "|java+method:///io/druid/io/ZeroCopyByteArrayOutputStream/writeTo(java.nio.channels.WritableByteChannel)|"
    ],
    "affectedLib": "io.druid:druid-common:0.12.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/expression/TimestampParseExprMacro$1TimestampParseExpr/eval(io.druid.math.expr.Expr$ObjectBinding)|",
    "called": "|java+method:///io/druid/math/expr/ExprEval/asString()|",
    "v1Body": [
      "|java+method:///org/joda/time/DateTime/getMillis()|",
      "|java+method:///io/druid/math/expr/ExprEval/of(long)|",
      "|java+method:///org/joda/time/format/DateTimeFormatter/parseDateTime(java.lang.String)|",
      "|java+method:///io/druid/math/expr/ExprEval/asString()|",
      "|java+method:///io/druid/math/expr/Expr/eval(io.druid.math.expr.Expr$ObjectBinding)|",
      "|java+method:///io/druid/math/expr/ExprEval/of(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/joda/time/DateTime/getMillis()|",
      "|java+method:///io/druid/math/expr/ExprEval/of(long)|",
      "|java+method:///io/druid/math/expr/ExprEval/asString()|",
      "|java+method:///io/druid/java/util/common/DateTimes$UtcFormatter/parse(java.lang.String)|",
      "|java+method:///io/druid/math/expr/Expr/eval(io.druid.math.expr.Expr$ObjectBinding)|",
      "|java+method:///io/druid/math/expr/ExprEval/of(java.lang.String)|"
    ],
    "affectedLib": "io.druid:druid-common:0.12.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+initializer:///io/druid/segment/IndexIO/IndexIO$initializer|",
    "called": "|java+constructor:///io/druid/common/utils/SerializerUtils/SerializerUtils()|",
    "v1Body": [
      "|java+method:///java/nio/ByteOrder/nativeOrder()|",
      "|java+constructor:///io/druid/common/utils/SerializerUtils/SerializerUtils()|",
      "|java+constructor:///com/metamx/emitter/EmittingLogger/EmittingLogger(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///java/nio/ByteOrder/nativeOrder()|",
      "|java+constructor:///io/druid/common/utils/SerializerUtils/SerializerUtils()|",
      "|java+constructor:///io/druid/java/util/emitter/EmittingLogger/EmittingLogger(java.lang.Class)|"
    ],
    "affectedLib": "io.druid:druid-common:0.12.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/expression/TimestampFloorExprMacro$TimestampFloorExpr/eval(io.druid.math.expr.Expr$ObjectBinding)|",
    "called": "|java+method:///io/druid/math/expr/ExprEval/of(long)|",
    "v1Body": [
      "|java+method:///io/druid/math/expr/Expr/eval(io.druid.math.expr.Expr$ObjectBinding)|",
      "|java+method:///org/joda/time/DateTime/getMillis()|",
      "|java+method:///io/druid/math/expr/ExprEval/asLong()|",
      "|java+method:///io/druid/java/util/common/DateTimes/utc(long)|",
      "|java+method:///io/druid/java/util/common/granularity/Granularity/bucketStart(org.joda.time.DateTime)|",
      "|java+method:///io/druid/math/expr/ExprEval/of(long)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/math/expr/Expr/eval(io.druid.math.expr.Expr$ObjectBinding)|",
      "|java+method:///org/joda/time/DateTime/getMillis()|",
      "|java+method:///io/druid/java/util/common/granularity/PeriodGranularity/bucketStart(org.joda.time.DateTime)|",
      "|java+method:///io/druid/math/expr/ExprEval/of(long)|",
      "|java+method:///io/druid/math/expr/ExprEval/asLong()|",
      "|java+method:///io/druid/java/util/common/DateTimes/utc(long)|"
    ],
    "affectedLib": "io.druid:druid-common:0.12.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+initializer:///io/druid/segment/data/GenericIndexed/GenericIndexed$initializer|",
    "called": "|java+constructor:///io/druid/common/utils/SerializerUtils/SerializerUtils()|",
    "v1Body": [
      "|java+constructor:///io/druid/common/utils/SerializerUtils/SerializerUtils()|",
      "|java+constructor:///io/druid/segment/data/GenericIndexed$1/GenericIndexed$1()|"
    ],
    "v2Body": [
      "|java+method:///io/druid/segment/serde/MetaSerdeHelper/writeInt(io.druid.segment.serde.MetaSerdeHelper$IntFieldWriter)|",
      "|java+constructor:///io/druid/common/utils/SerializerUtils/SerializerUtils()|",
      "|java+method:///io/druid/segment/serde/MetaSerdeHelper/firstWriteByte(io.druid.segment.serde.MetaSerdeHelper$ByteFieldWriter)|",
      "|java+method:///io/druid/segment/serde/MetaSerdeHelper/writeByte(io.druid.segment.serde.MetaSerdeHelper$ByteFieldWriter)|",
      "|java+constructor:///io/druid/segment/data/GenericIndexed$1/GenericIndexed$1()|"
    ],
    "affectedLib": "io.druid:druid-common:0.12.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/segment/MetricHolder/fromByteBuffer(java.nio.ByteBuffer,io.druid.segment.data.ObjectStrategy,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
    "called": "|java+method:///io/druid/common/utils/SerializerUtils/readString(java.nio.ByteBuffer)|",
    "v1Body": [
      "|java+method:///java/nio/ByteOrder/nativeOrder()|",
      "|java+method:///io/druid/segment/data/CompressedLongsIndexedSupplier/fromByteBuffer(java.nio.ByteBuffer,java.nio.ByteOrder,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+method:///java/lang/Byte/valueOf(byte)|",
      "|java+constructor:///io/druid/segment/MetricHolder/MetricHolder(java.lang.String,java.lang.String)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/read(java.nio.ByteBuffer,io.druid.segment.data.ObjectStrategy)|",
      "|java+method:///io/druid/segment/data/CompressedDoublesIndexedSupplier/fromByteBuffer(java.nio.ByteBuffer,java.nio.ByteOrder,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/read(java.nio.ByteBuffer,io.druid.segment.data.ObjectStrategy,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+method:///io/druid/common/utils/SerializerUtils/readString(java.nio.ByteBuffer)|",
      "|java+method:///io/druid/segment/data/CompressedFloatsIndexedSupplier/fromByteBuffer(java.nio.ByteBuffer,java.nio.ByteOrder,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+method:///java/nio/ByteBuffer/get()|",
      "|java+method:///io/druid/segment/serde/ComplexMetrics/getSerdeForType(java.lang.String)|",
      "|java+method:///io/druid/segment/serde/ComplexMetricSerde/getObjectStrategy()|",
      "|java+method:///io/druid/segment/MetricHolder/getTypeName()|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/segment/MetricHolder$MetricType/ordinal()|"
    ],
    "v2Body": [
      "|java+method:///java/nio/ByteOrder/nativeOrder()|",
      "|java+method:///io/druid/segment/data/CompressedColumnarFloatsSupplier/fromByteBuffer(java.nio.ByteBuffer,java.nio.ByteOrder)|",
      "|java+method:///java/lang/Byte/valueOf(byte)|",
      "|java+constructor:///io/druid/segment/MetricHolder/MetricHolder(java.lang.String,java.lang.String)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/read(java.nio.ByteBuffer,io.druid.segment.data.ObjectStrategy)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/read(java.nio.ByteBuffer,io.druid.segment.data.ObjectStrategy,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+method:///io/druid/common/utils/SerializerUtils/readString(java.nio.ByteBuffer)|",
      "|java+method:///java/nio/ByteBuffer/get()|",
      "|java+method:///io/druid/segment/serde/ComplexMetrics/getSerdeForType(java.lang.String)|",
      "|java+method:///io/druid/segment/serde/ComplexMetricSerde/getObjectStrategy()|",
      "|java+method:///io/druid/segment/MetricHolder/getTypeName()|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/segment/MetricHolder$MetricType/ordinal()|"
    ],
    "affectedLib": "io.druid:druid-common:0.12.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/segment/IndexIO$DefaultIndexIOHandler/mapDir(java.io.File)|",
    "called": "|java+method:///io/druid/common/utils/SerializerUtils/readString(java.nio.ByteBuffer)|",
    "v1Body": [
      "|java+constructor:///io/druid/segment/data/IndexedRTree$ImmutableRTreeObjectStrategy/IndexedRTree$ImmutableRTreeObjectStrategy(io.druid.collections.bitmap.BitmapFactory)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/druid/java/util/common/io/smoosh/Smoosh/map(java.io.File)|",
      "|java+method:///com/google/common/collect/Maps/newLinkedHashMap()|",
      "|java+method:///io/druid/java/util/common/logger/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/java/util/common/io/smoosh/SmooshedFileMapper/mapFile(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/io/InputStream/read()|",
      "|java+method:///io/druid/segment/IndexIO/makeTimeFile(java.io.File,java.nio.ByteOrder)|",
      "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///com/google/common/io/Closeables/close(java.io.Closeable,boolean)|",
      "|java+method:///io/druid/segment/data/CompressedLongsIndexedSupplier/fromByteBuffer(java.nio.ByteBuffer,java.nio.ByteOrder,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+method:///java/io/File/getName()|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///io/druid/segment/data/BitmapSerdeFactory/getBitmapFactory()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/druid/segment/IndexIO/makeDimFile(java.io.File,java.lang.String)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/Byte/valueOf(byte)|",
      "|java+method:///io/druid/segment/data/IndexedIterable/iterator()|",
      "|java+method:///io/druid/segment/IndexIO/makeMetricFile(java.io.File,java.lang.String,java.nio.ByteOrder)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/iterator()|",
      "|java+method:///io/druid/segment/data/ByteBufferSerializer/read(java.nio.ByteBuffer,io.druid.segment.data.ObjectStrategy)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/read(java.nio.ByteBuffer,io.druid.segment.data.ObjectStrategy)|",
      "|java+method:///io/druid/segment/data/VSizeIndexed/readFromByteBuffer(java.nio.ByteBuffer)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/nio/ByteBuffer/get()|",
      "|java+method:///com/google/common/base/Preconditions/checkState(boolean,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/segment/MMappedIndex/MMappedIndex(io.druid.segment.data.GenericIndexed,io.druid.segment.data.GenericIndexed,org.joda.time.Interval,io.druid.segment.data.CompressedLongsIndexedSupplier,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+method:///java/nio/ByteBuffer/hasRemaining()|",
      "|java+method:///io/druid/segment/IndexIO/access$000()|",
      "|java+method:///io/druid/segment/data/IndexedIterable/create(io.druid.segment.data.Indexed)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/read(java.nio.ByteBuffer,io.druid.segment.data.ObjectStrategy,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///io/druid/common/utils/SerializerUtils/readString(java.nio.ByteBuffer)|",
      "|java+method:///io/druid/java/util/common/Intervals/of(java.lang.String)|",
      "|java+constructor:///java/io/FileInputStream/FileInputStream(java.io.File)|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/segment/MetricHolder/getName()|",
      "|java+method:///io/druid/segment/data/BitmapSerdeFactory/getObjectStrategy()|",
      "|java+method:///io/druid/segment/MetricHolder/fromByteBuffer(java.nio.ByteBuffer,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+constructor:///io/druid/segment/data/BitmapSerde$LegacyBitmapSerdeFactory/BitmapSerde$LegacyBitmapSerdeFactory()|",
      "|java+method:///io/druid/segment/data/GenericIndexed/size()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/druid/java/util/common/io/smoosh/Smoosh/map(java.io.File)|",
      "|java+method:///java/io/File/getName()|",
      "|java+method:///com/google/common/collect/Maps/newLinkedHashMap()|",
      "|java+method:///io/druid/java/util/common/logger/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/java/util/common/io/smoosh/SmooshedFileMapper/mapFile(java.lang.String)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/read(java.nio.ByteBuffer,io.druid.segment.data.ObjectStrategy)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/io/InputStream/read()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///io/druid/segment/IndexIO/makeTimeFile(java.io.File,java.nio.ByteOrder)|",
      "|java+method:///io/druid/segment/data/VSizeColumnarMultiInts/readFromByteBuffer(java.nio.ByteBuffer)|",
      "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///com/google/common/io/Closeables/close(java.io.Closeable,boolean)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///io/druid/segment/data/BitmapSerdeFactory/getBitmapFactory()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/druid/segment/IndexIO/makeDimFile(java.io.File,java.lang.String)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/druid/segment/data/IndexedIterable/iterator()|",
      "|java+method:///io/druid/segment/data/ImmutableRTreeObjectStrategy/fromByteBufferWithSize(java.nio.ByteBuffer)|",
      "|java+constructor:///io/druid/segment/MMappedIndex/MMappedIndex(io.druid.segment.data.GenericIndexed,io.druid.segment.data.GenericIndexed,org.joda.time.Interval,io.druid.segment.data.CompressedColumnarLongsSupplier,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+method:///java/lang/Byte/valueOf(byte)|",
      "|java+method:///io/druid/segment/IndexIO/makeMetricFile(java.io.File,java.lang.String,java.nio.ByteOrder)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/iterator()|",
      "|java+constructor:///io/druid/segment/data/ImmutableRTreeObjectStrategy/ImmutableRTreeObjectStrategy(io.druid.collections.bitmap.BitmapFactory)|",
      "|java+method:///java/nio/ByteBuffer/get()|",
      "|java+method:///com/google/common/base/Preconditions/checkState(boolean,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/nio/ByteBuffer/hasRemaining()|",
      "|java+method:///io/druid/segment/IndexIO/access$000()|",
      "|java+method:///io/druid/segment/data/CompressedColumnarLongsSupplier/fromByteBuffer(java.nio.ByteBuffer,java.nio.ByteOrder)|",
      "|java+method:///io/druid/segment/data/IndexedIterable/create(io.druid.segment.data.Indexed)|",
      "|java+method:///io/druid/segment/data/GenericIndexed/read(java.nio.ByteBuffer,io.druid.segment.data.ObjectStrategy,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///io/druid/common/utils/SerializerUtils/readString(java.nio.ByteBuffer)|",
      "|java+method:///io/druid/java/util/common/Intervals/of(java.lang.String)|",
      "|java+constructor:///java/io/FileInputStream/FileInputStream(java.io.File)|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/segment/MetricHolder/getName()|",
      "|java+method:///io/druid/segment/data/BitmapSerdeFactory/getObjectStrategy()|",
      "|java+method:///io/druid/segment/MetricHolder/fromByteBuffer(java.nio.ByteBuffer,io.druid.java.util.common.io.smoosh.SmooshedFileMapper)|",
      "|java+constructor:///io/druid/segment/data/BitmapSerde$LegacyBitmapSerdeFactory/BitmapSerde$LegacyBitmapSerdeFactory()|",
      "|java+method:///io/druid/segment/data/GenericIndexed/size()|"
    ],
    "affectedLib": "io.druid:druid-common:0.12.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/expression/TimestampParseExprMacro/apply(java.util.List)|",
    "called": "|java+method:///io/druid/math/expr/Expr/getLiteralValue()|",
    "v1Body": [
      "|java+method:///org/joda/time/format/DateTimeFormatter/withZone(org.joda.time.DateTimeZone)|",
      "|java+method:///org/joda/time/format/DateTimeFormat/forPattern(java.lang.String)|",
      "|java+method:///io/druid/math/expr/Expr/getLiteralValue()|",
      "|java+method:///org/joda/time/format/ISODateTimeFormat/dateTimeParser()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/joda/time/DateTimeZone/forID(java.lang.String)|",
      "|java+method:///io/druid/query/expression/TimestampParseExprMacro/name()|",
      "|java+constructor:///io/druid/query/expression/TimestampParseExprMacro$1TimestampParseExpr/TimestampParseExprMacro$1TimestampParseExpr(io.druid.query.expression.TimestampParseExprMacro,org.joda.time.format.DateTimeFormatter,io.druid.math.expr.Expr)|",
      "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "v2Body": [
      "|java+method:///org/joda/time/format/DateTimeFormat/forPattern(java.lang.String)|",
      "|java+method:///io/druid/math/expr/Expr/getLiteralValue()|",
      "|java+method:///io/druid/query/expression/TimestampParseExprMacro/createDefaultParser(org.joda.time.DateTimeZone)|",
      "|java+constructor:///io/druid/query/expression/TimestampParseExprMacro$1TimestampParseExpr/TimestampParseExprMacro$1TimestampParseExpr(io.druid.query.expression.TimestampParseExprMacro,io.druid.math.expr.Expr,io.druid.java.util.common.DateTimes$UtcFormatter)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/joda/time/DateTimeZone/forID(java.lang.String)|",
      "|java+method:///io/druid/query/expression/TimestampParseExprMacro/name()|",
      "|java+method:///org/joda/time/format/DateTimeFormatter/withZone(org.joda.time.DateTimeZone)|",
      "|java+method:///io/druid/java/util/common/DateTimes/wrapFormatter(org.joda.time.format.DateTimeFormatter)|",
      "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "affectedLib": "io.druid:druid-common:0.12.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/segment/virtual/ExpressionSelectors/makeDimensionSelector(io.druid.segment.ColumnSelectorFactory,io.druid.math.expr.Expr,io.druid.query.extraction.ExtractionFn)|",
    "called": "|java+method:///io/druid/math/expr/ExprEval/asString()|",
    "v1Body": [
      "|java+constructor:///io/druid/segment/virtual/ExpressionSelectors$1ExtractionExpressionDimensionSelector/ExpressionSelectors$1ExtractionExpressionDimensionSelector(io.druid.query.extraction.ExtractionFn,io.druid.segment.virtual.ExpressionObjectSelector)|",
      "|java+constructor:///io/druid/segment/virtual/ExpressionSelectors$1DefaultExpressionDimensionSelector/ExpressionSelectors$1DefaultExpressionDimensionSelector(io.druid.segment.virtual.ExpressionObjectSelector)|",
      "|java+method:///io/druid/segment/virtual/ExpressionObjectSelector/from(io.druid.segment.ColumnSelectorFactory,io.druid.math.expr.Expr)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/math/expr/Parser/findRequiredBindings(io.druid.math.expr.Expr)|",
      "|java+method:///io/druid/segment/ColumnSelectorFactory/makeDimensionSelector(io.druid.query.dimension.DimensionSpec)|",
      "|java+method:///io/druid/segment/ColumnSelectorFactory/getColumnCapabilities(java.lang.String)|",
      "|java+method:///io/druid/segment/column/ColumnCapabilities/isDictionaryEncoded()|",
      "|java+method:///io/druid/segment/virtual/ExpressionSelectors/makeExprEvalSelector(io.druid.segment.ColumnSelectorFactory,io.druid.math.expr.Expr)|",
      "|java+method:///io/druid/math/expr/ExprEval/asString()|",
      "|java+constructor:///io/druid/segment/virtual/SingleStringInputDimensionSelector/SingleStringInputDimensionSelector(io.druid.segment.DimensionSelector,io.druid.math.expr.Expr)|",
      "|java+method:///io/druid/segment/DimensionSelectorUtils/constantSelector(java.lang.String,io.druid.query.extraction.ExtractionFn)|",
      "|java+constructor:///io/druid/segment/virtual/ExpressionSelectors$1DefaultExpressionDimensionSelector/ExpressionSelectors$1DefaultExpressionDimensionSelector(io.druid.segment.ColumnValueSelector)|",
      "|java+method:///com/google/common/collect/Iterables/getOnlyElement(java.lang.Iterable)|",
      "|java+constructor:///io/druid/segment/virtual/ExpressionSelectors$1ExtractionExpressionDimensionSelector/ExpressionSelectors$1ExtractionExpressionDimensionSelector(io.druid.query.extraction.ExtractionFn,io.druid.segment.ColumnValueSelector)|",
      "|java+constructor:///io/druid/query/dimension/DefaultDimensionSpec/DefaultDimensionSpec(java.lang.String,java.lang.String,io.druid.segment.column.ValueType)|",
      "|java+method:///io/druid/segment/ColumnValueSelector/getObject()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///io/druid/segment/column/ColumnCapabilities/getType()|"
    ],
    "affectedLib": "io.druid:druid-common:0.12.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/aggregation/cardinality/HyperLogLogCollectorAggregateCombiner/fold(io.druid.segment.ColumnValueSelector)|",
    "called": "|java+method:///io/druid/hll/HyperLogLogCollector/makeLatestCollector()|",
    "v1Body": [
      "|java+method:///io/druid/hll/HyperLogLogCollector/makeLatestCollector()|",
      "|java+method:///io/druid/segment/ObjectColumnSelector/getObject()|",
      "|java+method:///io/druid/hll/HyperLogLogCollector/fold(io.druid.hll.HyperLogLogCollector)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/hll/HyperLogLogCollector/makeLatestCollector()|",
      "|java+method:///io/druid/segment/ColumnValueSelector/getObject()|",
      "|java+method:///io/druid/hll/HyperLogLogCollector/fold(io.druid.hll.HyperLogLogCollector)|"
    ],
    "affectedLib": "io.druid:druid-hll:0.12.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/aggregation/hyperloglog/HyperUniquesAggregator/aggregate()|",
    "called": "|java+method:///io/druid/hll/HyperLogLogCollector/makeLatestCollector()|",
    "v1Body": [
      "|java+method:///io/druid/segment/ObjectColumnSelector/getObject()|",
      "|java+method:///io/druid/hll/HyperLogLogCollector/fold(io.druid.hll.HyperLogLogCollector)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/hll/HyperLogLogCollector/makeLatestCollector()|",
      "|java+method:///io/druid/segment/BaseObjectColumnValueSelector/getObject()|",
      "|java+method:///io/druid/hll/HyperLogLogCollector/fold(io.druid.hll.HyperLogLogCollector)|"
    ],
    "affectedLib": "io.druid:druid-hll:0.12.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/aggregation/cardinality/types/StringCardinalityAggregatorColumnSelectorStrategy/hashValues(io.druid.segment.DimensionSelector,io.druid.hll.HyperLogLogCollector)|",
    "called": "|java+method:///io/druid/hll/HyperLogLogCollector/add(byte%5B%5D)|",
    "v1Body": [
      "|java+method:///io/druid/hll/HyperLogLogCollector/add(byte%5B%5D)|",
      "|java+method:///com/google/common/hash/HashCode/asBytes()|",
      "|java+method:///com/google/common/hash/HashFunction/hashUnencodedChars(java.lang.CharSequence)|",
      "|java+method:///io/druid/query/aggregation/cardinality/types/StringCardinalityAggregatorColumnSelectorStrategy/nullToSpecial(java.lang.String)|",
      "|java+method:///it/unimi/dsi/fastutil/ints/IntIterator/nextInt()|",
      "|java+method:///io/druid/segment/data/IndexedInts/iterator()|",
      "|java+method:///io/druid/segment/DimensionSelector/lookupName(int)|",
      "|java+method:///io/druid/segment/DimensionSelector/getRow()|",
      "|java+method:///it/unimi/dsi/fastutil/ints/IntIterator/hasNext()|"
    ],
    "v2Body": [
      "|java+method:///io/druid/hll/HyperLogLogCollector/add(byte%5B%5D)|",
      "|java+method:///com/google/common/hash/HashCode/asBytes()|",
      "|java+method:///io/druid/segment/data/IndexedInts/size()|",
      "|java+method:///com/google/common/hash/HashFunction/hashUnencodedChars(java.lang.CharSequence)|",
      "|java+method:///io/druid/query/aggregation/cardinality/types/StringCardinalityAggregatorColumnSelectorStrategy/nullToSpecial(java.lang.String)|",
      "|java+method:///io/druid/segment/data/IndexedInts/get(int)|",
      "|java+method:///io/druid/segment/DimensionSelector/lookupName(int)|",
      "|java+method:///io/druid/segment/DimensionSelector/getRow()|"
    ],
    "affectedLib": "io.druid:druid-hll:0.12.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/aggregation/cardinality/CardinalityAggregator/hashRow(io.druid.query.ColumnSelectorPlus%5B%5D,io.druid.hll.HyperLogLogCollector)|",
    "called": "|java+method:///io/druid/hll/HyperLogLogCollector/add(byte%5B%5D)|",
    "v1Body": [
      "|java+method:///io/druid/hll/HyperLogLogCollector/add(byte%5B%5D)|",
      "|java+method:///com/google/common/hash/HashCode/asBytes()|",
      "|java+method:///io/druid/query/ColumnSelectorPlus/getSelector()|",
      "|java+method:///com/google/common/hash/HashFunction/newHasher()|",
      "|java+method:///io/druid/query/aggregation/cardinality/types/CardinalityAggregatorColumnSelectorStrategy/hashRow(io.druid.segment.ColumnValueSelector,com.google.common.hash.Hasher)|",
      "|java+method:///com/google/common/hash/Hasher/putByte(byte)|",
      "|java+method:///io/druid/query/ColumnSelectorPlus/getColumnSelectorStrategy()|",
      "|java+method:///com/google/common/hash/Hasher/hash()|"
    ],
    "v2Body": [
      "|java+method:///io/druid/hll/HyperLogLogCollector/add(byte%5B%5D)|",
      "|java+method:///com/google/common/hash/HashCode/asBytes()|",
      "|java+method:///com/google/common/hash/HashFunction/newHasher()|",
      "|java+method:///com/google/common/hash/Hasher/putByte(byte)|",
      "|java+method:///io/druid/query/ColumnSelectorPlus/getSelector()|",
      "|java+method:///io/druid/query/aggregation/cardinality/types/CardinalityAggregatorColumnSelectorStrategy/hashRow(java.lang.Object,com.google.common.hash.Hasher)|",
      "|java+method:///io/druid/query/ColumnSelectorPlus/getColumnSelectorStrategy()|",
      "|java+method:///com/google/common/hash/Hasher/hash()|"
    ],
    "affectedLib": "io.druid:druid-hll:0.12.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/aggregation/hyperloglog/HyperUniquesBufferAggregator/aggregate(java.nio.ByteBuffer,int)|",
    "called": "|java+method:///io/druid/hll/HyperLogLogCollector/fold(io.druid.hll.HyperLogLogCollector)|",
    "v1Body": [
      "|java+method:///java/nio/ByteBuffer/position()|",
      "|java+method:///io/druid/segment/ObjectColumnSelector/getObject()|",
      "|java+method:///java/nio/ByteBuffer/position(int)|",
      "|java+method:///java/nio/ByteBuffer/limit()|",
      "|java+method:///io/druid/hll/HyperLogLogCollector/getLatestNumBytesForDenseStorage()|",
      "|java+method:///io/druid/hll/HyperLogLogCollector/makeCollector(java.nio.ByteBuffer)|",
      "|java+method:///io/druid/hll/HyperLogLogCollector/fold(io.druid.hll.HyperLogLogCollector)|",
      "|java+method:///java/nio/ByteBuffer/limit(int)|"
    ],
    "v2Body": [
      "|java+method:///java/nio/ByteBuffer/position()|",
      "|java+method:///java/nio/ByteBuffer/position(int)|",
      "|java+method:///io/druid/hll/HyperLogLogCollector/getLatestNumBytesForDenseStorage()|",
      "|java+method:///io/druid/hll/HyperLogLogCollector/makeCollector(java.nio.ByteBuffer)|",
      "|java+method:///io/druid/segment/BaseObjectColumnValueSelector/getObject()|",
      "|java+method:///java/nio/ByteBuffer/limit()|",
      "|java+method:///io/druid/hll/HyperLogLogCollector/fold(io.druid.hll.HyperLogLogCollector)|",
      "|java+method:///java/nio/ByteBuffer/limit(int)|"
    ],
    "affectedLib": "io.druid:druid-hll:0.12.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+constructor:///io/druid/segment/Rowboat/Rowboat(long,java.lang.Object%5B%5D,java.lang.Object%5B%5D,int,io.druid.segment.DimensionHandler%5B%5D)|",
    "called": "|java+constructor:///it/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap/Int2ObjectOpenHashMap(int)|",
    "v1Body": [
      "|java+constructor:///it/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap/Int2ObjectOpenHashMap()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+constructor:///it/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap/Int2ObjectOpenHashMap(int)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "it.unimi.dsi:fastutil:8.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/segment/data/GenericIndexedWriter/initializeHeaderOutLong()|",
    "called": "|java+constructor:///it/unimi/dsi/fastutil/longs/LongArrayList/LongArrayList()|",
    "v1Body": [
      "|java+method:///java/nio/ByteOrder/nativeOrder()|",
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///java/io/RandomAccessFile/close()|",
      "|java+method:///java/io/RandomAccessFile/readInt()|",
      "|java+method:///io/druid/segment/data/IOPeon/makeOutputStream(java.lang.String)|",
      "|java+method:///java/nio/ByteBuffer/order(java.nio.ByteOrder)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///io/druid/common/utils/SerializerUtils/writeNativeOrderedLongToOutputStream(java.io.OutputStream,long,java.nio.ByteBuffer)|",
      "|java+method:///io/druid/segment/data/GenericIndexedWriter/makeFilename(java.lang.String)|",
      "|java+constructor:///java/io/RandomAccessFile/RandomAccessFile(java.io.File,java.lang.String)|",
      "|java+method:///io/druid/segment/data/IOPeon/getFile(java.lang.String)|",
      "|java+method:///com/google/common/io/CountingOutputStream/close()|",
      "|java+constructor:///com/google/common/io/CountingOutputStream/CountingOutputStream(java.io.OutputStream)|"
    ],
    "v2Body": [
      "|java+method:///java/io/DataInput/readInt()|",
      "|java+constructor:///java/io/DataInputStream/DataInputStream(java.io.InputStream)|",
      "|java+method:///io/druid/segment/writeout/WriteOutBytes/asInputStream()|",
      "|java+method:///it/unimi/dsi/fastutil/longs/LongList/add(long)|",
      "|java+constructor:///it/unimi/dsi/fastutil/longs/LongArrayList/LongArrayList()|"
    ],
    "affectedLib": "it.unimi.dsi:fastutil:8.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+constructor:///io/druid/segment/IntIteratorUtils$MergeIntIterator/IntIteratorUtils$MergeIntIterator(java.util.List)|",
    "called": "|java+method:///it/unimi/dsi/fastutil/longs/LongHeaps/upHeap(long%5B%5D,int,int,it.unimi.dsi.fastutil.longs.LongComparator)|",
    "v1Body": [
      "|java+method:///it/unimi/dsi/fastutil/longs/LongHeaps/upHeap(long%5B%5D,int,int,it.unimi.dsi.fastutil.longs.LongComparator)|",
      "|java+method:///io/druid/segment/IntIteratorUtils$MergeIntIterator/makeQueueElement(int,int)|",
      "|java+method:///it/unimi/dsi/fastutil/ints/IntIterator/hasNext()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///it/unimi/dsi/fastutil/ints/IntIterator/nextInt()|",
      "|java+constructor:///it/unimi/dsi/fastutil/ints/AbstractIntIterator/AbstractIntIterator()|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///it/unimi/dsi/fastutil/longs/LongHeaps/upHeap(long%5B%5D,int,int,it.unimi.dsi.fastutil.longs.LongComparator)|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/segment/IntIteratorUtils$MergeIntIterator/makeQueueElement(int,int)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///it/unimi/dsi/fastutil/ints/IntIterator/hasNext()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///it/unimi/dsi/fastutil/ints/IntIterator/nextInt()|"
    ],
    "affectedLib": "it.unimi.dsi:fastutil:8.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/search/CursorOnlyStrategy$CursorBasedExecutor/execute(int)|",
    "called": "|java+constructor:///it/unimi/dsi/fastutil/objects/Object2IntRBTreeMap/Object2IntRBTreeMap(java.util.Comparator)|",
    "v1Body": [
      "|java+method:///io/druid/query/search/SearchSortSpec/getComparator()|",
      "|java+method:///io/druid/query/search/SearchQuery/getGranularity()|",
      "|java+constructor:///it/unimi/dsi/fastutil/objects/Object2IntRBTreeMap/Object2IntRBTreeMap(java.util.Comparator)|",
      "|java+method:///io/druid/query/search/SearchQuery/isDescending()|",
      "|java+method:///io/druid/query/search/SearchQuery/getSort()|",
      "|java+constructor:///io/druid/query/search/CursorOnlyStrategy$CursorBasedExecutor$1/CursorOnlyStrategy$CursorBasedExecutor$1(io.druid.query.search.CursorOnlyStrategy$CursorBasedExecutor,int)|",
      "|java+method:///io/druid/segment/StorageAdapter/makeCursors(io.druid.query.filter.Filter,org.joda.time.Interval,io.druid.segment.VirtualColumns,io.druid.java.util.common.granularity.Granularity,boolean,io.druid.query.QueryMetrics)|",
      "|java+method:///io/druid/java/util/common/guava/Sequence/accumulate(java.lang.Object,io.druid.java.util.common.guava.Accumulator)|",
      "|java+method:///it/unimi/dsi/fastutil/objects/Object2IntRBTreeMap/defaultReturnValue(int)|",
      "|java+method:///io/druid/segment/Segment/asStorageAdapter()|"
    ],
    "v2Body": [
      "|java+method:///io/druid/query/search/SearchSortSpec/getComparator()|",
      "|java+method:///io/druid/query/search/SearchQuery/getGranularity()|",
      "|java+constructor:///it/unimi/dsi/fastutil/objects/Object2IntRBTreeMap/Object2IntRBTreeMap(java.util.Comparator)|",
      "|java+method:///io/druid/query/search/SearchQuery/isDescending()|",
      "|java+method:///io/druid/query/search/SearchQuery/getSort()|",
      "|java+method:///io/druid/segment/StorageAdapter/makeCursors(io.druid.query.filter.Filter,org.joda.time.Interval,io.druid.segment.VirtualColumns,io.druid.java.util.common.granularity.Granularity,boolean,io.druid.query.QueryMetrics)|",
      "|java+method:///io/druid/java/util/common/guava/Sequence/accumulate(java.lang.Object,io.druid.java.util.common.guava.Accumulator)|",
      "|java+method:///it/unimi/dsi/fastutil/objects/Object2IntRBTreeMap/defaultReturnValue(int)|",
      "|java+method:///io/druid/segment/Segment/asStorageAdapter()|"
    ],
    "affectedLib": "it.unimi.dsi:fastutil:8.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-processing:0.11.0",
    "coordinatesV2": "io.druid:druid-processing:0.12.0",
    "caller": "|java+method:///io/druid/query/groupby/epinephelinae/RowBasedGrouperHelper$RowBasedKeySerde/reset()|",
    "called": "|java+method:///it/unimi/dsi/fastutil/objects/Object2IntMap/clear()|",
    "v1Body": [
      "|java+method:///java/util/List/clear()|",
      "|java+method:///java/util/Map/clear()|"
    ],
    "v2Body": [
      "|java+method:///it/unimi/dsi/fastutil/objects/Object2IntMap/clear()|",
      "|java+method:///java/util/List/clear()|"
    ],
    "affectedLib": "it.unimi.dsi:fastutil:8.1.0",
    "change": "UPDATED"
  }
]