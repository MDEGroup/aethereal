[
  {
    "coordinatesV1": "net.openhft:chronicle-engine:1.4.0-alpha",
    "coordinatesV2": "net.openhft:chronicle-engine:1.4.1-alpha",
    "caller": "|java+method:///net/openhft/chronicle/engine/server/ServerEndpoint/close()|",
    "called": "|java+method:///net/openhft/chronicle/core/io/Closeable/closeQuietly(java.lang.Object)|",
    "v1Body": [
      "|java+method:///net/openhft/chronicle/core/io/Closeable/closeQuietly(java.lang.Object)|",
      "|java+method:///net/openhft/chronicle/engine/server/ServerEndpoint/stop()|"
    ],
    "v2Body": [
      "|java+method:///net/openhft/chronicle/core/io/Closeable/closeQuietly(java.lang.Object)|",
      "|java+method:///net/openhft/chronicle/engine/server/ServerEndpoint/stop()|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/set(boolean)|"
    ],
    "affectedLib": "net.openhft:chronicle-core:1.0.7-alpha",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "net.openhft:chronicle-engine:1.4.0-alpha",
    "coordinatesV2": "net.openhft:chronicle-engine:1.4.1-alpha",
    "caller": "|java+method:///net/openhft/chronicle/engine/map/ChronicleMapKeyValueStore/close()|",
    "called": "|java+method:///net/openhft/chronicle/core/io/Closeable/closeQuietly(java.lang.Object)|",
    "v1Body": [
      "|java+method:///net/openhft/chronicle/core/io/Closeable/closeQuietly(java.lang.Object)|",
      "|java+method:///net/openhft/chronicle/engine/api/tree/Asset/findView(java.lang.Class)|",
      "|java+method:///net/openhft/chronicle/map/ChronicleMap/close()|",
      "|java+method:///net/openhft/chronicle/core/Jvm/pause(long)|",
      "|java+method:///net/openhft/chronicle/threads/EventGroup/stop()|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/set(boolean)|"
    ],
    "v2Body": [
      "|java+method:///net/openhft/chronicle/core/io/Closeable/closeQuietly(java.lang.Object)|",
      "|java+method:///net/openhft/chronicle/threads/api/EventLoop/stop()|",
      "|java+method:///net/openhft/chronicle/engine/api/tree/Asset/findView(java.lang.Class)|",
      "|java+method:///net/openhft/chronicle/map/ChronicleMap/close()|",
      "|java+method:///net/openhft/chronicle/core/Jvm/pause(long)|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/set(boolean)|"
    ],
    "affectedLib": "net.openhft:chronicle-core:1.0.7-alpha",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "net.openhft:chronicle-engine:1.4.0-alpha",
    "coordinatesV2": "net.openhft:chronicle-engine:1.4.1-alpha",
    "caller": "|java+method:///net/openhft/chronicle/network/connection/TcpChannelHub/closeExisting()|",
    "called": "|java+method:///net/openhft/chronicle/core/io/CloseablesManager/closeQuietly()|",
    "v1Body": [
      "|java+method:///net/openhft/chronicle/core/io/CloseablesManager/closeQuietly()|"
    ],
    "v2Body": [
      "|java+method:///net/openhft/chronicle/core/io/CloseablesManager/closeQuietly()|",
      "|java+method:///net/openhft/chronicle/network/connection/TcpChannelHub$TcpSocketConsumer/onConnectionClosed()|"
    ],
    "affectedLib": "net.openhft:chronicle-core:1.0.7-alpha",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "net.openhft:chronicle-engine:1.4.0-alpha",
    "coordinatesV2": "net.openhft:chronicle-engine:1.4.1-alpha",
    "caller": "|java+constructor:///net/openhft/chronicle/engine/map/ChronicleMapKeyValueStore/ChronicleMapKeyValueStore(net.openhft.chronicle.engine.api.tree.RequestContext,net.openhft.chronicle.engine.api.tree.Asset)|",
    "called": "|java+method:///net/openhft/chronicle/map/ChronicleMapBuilder/of(java.lang.Class,java.lang.Class)|",
    "v1Body": [
      "|java+method:///net/openhft/chronicle/hash/replication/SingleChronicleHashReplication$Builder/createWithId(byte)|",
      "|java+constructor:///net/openhft/chronicle/bytes/IORuntimeException/IORuntimeException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///net/openhft/chronicle/hash/replication/SingleChronicleHashReplication$Builder/engineReplication(net.openhft.chronicle.hash.replication.EngineReplicationLangBytesConsumer)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError(java.lang.Object)|",
      "|java+method:///net/openhft/chronicle/hash/replication/SingleChronicleHashReplication/builder()|",
      "|java+method:///net/openhft/chronicle/engine/api/tree/RequestContext/putReturnsNull()|",
      "|java+method:///net/openhft/chronicle/engine/map/ObjectKVSSubscription/setKvStore(net.openhft.chronicle.engine.api.map.KeyValueStore)|",
      "|java+method:///org/slf4j/Logger/isDebugEnabled()|",
      "|java+method:///net/openhft/chronicle/threads/EventGroup/start()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///net/openhft/chronicle/map/ChronicleMapBuilder/putReturnsNull(boolean)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///net/openhft/chronicle/map/ChronicleMapBuilder/replication(net.openhft.chronicle.hash.replication.SingleChronicleHashReplication)|",
      "|java+method:///net/openhft/chronicle/engine/api/tree/RequestContext/name()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicBoolean/AtomicBoolean()|",
      "|java+constructor:///net/openhft/chronicle/threads/EventGroup/EventGroup(boolean)|",
      "|java+method:///net/openhft/chronicle/map/ChronicleMapBuilder/removeReturnsNull(boolean)|",
      "|java+method:///net/openhft/chronicle/engine/api/tree/RequestContext/removeReturnsNull()|",
      "|java+method:///net/openhft/chronicle/engine/fs/HostDetails/acquireTcpChannelHub()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///net/openhft/chronicle/engine/api/tree/Asset/fullName()|",
      "|java+method:///net/openhft/chronicle/map/ChronicleMapBuilder/averageValueSize(double)|",
      "|java+method:///net/openhft/chronicle/map/ChronicleMapBuilder/entries(long)|",
      "|java+method:///net/openhft/chronicle/engine/api/tree/RequestContext/getAverageValueSize()|",
      "|java+method:///net/openhft/chronicle/engine/api/tree/Asset/acquireView(java.lang.Class,net.openhft.chronicle.engine.api.tree.RequestContext)|",
      "|java+method:///net/openhft/chronicle/engine/api/tree/RequestContext/valueType()|",
      "|java+method:///net/openhft/chronicle/map/ChronicleMapBuilder/createPersistedTo(java.io.File)|",
      "|java+method:///net/openhft/chronicle/engine/api/tree/RequestContext/basePath()|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///net/openhft/chronicle/engine/fs/Clusters/get(java.lang.String)|",
      "|java+method:///net/openhft/chronicle/bytes/IORuntimeException/initCause(java.lang.Throwable)|",
      "|java+method:///net/openhft/chronicle/map/ChronicleMapBuilder/of(java.lang.Class,java.lang.Class)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///net/openhft/chronicle/engine/map/ReplicationHub/bootstrap(net.openhft.chronicle.engine.api.EngineReplication,int)|",
      "|java+method:///net/openhft/chronicle/engine/api/tree/RequestContext/getEntries()|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///net/openhft/chronicle/engine/tree/HostIdentifier/hostId()|",
      "|java+method:///net/openhft/chronicle/engine/api/tree/Asset/findView(java.lang.Class)|",
      "|java+constructor:///net/openhft/chronicle/engine/map/ReplicationHub/ReplicationHub(net.openhft.chronicle.engine.api.tree.RequestContext,net.openhft.chronicle.network.connection.TcpChannelHub,net.openhft.chronicle.threads.EventGroup,java.util.concurrent.atomic.AtomicBoolean)|",
      "|java+method:///net/openhft/chronicle/engine/api/tree/RequestContext/requestContext()|",
      "|java+method:///java/io/File/mkdirs()|",
      "|java+method:///net/openhft/chronicle/engine/api/tree/AssetNotFoundException/getMessage()|",
      "|java+method:///net/openhft/chronicle/engine/api/tree/RequestContext/keyType()|",
      "|java+method:///net/openhft/chronicle/map/ChronicleMapBuilder/eventListener(net.openhft.chronicle.map.MapEventListener)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///net/openhft/chronicle/engine/map/ChronicleMapKeyValueStore$PublishingOperations/ChronicleMapKeyValueStore$PublishingOperations(net.openhft.chronicle.engine.map.ChronicleMapKeyValueStore)|",
      "|java+method:///net/openhft/chronicle/map/ChronicleMapBuilder/create()|"
    ],
    "v2Body": [
      "|java+method:///net/openhft/chronicle/hash/replication/SingleChronicleHashReplication$Builder/createWithId(byte)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///net/openhft/chronicle/hash/replication/SingleChronicleHashReplication$Builder/engineReplication(net.openhft.chronicle.hash.replication.EngineReplicationLangBytesConsumer)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError(java.lang.Object)|",
      "|java+method:///net/openhft/chronicle/hash/replication/SingleChronicleHashReplication/builder()|",
      "|java+method:///net/openhft/chronicle/engine/api/tree/RequestContext/putReturnsNull()|",
      "|java+method:///net/openhft/chronicle/engine/map/ObjectKVSSubscription/setKvStore(net.openhft.chronicle.engine.api.map.KeyValueStore)|",
      "|java+method:///org/slf4j/Logger/isDebugEnabled()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///net/openhft/chronicle/map/ChronicleMapBuilder/putReturnsNull(boolean)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///net/openhft/chronicle/map/ChronicleMapBuilder/replication(net.openhft.chronicle.hash.replication.SingleChronicleHashReplication)|",
      "|java+method:///net/openhft/chronicle/engine/api/tree/RequestContext/name()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicBoolean/AtomicBoolean()|",
      "|java+constructor:///net/openhft/chronicle/engine/map/ReplicationHub/ReplicationHub(net.openhft.chronicle.engine.api.tree.RequestContext,net.openhft.chronicle.network.connection.TcpChannelHub,net.openhft.chronicle.threads.api.EventLoop,java.util.concurrent.atomic.AtomicBoolean)|",
      "|java+constructor:///net/openhft/chronicle/bytes/IORuntimeException/IORuntimeException(java.lang.String)|",
      "|java+method:///net/openhft/chronicle/map/ChronicleMapBuilder/removeReturnsNull(boolean)|",
      "|java+method:///net/openhft/chronicle/engine/api/tree/RequestContext/removeReturnsNull()|",
      "|java+method:///net/openhft/chronicle/engine/fs/HostDetails/acquireTcpChannelHub()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///net/openhft/chronicle/engine/api/tree/Asset/fullName()|",
      "|java+method:///net/openhft/chronicle/map/ChronicleMapBuilder/averageValueSize(double)|",
      "|java+method:///net/openhft/chronicle/map/ChronicleMapBuilder/entries(long)|",
      "|java+method:///net/openhft/chronicle/engine/api/tree/RequestContext/getAverageValueSize()|",
      "|java+method:///net/openhft/chronicle/engine/api/tree/Asset/acquireView(java.lang.Class,net.openhft.chronicle.engine.api.tree.RequestContext)|",
      "|java+method:///net/openhft/chronicle/engine/api/tree/RequestContext/valueType()|",
      "|java+method:///net/openhft/chronicle/threads/api/EventLoop/start()|",
      "|java+method:///net/openhft/chronicle/map/ChronicleMapBuilder/createPersistedTo(java.io.File)|",
      "|java+method:///net/openhft/chronicle/engine/api/tree/RequestContext/basePath()|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///net/openhft/chronicle/engine/fs/Clusters/get(java.lang.String)|",
      "|java+method:///net/openhft/chronicle/bytes/IORuntimeException/initCause(java.lang.Throwable)|",
      "|java+method:///net/openhft/chronicle/map/ChronicleMapBuilder/of(java.lang.Class,java.lang.Class)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///net/openhft/chronicle/engine/map/ReplicationHub/bootstrap(net.openhft.chronicle.engine.api.EngineReplication,int)|",
      "|java+method:///net/openhft/chronicle/engine/api/tree/RequestContext/getEntries()|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///net/openhft/chronicle/engine/tree/HostIdentifier/hostId()|",
      "|java+method:///net/openhft/chronicle/engine/api/tree/Asset/findView(java.lang.Class)|",
      "|java+method:///net/openhft/chronicle/engine/api/tree/RequestContext/requestContext()|",
      "|java+method:///java/io/File/mkdirs()|",
      "|java+method:///net/openhft/chronicle/engine/api/tree/AssetNotFoundException/getMessage()|",
      "|java+method:///net/openhft/chronicle/engine/api/tree/RequestContext/keyType()|",
      "|java+method:///net/openhft/chronicle/engine/api/tree/Asset/findOrCreateView(java.lang.Class)|",
      "|java+method:///net/openhft/chronicle/map/ChronicleMapBuilder/eventListener(net.openhft.chronicle.map.MapEventListener)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///net/openhft/chronicle/engine/map/ChronicleMapKeyValueStore$PublishingOperations/ChronicleMapKeyValueStore$PublishingOperations(net.openhft.chronicle.engine.map.ChronicleMapKeyValueStore)|",
      "|java+method:///net/openhft/chronicle/map/ChronicleMapBuilder/create()|"
    ],
    "affectedLib": "net.openhft:chronicle-map:2.1.14",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "net.openhft:chronicle-engine:1.4.0-alpha",
    "coordinatesV2": "net.openhft:chronicle-engine:1.4.1-alpha",
    "caller": "|java+method:///net/openhft/chronicle/engine/map/CMap2EngineReplicator/toLangBytes(net.openhft.chronicle.bytes.BytesStore)|",
    "called": "|java+method:///net/openhft/lang/io/NativeBytes/wrap(long,long)|",
    "v1Body": [
      "|java+method:///net/openhft/chronicle/bytes/BytesStore/readRemaining()|",
      "|java+method:///net/openhft/lang/io/NativeBytes/wrap(long,long)|",
      "|java+method:///net/openhft/chronicle/bytes/BytesStore/address()|"
    ],
    "v2Body": [
      "|java+method:///net/openhft/lang/io/IByteBufferBytes/limit(long)|",
      "|java+method:///net/openhft/chronicle/bytes/BytesStore/underlyingObject()|",
      "|java+method:///net/openhft/chronicle/bytes/BytesStore/readRemaining()|",
      "|java+method:///net/openhft/lang/io/ByteBufferBytes/wrap(java.nio.ByteBuffer)|",
      "|java+method:///net/openhft/chronicle/bytes/BytesStore/readLimit()|",
      "|java+method:///net/openhft/lang/io/NativeBytes/wrap(long,long)|",
      "|java+method:///net/openhft/chronicle/bytes/BytesStore/address()|"
    ],
    "affectedLib": "net.openhft:lang:6.6.10",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "net.openhft:chronicle-engine:1.4.0-alpha",
    "coordinatesV2": "net.openhft:chronicle-engine:1.4.1-alpha",
    "caller": "|java+method:///net/openhft/chronicle/engine/tree/VanillaAsset/forRemoteAccess(java.lang.String,int)|",
    "called": "|java+constructor:///net/openhft/chronicle/network/VanillaSessionDetails/VanillaSessionDetails()|",
    "v1Body": [
      "|java+method:///net/openhft/chronicle/engine/tree/VanillaAsset/addLeafRule(java.lang.Class,java.lang.String,net.openhft.chronicle.engine.api.tree.LeafViewFactory)|",
      "|java+method:///net/openhft/chronicle/network/VanillaSessionDetails/setUserId(java.lang.String)|",
      "|java+method:///net/openhft/chronicle/engine/tree/VanillaAsset/addWrappingRule(java.lang.Class,java.lang.String,net.openhft.chronicle.engine.api.tree.WrappingViewFactory,java.lang.Class)|",
      "|java+constructor:///net/openhft/chronicle/network/VanillaSessionDetails/VanillaSessionDetails()|",
      "|java+method:///net/openhft/chronicle/engine/tree/VanillaAsset/getView(java.lang.Class)|",
      "|java+method:///net/openhft/chronicle/engine/api/session/SessionProvider/set(net.openhft.chronicle.network.api.session.SessionDetails)|",
      "|java+constructor:///net/openhft/chronicle/network/connection/TcpChannelHub/TcpChannelHub(net.openhft.chronicle.engine.api.session.SessionProvider,java.lang.String,int)|",
      "|java+method:///java/lang/System/getProperty(java.lang.String)|",
      "|java+method:///net/openhft/chronicle/engine/tree/VanillaAsset/addView(java.lang.Class,java.lang.Object)|",
      "|java+method:///net/openhft/chronicle/engine/tree/VanillaAsset/standardStack()|"
    ],
    "v2Body": [
      "|java+method:///net/openhft/chronicle/engine/api/session/SessionProvider/set(net.openhft.chronicle.network.api.session.SessionDetails)|",
      "|java+method:///net/openhft/chronicle/threads/Threads/withThreadGroup(java.lang.ThreadGroup,java.util.concurrent.Callable)|",
      "|java+method:///net/openhft/chronicle/engine/tree/VanillaAsset/standardStack(boolean)|",
      "|java+method:///net/openhft/chronicle/engine/tree/VanillaAsset/addLeafRule(java.lang.Class,java.lang.String,net.openhft.chronicle.engine.api.tree.LeafViewFactory)|",
      "|java+method:///net/openhft/chronicle/network/VanillaSessionDetails/setUserId(java.lang.String)|",
      "|java+method:///net/openhft/chronicle/engine/tree/VanillaAsset/addWrappingRule(java.lang.Class,java.lang.String,net.openhft.chronicle.engine.api.tree.WrappingViewFactory,java.lang.Class)|",
      "|java+method:///net/openhft/chronicle/engine/tree/VanillaAsset/findView(java.lang.Class)|",
      "|java+constructor:///net/openhft/chronicle/network/VanillaSessionDetails/VanillaSessionDetails()|",
      "|java+method:///net/openhft/chronicle/engine/tree/VanillaAsset/getView(java.lang.Class)|",
      "|java+method:///java/lang/System/getProperty(java.lang.String)|",
      "|java+method:///net/openhft/chronicle/engine/tree/VanillaAsset/addView(java.lang.Class,java.lang.Object)|"
    ],
    "affectedLib": "net.openhft:chronicle-network:1.0.7-alpha",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "net.openhft:chronicle-engine:1.4.0-alpha",
    "coordinatesV2": "net.openhft:chronicle-engine:1.4.1-alpha",
    "caller": "|java+method:///net/openhft/chronicle/engine/server/ServerEndpoint/start(int,net.openhft.chronicle.engine.api.tree.AssetTree)|",
    "called": "|java+constructor:///net/openhft/chronicle/network/AcceptorEventHandler/AcceptorEventHandler(int,java.util.function.Supplier,java.util.function.Supplier)|",
    "v1Body": [
      "|java+constructor:///net/openhft/chronicle/network/AcceptorEventHandler/AcceptorEventHandler(int,java.util.function.Supplier,java.util.function.Supplier)|",
      "|java+method:///net/openhft/chronicle/threads/EventGroup/addHandler(net.openhft.chronicle.threads.api.EventHandler)|",
      "|java+method:///net/openhft/chronicle/threads/EventGroup/start()|"
    ],
    "v2Body": [
      "|java+method:///net/openhft/chronicle/threads/api/EventLoop/addHandler(net.openhft.chronicle.threads.api.EventHandler)|",
      "|java+constructor:///net/openhft/chronicle/network/AcceptorEventHandler/AcceptorEventHandler(int,java.util.function.Supplier,java.util.function.Supplier)|",
      "|java+method:///net/openhft/chronicle/threads/api/EventLoop/start()|"
    ],
    "affectedLib": "net.openhft:chronicle-network:1.0.7-alpha",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "net.openhft:chronicle-engine:1.4.0-alpha",
    "coordinatesV2": "net.openhft:chronicle-engine:1.4.1-alpha",
    "caller": "|java+method:///net/openhft/chronicle/engine/server/internal/ReplicationHandler$1/accept(net.openhft.chronicle.wire.WireIn,java.lang.Long)|",
    "called": "|java+method:///net/openhft/chronicle/wire/WireIn/readEventName(java.lang.StringBuilder)|",
    "v1Body": [
      "|java+method:///net/openhft/chronicle/wire/WireIn/readEventName(java.lang.StringBuilder)|",
      "|java+method:///net/openhft/chronicle/wire/WireIn/bytes()|",
      "|java+method:///net/openhft/chronicle/engine/server/internal/ReplicationHandler/access$000(net.openhft.chronicle.engine.server.internal.ReplicationHandler)|",
      "|java+method:///java/lang/StringBuilder/setLength(int)|",
      "|java+method:///net/openhft/chronicle/wire/Wire/writeDocument(boolean,java.util.function.Consumer)|",
      "|java+method:///net/openhft/chronicle/engine/server/internal/ReplicationHandler/writeData(net.openhft.chronicle.bytes.Bytes,java.util.function.Consumer)|"
    ],
    "v2Body": [
      "|java+method:///net/openhft/chronicle/engine/api/pubsub/Replication/acquireModificationIterator(byte)|",
      "|java+method:///net/openhft/chronicle/wire/ValueIn/int8()|",
      "|java+method:///net/openhft/chronicle/wire/WireIn/readEventName(java.lang.StringBuilder)|",
      "|java+method:///net/openhft/chronicle/threads/api/EventLoop/addHandler(net.openhft.chronicle.threads.api.EventHandler)|",
      "|java+method:///net/openhft/chronicle/engine/server/internal/ReplicationHandler/access$000(net.openhft.chronicle.engine.server.internal.ReplicationHandler)|",
      "|java+method:///java/lang/StringBuilder/setLength(int)|",
      "|java+method:///net/openhft/chronicle/wire/Wire/writeDocument(boolean,java.util.function.Consumer)|",
      "|java+method:///net/openhft/chronicle/wire/ValueIn/typedMarshallable()|",
      "|java+method:///java/lang/InterruptedException/printStackTrace()|",
      "|java+method:///net/openhft/chronicle/engine/api/EngineReplication$ModificationIterator/setModificationNotifier(net.openhft.chronicle.engine.api.EngineReplication$ModificationNotifier)|",
      "|java+method:///net/openhft/chronicle/wire/WireIn/bytes()|",
      "|java+method:///net/openhft/chronicle/engine/server/internal/ReplicationHandler/access$400(net.openhft.chronicle.engine.server.internal.ReplicationHandler)|",
      "|java+method:///net/openhft/chronicle/engine/server/internal/ReplicationHandler/access$100(net.openhft.chronicle.engine.server.internal.ReplicationHandler)|",
      "|java+method:///net/openhft/chronicle/engine/api/EngineReplication$ModificationIterator/dirtyEntries(long)|",
      "|java+constructor:///net/openhft/chronicle/engine/server/internal/ReplicationHandler$1$1/ReplicationHandler$1$1(net.openhft.chronicle.engine.server.internal.ReplicationHandler$1,net.openhft.chronicle.engine.api.EngineReplication$ModificationIterator,java.lang.Long)|",
      "|java+method:///net/openhft/chronicle/engine/server/internal/ReplicationHandler$EventId/contentEquals(java.lang.CharSequence)|",
      "|java+method:///net/openhft/chronicle/engine/api/pubsub/Replication/applyReplication(net.openhft.chronicle.engine.api.EngineReplication$ReplicationEntry)|",
      "|java+method:///net/openhft/chronicle/engine/server/internal/ReplicationHandler/writeData(net.openhft.chronicle.bytes.Bytes,java.util.function.Consumer)|"
    ],
    "affectedLib": "net.openhft:chronicle-wire:1.0.12-alpha",
    "change": "UPDATED"
  }
]