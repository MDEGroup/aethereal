[
  {
    "coordinatesV1": "io.georocket:georocket-server:1.2.0",
    "coordinatesV2": "io.georocket:georocket-server:1.1.0",
    "caller": "|java+method:///io/georocket/GeoRocket/createRouter()|",
    "called": "|java+method:///io/vertx/ext/web/Router/router(io.vertx.core.Vertx)|",
    "v1Body": [
      "|java+method:///io/georocket/http/Endpoint/createRouter()|",
      "|java+method:///io/vertx/ext/web/Router/router(io.vertx.core.Vertx)|",
      "|java+method:///io/georocket/GeoRocket/createStoreEndpoint()|",
      "|java+method:///io/vertx/ext/web/Route/handler(io.vertx.core.Handler)|",
      "|java+method:///io/vertx/ext/web/Router/route()|",
      "|java+method:///io/vertx/ext/web/Router/mountSubRouter(java.lang.String,io.vertx.ext.web.Router)|",
      "|java+method:///io/georocket/GeoRocket/createGeneralEndpoint()|"
    ],
    "v2Body": [
      "|java+method:///io/georocket/util/FilteredServiceLoader/iterator()|",
      "|java+method:///io/georocket/http/Endpoint/getMountPoint()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/georocket/util/FilteredServiceLoader/load(java.lang.Class)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///io/vertx/ext/web/Router/route()|",
      "|java+method:///io/georocket/GeoRocket/config()|",
      "|java+method:///io/vertx/core/json/JsonObject/getBoolean(java.lang.String,java.lang.Boolean)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/vertx/ext/web/Router/router(io.vertx.core.Vertx)|",
      "|java+method:///io/vertx/ext/web/Route/handler(io.vertx.core.Handler)|",
      "|java+method:///io/georocket/http/Endpoint/createRouter(io.vertx.core.Vertx)|",
      "|java+method:///io/georocket/GeoRocket/createCorsHandler()|",
      "|java+method:///io/vertx/ext/web/Router/mountSubRouter(java.lang.String,io.vertx.ext.web.Router)|",
      "|java+method:///java/lang/Boolean/booleanValue()|"
    ],
    "affectedLib": "io.vertx:vertx-web:3.4.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/http/StoreEndpoint/onPost(io.vertx.ext.web.RoutingContext)|",
    "called": "|java+method:///org/bson/types/ObjectId/toString()|",
    "v1Body": [
      "|java+method:///io/vertx/core/http/HttpServerRequest/getParam(java.lang.String)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/on(char)|",
      "|java+method:///io/vertx/core/file/FileSystem/mkdirs(java.lang.String,io.vertx.core.Handler)|",
      "|java+method:///java/util/UUID/randomUUID()|",
      "|java+method:///io/georocket/http/StoreEndpoint/onReceivingFileStarted(java.lang.String,java.lang.String,long)|",
      "|java+method:///org/bson/types/ObjectId/toString()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/vertx/core/http/HttpServerResponse/setStatusCode(int)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/flatMap(rx.functions.Func1)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///io/vertx/core/http/HttpServerRequest/pause()|",
      "|java+method:///com/google/common/base/Splitter/splitToList(java.lang.CharSequence)|",
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+constructor:///org/bson/types/ObjectId/ObjectId()|",
      "|java+method:///org/apache/commons/text/StringEscapeUtils/unescapeJava(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///io/georocket/http/StoreEndpoint/getEndpointPath(io.vertx.ext.web.RoutingContext)|",
      "|java+method:///com/google/common/base/Splitter/trimResults()|",
      "|java+method:///rx/Observable/flatMap(rx.functions.Func1)|",
      "|java+method:///java/util/regex/Pattern/quote(java.lang.String)|",
      "|java+method:///io/vertx/core/Vertx/fileSystem()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///io/vertx/core/http/HttpServerRequest/response()|",
      "|java+method:///rx/Observable/subscribe(rx.functions.Action1,rx.functions.Action1)|",
      "|java+method:///io/vertx/core/http/HttpServerResponse/end(java.lang.String)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/vertx/ext/web/RoutingContext/request()|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/core/http/HttpServerRequest/getParam(java.lang.String)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/georocket/http/Endpoint/getEndpointPath(io.vertx.ext.web.RoutingContext)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/on(char)|",
      "|java+method:///java/util/UUID/randomUUID()|",
      "|java+method:///io/georocket/http/StoreEndpoint/onReceivingFileStarted(java.lang.String,java.lang.String,long)|",
      "|java+method:///org/bson/types/ObjectId/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/vertx/core/http/HttpServerResponse/setStatusCode(int)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/flatMap(rx.functions.Func1)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///io/vertx/core/http/HttpServerRequest/pause()|",
      "|java+method:///com/google/common/base/Splitter/splitToList(java.lang.CharSequence)|",
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+constructor:///org/bson/types/ObjectId/ObjectId()|",
      "|java+method:///org/apache/commons/text/StringEscapeUtils/unescapeJava(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///com/google/common/base/Splitter/trimResults()|",
      "|java+method:///rx/Observable/flatMap(rx.functions.Func1)|",
      "|java+method:///io/vertx/core/file/FileSystem/mkdirs(java.lang.String,io.vertx.core.Handler)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isNotEmpty(java.lang.CharSequence)|",
      "|java+method:///java/util/regex/Pattern/quote(java.lang.String)|",
      "|java+method:///io/vertx/core/Vertx/fileSystem()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///io/vertx/core/http/HttpServerRequest/response()|",
      "|java+method:///rx/Observable/subscribe(rx.functions.Action1,rx.functions.Action1)|",
      "|java+method:///io/vertx/core/http/HttpServerResponse/end(java.lang.String)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/vertx/ext/web/RoutingContext/request()|"
    ],
    "affectedLib": "org.mongodb:bson:3.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/index/IndexerVerticle/lambda$null$27(io.georocket.storage.ChunkMeta,java.lang.String,io.georocket.storage.IndexMeta,io.georocket.storage.ChunkReadStream)|",
    "called": "|java+constructor:///io/georocket/util/JsonParserTransformer/JsonParserTransformer()|",
    "v1Body": [
      "|java+method:///io/georocket/util/MimeTypeUtils/belongsTo(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+constructor:///io/vertx/core/impl/NoStackTraceThrowable/NoStackTraceThrowable(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/georocket/index/xml/MetaIndexerFactory/createIndexer()|",
      "|java+method:///io/georocket/index/xml/MetaIndexer/onIndexChunk(java.lang.String,io.georocket.storage.ChunkMeta,io.georocket.storage.IndexMeta)|",
      "|java+method:///java/util/Map/putAll(java.util.Map)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/georocket/index/IndexerVerticle/chunkToDocument(io.georocket.storage.ChunkReadStream,java.lang.String,rx.Observable$Operator,java.util.List)|",
      "|java+method:///rx/Observable/error(java.lang.Throwable)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///rx/Observable/doAfterTerminate(rx.functions.Action0)|",
      "|java+constructor:///io/georocket/util/XMLParserOperator/XMLParserOperator()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///io/georocket/index/xml/MetaIndexer/getResult()|",
      "|java+method:///io/georocket/storage/IndexMeta/getFallbackCRSString()|",
      "|java+constructor:///io/georocket/util/JsonParserOperator/JsonParserOperator()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/georocket/storage/ChunkMeta/getMimeType()|",
      "|java+method:///rx/Observable/doOnNext(rx.functions.Action1)|"
    ],
    "v2Body": [
      "|java+method:///io/georocket/util/MimeTypeUtils/belongsTo(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+constructor:///io/vertx/core/impl/NoStackTraceThrowable/NoStackTraceThrowable(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/georocket/index/xml/MetaIndexerFactory/createIndexer()|",
      "|java+method:///io/georocket/index/xml/MetaIndexer/onIndexChunk(java.lang.String,io.georocket.storage.ChunkMeta,io.georocket.storage.IndexMeta)|",
      "|java+method:///java/util/Map/putAll(java.util.Map)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///rx/Observable/doAfterTerminate(rx.functions.Action0)|",
      "|java+method:///rx/Observable/error(java.lang.Throwable)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///io/georocket/index/IndexerVerticle/chunkToDocument(io.georocket.storage.ChunkReadStream,java.lang.String,rx.Observable$Transformer,java.util.List)|",
      "|java+constructor:///io/georocket/util/JsonParserTransformer/JsonParserTransformer()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///io/georocket/index/xml/MetaIndexer/getResult()|",
      "|java+method:///io/georocket/storage/IndexMeta/getFallbackCRSString()|",
      "|java+constructor:///io/georocket/util/XMLParserTransformer/XMLParserTransformer()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/georocket/storage/ChunkMeta/getMimeType()|",
      "|java+method:///rx/Observable/doOnNext(rx.functions.Action1)|"
    ],
    "affectedLib": "io.georocket:georocket-common:1.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/input/json/JsonSplitter/makeResult(int)|",
    "called": "|java+method:///io/georocket/util/StringWindow/getChars(int,int)|",
    "v1Body": [
      "|java+method:///java/lang/String/length()|",
      "|java+constructor:///io/georocket/input/Splitter$Result/Splitter$Result(java.lang.String,io.georocket.storage.ChunkMeta)|",
      "|java+method:///io/georocket/util/StringWindow/getChars(int,int)|",
      "|java+constructor:///io/georocket/storage/JsonChunkMeta/JsonChunkMeta(java.lang.String,int,int)|",
      "|java+method:///io/georocket/util/StringWindow/advanceTo(int)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Utf8/encodedLength(java.lang.CharSequence)|",
      "|java+constructor:///io/georocket/input/Splitter$Result/Splitter$Result(java.lang.String,io.georocket.storage.ChunkMeta)|",
      "|java+method:///io/georocket/util/StringWindow/getChars(int,int)|",
      "|java+constructor:///io/georocket/storage/JsonChunkMeta/JsonChunkMeta(java.lang.String,int,int)|",
      "|java+method:///io/georocket/util/StringWindow/advanceTo(int)|"
    ],
    "affectedLib": "io.georocket:georocket-common:1.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/input/xml/XMLSplitter/makeResult(int)|",
    "called": "|java+method:///io/georocket/util/Window/getBytes(int,int)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Deque/descendingIterator()|",
      "|java+constructor:///java/lang/String/String(byte%5B%5D,java.nio.charset.Charset)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/georocket/util/Window/getBytes(int,int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///io/georocket/storage/XMLChunkMeta/XMLChunkMeta(java.util.List,int,int)|",
      "|java+method:///io/georocket/util/Window/advanceTo(int)|",
      "|java+constructor:///io/georocket/input/Splitter$Result/Splitter$Result(java.lang.String,io.georocket.storage.ChunkMeta)|",
      "|java+method:///java/util/Iterator/forEachRemaining(java.util.function.Consumer)|",
      "|java+method:///java/lang/String/getBytes(java.nio.charset.Charset)|",
      "|java+method:///java/util/Deque/iterator()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/google/common/base/Utf8/encodedLength(java.lang.CharSequence)|",
      "|java+method:///java/util/Deque/descendingIterator()|",
      "|java+constructor:///java/lang/String/String(byte%5B%5D,java.nio.charset.Charset)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Deque/iterator()|",
      "|java+method:///io/georocket/util/Window/getBytes(int,int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///io/georocket/storage/XMLChunkMeta/XMLChunkMeta(java.util.List,int,int)|",
      "|java+method:///io/georocket/util/Window/advanceTo(int)|",
      "|java+constructor:///io/georocket/input/Splitter$Result/Splitter$Result(java.lang.String,io.georocket.storage.ChunkMeta)|",
      "|java+method:///java/util/Iterator/forEachRemaining(java.util.function.Consumer)|"
    ],
    "affectedLib": "io.georocket:georocket-common:1.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/index/IndexerVerticle/start(io.vertx.core.Future)|",
    "called": "|java+method:///io/georocket/query/DefaultQueryCompiler/setQueryCompilers(java.util.Collection)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///io/georocket/storage/RxStore/RxStore(io.georocket.storage.Store)|",
      "|java+method:///rx/Observable/flatMap(rx.functions.Func1)|",
      "|java+method:///org/jooq/lambda/Seq/filter(java.util.function.Predicate)|",
      "|java+method:///org/jooq/lambda/Seq/cast(java.lang.Class)|",
      "|java+method:///com/google/common/collect/ImmutableList/copyOf(java.lang.Iterable)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///rx/Observable/subscribe(rx.functions.Action1,rx.functions.Action1)|",
      "|java+method:///java/util/ServiceLoader/load(java.lang.Class)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///io/georocket/index/IndexerVerticle/createQueryCompiler()|",
      "|java+method:///io/georocket/index/IndexerVerticle/getVertx()|",
      "|java+method:///io/georocket/index/elasticsearch/ElasticsearchClientFactory/createElasticsearchClient(java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///io/georocket/index/IndexerVerticle/config()|",
      "|java+method:///org/jooq/lambda/Seq/seq(java.lang.Iterable)|",
      "|java+method:///rx/Observable/doOnNext(rx.functions.Action1)|",
      "|java+method:///io/georocket/query/DefaultQueryCompiler/setQueryCompilers(java.util.Collection)|",
      "|java+method:///io/georocket/storage/StoreFactory/createStore(io.vertx.core.Vertx)|",
      "|java+method:///io/vertx/core/json/JsonObject/getInteger(java.lang.String,java.lang.Integer)|",
      "|java+method:///io/vertx/core/json/JsonObject/getBoolean(java.lang.String,java.lang.Boolean)|",
      "|java+constructor:///io/georocket/index/elasticsearch/ElasticsearchClientFactory/ElasticsearchClientFactory(io.vertx.rxjava.core.Vertx)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///io/georocket/storage/RxStore/RxStore(io.georocket.storage.Store)|",
      "|java+method:///io/georocket/util/FilteredServiceLoader/load(java.lang.Class)|",
      "|java+method:///org/jooq/lambda/Seq/filter(java.util.function.Predicate)|",
      "|java+method:///org/jooq/lambda/Seq/cast(java.lang.Class)|",
      "|java+method:///com/google/common/collect/ImmutableList/copyOf(java.lang.Iterable)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///rx/Single/doOnSuccess(rx.functions.Action1)|",
      "|java+method:///io/vertx/core/logging/Logger/info(java.lang.Object)|",
      "|java+method:///rx/Completable/subscribe(rx.functions.Action0,rx.functions.Action1)|",
      "|java+method:///io/georocket/index/IndexerVerticle/createQueryCompiler()|",
      "|java+method:///rx/Completable/defer(rx.functions.Func0)|",
      "|java+method:///rx/Single/flatMapCompletable(rx.functions.Func1)|",
      "|java+method:///io/georocket/index/IndexerVerticle/getVertx()|",
      "|java+method:///io/georocket/index/elasticsearch/ElasticsearchClientFactory/createElasticsearchClient(java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///io/georocket/index/IndexerVerticle/config()|",
      "|java+method:///org/jooq/lambda/Seq/seq(java.lang.Iterable)|",
      "|java+method:///io/georocket/query/DefaultQueryCompiler/setQueryCompilers(java.util.Collection)|",
      "|java+method:///io/georocket/storage/StoreFactory/createStore(io.vertx.core.Vertx)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///rx/Completable/andThen(rx.Completable)|",
      "|java+method:///io/vertx/core/json/JsonObject/getInteger(java.lang.String,java.lang.Integer)|",
      "|java+method:///io/vertx/core/json/JsonObject/getBoolean(java.lang.String,java.lang.Boolean)|",
      "|java+constructor:///io/georocket/index/elasticsearch/ElasticsearchClientFactory/ElasticsearchClientFactory(io.vertx.rxjava.core.Vertx)|"
    ],
    "affectedLib": "io.georocket:georocket-common:1.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/index/MetadataVerticle/executeQuery(io.vertx.core.json.JsonObject,java.lang.String)|",
    "called": "|java+method:///io/georocket/query/DefaultQueryCompiler/compileQuery(java.lang.String,java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///rx/Observable/toSingle()|",
      "|java+method:///io/georocket/index/elasticsearch/ElasticsearchClient/continueScroll(java.lang.String,java.lang.String)|",
      "|java+method:///rx/Single/error(java.lang.Throwable)|",
      "|java+method:///io/georocket/index/elasticsearch/ElasticsearchClient/beginScroll(java.lang.String,io.vertx.core.json.JsonObject,io.vertx.core.json.JsonObject,io.vertx.core.json.JsonObject,java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///io/georocket/query/DefaultQueryCompiler/compileQuery(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String)|",
      "|java+method:///io/vertx/core/json/JsonObject/getInteger(java.lang.String,java.lang.Integer)|",
      "|java+constructor:///io/vertx/core/json/JsonObject/JsonObject()|",
      "|java+method:///io/vertx/core/json/JsonObject/put(java.lang.String,java.lang.Integer)|"
    ],
    "v2Body": [
      "|java+method:///io/georocket/index/elasticsearch/ElasticsearchClient/continueScroll(java.lang.String,java.lang.String)|",
      "|java+method:///rx/Single/error(java.lang.Throwable)|",
      "|java+method:///io/georocket/index/elasticsearch/ElasticsearchClient/beginScroll(java.lang.String,io.vertx.core.json.JsonObject,io.vertx.core.json.JsonObject,io.vertx.core.json.JsonObject,java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///io/georocket/query/DefaultQueryCompiler/compileQuery(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String)|",
      "|java+method:///io/vertx/core/json/JsonObject/getInteger(java.lang.String,java.lang.Integer)|",
      "|java+constructor:///io/vertx/core/json/JsonObject/JsonObject()|",
      "|java+method:///io/vertx/core/json/JsonObject/put(java.lang.String,java.lang.Integer)|"
    ],
    "affectedLib": "io.georocket:georocket-common:1.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/index/MetadataVerticle/updateMetadata(io.vertx.core.json.JsonObject,java.lang.String,io.vertx.core.json.JsonObject)|",
    "called": "|java+method:///io/georocket/query/DefaultQueryCompiler/compileQuery(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///io/vertx/core/json/JsonObject/put(java.lang.String,io.vertx.core.json.JsonObject)|",
      "|java+method:///com/google/common/io/Resources/toString(java.net.URL,java.nio.charset.Charset)|",
      "|java+method:///io/vertx/core/json/JsonObject/put(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Class/getResource(java.lang.String)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String,java.lang.String)|",
      "|java+method:///io/georocket/index/MetadataVerticle/updateDocuments(io.vertx.core.json.JsonObject,io.vertx.core.json.JsonObject)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+constructor:///java/io/FileNotFoundException/FileNotFoundException(java.lang.String)|",
      "|java+method:///io/georocket/query/DefaultQueryCompiler/compileQuery(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///io/vertx/core/json/JsonObject/JsonObject()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///rx/Single/error(java.lang.Throwable)|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/core/json/JsonObject/put(java.lang.String,io.vertx.core.json.JsonObject)|",
      "|java+method:///com/google/common/io/Resources/toString(java.net.URL,java.nio.charset.Charset)|",
      "|java+method:///rx/Completable/error(java.lang.Throwable)|",
      "|java+method:///io/vertx/core/json/JsonObject/put(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Class/getResource(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String,java.lang.String)|",
      "|java+method:///io/georocket/index/MetadataVerticle/updateDocuments(io.vertx.core.json.JsonObject,io.vertx.core.json.JsonObject)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+constructor:///java/io/FileNotFoundException/FileNotFoundException(java.lang.String)|",
      "|java+method:///io/georocket/query/DefaultQueryCompiler/compileQuery(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///io/vertx/core/json/JsonObject/JsonObject()|"
    ],
    "affectedLib": "io.georocket:georocket-common:1.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/ImporterVerticle/importJSON(io.vertx.rxjava.core.streams.ReadStream,java.lang.String,java.lang.String,long,java.lang.String,java.util.List,java.util.Map)|",
    "called": "|java+constructor:///io/georocket/util/StringWindow/StringWindow()|",
    "v1Body": [
      "|java+method:///rx/Observable/toSingle()|",
      "|java+method:///rx/Observable/map(rx.functions.Func1)|",
      "|java+method:///rx/Observable/flatMap(rx.functions.Func1)|",
      "|java+method:///rx/Observable/lift(rx.Observable$Operator)|",
      "|java+method:///rx/Observable/flatMapSingle(rx.functions.Func1)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicInteger/AtomicInteger(int)|",
      "|java+method:///io/vertx/rxjava/core/streams/ReadStream/toObservable()|",
      "|java+constructor:///io/georocket/input/geojson/GeoJsonSplitter/GeoJsonSplitter(io.georocket.util.StringWindow)|",
      "|java+method:///rx/Observable/count()|",
      "|java+constructor:///io/georocket/util/JsonParserOperator/JsonParserOperator()|",
      "|java+constructor:///io/georocket/util/StringWindow/StringWindow()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///rx/Observable/doOnNext(rx.functions.Action1)|"
    ],
    "v2Body": [
      "|java+method:///rx/Observable/toSingle()|",
      "|java+method:///rx/Observable/map(rx.functions.Func1)|",
      "|java+method:///rx/Observable/flatMap(rx.functions.Func1)|",
      "|java+method:///rx/Observable/flatMapSingle(rx.functions.Func1)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicInteger/AtomicInteger(int)|",
      "|java+constructor:///io/georocket/util/StringWindow/StringWindow()|",
      "|java+constructor:///io/georocket/util/JsonParserTransformer/JsonParserTransformer()|",
      "|java+constructor:///io/georocket/input/geojson/GeoJsonSplitter/GeoJsonSplitter(io.georocket.util.StringWindow)|",
      "|java+constructor:///io/georocket/util/UTF8BomFilter/UTF8BomFilter()|",
      "|java+method:///rx/Observable/count()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///rx/Observable/doOnNext(rx.functions.Action1)|",
      "|java+method:///rx/Observable/compose(rx.Observable$Transformer)|",
      "|java+method:///io/vertx/rxjava/core/streams/ReadStream/toObservable()|"
    ],
    "affectedLib": "io.georocket:georocket-common:1.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/index/IndexerVerticle/onQuery(io.vertx.core.json.JsonObject)|",
    "called": "|java+method:///io/georocket/query/DefaultQueryCompiler/compileQuery(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///rx/Observable/map(rx.functions.Func1)|",
      "|java+method:///io/georocket/index/elasticsearch/ElasticsearchClient/beginScroll(java.lang.String,io.vertx.core.json.JsonObject,io.vertx.core.json.JsonObject,io.vertx.core.json.JsonObject,java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///rx/Observable/error(java.lang.Throwable)|",
      "|java+method:///io/georocket/query/DefaultQueryCompiler/compileQuery(java.lang.String,java.lang.String)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String)|",
      "|java+method:///io/vertx/core/json/JsonObject/getInteger(java.lang.String,java.lang.Integer)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///io/georocket/index/elasticsearch/ElasticsearchClient/continueScroll(java.lang.String,java.lang.String)|",
      "|java+constructor:///io/vertx/core/json/JsonObject/JsonObject()|",
      "|java+method:///io/vertx/core/json/JsonObject/put(java.lang.String,java.lang.Integer)|"
    ],
    "v2Body": [
      "|java+method:///rx/Single/error(java.lang.Throwable)|",
      "|java+method:///io/georocket/index/elasticsearch/ElasticsearchClient/beginScroll(java.lang.String,io.vertx.core.json.JsonObject,io.vertx.core.json.JsonObject,io.vertx.core.json.JsonObject,java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///io/georocket/query/DefaultQueryCompiler/compileQuery(java.lang.String,java.lang.String)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String)|",
      "|java+method:///io/vertx/core/json/JsonObject/getInteger(java.lang.String,java.lang.Integer)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///io/georocket/index/elasticsearch/ElasticsearchClient/continueScroll(java.lang.String,java.lang.String)|",
      "|java+method:///rx/Single/map(rx.functions.Func1)|",
      "|java+constructor:///io/vertx/core/json/JsonObject/JsonObject()|",
      "|java+method:///io/vertx/core/json/JsonObject/put(java.lang.String,java.lang.Integer)|"
    ],
    "affectedLib": "io.georocket:georocket-common:1.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/ImporterVerticle/importXML(io.vertx.rxjava.core.streams.ReadStream,java.lang.String,java.lang.String,long,java.lang.String,java.util.List,java.util.Map,java.lang.String)|",
    "called": "|java+constructor:///io/georocket/index/xml/XMLCRSIndexer/XMLCRSIndexer()|",
    "v1Body": [
      "|java+method:///rx/Observable/toSingle()|",
      "|java+method:///rx/Observable/map(rx.functions.Func1)|",
      "|java+method:///rx/Observable/count()|",
      "|java+method:///rx/Observable/flatMap(rx.functions.Func1)|",
      "|java+method:///rx/Observable/lift(rx.Observable$Operator)|",
      "|java+method:///rx/Observable/flatMapSingle(rx.functions.Func1)|",
      "|java+constructor:///io/georocket/input/xml/FirstLevelSplitter/FirstLevelSplitter(io.georocket.util.Window)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicInteger/AtomicInteger(int)|",
      "|java+constructor:///io/georocket/util/Window/Window()|",
      "|java+method:///io/vertx/rxjava/core/streams/ReadStream/toObservable()|",
      "|java+constructor:///io/georocket/util/XMLParserOperator/XMLParserOperator()|",
      "|java+constructor:///io/georocket/index/xml/XMLCRSIndexer/XMLCRSIndexer()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///rx/Observable/doOnNext(rx.functions.Action1)|"
    ],
    "v2Body": [
      "|java+method:///rx/Observable/toSingle()|",
      "|java+method:///rx/Observable/map(rx.functions.Func1)|",
      "|java+method:///rx/Observable/flatMap(rx.functions.Func1)|",
      "|java+constructor:///io/georocket/index/xml/XMLCRSIndexer/XMLCRSIndexer()|",
      "|java+method:///rx/Observable/flatMapSingle(rx.functions.Func1)|",
      "|java+constructor:///io/georocket/input/xml/FirstLevelSplitter/FirstLevelSplitter(io.georocket.util.Window)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicInteger/AtomicInteger(int)|",
      "|java+constructor:///io/georocket/util/UTF8BomFilter/UTF8BomFilter()|",
      "|java+method:///rx/Observable/count()|",
      "|java+constructor:///io/georocket/util/Window/Window()|",
      "|java+constructor:///io/georocket/util/XMLParserTransformer/XMLParserTransformer()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///rx/Observable/doOnNext(rx.functions.Action1)|",
      "|java+method:///rx/Observable/compose(rx.Observable$Transformer)|",
      "|java+method:///io/vertx/rxjava/core/streams/ReadStream/toObservable()|"
    ],
    "affectedLib": "io.georocket:georocket-common:1.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/index/MetadataVerticle/start(io.vertx.core.Future)|",
    "called": "|java+method:///io/georocket/query/DefaultQueryCompiler/setQueryCompilers(java.util.Collection)|",
    "v1Body": [
      "|java+method:///rx/Observable/flatMap(rx.functions.Func1)|",
      "|java+method:///com/google/common/collect/ImmutableList/copyOf(java.lang.Iterable)|",
      "|java+method:///rx/Observable/subscribe(rx.functions.Action1,rx.functions.Action1)|",
      "|java+method:///io/georocket/index/elasticsearch/ElasticsearchClientFactory/createElasticsearchClient(java.lang.String)|",
      "|java+method:///io/georocket/query/DefaultQueryCompiler/setQueryCompilers(java.util.Collection)|",
      "|java+constructor:///io/georocket/index/elasticsearch/ElasticsearchClientFactory/ElasticsearchClientFactory(io.vertx.rxjava.core.Vertx)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///rx/Observable/doOnNext(rx.functions.Action1)|",
      "|java+method:///java/util/ServiceLoader/load(java.lang.Class)|",
      "|java+method:///io/georocket/index/MetadataVerticle/createQueryCompiler()|"
    ],
    "v2Body": [
      "|java+method:///rx/Completable/subscribe(rx.functions.Action0,rx.functions.Action1)|",
      "|java+method:///io/georocket/util/FilteredServiceLoader/load(java.lang.Class)|",
      "|java+method:///com/google/common/collect/ImmutableList/copyOf(java.lang.Iterable)|",
      "|java+method:///rx/Single/doOnSuccess(rx.functions.Action1)|",
      "|java+method:///io/georocket/index/elasticsearch/ElasticsearchClientFactory/createElasticsearchClient(java.lang.String)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/georocket/index/MetadataVerticle/createQueryCompiler()|",
      "|java+method:///io/georocket/query/DefaultQueryCompiler/setQueryCompilers(java.util.Collection)|",
      "|java+method:///rx/Completable/andThen(rx.Completable)|",
      "|java+constructor:///io/georocket/index/elasticsearch/ElasticsearchClientFactory/ElasticsearchClientFactory(io.vertx.rxjava.core.Vertx)|",
      "|java+method:///rx/Completable/defer(rx.functions.Func0)|",
      "|java+method:///rx/Single/flatMapCompletable(rx.functions.Func1)|"
    ],
    "affectedLib": "io.georocket:georocket-common:1.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/util/service/DefaultService/unpublish(io.vertx.rxjava.servicediscovery.ServiceDiscovery)|",
    "called": "|java+method:///io/vertx/rxjava/servicediscovery/ServiceDiscovery/rxUnpublish(java.lang.String)|",
    "v1Body": [
      "|java+method:///io/vertx/rxjava/servicediscovery/ServiceDiscovery/rxUnpublish(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///rx/Single/toCompletable()|",
      "|java+method:///io/vertx/rxjava/servicediscovery/ServiceDiscovery/rxUnpublish(java.lang.String)|"
    ],
    "affectedLib": "io.vertx:vertx-service-discovery:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/util/service/Service/publishOnce(java.lang.String,java.lang.String,io.vertx.rxjava.servicediscovery.ServiceDiscovery,io.vertx.rxjava.core.Vertx)|",
    "called": "|java+constructor:///io/vertx/servicediscovery/Record/Record()|",
    "v1Body": [
      "|java+method:///io/vertx/servicediscovery/Record/setLocation(io.vertx.core.json.JsonObject)|",
      "|java+method:///io/vertx/servicediscovery/Record/setName(java.lang.String)|",
      "|java+method:///io/georocket/util/service/Service/publishOnce(io.vertx.servicediscovery.Record,io.vertx.rxjava.servicediscovery.ServiceDiscovery,io.vertx.rxjava.core.Vertx)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///rx/Single/error(java.lang.Throwable)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+constructor:///io/vertx/core/json/JsonObject/JsonObject()|",
      "|java+method:///java/lang/String/trim()|",
      "|java+constructor:///io/vertx/servicediscovery/Record/Record()|",
      "|java+method:///io/vertx/core/json/JsonObject/put(java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/servicediscovery/Record/setLocation(io.vertx.core.json.JsonObject)|",
      "|java+method:///io/vertx/servicediscovery/Record/setName(java.lang.String)|",
      "|java+method:///rx/Completable/error(java.lang.Throwable)|",
      "|java+method:///io/georocket/util/service/Service/publishOnce(io.vertx.servicediscovery.Record,io.vertx.rxjava.servicediscovery.ServiceDiscovery,io.vertx.rxjava.core.Vertx)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+constructor:///io/vertx/core/json/JsonObject/JsonObject()|",
      "|java+method:///java/lang/String/trim()|",
      "|java+constructor:///io/vertx/servicediscovery/Record/Record()|",
      "|java+method:///io/vertx/core/json/JsonObject/put(java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "io.vertx:vertx-service-discovery:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/http/StoreEndpoint/onGet(io.vertx.ext.web.RoutingContext)|",
    "called": "|java+method:///io/georocket/http/Endpoint/getEndpointPath(io.vertx.ext.web.RoutingContext)|",
    "v1Body": [
      "|java+method:///io/vertx/core/http/HttpServerRequest/getParam(java.lang.String)|",
      "|java+method:///io/georocket/http/StoreEndpoint/getAttributeValues(java.lang.String,java.lang.String,java.lang.String,io.vertx.core.http.HttpServerResponse)|",
      "|java+method:///io/vertx/ext/web/RoutingContext/response()|",
      "|java+method:///io/georocket/http/StoreEndpoint/getEndpointPath(io.vertx.ext.web.RoutingContext)|",
      "|java+method:///io/georocket/http/StoreEndpoint/getPropertyValues(java.lang.String,java.lang.String,java.lang.String,io.vertx.core.http.HttpServerResponse)|",
      "|java+method:///io/vertx/core/http/HttpServerResponse/setStatusCode(int)|",
      "|java+method:///io/vertx/core/http/HttpServerResponse/end(java.lang.String)|",
      "|java+method:///io/georocket/http/StoreEndpoint/getChunks(io.vertx.ext.web.RoutingContext)|",
      "|java+method:///io/vertx/ext/web/RoutingContext/request()|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/core/http/HttpServerRequest/getParam(java.lang.String)|",
      "|java+method:///io/georocket/http/Endpoint/getEndpointPath(io.vertx.ext.web.RoutingContext)|",
      "|java+method:///io/georocket/http/StoreEndpoint/getAttributeValues(java.lang.String,java.lang.String,java.lang.String,io.vertx.core.http.HttpServerResponse)|",
      "|java+method:///io/vertx/ext/web/RoutingContext/response()|",
      "|java+method:///io/georocket/http/StoreEndpoint/getPropertyValues(java.lang.String,java.lang.String,java.lang.String,io.vertx.core.http.HttpServerResponse)|",
      "|java+method:///io/vertx/core/http/HttpServerResponse/setStatusCode(int)|",
      "|java+method:///io/vertx/core/http/HttpServerResponse/end(java.lang.String)|",
      "|java+method:///io/georocket/http/StoreEndpoint/getChunks(io.vertx.ext.web.RoutingContext)|",
      "|java+method:///io/vertx/ext/web/RoutingContext/request()|"
    ],
    "affectedLib": "io.georocket:georocket-server-api:1.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/index/IndexerVerticle/lambda$null$27(io.georocket.storage.ChunkMeta,java.lang.String,io.georocket.storage.IndexMeta,io.georocket.storage.ChunkReadStream)|",
    "called": "|java+method:///io/georocket/index/xml/MetaIndexerFactory/createIndexer()|",
    "v1Body": [
      "|java+method:///io/georocket/util/MimeTypeUtils/belongsTo(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+constructor:///io/vertx/core/impl/NoStackTraceThrowable/NoStackTraceThrowable(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/georocket/index/xml/MetaIndexerFactory/createIndexer()|",
      "|java+method:///io/georocket/index/xml/MetaIndexer/onIndexChunk(java.lang.String,io.georocket.storage.ChunkMeta,io.georocket.storage.IndexMeta)|",
      "|java+method:///java/util/Map/putAll(java.util.Map)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/georocket/index/IndexerVerticle/chunkToDocument(io.georocket.storage.ChunkReadStream,java.lang.String,rx.Observable$Operator,java.util.List)|",
      "|java+method:///rx/Observable/error(java.lang.Throwable)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///rx/Observable/doAfterTerminate(rx.functions.Action0)|",
      "|java+constructor:///io/georocket/util/XMLParserOperator/XMLParserOperator()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///io/georocket/index/xml/MetaIndexer/getResult()|",
      "|java+method:///io/georocket/storage/IndexMeta/getFallbackCRSString()|",
      "|java+constructor:///io/georocket/util/JsonParserOperator/JsonParserOperator()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/georocket/storage/ChunkMeta/getMimeType()|",
      "|java+method:///rx/Observable/doOnNext(rx.functions.Action1)|"
    ],
    "v2Body": [
      "|java+method:///io/georocket/util/MimeTypeUtils/belongsTo(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+constructor:///io/vertx/core/impl/NoStackTraceThrowable/NoStackTraceThrowable(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/georocket/index/xml/MetaIndexerFactory/createIndexer()|",
      "|java+method:///io/georocket/index/xml/MetaIndexer/onIndexChunk(java.lang.String,io.georocket.storage.ChunkMeta,io.georocket.storage.IndexMeta)|",
      "|java+method:///java/util/Map/putAll(java.util.Map)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///rx/Observable/doAfterTerminate(rx.functions.Action0)|",
      "|java+method:///rx/Observable/error(java.lang.Throwable)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///io/georocket/index/IndexerVerticle/chunkToDocument(io.georocket.storage.ChunkReadStream,java.lang.String,rx.Observable$Transformer,java.util.List)|",
      "|java+constructor:///io/georocket/util/JsonParserTransformer/JsonParserTransformer()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///io/georocket/index/xml/MetaIndexer/getResult()|",
      "|java+method:///io/georocket/storage/IndexMeta/getFallbackCRSString()|",
      "|java+constructor:///io/georocket/util/XMLParserTransformer/XMLParserTransformer()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/georocket/storage/ChunkMeta/getMimeType()|",
      "|java+method:///rx/Observable/doOnNext(rx.functions.Action1)|"
    ],
    "affectedLib": "io.georocket:georocket-server-api:1.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/input/json/JsonSplitter/makeResult(int)|",
    "called": "|java+constructor:///io/georocket/storage/JsonChunkMeta/JsonChunkMeta(java.lang.String,int,int)|",
    "v1Body": [
      "|java+method:///java/lang/String/length()|",
      "|java+constructor:///io/georocket/input/Splitter$Result/Splitter$Result(java.lang.String,io.georocket.storage.ChunkMeta)|",
      "|java+method:///io/georocket/util/StringWindow/getChars(int,int)|",
      "|java+constructor:///io/georocket/storage/JsonChunkMeta/JsonChunkMeta(java.lang.String,int,int)|",
      "|java+method:///io/georocket/util/StringWindow/advanceTo(int)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Utf8/encodedLength(java.lang.CharSequence)|",
      "|java+constructor:///io/georocket/input/Splitter$Result/Splitter$Result(java.lang.String,io.georocket.storage.ChunkMeta)|",
      "|java+method:///io/georocket/util/StringWindow/getChars(int,int)|",
      "|java+constructor:///io/georocket/storage/JsonChunkMeta/JsonChunkMeta(java.lang.String,int,int)|",
      "|java+method:///io/georocket/util/StringWindow/advanceTo(int)|"
    ],
    "affectedLib": "io.georocket:georocket-server-api:1.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/input/xml/XMLSplitter/makeResult(int)|",
    "called": "|java+constructor:///io/georocket/storage/XMLChunkMeta/XMLChunkMeta(java.util.List,int,int)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Deque/descendingIterator()|",
      "|java+constructor:///java/lang/String/String(byte%5B%5D,java.nio.charset.Charset)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/georocket/util/Window/getBytes(int,int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///io/georocket/storage/XMLChunkMeta/XMLChunkMeta(java.util.List,int,int)|",
      "|java+method:///io/georocket/util/Window/advanceTo(int)|",
      "|java+constructor:///io/georocket/input/Splitter$Result/Splitter$Result(java.lang.String,io.georocket.storage.ChunkMeta)|",
      "|java+method:///java/util/Iterator/forEachRemaining(java.util.function.Consumer)|",
      "|java+method:///java/lang/String/getBytes(java.nio.charset.Charset)|",
      "|java+method:///java/util/Deque/iterator()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/google/common/base/Utf8/encodedLength(java.lang.CharSequence)|",
      "|java+method:///java/util/Deque/descendingIterator()|",
      "|java+constructor:///java/lang/String/String(byte%5B%5D,java.nio.charset.Charset)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Deque/iterator()|",
      "|java+method:///io/georocket/util/Window/getBytes(int,int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///io/georocket/storage/XMLChunkMeta/XMLChunkMeta(java.util.List,int,int)|",
      "|java+method:///io/georocket/util/Window/advanceTo(int)|",
      "|java+constructor:///io/georocket/input/Splitter$Result/Splitter$Result(java.lang.String,io.georocket.storage.ChunkMeta)|",
      "|java+method:///java/util/Iterator/forEachRemaining(java.util.function.Consumer)|"
    ],
    "affectedLib": "io.georocket:georocket-server-api:1.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/input/xml/XMLSplitter/lambda$makeResult$1(java.lang.StringBuilder,io.georocket.util.XMLStartElement)|",
    "called": "|java+method:///io/georocket/util/XMLStartElement/getName()|",
    "v1Body": [
      "|java+method:///io/georocket/util/XMLStartElement/getName()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+method:///io/georocket/util/XMLStartElement/getName()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|"
    ],
    "affectedLib": "io.georocket:georocket-server-api:1.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/http/StoreEndpoint/onDelete(io.vertx.ext.web.RoutingContext)|",
    "called": "|java+method:///io/georocket/http/Endpoint/getEndpointPath(io.vertx.ext.web.RoutingContext)|",
    "v1Body": [
      "|java+method:///io/vertx/core/http/HttpServerRequest/getParam(java.lang.String)|",
      "|java+method:///io/vertx/ext/web/RoutingContext/response()|",
      "|java+method:///io/georocket/http/StoreEndpoint/getEndpointPath(io.vertx.ext.web.RoutingContext)|",
      "|java+method:///io/georocket/http/StoreEndpoint/removeProperties(java.lang.String,java.lang.String,java.lang.String,io.vertx.core.http.HttpServerResponse)|",
      "|java+method:///io/vertx/core/http/HttpServerResponse/setStatusCode(int)|",
      "|java+method:///io/vertx/core/http/HttpServerResponse/end(java.lang.String)|",
      "|java+method:///io/georocket/http/StoreEndpoint/removeTags(java.lang.String,java.lang.String,java.lang.String,io.vertx.core.http.HttpServerResponse)|",
      "|java+method:///io/georocket/http/StoreEndpoint/deleteChunks(java.lang.String,java.lang.String,io.vertx.core.http.HttpServerResponse)|",
      "|java+method:///io/vertx/ext/web/RoutingContext/request()|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/core/http/HttpServerRequest/getParam(java.lang.String)|",
      "|java+method:///io/georocket/http/Endpoint/getEndpointPath(io.vertx.ext.web.RoutingContext)|",
      "|java+method:///io/vertx/ext/web/RoutingContext/response()|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isNotEmpty(java.lang.CharSequence)|",
      "|java+method:///io/georocket/http/StoreEndpoint/removeProperties(java.lang.String,java.lang.String,java.lang.String,io.vertx.core.http.HttpServerResponse)|",
      "|java+method:///io/vertx/core/http/HttpServerResponse/setStatusCode(int)|",
      "|java+method:///io/vertx/core/http/HttpServerResponse/end(java.lang.String)|",
      "|java+method:///io/georocket/http/StoreEndpoint/removeTags(java.lang.String,java.lang.String,java.lang.String,io.vertx.core.http.HttpServerResponse)|",
      "|java+method:///io/georocket/http/StoreEndpoint/deleteChunks(java.lang.String,java.lang.String,io.vertx.core.http.HttpServerResponse)|",
      "|java+method:///io/vertx/ext/web/RoutingContext/request()|"
    ],
    "affectedLib": "io.georocket:georocket-server-api:1.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/http/StoreEndpoint/onPost(io.vertx.ext.web.RoutingContext)|",
    "called": "|java+method:///io/georocket/http/Endpoint/getEndpointPath(io.vertx.ext.web.RoutingContext)|",
    "v1Body": [
      "|java+method:///io/vertx/core/http/HttpServerRequest/getParam(java.lang.String)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/on(char)|",
      "|java+method:///io/vertx/core/file/FileSystem/mkdirs(java.lang.String,io.vertx.core.Handler)|",
      "|java+method:///java/util/UUID/randomUUID()|",
      "|java+method:///io/georocket/http/StoreEndpoint/onReceivingFileStarted(java.lang.String,java.lang.String,long)|",
      "|java+method:///org/bson/types/ObjectId/toString()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/vertx/core/http/HttpServerResponse/setStatusCode(int)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/flatMap(rx.functions.Func1)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///io/vertx/core/http/HttpServerRequest/pause()|",
      "|java+method:///com/google/common/base/Splitter/splitToList(java.lang.CharSequence)|",
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+constructor:///org/bson/types/ObjectId/ObjectId()|",
      "|java+method:///org/apache/commons/text/StringEscapeUtils/unescapeJava(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///io/georocket/http/StoreEndpoint/getEndpointPath(io.vertx.ext.web.RoutingContext)|",
      "|java+method:///com/google/common/base/Splitter/trimResults()|",
      "|java+method:///rx/Observable/flatMap(rx.functions.Func1)|",
      "|java+method:///java/util/regex/Pattern/quote(java.lang.String)|",
      "|java+method:///io/vertx/core/Vertx/fileSystem()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///io/vertx/core/http/HttpServerRequest/response()|",
      "|java+method:///rx/Observable/subscribe(rx.functions.Action1,rx.functions.Action1)|",
      "|java+method:///io/vertx/core/http/HttpServerResponse/end(java.lang.String)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/vertx/ext/web/RoutingContext/request()|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/core/http/HttpServerRequest/getParam(java.lang.String)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/georocket/http/Endpoint/getEndpointPath(io.vertx.ext.web.RoutingContext)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/on(char)|",
      "|java+method:///java/util/UUID/randomUUID()|",
      "|java+method:///io/georocket/http/StoreEndpoint/onReceivingFileStarted(java.lang.String,java.lang.String,long)|",
      "|java+method:///org/bson/types/ObjectId/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/vertx/core/http/HttpServerResponse/setStatusCode(int)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/flatMap(rx.functions.Func1)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///io/vertx/core/http/HttpServerRequest/pause()|",
      "|java+method:///com/google/common/base/Splitter/splitToList(java.lang.CharSequence)|",
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+constructor:///org/bson/types/ObjectId/ObjectId()|",
      "|java+method:///org/apache/commons/text/StringEscapeUtils/unescapeJava(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///com/google/common/base/Splitter/trimResults()|",
      "|java+method:///rx/Observable/flatMap(rx.functions.Func1)|",
      "|java+method:///io/vertx/core/file/FileSystem/mkdirs(java.lang.String,io.vertx.core.Handler)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isNotEmpty(java.lang.CharSequence)|",
      "|java+method:///java/util/regex/Pattern/quote(java.lang.String)|",
      "|java+method:///io/vertx/core/Vertx/fileSystem()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///io/vertx/core/http/HttpServerRequest/response()|",
      "|java+method:///rx/Observable/subscribe(rx.functions.Action1,rx.functions.Action1)|",
      "|java+method:///io/vertx/core/http/HttpServerResponse/end(java.lang.String)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/vertx/ext/web/RoutingContext/request()|"
    ],
    "affectedLib": "io.georocket:georocket-server-api:1.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/http/StoreEndpoint/onPut(io.vertx.ext.web.RoutingContext)|",
    "called": "|java+method:///io/georocket/http/Endpoint/getEndpointPath(io.vertx.ext.web.RoutingContext)|",
    "v1Body": [
      "|java+method:///io/vertx/core/http/HttpServerRequest/getParam(java.lang.String)|",
      "|java+method:///io/vertx/ext/web/RoutingContext/response()|",
      "|java+method:///io/georocket/http/StoreEndpoint/getEndpointPath(io.vertx.ext.web.RoutingContext)|",
      "|java+method:///rx/Single/flatMap(rx.functions.Func1)|",
      "|java+method:///rx/Single/just(java.lang.Object)|",
      "|java+method:///rx/Single/subscribe(rx.functions.Action1,rx.functions.Action1)|",
      "|java+method:///io/vertx/core/http/HttpServerResponse/setStatusCode(int)|",
      "|java+method:///io/vertx/core/http/HttpServerResponse/end(java.lang.String)|",
      "|java+method:///io/vertx/ext/web/RoutingContext/request()|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/core/http/HttpServerRequest/getParam(java.lang.String)|",
      "|java+method:///io/georocket/http/Endpoint/getEndpointPath(io.vertx.ext.web.RoutingContext)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isNotEmpty(java.lang.CharSequence)|",
      "|java+method:///io/vertx/core/http/HttpServerResponse/end(java.lang.String)|",
      "|java+method:///io/vertx/ext/web/RoutingContext/response()|",
      "|java+method:///rx/Completable/complete()|",
      "|java+method:///rx/Completable/subscribe(rx.functions.Action0,rx.functions.Action1)|",
      "|java+method:///io/vertx/core/http/HttpServerResponse/setStatusCode(int)|",
      "|java+method:///io/georocket/http/StoreEndpoint/appendTags(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///io/vertx/ext/web/RoutingContext/request()|",
      "|java+method:///io/georocket/http/StoreEndpoint/setProperties(java.lang.String,java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "io.georocket:georocket-server-api:1.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/storage/RxStore/rxRemoveProperties(java.lang.String,java.lang.String,java.util.List)|",
    "called": "|java+constructor:///io/vertx/rx/java/SingleOnSubscribeAdapter/SingleOnSubscribeAdapter(java.util.function.Consumer)|",
    "v1Body": [
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toSingle()|",
      "|java+method:///io/georocket/storage/RxStore/removeProperties(java.lang.String,java.lang.String,java.util.List,io.vertx.core.Handler)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|"
    ],
    "v2Body": [
      "|java+method:///rx/Single/toCompletable()|",
      "|java+constructor:///io/vertx/rx/java/SingleOnSubscribeAdapter/SingleOnSubscribeAdapter(java.util.function.Consumer)|",
      "|java+method:///rx/Single/create(rx.Single$OnSubscribe)|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/index/elasticsearch/RemoteElasticsearchClient/isRunning()|",
    "called": "|java+method:///io/vertx/rxjava/core/http/HttpClient/head(java.lang.String)|",
    "v1Body": [
      "|java+method:///rx/Observable/onErrorReturn(rx.functions.Func1)|",
      "|java+method:///rx/Observable/map(rx.functions.Func1)|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClient/head(java.lang.String)|",
      "|java+method:///io/georocket/index/elasticsearch/RemoteElasticsearchClient/performRequest(io.vertx.rxjava.core.http.HttpClientRequest,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///rx/Single/onErrorReturn(rx.functions.Func1)|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClient/head(java.lang.String)|",
      "|java+method:///rx/Single/map(rx.functions.Func1)|",
      "|java+method:///io/georocket/index/elasticsearch/RemoteElasticsearchClient/performRequest(io.vertx.rxjava.core.http.HttpClientRequest,java.lang.String)|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/storage/RxStore/rxRemoveTags(java.lang.String,java.lang.String,java.util.List)|",
    "called": "|java+constructor:///io/vertx/rx/java/SingleOnSubscribeAdapter/SingleOnSubscribeAdapter(java.util.function.Consumer)|",
    "v1Body": [
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toSingle()|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|",
      "|java+method:///io/georocket/storage/RxStore/removeTags(java.lang.String,java.lang.String,java.util.List,io.vertx.core.Handler)|"
    ],
    "v2Body": [
      "|java+method:///rx/Single/toCompletable()|",
      "|java+constructor:///io/vertx/rx/java/SingleOnSubscribeAdapter/SingleOnSubscribeAdapter(java.util.function.Consumer)|",
      "|java+method:///rx/Single/create(rx.Single$OnSubscribe)|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/http/StoreEndpoint/onPost(io.vertx.ext.web.RoutingContext)|",
    "called": "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
    "v1Body": [
      "|java+method:///io/vertx/core/http/HttpServerRequest/getParam(java.lang.String)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/on(char)|",
      "|java+method:///io/vertx/core/file/FileSystem/mkdirs(java.lang.String,io.vertx.core.Handler)|",
      "|java+method:///java/util/UUID/randomUUID()|",
      "|java+method:///io/georocket/http/StoreEndpoint/onReceivingFileStarted(java.lang.String,java.lang.String,long)|",
      "|java+method:///org/bson/types/ObjectId/toString()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/vertx/core/http/HttpServerResponse/setStatusCode(int)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/flatMap(rx.functions.Func1)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///io/vertx/core/http/HttpServerRequest/pause()|",
      "|java+method:///com/google/common/base/Splitter/splitToList(java.lang.CharSequence)|",
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+constructor:///org/bson/types/ObjectId/ObjectId()|",
      "|java+method:///org/apache/commons/text/StringEscapeUtils/unescapeJava(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///io/georocket/http/StoreEndpoint/getEndpointPath(io.vertx.ext.web.RoutingContext)|",
      "|java+method:///com/google/common/base/Splitter/trimResults()|",
      "|java+method:///rx/Observable/flatMap(rx.functions.Func1)|",
      "|java+method:///java/util/regex/Pattern/quote(java.lang.String)|",
      "|java+method:///io/vertx/core/Vertx/fileSystem()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///io/vertx/core/http/HttpServerRequest/response()|",
      "|java+method:///rx/Observable/subscribe(rx.functions.Action1,rx.functions.Action1)|",
      "|java+method:///io/vertx/core/http/HttpServerResponse/end(java.lang.String)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/vertx/ext/web/RoutingContext/request()|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/core/http/HttpServerRequest/getParam(java.lang.String)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/georocket/http/Endpoint/getEndpointPath(io.vertx.ext.web.RoutingContext)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/on(char)|",
      "|java+method:///java/util/UUID/randomUUID()|",
      "|java+method:///io/georocket/http/StoreEndpoint/onReceivingFileStarted(java.lang.String,java.lang.String,long)|",
      "|java+method:///org/bson/types/ObjectId/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/vertx/core/http/HttpServerResponse/setStatusCode(int)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/flatMap(rx.functions.Func1)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///io/vertx/core/http/HttpServerRequest/pause()|",
      "|java+method:///com/google/common/base/Splitter/splitToList(java.lang.CharSequence)|",
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+constructor:///org/bson/types/ObjectId/ObjectId()|",
      "|java+method:///org/apache/commons/text/StringEscapeUtils/unescapeJava(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///com/google/common/base/Splitter/trimResults()|",
      "|java+method:///rx/Observable/flatMap(rx.functions.Func1)|",
      "|java+method:///io/vertx/core/file/FileSystem/mkdirs(java.lang.String,io.vertx.core.Handler)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isNotEmpty(java.lang.CharSequence)|",
      "|java+method:///java/util/regex/Pattern/quote(java.lang.String)|",
      "|java+method:///io/vertx/core/Vertx/fileSystem()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///io/vertx/core/http/HttpServerRequest/response()|",
      "|java+method:///rx/Observable/subscribe(rx.functions.Action1,rx.functions.Action1)|",
      "|java+method:///io/vertx/core/http/HttpServerResponse/end(java.lang.String)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/vertx/ext/web/RoutingContext/request()|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/index/elasticsearch/ElasticsearchClientFactory/createElasticsearchClient(java.lang.String)|",
    "called": "|java+method:///io/vertx/rxjava/core/Context/config()|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///io/georocket/index/elasticsearch/RemoteElasticsearchClient/RemoteElasticsearchClient(java.lang.String,int,java.lang.String,io.vertx.rxjava.core.Vertx)|",
      "|java+method:///io/georocket/index/elasticsearch/ElasticsearchClient/isRunning()|",
      "|java+method:///rx/Observable/flatMap(rx.functions.Func1)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///rx/Observable/just(java.lang.Object)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///io/vertx/rxjava/core/Vertx/getOrCreateContext()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///io/vertx/rxjava/core/Context/config()|",
      "|java+method:///io/vertx/core/json/JsonObject/getInteger(java.lang.String,java.lang.Integer)|",
      "|java+method:///io/vertx/core/json/JsonObject/getBoolean(java.lang.String,java.lang.Boolean)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///io/georocket/index/elasticsearch/RemoteElasticsearchClient/RemoteElasticsearchClient(java.lang.String,int,java.lang.String,io.vertx.rxjava.core.Vertx)|",
      "|java+method:///io/georocket/index/elasticsearch/ElasticsearchClient/isRunning()|",
      "|java+method:///rx/Single/flatMap(rx.functions.Func1)|",
      "|java+method:///rx/Single/just(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///io/vertx/rxjava/core/Vertx/getOrCreateContext()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///io/vertx/rxjava/core/Context/config()|",
      "|java+method:///io/vertx/core/json/JsonObject/getInteger(java.lang.String,java.lang.Integer)|",
      "|java+method:///io/vertx/core/json/JsonObject/getBoolean(java.lang.String,java.lang.Boolean)|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/index/elasticsearch/ElasticsearchInstaller/doDownload(java.lang.String,io.vertx.rxjava.core.file.AsyncFile)|",
    "called": "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/handler(io.vertx.core.Handler)|",
    "v1Body": [
      "|java+constructor:///io/vertx/core/http/HttpClientOptions/HttpClientOptions()|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClient/getAbs(java.lang.String)|",
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/exceptionHandler(io.vertx.core.Handler)|",
      "|java+method:///io/vertx/rxjava/core/Vertx/createHttpClient(io.vertx.core.http.HttpClientOptions)|",
      "|java+method:///io/vertx/core/http/HttpClientOptions/setSsl(boolean)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toSingle()|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/handler(io.vertx.core.Handler)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/end()|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|"
    ],
    "v2Body": [
      "|java+constructor:///io/vertx/core/http/HttpClientOptions/HttpClientOptions()|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClient/getAbs(java.lang.String)|",
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/exceptionHandler(io.vertx.core.Handler)|",
      "|java+method:///io/vertx/rxjava/core/Vertx/createHttpClient(io.vertx.core.http.HttpClientOptions)|",
      "|java+method:///io/vertx/core/http/HttpClientOptions/setSsl(boolean)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toCompletable()|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/handler(io.vertx.core.Handler)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/end()|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/index/IndexerVerticle/lambda$insertDocuments$25(java.util.List,long,java.util.List,io.vertx.core.json.JsonObject)|",
    "called": "|java+method:///io/vertx/rxjava/core/eventbus/Message/reply(java.lang.Object)|",
    "v1Body": [
      "|java+method:///io/vertx/core/json/JsonArray/size()|",
      "|java+method:///io/georocket/index/elasticsearch/ElasticsearchClient/bulkResponseItemHasErrors(io.vertx.core.json.JsonObject)|",
      "|java+method:///io/vertx/rxjava/core/eventbus/Message/fail(int,java.lang.String)|",
      "|java+method:///org/jooq/lambda/Seq/toList()|",
      "|java+method:///io/vertx/core/json/JsonObject/getJsonArray(java.lang.String)|",
      "|java+method:///io/vertx/core/json/JsonObject/getJsonObject(java.lang.String)|",
      "|java+method:///io/georocket/index/elasticsearch/ElasticsearchClient/bulkResponseItemGetErrorMessage(io.vertx.core.json.JsonObject)|",
      "|java+method:///org/jooq/lambda/Seq/map(java.util.function.Function)|",
      "|java+method:///io/vertx/rxjava/core/eventbus/Message/reply(java.lang.Object)|",
      "|java+method:///io/georocket/index/elasticsearch/ElasticsearchClient/bulkResponseGetErrorMessage(io.vertx.core.json.JsonObject)|",
      "|java+method:///rx/Observable/empty()|",
      "|java+method:///io/vertx/core/json/JsonArray/getJsonObject(int)|",
      "|java+method:///io/georocket/index/IndexerVerticle/onIndexingFinished(long,java.util.List,java.util.List,java.lang.String)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///org/jooq/lambda/Seq/seq(java.lang.Iterable)|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/core/json/JsonArray/size()|",
      "|java+method:///rx/Completable/complete()|",
      "|java+method:///io/georocket/index/elasticsearch/ElasticsearchClient/bulkResponseItemHasErrors(io.vertx.core.json.JsonObject)|",
      "|java+method:///io/vertx/rxjava/core/eventbus/Message/fail(int,java.lang.String)|",
      "|java+method:///org/jooq/lambda/Seq/toList()|",
      "|java+method:///io/vertx/core/json/JsonObject/getJsonArray(java.lang.String)|",
      "|java+method:///io/vertx/core/json/JsonObject/getJsonObject(java.lang.String)|",
      "|java+method:///io/georocket/index/elasticsearch/ElasticsearchClient/bulkResponseItemGetErrorMessage(io.vertx.core.json.JsonObject)|",
      "|java+method:///org/jooq/lambda/Seq/map(java.util.function.Function)|",
      "|java+method:///io/vertx/rxjava/core/eventbus/Message/reply(java.lang.Object)|",
      "|java+method:///io/georocket/index/elasticsearch/ElasticsearchClient/bulkResponseGetErrorMessage(io.vertx.core.json.JsonObject)|",
      "|java+method:///io/vertx/core/json/JsonArray/getJsonObject(int)|",
      "|java+method:///io/georocket/index/IndexerVerticle/onIndexingFinished(long,java.util.List,java.util.List,java.lang.String)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///org/jooq/lambda/Seq/seq(java.lang.Iterable)|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/index/elasticsearch/ElasticsearchInstaller/download(java.lang.String,java.lang.String,boolean)|",
    "called": "|java+method:///io/vertx/rxjava/core/Vertx/fileSystem()|",
    "v1Body": [
      "|java+method:///io/vertx/rxjava/core/file/FileSystem/rxExists(java.lang.String)|",
      "|java+method:///io/vertx/rxjava/core/Vertx/fileSystem()|",
      "|java+method:///rx/Single/flatMap(rx.functions.Func1)|",
      "|java+method:///rx/Single/toObservable()|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/rxjava/core/file/FileSystem/rxExists(java.lang.String)|",
      "|java+method:///io/vertx/rxjava/core/Vertx/fileSystem()|",
      "|java+method:///rx/Single/flatMap(rx.functions.Func1)|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/ImporterVerticle/start()|",
    "called": "|java+method:///io/vertx/rxjava/core/eventbus/EventBus/localConsumer(java.lang.String)|",
    "v1Body": [
      "|java+method:///io/georocket/ImporterVerticle/config()|",
      "|java+method:///io/vertx/core/logging/Logger/info(java.lang.Object)|",
      "|java+method:///io/georocket/ImporterVerticle/getVertx()|",
      "|java+method:///rx/Observable/flatMapSingle(rx.functions.Func1,boolean,int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///rx/Observable/subscribe(rx.functions.Action1,rx.functions.Action1)|",
      "|java+method:///io/vertx/rxjava/core/eventbus/MessageConsumer/toObservable()|",
      "|java+method:///io/vertx/rxjava/core/eventbus/EventBus/localConsumer(java.lang.String)|",
      "|java+method:///io/georocket/storage/StoreFactory/createStore(io.vertx.core.Vertx)|",
      "|java+constructor:///io/georocket/storage/RxStore/RxStore(io.georocket.storage.Store)|",
      "|java+method:///io/vertx/rxjava/core/Vertx/eventBus()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///rx/Observable/onBackpressureBuffer()|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/vertx/core/json/JsonObject/getBoolean(java.lang.String,java.lang.Boolean)|"
    ],
    "v2Body": [
      "|java+method:///io/georocket/ImporterVerticle/config()|",
      "|java+method:///io/vertx/core/logging/Logger/info(java.lang.Object)|",
      "|java+method:///rx/Observable/flatMapCompletable(rx.functions.Func1,boolean,int)|",
      "|java+method:///io/georocket/ImporterVerticle/getVertx()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///rx/Observable/subscribe(rx.functions.Action1,rx.functions.Action1)|",
      "|java+method:///io/vertx/rxjava/core/eventbus/MessageConsumer/toObservable()|",
      "|java+method:///io/vertx/rxjava/core/eventbus/EventBus/localConsumer(java.lang.String)|",
      "|java+method:///io/georocket/storage/StoreFactory/createStore(io.vertx.core.Vertx)|",
      "|java+constructor:///io/georocket/storage/RxStore/RxStore(io.georocket.storage.Store)|",
      "|java+method:///io/vertx/rxjava/core/Vertx/eventBus()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///rx/Observable/onBackpressureBuffer()|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/vertx/core/json/JsonObject/getBoolean(java.lang.String,java.lang.Boolean)|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/output/Merger/writeChunk(io.georocket.storage.ChunkReadStream,io.georocket.storage.ChunkMeta,io.vertx.core.streams.WriteStream)|",
    "called": "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
    "v1Body": [
      "|java+method:///io/georocket/storage/ChunkMeta/getEnd()|",
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+method:///io/georocket/storage/ChunkReadStream/handler(io.vertx.core.Handler)|",
      "|java+method:///io/georocket/storage/ChunkMeta/getStart()|",
      "|java+method:///io/georocket/storage/ChunkReadStream/exceptionHandler(io.vertx.core.Handler)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|",
      "|java+method:///io/georocket/storage/ChunkReadStream/endHandler(io.vertx.core.Handler)|"
    ],
    "v2Body": [
      "|java+method:///io/georocket/storage/ChunkMeta/getEnd()|",
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+method:///io/georocket/storage/ChunkReadStream/handler(io.vertx.core.Handler)|",
      "|java+method:///io/georocket/storage/ChunkMeta/getStart()|",
      "|java+method:///io/georocket/storage/ChunkReadStream/exceptionHandler(io.vertx.core.Handler)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toCompletable()|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|",
      "|java+method:///io/georocket/storage/ChunkReadStream/endHandler(io.vertx.core.Handler)|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/index/elasticsearch/ElasticsearchRunner/runElasticsearch(java.lang.String,int,java.lang.String)|",
    "called": "|java+method:///io/vertx/rxjava/core/Context/config()|",
    "v1Body": [
      "|java+method:///io/vertx/rxjava/core/Vertx/rxExecuteBlocking(io.vertx.core.Handler)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///rx/Single/toObservable()|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/vertx/rxjava/core/Vertx/getOrCreateContext()|",
      "|java+method:///io/vertx/rxjava/core/Context/config()|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/rxjava/core/Vertx/rxExecuteBlocking(io.vertx.core.Handler)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///rx/Single/toCompletable()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/vertx/rxjava/core/Vertx/getOrCreateContext()|",
      "|java+method:///io/vertx/rxjava/core/Context/config()|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/storage/RxStore/rxAdd(java.lang.String,io.georocket.storage.ChunkMeta,java.lang.String,io.georocket.storage.IndexMeta)|",
    "called": "|java+constructor:///io/vertx/rx/java/SingleOnSubscribeAdapter/SingleOnSubscribeAdapter(java.util.function.Consumer)|",
    "v1Body": [
      "|java+method:///io/georocket/storage/RxStore/add(java.lang.String,io.georocket.storage.ChunkMeta,java.lang.String,io.georocket.storage.IndexMeta,io.vertx.core.Handler)|",
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toSingle()|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|"
    ],
    "v2Body": [
      "|java+method:///rx/Single/toCompletable()|",
      "|java+constructor:///io/vertx/rx/java/SingleOnSubscribeAdapter/SingleOnSubscribeAdapter(java.util.function.Consumer)|",
      "|java+method:///rx/Single/create(rx.Single$OnSubscribe)|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/util/service/Service/publishOnce(io.vertx.servicediscovery.Record,io.vertx.rxjava.servicediscovery.ServiceDiscovery,io.vertx.rxjava.core.Vertx)|",
    "called": "|java+method:///io/vertx/rxjava/core/Vertx/sharedData()|",
    "v1Body": [
      "|java+method:///io/vertx/servicediscovery/Record/getName()|",
      "|java+method:///io/vertx/servicediscovery/Record/getLocation()|",
      "|java+method:///io/vertx/rxjava/core/Vertx/sharedData()|",
      "|java+method:///rx/Single/flatMap(rx.functions.Func1)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///io/vertx/rxjava/core/shareddata/SharedData/rxGetCounter(java.lang.String)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///rx/Single/error(java.lang.Throwable)|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/servicediscovery/Record/getName()|",
      "|java+method:///rx/Single/flatMapCompletable(rx.functions.Func1)|",
      "|java+method:///io/vertx/rxjava/core/Vertx/sharedData()|",
      "|java+method:///rx/Single/flatMap(rx.functions.Func1)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///io/vertx/rxjava/core/shareddata/SharedData/rxGetCounter(java.lang.String)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///io/vertx/servicediscovery/Record/getLocation()|",
      "|java+method:///rx/Completable/error(java.lang.Throwable)|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/ImporterVerticle/onImport(io.vertx.rxjava.core.eventbus.Message)|",
    "called": "|java+method:///io/vertx/rxjava/core/eventbus/Message/body()|",
    "v1Body": [
      "|java+method:///io/vertx/core/json/JsonObject/getMap()|",
      "|java+method:///io/vertx/core/json/JsonArray/stream()|",
      "|java+method:///java/util/stream/Stream/collect(java.util.stream.Collector)|",
      "|java+method:///io/vertx/rxjava/core/Vertx/fileSystem()|",
      "|java+method:///java/util/stream/Collectors/toList()|",
      "|java+method:///rx/Single/flatMap(rx.functions.Func1)|",
      "|java+method:///io/vertx/core/json/JsonObject/getJsonArray(java.lang.String)|",
      "|java+method:///io/vertx/rxjava/core/eventbus/Message/body()|",
      "|java+method:///io/vertx/core/file/OpenOptions/setCreate(boolean)|",
      "|java+method:///io/vertx/core/file/OpenOptions/setWrite(boolean)|",
      "|java+method:///java/util/stream/Stream/flatMap(java.util.function.Function)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///rx/Single/doOnError(rx.functions.Action1)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/georocket/ImporterVerticle/onImportingStarted(java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.vertx.core.json.JsonArray,long)|",
      "|java+constructor:///io/vertx/core/file/OpenOptions/OpenOptions()|",
      "|java+method:///io/vertx/rxjava/core/file/FileSystem/rxOpen(java.lang.String,io.vertx.core.file.OpenOptions)|",
      "|java+method:///rx/Single/map(rx.functions.Func1)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/vertx/core/json/JsonObject/getJsonObject(java.lang.String)|",
      "|java+method:///rx/Single/doOnSuccess(rx.functions.Action1)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/core/json/JsonObject/getMap()|",
      "|java+method:///io/vertx/core/json/JsonArray/stream()|",
      "|java+method:///java/util/stream/Stream/collect(java.util.stream.Collector)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/stream/Collectors/toList()|",
      "|java+method:///rx/Single/flatMap(rx.functions.Func1)|",
      "|java+method:///io/vertx/core/json/JsonObject/getJsonArray(java.lang.String)|",
      "|java+method:///io/vertx/rxjava/core/eventbus/Message/body()|",
      "|java+method:///io/vertx/core/file/OpenOptions/setCreate(boolean)|",
      "|java+method:///io/vertx/core/file/OpenOptions/setWrite(boolean)|",
      "|java+method:///java/util/stream/Stream/flatMap(java.util.function.Function)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///rx/Single/doOnError(rx.functions.Action1)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/georocket/ImporterVerticle/onImportingStarted(java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.vertx.core.json.JsonArray,long)|",
      "|java+constructor:///io/vertx/core/file/OpenOptions/OpenOptions()|",
      "|java+method:///io/vertx/rxjava/core/file/FileSystem/rxOpen(java.lang.String,io.vertx.core.file.OpenOptions)|",
      "|java+method:///rx/Single/toCompletable()|",
      "|java+method:///io/vertx/rxjava/core/Vertx/fileSystem()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/vertx/core/json/JsonObject/getJsonObject(java.lang.String)|",
      "|java+method:///rx/Single/doOnSuccess(rx.functions.Action1)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/storage/RxStore/rxAppendTags(java.lang.String,java.lang.String,java.util.List)|",
    "called": "|java+constructor:///io/vertx/rx/java/SingleOnSubscribeAdapter/SingleOnSubscribeAdapter(java.util.function.Consumer)|",
    "v1Body": [
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+method:///io/georocket/storage/RxStore/appendTags(java.lang.String,java.lang.String,java.util.List,io.vertx.core.Handler)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toSingle()|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|"
    ],
    "v2Body": [
      "|java+method:///rx/Single/toCompletable()|",
      "|java+constructor:///io/vertx/rx/java/SingleOnSubscribeAdapter/SingleOnSubscribeAdapter(java.util.function.Consumer)|",
      "|java+method:///rx/Single/create(rx.Single$OnSubscribe)|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/storage/RxStore/rxDelete(java.lang.String,java.lang.String)|",
    "called": "|java+constructor:///io/vertx/rx/java/SingleOnSubscribeAdapter/SingleOnSubscribeAdapter(java.util.function.Consumer)|",
    "v1Body": [
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toSingle()|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|",
      "|java+method:///io/georocket/storage/RxStore/delete(java.lang.String,java.lang.String,io.vertx.core.Handler)|"
    ],
    "v2Body": [
      "|java+method:///rx/Single/toCompletable()|",
      "|java+constructor:///io/vertx/rx/java/SingleOnSubscribeAdapter/SingleOnSubscribeAdapter(java.util.function.Consumer)|",
      "|java+method:///rx/Single/create(rx.Single$OnSubscribe)|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/GeoRocket/deployHttpServer()|",
    "called": "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+method:///io/vertx/core/http/HttpServer/requestHandler(io.vertx.core.Handler)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toSingle()|",
      "|java+method:///io/georocket/GeoRocket/createHttpServerOptions()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/vertx/core/http/HttpServer/listen(int,java.lang.String,io.vertx.core.Handler)|",
      "|java+method:///io/georocket/GeoRocket/createRouter()|",
      "|java+method:///io/vertx/core/json/JsonObject/getInteger(java.lang.String,java.lang.Integer)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String,java.lang.String)|",
      "|java+method:///io/vertx/core/Vertx/createHttpServer(io.vertx.core.http.HttpServerOptions)|",
      "|java+method:///io/georocket/GeoRocket/config()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+method:///io/vertx/core/http/HttpServer/requestHandler(io.vertx.core.Handler)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toSingle()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/vertx/core/http/HttpServer/listen(int,java.lang.String,io.vertx.core.Handler)|",
      "|java+method:///io/georocket/GeoRocket/createRouter()|",
      "|java+method:///io/vertx/core/json/JsonObject/getInteger(java.lang.String,java.lang.Integer)|",
      "|java+method:///io/georocket/GeoRocket/createHttpServerOptions()|",
      "|java+method:///rx/Single/error(java.lang.Throwable)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String,java.lang.String)|",
      "|java+method:///io/vertx/core/Vertx/createHttpServer(io.vertx.core.http.HttpServerOptions)|",
      "|java+method:///io/georocket/GeoRocket/config()|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/storage/RxStore/rxSetProperties(java.lang.String,java.lang.String,java.util.Map)|",
    "called": "|java+constructor:///io/vertx/rx/java/SingleOnSubscribeAdapter/SingleOnSubscribeAdapter(java.util.function.Consumer)|",
    "v1Body": [
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toSingle()|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|",
      "|java+method:///io/georocket/storage/RxStore/setProperties(java.lang.String,java.lang.String,java.util.Map,io.vertx.core.Handler)|"
    ],
    "v2Body": [
      "|java+method:///rx/Single/toCompletable()|",
      "|java+constructor:///io/vertx/rx/java/SingleOnSubscribeAdapter/SingleOnSubscribeAdapter(java.util.function.Consumer)|",
      "|java+method:///rx/Single/create(rx.Single$OnSubscribe)|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/index/elasticsearch/RemoteElasticsearchClient/performRequest(io.vertx.rxjava.core.http.HttpClientRequest,java.lang.String)|",
    "called": "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/handler(io.vertx.core.Handler)|",
    "v1Body": [
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/end(io.vertx.rxjava.core.buffer.Buffer)|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/putHeader(java.lang.String,java.lang.String)|",
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/exceptionHandler(io.vertx.core.Handler)|",
      "|java+method:///io/vertx/rxjava/core/buffer/Buffer/buffer(java.lang.String)|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/handler(io.vertx.core.Handler)|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/setChunked(boolean)|",
      "|java+method:///io/vertx/rxjava/core/buffer/Buffer/length()|",
      "|java+method:///java/lang/String/valueOf(int)|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/end()|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/end(io.vertx.rxjava.core.buffer.Buffer)|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/putHeader(java.lang.String,java.lang.String)|",
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/exceptionHandler(io.vertx.core.Handler)|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/handler(io.vertx.core.Handler)|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/setChunked(boolean)|",
      "|java+method:///io/vertx/rxjava/core/buffer/Buffer/length()|",
      "|java+method:///java/lang/String/valueOf(int)|",
      "|java+method:///io/vertx/rxjava/core/buffer/Buffer/buffer(java.lang.String)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toSingle()|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/end()|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/index/IndexerVerticle/registerAdd()|",
    "called": "|java+method:///io/vertx/rxjava/core/eventbus/EventBus/consumer(java.lang.String)|",
    "v1Body": [
      "|java+method:///rx/Observable/buffer(long,java.util.concurrent.TimeUnit,int)|",
      "|java+method:///io/vertx/rxjava/core/Vertx/eventBus()|",
      "|java+method:///rx/Observable/onBackpressureBuffer()|",
      "|java+method:///rx/Observable/subscribe(rx.functions.Action1,rx.functions.Action1)|",
      "|java+method:///io/vertx/rxjava/core/eventbus/MessageConsumer/toObservable()|",
      "|java+method:///rx/Observable/flatMap(rx.functions.Func1,int)|",
      "|java+method:///io/vertx/rxjava/core/eventbus/EventBus/consumer(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///rx/Observable/buffer(long,java.util.concurrent.TimeUnit,int)|",
      "|java+method:///rx/Observable/onBackpressureBuffer()|",
      "|java+method:///rx/Observable/flatMapCompletable(rx.functions.Func1,boolean,int)|",
      "|java+method:///io/vertx/rxjava/core/eventbus/MessageConsumer/toObservable()|",
      "|java+method:///rx/Observable/doOnNext(rx.functions.Action1)|",
      "|java+method:///rx/Observable/toCompletable()|",
      "|java+method:///io/vertx/rxjava/core/Vertx/eventBus()|",
      "|java+method:///io/vertx/rxjava/core/eventbus/EventBus/consumer(java.lang.String)|",
      "|java+method:///rx/Completable/subscribe(rx.functions.Action0,rx.functions.Action1)|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/storage/s3/S3Store/getS3Client()|",
    "called": "|java+method:///com/amazonaws/services/s3/internal/ServiceUtils/isS3USStandardEndpoint(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///com/amazonaws/services/s3/AmazonS3Client/AmazonS3Client(com.amazonaws.auth.AWSCredentials)|",
      "|java+method:///com/amazonaws/services/s3/S3ClientOptions$Builder/build()|",
      "|java+constructor:///com/amazonaws/services/s3/AmazonS3Client/AmazonS3Client(com.amazonaws.auth.AWSCredentials,com.amazonaws.ClientConfiguration)|",
      "|java+method:///com/amazonaws/ClientConfigurationFactory/getConfig()|",
      "|java+method:///com/amazonaws/ClientConfiguration/setSignerOverride(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///com/amazonaws/services/s3/S3ClientOptions$Builder/setPathStyleAccess(boolean)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/amazonaws/services/s3/S3ClientOptions/builder()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/amazonaws/services/s3/AmazonS3Client/setS3ClientOptions(com.amazonaws.services.s3.S3ClientOptions)|",
      "|java+method:///com/amazonaws/services/s3/AmazonS3Client/setEndpoint(java.lang.String)|",
      "|java+constructor:///com/amazonaws/ClientConfigurationFactory/ClientConfigurationFactory()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///com/amazonaws/auth/BasicAWSCredentials/BasicAWSCredentials(java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/amazonaws/services/s3/AmazonS3ClientBuilder/withClientConfiguration(com.amazonaws.ClientConfiguration)|",
      "|java+constructor:///com/amazonaws/auth/AWSStaticCredentialsProvider/AWSStaticCredentialsProvider(com.amazonaws.auth.AWSCredentials)|",
      "|java+method:///com/amazonaws/ClientConfigurationFactory/getConfig()|",
      "|java+method:///com/amazonaws/ClientConfiguration/setSignerOverride(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+constructor:///com/amazonaws/client/builder/AwsClientBuilder$EndpointConfiguration/AwsClientBuilder$EndpointConfiguration(java.lang.String,java.lang.String)|",
      "|java+constructor:///com/amazonaws/ClientConfigurationFactory/ClientConfigurationFactory()|",
      "|java+method:///com/amazonaws/services/s3/AmazonS3ClientBuilder/withEndpointConfiguration(com.amazonaws.client.builder.AwsClientBuilder$EndpointConfiguration)|",
      "|java+method:///com/amazonaws/services/s3/internal/ServiceUtils/isS3USStandardEndpoint(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///com/amazonaws/services/s3/AmazonS3ClientBuilder/withCredentials(com.amazonaws.auth.AWSCredentialsProvider)|",
      "|java+method:///com/amazonaws/services/s3/AmazonS3ClientBuilder/build()|",
      "|java+method:///com/amazonaws/services/s3/AmazonS3ClientBuilder/withPathStyleAccessEnabled(java.lang.Boolean)|",
      "|java+method:///com/amazonaws/util/AwsHostNameUtils/parseRegion(java.lang.String,java.lang.String)|",
      "|java+method:///com/amazonaws/services/s3/AmazonS3ClientBuilder/standard()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///com/amazonaws/auth/BasicAWSCredentials/BasicAWSCredentials(java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "com.amazonaws:aws-java-sdk-s3:1.11.256",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/index/elasticsearch/ElasticsearchInstaller/extractZip(java.io.File,java.io.File,boolean)|",
    "called": "|java+method:///org/apache/commons/io/FilenameUtils/separatorsToUnix(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/io/OutputStream/close()|",
      "|java+method:///io/vertx/core/logging/Logger/info(java.lang.Object)|",
      "|java+method:///java/util/zip/ZipEntry/getName()|",
      "|java+method:///java/util/zip/ZipEntry/isDirectory()|",
      "|java+method:///java/util/zip/ZipFile/getInputStream(java.util.zip.ZipEntry)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///java/util/Enumeration/hasMoreElements()|",
      "|java+method:///java/util/zip/ZipFile/size()|",
      "|java+method:///java/util/Enumeration/nextElement()|",
      "|java+method:///org/apache/commons/io/IOUtils/copy(java.io.InputStream,java.io.OutputStream)|",
      "|java+method:///java/lang/Math/round(double)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///org/apache/commons/io/IOUtils/closeQuietly(java.io.InputStream)|",
      "|java+constructor:///java/util/zip/ZipFile/ZipFile(java.io.File)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/zip/ZipFile/entries()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/zip/ZipFile/close()|",
      "|java+method:///org/apache/commons/io/FilenameUtils/separatorsToUnix(java.lang.String)|",
      "|java+method:///java/io/File/mkdirs()|",
      "|java+method:///java/lang/String/indexOf(int)|",
      "|java+constructor:///java/io/FileOutputStream/FileOutputStream(java.io.File)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|"
    ],
    "v2Body": [
      "|java+method:///java/io/OutputStream/close()|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///io/vertx/core/logging/Logger/info(java.lang.Object)|",
      "|java+method:///java/util/zip/ZipEntry/getName()|",
      "|java+method:///java/util/zip/ZipEntry/isDirectory()|",
      "|java+method:///java/util/zip/ZipFile/getInputStream(java.util.zip.ZipEntry)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///java/io/InputStream/close()|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///java/util/Enumeration/hasMoreElements()|",
      "|java+method:///java/util/zip/ZipFile/size()|",
      "|java+method:///java/util/Enumeration/nextElement()|",
      "|java+method:///org/apache/commons/io/IOUtils/copy(java.io.InputStream,java.io.OutputStream)|",
      "|java+method:///java/lang/Math/round(double)|",
      "|java+constructor:///java/util/zip/ZipFile/ZipFile(java.io.File)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/zip/ZipFile/entries()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/zip/ZipFile/close()|",
      "|java+method:///org/apache/commons/io/FilenameUtils/separatorsToUnix(java.lang.String)|",
      "|java+method:///java/io/File/mkdirs()|",
      "|java+method:///java/lang/String/indexOf(int)|",
      "|java+constructor:///java/io/FileOutputStream/FileOutputStream(java.io.File)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|"
    ],
    "affectedLib": "commons-io:commons-io:2.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/GeoRocket/main(java.lang.String%5B%5D)|",
    "called": "|java+method:///org/apache/commons/io/IOUtils/toString(java.net.URL,java.nio.charset.Charset)|",
    "v1Body": [
      "|java+method:///io/vertx/core/json/JsonObject/encodePrettily()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/vertx/core/DeploymentOptions/setConfig(io.vertx.core.json.JsonObject)|",
      "|java+method:///io/georocket/GeoRocket/loadGeoRocketConfiguration()|",
      "|java+method:///java/lang/System/exit(int)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///rx/plugins/RxJavaHooks/setOnIOScheduler(rx.functions.Func1)|",
      "|java+method:///io/vertx/core/logging/Logger/info(java.lang.Object)|",
      "|java+constructor:///io/vertx/core/DeploymentOptions/DeploymentOptions()|",
      "|java+method:///rx/plugins/RxJavaHooks/setOnNewThreadScheduler(rx.functions.Func1)|",
      "|java+method:///io/vertx/core/logging/Logger/fatal(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///io/vertx/core/Vertx/deployVerticle(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)|",
      "|java+method:///io/vertx/core/Vertx/vertx()|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///rx/plugins/RxJavaHooks/setOnComputationScheduler(rx.functions.Func1)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/vertx/core/json/JsonObject/getBoolean(java.lang.String,java.lang.Boolean)|",
      "|java+method:///io/vertx/core/DeploymentOptions/getConfig()|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/core/json/JsonObject/encodePrettily()|",
      "|java+method:///io/vertx/core/DeploymentOptions/setConfig(io.vertx.core.json.JsonObject)|",
      "|java+method:///java/lang/System/exit(int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///rx/plugins/RxJavaHooks/setOnIOScheduler(rx.functions.Func1)|",
      "|java+method:///io/vertx/core/logging/Logger/info(java.lang.Object)|",
      "|java+constructor:///io/vertx/core/DeploymentOptions/DeploymentOptions()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///io/georocket/GeoRocket/loadGeoRocketConfiguration()|",
      "|java+method:///java/lang/Class/getResource(java.lang.String)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///org/apache/commons/io/IOUtils/toString(java.net.URL,java.nio.charset.Charset)|",
      "|java+method:///rx/plugins/RxJavaHooks/setOnNewThreadScheduler(rx.functions.Func1)|",
      "|java+method:///io/vertx/core/logging/Logger/fatal(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///io/vertx/core/Vertx/deployVerticle(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)|",
      "|java+method:///io/vertx/core/Vertx/vertx()|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///rx/plugins/RxJavaHooks/setOnComputationScheduler(rx.functions.Func1)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/vertx/core/json/JsonObject/getBoolean(java.lang.String,java.lang.Boolean)|",
      "|java+method:///io/vertx/core/DeploymentOptions/getConfig()|"
    ],
    "affectedLib": "commons-io:commons-io:2.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/util/MimeTypeUtils/detect(java.io.File)|",
    "called": "|java+constructor:///org/apache/commons/io/input/BOMInputStream/BOMInputStream(java.io.InputStream)|",
    "v1Body": [
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///java/io/BufferedInputStream/close()|",
      "|java+constructor:///java/io/BufferedInputStream/BufferedInputStream(java.io.InputStream)|",
      "|java+method:///io/georocket/util/MimeTypeUtils/determineFileFormat(java.io.BufferedInputStream)|",
      "|java+constructor:///java/io/FileInputStream/FileInputStream(java.io.File)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/commons/io/input/BOMInputStream/BOMInputStream(java.io.InputStream)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///java/io/BufferedInputStream/close()|",
      "|java+constructor:///java/io/BufferedInputStream/BufferedInputStream(java.io.InputStream)|",
      "|java+method:///io/georocket/util/MimeTypeUtils/determineFileFormat(java.io.BufferedInputStream)|",
      "|java+constructor:///java/io/FileInputStream/FileInputStream(java.io.File)|"
    ],
    "affectedLib": "commons-io:commons-io:2.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.1.0",
    "coordinatesV2": "io.georocket:georocket-server:1.2.0",
    "caller": "|java+method:///io/georocket/http/StoreEndpoint/onPost(io.vertx.ext.web.RoutingContext)|",
    "called": "|java+method:///org/apache/commons/text/StringEscapeUtils/unescapeJava(java.lang.String)|",
    "v1Body": [
      "|java+method:///io/vertx/core/http/HttpServerRequest/getParam(java.lang.String)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/on(char)|",
      "|java+method:///io/vertx/core/file/FileSystem/mkdirs(java.lang.String,io.vertx.core.Handler)|",
      "|java+method:///java/util/UUID/randomUUID()|",
      "|java+method:///io/georocket/http/StoreEndpoint/onReceivingFileStarted(java.lang.String,java.lang.String,long)|",
      "|java+method:///org/bson/types/ObjectId/toString()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/vertx/core/http/HttpServerResponse/setStatusCode(int)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/flatMap(rx.functions.Func1)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///io/vertx/core/http/HttpServerRequest/pause()|",
      "|java+method:///com/google/common/base/Splitter/splitToList(java.lang.CharSequence)|",
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+constructor:///org/bson/types/ObjectId/ObjectId()|",
      "|java+method:///org/apache/commons/text/StringEscapeUtils/unescapeJava(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///io/georocket/http/StoreEndpoint/getEndpointPath(io.vertx.ext.web.RoutingContext)|",
      "|java+method:///com/google/common/base/Splitter/trimResults()|",
      "|java+method:///rx/Observable/flatMap(rx.functions.Func1)|",
      "|java+method:///java/util/regex/Pattern/quote(java.lang.String)|",
      "|java+method:///io/vertx/core/Vertx/fileSystem()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///io/vertx/core/http/HttpServerRequest/response()|",
      "|java+method:///rx/Observable/subscribe(rx.functions.Action1,rx.functions.Action1)|",
      "|java+method:///io/vertx/core/http/HttpServerResponse/end(java.lang.String)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/vertx/ext/web/RoutingContext/request()|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/core/http/HttpServerRequest/getParam(java.lang.String)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/georocket/http/Endpoint/getEndpointPath(io.vertx.ext.web.RoutingContext)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/on(char)|",
      "|java+method:///java/util/UUID/randomUUID()|",
      "|java+method:///io/georocket/http/StoreEndpoint/onReceivingFileStarted(java.lang.String,java.lang.String,long)|",
      "|java+method:///org/bson/types/ObjectId/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/vertx/core/http/HttpServerResponse/setStatusCode(int)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/flatMap(rx.functions.Func1)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///io/vertx/core/http/HttpServerRequest/pause()|",
      "|java+method:///com/google/common/base/Splitter/splitToList(java.lang.CharSequence)|",
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+constructor:///org/bson/types/ObjectId/ObjectId()|",
      "|java+method:///org/apache/commons/text/StringEscapeUtils/unescapeJava(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///com/google/common/base/Splitter/trimResults()|",
      "|java+method:///rx/Observable/flatMap(rx.functions.Func1)|",
      "|java+method:///io/vertx/core/file/FileSystem/mkdirs(java.lang.String,io.vertx.core.Handler)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isNotEmpty(java.lang.CharSequence)|",
      "|java+method:///java/util/regex/Pattern/quote(java.lang.String)|",
      "|java+method:///io/vertx/core/Vertx/fileSystem()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///io/vertx/core/http/HttpServerRequest/response()|",
      "|java+method:///rx/Observable/subscribe(rx.functions.Action1,rx.functions.Action1)|",
      "|java+method:///io/vertx/core/http/HttpServerResponse/end(java.lang.String)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/vertx/ext/web/RoutingContext/request()|"
    ],
    "affectedLib": "org.apache.commons:commons-text:1.2",
    "change": "UPDATED"
  }
]