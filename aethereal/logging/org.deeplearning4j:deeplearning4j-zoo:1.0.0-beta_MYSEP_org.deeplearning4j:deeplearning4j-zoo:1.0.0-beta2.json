[
  {
    "coordinatesV1": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta",
    "coordinatesV2": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta2",
    "caller": "|java+method:///org/deeplearning4j/zoo/ZooModel/initPretrained(org.deeplearning4j.zoo.PretrainedType)|",
    "called": "|java+method:///org/deeplearning4j/common/resources/DL4JResources/getDirectory(org.deeplearning4j.common.resources.ResourceType,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///java/io/File/getName()|",
      "|java+method:///org/deeplearning4j/util/ModelSerializer/restoreMultiLayerNetwork(java.io.File)|",
      "|java+constructor:///java/net/URL/URL(java.lang.String)|",
      "|java+method:///java/io/File/exists()|",
      "|java+constructor:///java/io/File/File(java.lang.String,java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/io/File/mkdirs()|",
      "|java+method:///org/deeplearning4j/zoo/ZooModel/modelType()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/deeplearning4j/util/ModelSerializer/restoreComputationGraph(java.io.File)|",
      "|java+method:///java/io/File/delete()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/deeplearning4j/zoo/ZooModel/pretrainedChecksum(org.deeplearning4j.zoo.PretrainedType)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/commons/io/FileUtils/copyURLToFile(java.net.URL,java.io.File)|",
      "|java+constructor:///java/util/zip/Adler32/Adler32()|",
      "|java+method:///org/deeplearning4j/zoo/ZooModel/pretrainedUrl(org.deeplearning4j.zoo.PretrainedType)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+constructor:///java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)|",
      "|java+method:///java/util/zip/Checksum/getValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/toString()|",
      "|java+method:///org/apache/commons/io/FileUtils/checksum(java.io.File,java.util.zip.Checksum)|"
    ],
    "v2Body": [
      "|java+method:///org/deeplearning4j/common/resources/DL4JResources/getDirectory(org.deeplearning4j.common.resources.ResourceType,java.lang.String)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///java/io/File/getName()|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///org/deeplearning4j/util/ModelSerializer/restoreMultiLayerNetwork(java.io.File)|",
      "|java+method:///org/deeplearning4j/zoo/ZooModel/modelName()|",
      "|java+constructor:///java/net/URL/URL(java.lang.String)|",
      "|java+method:///java/io/File/exists()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/deeplearning4j/zoo/ZooModel/modelType()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/deeplearning4j/util/ModelSerializer/restoreComputationGraph(java.io.File)|",
      "|java+method:///java/io/File/delete()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/deeplearning4j/zoo/ZooModel/pretrainedChecksum(org.deeplearning4j.zoo.PretrainedType)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/commons/io/FileUtils/copyURLToFile(java.net.URL,java.io.File)|",
      "|java+constructor:///java/util/zip/Adler32/Adler32()|",
      "|java+method:///org/deeplearning4j/zoo/ZooModel/pretrainedUrl(org.deeplearning4j.zoo.PretrainedType)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+constructor:///java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)|",
      "|java+method:///java/util/zip/Checksum/getValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/toString()|",
      "|java+method:///org/apache/commons/io/FileUtils/checksum(java.io.File,java.util.zip.Checksum)|"
    ],
    "affectedLib": "org.deeplearning4j:deeplearning4j-common:1.0.0-beta2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta",
    "coordinatesV2": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta2",
    "caller": "|java+method:///org/deeplearning4j/zoo/model/YOLO2/conf()|",
    "called": "|java+method:///org/nd4j/linalg/factory/Nd4j/create(double%5B%5D%5B%5D)|",
    "v1Body": [
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/trainingWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutional(int,int,int)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setInputTypes(org.deeplearning4j.nn.conf.inputs.InputType%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/stride(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/weightInit(org.deeplearning4j.nn.weights.WeightInit)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SpaceToDepthLayer$Builder/build()|",
      "|java+method:///org/nd4j/linalg/factory/Nd4j/create(double%5B%5D%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/inferenceWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/cudnnAlgoMode(org.deeplearning4j.nn.conf.layers.ConvolutionLayer$AlgoMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/gradientNormalizationThreshold(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/objdetect/Yolo2OutputLayer$Builder/boundingBoxPriors(org.nd4j.linalg.api.ndarray.INDArray)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/graphBuilder()|",
      "|java+method:///org/deeplearning4j/zoo/model/helper/DarknetHelper/addLayers(org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder,int,java.lang.String,int,int,int,int,int)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/convolutionMode(org.deeplearning4j.nn.conf.ConvolutionMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/optimizationAlgo(org.deeplearning4j.nn.api.OptimizationAlgorithm)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/objdetect/Yolo2OutputLayer$Builder/build()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/graph/MergeVertex/MergeVertex()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cudnnAlgoMode(org.deeplearning4j.nn.conf.layers.ConvolutionLayer$AlgoMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/backprop(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/seed(long)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/l2(double)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/objdetect/Yolo2OutputLayer$Builder/Yolo2OutputLayer$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setOutputs(java.lang.String%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/NeuralNetConfiguration$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/pretrain(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addInputs(java.lang.String%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/SpaceToDepthLayer$Builder/SpaceToDepthLayer$Builder(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/zoo/model/helper/DarknetHelper/addLayers(org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder,int,int,int,int,int)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addLayer(java.lang.String,org.deeplearning4j.nn.conf.layers.Layer,java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addVertex(java.lang.String,org.deeplearning4j.nn.conf.graph.GraphVertex,java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nIn(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cacheMode(org.deeplearning4j.nn.conf.CacheMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/gradientNormalization(org.deeplearning4j.nn.conf.GradientNormalization)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/updater(org.nd4j.linalg.learning.config.IUpdater)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder(int%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/trainingWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setInputTypes(org.deeplearning4j.nn.conf.inputs.InputType%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/stride(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/weightInit(org.deeplearning4j.nn.weights.WeightInit)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SpaceToDepthLayer$Builder/build()|",
      "|java+method:///org/nd4j/linalg/factory/Nd4j/create(double%5B%5D%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/inferenceWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/cudnnAlgoMode(org.deeplearning4j.nn.conf.layers.ConvolutionLayer$AlgoMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/gradientNormalizationThreshold(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/objdetect/Yolo2OutputLayer$Builder/boundingBoxPriors(org.nd4j.linalg.api.ndarray.INDArray)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/graphBuilder()|",
      "|java+method:///org/deeplearning4j/zoo/model/helper/DarknetHelper/addLayers(org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder,int,java.lang.String,int,int,int,int,int)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/convolutionMode(org.deeplearning4j.nn.conf.ConvolutionMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/optimizationAlgo(org.deeplearning4j.nn.api.OptimizationAlgorithm)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/objdetect/Yolo2OutputLayer$Builder/build()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/graph/MergeVertex/MergeVertex()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cudnnAlgoMode(org.deeplearning4j.nn.conf.layers.ConvolutionLayer$AlgoMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/backprop(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/seed(long)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/l2(double)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/objdetect/Yolo2OutputLayer$Builder/Yolo2OutputLayer$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setOutputs(java.lang.String%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/NeuralNetConfiguration$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/pretrain(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addInputs(java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutional(long,long,long)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/SpaceToDepthLayer$Builder/SpaceToDepthLayer$Builder(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/zoo/model/helper/DarknetHelper/addLayers(org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder,int,int,int,int,int)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addLayer(java.lang.String,org.deeplearning4j.nn.conf.layers.Layer,java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addVertex(java.lang.String,org.deeplearning4j.nn.conf.graph.GraphVertex,java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nIn(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cacheMode(org.deeplearning4j.nn.conf.CacheMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/gradientNormalization(org.deeplearning4j.nn.conf.GradientNormalization)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/updater(org.nd4j.linalg.learning.config.IUpdater)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder(int%5B%5D)|"
    ],
    "affectedLib": "org.nd4j:nd4j-api:1.0.0-beta2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta",
    "coordinatesV2": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta2",
    "caller": "|java+method:///org/deeplearning4j/zoo/util/BaseLabels/decodePredictions(org.nd4j.linalg.api.ndarray.INDArray,int)|",
    "called": "|java+method:///org/nd4j/linalg/factory/Nd4j/linspace(long,long,long)|",
    "v1Body": [
      "|java+method:///org/nd4j/linalg/api/ndarray/INDArray/ravel()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/nd4j/linalg/factory/Nd4j/sortColumns(org.nd4j.linalg.api.ndarray.INDArray,int,boolean)|",
      "|java+constructor:///org/deeplearning4j/zoo/util/ClassPrediction/ClassPrediction(int,java.lang.String,double)|",
      "|java+method:///org/nd4j/linalg/factory/Nd4j/linspace(int,int,int)|",
      "|java+method:///org/nd4j/linalg/api/ndarray/INDArray/getRow(int)|",
      "|java+method:///org/nd4j/linalg/api/ndarray/INDArray/isColumnVectorOrScalar()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/nd4j/linalg/api/ndarray/INDArray/getInt(int%5B%5D)|",
      "|java+method:///org/nd4j/linalg/factory/Nd4j/vstack(org.nd4j.linalg.api.ndarray.INDArray%5B%5D)|",
      "|java+method:///org/nd4j/linalg/api/ndarray/INDArray/getDouble(int,int)|",
      "|java+method:///org/deeplearning4j/zoo/util/BaseLabels/getLabel(int)|",
      "|java+method:///org/nd4j/linalg/api/ndarray/INDArray/size(int)|"
    ],
    "v2Body": [
      "|java+method:///org/nd4j/linalg/api/ndarray/INDArray/ravel()|",
      "|java+method:///org/nd4j/linalg/api/ndarray/INDArray/getDouble(long,long)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/nd4j/linalg/factory/Nd4j/sortColumns(org.nd4j.linalg.api.ndarray.INDArray,int,boolean)|",
      "|java+method:///org/nd4j/linalg/factory/Nd4j/linspace(long,long,long)|",
      "|java+constructor:///org/deeplearning4j/zoo/util/ClassPrediction/ClassPrediction(int,java.lang.String,double)|",
      "|java+method:///org/nd4j/linalg/api/ndarray/INDArray/getRow(long)|",
      "|java+method:///org/nd4j/base/Preconditions/checkState(boolean,java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/nd4j/linalg/api/ndarray/INDArray/isColumnVectorOrScalar()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/nd4j/linalg/factory/Nd4j/vstack(org.nd4j.linalg.api.ndarray.INDArray%5B%5D)|",
      "|java+method:///org/deeplearning4j/zoo/util/BaseLabels/getLabel(int)|",
      "|java+method:///org/nd4j/linalg/api/ndarray/INDArray/size(int)|",
      "|java+method:///java/util/ArrayList/size()|",
      "|java+method:///org/nd4j/linalg/api/ndarray/INDArray/shape()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/nd4j/linalg/api/ndarray/INDArray/getInt(int%5B%5D)|"
    ],
    "affectedLib": "org.nd4j:nd4j-api:1.0.0-beta2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta",
    "coordinatesV2": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta2",
    "caller": "|java+method:///org/deeplearning4j/zoo/model/TinyYOLO/conf()|",
    "called": "|java+method:///org/nd4j/linalg/factory/Nd4j/create(double%5B%5D%5B%5D)|",
    "v1Body": [
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/inferenceWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/trainingWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutional(int,int,int)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setInputTypes(org.deeplearning4j.nn.conf.inputs.InputType%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/stride(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/weightInit(org.deeplearning4j.nn.weights.WeightInit)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/nd4j/linalg/factory/Nd4j/create(double%5B%5D%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addLayer(java.lang.String,org.deeplearning4j.nn.conf.layers.Layer,java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/build()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/gradientNormalizationThreshold(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/objdetect/Yolo2OutputLayer$Builder/boundingBoxPriors(org.nd4j.linalg.api.ndarray.INDArray)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/graphBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/convolutionMode(org.deeplearning4j.nn.conf.ConvolutionMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/optimizationAlgo(org.deeplearning4j.nn.api.OptimizationAlgorithm)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/objdetect/Yolo2OutputLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cudnnAlgoMode(org.deeplearning4j.nn.conf.layers.ConvolutionLayer$AlgoMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/backprop(boolean)|",
      "|java+method:///org/deeplearning4j/zoo/model/helper/DarknetHelper/addLayers(org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder,int,int,int,int,int,int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/seed(long)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/l2(double)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/objdetect/Yolo2OutputLayer$Builder/Yolo2OutputLayer$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setOutputs(java.lang.String%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/NeuralNetConfiguration$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/pretrain(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addInputs(java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nIn(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cacheMode(org.deeplearning4j.nn.conf.CacheMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/gradientNormalization(org.deeplearning4j.nn.conf.GradientNormalization)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/updater(org.nd4j.linalg.learning.config.IUpdater)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder(int%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/inferenceWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/trainingWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setInputTypes(org.deeplearning4j.nn.conf.inputs.InputType%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/stride(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/weightInit(org.deeplearning4j.nn.weights.WeightInit)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/nd4j/linalg/factory/Nd4j/create(double%5B%5D%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addLayer(java.lang.String,org.deeplearning4j.nn.conf.layers.Layer,java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/build()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/gradientNormalizationThreshold(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/objdetect/Yolo2OutputLayer$Builder/boundingBoxPriors(org.nd4j.linalg.api.ndarray.INDArray)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/graphBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/convolutionMode(org.deeplearning4j.nn.conf.ConvolutionMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/optimizationAlgo(org.deeplearning4j.nn.api.OptimizationAlgorithm)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/objdetect/Yolo2OutputLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cudnnAlgoMode(org.deeplearning4j.nn.conf.layers.ConvolutionLayer$AlgoMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/backprop(boolean)|",
      "|java+method:///org/deeplearning4j/zoo/model/helper/DarknetHelper/addLayers(org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder,int,int,int,int,int,int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/seed(long)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/l2(double)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/objdetect/Yolo2OutputLayer$Builder/Yolo2OutputLayer$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setOutputs(java.lang.String%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/NeuralNetConfiguration$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/pretrain(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addInputs(java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutional(long,long,long)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nIn(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cacheMode(org.deeplearning4j.nn.conf.CacheMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/gradientNormalization(org.deeplearning4j.nn.conf.GradientNormalization)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/updater(org.nd4j.linalg.learning.config.IUpdater)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder(int%5B%5D)|"
    ],
    "affectedLib": "org.nd4j:nd4j-api:1.0.0-beta2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta",
    "coordinatesV2": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta2",
    "caller": "|java+method:///org/deeplearning4j/zoo/model/AlexNet/conf()|",
    "called": "|java+constructor:///org/nd4j/linalg/learning/config/Nesterovs/Nesterovs(double,double)|",
    "v1Body": [
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/biasInit(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/padding(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/build()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/NeuralNetConfiguration$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/weightInit(org.deeplearning4j.nn.weights.WeightInit)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/kernelSize(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/name(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/inferenceWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/cudnnAlgoMode(org.deeplearning4j.nn.conf.layers.ConvolutionLayer$AlgoMode)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/distribution/GaussianDistribution/GaussianDistribution(double,double)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/distribution/NormalDistribution/NormalDistribution(double,double)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/pretrain(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/trainingWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/name(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/nIn(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutional(int,int,int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/biasUpdater(org.nd4j.linalg.learning.config.IUpdater)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/LocalResponseNormalization$Builder/LocalResponseNormalization$Builder()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/DenseLayer$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/biasInit(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/dist(org.deeplearning4j.nn.conf.distribution.Distribution)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/convolutionMode(org.deeplearning4j.nn.conf.ConvolutionMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/optimizationAlgo(org.deeplearning4j.nn.api.OptimizationAlgorithm)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/kernelSize(int%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/SubsamplingLayer$Builder(org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType,int%5B%5D,int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/biasInit(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/setInputType(org.deeplearning4j.nn.conf.inputs.InputType)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/OutputLayer$Builder(org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/dist(org.deeplearning4j.nn.conf.distribution.Distribution)|",
      "|java+constructor:///org/nd4j/linalg/learning/config/Nesterovs/Nesterovs(double,double)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/LocalResponseNormalization$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/stride(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/dropOut(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/seed(long)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/l2(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/layer(int,org.deeplearning4j.nn.conf.layers.Layer)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/SubsamplingLayer$Builder(org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder(int%5B%5D,int%5B%5D,int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/weightInit(org.deeplearning4j.nn.conf.distribution.Distribution)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/name(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/name(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/list()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/weightInit(org.deeplearning4j.nn.weights.WeightInit)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/convolutionMode(org.deeplearning4j.nn.conf.ConvolutionMode)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder(int%5B%5D,int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nIn(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/convolutionMode(org.deeplearning4j.nn.conf.ConvolutionMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/backprop(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cacheMode(org.deeplearning4j.nn.conf.CacheMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/gradientNormalization(org.deeplearning4j.nn.conf.GradientNormalization)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/updater(org.nd4j.linalg.learning.config.IUpdater)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/stride(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/miniBatch(boolean)|"
    ],
    "v2Body": [
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/biasInit(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/padding(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/build()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/NeuralNetConfiguration$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/kernelSize(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/name(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/inferenceWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/cudnnAlgoMode(org.deeplearning4j.nn.conf.layers.ConvolutionLayer$AlgoMode)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/distribution/GaussianDistribution/GaussianDistribution(double,double)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/distribution/NormalDistribution/NormalDistribution(double,double)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/pretrain(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/trainingWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/name(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/nIn(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/biasUpdater(org.nd4j.linalg.learning.config.IUpdater)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/LocalResponseNormalization$Builder/LocalResponseNormalization$Builder()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/DenseLayer$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/biasInit(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/dist(org.deeplearning4j.nn.conf.distribution.Distribution)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/convolutionMode(org.deeplearning4j.nn.conf.ConvolutionMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/optimizationAlgo(org.deeplearning4j.nn.api.OptimizationAlgorithm)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/kernelSize(int%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/SubsamplingLayer$Builder(org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType,int%5B%5D,int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/biasInit(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/setInputType(org.deeplearning4j.nn.conf.inputs.InputType)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/OutputLayer$Builder(org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/dist(org.deeplearning4j.nn.conf.distribution.Distribution)|",
      "|java+constructor:///org/nd4j/linalg/learning/config/Nesterovs/Nesterovs(double,double)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/LocalResponseNormalization$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/stride(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/dropOut(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/seed(long)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/l2(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/layer(int,org.deeplearning4j.nn.conf.layers.Layer)|",
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutional(long,long,long)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/weightInit(org.deeplearning4j.nn.weights.WeightInit)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/SubsamplingLayer$Builder(org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder(int%5B%5D,int%5B%5D,int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/weightInit(org.deeplearning4j.nn.conf.distribution.Distribution)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/name(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/name(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/list()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/weightInit(org.deeplearning4j.nn.weights.WeightInit)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/convolutionMode(org.deeplearning4j.nn.conf.ConvolutionMode)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder(int%5B%5D,int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nIn(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/convolutionMode(org.deeplearning4j.nn.conf.ConvolutionMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/backprop(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cacheMode(org.deeplearning4j.nn.conf.CacheMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/gradientNormalization(org.deeplearning4j.nn.conf.GradientNormalization)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/updater(org.nd4j.linalg.learning.config.IUpdater)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/stride(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/miniBatch(boolean)|"
    ],
    "affectedLib": "org.nd4j:nd4j-api:1.0.0-beta2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta",
    "coordinatesV2": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta2",
    "caller": "|java+method:///org/deeplearning4j/zoo/util/imagenet/ImageNetLabels/decodePredictions(org.nd4j.linalg.api.ndarray.INDArray)|",
    "called": "|java+method:///org/nd4j/linalg/factory/Nd4j/argMax(org.nd4j.linalg.api.ndarray.INDArray,int%5B%5D)|",
    "v1Body": [
      "|java+method:///org/nd4j/linalg/api/ndarray/INDArray/putScalar(int,int,double)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/nd4j/linalg/api/ndarray/INDArray/getFloat(int,int)|",
      "|java+method:///org/nd4j/linalg/api/ndarray/INDArray/getRow(int)|",
      "|java+method:///org/nd4j/linalg/api/ndarray/INDArray/dup()|",
      "|java+method:///org/nd4j/linalg/api/ndarray/INDArray/size(int)|",
      "|java+method:///org/nd4j/linalg/factory/Nd4j/argMax(org.nd4j.linalg.api.ndarray.INDArray,int%5B%5D)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/nd4j/linalg/api/ndarray/INDArray/getInt(int%5B%5D)|",
      "|java+method:///java/util/ArrayList/get(int)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Float/valueOf(float)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/String/valueOf(int)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/nd4j/linalg/api/ndarray/INDArray/getRow(long)|",
      "|java+method:///org/nd4j/linalg/api/ndarray/INDArray/getFloat(long,long)|",
      "|java+method:///org/nd4j/linalg/api/ndarray/INDArray/dup()|",
      "|java+method:///org/nd4j/linalg/api/ndarray/INDArray/size(int)|",
      "|java+method:///org/nd4j/linalg/api/ndarray/INDArray/putScalar(long,long,double)|",
      "|java+method:///java/util/ArrayList/get(int)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Float/valueOf(float)|",
      "|java+method:///org/nd4j/linalg/factory/Nd4j/argMax(org.nd4j.linalg.api.ndarray.INDArray,int%5B%5D)|",
      "|java+method:///java/util/ArrayList/size()|",
      "|java+method:///org/nd4j/linalg/api/ndarray/INDArray/shape()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/nd4j/base/Preconditions/checkState(boolean,java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/nd4j/linalg/api/ndarray/INDArray/getInt(int%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/String/valueOf(int)|"
    ],
    "affectedLib": "org.nd4j:nd4j-api:1.0.0-beta2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta",
    "coordinatesV2": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta2",
    "caller": "|java+method:///org/deeplearning4j/zoo/model/YOLO2/conf()|",
    "called": "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/build()|",
    "v1Body": [
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/trainingWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutional(int,int,int)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setInputTypes(org.deeplearning4j.nn.conf.inputs.InputType%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/stride(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/weightInit(org.deeplearning4j.nn.weights.WeightInit)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SpaceToDepthLayer$Builder/build()|",
      "|java+method:///org/nd4j/linalg/factory/Nd4j/create(double%5B%5D%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/inferenceWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/cudnnAlgoMode(org.deeplearning4j.nn.conf.layers.ConvolutionLayer$AlgoMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/gradientNormalizationThreshold(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/objdetect/Yolo2OutputLayer$Builder/boundingBoxPriors(org.nd4j.linalg.api.ndarray.INDArray)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/graphBuilder()|",
      "|java+method:///org/deeplearning4j/zoo/model/helper/DarknetHelper/addLayers(org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder,int,java.lang.String,int,int,int,int,int)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/convolutionMode(org.deeplearning4j.nn.conf.ConvolutionMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/optimizationAlgo(org.deeplearning4j.nn.api.OptimizationAlgorithm)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/objdetect/Yolo2OutputLayer$Builder/build()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/graph/MergeVertex/MergeVertex()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cudnnAlgoMode(org.deeplearning4j.nn.conf.layers.ConvolutionLayer$AlgoMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/backprop(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/seed(long)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/l2(double)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/objdetect/Yolo2OutputLayer$Builder/Yolo2OutputLayer$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setOutputs(java.lang.String%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/NeuralNetConfiguration$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/pretrain(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addInputs(java.lang.String%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/SpaceToDepthLayer$Builder/SpaceToDepthLayer$Builder(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/zoo/model/helper/DarknetHelper/addLayers(org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder,int,int,int,int,int)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addLayer(java.lang.String,org.deeplearning4j.nn.conf.layers.Layer,java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addVertex(java.lang.String,org.deeplearning4j.nn.conf.graph.GraphVertex,java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nIn(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cacheMode(org.deeplearning4j.nn.conf.CacheMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/gradientNormalization(org.deeplearning4j.nn.conf.GradientNormalization)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/updater(org.nd4j.linalg.learning.config.IUpdater)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder(int%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/trainingWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setInputTypes(org.deeplearning4j.nn.conf.inputs.InputType%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/stride(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/weightInit(org.deeplearning4j.nn.weights.WeightInit)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SpaceToDepthLayer$Builder/build()|",
      "|java+method:///org/nd4j/linalg/factory/Nd4j/create(double%5B%5D%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/inferenceWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/cudnnAlgoMode(org.deeplearning4j.nn.conf.layers.ConvolutionLayer$AlgoMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/gradientNormalizationThreshold(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/objdetect/Yolo2OutputLayer$Builder/boundingBoxPriors(org.nd4j.linalg.api.ndarray.INDArray)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/graphBuilder()|",
      "|java+method:///org/deeplearning4j/zoo/model/helper/DarknetHelper/addLayers(org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder,int,java.lang.String,int,int,int,int,int)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/convolutionMode(org.deeplearning4j.nn.conf.ConvolutionMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/optimizationAlgo(org.deeplearning4j.nn.api.OptimizationAlgorithm)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/objdetect/Yolo2OutputLayer$Builder/build()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/graph/MergeVertex/MergeVertex()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cudnnAlgoMode(org.deeplearning4j.nn.conf.layers.ConvolutionLayer$AlgoMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/backprop(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/seed(long)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/l2(double)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/objdetect/Yolo2OutputLayer$Builder/Yolo2OutputLayer$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setOutputs(java.lang.String%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/NeuralNetConfiguration$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/pretrain(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addInputs(java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutional(long,long,long)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/SpaceToDepthLayer$Builder/SpaceToDepthLayer$Builder(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/zoo/model/helper/DarknetHelper/addLayers(org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder,int,int,int,int,int)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addLayer(java.lang.String,org.deeplearning4j.nn.conf.layers.Layer,java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addVertex(java.lang.String,org.deeplearning4j.nn.conf.graph.GraphVertex,java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nIn(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cacheMode(org.deeplearning4j.nn.conf.CacheMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/gradientNormalization(org.deeplearning4j.nn.conf.GradientNormalization)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/updater(org.nd4j.linalg.learning.config.IUpdater)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder(int%5B%5D)|"
    ],
    "affectedLib": "org.deeplearning4j:deeplearning4j-nn:1.0.0-beta2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta",
    "coordinatesV2": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta2",
    "caller": "|java+method:///org/deeplearning4j/zoo/model/VGG19/conf()|",
    "called": "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/build()|",
    "v1Body": [
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutionalFlat(int,int,int)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/stride(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/kernelSize(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/stride(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/inferenceWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/cudnnAlgoMode(org.deeplearning4j.nn.conf.layers.ConvolutionLayer$AlgoMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/trainingWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setInputTypes(org.deeplearning4j.nn.conf.inputs.InputType%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/DenseLayer$Builder()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/SubsamplingLayer$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/poolingType(org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/graphBuilder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/optimizationAlgo(org.deeplearning4j.nn.api.OptimizationAlgorithm)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/kernelSize(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/backprop(boolean)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/OutputLayer$Builder(org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/seed(long)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setOutputs(java.lang.String%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/NeuralNetConfiguration$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/pretrain(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addInputs(java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/name(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/layer(int,org.deeplearning4j.nn.conf.layers.Layer,java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nIn(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/padding(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cacheMode(org.deeplearning4j.nn.conf.CacheMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/updater(org.nd4j.linalg.learning.config.IUpdater)|"
    ],
    "v2Body": [
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutionalFlat(long,long,long)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/stride(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/kernelSize(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/stride(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/inferenceWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/cudnnAlgoMode(org.deeplearning4j.nn.conf.layers.ConvolutionLayer$AlgoMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/trainingWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setInputTypes(org.deeplearning4j.nn.conf.inputs.InputType%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/DenseLayer$Builder()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/SubsamplingLayer$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/poolingType(org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/graphBuilder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/optimizationAlgo(org.deeplearning4j.nn.api.OptimizationAlgorithm)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/kernelSize(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/backprop(boolean)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/OutputLayer$Builder(org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/seed(long)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setOutputs(java.lang.String%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/NeuralNetConfiguration$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/pretrain(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addInputs(java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/name(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/layer(int,org.deeplearning4j.nn.conf.layers.Layer,java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nIn(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/padding(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cacheMode(org.deeplearning4j.nn.conf.CacheMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/updater(org.nd4j.linalg.learning.config.IUpdater)|"
    ],
    "affectedLib": "org.deeplearning4j:deeplearning4j-nn:1.0.0-beta2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta",
    "coordinatesV2": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta2",
    "caller": "|java+method:///org/deeplearning4j/zoo/model/InceptionResNetV1/init()|",
    "called": "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/build()|",
    "v1Body": [
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/graph/ComputationGraph/init()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/CenterLossOutputLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/backprop(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/CenterLossOutputLayer$Builder/nIn(int)|",
      "|java+constructor:///org/deeplearning4j/nn/graph/ComputationGraph/ComputationGraph(org.deeplearning4j.nn.conf.ComputationGraphConfiguration)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/graph/L2NormalizeVertex/L2NormalizeVertex(int%5B%5D,double)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/CenterLossOutputLayer$Builder/alpha(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/nIn(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutional(int,int,int)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setInputTypes(org.deeplearning4j.nn.conf.inputs.InputType%5B%5D)|",
      "|java+method:///org/deeplearning4j/zoo/model/InceptionResNetV1/init()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/CenterLossOutputLayer$Builder/CenterLossOutputLayer$Builder()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/DenseLayer$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/CenterLossOutputLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setOutputs(java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/pretrain(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addInputs(java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addLayer(java.lang.String,org.deeplearning4j.nn.conf.layers.Layer,java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addVertex(java.lang.String,org.deeplearning4j.nn.conf.graph.GraphVertex,java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/CenterLossOutputLayer$Builder/lossFunction(org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction)|",
      "|java+method:///org/deeplearning4j/zoo/model/InceptionResNetV1/graphBuilder(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/CenterLossOutputLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/CenterLossOutputLayer$Builder/lambda(double)|"
    ],
    "v2Body": [
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/nIn(int)|",
      "|java+method:///org/deeplearning4j/nn/graph/ComputationGraph/init()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/CenterLossOutputLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/backprop(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/CenterLossOutputLayer$Builder/nIn(int)|",
      "|java+constructor:///org/deeplearning4j/nn/graph/ComputationGraph/ComputationGraph(org.deeplearning4j.nn.conf.ComputationGraphConfiguration)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/graph/L2NormalizeVertex/L2NormalizeVertex(int%5B%5D,double)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/CenterLossOutputLayer$Builder/alpha(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setInputTypes(org.deeplearning4j.nn.conf.inputs.InputType%5B%5D)|",
      "|java+method:///org/deeplearning4j/zoo/model/InceptionResNetV1/init()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/CenterLossOutputLayer$Builder/CenterLossOutputLayer$Builder()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/DenseLayer$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/CenterLossOutputLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setOutputs(java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/pretrain(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addInputs(java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutional(long,long,long)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addLayer(java.lang.String,org.deeplearning4j.nn.conf.layers.Layer,java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addVertex(java.lang.String,org.deeplearning4j.nn.conf.graph.GraphVertex,java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/CenterLossOutputLayer$Builder/lossFunction(org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction)|",
      "|java+method:///org/deeplearning4j/zoo/model/InceptionResNetV1/graphBuilder(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/CenterLossOutputLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/CenterLossOutputLayer$Builder/lambda(double)|"
    ],
    "affectedLib": "org.deeplearning4j:deeplearning4j-nn:1.0.0-beta2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta",
    "coordinatesV2": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta2",
    "caller": "|java+method:///org/deeplearning4j/zoo/ZooModel/initPretrained(org.deeplearning4j.zoo.PretrainedType)|",
    "called": "|java+method:///org/deeplearning4j/util/ModelSerializer/restoreComputationGraph(java.io.File)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///java/io/File/getName()|",
      "|java+method:///org/deeplearning4j/util/ModelSerializer/restoreMultiLayerNetwork(java.io.File)|",
      "|java+constructor:///java/net/URL/URL(java.lang.String)|",
      "|java+method:///java/io/File/exists()|",
      "|java+constructor:///java/io/File/File(java.lang.String,java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/io/File/mkdirs()|",
      "|java+method:///org/deeplearning4j/zoo/ZooModel/modelType()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/deeplearning4j/util/ModelSerializer/restoreComputationGraph(java.io.File)|",
      "|java+method:///java/io/File/delete()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/deeplearning4j/zoo/ZooModel/pretrainedChecksum(org.deeplearning4j.zoo.PretrainedType)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/commons/io/FileUtils/copyURLToFile(java.net.URL,java.io.File)|",
      "|java+constructor:///java/util/zip/Adler32/Adler32()|",
      "|java+method:///org/deeplearning4j/zoo/ZooModel/pretrainedUrl(org.deeplearning4j.zoo.PretrainedType)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+constructor:///java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)|",
      "|java+method:///java/util/zip/Checksum/getValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/toString()|",
      "|java+method:///org/apache/commons/io/FileUtils/checksum(java.io.File,java.util.zip.Checksum)|"
    ],
    "v2Body": [
      "|java+method:///org/deeplearning4j/common/resources/DL4JResources/getDirectory(org.deeplearning4j.common.resources.ResourceType,java.lang.String)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///java/io/File/getName()|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///org/deeplearning4j/util/ModelSerializer/restoreMultiLayerNetwork(java.io.File)|",
      "|java+method:///org/deeplearning4j/zoo/ZooModel/modelName()|",
      "|java+constructor:///java/net/URL/URL(java.lang.String)|",
      "|java+method:///java/io/File/exists()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/deeplearning4j/zoo/ZooModel/modelType()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/deeplearning4j/util/ModelSerializer/restoreComputationGraph(java.io.File)|",
      "|java+method:///java/io/File/delete()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/deeplearning4j/zoo/ZooModel/pretrainedChecksum(org.deeplearning4j.zoo.PretrainedType)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/commons/io/FileUtils/copyURLToFile(java.net.URL,java.io.File)|",
      "|java+constructor:///java/util/zip/Adler32/Adler32()|",
      "|java+method:///org/deeplearning4j/zoo/ZooModel/pretrainedUrl(org.deeplearning4j.zoo.PretrainedType)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+constructor:///java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)|",
      "|java+method:///java/util/zip/Checksum/getValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/toString()|",
      "|java+method:///org/apache/commons/io/FileUtils/checksum(java.io.File,java.util.zip.Checksum)|"
    ],
    "affectedLib": "org.deeplearning4j:deeplearning4j-nn:1.0.0-beta2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta",
    "coordinatesV2": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta2",
    "caller": "|java+method:///org/deeplearning4j/zoo/model/SimpleCNN/conf()|",
    "called": "|java+method:///org/deeplearning4j/nn/conf/layers/DropoutLayer$Builder/build()|",
    "v1Body": [
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/trainingWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutional(int,int,int)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/BatchNormalization$Builder/BatchNormalization$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/setInputType(org.deeplearning4j.nn.conf.inputs.InputType)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/SubsamplingLayer$Builder(org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType,int%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/NeuralNetConfiguration$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/list()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/GlobalPoolingLayer$Builder/GlobalPoolingLayer$Builder(org.deeplearning4j.nn.conf.layers.PoolingType)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/weightInit(org.deeplearning4j.nn.weights.WeightInit)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ActivationLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/BatchNormalization$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/inferenceWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/pretrain(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ActivationLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/optimizationAlgo(org.deeplearning4j.nn.api.OptimizationAlgorithm)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/GlobalPoolingLayer$Builder/build()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ActivationLayer$Builder/ActivationLayer$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DropoutLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/seed(long)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/layer(int,org.deeplearning4j.nn.conf.layers.Layer)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/DropoutLayer$Builder/DropoutLayer$Builder(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/name(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nIn(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/convolutionMode(org.deeplearning4j.nn.conf.ConvolutionMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/backprop(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cacheMode(org.deeplearning4j.nn.conf.CacheMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/updater(org.nd4j.linalg.learning.config.IUpdater)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder(int%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/trainingWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/BatchNormalization$Builder/BatchNormalization$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/setInputType(org.deeplearning4j.nn.conf.inputs.InputType)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/SubsamplingLayer$Builder(org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType,int%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/NeuralNetConfiguration$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutional(long,long,long)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/list()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/GlobalPoolingLayer$Builder/GlobalPoolingLayer$Builder(org.deeplearning4j.nn.conf.layers.PoolingType)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/weightInit(org.deeplearning4j.nn.weights.WeightInit)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ActivationLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/BatchNormalization$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/inferenceWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/pretrain(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ActivationLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/optimizationAlgo(org.deeplearning4j.nn.api.OptimizationAlgorithm)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/GlobalPoolingLayer$Builder/build()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ActivationLayer$Builder/ActivationLayer$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DropoutLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/seed(long)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/layer(int,org.deeplearning4j.nn.conf.layers.Layer)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/DropoutLayer$Builder/DropoutLayer$Builder(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/name(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nIn(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/convolutionMode(org.deeplearning4j.nn.conf.ConvolutionMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/backprop(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cacheMode(org.deeplearning4j.nn.conf.CacheMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/updater(org.nd4j.linalg.learning.config.IUpdater)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder(int%5B%5D)|"
    ],
    "affectedLib": "org.deeplearning4j:deeplearning4j-nn:1.0.0-beta2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta",
    "coordinatesV2": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta2",
    "caller": "|java+method:///org/deeplearning4j/zoo/model/AlexNet/conf()|",
    "called": "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/build()|",
    "v1Body": [
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/biasInit(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/padding(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/build()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/NeuralNetConfiguration$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/weightInit(org.deeplearning4j.nn.weights.WeightInit)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/kernelSize(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/name(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/inferenceWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/cudnnAlgoMode(org.deeplearning4j.nn.conf.layers.ConvolutionLayer$AlgoMode)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/distribution/GaussianDistribution/GaussianDistribution(double,double)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/distribution/NormalDistribution/NormalDistribution(double,double)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/pretrain(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/trainingWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/name(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/nIn(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutional(int,int,int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/biasUpdater(org.nd4j.linalg.learning.config.IUpdater)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/LocalResponseNormalization$Builder/LocalResponseNormalization$Builder()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/DenseLayer$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/biasInit(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/dist(org.deeplearning4j.nn.conf.distribution.Distribution)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/convolutionMode(org.deeplearning4j.nn.conf.ConvolutionMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/optimizationAlgo(org.deeplearning4j.nn.api.OptimizationAlgorithm)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/kernelSize(int%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/SubsamplingLayer$Builder(org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType,int%5B%5D,int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/biasInit(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/setInputType(org.deeplearning4j.nn.conf.inputs.InputType)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/OutputLayer$Builder(org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/dist(org.deeplearning4j.nn.conf.distribution.Distribution)|",
      "|java+constructor:///org/nd4j/linalg/learning/config/Nesterovs/Nesterovs(double,double)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/LocalResponseNormalization$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/stride(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/dropOut(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/seed(long)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/l2(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/layer(int,org.deeplearning4j.nn.conf.layers.Layer)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/SubsamplingLayer$Builder(org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder(int%5B%5D,int%5B%5D,int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/weightInit(org.deeplearning4j.nn.conf.distribution.Distribution)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/name(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/name(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/list()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/weightInit(org.deeplearning4j.nn.weights.WeightInit)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/convolutionMode(org.deeplearning4j.nn.conf.ConvolutionMode)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder(int%5B%5D,int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nIn(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/convolutionMode(org.deeplearning4j.nn.conf.ConvolutionMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/backprop(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cacheMode(org.deeplearning4j.nn.conf.CacheMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/gradientNormalization(org.deeplearning4j.nn.conf.GradientNormalization)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/updater(org.nd4j.linalg.learning.config.IUpdater)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/stride(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/miniBatch(boolean)|"
    ],
    "v2Body": [
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/biasInit(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/padding(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/build()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/NeuralNetConfiguration$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/kernelSize(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/name(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/inferenceWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/cudnnAlgoMode(org.deeplearning4j.nn.conf.layers.ConvolutionLayer$AlgoMode)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/distribution/GaussianDistribution/GaussianDistribution(double,double)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/distribution/NormalDistribution/NormalDistribution(double,double)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/pretrain(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/trainingWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/name(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/nIn(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/biasUpdater(org.nd4j.linalg.learning.config.IUpdater)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/LocalResponseNormalization$Builder/LocalResponseNormalization$Builder()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/DenseLayer$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/biasInit(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/dist(org.deeplearning4j.nn.conf.distribution.Distribution)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/convolutionMode(org.deeplearning4j.nn.conf.ConvolutionMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/optimizationAlgo(org.deeplearning4j.nn.api.OptimizationAlgorithm)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/kernelSize(int%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/SubsamplingLayer$Builder(org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType,int%5B%5D,int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/biasInit(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/setInputType(org.deeplearning4j.nn.conf.inputs.InputType)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/OutputLayer$Builder(org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/dist(org.deeplearning4j.nn.conf.distribution.Distribution)|",
      "|java+constructor:///org/nd4j/linalg/learning/config/Nesterovs/Nesterovs(double,double)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/LocalResponseNormalization$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/stride(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/dropOut(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/seed(long)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/l2(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/layer(int,org.deeplearning4j.nn.conf.layers.Layer)|",
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutional(long,long,long)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/weightInit(org.deeplearning4j.nn.weights.WeightInit)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/SubsamplingLayer$Builder(org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder(int%5B%5D,int%5B%5D,int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/weightInit(org.deeplearning4j.nn.conf.distribution.Distribution)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/name(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/name(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/list()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/weightInit(org.deeplearning4j.nn.weights.WeightInit)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/convolutionMode(org.deeplearning4j.nn.conf.ConvolutionMode)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder(int%5B%5D,int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nIn(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/convolutionMode(org.deeplearning4j.nn.conf.ConvolutionMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/backprop(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cacheMode(org.deeplearning4j.nn.conf.CacheMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/gradientNormalization(org.deeplearning4j.nn.conf.GradientNormalization)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/updater(org.nd4j.linalg.learning.config.IUpdater)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/stride(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/miniBatch(boolean)|"
    ],
    "affectedLib": "org.deeplearning4j:deeplearning4j-nn:1.0.0-beta2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta",
    "coordinatesV2": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta2",
    "caller": "|java+method:///org/deeplearning4j/zoo/model/Xception/init()|",
    "called": "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/build()|",
    "v1Body": [
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutional(int,int,int)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setInputTypes(org.deeplearning4j.nn.conf.inputs.InputType%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/graph/ComputationGraph/init()|",
      "|java+method:///org/deeplearning4j/zoo/model/Xception/graphBuilder()|",
      "|java+method:///org/deeplearning4j/zoo/model/Xception/init()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addInputs(java.lang.String%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/graph/ComputationGraph/ComputationGraph(org.deeplearning4j.nn.conf.ComputationGraphConfiguration)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/build()|"
    ],
    "v2Body": [
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setInputTypes(org.deeplearning4j.nn.conf.inputs.InputType%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/graph/ComputationGraph/init()|",
      "|java+method:///org/deeplearning4j/zoo/model/Xception/graphBuilder()|",
      "|java+method:///org/deeplearning4j/zoo/model/Xception/init()|",
      "|java+constructor:///org/deeplearning4j/nn/graph/ComputationGraph/ComputationGraph(org.deeplearning4j.nn.conf.ComputationGraphConfiguration)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addInputs(java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutional(long,long,long)|"
    ],
    "affectedLib": "org.deeplearning4j:deeplearning4j-nn:1.0.0-beta2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta",
    "coordinatesV2": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta2",
    "caller": "|java+method:///org/deeplearning4j/zoo/model/ResNet50/graphBuilder()|",
    "called": "|java+method:///org/deeplearning4j/nn/conf/layers/ActivationLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
    "v1Body": [
      "|java+method:///org/deeplearning4j/nn/conf/layers/ActivationLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/inferenceWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/trainingWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutional(int,int,int)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ActivationLayer$Builder/ActivationLayer$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/zoo/model/ResNet50/convBlock(org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder,int%5B%5D,int%5B%5D,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder(int%5B%5D,int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addLayer(java.lang.String,org.deeplearning4j.nn.conf.layers.Layer,java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/miniBatch(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ZeroPaddingLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setInputTypes(org.deeplearning4j.nn.conf.inputs.InputType%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/BatchNormalization/BatchNormalization()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/graphBuilder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ActivationLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/optimizationAlgo(org.deeplearning4j.nn.api.OptimizationAlgorithm)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/SubsamplingLayer$Builder(org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType,int%5B%5D,int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nOut(int)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/distribution/TruncatedNormalDistribution/TruncatedNormalDistribution(double,double)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cudnnAlgoMode(org.deeplearning4j.nn.conf.layers.ConvolutionLayer$AlgoMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/backprop(boolean)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/OutputLayer$Builder(org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/l1(double)|",
      "|java+method:///org/deeplearning4j/zoo/model/ResNet50/identityBlock(org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder,int%5B%5D,int%5B%5D,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/SubsamplingLayer$Builder(org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType,int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/seed(long)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/l2(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setOutputs(java.lang.String%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/NeuralNetConfiguration$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/pretrain(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addInputs(java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/dist(org.deeplearning4j.nn.conf.distribution.Distribution)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/convolutionMode(org.deeplearning4j.nn.conf.ConvolutionMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cacheMode(org.deeplearning4j.nn.conf.CacheMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/weightInit(org.deeplearning4j.nn.weights.WeightInit)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ZeroPaddingLayer$Builder/ZeroPaddingLayer$Builder(int,int)|",
      "|java+method:///org/deeplearning4j/zoo/model/ResNet50/convBlock(org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder,int%5B%5D,int%5B%5D,java.lang.String,java.lang.String,int%5B%5D,java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/updater(org.nd4j.linalg.learning.config.IUpdater)|"
    ],
    "v2Body": [
      "|java+method:///org/deeplearning4j/nn/conf/layers/ActivationLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/inferenceWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/trainingWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ActivationLayer$Builder/ActivationLayer$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/zoo/model/ResNet50/convBlock(org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder,int%5B%5D,int%5B%5D,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder(int%5B%5D,int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addLayer(java.lang.String,org.deeplearning4j.nn.conf.layers.Layer,java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/miniBatch(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ZeroPaddingLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setInputTypes(org.deeplearning4j.nn.conf.inputs.InputType%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/BatchNormalization/BatchNormalization()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/graphBuilder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ActivationLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/optimizationAlgo(org.deeplearning4j.nn.api.OptimizationAlgorithm)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/SubsamplingLayer$Builder(org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType,int%5B%5D,int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nOut(int)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/distribution/TruncatedNormalDistribution/TruncatedNormalDistribution(double,double)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cudnnAlgoMode(org.deeplearning4j.nn.conf.layers.ConvolutionLayer$AlgoMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/backprop(boolean)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/OutputLayer$Builder(org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/l1(double)|",
      "|java+method:///org/deeplearning4j/zoo/model/ResNet50/identityBlock(org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder,int%5B%5D,int%5B%5D,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/SubsamplingLayer$Builder(org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType,int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/seed(long)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/l2(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setOutputs(java.lang.String%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/NeuralNetConfiguration$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/pretrain(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addInputs(java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutional(long,long,long)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/dist(org.deeplearning4j.nn.conf.distribution.Distribution)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/convolutionMode(org.deeplearning4j.nn.conf.ConvolutionMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cacheMode(org.deeplearning4j.nn.conf.CacheMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/weightInit(org.deeplearning4j.nn.weights.WeightInit)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ZeroPaddingLayer$Builder/ZeroPaddingLayer$Builder(int,int)|",
      "|java+method:///org/deeplearning4j/zoo/model/ResNet50/convBlock(org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder,int%5B%5D,int%5B%5D,java.lang.String,java.lang.String,int%5B%5D,java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/updater(org.nd4j.linalg.learning.config.IUpdater)|"
    ],
    "affectedLib": "org.deeplearning4j:deeplearning4j-nn:1.0.0-beta2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta",
    "coordinatesV2": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta2",
    "caller": "|java+method:///org/deeplearning4j/zoo/model/TinyYOLO/conf()|",
    "called": "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/build()|",
    "v1Body": [
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/inferenceWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/trainingWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutional(int,int,int)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setInputTypes(org.deeplearning4j.nn.conf.inputs.InputType%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/stride(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/weightInit(org.deeplearning4j.nn.weights.WeightInit)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/nd4j/linalg/factory/Nd4j/create(double%5B%5D%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addLayer(java.lang.String,org.deeplearning4j.nn.conf.layers.Layer,java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/build()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/gradientNormalizationThreshold(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/objdetect/Yolo2OutputLayer$Builder/boundingBoxPriors(org.nd4j.linalg.api.ndarray.INDArray)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/graphBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/convolutionMode(org.deeplearning4j.nn.conf.ConvolutionMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/optimizationAlgo(org.deeplearning4j.nn.api.OptimizationAlgorithm)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/objdetect/Yolo2OutputLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cudnnAlgoMode(org.deeplearning4j.nn.conf.layers.ConvolutionLayer$AlgoMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/backprop(boolean)|",
      "|java+method:///org/deeplearning4j/zoo/model/helper/DarknetHelper/addLayers(org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder,int,int,int,int,int,int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/seed(long)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/l2(double)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/objdetect/Yolo2OutputLayer$Builder/Yolo2OutputLayer$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setOutputs(java.lang.String%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/NeuralNetConfiguration$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/pretrain(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addInputs(java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nIn(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cacheMode(org.deeplearning4j.nn.conf.CacheMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/gradientNormalization(org.deeplearning4j.nn.conf.GradientNormalization)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/updater(org.nd4j.linalg.learning.config.IUpdater)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder(int%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/inferenceWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/trainingWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setInputTypes(org.deeplearning4j.nn.conf.inputs.InputType%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/stride(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/weightInit(org.deeplearning4j.nn.weights.WeightInit)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/nd4j/linalg/factory/Nd4j/create(double%5B%5D%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addLayer(java.lang.String,org.deeplearning4j.nn.conf.layers.Layer,java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/build()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/gradientNormalizationThreshold(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/objdetect/Yolo2OutputLayer$Builder/boundingBoxPriors(org.nd4j.linalg.api.ndarray.INDArray)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/graphBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/convolutionMode(org.deeplearning4j.nn.conf.ConvolutionMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/optimizationAlgo(org.deeplearning4j.nn.api.OptimizationAlgorithm)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/objdetect/Yolo2OutputLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cudnnAlgoMode(org.deeplearning4j.nn.conf.layers.ConvolutionLayer$AlgoMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/backprop(boolean)|",
      "|java+method:///org/deeplearning4j/zoo/model/helper/DarknetHelper/addLayers(org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder,int,int,int,int,int,int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/seed(long)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/l2(double)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/objdetect/Yolo2OutputLayer$Builder/Yolo2OutputLayer$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setOutputs(java.lang.String%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/NeuralNetConfiguration$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/pretrain(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addInputs(java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutional(long,long,long)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nIn(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cacheMode(org.deeplearning4j.nn.conf.CacheMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/gradientNormalization(org.deeplearning4j.nn.conf.GradientNormalization)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/updater(org.nd4j.linalg.learning.config.IUpdater)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder(int%5B%5D)|"
    ],
    "affectedLib": "org.deeplearning4j:deeplearning4j-nn:1.0.0-beta2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta",
    "coordinatesV2": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta2",
    "caller": "|java+method:///org/deeplearning4j/zoo/model/UNet/init()|",
    "called": "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/build()|",
    "v1Body": [
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutional(int,int,int)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setInputTypes(org.deeplearning4j.nn.conf.inputs.InputType%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/graph/ComputationGraph/init()|",
      "|java+method:///org/deeplearning4j/zoo/model/UNet/graphBuilder()|",
      "|java+constructor:///org/deeplearning4j/nn/graph/ComputationGraph/ComputationGraph(org.deeplearning4j.nn.conf.ComputationGraphConfiguration)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addInputs(java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/zoo/model/UNet/init()|"
    ],
    "v2Body": [
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setInputTypes(org.deeplearning4j.nn.conf.inputs.InputType%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/graph/ComputationGraph/init()|",
      "|java+method:///org/deeplearning4j/zoo/model/UNet/graphBuilder()|",
      "|java+constructor:///org/deeplearning4j/nn/graph/ComputationGraph/ComputationGraph(org.deeplearning4j.nn.conf.ComputationGraphConfiguration)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addInputs(java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutional(long,long,long)|",
      "|java+method:///org/deeplearning4j/zoo/model/UNet/init()|"
    ],
    "affectedLib": "org.deeplearning4j:deeplearning4j-nn:1.0.0-beta2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta",
    "coordinatesV2": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta2",
    "caller": "|java+method:///org/deeplearning4j/zoo/model/VGG16/conf()|",
    "called": "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/build()|",
    "v1Body": [
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/trainingWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutionalFlat(int,int,int)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/stride(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/seed(long)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/kernelSize(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/stride(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/inferenceWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/cudnnAlgoMode(org.deeplearning4j.nn.conf.layers.ConvolutionLayer$AlgoMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setInputTypes(org.deeplearning4j.nn.conf.inputs.InputType%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/SubsamplingLayer$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/poolingType(org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/graphBuilder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/optimizationAlgo(org.deeplearning4j.nn.api.OptimizationAlgorithm)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/kernelSize(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/backprop(boolean)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/OutputLayer$Builder(org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setOutputs(java.lang.String%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/NeuralNetConfiguration$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/pretrain(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addInputs(java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/name(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/layer(int,org.deeplearning4j.nn.conf.layers.Layer,java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nIn(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/padding(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cacheMode(org.deeplearning4j.nn.conf.CacheMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/updater(org.nd4j.linalg.learning.config.IUpdater)|"
    ],
    "v2Body": [
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/trainingWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutionalFlat(long,long,long)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/stride(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/seed(long)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/kernelSize(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/stride(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/inferenceWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/cudnnAlgoMode(org.deeplearning4j.nn.conf.layers.ConvolutionLayer$AlgoMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setInputTypes(org.deeplearning4j.nn.conf.inputs.InputType%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/SubsamplingLayer$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/poolingType(org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/graphBuilder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/optimizationAlgo(org.deeplearning4j.nn.api.OptimizationAlgorithm)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/kernelSize(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/backprop(boolean)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/OutputLayer$Builder(org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setOutputs(java.lang.String%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/NeuralNetConfiguration$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/pretrain(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addInputs(java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/name(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/layer(int,org.deeplearning4j.nn.conf.layers.Layer,java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nIn(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/padding(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cacheMode(org.deeplearning4j.nn.conf.CacheMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/updater(org.nd4j.linalg.learning.config.IUpdater)|"
    ],
    "affectedLib": "org.deeplearning4j:deeplearning4j-nn:1.0.0-beta2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta",
    "coordinatesV2": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta2",
    "caller": "|java+method:///org/deeplearning4j/zoo/model/Darknet19/conf()|",
    "called": "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/build()|",
    "v1Body": [
      "|java+method:///org/deeplearning4j/nn/conf/layers/ActivationLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/inferenceWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/trainingWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutional(int,int,int)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setInputTypes(org.deeplearning4j.nn.conf.inputs.InputType%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/graphBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/stride(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/weightInit(org.deeplearning4j.nn.weights.WeightInit)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/LossLayer$Builder/build()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addLayer(java.lang.String,org.deeplearning4j.nn.conf.layers.Layer,java.lang.String%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/GlobalPoolingLayer$Builder/GlobalPoolingLayer$Builder(org.deeplearning4j.nn.conf.layers.PoolingType)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ActivationLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/convolutionMode(org.deeplearning4j.nn.conf.ConvolutionMode)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/LossLayer$Builder/LossLayer$Builder(org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/GlobalPoolingLayer$Builder/build()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ActivationLayer$Builder/ActivationLayer$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cudnnAlgoMode(org.deeplearning4j.nn.conf.layers.ConvolutionLayer$AlgoMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/backprop(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/seed(long)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/l2(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setOutputs(java.lang.String%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/NeuralNetConfiguration$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/pretrain(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addInputs(java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/zoo/model/helper/DarknetHelper/addLayers(org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder,int,int,int,int,int)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nIn(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cacheMode(org.deeplearning4j.nn.conf.CacheMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/weightInit(org.deeplearning4j.nn.weights.WeightInit)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/updater(org.nd4j.linalg.learning.config.IUpdater)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder(int%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///org/deeplearning4j/nn/conf/layers/ActivationLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/inferenceWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/trainingWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setInputTypes(org.deeplearning4j.nn.conf.inputs.InputType%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/graphBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/stride(int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/weightInit(org.deeplearning4j.nn.weights.WeightInit)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/LossLayer$Builder/build()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addLayer(java.lang.String,org.deeplearning4j.nn.conf.layers.Layer,java.lang.String%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/GlobalPoolingLayer$Builder/GlobalPoolingLayer$Builder(org.deeplearning4j.nn.conf.layers.PoolingType)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ActivationLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/convolutionMode(org.deeplearning4j.nn.conf.ConvolutionMode)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/LossLayer$Builder/LossLayer$Builder(org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/GlobalPoolingLayer$Builder/build()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ActivationLayer$Builder/ActivationLayer$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cudnnAlgoMode(org.deeplearning4j.nn.conf.layers.ConvolutionLayer$AlgoMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/backprop(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/seed(long)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/l2(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setOutputs(java.lang.String%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/NeuralNetConfiguration$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/pretrain(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addInputs(java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutional(long,long,long)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/zoo/model/helper/DarknetHelper/addLayers(org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder,int,int,int,int,int)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nIn(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cacheMode(org.deeplearning4j.nn.conf.CacheMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/weightInit(org.deeplearning4j.nn.weights.WeightInit)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/updater(org.nd4j.linalg.learning.config.IUpdater)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder(int%5B%5D)|"
    ],
    "affectedLib": "org.deeplearning4j:deeplearning4j-nn:1.0.0-beta2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta",
    "coordinatesV2": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta2",
    "caller": "|java+method:///org/deeplearning4j/zoo/model/SqueezeNet/init()|",
    "called": "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/build()|",
    "v1Body": [
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutional(int,int,int)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setInputTypes(org.deeplearning4j.nn.conf.inputs.InputType%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/graph/ComputationGraph/init()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addInputs(java.lang.String%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/graph/ComputationGraph/ComputationGraph(org.deeplearning4j.nn.conf.ComputationGraphConfiguration)|",
      "|java+method:///org/deeplearning4j/zoo/model/SqueezeNet/graphBuilder()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/build()|",
      "|java+method:///org/deeplearning4j/zoo/model/SqueezeNet/init()|"
    ],
    "v2Body": [
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setInputTypes(org.deeplearning4j.nn.conf.inputs.InputType%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/graph/ComputationGraph/init()|",
      "|java+constructor:///org/deeplearning4j/nn/graph/ComputationGraph/ComputationGraph(org.deeplearning4j.nn.conf.ComputationGraphConfiguration)|",
      "|java+method:///org/deeplearning4j/zoo/model/SqueezeNet/graphBuilder()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/build()|",
      "|java+method:///org/deeplearning4j/zoo/model/SqueezeNet/init()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addInputs(java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutional(long,long,long)|"
    ],
    "affectedLib": "org.deeplearning4j:deeplearning4j-nn:1.0.0-beta2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta",
    "coordinatesV2": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta2",
    "caller": "|java+method:///org/deeplearning4j/zoo/model/NASNet/init()|",
    "called": "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/build()|",
    "v1Body": [
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutional(int,int,int)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setInputTypes(org.deeplearning4j.nn.conf.inputs.InputType%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/graph/ComputationGraph/init()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addInputs(java.lang.String%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/graph/ComputationGraph/ComputationGraph(org.deeplearning4j.nn.conf.ComputationGraphConfiguration)|",
      "|java+method:///org/deeplearning4j/zoo/model/NASNet/graphBuilder()|",
      "|java+method:///org/deeplearning4j/zoo/model/NASNet/init()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/build()|"
    ],
    "v2Body": [
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setInputTypes(org.deeplearning4j.nn.conf.inputs.InputType%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/graph/ComputationGraph/init()|",
      "|java+constructor:///org/deeplearning4j/nn/graph/ComputationGraph/ComputationGraph(org.deeplearning4j.nn.conf.ComputationGraphConfiguration)|",
      "|java+method:///org/deeplearning4j/zoo/model/NASNet/graphBuilder()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addInputs(java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutional(long,long,long)|",
      "|java+method:///org/deeplearning4j/zoo/model/NASNet/init()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/build()|"
    ],
    "affectedLib": "org.deeplearning4j:deeplearning4j-nn:1.0.0-beta2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta",
    "coordinatesV2": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta2",
    "caller": "|java+method:///org/deeplearning4j/zoo/model/FaceNetNN4Small2/conf()|",
    "called": "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/build()|",
    "v1Body": [
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/SubsamplingLayer$Builder(org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType,int%5B%5D,int%5B%5D,int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/BatchNormalization$Builder/nOut(int)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder(int%5B%5D,int%5B%5D,int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/CenterLossOutputLayer$Builder/nIn(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/build()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/graph/L2NormalizeVertex/L2NormalizeVertex(int%5B%5D,double)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/miniBatch(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ActivationLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/BatchNormalization$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/inferenceWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/cudnnAlgoMode(org.deeplearning4j.nn.conf.layers.ConvolutionLayer$AlgoMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/trainingWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/LocalResponseNormalization$Builder/LocalResponseNormalization$Builder(double,double,double,double)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/nIn(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutional(int,int,int)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setInputTypes(org.deeplearning4j.nn.conf.inputs.InputType%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/CenterLossOutputLayer$Builder/CenterLossOutputLayer$Builder()|",
      "|java+method:///org/deeplearning4j/zoo/model/helper/FaceNetHelper/batchNorm(int,int)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/DenseLayer$Builder()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/BatchNormalization$Builder/BatchNormalization$Builder(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/graphBuilder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ActivationLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/optimizationAlgo(org.deeplearning4j.nn.api.OptimizationAlgorithm)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nOut(int)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/graph/MergeVertex/MergeVertex()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/SubsamplingLayer$Builder(org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType,int%5B%5D,int%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ActivationLayer$Builder/ActivationLayer$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/CenterLossOutputLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/zoo/model/helper/FaceNetHelper/appendGraph(org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder,java.lang.String,int,int%5B%5D,int%5B%5D,int%5B%5D,int%5B%5D,org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType,int,org.nd4j.linalg.activations.Activation,java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cudnnAlgoMode(org.deeplearning4j.nn.conf.layers.ConvolutionLayer$AlgoMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/backprop(boolean)|",
      "|java+method:///org/deeplearning4j/zoo/model/helper/FaceNetHelper/appendGraph(org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder,java.lang.String,int,int%5B%5D,int%5B%5D,int%5B%5D,int%5B%5D,org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType,org.nd4j.linalg.activations.Activation,java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/LocalResponseNormalization$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/CenterLossOutputLayer$Builder/gradientNormalization(org.deeplearning4j.nn.conf.GradientNormalization)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/seed(long)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/l2(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/CenterLossOutputLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setOutputs(java.lang.String%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/NeuralNetConfiguration$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/pretrain(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/BatchNormalization$Builder/nIn(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addInputs(java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/pnorm(int)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder(int%5B%5D,int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addLayer(java.lang.String,org.deeplearning4j.nn.conf.layers.Layer,java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addVertex(java.lang.String,org.deeplearning4j.nn.conf.graph.GraphVertex,java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/CenterLossOutputLayer$Builder/lossFunction(org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nIn(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/CenterLossOutputLayer$Builder/alpha(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/convolutionMode(org.deeplearning4j.nn.conf.ConvolutionMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cacheMode(org.deeplearning4j.nn.conf.CacheMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/weightInit(org.deeplearning4j.nn.weights.WeightInit)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/CenterLossOutputLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/CenterLossOutputLayer$Builder/lambda(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/updater(org.nd4j.linalg.learning.config.IUpdater)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder(int%5B%5D)|"
    ],
    "v2Body": [
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/LocalResponseNormalization$Builder/LocalResponseNormalization$Builder(double,double,double,double)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/SubsamplingLayer$Builder(org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType,int%5B%5D,int%5B%5D,int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/BatchNormalization$Builder/nOut(int)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder(int%5B%5D,int%5B%5D,int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/build()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/graph/L2NormalizeVertex/L2NormalizeVertex(int%5B%5D,double)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/miniBatch(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ActivationLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/BatchNormalization$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/inferenceWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/cudnnAlgoMode(org.deeplearning4j.nn.conf.layers.ConvolutionLayer$AlgoMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/trainingWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setInputTypes(org.deeplearning4j.nn.conf.inputs.InputType%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/CenterLossOutputLayer$Builder/CenterLossOutputLayer$Builder()|",
      "|java+method:///org/deeplearning4j/zoo/model/helper/FaceNetHelper/batchNorm(int,int)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/DenseLayer$Builder()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/BatchNormalization$Builder/BatchNormalization$Builder(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/graphBuilder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ActivationLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/optimizationAlgo(org.deeplearning4j.nn.api.OptimizationAlgorithm)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nOut(int)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/graph/MergeVertex/MergeVertex()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/SubsamplingLayer$Builder(org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType,int%5B%5D,int%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ActivationLayer$Builder/ActivationLayer$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/CenterLossOutputLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/zoo/model/helper/FaceNetHelper/appendGraph(org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder,java.lang.String,int,int%5B%5D,int%5B%5D,int%5B%5D,int%5B%5D,org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType,int,org.nd4j.linalg.activations.Activation,java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cudnnAlgoMode(org.deeplearning4j.nn.conf.layers.ConvolutionLayer$AlgoMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/backprop(boolean)|",
      "|java+method:///org/deeplearning4j/zoo/model/helper/FaceNetHelper/appendGraph(org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder,java.lang.String,int,int%5B%5D,int%5B%5D,int%5B%5D,int%5B%5D,org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType,org.nd4j.linalg.activations.Activation,java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/LocalResponseNormalization$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/CenterLossOutputLayer$Builder/gradientNormalization(org.deeplearning4j.nn.conf.GradientNormalization)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/seed(long)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/l2(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/CenterLossOutputLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/setOutputs(java.lang.String%5B%5D)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/NeuralNetConfiguration$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/pretrain(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/BatchNormalization$Builder/nIn(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addInputs(java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutional(long,long,long)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/pnorm(int)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder(int%5B%5D,int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addLayer(java.lang.String,org.deeplearning4j.nn.conf.layers.Layer,java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/addVertex(java.lang.String,org.deeplearning4j.nn.conf.graph.GraphVertex,java.lang.String%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/CenterLossOutputLayer$Builder/lossFunction(org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nIn(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/CenterLossOutputLayer$Builder/alpha(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/convolutionMode(org.deeplearning4j.nn.conf.ConvolutionMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cacheMode(org.deeplearning4j.nn.conf.CacheMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/weightInit(org.deeplearning4j.nn.weights.WeightInit)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/CenterLossOutputLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/CenterLossOutputLayer$Builder/lambda(double)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/updater(org.nd4j.linalg.learning.config.IUpdater)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder(int%5B%5D)|"
    ],
    "affectedLib": "org.deeplearning4j:deeplearning4j-nn:1.0.0-beta2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta",
    "coordinatesV2": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta2",
    "caller": "|java+method:///org/deeplearning4j/zoo/model/LeNet/conf()|",
    "called": "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/build()|",
    "v1Body": [
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/name(java.lang.String)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/DenseLayer$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutionalFlat(int,int,int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/build()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/NeuralNetConfiguration$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/name(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/list()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/name(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/weightInit(org.deeplearning4j.nn.weights.WeightInit)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/inferenceWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/pretrain(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/trainingWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/optimizationAlgo(org.deeplearning4j.nn.api.OptimizationAlgorithm)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/SubsamplingLayer$Builder(org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType,int%5B%5D,int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cudnnAlgoMode(org.deeplearning4j.nn.conf.layers.ConvolutionLayer$AlgoMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/setInputType(org.deeplearning4j.nn.conf.inputs.InputType)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/OutputLayer$Builder(org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/seed(long)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/layer(int,org.deeplearning4j.nn.conf.layers.Layer)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/name(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/build()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder(int%5B%5D,int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nIn(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/convolutionMode(org.deeplearning4j.nn.conf.ConvolutionMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/backprop(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cacheMode(org.deeplearning4j.nn.conf.CacheMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/updater(org.nd4j.linalg.learning.config.IUpdater)|"
    ],
    "v2Body": [
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/name(java.lang.String)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/DenseLayer$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/inputs/InputType/convolutionalFlat(long,long,long)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/build()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/NeuralNetConfiguration$Builder()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/name(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/list()|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/name(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/weightInit(org.deeplearning4j.nn.weights.WeightInit)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/inferenceWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/pretrain(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/trainingWorkspaceMode(org.deeplearning4j.nn.conf.WorkspaceMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/optimizationAlgo(org.deeplearning4j.nn.api.OptimizationAlgorithm)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/SubsamplingLayer$Builder/SubsamplingLayer$Builder(org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType,int%5B%5D,int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nOut(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cudnnAlgoMode(org.deeplearning4j.nn.conf.layers.ConvolutionLayer$AlgoMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/setInputType(org.deeplearning4j.nn.conf.inputs.InputType)|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/OutputLayer$Builder(org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/build()|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/seed(long)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/layer(int,org.deeplearning4j.nn.conf.layers.Layer)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/name(java.lang.String)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/OutputLayer$Builder/build()|",
      "|java+constructor:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/ConvolutionLayer$Builder(int%5B%5D,int%5B%5D)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/DenseLayer$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/layers/ConvolutionLayer$Builder/nIn(int)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/convolutionMode(org.deeplearning4j.nn.conf.ConvolutionMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$ListBuilder/backprop(boolean)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/cacheMode(org.deeplearning4j.nn.conf.CacheMode)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/activation(org.nd4j.linalg.activations.Activation)|",
      "|java+method:///org/deeplearning4j/nn/conf/NeuralNetConfiguration$Builder/updater(org.nd4j.linalg.learning.config.IUpdater)|"
    ],
    "affectedLib": "org.deeplearning4j:deeplearning4j-nn:1.0.0-beta2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta",
    "coordinatesV2": "org.deeplearning4j:deeplearning4j-zoo:1.0.0-beta2",
    "caller": "|java+initializer:///org/deeplearning4j/zoo/ZooModel/ZooModel$initializer|",
    "called": "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+constructor:///java/io/File/File(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/System/getProperty(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|"
    ],
    "affectedLib": "org.slf4j:slf4j-api:1.7.21",
    "change": "UPDATED"
  }
]