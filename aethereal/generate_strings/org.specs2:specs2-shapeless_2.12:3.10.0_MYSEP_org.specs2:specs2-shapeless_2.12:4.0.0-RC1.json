[
  {
    "coordinatesV1": "org.specs2:specs2-shapeless_2.12:3.10.0",
    "coordinatesV2": "org.specs2:specs2-shapeless_2.12:4.0.0-RC1",
    "caller": "|java+method:///org/specs2/matcher/describe/IsCaseClass$/checkCaseClassMacro(scala.reflect.macros.whitebox.Context,scala.reflect.api.TypeTags$WeakTypeTag)|",
    "called": "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
    "v1Body": [
      "|java+method:///scala/reflect/api/Symbols$SymbolApi/isClass()|",
      "|java+method:///scala/reflect/api/Names$TypeNameExtractor/apply(java.lang.String)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/reflect/api/Symbols$ClassSymbolApi/isCaseClass()|",
      "|java+method:///scala/reflect/api/Internals$ReificationSupportApi/SyntacticSelectTerm()|",
      "|java+method:///scala/reflect/api/Internals$ReificationSupportApi$SyntacticTypeAppliedExtractor/apply(scala.reflect.api.Trees$TreeApi,scala.collection.immutable.List)|",
      "|java+method:///scala/reflect/macros/Universe/internal()|",
      "|java+method:///scala/reflect/api/Types$TypeApi/typeSymbol()|",
      "|java+method:///scala/reflect/macros/Universe/rootMirror()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///scala/reflect/api/Internals$ReificationSupportApi/SyntacticSelectType()|",
      "|java+method:///scala/reflect/macros/Universe/noSelfType()|",
      "|java+method:///scala/reflect/api/Internals$ReificationSupportApi$SyntacticNewExtractor/apply(scala.collection.immutable.List,scala.collection.immutable.List,scala.reflect.api.Trees$TreeApi,scala.collection.immutable.List)|",
      "|java+method:///scala/reflect/api/Internals$ReificationSupportApi$SyntacticTermIdentExtractor/apply(scala.reflect.api.Names$TermNameApi,boolean)|",
      "|java+method:///scala/reflect/macros/Universe/WeakTypeTag()|",
      "|java+method:///scala/reflect/macros/whitebox/Context/error(scala.reflect.api.Position,java.lang.String)|",
      "|java+constructor:///org/specs2/matcher/describe/IsCaseClass$$typecreator1$1/IsCaseClass$$typecreator1$1(scala.reflect.api.TypeTags$WeakTypeTag)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///scala/reflect/api/Internals$ReificationSupportApi/SyntacticAppliedType()|",
      "|java+method:///scala/reflect/macros/Universe/TermName()|",
      "|java+method:///scala/reflect/api/Internals$InternalApi/reificationSupport()|",
      "|java+method:///scala/reflect/api/Liftables$Liftable/apply(java.lang.Object)|",
      "|java+method:///scala/reflect/macros/whitebox/Context/enclosingPosition()|",
      "|java+method:///scala/reflect/api/Internals$ReificationSupportApi/SyntacticNew()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder(int)|",
      "|java+method:///scala/reflect/api/TypeTags$WeakTypeTag$/apply(scala.reflect.api.Mirror,scala.reflect.api.TypeCreator)|",
      "|java+method:///scala/reflect/api/Internals$ReificationSupportApi$SyntacticSelectTypeExtractor/apply(scala.reflect.api.Trees$TreeApi,scala.reflect.api.Names$TypeNameApi)|",
      "|java+method:///scala/collection/immutable/List$/apply(scala.collection.Seq)|",
      "|java+method:///scala/reflect/api/Internals$ReificationSupportApi/SyntacticTermIdent()|",
      "|java+method:///scala/reflect/api/Liftables$Liftable$/liftType()|",
      "|java+method:///scala/reflect/api/Internals$ReificationSupportApi$SyntacticSelectTermExtractor/apply(scala.reflect.api.Trees$TreeApi,scala.reflect.api.Names$TermNameApi)|",
      "|java+method:///scala/reflect/api/Names$TermNameExtractor/apply(java.lang.String)|",
      "|java+method:///scala/reflect/macros/Universe/TypeName()|",
      "|java+method:///scala/reflect/api/Symbols$SymbolApi/asClass()|",
      "|java+method:///scala/reflect/macros/Universe/Liftable()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///scala/reflect/macros/whitebox/Context/universe()|",
      "|java+method:///scala/reflect/macros/whitebox/Context/Expr(scala.reflect.api.Trees$TreeApi,scala.reflect.api.TypeTags$WeakTypeTag)|",
      "|java+method:///scala/reflect/macros/whitebox/Context/weakTypeOf(scala.reflect.api.TypeTags$WeakTypeTag)|"
    ],
    "v2Body": [
      "|java+method:///scala/reflect/api/Symbols$SymbolApi/isClass()|",
      "|java+method:///scala/reflect/api/Internals$ReificationSupportApi/SyntacticAppliedType()|",
      "|java+method:///scala/reflect/api/Names$TypeNameExtractor/apply(java.lang.String)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/reflect/api/Symbols$ClassSymbolApi/isCaseClass()|",
      "|java+method:///scala/reflect/api/Internals$ReificationSupportApi/SyntacticSelectTerm()|",
      "|java+method:///scala/reflect/macros/Universe/internal()|",
      "|java+method:///scala/reflect/api/Types$TypeApi/typeSymbol()|",
      "|java+method:///scala/reflect/macros/Universe/rootMirror()|",
      "|java+method:///scala/reflect/api/Internals$ReificationSupportApi/SyntacticSelectType()|",
      "|java+method:///scala/reflect/api/Internals$ReificationSupportApi$SyntacticNewExtractor/apply(scala.collection.immutable.List,scala.collection.immutable.List,scala.reflect.api.Trees$TreeApi,scala.collection.immutable.List)|",
      "|java+method:///scala/reflect/api/Internals$ReificationSupportApi$SyntacticTermIdentExtractor/apply(scala.reflect.api.Names$TermNameApi,boolean)|",
      "|java+method:///scala/reflect/macros/Universe/WeakTypeTag()|",
      "|java+method:///scala/reflect/macros/whitebox/Context/error(scala.reflect.api.Position,java.lang.String)|",
      "|java+constructor:///org/specs2/matcher/describe/IsCaseClass$$typecreator1$1/IsCaseClass$$typecreator1$1(scala.reflect.api.TypeTags$WeakTypeTag)|",
      "|java+method:///scala/reflect/macros/Universe/TermName()|",
      "|java+method:///scala/reflect/api/Internals$InternalApi/reificationSupport()|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///scala/reflect/api/Internals$ReificationSupportApi$SyntacticTypeAppliedExtractor/apply(scala.reflect.api.Trees$TreeApi,scala.collection.immutable.List)|",
      "|java+method:///scala/reflect/api/Liftables$Liftable/apply(java.lang.Object)|",
      "|java+method:///scala/reflect/macros/whitebox/Context/enclosingPosition()|",
      "|java+method:///scala/reflect/api/Internals$ReificationSupportApi/SyntacticNew()|",
      "|java+method:///scala/reflect/api/TypeTags$WeakTypeTag$/apply(scala.reflect.api.Mirror,scala.reflect.api.TypeCreator)|",
      "|java+method:///scala/reflect/api/Internals$ReificationSupportApi$SyntacticSelectTypeExtractor/apply(scala.reflect.api.Trees$TreeApi,scala.reflect.api.Names$TypeNameApi)|",
      "|java+method:///scala/collection/immutable/List$/apply(scala.collection.Seq)|",
      "|java+method:///scala/reflect/api/Internals$ReificationSupportApi/SyntacticTermIdent()|",
      "|java+method:///scala/reflect/api/Liftables$Liftable$/liftType()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/reflect/api/Internals$ReificationSupportApi$SyntacticSelectTermExtractor/apply(scala.reflect.api.Trees$TreeApi,scala.reflect.api.Names$TermNameApi)|",
      "|java+method:///scala/reflect/api/Names$TermNameExtractor/apply(java.lang.String)|",
      "|java+method:///scala/reflect/macros/Universe/TypeName()|",
      "|java+method:///scala/reflect/api/Symbols$SymbolApi/asClass()|",
      "|java+method:///scala/reflect/macros/Universe/Liftable()|",
      "|java+method:///scala/reflect/macros/Universe/noSelfType()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/reflect/macros/whitebox/Context/universe()|",
      "|java+method:///scala/reflect/macros/whitebox/Context/Expr(scala.reflect.api.Trees$TreeApi,scala.reflect.api.TypeTags$WeakTypeTag)|",
      "|java+method:///scala/reflect/macros/whitebox/Context/weakTypeOf(scala.reflect.api.TypeTags$WeakTypeTag)|"
    ],
    "affectedLib": "org.scala-lang:scala-library:2.12.3",
    "change": "UPDATED"
  }
]