[
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.1.0-beta2",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-rc1",
    "caller": "|java+method:///org/apache/cassandra/config/CFMetaData/fromThrift(org.apache.cassandra.thrift.CfDef)|",
    "called": "|java+method:///org/apache/cassandra/thrift/CfDef/isSetId()|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetKey_validation_class()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/bloomFilterFpChance(java.lang.Double)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetId()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetValue_alias()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/compressionParameters(org.apache.cassandra.io.compress.CompressionParameters)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/valueAlias(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/io/compress/CompressionParameters/create(java.util.Map)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetCompaction_strategy()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetGc_grace_seconds()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetColumn_aliases()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData$Caching/fromString(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetCaching()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/comment(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/util/HashMap/HashMap(java.util.Map)|",
      "|java+method:///org/apache/cassandra/config/Schema/nextCFId()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/applyImplicitDefaults(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/gcGraceSeconds(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetMin_compaction_threshold()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/maxCompactionThreshold(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetBloom_filter_fp_chance()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/caching(org.apache.cassandra.config.CFMetaData$Caching)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/readRepairChance(double)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetCompaction_strategy_options()|",
      "|java+method:///org/apache/cassandra/db/marshal/TypeParser/parse(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/config/CFMetaData/CFMetaData(java.lang.String,java.lang.String,org.apache.cassandra.db.ColumnFamilyType,org.apache.cassandra.db.marshal.AbstractType,org.apache.cassandra.db.marshal.AbstractType,int)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/compactionStrategyOptions(java.util.Map)|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/fromThrift(java.util.List)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/columnAliases(java.util.List)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetKey_alias()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/createCompactionStrategy(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/defaultValidator(org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyType/create(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/minCompactionThreshold(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetMax_compaction_threshold()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/keyValidator(org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/columnMetadata(java.util.Map)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetDclocal_read_repair_chance()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/keyAlias(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/replicateOnWrite(boolean)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/dcLocalReadRepairChance(double)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/validate()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetKey_validation_class()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/bloomFilterFpChance(java.lang.Double)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetGc_grace_seconds()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetId()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/compressionParameters(org.apache.cassandra.io.compress.CompressionParameters)|",
      "|java+method:///org/apache/cassandra/io/compress/CompressionParameters/create(java.util.Map)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetCompaction_strategy()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData$Caching/fromString(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetCaching()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/comment(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/util/HashMap/HashMap(java.util.Map)|",
      "|java+method:///org/apache/cassandra/config/Schema/nextCFId()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/applyImplicitDefaults(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/gcGraceSeconds(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetRead_repair_chance()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetMin_compaction_threshold()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/maxCompactionThreshold(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetBloom_filter_fp_chance()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/caching(org.apache.cassandra.config.CFMetaData$Caching)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/readRepairChance(double)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetCompaction_strategy_options()|",
      "|java+method:///org/apache/cassandra/db/marshal/TypeParser/parse(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/fromThrift(java.util.List)|",
      "|java+constructor:///org/apache/cassandra/config/CFMetaData/CFMetaData(java.lang.String,java.lang.String,org.apache.cassandra.db.ColumnFamilyType,org.apache.cassandra.db.marshal.AbstractType,org.apache.cassandra.db.marshal.AbstractType,int)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/compactionStrategyOptions(java.util.Map)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetKey_alias()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/createCompactionStrategy(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/defaultValidator(org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyType/create(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/minCompactionThreshold(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetMax_compaction_threshold()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/keyValidator(org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/columnMetadata(java.util.Map)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetDclocal_read_repair_chance()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/keyAlias(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/replicateOnWrite(boolean)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/dcLocalReadRepairChance(double)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.1.0-beta2",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-rc1",
    "caller": "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/process(java.util.List,org.apache.cassandra.thrift.CqlMetadata,java.util.List)|",
    "called": "|java+method:///org/apache/cassandra/thrift/Column/setTimestamp(long)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/getExpandedSelection()|",
      "|java+method:///org/apache/cassandra/db/IColumn/name()|",
      "|java+method:///org/apache/cassandra/thrift/Column/setTimestamp(long)|",
      "|java+method:///org/apache/cassandra/db/marshal/CompositeType/split(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/db/IColumn/isMarkedForDelete()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/value(org.apache.cassandra.db.IColumn)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///org/apache/cassandra/thrift/CqlRow/CqlRow(java.nio.ByteBuffer,java.util.List)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Collections/reverse(java.util.List)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/handleGroup(java.util.List,java.nio.ByteBuffer,java.nio.ByteBuffer%5B%5D,java.util.Map,org.apache.cassandra.thrift.CqlMetadata)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/iterator()|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$Parameters/access$300(org.apache.cassandra.cql3.statements.SelectStatement$Parameters)|",
      "|java+method:///org/apache/cassandra/thrift/Column/setValue(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$Parameters/access$100(org.apache.cassandra.cql3.statements.SelectStatement$Parameters)|",
      "|java+method:///java/util/List/subList(int,int)|",
      "|java+constructor:///org/apache/cassandra/thrift/Column/Column(java.nio.ByteBuffer)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/cassandra/db/IColumn/timestamp()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/getColumn(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/cql3/CFDefinition$Name$Kind/ordinal()|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/isSameRow(java.nio.ByteBuffer%5B%5D,java.nio.ByteBuffer%5B%5D)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/columnsInOrder(org.apache.cassandra.db.ColumnFamily,java.util.List)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/addToSchema(org.apache.cassandra.thrift.CqlMetadata,org.apache.cassandra.utils.Pair)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/getExpandedSelection()|",
      "|java+method:///java/nio/ByteBuffer/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/db/IColumn/name()|",
      "|java+method:///org/apache/cassandra/cql3/Term/getByteBuffer(org.apache.cassandra.db.marshal.AbstractType,java.util.List)|",
      "|java+method:///org/apache/cassandra/thrift/Column/setTimestamp(long)|",
      "|java+method:///org/apache/cassandra/db/marshal/CompositeType/split(java.nio.ByteBuffer)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///org/apache/cassandra/thrift/CqlRow/CqlRow(java.nio.ByteBuffer,java.util.List)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Collections/reverse(java.util.List)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/handleGroup(java.util.List,java.nio.ByteBuffer,java.nio.ByteBuffer%5B%5D,java.util.Map,org.apache.cassandra.thrift.CqlMetadata)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/iterator()|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$Parameters/access$300(org.apache.cassandra.cql3.statements.SelectStatement$Parameters)|",
      "|java+method:///org/apache/cassandra/thrift/Column/setValue(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$Parameters/access$100(org.apache.cassandra.cql3.statements.SelectStatement$Parameters)|",
      "|java+method:///java/util/List/subList(int,int)|",
      "|java+constructor:///org/apache/cassandra/thrift/Column/Column(java.nio.ByteBuffer)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/cassandra/db/IColumn/timestamp()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/getColumn(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/db/IColumn/isMarkedForDelete()|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$Restriction/bound(org.apache.cassandra.cql3.statements.SelectStatement$Bound)|",
      "|java+method:///org/apache/cassandra/cql3/CFDefinition$Name$Kind/ordinal()|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/isSameRow(java.nio.ByteBuffer%5B%5D,java.nio.ByteBuffer%5B%5D)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/columnsInOrder(org.apache.cassandra.db.ColumnFamily,java.util.List)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$Restriction/isInclusive(org.apache.cassandra.cql3.statements.SelectStatement$Bound)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/value(org.apache.cassandra.db.IColumn)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/addToSchema(org.apache.cassandra.thrift.CqlMetadata,org.apache.cassandra.utils.Pair)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.1.0-beta2",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-rc1",
    "caller": "|java+method:///org/apache/cassandra/config/CFMetaData/toThrift()|",
    "called": "|java+method:///org/apache/cassandra/thrift/CfDef/setBloom_filter_fp_chance(double)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/thrift/CfDef/setCompaction_strategy_options(java.util.Map)|",
      "|java+constructor:///org/apache/cassandra/thrift/CfDef/CfDef(java.lang.String,java.lang.String)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError(java.lang.Object)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setReplicate_on_write(boolean)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setMax_compaction_threshold(int)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData$Caching/toString()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/enforceCommentNotNull(java.lang.CharSequence)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setMin_compaction_threshold(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setDefault_validation_class(java.lang.String)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setId(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setRead_repair_chance(double)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setKey_validation_class(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setBloom_filter_fp_chance(double)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setCompaction_strategy(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/getIndexOptions()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setCompression_options(java.util.Map)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/setIndex_type(org.apache.cassandra.thrift.IndexType)|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/getIndexType()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/setIndex_options(java.util.Map)|",
      "|java+constructor:///java/util/HashMap/HashMap(java.util.Map)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/setName(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setKey_alias(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setGc_grace_seconds(int)|",
      "|java+method:///org/apache/cassandra/io/compress/CompressionParameters/asThriftOptions()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/getValidator()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyType/name()|",
      "|java+method:///java/util/Map/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Double/doubleValue()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/setValidation_class(java.lang.String)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///org/apache/cassandra/db/marshal/AbstractType/toString()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setSubcomparator_type(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setDclocal_read_repair_chance(double)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setComment(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setColumn_metadata(java.util.List)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setCaching(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/setIndex_name(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/ColumnDef/ColumnDef()|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/getIndexName()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setColumn_type(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setComparator_type(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/thrift/CfDef/setCompaction_strategy_options(java.util.Map)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setCompression_options(java.util.Map)|",
      "|java+constructor:///java/util/HashMap/HashMap(java.util.Map)|",
      "|java+constructor:///org/apache/cassandra/thrift/CfDef/CfDef(java.lang.String,java.lang.String)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError(java.lang.Object)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setReplicate_on_write(boolean)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setMax_compaction_threshold(int)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData$Caching/toString()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/enforceCommentNotNull(java.lang.CharSequence)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setMin_compaction_threshold(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setDefault_validation_class(java.lang.String)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setId(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setRead_repair_chance(double)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setKey_validation_class(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setBloom_filter_fp_chance(double)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setCompaction_strategy(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/toThrift()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setKey_alias(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setGc_grace_seconds(int)|",
      "|java+method:///org/apache/cassandra/io/compress/CompressionParameters/asThriftOptions()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyType/name()|",
      "|java+method:///java/util/Map/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Double/doubleValue()|",
      "|java+method:///org/apache/cassandra/db/marshal/AbstractType/toString()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setSubcomparator_type(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setDclocal_read_repair_chance(double)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setComment(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setColumn_metadata(java.util.List)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setCaching(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setColumn_type(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setComparator_type(java.lang.String)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.1.0-beta2",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-rc1",
    "caller": "|java+method:///org/apache/cassandra/cli/CliClient/executeAddKeySpace(org.antlr.runtime.tree.Tree)|",
    "called": "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/system_add_keyspace(org.apache.cassandra.thrift.KsDef)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_keyspace(java.lang.String)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/updateKsDefAttributes(org.antlr.runtime.tree.Tree,org.apache.cassandra.thrift.KsDef)|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///org/antlr/runtime/tree/Tree/getChild(int)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getText()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/validateSchemaIsSettled(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/system_add_keyspace(org.apache.cassandra.thrift.KsDef)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/thrift/KsDef/KsDef(java.lang.String,java.lang.String,java.util.List)|",
      "|java+method:///org/apache/cassandra/cli/CliMain/isConnected()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_keyspace(java.lang.String)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/updateKsDefAttributes(org.antlr.runtime.tree.Tree,org.apache.cassandra.thrift.KsDef)|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///org/antlr/runtime/tree/Tree/getChild(int)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getText()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/validateSchemaIsSettled(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/system_add_keyspace(org.apache.cassandra.thrift.KsDef)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/cli/CliUtils/unescapeSQLString(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/KsDef/KsDef(java.lang.String,java.lang.String,java.util.List)|",
      "|java+method:///org/apache/cassandra/cli/CliMain/isConnected()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.1.0-beta2",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-rc1",
    "caller": "|java+method:///org/apache/cassandra/cql3/statements/DeleteStatement/mutationForKey(org.apache.cassandra.cql3.CFDefinition,org.apache.cassandra.service.ClientState,java.nio.ByteBuffer,org.apache.cassandra.cql3.ColumnNameBuilder,java.util.List)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/apache/cassandra/db/filter/QueryPath/QueryPath(java.lang.String,java.nio.ByteBuffer,java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/cql3/ColumnNameBuilder/copy()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/apache/cassandra/cql3/statements/DeleteStatement/columnFamily()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/cql3/QueryProcessor/validateColumnName(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/cql3/ColumnNameBuilder/componentCount()|",
      "|java+constructor:///org/apache/cassandra/db/RowMutation/RowMutation(java.lang.String,java.nio.ByteBuffer)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/db/filter/QueryPath/QueryPath(java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/RowMutation/delete(org.apache.cassandra.db.filter.QueryPath,long)|",
      "|java+method:///org/apache/cassandra/cql3/statements/DeleteStatement/getTimestamp(org.apache.cassandra.service.ClientState)|",
      "|java+method:///org/apache/cassandra/cql3/ColumnNameBuilder/add(java.nio.ByteBuffer)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/cql3/ColumnNameBuilder/build()|",
      "|java+method:///org/apache/cassandra/cql3/CFDefinition/get(org.apache.cassandra.cql3.ColumnIdentifier)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/cassandra/db/filter/QueryPath/QueryPath(java.lang.String,java.nio.ByteBuffer,java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/cql3/ColumnNameBuilder/copy()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/apache/cassandra/cql3/statements/DeleteStatement/columnFamily()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/cql3/ColumnNameBuilder/componentCount()|",
      "|java+constructor:///org/apache/cassandra/db/RowMutation/RowMutation(java.lang.String,java.nio.ByteBuffer)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/db/filter/QueryPath/QueryPath(java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/RowMutation/delete(org.apache.cassandra.db.filter.QueryPath,long)|",
      "|java+method:///org/apache/cassandra/cql3/statements/DeleteStatement/getTimestamp(org.apache.cassandra.service.ClientState)|",
      "|java+method:///org/apache/cassandra/cql3/ColumnNameBuilder/add(java.nio.ByteBuffer)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/cql3/ColumnNameBuilder/build()|",
      "|java+method:///org/apache/cassandra/cql3/CFDefinition/get(org.apache.cassandra.cql3.ColumnIdentifier)|",
      "|java+method:///org/apache/cassandra/cql3/QueryProcessor/validateKey(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/cql3/QueryProcessor/validateColumnName(java.nio.ByteBuffer)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.1.0-beta2",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-rc1",
    "caller": "|java+method:///org/apache/cassandra/cql/QueryProcessor/processStatement(org.apache.cassandra.cql.CQLStatement,org.apache.cassandra.service.ClientState,java.util.List)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/CqlMetadata/CqlMetadata(java.util.Map,java.util.Map,java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/bytes(long)|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/isSetKeyspace()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getColumnFamily()|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/truncateBlocking(java.lang.String,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getColumnNames()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql/CreateKeyspaceStatement/getStrategyOptions()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/cassandra/cql/CreateKeyspaceStatement/validate()|",
      "|java+method:///org/apache/cassandra/cql/DeleteStatement/getConsistencyLevel()|",
      "|java+method:///org/apache/cassandra/cql/CreateColumnFamilyStatement/getCFMetaData(java.lang.String,java.util.List)|",
      "|java+method:///java/util/Collections/emptyMap()|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql/CreateIndexStatement/getColumnFamily()|",
      "|java+method:///org/apache/cassandra/cql/BatchStatement/isSetTimestamp()|",
      "|java+method:///java/nio/ByteBuffer/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKsDef(org.apache.cassandra.thrift.KsDef)|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/setStrategy_options(java.util.Map)|",
      "|java+method:///org/apache/cassandra/cql/UpdateStatement/getConsistencyLevel()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/isColumnsReversed()|",
      "|java+method:///org/apache/cassandra/cql/Term/getByteBuffer()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/extractKeyAliasFromColumns(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/db/marshal/AbstractType/getString(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/cql/DeleteStatement/prepareRowMutations(java.lang.String,org.apache.cassandra.service.ClientState,java.util.List)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Collections/reverse(java.util.List)|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/validateSelect(java.lang.String,org.apache.cassandra.cql.SelectStatement,java.util.List)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/setIndex_type(org.apache.cassandra.thrift.IndexType)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/getSortedColumns()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasKeyspaceSchemaAccess(org.apache.cassandra.auth.Permission)|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/isCountOperation()|",
      "|java+method:///org/apache/cassandra/cql/BatchStatement/getMutations(java.lang.String,org.apache.cassandra.service.ClientState,java.util.List)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/IOException/toString()|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/getKeyString(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateTable(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql/AlterTableStatement/getCfDef(java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/IColumn/name()|",
      "|java+method:///org/apache/cassandra/cql/CreateIndexStatement/getIndexName()|",
      "|java+method:///org/apache/cassandra/cql/CreateKeyspaceStatement/getName()|",
      "|java+method:///org/apache/cassandra/cql/Term/getText()|",
      "|java+method:///org/apache/cassandra/cli/CliUtils/unescapeSQLString(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql/BatchStatement/getStatements()|",
      "|java+method:///org/apache/cassandra/cql/CreateIndexStatement/getColumnName()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError(java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/thrift/TimedOutException/TimedOutException()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getColumnDefinition(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/batchUpdate(org.apache.cassandra.service.ClientState,java.util.List,org.apache.cassandra.thrift.ConsistencyLevel,java.util.List)|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+method:///org/apache/cassandra/thrift/Column/setValue(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/isColumnRange()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getKeyspace()|",
      "|java+constructor:///org/apache/cassandra/thrift/Column/Column(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/service/MigrationManager/announceKeyspaceDrop(java.lang.String)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/mutate(java.util.List,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/toString()|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/getValidator()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/isKeyRange()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///org/apache/cassandra/thrift/CqlResult/CqlResult()|",
      "|java+method:///org/apache/cassandra/thrift/Column/setName(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/fromThrift(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///org/apache/cassandra/cql/BatchStatement/getConsistencyLevel()|",
      "|java+method:///org/apache/cassandra/service/MigrationManager/announceNewColumnFamily(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/thriftify(org.apache.cassandra.db.IColumn)|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/getMessage()|",
      "|java+constructor:///org/apache/cassandra/thrift/CqlMetadata/CqlMetadata(java.util.Map,java.util.Map,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/getColumn(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/Column/setTimestamp(long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/getSlice(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.cql.SelectStatement,java.util.List)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getDefaultValidator()|",
      "|java+method:///java/util/EnumSet/contains(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasColumnFamilyAccess(java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateConsistencyLevel(java.lang.String,org.apache.cassandra.thrift.ConsistencyLevel,org.apache.cassandra.thrift.RequestType)|",
      "|java+method:///org/apache/cassandra/service/MigrationManager/announceColumnFamilyDrop(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/service/ClientState/getRawKeyspace()|",
      "|java+method:///org/apache/cassandra/db/IColumn/isMarkedForDelete()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKeyspaceNotSystem(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/Schema/getCFMetaData(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getKeyValidator()|",
      "|java+method:///org/apache/cassandra/thrift/InvalidRequestException/initCause(java.lang.Throwable)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/thrift/KsDef/KsDef(java.lang.String,java.lang.String,java.util.List)|",
      "|java+method:///org/apache/cassandra/cql/Term/getByteBuffer(org.apache.cassandra.db.marshal.AbstractType,java.util.List)|",
      "|java+method:///org/apache/cassandra/service/ClientState/getKeyspace()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getKeyAlias()|",
      "|java+method:///org/apache/cassandra/cql/StatementType/ordinal()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKeyspaceNotYetExisting(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/validateSchemaAgreement()|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/validateCountOperation(org.apache.cassandra.cql.SelectStatement)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/setIndex_name(java.lang.String)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/bytes(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/UnavailableException/UnavailableException()|",
      "|java+constructor:///org/apache/cassandra/thrift/Column/Column()|",
      "|java+constructor:///org/apache/cassandra/thrift/CqlRow/CqlRow()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/isFullWildcard()|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasColumnFamilyAccess(java.lang.String,java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getKeys()|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasColumnFamilySchemaAccess(org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/cql/DropIndexStatement/generateCFMetadataUpdate(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql/BatchStatement/getTimeToLive()|",
      "|java+method:///org/apache/cassandra/service/MigrationManager/announceNewKeyspace(org.apache.cassandra.config.KSMetaData)|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/multiRangeSlice(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.cql.SelectStatement,java.util.List)|",
      "|java+method:///org/apache/cassandra/config/KSMetaData/fromThrift(org.apache.cassandra.thrift.KsDef,org.apache.cassandra.config.CFMetaData%5B%5D)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/cassandra/cql/AbstractModification/isSetTimestamp()|",
      "|java+method:///org/apache/cassandra/cql/CreateKeyspaceStatement/getStrategyClass()|",
      "|java+method:///org/apache/cassandra/cql/StatementType/toString()|",
      "|java+method:///org/slf4j/Logger/isDebugEnabled()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/toThrift()|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/validateSchemaIsSettled()|",
      "|java+method:///org/apache/cassandra/service/MigrationManager/announceColumnFamilyUpdate(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateCfDef(org.apache.cassandra.thrift.CfDef,org.apache.cassandra.config.CFMetaData)|",
      "|java+constructor:///org/apache/cassandra/thrift/CqlRow/CqlRow(java.nio.ByteBuffer,java.util.List)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getKeyName()|",
      "|java+method:///org/apache/cassandra/cql/AbstractModification/isSetConsistencyLevel()|",
      "|java+method:///org/apache/cassandra/db/marshal/TypeParser/getShortName(org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///org/apache/cassandra/thrift/UnavailableException/initCause(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/addDefaultIndexNames(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///org/apache/cassandra/service/ClientState/setKeyspace(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/validateKeyAlias(org.apache.cassandra.config.CFMetaData,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/bytes(long)|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getColumnFamily()|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/truncateBlocking(java.lang.String,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getColumnNames()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql/CreateKeyspaceStatement/getStrategyOptions()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/cassandra/cql/CreateKeyspaceStatement/validate()|",
      "|java+method:///org/apache/cassandra/cql/DeleteStatement/getConsistencyLevel()|",
      "|java+method:///org/apache/cassandra/cql/CreateColumnFamilyStatement/getCFMetaData(java.lang.String,java.util.List)|",
      "|java+method:///java/util/Collections/emptyMap()|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql/CreateIndexStatement/getColumnFamily()|",
      "|java+method:///org/apache/cassandra/cql/BatchStatement/isSetTimestamp()|",
      "|java+method:///java/nio/ByteBuffer/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/cql/UpdateStatement/getConsistencyLevel()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/isColumnsReversed()|",
      "|java+method:///org/apache/cassandra/cql/Term/getByteBuffer()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/extractKeyAliasFromColumns(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/db/marshal/AbstractType/getString(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/cql/DeleteStatement/prepareRowMutations(java.lang.String,org.apache.cassandra.service.ClientState,java.util.List)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Collections/reverse(java.util.List)|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/validateSelect(java.lang.String,org.apache.cassandra.cql.SelectStatement,java.util.List)|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/setIndexType(org.apache.cassandra.thrift.IndexType,java.util.Map)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/getSortedColumns()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasKeyspaceSchemaAccess(org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/getIndexType()|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/isCountOperation()|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/setIndexName(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql/BatchStatement/getMutations(java.lang.String,org.apache.cassandra.service.ClientState,java.util.List)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/IOException/toString()|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/getKeyString(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateTable(java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/IColumn/name()|",
      "|java+method:///org/apache/cassandra/cql/CreateIndexStatement/getIndexName()|",
      "|java+method:///org/apache/cassandra/cql/CreateKeyspaceStatement/getName()|",
      "|java+method:///org/apache/cassandra/cql/Term/getText()|",
      "|java+method:///org/apache/cassandra/cli/CliUtils/unescapeSQLString(java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/IMutation/key()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/clone()|",
      "|java+method:///org/apache/cassandra/cql/BatchStatement/getStatements()|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/validateKey(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getColumn_metadata()|",
      "|java+method:///org/apache/cassandra/cql/CreateIndexStatement/getColumnName()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError(java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/thrift/TimedOutException/TimedOutException()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getColumnDefinition(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/batchUpdate(org.apache.cassandra.service.ClientState,java.util.List,org.apache.cassandra.thrift.ConsistencyLevel,java.util.List)|",
      "|java+method:///org/apache/cassandra/thrift/Column/setValue(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/isColumnRange()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getKeyspace()|",
      "|java+constructor:///org/apache/cassandra/thrift/Column/Column(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/service/MigrationManager/announceKeyspaceDrop(java.lang.String)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/mutate(java.util.List,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/toString()|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/getValidator()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/isKeyRange()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/isSetKeyspace()|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///org/apache/cassandra/thrift/CqlResult/CqlResult()|",
      "|java+method:///org/apache/cassandra/config/KSMetaData/newKeyspace(java.lang.String,java.lang.String,java.util.Map)|",
      "|java+method:///org/apache/cassandra/thrift/Column/setName(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/cql/BatchStatement/getConsistencyLevel()|",
      "|java+method:///org/apache/cassandra/service/MigrationManager/announceNewColumnFamily(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/thriftify(org.apache.cassandra.db.IColumn)|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/getMessage()|",
      "|java+constructor:///org/apache/cassandra/thrift/CqlMetadata/CqlMetadata(java.util.Map,java.util.Map,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/getColumn(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/Column/setTimestamp(long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/getSlice(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.cql.SelectStatement,java.util.List)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getDefaultValidator()|",
      "|java+method:///java/util/EnumSet/contains(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasColumnFamilyAccess(java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateConsistencyLevel(java.lang.String,org.apache.cassandra.thrift.ConsistencyLevel,org.apache.cassandra.thrift.RequestType)|",
      "|java+method:///org/apache/cassandra/service/MigrationManager/announceColumnFamilyDrop(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/service/ClientState/getRawKeyspace()|",
      "|java+method:///org/apache/cassandra/db/IColumn/isMarkedForDelete()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKeyspaceNotSystem(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/Schema/getCFMetaData(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getKeyValidator()|",
      "|java+method:///org/apache/cassandra/thrift/InvalidRequestException/initCause(java.lang.Throwable)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/service/ClientState/getKeyspace()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getKeyAlias()|",
      "|java+method:///org/apache/cassandra/cql/StatementType/ordinal()|",
      "|java+method:///org/apache/cassandra/cql/Term/getByteBuffer(org.apache.cassandra.db.marshal.AbstractType,java.util.List)|",
      "|java+method:///org/apache/cassandra/cql/AlterTableStatement/getCFMetaData(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKeyspaceNotYetExisting(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/validateSchemaAgreement()|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/validateCountOperation(org.apache.cassandra.cql.SelectStatement)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/bytes(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/UnavailableException/UnavailableException()|",
      "|java+constructor:///org/apache/cassandra/thrift/Column/Column()|",
      "|java+constructor:///org/apache/cassandra/thrift/CqlRow/CqlRow()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/isFullWildcard()|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasColumnFamilyAccess(java.lang.String,java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getKeys()|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasColumnFamilySchemaAccess(org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/cql/DropIndexStatement/generateCFMetadataUpdate(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql/BatchStatement/getTimeToLive()|",
      "|java+method:///org/apache/cassandra/service/MigrationManager/announceNewKeyspace(org.apache.cassandra.config.KSMetaData)|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/multiRangeSlice(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.cql.SelectStatement,java.util.List)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/cassandra/cql/AbstractModification/isSetTimestamp()|",
      "|java+method:///org/apache/cassandra/cql/CreateKeyspaceStatement/getStrategyClass()|",
      "|java+method:///org/apache/cassandra/cql/StatementType/toString()|",
      "|java+method:///org/slf4j/Logger/isDebugEnabled()|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/validateSchemaIsSettled()|",
      "|java+method:///org/apache/cassandra/service/MigrationManager/announceColumnFamilyUpdate(org.apache.cassandra.config.CFMetaData)|",
      "|java+constructor:///org/apache/cassandra/thrift/CqlRow/CqlRow(java.nio.ByteBuffer,java.util.List)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getKeyName()|",
      "|java+method:///org/apache/cassandra/cql/AbstractModification/isSetConsistencyLevel()|",
      "|java+method:///org/apache/cassandra/db/marshal/TypeParser/getShortName(org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///org/apache/cassandra/service/ClientState/setKeyspace(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/UnavailableException/initCause(java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/validateKeyAlias(org.apache.cassandra.config.CFMetaData,java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/addDefaultIndexNames()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.1.0-beta2",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-rc1",
    "caller": "|java+method:///org/apache/cassandra/thrift/CassandraServer/system_update_keyspace(org.apache.cassandra.thrift.KsDef)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasKeyspaceSchemaAccess(org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateTable(java.lang.String)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/validateSchemaAgreement()|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/getMessage()|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/getCf_defs()|",
      "|java+method:///org/apache/cassandra/config/KSMetaData/fromThrift(org.apache.cassandra.thrift.KsDef,org.apache.cassandra.config.CFMetaData%5B%5D)|",
      "|java+method:///org/apache/cassandra/service/MigrationManager/announceKeyspaceUpdate(org.apache.cassandra.config.KSMetaData)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKsDef(org.apache.cassandra.thrift.KsDef)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKeyspaceNotSystem(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/InvalidRequestException/initCause(java.lang.Throwable)|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///org/apache/cassandra/config/Schema/getVersion()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/service/MigrationManager/announceKeyspaceUpdate(org.apache.cassandra.config.KSMetaData)|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasKeyspaceSchemaAccess(org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateTable(java.lang.String)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/validateSchemaAgreement()|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/getMessage()|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/getCf_defs()|",
      "|java+method:///org/apache/cassandra/config/KSMetaData/fromThrift(org.apache.cassandra.thrift.KsDef,org.apache.cassandra.config.CFMetaData%5B%5D)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKeyspaceNotSystem(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/InvalidRequestException/initCause(java.lang.Throwable)|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///org/apache/cassandra/config/Schema/getVersion()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.1.0-beta2",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-rc1",
    "caller": "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/initialize(org.apache.hadoop.mapreduce.InputSplit,org.apache.hadoop.mapreduce.TaskAttemptContext)|",
    "called": "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/login(org.apache.cassandra.thrift.AuthenticationRequest)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskAttemptContext/getConfiguration()|",
      "|java+constructor:///org/apache/cassandra/thrift/Cassandra$Client/Cassandra$Client(org.apache.thrift.protocol.TProtocol)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputKeyspacePassword(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/isEmptyPredicate(org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputSlicePredicate(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/cassandra/thrift/AuthenticationRequest/AuthenticationRequest(java.util.Map)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/getLocation()|",
      "|java+method:///org/apache/thrift/transport/TSocket/open()|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputRpcPort(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputIsWide(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputKeyspaceUserName(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getReadConsistencyLevel(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputKeyRange(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputKeyspace(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/set_keyspace(java.lang.String)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputSplitSize(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///org/apache/cassandra/thrift/ConsistencyLevel/valueOf(java.lang.String)|",
      "|java+constructor:///org/apache/thrift/transport/TFramedTransport/TFramedTransport(org.apache.thrift.transport.TTransport)|",
      "|java+constructor:///org/apache/thrift/transport/TSocket/TSocket(java.lang.String,int)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/login(org.apache.cassandra.thrift.AuthenticationRequest)|",
      "|java+constructor:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader$StaticRowIterator/ColumnFamilyRecordReader$StaticRowIterator(org.apache.cassandra.hadoop.ColumnFamilyRecordReader,org.apache.cassandra.hadoop.ColumnFamilyRecordReader$1)|",
      "|java+constructor:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader$WideRowIterator/ColumnFamilyRecordReader$WideRowIterator(org.apache.cassandra.hadoop.ColumnFamilyRecordReader,org.apache.cassandra.hadoop.ColumnFamilyRecordReader$1)|",
      "|java+constructor:///org/apache/cassandra/thrift/TBinaryProtocol/TBinaryProtocol(org.apache.thrift.transport.TTransport)|",
      "|java+method:///org/apache/thrift/transport/TSocket/isOpen()|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputColumnFamily(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getRangeBatchSize(org.apache.hadoop.conf.Configuration)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskAttemptContext/getConfiguration()|",
      "|java+constructor:///org/apache/cassandra/thrift/Cassandra$Client/Cassandra$Client(org.apache.thrift.protocol.TProtocol)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputKeyspacePassword(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/isEmptyPredicate(org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputSlicePredicate(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/cassandra/thrift/AuthenticationRequest/AuthenticationRequest(java.util.Map)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/getLocation()|",
      "|java+method:///org/apache/thrift/transport/TSocket/open()|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputRpcPort(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputIsWide(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputKeyspaceUserName(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getReadConsistencyLevel(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputKeyRange(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputKeyspace(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/set_keyspace(java.lang.String)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputSplitSize(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///org/apache/cassandra/thrift/ConsistencyLevel/valueOf(java.lang.String)|",
      "|java+constructor:///org/apache/thrift/transport/TFramedTransport/TFramedTransport(org.apache.thrift.transport.TTransport)|",
      "|java+constructor:///org/apache/thrift/transport/TSocket/TSocket(java.lang.String,int)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/login(org.apache.cassandra.thrift.AuthenticationRequest)|",
      "|java+constructor:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader$StaticRowIterator/ColumnFamilyRecordReader$StaticRowIterator(org.apache.cassandra.hadoop.ColumnFamilyRecordReader,org.apache.cassandra.hadoop.ColumnFamilyRecordReader$1)|",
      "|java+constructor:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader$WideRowIterator/ColumnFamilyRecordReader$WideRowIterator(org.apache.cassandra.hadoop.ColumnFamilyRecordReader,org.apache.cassandra.hadoop.ColumnFamilyRecordReader$1)|",
      "|java+constructor:///org/apache/cassandra/thrift/TBinaryProtocol/TBinaryProtocol(org.apache.thrift.transport.TTransport)|",
      "|java+method:///org/apache/thrift/transport/TSocket/isOpen()|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputColumnFamily(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getRangeBatchSize(org.apache.hadoop.conf.Configuration)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.1.0-beta2",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-rc1",
    "caller": "|java+method:///org/apache/cassandra/cql3/statements/AlterTableStatement/announceMigration()|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/setValidator(org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///java/nio/ByteBuffer/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/cql3/statements/AlterTableStatement/keyspace()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getColumnDefinition(java.nio.ByteBuffer)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/fromThrift(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///org/apache/cassandra/cql3/statements/AlterTableStatement$Type/ordinal()|",
      "|java+method:///org/apache/cassandra/cql3/statements/AlterTableStatement/applyPropertiesToCfDef(org.apache.cassandra.thrift.CfDef,org.apache.cassandra.cql3.CFPropDefs)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getCfDef()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/cql3/statements/AlterTableStatement/columnFamily()|",
      "|java+method:///org/apache/cassandra/cql3/CFPropDefs/parseType(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/toThrift()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/cql3/CFPropDefs/validate()|",
      "|java+method:///org/apache/cassandra/db/marshal/AbstractType/toString()|",
      "|java+constructor:///org/apache/cassandra/config/ColumnDefinition/ColumnDefinition(java.nio.ByteBuffer,org.apache.cassandra.db.marshal.AbstractType,org.apache.cassandra.thrift.IndexType,java.util.Map,java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql3/CFDefinition$Name$Kind/ordinal()|",
      "|java+method:///org/apache/cassandra/cql3/CFDefinition/get(org.apache.cassandra.cql3.ColumnIdentifier)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/toThrift()|",
      "|java+method:///org/apache/cassandra/service/MigrationManager/announceColumnFamilyUpdate(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///java/util/List/remove(java.lang.Object)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/setValidator(org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///java/nio/ByteBuffer/equals(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getColumn_metadata()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getColumnDefinition(java.nio.ByteBuffer)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///org/apache/cassandra/cql3/statements/AlterTableStatement$Type/ordinal()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getCfDef()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/defaultValidator(org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/cassandra/cql3/CFPropDefs/parseType(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql3/statements/AlterTableStatement/keyspace()|",
      "|java+method:///org/apache/cassandra/cql3/statements/AlterTableStatement/applyPropertiesToCFMetadata(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.cql3.CFPropDefs)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/clone()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/cql3/CFPropDefs/validate()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/cassandra/cql3/CFDefinition/get(org.apache.cassandra.cql3.ColumnIdentifier)|",
      "|java+constructor:///org/apache/cassandra/config/ColumnDefinition/ColumnDefinition(java.nio.ByteBuffer,org.apache.cassandra.db.marshal.AbstractType,org.apache.cassandra.thrift.IndexType,java.util.Map,java.lang.String,java.lang.Integer)|",
      "|java+method:///org/apache/cassandra/cql3/CFDefinition$Name$Kind/ordinal()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/keyValidator(org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///org/apache/cassandra/cql3/statements/AlterTableStatement/columnFamily()|",
      "|java+method:///org/apache/cassandra/service/MigrationManager/announceColumnFamilyUpdate(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/removeColumnDefinition(org.apache.cassandra.config.ColumnDefinition)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/addColumnDefinition(org.apache.cassandra.config.ColumnDefinition)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.1.0-beta2",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-rc1",
    "caller": "|java+method:///org/apache/cassandra/cql/CreateColumnFamilyStatement/validate(java.util.List)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///java/nio/ByteBuffer/equals(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/cql/Term/getText()|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/cassandra/cql/Term/getByteBuffer(org.apache.cassandra.db.marshal.AbstractType,java.util.List)|",
      "|java+method:///org/apache/cassandra/cql/CFPropDefs/getComparator()|",
      "|java+method:///java/lang/String/matches(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/toString()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/apache/cassandra/cql/CFPropDefs/validate()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///java/nio/ByteBuffer/equals(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/cql/Term/getText()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/cassandra/cql/Term/getByteBuffer(org.apache.cassandra.db.marshal.AbstractType,java.util.List)|",
      "|java+method:///org/apache/cassandra/cql/CFPropDefs/getComparator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/toString()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/apache/cassandra/cql/CFPropDefs/validate()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.1.0-beta2",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-rc1",
    "caller": "|java+method:///org/apache/cassandra/cql3/statements/CreateIndexStatement/announceMigration()|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///java/nio/ByteBuffer/equals(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/setIndex_type(org.apache.cassandra.thrift.IndexType)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql3/statements/CreateIndexStatement/keyspace()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/fromThrift(org.apache.cassandra.thrift.CfDef)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getCfDef()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/addDefaultIndexNames(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/cql3/CFDefinition$Name$Kind/ordinal()|",
      "|java+method:///org/apache/cassandra/cql3/CFDefinition/get(org.apache.cassandra.cql3.ColumnIdentifier)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/setIndex_name(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql3/statements/CreateIndexStatement/columnFamily()|",
      "|java+method:///org/slf4j/Logger/isDebugEnabled()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/toThrift()|",
      "|java+method:///org/apache/cassandra/service/MigrationManager/announceColumnFamilyUpdate(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateCfDef(org.apache.cassandra.thrift.CfDef,org.apache.cassandra.config.CFMetaData)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Collections/emptyMap()|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///java/nio/ByteBuffer/equals(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/setIndexType(org.apache.cassandra.thrift.IndexType,java.util.Map)|",
      "|java+method:///org/apache/cassandra/cql3/statements/CreateIndexStatement/keyspace()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getColumn_metadata()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getCfDef()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/cassandra/service/MigrationManager/announceColumnFamilyUpdate(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/getIndexType()|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/setIndexName(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/clone()|",
      "|java+method:///org/apache/cassandra/cql3/CFDefinition$Name$Kind/ordinal()|",
      "|java+method:///org/apache/cassandra/cql3/CFDefinition/get(org.apache.cassandra.cql3.ColumnIdentifier)|",
      "|java+method:///org/apache/cassandra/cql3/statements/CreateIndexStatement/columnFamily()|",
      "|java+method:///org/slf4j/Logger/isDebugEnabled()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/addDefaultIndexNames()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.1.0-beta2",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-rc1",
    "caller": "|java+method:///org/apache/cassandra/cql3/statements/UpdateStatement/mutationForKey(org.apache.cassandra.cql3.CFDefinition,org.apache.cassandra.service.ClientState,java.nio.ByteBuffer,org.apache.cassandra.cql3.ColumnNameBuilder,java.util.List)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/cql3/ColumnNameBuilder/copy()|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql3/statements/UpdateStatement/getConsistencyLevel()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/db/RowMutation/addOrGet(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/db/CounterMutation/CounterMutation(org.apache.cassandra.db.RowMutation,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/validateKey(java.nio.ByteBuffer)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/LinkedHashMap/values()|",
      "|java+method:///org/apache/cassandra/cql3/statements/UpdateStatement/addToMutation(org.apache.cassandra.service.ClientState,org.apache.cassandra.db.ColumnFamily,java.nio.ByteBuffer,org.apache.cassandra.cql3.CFDefinition$Name,org.apache.cassandra.cql3.Operation,java.util.List)|",
      "|java+method:///org/apache/cassandra/cql3/ColumnNameBuilder/build()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/cassandra/cql3/ColumnNameBuilder/componentCount()|",
      "|java+constructor:///org/apache/cassandra/db/RowMutation/RowMutation(java.lang.String,java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/cql3/ColumnNameBuilder/add(java.nio.ByteBuffer)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/cql3/ColumnNameBuilder/copy()|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql3/statements/UpdateStatement/getConsistencyLevel()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/db/RowMutation/addOrGet(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/db/CounterMutation/CounterMutation(org.apache.cassandra.db.RowMutation,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/validateKey(java.nio.ByteBuffer)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/LinkedHashMap/values()|",
      "|java+method:///org/apache/cassandra/cql3/statements/UpdateStatement/addToMutation(org.apache.cassandra.service.ClientState,org.apache.cassandra.db.ColumnFamily,java.nio.ByteBuffer,org.apache.cassandra.cql3.CFDefinition$Name,org.apache.cassandra.cql3.Operation,java.util.List)|",
      "|java+method:///org/apache/cassandra/cql3/ColumnNameBuilder/build()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/cassandra/cql3/QueryProcessor/validateKey(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/cql3/ColumnNameBuilder/componentCount()|",
      "|java+constructor:///org/apache/cassandra/db/RowMutation/RowMutation(java.lang.String,java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/cql3/ColumnNameBuilder/add(java.nio.ByteBuffer)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.1.0-beta2",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-rc1",
    "caller": "|java+method:///org/apache/cassandra/cql/CreateColumnFamilyStatement/getCFMetaData(java.lang.String,java.util.List)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql/CreateColumnFamilyStatement/getPropertyDouble(java.lang.String,java.lang.Double)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/gcGraceSeconds(int)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/compressionParameters(org.apache.cassandra.io.compress.CompressionParameters)|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/toString()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/readRepairChance(double)|",
      "|java+method:///org/apache/cassandra/io/compress/CompressionParameters/create(java.util.Map)|",
      "|java+method:///org/apache/cassandra/cql/CFPropDefs/getComparator()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/cassandra/cql/CreateColumnFamilyStatement/getPropertyInt(java.lang.String,java.lang.Integer)|",
      "|java+method:///org/apache/cassandra/cql/CFPropDefs/getValidator()|",
      "|java+method:///org/apache/cassandra/cql/CreateColumnFamilyStatement/getKeyType()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/apache/cassandra/cql/CreateColumnFamilyStatement/getColumns(org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/comment(java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/maxCompactionThreshold(int)|",
      "|java+method:///org/apache/cassandra/cql/CreateColumnFamilyStatement/getPropertyBoolean(java.lang.String,java.lang.Boolean)|",
      "|java+method:///java/lang/Double/doubleValue()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/compactionStrategyClass(java.lang.Class)|",
      "|java+method:///org/apache/cassandra/cql/CFPropDefs/getProperty(java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/marshal/TypeParser/parse(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/compactionStrategyOptions(java.util.Map)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/cassandra/cql/CreateColumnFamilyStatement/validate(java.util.List)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/defaultValidator(org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/minCompactionThreshold(int)|",
      "|java+constructor:///org/apache/cassandra/config/CFMetaData/CFMetaData(java.lang.String,java.lang.String,org.apache.cassandra.db.ColumnFamilyType,org.apache.cassandra.db.marshal.AbstractType,org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/keyValidator(org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/columnMetadata(java.util.Map)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/keyAlias(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/replicateOnWrite(boolean)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/dcLocalReadRepairChance(double)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/validate()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/config/CFMetaData/gcGraceSeconds(int)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/compressionParameters(org.apache.cassandra.io.compress.CompressionParameters)|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/toString()|",
      "|java+method:///org/apache/cassandra/io/compress/CompressionParameters/create(java.util.Map)|",
      "|java+method:///org/apache/cassandra/cql/CFPropDefs/getComparator()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/dcLocalReadRepairChance(double)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/bloomFilterFpChance(java.lang.Double)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/cassandra/cql/CreateColumnFamilyStatement/getPropertyInt(java.lang.String,java.lang.Integer)|",
      "|java+method:///org/apache/cassandra/cql/CFPropDefs/getValidator()|",
      "|java+method:///org/apache/cassandra/cql/CreateColumnFamilyStatement/getKeyType()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData$Caching/fromString(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/apache/cassandra/cql/CreateColumnFamilyStatement/getColumns(org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/comment(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql/CreateColumnFamilyStatement/getPropertyString(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql/CreateColumnFamilyStatement/getPropertyDouble(java.lang.String,java.lang.Double)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/maxCompactionThreshold(int)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/caching(org.apache.cassandra.config.CFMetaData$Caching)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/readRepairChance(double)|",
      "|java+method:///org/apache/cassandra/cql/CreateColumnFamilyStatement/getPropertyBoolean(java.lang.String,java.lang.Boolean)|",
      "|java+method:///java/lang/Double/doubleValue()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/compactionStrategyClass(java.lang.Class)|",
      "|java+method:///org/apache/cassandra/cql/CFPropDefs/getProperty(java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/marshal/TypeParser/parse(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/compactionStrategyOptions(java.util.Map)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/cassandra/cql/CreateColumnFamilyStatement/validate(java.util.List)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/defaultValidator(org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData$Caching/toString()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/minCompactionThreshold(int)|",
      "|java+constructor:///org/apache/cassandra/config/CFMetaData/CFMetaData(java.lang.String,java.lang.String,org.apache.cassandra.db.ColumnFamilyType,org.apache.cassandra.db.marshal.AbstractType,org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/keyValidator(org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/columnMetadata(java.util.Map)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/keyAlias(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/replicateOnWrite(boolean)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.1.0-beta2",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-rc1",
    "caller": "|java+method:///org/apache/cassandra/cql/CreateKeyspaceStatement/validate()|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/locator/AbstractReplicationStrategy/getClass(java.lang.String)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/locator/AbstractReplicationStrategy/createReplicationStrategy(java.lang.String,java.lang.Class,org.apache.cassandra.locator.TokenMetadata,org.apache.cassandra.locator.IEndpointSnitch,java.util.Map)|",
      "|java+method:///org/apache/cassandra/service/StorageService/getTokenMetadata()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/getMessage()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/lang/String/contains(java.lang.CharSequence)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getEndpointSnitch()|",
      "|java+method:///java/lang/String/matches(java.lang.String)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Map/keySet()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/lang/String/contains(java.lang.CharSequence)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Map/keySet()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.1.0-beta2",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-rc1",
    "caller": "|java+method:///org/apache/cassandra/cql3/statements/CreateColumnFamilyStatement/getCFMetaData()|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/gcGraceSeconds(int)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/maxCompactionThreshold(int)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/readRepairChance(double)|",
      "|java+method:///org/apache/cassandra/io/compress/CompressionParameters/create(java.util.Map)|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/getMessage()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/cassandra/cql3/statements/CreateColumnFamilyStatement/keyspace()|",
      "|java+method:///org/apache/cassandra/cql3/statements/CreateColumnFamilyStatement/getColumns()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/comment(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql3/CFPropDefs/get(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/compressionParameters(org.apache.cassandra.io.compress.CompressionParameters)|",
      "|java+method:///org/apache/cassandra/cql3/CFPropDefs/getInt(java.lang.String,java.lang.Integer)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/valueAlias(java.nio.ByteBuffer)|",
      "|java+method:///java/lang/Double/doubleValue()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/columnAliases(java.util.List)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/compactionStrategyOptions(java.util.Map)|",
      "|java+method:///org/apache/cassandra/cql3/CFPropDefs/getDouble(java.lang.String,java.lang.Double)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/defaultValidator(org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///org/apache/cassandra/cql3/statements/CreateColumnFamilyStatement/columnFamily()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/minCompactionThreshold(int)|",
      "|java+constructor:///org/apache/cassandra/config/CFMetaData/CFMetaData(java.lang.String,java.lang.String,org.apache.cassandra.db.ColumnFamilyType,org.apache.cassandra.db.marshal.AbstractType,org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/keyValidator(org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/columnMetadata(java.util.Map)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/keyAlias(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/replicateOnWrite(boolean)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/dcLocalReadRepairChance(double)|",
      "|java+method:///org/apache/cassandra/cql3/CFPropDefs/getBoolean(java.lang.String,java.lang.Boolean)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/validate()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/config/CFMetaData/gcGraceSeconds(int)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/maxCompactionThreshold(int)|",
      "|java+method:///org/apache/cassandra/io/compress/CompressionParameters/create(java.util.Map)|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/getMessage()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/bloomFilterFpChance(java.lang.Double)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData$Caching/fromString(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql3/statements/CreateColumnFamilyStatement/keyspace()|",
      "|java+method:///org/apache/cassandra/cql3/statements/CreateColumnFamilyStatement/getColumns()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/comment(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql3/CFPropDefs/get(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/compressionParameters(org.apache.cassandra.io.compress.CompressionParameters)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/caching(org.apache.cassandra.config.CFMetaData$Caching)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/readRepairChance(double)|",
      "|java+method:///org/apache/cassandra/cql3/CFPropDefs/getInt(java.lang.String,java.lang.Integer)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/valueAlias(java.nio.ByteBuffer)|",
      "|java+method:///java/lang/Double/doubleValue()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/columnAliases(java.util.List)|",
      "|java+method:///org/apache/cassandra/cql3/CFPropDefs/getDouble(java.lang.String,java.lang.Double)|",
      "|java+method:///org/apache/cassandra/cql3/CFPropDefs/getString(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/compactionStrategyOptions(java.util.Map)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/defaultValidator(org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData$Caching/toString()|",
      "|java+method:///org/apache/cassandra/cql3/statements/CreateColumnFamilyStatement/columnFamily()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/minCompactionThreshold(int)|",
      "|java+constructor:///org/apache/cassandra/config/CFMetaData/CFMetaData(java.lang.String,java.lang.String,org.apache.cassandra.db.ColumnFamilyType,org.apache.cassandra.db.marshal.AbstractType,org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/keyValidator(org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/columnMetadata(java.util.Map)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/keyAlias(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/replicateOnWrite(boolean)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/dcLocalReadRepairChance(double)|",
      "|java+method:///org/apache/cassandra/cql3/CFPropDefs/getBoolean(java.lang.String,java.lang.Boolean)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.1.0-beta2",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-rc1",
    "caller": "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$RawStatement/prepare()|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/cql3/Relation/getInValues()|",
      "|java+method:///org/apache/cassandra/cql3/Term/isBindMarker()|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$Parameters/access$300(org.apache.cassandra.cql3.statements.SelectStatement$Parameters)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$RawStatement/updateRestriction(org.apache.cassandra.cql3.ColumnIdentifier,org.apache.cassandra.cql3.statements.SelectStatement$Restriction,org.apache.cassandra.cql3.Relation)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$RawStatement/getBoundsTerms()|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$Restriction/isEquality()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$Parameters/access$800(org.apache.cassandra.cql3.statements.SelectStatement$Parameters)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/preservesOrder()|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$Restriction/setInclusive(org.apache.cassandra.cql3.statements.SelectStatement$Bound)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$RawStatement/keyspace()|",
      "|java+method:///org/apache/cassandra/utils/Pair/create(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$Parameters/access$200(org.apache.cassandra.cql3.statements.SelectStatement$Parameters)|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$Parameters/access$100(org.apache.cassandra.cql3.statements.SelectStatement$Parameters)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/cql3/Relation/getValue()|",
      "|java+method:///org/apache/cassandra/db/index/SecondaryIndexManager/getIndexedColumns()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$Parameters/access$000(org.apache.cassandra.cql3.statements.SelectStatement$Parameters)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$Bound/values()|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/access$400(org.apache.cassandra.cql3.statements.SelectStatement)|",
      "|java+method:///org/apache/cassandra/db/Table/open(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateConsistencyLevel(java.lang.String,org.apache.cassandra.thrift.ConsistencyLevel,org.apache.cassandra.thrift.RequestType)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/access$502(org.apache.cassandra.cql3.statements.SelectStatement,org.apache.cassandra.cql3.statements.SelectStatement$Restriction)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getCfDef()|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/access$500(org.apache.cassandra.cql3.statements.SelectStatement)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/LinkedHashMap/values()|",
      "|java+method:///org/apache/cassandra/cql3/Relation/operator()|",
      "|java+constructor:///org/apache/cassandra/cql3/statements/ParsedStatement$Prepared/ParsedStatement$Prepared(org.apache.cassandra.cql3.CQLStatement,java.util.List)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/access$600(org.apache.cassandra.cql3.statements.SelectStatement)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/access$700(org.apache.cassandra.cql3.statements.SelectStatement)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$Restriction/setBound(org.apache.cassandra.cql3.statements.SelectStatement$Bound,org.apache.cassandra.cql3.Term)|",
      "|java+method:///org/apache/cassandra/cql3/CFDefinition$Name$Kind/ordinal()|",
      "|java+constructor:///org/apache/cassandra/cql3/statements/SelectStatement/SelectStatement(org.apache.cassandra.cql3.CFDefinition,int,org.apache.cassandra.cql3.statements.SelectStatement$Parameters)|",
      "|java+method:///org/apache/cassandra/cql3/CFDefinition/get(org.apache.cassandra.cql3.ColumnIdentifier)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+constructor:///org/apache/cassandra/cql3/statements/SelectStatement$Restriction/SelectStatement$Restriction()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/db/Table/getColumnFamilyStore(java.lang.String)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/cassandra/cql3/ColumnIdentifier/toString()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$RawStatement/columnFamily()|",
      "|java+method:///org/apache/cassandra/cql3/Relation/getEntity()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/cql3/Relation/getInValues()|",
      "|java+method:///org/apache/cassandra/cql3/Term/isBindMarker()|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$Parameters/access$900(org.apache.cassandra.cql3.statements.SelectStatement$Parameters)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$Parameters/access$300(org.apache.cassandra.cql3.statements.SelectStatement$Parameters)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$RawStatement/updateRestriction(org.apache.cassandra.cql3.ColumnIdentifier,org.apache.cassandra.cql3.statements.SelectStatement$Restriction,org.apache.cassandra.cql3.Relation)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$RawStatement/getBoundsTerms()|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$Restriction/isEquality()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/preservesOrder()|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$Restriction/setInclusive(org.apache.cassandra.cql3.statements.SelectStatement$Bound)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$RawStatement/keyspace()|",
      "|java+method:///org/apache/cassandra/utils/Pair/create(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$Parameters/access$200(org.apache.cassandra.cql3.statements.SelectStatement$Parameters)|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$Parameters/access$100(org.apache.cassandra.cql3.statements.SelectStatement$Parameters)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/cql3/Relation/getValue()|",
      "|java+method:///org/apache/cassandra/db/index/SecondaryIndexManager/getIndexedColumns()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$Parameters/access$000(org.apache.cassandra.cql3.statements.SelectStatement$Parameters)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$Bound/values()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/access$802(org.apache.cassandra.cql3.statements.SelectStatement,org.apache.cassandra.cql3.statements.SelectStatement$Restriction)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/access$400(org.apache.cassandra.cql3.statements.SelectStatement)|",
      "|java+method:///org/apache/cassandra/db/Table/open(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateConsistencyLevel(java.lang.String,org.apache.cassandra.thrift.ConsistencyLevel,org.apache.cassandra.thrift.RequestType)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/access$502(org.apache.cassandra.cql3.statements.SelectStatement,org.apache.cassandra.cql3.statements.SelectStatement$Restriction)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getCfDef()|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/access$500(org.apache.cassandra.cql3.statements.SelectStatement)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/LinkedHashMap/values()|",
      "|java+method:///org/apache/cassandra/cql3/Relation/operator()|",
      "|java+constructor:///org/apache/cassandra/cql3/statements/ParsedStatement$Prepared/ParsedStatement$Prepared(org.apache.cassandra.cql3.CQLStatement,java.util.List)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/access$600(org.apache.cassandra.cql3.statements.SelectStatement)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/access$700(org.apache.cassandra.cql3.statements.SelectStatement)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$Restriction/setBound(org.apache.cassandra.cql3.statements.SelectStatement$Bound,org.apache.cassandra.cql3.Term)|",
      "|java+method:///org/apache/cassandra/cql3/CFDefinition$Name$Kind/ordinal()|",
      "|java+constructor:///org/apache/cassandra/cql3/statements/SelectStatement/SelectStatement(org.apache.cassandra.cql3.CFDefinition,int,org.apache.cassandra.cql3.statements.SelectStatement$Parameters)|",
      "|java+method:///org/apache/cassandra/cql3/CFDefinition/get(org.apache.cassandra.cql3.ColumnIdentifier)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+constructor:///org/apache/cassandra/cql3/statements/SelectStatement$Restriction/SelectStatement$Restriction()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$Restriction/isInclusive(org.apache.cassandra.cql3.statements.SelectStatement$Bound)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/db/Table/getColumnFamilyStore(java.lang.String)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/cassandra/cql3/ColumnIdentifier/toString()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$RawStatement/columnFamily()|",
      "|java+method:///org/apache/cassandra/cql3/Relation/getEntity()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.1.0-beta2",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-rc1",
    "caller": "|java+method:///org/apache/cassandra/thrift/CassandraServer/system_update_column_family(org.apache.cassandra.thrift.CfDef)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/applyImplicitDefaults(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/fromThrift(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/validateSchemaAgreement()|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/getMessage()|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasColumnFamilySchemaAccess(org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/addDefaultIndexNames(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///org/apache/cassandra/config/Schema/getCFMetaData(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/InvalidRequestException/initCause(java.lang.Throwable)|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///org/apache/cassandra/config/Schema/getVersion()|",
      "|java+method:///org/apache/cassandra/service/MigrationManager/announceColumnFamilyUpdate(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateCfDef(org.apache.cassandra.thrift.CfDef,org.apache.cassandra.config.CFMetaData)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/applyImplicitDefaults(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/fromThrift(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/validateSchemaAgreement()|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/getMessage()|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasColumnFamilySchemaAccess(org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/service/MigrationManager/announceColumnFamilyUpdate(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/addDefaultIndexNames()|",
      "|java+method:///org/apache/cassandra/config/Schema/getCFMetaData(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/InvalidRequestException/initCause(java.lang.Throwable)|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///org/apache/cassandra/config/Schema/getVersion()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.1.0-beta2",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-rc1",
    "caller": "|java+method:///org/apache/cassandra/thrift/CassandraServer/get_paged_slice(java.lang.String,org.apache.cassandra.thrift.KeyRange,java.nio.ByteBuffer,org.apache.cassandra.thrift.ConsistencyLevel)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/ColumnParent/ColumnParent(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/dht/Range/makeRowRange(org.apache.cassandra.dht.Token,org.apache.cassandra.dht.Token,org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/dht/Token$TokenFactory/fromString(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/TimedOutException/TimedOutException()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/thriftifyKeySlices(java.util.List,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/schedule(long)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/db/RangeSliceCommand/RangeSliceCommand(java.lang.String,java.lang.String,java.nio.ByteBuffer,org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.dht.AbstractBounds,java.util.List,int,boolean)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/release()|",
      "|java+constructor:///org/apache/cassandra/dht/Bounds/Bounds(org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.RingPosition)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/RowPosition/forKey(java.nio.ByteBuffer,org.apache.cassandra.dht.IPartitioner)|",
      "|java+constructor:///org/apache/cassandra/thrift/SliceRange/SliceRange(java.nio.ByteBuffer,java.nio.ByteBuffer,boolean,int)|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/getRangeSlice(org.apache.cassandra.db.RangeSliceCommand,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKeyRange(org.apache.cassandra.config.CFMetaData,java.nio.ByteBuffer,org.apache.cassandra.thrift.KeyRange)|",
      "|java+constructor:///org/apache/cassandra/thrift/ColumnParent/ColumnParent(java.lang.String)|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasColumnFamilyAccess(java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateConsistencyLevel(java.lang.String,org.apache.cassandra.thrift.ConsistencyLevel,org.apache.cassandra.thrift.RequestType)|",
      "|java+method:///org/apache/cassandra/thrift/SlicePredicate/setSlice_range(org.apache.cassandra.thrift.SliceRange)|",
      "|java+method:///org/apache/cassandra/service/ClientState/getKeyspace()|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRpcTimeout()|",
      "|java+constructor:///org/apache/cassandra/thrift/SlicePredicate/SlicePredicate()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getTokenFactory()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/cassandra/dht/Range/makeRowRange(org.apache.cassandra.dht.Token,org.apache.cassandra.dht.Token,org.apache.cassandra.dht.IPartitioner)|",
      "|java+constructor:///org/apache/cassandra/db/RangeSliceCommand/RangeSliceCommand(java.lang.String,java.lang.String,java.nio.ByteBuffer,org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.dht.AbstractBounds,java.util.List,int,boolean,boolean)|",
      "|java+method:///org/apache/cassandra/dht/Token$TokenFactory/fromString(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/TimedOutException/TimedOutException()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/thriftifyKeySlices(java.util.List,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/schedule(long)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/release()|",
      "|java+constructor:///org/apache/cassandra/dht/Bounds/Bounds(org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.RingPosition)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/RowPosition/forKey(java.nio.ByteBuffer,org.apache.cassandra.dht.IPartitioner)|",
      "|java+constructor:///org/apache/cassandra/thrift/SliceRange/SliceRange(java.nio.ByteBuffer,java.nio.ByteBuffer,boolean,int)|",
      "|java+method:///org/apache/cassandra/dht/Token/maxKeyBound(org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/getRangeSlice(org.apache.cassandra.db.RangeSliceCommand,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKeyRange(org.apache.cassandra.config.CFMetaData,java.nio.ByteBuffer,org.apache.cassandra.thrift.KeyRange)|",
      "|java+constructor:///org/apache/cassandra/thrift/ColumnParent/ColumnParent(java.lang.String)|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasColumnFamilyAccess(java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateConsistencyLevel(java.lang.String,org.apache.cassandra.thrift.ConsistencyLevel,org.apache.cassandra.thrift.RequestType)|",
      "|java+method:///org/apache/cassandra/thrift/SlicePredicate/setSlice_range(org.apache.cassandra.thrift.SliceRange)|",
      "|java+method:///org/apache/cassandra/service/ClientState/getKeyspace()|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRpcTimeout()|",
      "|java+constructor:///org/apache/cassandra/thrift/SlicePredicate/SlicePredicate()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getTokenFactory()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.1.0-beta2",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-rc1",
    "caller": "|java+method:///org/apache/cassandra/thrift/CassandraServer/system_add_column_family(org.apache.cassandra.thrift.CfDef)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/fromThrift(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/getMessage()|",
      "|java+method:///org/apache/cassandra/thrift/InvalidRequestException/initCause(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateCfDef(org.apache.cassandra.thrift.CfDef,org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/addDefaultIndexNames(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/validateSchemaAgreement()|",
      "|java+method:///org/apache/cassandra/service/MigrationManager/announceNewColumnFamily(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasColumnFamilySchemaAccess(org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/unsetId()|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///org/apache/cassandra/config/Schema/getVersion()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/fromThrift(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/getMessage()|",
      "|java+method:///org/apache/cassandra/thrift/InvalidRequestException/initCause(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/addDefaultIndexNames()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/validateSchemaAgreement()|",
      "|java+method:///org/apache/cassandra/service/MigrationManager/announceNewColumnFamily(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasColumnFamilySchemaAccess(org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/unsetId()|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///org/apache/cassandra/config/Schema/getVersion()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.1.0-beta2",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-rc1",
    "caller": "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader$WideRowIterator/maybeInit()|",
    "called": "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/get_paged_slice(java.lang.String,org.apache.cassandra.thrift.KeyRange,java.nio.ByteBuffer,org.apache.cassandra.thrift.ConsistencyLevel)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/thrift/KeyRange/setEnd_token(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/KeyRange/setRow_filter(java.util.List)|",
      "|java+method:///java/nio/ByteBuffer/equals(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/access$200(org.apache.cassandra.hadoop.ColumnFamilyRecordReader)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/access$600(org.apache.cassandra.hadoop.ColumnFamilyRecordReader)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///com/google/common/collect/Iterables/getLast(java.lang.Iterable)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilySplit/getEndToken()|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getToken(java.nio.ByteBuffer)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/get_paged_slice(java.lang.String,org.apache.cassandra.thrift.KeyRange,java.nio.ByteBuffer,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/access$400(org.apache.cassandra.hadoop.ColumnFamilyRecordReader)|",
      "|java+method:///org/apache/cassandra/thrift/KeyRange/setStart_token(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/access$1000(org.apache.cassandra.hadoop.ColumnFamilyRecordReader)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/access$700(org.apache.cassandra.hadoop.ColumnFamilyRecordReader)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+constructor:///org/apache/cassandra/thrift/KeyRange/KeyRange(int)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/access$800(org.apache.cassandra.hadoop.ColumnFamilyRecordReader)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilySplit/getStartToken()|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getTokenFactory()|",
      "|java+method:///org/apache/cassandra/dht/Token$TokenFactory/toString(org.apache.cassandra.dht.Token)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/thrift/KeyRange/setEnd_token(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/KeyRange/setRow_filter(java.util.List)|",
      "|java+method:///org/apache/cassandra/thrift/KeyRange/setStart_key(java.nio.ByteBuffer)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/google/common/collect/PeekingIterator/next()|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/access$600(org.apache.cassandra.hadoop.ColumnFamilyRecordReader)|",
      "|java+method:///com/google/common/collect/Iterables/getLast(java.lang.Iterable)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilySplit/getEndToken()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+constructor:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader$WideRowIterator$WideColumnIterator/ColumnFamilyRecordReader$WideRowIterator$WideColumnIterator(org.apache.cassandra.hadoop.ColumnFamilyRecordReader$WideRowIterator,java.util.List)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/get_paged_slice(java.lang.String,org.apache.cassandra.thrift.KeyRange,java.nio.ByteBuffer,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/nio/ByteBuffer/equals(java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/access$1200()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/access$200(org.apache.cassandra.hadoop.ColumnFamilyRecordReader)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/access$400(org.apache.cassandra.hadoop.ColumnFamilyRecordReader)|",
      "|java+method:///org/apache/cassandra/thrift/KeyRange/setStart_token(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/access$1000(org.apache.cassandra.hadoop.ColumnFamilyRecordReader)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/access$700(org.apache.cassandra.hadoop.ColumnFamilyRecordReader)|",
      "|java+constructor:///org/apache/cassandra/thrift/KeyRange/KeyRange(int)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/access$800(org.apache.cassandra.hadoop.ColumnFamilyRecordReader)|",
      "|java+method:///java/util/SortedMap/keySet()|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilySplit/getStartToken()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///com/google/common/collect/PeekingIterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/common/collect/PeekingIterator/peek()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/google/common/collect/Iterators/peekingIterator(java.util.Iterator)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.1.0-beta2",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-rc1",
    "caller": "|java+method:///org/apache/cassandra/cql/QueryProcessor/batchUpdate(org.apache.cassandra.service.ClientState,java.util.List,org.apache.cassandra.thrift.ConsistencyLevel,java.util.List)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/UnavailableException/UnavailableException()|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/cql/UpdateStatement/prepareRowMutations(java.lang.String,org.apache.cassandra.service.ClientState,java.util.List)|",
      "|java+constructor:///org/apache/cassandra/thrift/TimedOutException/TimedOutException()|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/mutate(java.util.List,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/cql/UpdateStatement/getColumnFamily()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/service/ClientState/getKeyspace()|",
      "|java+constructor:///org/apache/cassandra/thrift/UnavailableException/UnavailableException()|",
      "|java+method:///java/util/List/contains(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasColumnFamilyAccess(java.lang.String,java.lang.String,org.apache.cassandra.auth.Permission)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/cql/UpdateStatement/prepareRowMutations(java.lang.String,org.apache.cassandra.service.ClientState,java.util.List)|",
      "|java+constructor:///org/apache/cassandra/thrift/TimedOutException/TimedOutException()|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/mutate(java.util.List,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/cql/UpdateStatement/getColumnFamily()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/db/IMutation/key()|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/validateKey(java.nio.ByteBuffer)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/service/ClientState/getKeyspace()|",
      "|java+constructor:///org/apache/cassandra/thrift/UnavailableException/UnavailableException()|",
      "|java+method:///java/util/List/contains(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasColumnFamilyAccess(java.lang.String,java.lang.String,org.apache.cassandra.auth.Permission)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.1.0-beta2",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-rc1",
    "caller": "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/multiRangeSlice(java.util.List)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/RowPosition/compareTo(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/keyspace()|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/getIndexExpressions(java.util.List)|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/getRangeSlice(org.apache.cassandra.db.RangeSliceCommand,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/makeSlicePredicate(java.util.List)|",
      "|java+method:///org/apache/cassandra/db/RowPosition/isMinimum(org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/cql3/QueryProcessor/validateSlicePredicate(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+constructor:///org/apache/cassandra/db/RangeSliceCommand/RangeSliceCommand(java.lang.String,java.lang.String,java.nio.ByteBuffer,org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.dht.AbstractBounds,java.util.List,int,boolean)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/columnFamily()|",
      "|java+constructor:///org/apache/cassandra/dht/IncludingExcludingBounds/IncludingExcludingBounds(org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.RingPosition)|",
      "|java+constructor:///org/apache/cassandra/dht/Bounds/Bounds(org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.RingPosition)|",
      "|java+constructor:///org/apache/cassandra/dht/Range/Range(org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.RingPosition)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+constructor:///org/apache/cassandra/thrift/TimedOutException/TimedOutException()|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/getLimit()|",
      "|java+method:///org/apache/cassandra/db/RowPosition/forKey(java.nio.ByteBuffer,org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$Parameters/access$200(org.apache.cassandra.cql3.statements.SelectStatement$Parameters)|",
      "|java+constructor:///org/apache/cassandra/dht/ExcludingBounds/ExcludingBounds(org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.RingPosition)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/includeKeyBound(org.apache.cassandra.cql3.statements.SelectStatement$Bound)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/getKeyBound(org.apache.cassandra.cql3.statements.SelectStatement$Bound,java.util.List)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/columnFamily()|",
      "|java+method:///org/apache/cassandra/db/RowPosition/compareTo(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/keyspace()|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/getIndexExpressions(java.util.List)|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/getRangeSlice(org.apache.cassandra.db.RangeSliceCommand,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/makeSlicePredicate(java.util.List)|",
      "|java+method:///org/apache/cassandra/db/RowPosition/isMinimum(org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/cql3/QueryProcessor/validateSlicePredicate(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/db/RangeSliceCommand/RangeSliceCommand(java.lang.String,java.lang.String,java.nio.ByteBuffer,org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.dht.AbstractBounds,java.util.List,int,boolean,boolean)|",
      "|java+constructor:///org/apache/cassandra/dht/IncludingExcludingBounds/IncludingExcludingBounds(org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.RingPosition)|",
      "|java+constructor:///org/apache/cassandra/dht/Bounds/Bounds(org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.RingPosition)|",
      "|java+constructor:///org/apache/cassandra/dht/Range/Range(org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.RingPosition)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+constructor:///org/apache/cassandra/thrift/TimedOutException/TimedOutException()|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/getLimit()|",
      "|java+method:///org/apache/cassandra/db/RowPosition/forKey(java.nio.ByteBuffer,org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement$Parameters/access$200(org.apache.cassandra.cql3.statements.SelectStatement$Parameters)|",
      "|java+constructor:///org/apache/cassandra/dht/ExcludingBounds/ExcludingBounds(org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.RingPosition)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/includeKeyBound(org.apache.cassandra.cql3.statements.SelectStatement$Bound)|",
      "|java+method:///org/apache/cassandra/cql3/statements/SelectStatement/getKeyBound(org.apache.cassandra.cql3.statements.SelectStatement$Bound,java.util.List)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.1.0-beta2",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-rc1",
    "caller": "|java+method:///org/apache/cassandra/cql/CreateColumnFamilyStatement/getColumns(org.apache.cassandra.db.marshal.AbstractType)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/db/marshal/AbstractType/fromString(java.lang.String)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/apache/cassandra/cql/Term/getText()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/toString()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/cassandra/db/marshal/TypeParser/parse(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///org/apache/cassandra/config/ColumnDefinition/ColumnDefinition(java.nio.ByteBuffer,org.apache.cassandra.db.marshal.AbstractType,org.apache.cassandra.thrift.IndexType,java.util.Map,java.lang.String)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/InvalidRequestException/initCause(java.lang.Throwable)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/db/marshal/AbstractType/fromString(java.lang.String)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/apache/cassandra/cql/Term/getText()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/toString()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/cassandra/db/marshal/TypeParser/parse(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/config/ColumnDefinition/ColumnDefinition(java.nio.ByteBuffer,org.apache.cassandra.db.marshal.AbstractType,org.apache.cassandra.thrift.IndexType,java.util.Map,java.lang.String,java.lang.Integer)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/InvalidRequestException/initCause(java.lang.Throwable)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.1.0-beta2",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-rc1",
    "caller": "|java+method:///org/apache/cassandra/cql3/statements/DropIndexStatement/announceMigration()|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/config/Schema/getTableDefinition(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/fromThrift(org.apache.cassandra.thrift.CfDef)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/cql3/statements/DropIndexStatement/getUpdatedCFDef(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/config/KSMetaData/cfMetaData()|",
      "|java+method:///org/apache/cassandra/cql3/statements/DropIndexStatement/keyspace()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/toThrift()|",
      "|java+method:///org/apache/cassandra/service/MigrationManager/announceColumnFamilyUpdate(org.apache.cassandra.config.CFMetaData)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/config/Schema/getTableDefinition(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/cassandra/service/MigrationManager/announceColumnFamilyUpdate(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql3/statements/DropIndexStatement/getUpdatedCFMetadata(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/config/KSMetaData/cfMetaData()|",
      "|java+method:///org/apache/cassandra/cql3/statements/DropIndexStatement/keyspace()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.1.0-beta2",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-rc1",
    "caller": "|java+method:///org/apache/cassandra/thrift/CassandraServer/system_add_keyspace(org.apache.cassandra.thrift.KsDef)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKsDef(org.apache.cassandra.thrift.KsDef)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasKeyspaceSchemaAccess(org.apache.cassandra.auth.Permission)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/fromThrift(org.apache.cassandra.thrift.CfDef)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKeyspaceNotYetExisting(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateCfDef(org.apache.cassandra.thrift.CfDef,org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/addDefaultIndexNames(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///java/util/Collection/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/getName()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/validateSchemaAgreement()|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/getMessage()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/getKeyspace()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKeyspaceNotSystem(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/InvalidRequestException/initCause(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/getName()|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/unsetId()|",
      "|java+method:///org/apache/cassandra/service/MigrationManager/announceNewKeyspace(org.apache.cassandra.config.KSMetaData)|",
      "|java+method:///org/apache/cassandra/config/KSMetaData/fromThrift(org.apache.cassandra.thrift.KsDef,org.apache.cassandra.config.CFMetaData%5B%5D)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///org/apache/cassandra/config/Schema/getVersion()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasKeyspaceSchemaAccess(org.apache.cassandra.auth.Permission)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/fromThrift(org.apache.cassandra.thrift.CfDef)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKeyspaceNotYetExisting(java.lang.String)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///java/util/Collection/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/getName()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/validateSchemaAgreement()|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/getMessage()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/getKeyspace()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKeyspaceNotSystem(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/InvalidRequestException/initCause(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/getName()|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/unsetId()|",
      "|java+method:///org/apache/cassandra/service/MigrationManager/announceNewKeyspace(org.apache.cassandra.config.KSMetaData)|",
      "|java+method:///org/apache/cassandra/config/KSMetaData/fromThrift(org.apache.cassandra.thrift.KsDef,org.apache.cassandra.config.CFMetaData%5B%5D)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///org/apache/cassandra/config/Schema/getVersion()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/addDefaultIndexNames()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.1.0-beta2",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-rc1",
    "caller": "|java+method:///org/apache/cassandra/db/RangeSliceCommandSerializer/deserialize(java.io.DataInput,int)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/SlicePredicate/SlicePredicate()|",
    "v1Body": [
      "|java+constructor:///org/apache/cassandra/db/RangeSliceCommand/RangeSliceCommand(java.lang.String,java.lang.String,java.nio.ByteBuffer,org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.dht.AbstractBounds,java.util.List,int,boolean)|",
      "|java+constructor:///org/apache/cassandra/thrift/TBinaryProtocol$Factory/TBinaryProtocol$Factory()|",
      "|java+method:///java/io/DataInput/readUTF()|",
      "|java+method:///org/apache/cassandra/dht/AbstractBounds/serializer()|",
      "|java+method:///java/io/DataInput/readInt()|",
      "|java+method:///org/apache/cassandra/dht/AbstractBounds/toRowBounds()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/thrift/TDeserializer/TDeserializer(org.apache.thrift.protocol.TProtocolFactory)|",
      "|java+method:///org/apache/cassandra/db/RangeSliceCommandSerializer/deserialize(java.io.DataInput,int)|",
      "|java+method:///java/io/DataInput/readBoolean()|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+constructor:///org/apache/cassandra/thrift/IndexExpression/IndexExpression()|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/deserialize(org.apache.thrift.TDeserializer,org.apache.thrift.TBase,java.io.DataInput)|",
      "|java+method:///java/nio/ByteBuffer/wrap(byte%5B%5D)|",
      "|java+constructor:///org/apache/cassandra/thrift/SlicePredicate/SlicePredicate()|",
      "|java+method:///org/apache/cassandra/dht/AbstractBounds$AbstractBoundsSerializer/deserialize(java.io.DataInput,int)|",
      "|java+method:///java/io/DataInput/readFully(byte%5B%5D)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/cassandra/thrift/TBinaryProtocol$Factory/TBinaryProtocol$Factory()|",
      "|java+method:///java/io/DataInput/readUTF()|",
      "|java+constructor:///org/apache/cassandra/db/RangeSliceCommand/RangeSliceCommand(java.lang.String,java.lang.String,java.nio.ByteBuffer,org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.dht.AbstractBounds,java.util.List,int,boolean,boolean)|",
      "|java+method:///org/apache/cassandra/dht/AbstractBounds/serializer()|",
      "|java+method:///java/io/DataInput/readInt()|",
      "|java+method:///org/apache/cassandra/dht/AbstractBounds/toRowBounds()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/thrift/TDeserializer/TDeserializer(org.apache.thrift.protocol.TProtocolFactory)|",
      "|java+method:///org/apache/cassandra/db/RangeSliceCommandSerializer/deserialize(java.io.DataInput,int)|",
      "|java+method:///java/io/DataInput/readBoolean()|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+constructor:///org/apache/cassandra/thrift/IndexExpression/IndexExpression()|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/deserialize(org.apache.thrift.TDeserializer,org.apache.thrift.TBase,java.io.DataInput)|",
      "|java+method:///java/nio/ByteBuffer/wrap(byte%5B%5D)|",
      "|java+constructor:///org/apache/cassandra/thrift/SlicePredicate/SlicePredicate()|",
      "|java+method:///org/apache/cassandra/dht/AbstractBounds$AbstractBoundsSerializer/deserialize(java.io.DataInput,int)|",
      "|java+method:///java/io/DataInput/readFully(byte%5B%5D)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-rc1",
    "change": "UPDATED"
  }
]