[
  {
    "coordinatesV1": "com.github.agourlay:cornichon-core_2.11:0.15.3",
    "coordinatesV2": "com.github.agourlay:cornichon-core_2.11:0.16.0",
    "caller": "|java+method:///com/github/agourlay/cornichon/core/Engine/runScenario(scala.collection.immutable.Map,com.github.agourlay.cornichon.core.FeatureExecutionContext,com.github.agourlay.cornichon.core.Scenario)|",
    "called": "|java+method:///cats/data/IndexedStateT/flatMap(scala.Function1,cats.FlatMap)|",
    "v1Body": [
      "|java+constructor:///com/github/agourlay/cornichon/core/RunState/RunState(scala.collection.immutable.Map,scala.collection.immutable.Vector,int,scala.collection.immutable.List)|",
      "|java+method:///cats/data/IndexedStateT/run(java.lang.Object,cats.FlatMap)|",
      "|java+method:///cats/data/IndexedStateT/flatMap(scala.Function1,cats.FlatMap)|",
      "|java+method:///scala/package$/Vector()|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///monix/eval/Task$/catsAsync()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///com/github/agourlay/cornichon/core/ScenarioTitleLogInstruction$/apply$default$3()|",
      "|java+method:///com/github/agourlay/cornichon/core/FeatureExecutionContext/beforeSteps()|",
      "|java+constructor:///com/github/agourlay/cornichon/core/Engine$$anonfun$runScenario$1/Engine$$anonfun$runScenario$1(com.github.agourlay.cornichon.core.Engine,com.github.agourlay.cornichon.core.Scenario,long)|",
      "|java+method:///com/github/agourlay/cornichon/core/Scenario/name()|",
      "|java+constructor:///com/github/agourlay/cornichon/core/Engine$$anonfun$1/Engine$$anonfun$1(com.github.agourlay.cornichon.core.Engine,com.github.agourlay.cornichon.core.FeatureExecutionContext,com.github.agourlay.cornichon.core.Scenario)|",
      "|java+method:///com/github/agourlay/cornichon/core/Engine$/initMargin()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///com/github/agourlay/cornichon/core/Engine$/beforeLog()|",
      "|java+method:///monix/eval/Task/map(scala.Function1)|",
      "|java+constructor:///com/github/agourlay/cornichon/core/IgnoreScenarioReport/IgnoreScenarioReport(java.lang.String,scala.collection.immutable.Map)|",
      "|java+method:///monix/eval/Task$/now(java.lang.Object)|",
      "|java+method:///scala/collection/immutable/Vector$/apply(scala.collection.Seq)|",
      "|java+constructor:///com/github/agourlay/cornichon/core/ScenarioTitleLogInstruction/ScenarioTitleLogInstruction(java.lang.String,int,scala.Option)|",
      "|java+constructor:///com/github/agourlay/cornichon/core/PendingScenarioReport/PendingScenarioReport(java.lang.String,scala.collection.immutable.Map)|",
      "|java+method:///com/github/agourlay/cornichon/core/FeatureExecutionContext/isPending(com.github.agourlay.cornichon.core.Scenario)|",
      "|java+method:///com/github/agourlay/cornichon/core/Engine/com$github$agourlay$cornichon$core$Engine$$regularStage(scala.collection.immutable.List,com.github.agourlay.cornichon.core.InfoLogInstruction)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///com/github/agourlay/cornichon/core/FeatureExecutionContext/isIgnored(com.github.agourlay.cornichon.core.Scenario)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///cats/data/IndexedStateT/run(java.lang.Object,cats.FlatMap)|",
      "|java+method:///cats/data/IndexedStateT/flatMap(scala.Function1,cats.FlatMap)|",
      "|java+method:///scala/package$/Vector()|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///monix/eval/Task$/catsAsync()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///com/github/agourlay/cornichon/core/ScenarioTitleLogInstruction$/apply$default$3()|",
      "|java+method:///com/github/agourlay/cornichon/core/FeatureExecutionContext/beforeSteps()|",
      "|java+constructor:///com/github/agourlay/cornichon/core/Engine$$anonfun$runScenario$1/Engine$$anonfun$runScenario$1(com.github.agourlay.cornichon.core.Engine,com.github.agourlay.cornichon.core.Scenario,long)|",
      "|java+method:///com/github/agourlay/cornichon/core/Scenario/name()|",
      "|java+constructor:///com/github/agourlay/cornichon/core/Engine$$anonfun$1/Engine$$anonfun$1(com.github.agourlay.cornichon.core.Engine,com.github.agourlay.cornichon.core.FeatureExecutionContext,com.github.agourlay.cornichon.core.Scenario)|",
      "|java+method:///com/github/agourlay/cornichon/core/Engine$/com$github$agourlay$cornichon$core$Engine$$initMargin()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///com/github/agourlay/cornichon/core/Engine$/com$github$agourlay$cornichon$core$Engine$$beforeLog()|",
      "|java+constructor:///com/github/agourlay/cornichon/core/RunState/RunState(scala.collection.immutable.Map,scala.collection.immutable.Vector,int,scala.collection.immutable.List)|",
      "|java+method:///monix/eval/Task/map(scala.Function1)|",
      "|java+constructor:///com/github/agourlay/cornichon/core/IgnoreScenarioReport/IgnoreScenarioReport(java.lang.String,scala.collection.immutable.Map)|",
      "|java+method:///monix/eval/Task$/now(java.lang.Object)|",
      "|java+method:///scala/collection/immutable/Vector$/apply(scala.collection.Seq)|",
      "|java+constructor:///com/github/agourlay/cornichon/core/ScenarioTitleLogInstruction/ScenarioTitleLogInstruction(java.lang.String,int,scala.Option)|",
      "|java+constructor:///com/github/agourlay/cornichon/core/PendingScenarioReport/PendingScenarioReport(java.lang.String,scala.collection.immutable.Map)|",
      "|java+method:///com/github/agourlay/cornichon/core/FeatureExecutionContext/isPending(com.github.agourlay.cornichon.core.Scenario)|",
      "|java+method:///com/github/agourlay/cornichon/core/Engine/com$github$agourlay$cornichon$core$Engine$$regularStage(scala.collection.immutable.List,com.github.agourlay.cornichon.core.InfoLogInstruction)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///com/github/agourlay/cornichon/core/FeatureExecutionContext/isIgnored(com.github.agourlay.cornichon.core.Scenario)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|"
    ],
    "affectedLib": "org.typelevel:cats-core_2.11:1.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.agourlay:cornichon-core_2.11:0.15.3",
    "coordinatesV2": "com.github.agourlay:cornichon-core_2.11:0.16.0",
    "caller": "|java+method:///com/github/agourlay/cornichon/core/Engine$/handleErrors(com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.RunState,cats.data.NonEmptyList)|",
    "called": "|java+method:///cats/syntax/EitherIdOps$/asLeft$extension(java.lang.Object)|",
    "v1Body": [
      "|java+method:///com/github/agourlay/cornichon/core/RunState/depth()|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///com/github/agourlay/cornichon/core/Engine$/errorsToFailureStep(com.github.agourlay.cornichon.core.Step,int,cats.data.NonEmptyList)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///scala/package$/Left()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///com/github/agourlay/cornichon/core/RunState/appendLogs(scala.collection.immutable.Vector)|",
      "|java+method:///scala/util/Left$/apply(java.lang.Object)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///cats/syntax/EitherIdOps$/asLeft$extension(java.lang.Object)|",
      "|java+method:///com/github/agourlay/cornichon/core/RunState/depth()|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///cats/syntax/package$either$/catsSyntaxEitherId(java.lang.Object)|",
      "|java+method:///com/github/agourlay/cornichon/core/Engine$/errorsToFailureStep(com.github.agourlay.cornichon.core.Step,int,cats.data.NonEmptyList)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///com/github/agourlay/cornichon/core/RunState/appendLogs(scala.collection.immutable.Vector)|"
    ],
    "affectedLib": "org.typelevel:cats-core_2.11:1.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.agourlay:cornichon-core_2.11:0.15.3",
    "coordinatesV2": "com.github.agourlay:cornichon-core_2.11:0.16.0",
    "caller": "|java+method:///com/github/agourlay/cornichon/http/HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5$$anonfun$apply$6$$anonfun$apply$7$$anonfun$apply$8$$anonfun$apply$10$$anonfun$apply$12/apply(scala.Tuple2)|",
    "called": "|java+method:///cats/syntax/EitherOps$/map$extension(scala.util.Either,scala.Function1)|",
    "v1Body": [
      "|java+method:///com/github/agourlay/cornichon/http/HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5$$anonfun$apply$6$$anonfun$apply$7/com$github$agourlay$cornichon$http$HttpService$$anonfun$$anonfun$$anonfun$$anonfun$$$outer()|",
      "|java+method:///com/github/agourlay/cornichon/http/HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5/com$github$agourlay$cornichon$http$HttpService$$anonfun$$anonfun$$$outer()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///scala/collection/Seq/toList()|",
      "|java+method:///com/github/agourlay/cornichon/http/HttpService$$anonfun$resolveRequestParts$3/com$github$agourlay$cornichon$http$HttpService$$anonfun$$$outer()|",
      "|java+method:///com/github/agourlay/cornichon/http/HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5$$anonfun$apply$6$$anonfun$apply$7$$anonfun$apply$8/com$github$agourlay$cornichon$http$HttpService$$anonfun$$anonfun$$anonfun$$anonfun$$anonfun$$$outer()|",
      "|java+method:///com/github/agourlay/cornichon/resolver/PlaceholderResolver/fillPlaceholders(scala.collection.immutable.List,scala.collection.immutable.Map)|",
      "|java+constructor:///com/github/agourlay/cornichon/http/HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5$$anonfun$apply$6$$anonfun$apply$7$$anonfun$apply$8$$anonfun$apply$10$$anonfun$apply$12$$anonfun$apply$13/HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5$$anonfun$apply$6$$anonfun$apply$7$$anonfun$apply$8$$anonfun$apply$10$$anonfun$apply$12$$anonfun$apply$13(com.github.agourlay.cornichon.http.HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5$$anonfun$apply$6$$anonfun$apply$7$$anonfun$apply$8$$anonfun$apply$10$$anonfun$apply$12)|",
      "|java+method:///cats/syntax/EitherOps$/map$extension(scala.util.Either,scala.Function1)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///cats/syntax/package$either$/catsSyntaxEither(scala.util.Either)|",
      "|java+method:///com/github/agourlay/cornichon/http/HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5$$anonfun$apply$6$$anonfun$apply$7$$anonfun$apply$8$$anonfun$apply$10/com$github$agourlay$cornichon$http$HttpService$$anonfun$$anonfun$$anonfun$$anonfun$$anonfun$$anonfun$$$outer()|",
      "|java+method:///com/github/agourlay/cornichon/http/HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5$$anonfun$apply$6/com$github$agourlay$cornichon$http$HttpService$$anonfun$$anonfun$$anonfun$$$outer()|"
    ],
    "v2Body": [
      "|java+method:///com/github/agourlay/cornichon/http/HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5$$anonfun$apply$6$$anonfun$apply$7/com$github$agourlay$cornichon$http$HttpService$$anonfun$$anonfun$$anonfun$$anonfun$$$outer()|",
      "|java+method:///com/github/agourlay/cornichon/http/HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5/com$github$agourlay$cornichon$http$HttpService$$anonfun$$anonfun$$$outer()|",
      "|java+method:///com/github/agourlay/cornichon/resolver/PlaceholderResolver/fillPlaceholders(scala.collection.Seq,scala.collection.immutable.Map)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///com/github/agourlay/cornichon/http/HttpService$$anonfun$resolveRequestParts$3/com$github$agourlay$cornichon$http$HttpService$$anonfun$$$outer()|",
      "|java+method:///com/github/agourlay/cornichon/http/HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5$$anonfun$apply$6$$anonfun$apply$7$$anonfun$apply$8/com$github$agourlay$cornichon$http$HttpService$$anonfun$$anonfun$$anonfun$$anonfun$$anonfun$$$outer()|",
      "|java+constructor:///com/github/agourlay/cornichon/http/HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5$$anonfun$apply$6$$anonfun$apply$7$$anonfun$apply$8$$anonfun$apply$10$$anonfun$apply$12$$anonfun$apply$13/HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5$$anonfun$apply$6$$anonfun$apply$7$$anonfun$apply$8$$anonfun$apply$10$$anonfun$apply$12$$anonfun$apply$13(com.github.agourlay.cornichon.http.HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5$$anonfun$apply$6$$anonfun$apply$7$$anonfun$apply$8$$anonfun$apply$10$$anonfun$apply$12)|",
      "|java+method:///cats/syntax/EitherOps$/map$extension(scala.util.Either,scala.Function1)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///cats/syntax/package$either$/catsSyntaxEither(scala.util.Either)|",
      "|java+method:///com/github/agourlay/cornichon/http/HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5$$anonfun$apply$6$$anonfun$apply$7$$anonfun$apply$8$$anonfun$apply$10/com$github$agourlay$cornichon$http$HttpService$$anonfun$$anonfun$$anonfun$$anonfun$$anonfun$$anonfun$$$outer()|",
      "|java+method:///com/github/agourlay/cornichon/http/HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5$$anonfun$apply$6/com$github$agourlay$cornichon$http$HttpService$$anonfun$$anonfun$$anonfun$$$outer()|"
    ],
    "affectedLib": "org.typelevel:cats-core_2.11:1.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.agourlay:cornichon-core_2.11:0.15.3",
    "coordinatesV2": "com.github.agourlay:cornichon-core_2.11:0.16.0",
    "caller": "|java+constructor:///com/github/agourlay/cornichon/steps/regular/assertStep/Assertion$$anon$5/Assertion$$anon$5(com.github.agourlay.cornichon.steps.regular.assertStep.Assertion,com.github.agourlay.cornichon.steps.regular.assertStep.Assertion)|",
    "called": "|java+method:///cats/syntax/package$apply$/catsSyntaxApply(java.lang.Object,cats.Apply)|",
    "v1Body": [
      "|java+method:///com/github/agourlay/cornichon/steps/regular/assertStep/Assertion$class/$init$(com.github.agourlay.cornichon.steps.regular.assertStep.Assertion)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///cats/Apply$Ops/$times$greater(java.lang.Object)|",
      "|java+method:///cats/syntax/package$apply$/catsSyntaxApply(java.lang.Object,cats.Apply)|",
      "|java+method:///com/github/agourlay/cornichon/steps/regular/assertStep/Assertion$class/$init$(com.github.agourlay.cornichon.steps.regular.assertStep.Assertion)|",
      "|java+method:///cats/data/NonEmptyList$/catsDataSemigroupForNonEmptyList()|",
      "|java+method:///com/github/agourlay/cornichon/steps/regular/assertStep/Assertion/validated()|",
      "|java+method:///com/github/agourlay/cornichon/core/Done$/validDone()|",
      "|java+method:///cats/data/Validated/isValid()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///cats/data/Validated$/catsDataApplicativeErrorForValidated(cats.kernel.Semigroup)|"
    ],
    "affectedLib": "org.typelevel:cats-core_2.11:1.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.agourlay:cornichon-core_2.11:0.15.3",
    "coordinatesV2": "com.github.agourlay:cornichon-core_2.11:0.16.0",
    "caller": "|java+method:///com/github/agourlay/cornichon/json/JsonSteps$JsonStepBuilder/com$github$agourlay$cornichon$json$JsonSteps$JsonStepBuilder$$handleIgnoredFields$1(scala.collection.immutable.Map,io.circe.Json,io.circe.Json)|",
    "called": "|java+method:///cats/instances/package$either$/catsStdInstancesForEither()|",
    "v1Body": [
      "|java+method:///cats/syntax/package$traverse$/toTraverseOps(java.lang.Object,cats.Traverse)|",
      "|java+method:///cats/syntax/EitherOps$/map$extension(scala.util.Either,scala.Function1)|",
      "|java+constructor:///com/github/agourlay/cornichon/json/JsonSteps$JsonStepBuilder$$anonfun$com$github$agourlay$cornichon$json$JsonSteps$JsonStepBuilder$$handleIgnoredFields$1$3/JsonSteps$JsonStepBuilder$$anonfun$com$github$agourlay$cornichon$json$JsonSteps$JsonStepBuilder$$handleIgnoredFields$1$3(com.github.agourlay.cornichon.json.JsonSteps$JsonStepBuilder,io.circe.Json,io.circe.Json)|",
      "|java+constructor:///com/github/agourlay/cornichon/json/JsonSteps$JsonStepBuilder$$anonfun$com$github$agourlay$cornichon$json$JsonSteps$JsonStepBuilder$$handleIgnoredFields$1$1/JsonSteps$JsonStepBuilder$$anonfun$com$github$agourlay$cornichon$json$JsonSteps$JsonStepBuilder$$handleIgnoredFields$1$1(com.github.agourlay.cornichon.json.JsonSteps$JsonStepBuilder,io.circe.Json)|",
      "|java+constructor:///com/github/agourlay/cornichon/json/JsonSteps$JsonStepBuilder$$anonfun$com$github$agourlay$cornichon$json$JsonSteps$JsonStepBuilder$$handleIgnoredFields$1$2/JsonSteps$JsonStepBuilder$$anonfun$com$github$agourlay$cornichon$json$JsonSteps$JsonStepBuilder$$handleIgnoredFields$1$2(com.github.agourlay.cornichon.json.JsonSteps$JsonStepBuilder,scala.collection.immutable.Map)|",
      "|java+method:///scala/util/Right$/apply(java.lang.Object)|",
      "|java+method:///com/github/agourlay/cornichon/json/JsonSteps$JsonStepBuilder/com$github$agourlay$cornichon$json$JsonSteps$JsonStepBuilder$$ignoredKeys()|",
      "|java+method:///com/github/agourlay/cornichon/json/JsonSteps$JsonStepBuilder/com$github$agourlay$cornichon$json$JsonSteps$JsonStepBuilder$$whitelist()|",
      "|java+method:///com/github/agourlay/cornichon/json/CornichonJson$/whitelistingValue(io.circe.Json,io.circe.Json)|",
      "|java+method:///scala/package$/Right()|",
      "|java+method:///scala/collection/immutable/List/nonEmpty()|",
      "|java+method:///cats/syntax/package$either$/catsSyntaxEither(scala.util.Either)|",
      "|java+method:///cats/instances/package$list$/catsStdInstancesForList()|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///cats/instances/package$either$/catsStdInstancesForEither()|",
      "|java+method:///cats/Traverse$Ops/traverse(scala.Function1,cats.Applicative)|"
    ],
    "v2Body": [
      "|java+method:///cats/syntax/package$traverse$/toTraverseOps(java.lang.Object,cats.Traverse)|",
      "|java+method:///cats/syntax/EitherOps$/map$extension(scala.util.Either,scala.Function1)|",
      "|java+constructor:///com/github/agourlay/cornichon/json/JsonSteps$JsonStepBuilder$$anonfun$com$github$agourlay$cornichon$json$JsonSteps$JsonStepBuilder$$handleIgnoredFields$1$3/JsonSteps$JsonStepBuilder$$anonfun$com$github$agourlay$cornichon$json$JsonSteps$JsonStepBuilder$$handleIgnoredFields$1$3(com.github.agourlay.cornichon.json.JsonSteps$JsonStepBuilder,io.circe.Json,io.circe.Json)|",
      "|java+method:///cats/syntax/EitherIdOps$/asRight$extension(java.lang.Object)|",
      "|java+constructor:///com/github/agourlay/cornichon/json/JsonSteps$JsonStepBuilder$$anonfun$com$github$agourlay$cornichon$json$JsonSteps$JsonStepBuilder$$handleIgnoredFields$1$1/JsonSteps$JsonStepBuilder$$anonfun$com$github$agourlay$cornichon$json$JsonSteps$JsonStepBuilder$$handleIgnoredFields$1$1(com.github.agourlay.cornichon.json.JsonSteps$JsonStepBuilder,io.circe.Json)|",
      "|java+method:///com/github/agourlay/cornichon/json/CornichonJson$/whitelistingValue(io.circe.Json,io.circe.Json)|",
      "|java+method:///cats/syntax/package$either$/catsSyntaxEitherId(java.lang.Object)|",
      "|java+constructor:///com/github/agourlay/cornichon/json/JsonSteps$JsonStepBuilder$$anonfun$com$github$agourlay$cornichon$json$JsonSteps$JsonStepBuilder$$handleIgnoredFields$1$2/JsonSteps$JsonStepBuilder$$anonfun$com$github$agourlay$cornichon$json$JsonSteps$JsonStepBuilder$$handleIgnoredFields$1$2(com.github.agourlay.cornichon.json.JsonSteps$JsonStepBuilder,scala.collection.immutable.Map)|",
      "|java+method:///com/github/agourlay/cornichon/json/JsonSteps$JsonStepBuilder/com$github$agourlay$cornichon$json$JsonSteps$JsonStepBuilder$$ignoredKeys()|",
      "|java+method:///com/github/agourlay/cornichon/json/JsonSteps$JsonStepBuilder/com$github$agourlay$cornichon$json$JsonSteps$JsonStepBuilder$$whitelist()|",
      "|java+method:///scala/collection/immutable/List/nonEmpty()|",
      "|java+method:///cats/syntax/package$either$/catsSyntaxEither(scala.util.Either)|",
      "|java+method:///cats/instances/package$list$/catsStdInstancesForList()|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///cats/instances/package$either$/catsStdInstancesForEither()|",
      "|java+method:///cats/Traverse$Ops/traverse(scala.Function1,cats.Applicative)|"
    ],
    "affectedLib": "org.typelevel:cats-core_2.11:1.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.agourlay:cornichon-core_2.11:0.15.3",
    "coordinatesV2": "com.github.agourlay:cornichon-core_2.11:0.16.0",
    "caller": "|java+constructor:///com/github/agourlay/cornichon/core/SessionKey$/SessionKey$()|",
    "called": "|java+method:///cats/Show$/show(scala.Function1)|",
    "v1Body": [
      "|java+method:///cats/Show$/show(scala.Function1)|",
      "|java+constructor:///com/github/agourlay/cornichon/core/SessionKey$$anonfun$4/SessionKey$$anonfun$4()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///cats/Show$/show(scala.Function1)|",
      "|java+constructor:///com/github/agourlay/cornichon/core/SessionKey$$anonfun$5/SessionKey$$anonfun$5()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "org.typelevel:cats-core_2.11:1.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.agourlay:cornichon-core_2.11:0.15.3",
    "coordinatesV2": "com.github.agourlay:cornichon-core_2.11:0.16.0",
    "caller": "|java+method:///com/github/agourlay/cornichon/core/Engine$/errorLogs(java.lang.String,cats.data.NonEmptyList,int)|",
    "called": "|java+method:///cats/data/NonEmptyList/toList()|",
    "v1Body": [
      "|java+constructor:///com/github/agourlay/cornichon/core/Engine$$anonfun$6/Engine$$anonfun$6(int)|",
      "|java+method:///scala/collection/immutable/List$/canBuildFrom()|",
      "|java+method:///com/github/agourlay/cornichon/core/FailureLogInstruction$/apply$default$3()|",
      "|java+constructor:///com/github/agourlay/cornichon/core/FailureLogInstruction/FailureLogInstruction(java.lang.String,int,scala.Option)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///cats/data/NonEmptyList/toList()|",
      "|java+method:///scala/collection/immutable/List/toVector()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/collection/immutable/List/flatMap(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/collection/immutable/List/$plus$colon(java.lang.Object,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+constructor:///com/github/agourlay/cornichon/core/Engine$$anonfun$6/Engine$$anonfun$6(int)|",
      "|java+method:///scala/collection/immutable/Vector$/canBuildFrom()|",
      "|java+method:///com/github/agourlay/cornichon/core/FailureLogInstruction$/apply$default$3()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///com/github/agourlay/cornichon/core/FailureLogInstruction/FailureLogInstruction(java.lang.String,int,scala.Option)|",
      "|java+method:///scala/collection/package$/breakOut(scala.collection.generic.CanBuildFrom)|",
      "|java+method:///cats/data/NonEmptyList/toList()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/collection/immutable/List/flatMap(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/collection/immutable/Vector/$plus$colon(java.lang.Object,scala.collection.generic.CanBuildFrom)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|"
    ],
    "affectedLib": "org.typelevel:cats-core_2.11:1.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.agourlay:cornichon-core_2.11:0.15.3",
    "coordinatesV2": "com.github.agourlay:cornichon-core_2.11:0.16.0",
    "caller": "|java+constructor:///com/github/agourlay/cornichon/core/Session$/Session$()|",
    "called": "|java+method:///cats/Show$/show(scala.Function1)|",
    "v1Body": [
      "|java+method:///cats/Show$/show(scala.Function1)|",
      "|java+method:///scala/collection/immutable/HashMap$/empty()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+constructor:///com/github/agourlay/cornichon/core/Session$$anon$1/Session$$anon$1()|",
      "|java+constructor:///com/github/agourlay/cornichon/core/Session$$anonfun$2/Session$$anonfun$2()|"
    ],
    "v2Body": [
      "|java+method:///cats/Show$/show(scala.Function1)|",
      "|java+method:///scala/collection/immutable/HashMap$/empty()|",
      "|java+method:///scala/collection/mutable/HashSet$/empty()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+constructor:///com/github/agourlay/cornichon/core/Session$$anon$1/Session$$anon$1()|",
      "|java+constructor:///com/github/agourlay/cornichon/core/Session$$anonfun$3/Session$$anonfun$3()|"
    ],
    "affectedLib": "org.typelevel:cats-core_2.11:1.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.agourlay:cornichon-core_2.11:0.15.3",
    "coordinatesV2": "com.github.agourlay:cornichon-core_2.11:0.16.0",
    "caller": "|java+constructor:///com/github/agourlay/cornichon/steps/regular/assertStep/Assertion$$anon$3/Assertion$$anon$3(com.github.agourlay.cornichon.steps.regular.assertStep.Assertion,com.github.agourlay.cornichon.steps.regular.assertStep.Assertion)|",
    "called": "|java+method:///cats/syntax/package$apply$/catsSyntaxApply(java.lang.Object,cats.Apply)|",
    "v1Body": [
      "|java+method:///com/github/agourlay/cornichon/steps/regular/assertStep/Assertion$class/$init$(com.github.agourlay.cornichon.steps.regular.assertStep.Assertion)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///cats/Apply$Ops/$times$greater(java.lang.Object)|",
      "|java+method:///cats/syntax/package$apply$/catsSyntaxApply(java.lang.Object,cats.Apply)|",
      "|java+method:///com/github/agourlay/cornichon/steps/regular/assertStep/Assertion$class/$init$(com.github.agourlay.cornichon.steps.regular.assertStep.Assertion)|",
      "|java+method:///cats/data/NonEmptyList$/catsDataSemigroupForNonEmptyList()|",
      "|java+method:///com/github/agourlay/cornichon/steps/regular/assertStep/Assertion/validated()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///cats/data/Validated$/catsDataApplicativeErrorForValidated(cats.kernel.Semigroup)|"
    ],
    "affectedLib": "org.typelevel:cats-core_2.11:1.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.agourlay:cornichon-core_2.11:0.15.3",
    "coordinatesV2": "com.github.agourlay:cornichon-core_2.11:0.16.0",
    "caller": "|java+method:///com/github/agourlay/cornichon/core/Session$$anonfun$addValues$extension$1/apply(scala.util.Either,scala.Tuple2)|",
    "called": "|java+method:///cats/syntax/EitherOps$/flatMap$extension(scala.util.Either,scala.Function1)|",
    "v1Body": [
      "|java+constructor:///com/github/agourlay/cornichon/core/Session$$anonfun$addValues$extension$1$$anonfun$apply$6/Session$$anonfun$addValues$extension$1$$anonfun$apply$6(com.github.agourlay.cornichon.core.Session$$anonfun$addValues$extension$1,scala.Tuple2)|",
      "|java+method:///cats/syntax/package$either$/catsSyntaxEither(scala.util.Either)|",
      "|java+method:///cats/syntax/EitherOps$/flatMap$extension(scala.util.Either,scala.Function1)|"
    ],
    "v2Body": [
      "|java+constructor:///com/github/agourlay/cornichon/core/Session$$anonfun$addValues$extension$1$$anonfun$apply$7/Session$$anonfun$addValues$extension$1$$anonfun$apply$7(com.github.agourlay.cornichon.core.Session$$anonfun$addValues$extension$1,scala.Tuple2)|",
      "|java+method:///cats/syntax/package$either$/catsSyntaxEither(scala.util.Either)|",
      "|java+method:///cats/syntax/EitherOps$/flatMap$extension(scala.util.Either,scala.Function1)|"
    ],
    "affectedLib": "org.typelevel:cats-core_2.11:1.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.agourlay:cornichon-core_2.11:0.15.3",
    "coordinatesV2": "com.github.agourlay:cornichon-core_2.11:0.16.0",
    "caller": "|java+method:///com/github/agourlay/cornichon/core/Engine$$anonfun$1/apply(cats.data.Validated)|",
    "called": "|java+method:///cats/data/IndexedStateT/flatMap(scala.Function1,cats.FlatMap)|",
    "v1Body": [
      "|java+method:///com/github/agourlay/cornichon/core/Engine$/mainLog()|",
      "|java+method:///monix/eval/Task$/catsAsync()|",
      "|java+method:///com/github/agourlay/cornichon/core/Engine/com$github$agourlay$cornichon$core$Engine$$regularStage(scala.collection.immutable.List,com.github.agourlay.cornichon.core.InfoLogInstruction)|",
      "|java+method:///com/github/agourlay/cornichon/core/Engine$/noOpStage()|",
      "|java+method:///com/github/agourlay/cornichon/core/Scenario/steps()|",
      "|java+method:///cats/data/Validated/isValid()|",
      "|java+method:///cats/data/IndexedStateT/flatMap(scala.Function1,cats.FlatMap)|",
      "|java+constructor:///com/github/agourlay/cornichon/core/Engine$$anonfun$1$$anonfun$apply$2/Engine$$anonfun$1$$anonfun$apply$2(com.github.agourlay.cornichon.core.Engine$$anonfun$1,cats.data.Validated)|"
    ],
    "v2Body": [
      "|java+method:///com/github/agourlay/cornichon/core/Engine$/com$github$agourlay$cornichon$core$Engine$$mainLog()|",
      "|java+method:///monix/eval/Task$/catsAsync()|",
      "|java+method:///com/github/agourlay/cornichon/core/Engine/com$github$agourlay$cornichon$core$Engine$$regularStage(scala.collection.immutable.List,com.github.agourlay.cornichon.core.InfoLogInstruction)|",
      "|java+method:///com/github/agourlay/cornichon/core/Scenario/steps()|",
      "|java+method:///com/github/agourlay/cornichon/core/Engine$/com$github$agourlay$cornichon$core$Engine$$noOpStage()|",
      "|java+method:///cats/data/Validated/isValid()|",
      "|java+method:///cats/data/IndexedStateT/flatMap(scala.Function1,cats.FlatMap)|",
      "|java+constructor:///com/github/agourlay/cornichon/core/Engine$$anonfun$1$$anonfun$apply$2/Engine$$anonfun$1$$anonfun$apply$2(com.github.agourlay.cornichon.core.Engine$$anonfun$1,cats.data.Validated)|"
    ],
    "affectedLib": "org.typelevel:cats-core_2.11:1.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.agourlay:cornichon-core_2.11:0.15.3",
    "coordinatesV2": "com.github.agourlay:cornichon-core_2.11:0.16.0",
    "caller": "|java+method:///com/github/agourlay/cornichon/core/Engine$$anonfun$1$$anonfun$apply$2$$anonfun$apply$3/apply(cats.data.Validated)|",
    "called": "|java+method:///cats/data/IndexedStateT/flatMap(scala.Function1,cats.FlatMap)|",
    "v1Body": [
      "|java+constructor:///com/github/agourlay/cornichon/core/Engine$$anonfun$1$$anonfun$apply$2$$anonfun$apply$3$$anonfun$apply$4/Engine$$anonfun$1$$anonfun$apply$2$$anonfun$apply$3$$anonfun$apply$4(com.github.agourlay.cornichon.core.Engine$$anonfun$1$$anonfun$apply$2$$anonfun$apply$3,cats.data.Validated)|",
      "|java+method:///com/github/agourlay/cornichon/core/Engine/com$github$agourlay$cornichon$core$Engine$$regularStage(scala.collection.immutable.List,com.github.agourlay.cornichon.core.InfoLogInstruction)|",
      "|java+method:///com/github/agourlay/cornichon/core/FeatureExecutionContext/finallySteps()|",
      "|java+method:///com/github/agourlay/cornichon/core/Engine$/finallyLog()|",
      "|java+method:///com/github/agourlay/cornichon/core/Engine$$anonfun$1$$anonfun$apply$2/com$github$agourlay$cornichon$core$Engine$$anonfun$$anonfun$$$outer()|",
      "|java+method:///cats/data/IndexedStateT/flatMap(scala.Function1,cats.FlatMap)|",
      "|java+method:///monix/eval/Task$/catsAsync()|",
      "|java+method:///com/github/agourlay/cornichon/core/Engine$$anonfun$1/com$github$agourlay$cornichon$core$Engine$$anonfun$$$outer()|"
    ],
    "v2Body": [
      "|java+constructor:///com/github/agourlay/cornichon/core/Engine$$anonfun$1$$anonfun$apply$2$$anonfun$apply$3$$anonfun$apply$4/Engine$$anonfun$1$$anonfun$apply$2$$anonfun$apply$3$$anonfun$apply$4(com.github.agourlay.cornichon.core.Engine$$anonfun$1$$anonfun$apply$2$$anonfun$apply$3,cats.data.Validated)|",
      "|java+method:///com/github/agourlay/cornichon/core/Engine/com$github$agourlay$cornichon$core$Engine$$regularStage(scala.collection.immutable.List,com.github.agourlay.cornichon.core.InfoLogInstruction)|",
      "|java+method:///com/github/agourlay/cornichon/core/FeatureExecutionContext/finallySteps()|",
      "|java+method:///com/github/agourlay/cornichon/core/Engine$/com$github$agourlay$cornichon$core$Engine$$finallyLog()|",
      "|java+method:///com/github/agourlay/cornichon/core/Engine$$anonfun$1$$anonfun$apply$2/com$github$agourlay$cornichon$core$Engine$$anonfun$$anonfun$$$outer()|",
      "|java+method:///cats/data/IndexedStateT/flatMap(scala.Function1,cats.FlatMap)|",
      "|java+method:///monix/eval/Task$/catsAsync()|",
      "|java+method:///com/github/agourlay/cornichon/core/Engine$$anonfun$1/com$github$agourlay$cornichon$core$Engine$$anonfun$$$outer()|"
    ],
    "affectedLib": "org.typelevel:cats-core_2.11:1.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.agourlay:cornichon-core_2.11:0.15.3",
    "coordinatesV2": "com.github.agourlay:cornichon-core_2.11:0.16.0",
    "caller": "|java+method:///com/github/agourlay/cornichon/core/Session$$anonfun$get$extension0$3/apply(scala.Tuple2)|",
    "called": "|java+method:///cats/syntax/EitherOps$/map$extension(scala.util.Either,scala.Function1)|",
    "v1Body": [
      "|java+method:///cats/syntax/EitherOps$/map$extension(scala.util.Either,scala.Function1)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Option/toRight(scala.Function0)|",
      "|java+constructor:///com/github/agourlay/cornichon/core/Session$$anonfun$get$extension0$3$$anonfun$apply$4/Session$$anonfun$get$extension0$3$$anonfun$apply$4(com.github.agourlay.cornichon.core.Session$$anonfun$get$extension0$3,scala.collection.immutable.Vector,int)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///scala/Function1/apply(java.lang.Object)|",
      "|java+method:///scala/Tuple2/_2$mcI$sp()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///cats/syntax/package$either$/catsSyntaxEither(scala.util.Either)|",
      "|java+method:///scala/collection/immutable/Vector/lift()|",
      "|java+constructor:///com/github/agourlay/cornichon/core/Session$$anonfun$get$extension0$3$$anonfun$apply$5/Session$$anonfun$get$extension0$3$$anonfun$apply$5(com.github.agourlay.cornichon.core.Session$$anonfun$get$extension0$3)|"
    ],
    "v2Body": [
      "|java+method:///cats/syntax/EitherOps$/map$extension(scala.util.Either,scala.Function1)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Option/toRight(scala.Function0)|",
      "|java+constructor:///com/github/agourlay/cornichon/core/Session$$anonfun$get$extension0$3$$anonfun$apply$5/Session$$anonfun$get$extension0$3$$anonfun$apply$5(com.github.agourlay.cornichon.core.Session$$anonfun$get$extension0$3,scala.collection.immutable.Vector,int)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///scala/Function1/apply(java.lang.Object)|",
      "|java+method:///scala/Tuple2/_2$mcI$sp()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///cats/syntax/package$either$/catsSyntaxEither(scala.util.Either)|",
      "|java+method:///scala/collection/immutable/Vector/lift()|",
      "|java+constructor:///com/github/agourlay/cornichon/core/Session$$anonfun$get$extension0$3$$anonfun$apply$6/Session$$anonfun$get$extension0$3$$anonfun$apply$6(com.github.agourlay.cornichon.core.Session$$anonfun$get$extension0$3)|"
    ],
    "affectedLib": "org.typelevel:cats-core_2.11:1.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.agourlay:cornichon-core_2.11:0.15.3",
    "coordinatesV2": "com.github.agourlay:cornichon-core_2.11:0.16.0",
    "caller": "|java+method:///com/github/agourlay/cornichon/core/Session$/addValues$extension(scala.collection.immutable.Map,scala.collection.Seq)|",
    "called": "|java+method:///cats/syntax/package$either$/catsSyntaxEitherId(java.lang.Object)|",
    "v1Body": [
      "|java+method:///cats/syntax/EitherIdOps$/asRight$extension(java.lang.Object)|",
      "|java+method:///cats/syntax/package$either$/catsSyntaxEitherId(java.lang.Object)|",
      "|java+constructor:///com/github/agourlay/cornichon/core/Session$$anonfun$addValues$extension$1/Session$$anonfun$addValues$extension$1()|",
      "|java+method:///scala/collection/Seq/foldLeft(java.lang.Object,scala.Function2)|",
      "|java+constructor:///com/github/agourlay/cornichon/core/Session/Session(scala.collection.immutable.Map)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///cats/syntax/EitherIdOps$/asRight$extension(java.lang.Object)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///cats/syntax/package$either$/catsSyntaxEitherId(java.lang.Object)|",
      "|java+constructor:///com/github/agourlay/cornichon/core/Session$$anonfun$addValues$extension$1/Session$$anonfun$addValues$extension$1()|",
      "|java+method:///scala/collection/immutable/$colon$colon/head()|",
      "|java+method:///scala/collection/Seq/foldLeft(java.lang.Object,scala.Function2)|",
      "|java+constructor:///com/github/agourlay/cornichon/core/Session/Session(scala.collection.immutable.Map)|",
      "|java+method:///scala/collection/immutable/$colon$colon/tl$1()|",
      "|java+method:///com/github/agourlay/cornichon/core/Session$/addValue$extension(scala.collection.immutable.Map,java.lang.String,java.lang.String)|",
      "|java+method:///scala/Tuple2/_2()|"
    ],
    "affectedLib": "org.typelevel:cats-core_2.11:1.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.agourlay:cornichon-core_2.11:0.15.3",
    "coordinatesV2": "com.github.agourlay:cornichon-core_2.11:0.16.0",
    "caller": "|java+method:///com/github/agourlay/cornichon/core/Engine$/handleThrowable(com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.RunState,java.lang.Throwable)|",
    "called": "|java+method:///cats/data/NonEmptyList$/one(java.lang.Object)|",
    "v1Body": [
      "|java+method:///com/github/agourlay/cornichon/core/RunState/depth()|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///com/github/agourlay/cornichon/core/Engine$/errorsToFailureStep(com.github.agourlay.cornichon.core.Step,int,cats.data.NonEmptyList)|",
      "|java+method:///cats/data/NonEmptyList$/one(java.lang.Object)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///scala/package$/Left()|",
      "|java+method:///com/github/agourlay/cornichon/core/CornichonError$/fromThrowable(java.lang.Throwable)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///com/github/agourlay/cornichon/core/RunState/appendLogs(scala.collection.immutable.Vector)|",
      "|java+method:///scala/util/Left$/apply(java.lang.Object)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///cats/syntax/EitherIdOps$/asLeft$extension(java.lang.Object)|",
      "|java+method:///com/github/agourlay/cornichon/core/RunState/depth()|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///cats/syntax/package$either$/catsSyntaxEitherId(java.lang.Object)|",
      "|java+method:///com/github/agourlay/cornichon/core/Engine$/errorsToFailureStep(com.github.agourlay.cornichon.core.Step,int,cats.data.NonEmptyList)|",
      "|java+method:///cats/data/NonEmptyList$/one(java.lang.Object)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///com/github/agourlay/cornichon/core/CornichonError$/fromThrowable(java.lang.Throwable)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///com/github/agourlay/cornichon/core/RunState/appendLogs(scala.collection.immutable.Vector)|"
    ],
    "affectedLib": "org.typelevel:cats-core_2.11:1.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.agourlay:cornichon-core_2.11:0.15.3",
    "coordinatesV2": "com.github.agourlay:cornichon-core_2.11:0.16.0",
    "caller": "|java+method:///com/github/agourlay/cornichon/json/JsonSteps$JsonStepBuilder$$anonfun$isImpl$1/apply(scala.collection.immutable.Map)|",
    "called": "|java+method:///cats/syntax/EitherOps$/flatMap$extension(scala.util.Either,scala.Function1)|",
    "v1Body": [
      "|java+method:///com/github/agourlay/cornichon/json/JsonSteps$JsonStepBuilder/com$github$agourlay$cornichon$json$JsonSteps$JsonStepBuilder$$sessionKey()|",
      "|java+method:///scala/package$/Left()|",
      "|java+method:///com/github/agourlay/cornichon/core/Session$/get$extension1(scala.collection.immutable.Map,com.github.agourlay.cornichon.core.SessionKey)|",
      "|java+constructor:///com/github/agourlay/cornichon/json/JsonSteps$JsonStepBuilder$$anonfun$isImpl$1$$anonfun$apply$9/JsonSteps$JsonStepBuilder$$anonfun$isImpl$1$$anonfun$apply$9(com.github.agourlay.cornichon.json.JsonSteps$JsonStepBuilder$$anonfun$isImpl$1,scala.collection.immutable.Map)|",
      "|java+method:///com/github/agourlay/cornichon/json/JsonSteps$JsonStepBuilder/com$github$agourlay$cornichon$json$JsonSteps$JsonStepBuilder$$ignoredKeys()|",
      "|java+method:///com/github/agourlay/cornichon/json/JsonSteps$JsonStepBuilder/com$github$agourlay$cornichon$json$JsonSteps$JsonStepBuilder$$whitelist()|",
      "|java+method:///cats/syntax/EitherOps$/flatMap$extension(scala.util.Either,scala.Function1)|",
      "|java+method:///scala/util/Left$/apply(java.lang.Object)|",
      "|java+method:///com/github/agourlay/cornichon/steps/regular/assertStep/Assertion$/either(scala.util.Either)|",
      "|java+method:///scala/collection/immutable/List/nonEmpty()|",
      "|java+method:///cats/syntax/package$either$/catsSyntaxEither(scala.util.Either)|"
    ],
    "v2Body": [
      "|java+method:///cats/syntax/EitherIdOps$/asLeft$extension(java.lang.Object)|",
      "|java+method:///com/github/agourlay/cornichon/json/JsonSteps$JsonStepBuilder/com$github$agourlay$cornichon$json$JsonSteps$JsonStepBuilder$$sessionKey()|",
      "|java+constructor:///com/github/agourlay/cornichon/json/JsonSteps$JsonStepBuilder$$anonfun$isImpl$1$$anonfun$apply$9/JsonSteps$JsonStepBuilder$$anonfun$isImpl$1$$anonfun$apply$9(com.github.agourlay.cornichon.json.JsonSteps$JsonStepBuilder$$anonfun$isImpl$1,scala.collection.immutable.Map)|",
      "|java+method:///com/github/agourlay/cornichon/json/JsonSteps$JsonStepBuilder/com$github$agourlay$cornichon$json$JsonSteps$JsonStepBuilder$$ignoredKeys()|",
      "|java+method:///com/github/agourlay/cornichon/json/JsonSteps$JsonStepBuilder/com$github$agourlay$cornichon$json$JsonSteps$JsonStepBuilder$$whitelist()|",
      "|java+method:///cats/syntax/EitherOps$/flatMap$extension(scala.util.Either,scala.Function1)|",
      "|java+method:///cats/syntax/package$either$/catsSyntaxEitherId(java.lang.Object)|",
      "|java+method:///com/github/agourlay/cornichon/core/Session$/get$extension1(scala.collection.immutable.Map,com.github.agourlay.cornichon.core.SessionKey)|",
      "|java+method:///com/github/agourlay/cornichon/steps/regular/assertStep/Assertion$/either(scala.util.Either)|",
      "|java+method:///scala/collection/immutable/List/nonEmpty()|",
      "|java+method:///cats/syntax/package$either$/catsSyntaxEither(scala.util.Either)|"
    ],
    "affectedLib": "org.typelevel:cats-core_2.11:1.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.agourlay:cornichon-core_2.11:0.15.3",
    "coordinatesV2": "com.github.agourlay:cornichon-core_2.11:0.16.0",
    "caller": "|java+method:///com/github/agourlay/cornichon/json/JsonSteps$JsonStepBuilder$$anonfun$isImpl$1$$anonfun$apply$9$$anonfun$apply$10/apply(io.circe.Json)|",
    "called": "|java+method:///cats/syntax/EitherOps$/flatMap$extension(scala.util.Either,scala.Function1)|",
    "v1Body": [
      "|java+method:///scala/package$/Left()|",
      "|java+method:///com/github/agourlay/cornichon/json/JsonSteps$JsonStepBuilder/com$github$agourlay$cornichon$json$JsonSteps$JsonStepBuilder$$jsonPath()|",
      "|java+method:///cats/instances/package$string$/catsStdShowForString()|",
      "|java+constructor:///com/github/agourlay/cornichon/json/JsonSteps$JsonStepBuilder$$anonfun$isImpl$1$$anonfun$apply$9$$anonfun$apply$10$$anonfun$apply$11/JsonSteps$JsonStepBuilder$$anonfun$isImpl$1$$anonfun$apply$9$$anonfun$apply$10$$anonfun$apply$11(com.github.agourlay.cornichon.json.JsonSteps$JsonStepBuilder$$anonfun$isImpl$1$$anonfun$apply$9$$anonfun$apply$10,io.circe.Json)|",
      "|java+method:///cats/syntax/package$either$/catsSyntaxEither(scala.util.Either)|",
      "|java+method:///com/github/agourlay/cornichon/core/Done$/rightDone()|",
      "|java+method:///com/github/agourlay/cornichon/json/JsonSteps$JsonStepBuilder$$anonfun$isImpl$1$$anonfun$apply$9/com$github$agourlay$cornichon$json$JsonSteps$JsonStepBuilder$$anonfun$$anonfun$$$outer()|",
      "|java+constructor:///com/github/agourlay/cornichon/json/PathSelectsNothing/PathSelectsNothing(java.lang.String,io.circe.Json)|",
      "|java+method:///scala/util/Left$/apply(java.lang.Object)|",
      "|java+method:///com/github/agourlay/cornichon/json/CornichonJson$/parseJsonUnsafe(java.lang.Object,io.circe.Encoder,cats.Show)|",
      "|java+method:///io/circe/Json/isNull()|",
      "|java+method:///com/github/agourlay/cornichon/json/JsonSteps$JsonStepBuilder$$anonfun$isImpl$1/com$github$agourlay$cornichon$json$JsonSteps$JsonStepBuilder$$anonfun$$$outer()|",
      "|java+method:///cats/syntax/EitherOps$/flatMap$extension(scala.util.Either,scala.Function1)|",
      "|java+method:///io/circe/Encoder$/encodeString()|"
    ],
    "v2Body": [
      "|java+method:///cats/syntax/EitherIdOps$/asLeft$extension(java.lang.Object)|",
      "|java+method:///com/github/agourlay/cornichon/json/JsonSteps$JsonStepBuilder/com$github$agourlay$cornichon$json$JsonSteps$JsonStepBuilder$$jsonPath()|",
      "|java+method:///cats/syntax/package$either$/catsSyntaxEitherId(java.lang.Object)|",
      "|java+method:///cats/instances/package$string$/catsStdShowForString()|",
      "|java+constructor:///com/github/agourlay/cornichon/json/JsonSteps$JsonStepBuilder$$anonfun$isImpl$1$$anonfun$apply$9$$anonfun$apply$10$$anonfun$apply$11/JsonSteps$JsonStepBuilder$$anonfun$isImpl$1$$anonfun$apply$9$$anonfun$apply$10$$anonfun$apply$11(com.github.agourlay.cornichon.json.JsonSteps$JsonStepBuilder$$anonfun$isImpl$1$$anonfun$apply$9$$anonfun$apply$10,io.circe.Json)|",
      "|java+method:///cats/syntax/package$either$/catsSyntaxEither(scala.util.Either)|",
      "|java+method:///com/github/agourlay/cornichon/core/Done$/rightDone()|",
      "|java+method:///com/github/agourlay/cornichon/json/JsonSteps$JsonStepBuilder$$anonfun$isImpl$1$$anonfun$apply$9/com$github$agourlay$cornichon$json$JsonSteps$JsonStepBuilder$$anonfun$$anonfun$$$outer()|",
      "|java+constructor:///com/github/agourlay/cornichon/json/PathSelectsNothing/PathSelectsNothing(java.lang.String,io.circe.Json)|",
      "|java+method:///com/github/agourlay/cornichon/json/CornichonJson$/parseJsonUnsafe(java.lang.Object,io.circe.Encoder,cats.Show)|",
      "|java+method:///io/circe/Json/isNull()|",
      "|java+method:///com/github/agourlay/cornichon/json/JsonSteps$JsonStepBuilder$$anonfun$isImpl$1/com$github$agourlay$cornichon$json$JsonSteps$JsonStepBuilder$$anonfun$$$outer()|",
      "|java+method:///cats/syntax/EitherOps$/flatMap$extension(scala.util.Either,scala.Function1)|",
      "|java+method:///io/circe/Encoder$/encodeString()|"
    ],
    "affectedLib": "org.typelevel:cats-core_2.11:1.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.agourlay:cornichon-core_2.11:0.15.3",
    "coordinatesV2": "com.github.agourlay:cornichon-core_2.11:0.16.0",
    "caller": "|java+method:///com/github/agourlay/cornichon/http/HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5$$anonfun$apply$6$$anonfun$apply$7$$anonfun$apply$8/apply(scala.collection.Seq)|",
    "called": "|java+method:///cats/syntax/EitherOps$/map$extension(scala.util.Either,scala.Function1)|",
    "v1Body": [
      "|java+method:///com/github/agourlay/cornichon/http/HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5$$anonfun$apply$6$$anonfun$apply$7/com$github$agourlay$cornichon$http$HttpService$$anonfun$$anonfun$$anonfun$$anonfun$$$outer()|",
      "|java+method:///cats/syntax/EitherOps$/map$extension(scala.util.Either,scala.Function1)|",
      "|java+method:///scala/collection/Seq/toList()|",
      "|java+constructor:///com/github/agourlay/cornichon/http/HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5$$anonfun$apply$6$$anonfun$apply$7$$anonfun$apply$8$$anonfun$apply$10/HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5$$anonfun$apply$6$$anonfun$apply$7$$anonfun$apply$8$$anonfun$apply$10(com.github.agourlay.cornichon.http.HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5$$anonfun$apply$6$$anonfun$apply$7$$anonfun$apply$8)|",
      "|java+method:///cats/syntax/package$either$/catsSyntaxEither(scala.util.Either)|",
      "|java+method:///com/github/agourlay/cornichon/http/HttpService$$anonfun$resolveRequestParts$3/com$github$agourlay$cornichon$http$HttpService$$anonfun$$$outer()|",
      "|java+method:///com/github/agourlay/cornichon/http/HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5$$anonfun$apply$6/com$github$agourlay$cornichon$http$HttpService$$anonfun$$anonfun$$anonfun$$$outer()|",
      "|java+method:///cats/syntax/EitherOps$/flatMap$extension(scala.util.Either,scala.Function1)|",
      "|java+method:///com/github/agourlay/cornichon/resolver/PlaceholderResolver/fillPlaceholders(scala.collection.immutable.List,scala.collection.immutable.Map)|",
      "|java+constructor:///com/github/agourlay/cornichon/http/HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5$$anonfun$apply$6$$anonfun$apply$7$$anonfun$apply$8$$anonfun$apply$9/HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5$$anonfun$apply$6$$anonfun$apply$7$$anonfun$apply$8$$anonfun$apply$9(com.github.agourlay.cornichon.http.HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5$$anonfun$apply$6$$anonfun$apply$7$$anonfun$apply$8,scala.collection.Seq)|",
      "|java+method:///com/github/agourlay/cornichon/http/HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5/com$github$agourlay$cornichon$http$HttpService$$anonfun$$anonfun$$$outer()|"
    ],
    "v2Body": [
      "|java+method:///com/github/agourlay/cornichon/http/HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5$$anonfun$apply$6$$anonfun$apply$7/com$github$agourlay$cornichon$http$HttpService$$anonfun$$anonfun$$anonfun$$anonfun$$$outer()|",
      "|java+method:///cats/syntax/EitherOps$/map$extension(scala.util.Either,scala.Function1)|",
      "|java+method:///com/github/agourlay/cornichon/resolver/PlaceholderResolver/fillPlaceholders(scala.collection.Seq,scala.collection.immutable.Map)|",
      "|java+constructor:///com/github/agourlay/cornichon/http/HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5$$anonfun$apply$6$$anonfun$apply$7$$anonfun$apply$8$$anonfun$apply$10/HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5$$anonfun$apply$6$$anonfun$apply$7$$anonfun$apply$8$$anonfun$apply$10(com.github.agourlay.cornichon.http.HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5$$anonfun$apply$6$$anonfun$apply$7$$anonfun$apply$8)|",
      "|java+method:///cats/syntax/package$either$/catsSyntaxEither(scala.util.Either)|",
      "|java+method:///com/github/agourlay/cornichon/http/HttpService$$anonfun$resolveRequestParts$3/com$github$agourlay$cornichon$http$HttpService$$anonfun$$$outer()|",
      "|java+method:///com/github/agourlay/cornichon/http/HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5$$anonfun$apply$6/com$github$agourlay$cornichon$http$HttpService$$anonfun$$anonfun$$anonfun$$$outer()|",
      "|java+method:///cats/syntax/EitherOps$/flatMap$extension(scala.util.Either,scala.Function1)|",
      "|java+constructor:///com/github/agourlay/cornichon/http/HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5$$anonfun$apply$6$$anonfun$apply$7$$anonfun$apply$8$$anonfun$apply$9/HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5$$anonfun$apply$6$$anonfun$apply$7$$anonfun$apply$8$$anonfun$apply$9(com.github.agourlay.cornichon.http.HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5$$anonfun$apply$6$$anonfun$apply$7$$anonfun$apply$8,scala.collection.Seq)|",
      "|java+method:///com/github/agourlay/cornichon/http/HttpService$$anonfun$resolveRequestParts$3$$anonfun$apply$5/com$github$agourlay$cornichon$http$HttpService$$anonfun$$anonfun$$$outer()|"
    ],
    "affectedLib": "org.typelevel:cats-core_2.11:1.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.agourlay:cornichon-core_2.11:0.15.3",
    "coordinatesV2": "com.github.agourlay:cornichon-core_2.11:0.16.0",
    "caller": "|java+method:///com/github/agourlay/cornichon/core/Session$/addValue$extension(scala.collection.immutable.Map,java.lang.String,java.lang.String)|",
    "called": "|java+method:///cats/syntax/EitherOps$/map$extension(scala.util.Either,scala.Function1)|",
    "v1Body": [
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///scala/package$/Left()|",
      "|java+method:///scala/package$/Right()|",
      "|java+method:///scala/util/Right$/apply(java.lang.Object)|",
      "|java+constructor:///com/github/agourlay/cornichon/core/Session$$anonfun$addValue$extension$2/Session$$anonfun$addValue$extension$2(java.lang.String,java.lang.String,scala.collection.immutable.Map)|",
      "|java+constructor:///com/github/agourlay/cornichon/core/Session$$anonfun$addValue$extension$3/Session$$anonfun$addValue$extension$3(java.lang.String,java.lang.String,scala.collection.immutable.Map)|",
      "|java+method:///scala/util/Left$/apply(java.lang.Object)|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///scala/Option/fold(scala.Function0,scala.Function1)|",
      "|java+method:///com/github/agourlay/cornichon/core/Session$/notAllowedInKey()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///com/github/agourlay/cornichon/core/EmptyKey/EmptyKey(scala.collection.immutable.Map)|",
      "|java+method:///scala/collection/immutable/Map/get(java.lang.Object)|",
      "|java+constructor:///com/github/agourlay/cornichon/core/IllegalKey/IllegalKey(java.lang.String)|",
      "|java+constructor:///com/github/agourlay/cornichon/core/Session$$anonfun$addValue$extension$1/Session$$anonfun$addValue$extension$1(java.lang.String)|",
      "|java+method:///scala/collection/immutable/StringOps/exists(scala.Function1)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///com/github/agourlay/cornichon/core/Session/Session(scala.collection.immutable.Map)|",
      "|java+method:///cats/syntax/EitherOps$/map$extension(scala.util.Either,scala.Function1)|",
      "|java+constructor:///com/github/agourlay/cornichon/core/Session$$anonfun$addValue$extension$1/Session$$anonfun$addValue$extension$1(java.lang.String,scala.collection.immutable.Map)|",
      "|java+method:///scala/package$/Right()|",
      "|java+method:///com/github/agourlay/cornichon/core/Session$/validateKey$1(java.lang.String,scala.collection.immutable.Map)|",
      "|java+method:///cats/syntax/package$either$/catsSyntaxEither(scala.util.Either)|",
      "|java+method:///com/github/agourlay/cornichon/core/Session$/com$github$agourlay$cornichon$core$Session$$knownKeysCache()|",
      "|java+method:///com/github/agourlay/cornichon/core/Session$/com$github$agourlay$cornichon$core$Session$$updateContent$1(scala.collection.immutable.Map,java.lang.String,java.lang.String)|",
      "|java+method:///scala/util/Right$/apply(java.lang.Object)|",
      "|java+method:///scala/collection/mutable/HashSet/contains(java.lang.Object)|"
    ],
    "affectedLib": "org.typelevel:cats-core_2.11:1.1.0",
    "change": "UPDATED"
  }
]