[
  {
    "coordinatesV1": "com.github.dtaniwaki:akka-pusher_2.11:0.2.1",
    "coordinatesV2": "com.github.dtaniwaki:akka-pusher_2.11:0.2.2",
    "caller": "|java+method:///com/github/dtaniwaki/akka_pusher/PusherActor$$anonfun$receive$1/apply(java.lang.Object)|",
    "called": "|java+method:///spray/json/DefaultJsonProtocol$/JsValueFormat()|",
    "v1Body": [
      "|java+method:///scala/collection/mutable/Seq/grouped(int)|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherMessages$ChannelMessage/channel()|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherActor/pusher()|",
      "|java+method:///scala/collection/Iterator/foreach(scala.Function1)|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherActor/batchTriggerQueue()|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherActor/system()|",
      "|java+constructor:///com/github/dtaniwaki/akka_pusher/PusherActor$$anonfun$receive$1$$anonfun$3/PusherActor$$anonfun$receive$1$$anonfun$3(com.github.dtaniwaki.akka_pusher.PusherActor$$anonfun$receive$1)|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherClient/trigger(scala.collection.Seq,java.lang.String,java.lang.Object,scala.Option,spray.json.JsonWriter)|",
      "|java+method:///akka/actor/ScalaActorRef/$bang(java.lang.Object,akka.actor.ActorRef)|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherMessages$ValidateSignatureMessage/signature()|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherMessages$ChannelsMessage/attributes()|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherActor/batchNumber()|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherMessages$TriggerMessage/event()|",
      "|java+method:///scala/collection/mutable/Seq/length()|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherClient/users(java.lang.String)|",
      "|java+method:///akka/actor/ActorRef$/noSender()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherActor/self()|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherMessages$ChannelsMessage/prefixFilter()|",
      "|java+method:///akka/actor/package$/actorRef2Scala(akka.actor.ActorRef)|",
      "|java+method:///akka/pattern/PipeToSupport$PipeableFuture/pipeTo(akka.actor.ActorRef,akka.actor.ActorRef)|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherMessages$ChannelMessage/attributes()|",
      "|java+constructor:///com/github/dtaniwaki/akka_pusher/PusherActor$$anonfun$receive$1$$anonfun$4/PusherActor$$anonfun$receive$1$$anonfun$4(com.github.dtaniwaki.akka_pusher.PusherActor$$anonfun$receive$1)|",
      "|java+method:///akka/actor/ActorSystem/deadLetters()|",
      "|java+method:///akka/pattern/package$/pipe(scala.concurrent.Future,scala.concurrent.ExecutionContext)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToBoolean(boolean)|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherMessages$AuthenticateMessage/data()|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherMessages$TriggerMessage/message()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherMessages$AuthenticateMessage/channel()|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherMessages$AuthenticateMessage/socketId()|",
      "|java+method:///spray/json/DefaultJsonProtocol$/JsValueFormat()|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherActor/sender()|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherClient/authenticate(java.lang.String,java.lang.String,scala.Option,spray.json.JsonWriter)|",
      "|java+method:///scala/collection/mutable/Queue/dequeueAll(scala.Function1)|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherMessages$ValidateSignatureMessage/body()|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherMessages$TriggerMessage/socketId()|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherActor$$anonfun$receive$1/apply(java.lang.Object)|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherMessages$UsersMessage/channel()|",
      "|java+method:///scala/collection/mutable/Queue/enqueue(scala.collection.Seq)|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherClient/channels(java.lang.String,scala.Option)|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherMessages$TriggerMessage/channels()|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherActor/batchTrigger()|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherActor/ec()|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherClient/validateSignature(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherMessages$ValidateSignatureMessage/key()|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherClient/channel(java.lang.String,scala.Option)|"
    ],
    "v2Body": [
      "|java+method:///scala/collection/mutable/Seq/grouped(int)|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherMessages$ChannelMessage/channel()|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherActor/pusher()|",
      "|java+method:///scala/collection/Iterator/foreach(scala.Function1)|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherActor/batchTriggerQueue()|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherMessages$TriggerMessage/channel()|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherActor/system()|",
      "|java+constructor:///com/github/dtaniwaki/akka_pusher/PusherActor$$anonfun$receive$1$$anonfun$3/PusherActor$$anonfun$receive$1$$anonfun$3(com.github.dtaniwaki.akka_pusher.PusherActor$$anonfun$receive$1)|",
      "|java+method:///akka/actor/ScalaActorRef/$bang(java.lang.Object,akka.actor.ActorRef)|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherMessages$ValidateSignatureMessage/signature()|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherActor/batchNumber()|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherMessages$TriggerMessage/event()|",
      "|java+method:///scala/collection/mutable/Seq/length()|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherClient/trigger(java.lang.String,java.lang.String,java.lang.Object,scala.Option,spray.json.JsonWriter)|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherClient/users(java.lang.String)|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherMessages$BatchTriggerMessage$/unapply(com.github.dtaniwaki.akka_pusher.PusherMessages$BatchTriggerMessage)|",
      "|java+method:///akka/actor/ActorRef$/noSender()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherActor/self()|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherMessages$ChannelsMessage/prefixFilter()|",
      "|java+method:///akka/actor/package$/actorRef2Scala(akka.actor.ActorRef)|",
      "|java+method:///akka/pattern/PipeToSupport$PipeableFuture/pipeTo(akka.actor.ActorRef,akka.actor.ActorRef)|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherMessages$ChannelMessage/attributes()|",
      "|java+constructor:///com/github/dtaniwaki/akka_pusher/PusherActor$$anonfun$receive$1$$anonfun$4/PusherActor$$anonfun$receive$1$$anonfun$4(com.github.dtaniwaki.akka_pusher.PusherActor$$anonfun$receive$1)|",
      "|java+method:///akka/actor/ActorSystem/deadLetters()|",
      "|java+method:///akka/pattern/package$/pipe(scala.concurrent.Future,scala.concurrent.ExecutionContext)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToBoolean(boolean)|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherMessages$AuthenticateMessage/data()|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherMessages$TriggerMessage/message()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherMessages$AuthenticateMessage/channel()|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherMessages$AuthenticateMessage/socketId()|",
      "|java+method:///spray/json/DefaultJsonProtocol$/JsValueFormat()|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherActor/sender()|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherMessages$ChannelsMessage/attributes()|",
      "|java+method:///scala/Function1/apply(java.lang.Object)|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherClient/authenticate(java.lang.String,java.lang.String,scala.Option,spray.json.JsonWriter)|",
      "|java+method:///scala/collection/mutable/Queue/dequeueAll(scala.Function1)|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherMessages$ValidateSignatureMessage/body()|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherMessages$TriggerMessage/socketId()|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherActor$$anonfun$receive$1/apply(java.lang.Object)|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherMessages$UsersMessage/channel()|",
      "|java+method:///scala/collection/mutable/Queue/enqueue(scala.collection.Seq)|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherClient/channels(java.lang.String,scala.Option)|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherActor/batchTrigger()|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherActor/ec()|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherClient/validateSignature(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherMessages$ValidateSignatureMessage/key()|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherClient/channel(java.lang.String,scala.Option)|",
      "|java+method:///com/github/dtaniwaki/akka_pusher/PusherMessages$TriggerMessage$/tupled()|",
      "|java+method:///scala/Option/get()|"
    ],
    "affectedLib": "io.spray:spray-json_2.11:1.3.2",
    "change": "ADDED"
  }
]