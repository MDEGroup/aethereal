[
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.3",
    "caller": "|java+method:///org/apache/mahout/clustering/lda/LDAInference/computeLikelihood(org.apache.mahout.math.Vector,int%5B%5D,org.apache.mahout.math.Matrix,org.apache.mahout.math.Vector,org.apache.mahout.math.Vector)|",
    "called": "|java+method:///org/apache/commons/math/special/Gamma/logGamma(double)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/Vector/get(int)|",
      "|java+method:///org/apache/mahout/math/Vector/zSum()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Math/exp(double)|",
      "|java+method:///org/apache/commons/math/special/Gamma/logGamma(double)|",
      "|java+method:///org/apache/mahout/math/Vector/iterateNonZero()|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAState/logProbWordGivenTopic(int,int)|",
      "|java+method:///org/apache/mahout/math/Matrix/getQuick(int,int)|",
      "|java+method:///org/apache/mahout/math/Vector/getQuick(int)|",
      "|java+method:///org/apache/mahout/math/Vector$Element/index()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/math/Vector$Element/get()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/clustering/lda/LDAState/getNumTopics()|",
      "|java+method:///org/apache/mahout/math/Vector/get(int)|",
      "|java+method:///org/apache/mahout/math/Vector/zSum()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Math/exp(double)|",
      "|java+method:///org/apache/commons/math/special/Gamma/logGamma(double)|",
      "|java+method:///org/apache/mahout/math/Vector/iterateNonZero()|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAState/logProbWordGivenTopic(int,int)|",
      "|java+method:///org/apache/mahout/math/Matrix/getQuick(int,int)|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAState/getTopicSmoothing()|",
      "|java+method:///org/apache/mahout/math/Vector/getQuick(int)|",
      "|java+method:///org/apache/mahout/math/Vector$Element/index()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/math/Vector$Element/get()|"
    ],
    "affectedLib": "commons-math:commons-math:1.2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPGrowth/generateFList(java.util.Iterator,int)|",
    "called": "|java+constructor:///org/apache/commons/lang/mutable/MutableLong/MutableLong(java.lang.Number)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///org/apache/commons/lang/mutable/MutableLong/MutableLong(java.lang.Number)|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPGrowth$1/FPGrowth$1(org.apache.mahout.fpm.pfpgrowth.fpgrowth.FPGrowth)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/commons/lang/mutable/MutableLong/add(long)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Collections/sort(java.util.List,java.util.Comparator)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|",
      "|java+method:///org/apache/commons/lang/mutable/MutableLong/longValue()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+constructor:///org/apache/mahout/common/Pair/Pair(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/CountDescendingPairComparator/CountDescendingPairComparator()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///org/apache/commons/lang/mutable/MutableLong/MutableLong(java.lang.Number)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/commons/lang/mutable/MutableLong/add(long)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Collections/sort(java.util.List,java.util.Comparator)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|",
      "|java+method:///org/apache/commons/lang/mutable/MutableLong/longValue()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+constructor:///org/apache/mahout/common/Pair/Pair(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.4",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/df/split/OptIgSplit/categoricalSplit(org.apache.mahout.df.data.Data,int)|",
    "called": "|java+method:///org/apache/commons/lang/ArrayUtils/indexOf(double%5B%5D,double)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/df/split/OptIgSplit/entropy(int%5B%5D,int)|",
      "|java+method:///org/apache/mahout/df/data/Instance/get(int)|",
      "|java+method:///org/apache/mahout/df/data/DataUtils/sum(int%5B%5D)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/nblabels()|",
      "|java+method:///org/apache/mahout/df/data/Data/size()|",
      "|java+method:///org/apache/mahout/df/data/Data/values(int)|",
      "|java+method:///org/apache/mahout/df/data/Data/getDataset()|",
      "|java+method:///org/apache/commons/lang/ArrayUtils/indexOf(double%5B%5D,double)|",
      "|java+method:///org/apache/mahout/df/data/Data/get(int)|",
      "|java+constructor:///org/apache/mahout/df/split/Split/Split(int,double)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/df/split/OptIgSplit/entropy(int%5B%5D,int)|",
      "|java+method:///org/apache/mahout/df/data/Instance/get(int)|",
      "|java+method:///org/apache/mahout/df/data/DataUtils/sum(int%5B%5D)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/nblabels()|",
      "|java+method:///org/apache/mahout/df/data/Instance/getLabel()|",
      "|java+method:///org/apache/mahout/df/data/Data/size()|",
      "|java+method:///org/apache/mahout/df/data/Data/values(int)|",
      "|java+method:///org/apache/mahout/df/data/Data/getDataset()|",
      "|java+method:///org/apache/commons/lang/ArrayUtils/indexOf(double%5B%5D,double)|",
      "|java+method:///org/apache/mahout/df/data/Data/get(int)|",
      "|java+constructor:///org/apache/mahout/df/split/Split/Split(int,double)|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.4",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/ParallelFPGrowthReducer/reduce(org.apache.hadoop.io.LongWritable,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)|",
    "called": "|java+method:///org/apache/commons/lang/mutable/MutableLong/toLong()|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/convertors/ContextStatusUpdater/ContextStatusUpdater(org.apache.hadoop.mapreduce.Reducer$Context)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/TransactionTree/addPattern(java.util.List,long)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/convertors/integer/IntegerStringOutputConverter/IntegerStringOutputConverter(org.apache.hadoop.mapred.OutputCollector,java.util.List)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/ParallelFPGrowthReducer$1/ParallelFPGrowthReducer$1(org.apache.mahout.fpm.pfpgrowth.ParallelFPGrowthReducer)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+constructor:///java/util/HashSet/HashSet(java.util.Collection)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/TransactionTree/generateFList()|",
      "|java+method:///org/apache/commons/lang/mutable/MutableLong/toLong()|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/convertors/ContextWriteOutputCollector/ContextWriteOutputCollector(org.apache.hadoop.mapreduce.Reducer$Context)|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPGrowth/FPGrowth()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Collections/sort(java.util.List,java.util.Comparator)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/TransactionTree/TransactionTree()|",
      "|java+method:///org/apache/mahout/math/map/OpenLongObjectHashMap/get(long)|",
      "|java+method:///org/apache/mahout/math/list/IntArrayList/toList()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPGrowth/generateTopKFrequentPatterns(java.util.Iterator,java.util.List,long,int,java.util.Set,org.apache.hadoop.mapred.OutputCollector,org.apache.mahout.fpm.pfpgrowth.convertors.StatusUpdater)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/TransactionTree/getIterator()|",
      "|java+method:///org/apache/hadoop/io/LongWritable/get()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+constructor:///org/apache/mahout/common/Pair/Pair(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/convertors/ContextStatusUpdater/ContextStatusUpdater(org.apache.hadoop.mapreduce.Reducer$Context)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/CountDescendingPairComparator/CountDescendingPairComparator()|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/convertors/integer/IntegerStringOutputConverter/IntegerStringOutputConverter(org.apache.hadoop.mapred.OutputCollector,java.util.List)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/TransactionTree/addPattern(java.lang.Iterable,long)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+constructor:///java/util/HashSet/HashSet(java.util.Collection)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/TransactionTree/generateFList()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPGrowth/generateTopKFrequentPatterns(java.util.Iterator,java.util.Collection,long,int,java.util.Collection,org.apache.hadoop.mapred.OutputCollector,org.apache.mahout.fpm.pfpgrowth.convertors.StatusUpdater)|",
      "|java+method:///org/apache/commons/lang/mutable/MutableLong/toLong()|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/convertors/ContextWriteOutputCollector/ContextWriteOutputCollector(org.apache.hadoop.mapreduce.Reducer$Context)|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPGrowth/FPGrowth()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Collections/sort(java.util.List,java.util.Comparator)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/TransactionTree/TransactionTree()|",
      "|java+method:///org/apache/mahout/math/map/OpenLongObjectHashMap/get(long)|",
      "|java+method:///org/apache/mahout/math/list/IntArrayList/toList()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/TransactionTree/iterator()|",
      "|java+method:///org/apache/hadoop/io/LongWritable/get()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+constructor:///org/apache/mahout/common/Pair/Pair(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.4",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/df/split/OptIgSplit/computeFrequencies(org.apache.mahout.df.data.Data,int,double%5B%5D)|",
    "called": "|java+method:///org/apache/commons/lang/ArrayUtils/indexOf(double%5B%5D,double)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/df/data/Instance/get(int)|",
      "|java+method:///org/apache/mahout/df/data/Data/size()|",
      "|java+method:///org/apache/commons/lang/ArrayUtils/indexOf(double%5B%5D,double)|",
      "|java+method:///org/apache/mahout/df/data/Data/get(int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/df/data/Instance/get(int)|",
      "|java+method:///org/apache/mahout/df/data/Data/size()|",
      "|java+method:///org/apache/commons/lang/ArrayUtils/indexOf(double%5B%5D,double)|",
      "|java+method:///org/apache/mahout/df/data/Data/get(int)|",
      "|java+method:///org/apache/mahout/df/data/Instance/getLabel()|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.4",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/df/mapreduce/partial/Step0Job/processOutput(java.util.List,java.util.List)|",
    "called": "|java+method:///org/apache/commons/lang/ArrayUtils/indexOf(java.lang.Object%5B%5D,java.lang.Object)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/commons/lang/ArrayUtils/indexOf(java.lang.Object%5B%5D,java.lang.Object)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/mahout/df/mapreduce/partial/Step0Job$Step0Output/access$000(org.apache.mahout.df.mapreduce.partial.Step0Job$Step0Output)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/Arrays/sort(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/mahout/df/mapreduce/partial/Step0Job$Step0Output/access$102(org.apache.mahout.df.mapreduce.partial.Step0Job$Step0Output,long)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/commons/lang/ArrayUtils/indexOf(java.lang.Object%5B%5D,java.lang.Object)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/mahout/df/mapreduce/partial/Step0Job$Step0Output/access$000(org.apache.mahout.df.mapreduce.partial.Step0Job$Step0Output)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/Arrays/sort(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/mahout/df/mapreduce/partial/Step0Job$Step0Output/access$102(org.apache.mahout.df.mapreduce.partial.Step0Job$Step0Output,long)|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.4",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper/map(org.apache.hadoop.io.Text,org.apache.hadoop.io.Text,org.apache.hadoop.mapred.OutputCollector,org.apache.hadoop.mapred.Reporter)|",
    "called": "|java+constructor:///org/apache/commons/lang/mutable/MutableDouble/MutableDouble(double)|",
    "v1Body": [
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$1/BayesFeatureMapper$1(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,org.apache.commons.lang.mutable.MutableDouble)|",
      "|java+method:///org/apache/lucene/analysis/tokenattributes/TermAttribute/term()|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/forEachKey(org.apache.mahout.math.function.ObjectProcedure)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/getAttribute(java.lang.Class)|",
      "|java+method:///java/lang/String/length()|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$2/BayesFeatureMapper$2(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,java.lang.String,double,org.apache.hadoop.mapred.OutputCollector)|",
      "|java+constructor:///org/apache/mahout/math/map/OpenObjectIntHashMap/OpenObjectIntHashMap(int)|",
      "|java+constructor:///org/apache/mahout/common/iterator/ArrayIterator/ArrayIterator(java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/commons/lang/mutable/MutableDouble/doubleValue()|",
      "|java+method:///org/apache/mahout/common/StringTuple/add(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/common/StringTuple/StringTuple()|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/incrementToken()|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/Math/sqrt(double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/forEachPair(org.apache.mahout.math.function.ObjectIntProcedure)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$IteratorTokenStream/BayesFeatureMapper$IteratorTokenStream(java.util.Iterator)|",
      "|java+method:///org/apache/hadoop/mapred/Reporter/setStatus(java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/split(java.lang.CharSequence)|",
      "|java+constructor:///org/apache/commons/lang/mutable/MutableDouble/MutableDouble(double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/put(java.lang.Object,int)|",
      "|java+constructor:///org/apache/lucene/analysis/shingle/ShingleFilter/ShingleFilter(org.apache.lucene.analysis.TokenStream,int)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/get(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$3/BayesFeatureMapper$3(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,java.lang.String,org.apache.hadoop.mapred.OutputCollector)|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Iterators/forArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$1/BayesFeatureMapper$1(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,org.apache.commons.lang.mutable.MutableDouble)|",
      "|java+method:///org/apache/lucene/analysis/tokenattributes/TermAttribute/term()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/getAttribute(java.lang.Class)|",
      "|java+method:///java/lang/String/length()|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$2/BayesFeatureMapper$2(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,java.lang.String,double,org.apache.hadoop.mapred.OutputCollector)|",
      "|java+constructor:///org/apache/mahout/math/map/OpenObjectIntHashMap/OpenObjectIntHashMap(int)|",
      "|java+method:///org/apache/commons/lang/mutable/MutableDouble/doubleValue()|",
      "|java+method:///org/apache/mahout/common/StringTuple/add(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/common/StringTuple/StringTuple()|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/incrementToken()|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/Math/sqrt(double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/forEachPair(org.apache.mahout.math.function.ObjectIntProcedure)|",
      "|java+method:///org/apache/hadoop/mapred/Reporter/setStatus(java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/split(java.lang.CharSequence)|",
      "|java+constructor:///org/apache/commons/lang/mutable/MutableDouble/MutableDouble(double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/put(java.lang.Object,int)|",
      "|java+constructor:///org/apache/lucene/analysis/shingle/ShingleFilter/ShingleFilter(org.apache.lucene.analysis.TokenStream,int)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/get(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/mahout/common/lucene/IteratorTokenStream/IteratorTokenStream(java.util.Iterator)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$3/BayesFeatureMapper$3(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,java.lang.String,org.apache.hadoop.mapred.OutputCollector)|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.4",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/df/mapreduce/partial/Step2Mapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+method:///org/apache/commons/lang/ArrayUtils/toString(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/df/mapreduce/Builder/getNbTrees(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///org/apache/commons/lang/ArrayUtils/toString(java.lang.Object)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/load(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/net/URI/getPath()|",
      "|java+method:///org/apache/hadoop/filecache/DistributedCache/getCacheFiles(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/df/mapreduce/Builder/getNumMaps(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/apache/mahout/df/mapreduce/partial/Step2Mapper/configure(int,org.apache.mahout.df.data.Dataset,org.apache.mahout.df.mapreduce.partial.TreeID%5B%5D,org.apache.mahout.df.node.Node%5B%5D,int)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getInt(java.lang.String,int)|",
      "|java+method:///org/apache/mahout/df/mapreduce/partial/InterResults/load(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,int,int,int,org.apache.mahout.df.mapreduce.partial.TreeID%5B%5D,org.apache.mahout.df.node.Node%5B%5D)|",
      "|java+method:///org/apache/mahout/df/mapreduce/partial/Step2Mapper/nbConcerned(int,int,int)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///org/apache/mahout/df/mapreduce/Builder/getNbTrees(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/mahout/df/mapreduce/partial/Step2Mapper/configure(int,org.apache.mahout.df.data.Dataset,org.apache.mahout.df.mapreduce.partial.TreeID%5B%5D,org.apache.mahout.df.node.Node%5B%5D,int)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///org/apache/commons/lang/ArrayUtils/toString(java.lang.Object)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/load(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/net/URI/getPath()|",
      "|java+method:///org/apache/hadoop/filecache/DistributedCache/getCacheFiles(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/df/mapreduce/Builder/getNumMaps(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getInt(java.lang.String,int)|",
      "|java+method:///org/apache/mahout/df/mapreduce/partial/InterResults/load(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,int,int,int,org.apache.mahout.df.mapreduce.partial.TreeID%5B%5D,org.apache.mahout.df.node.Node%5B%5D)|",
      "|java+method:///org/apache/mahout/df/mapreduce/partial/Step2Mapper/nbConcerned(int,int,int)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.4",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/df/data/DataConverter/convert(int,java.lang.String)|",
    "called": "|java+method:///org/apache/commons/lang/ArrayUtils/contains(int%5B%5D,int)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/df/data/Dataset/getLabelId()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/labels()|",
      "|java+method:///org/apache/mahout/df/data/Dataset/labelCode(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/nbAttributes()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/isNumerical(int)|",
      "|java+method:///java/util/StringTokenizer/countTokens()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/commons/lang/ArrayUtils/contains(int%5B%5D,int)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/getIgnored()|",
      "|java+method:///java/util/Arrays/toString(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/apache/mahout/df/data/Instance/Instance(int,org.apache.mahout.math.Vector,int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/df/data/Dataset/valueOf(int,java.lang.String)|",
      "|java+method:///java/util/StringTokenizer/nextToken()|",
      "|java+method:///org/apache/mahout/math/DenseVector/set(int,double)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/df/data/Dataset/getLabelId()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/labels()|",
      "|java+method:///org/apache/mahout/df/data/Dataset/labelCode(java.lang.String)|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/nbAttributes()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/isNumerical(int)|",
      "|java+method:///java/util/StringTokenizer/countTokens()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/commons/lang/ArrayUtils/contains(int%5B%5D,int)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/getIgnored()|",
      "|java+method:///java/util/Arrays/toString(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/apache/mahout/df/data/Instance/Instance(int,org.apache.mahout.math.Vector,int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/df/data/Dataset/valueOf(int,java.lang.String)|",
      "|java+method:///org/apache/mahout/math/DenseVector/set(int,double)|",
      "|java+method:///java/util/StringTokenizer/nextToken()|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.4",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/df/data/Dataset/valueOf(int,java.lang.String)|",
    "called": "|java+method:///org/apache/commons/lang/ArrayUtils/indexOf(java.lang.Object%5B%5D,java.lang.Object)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/commons/lang/ArrayUtils/indexOf(java.lang.Object%5B%5D,java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/isNumerical(int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/lang/ArrayUtils/indexOf(java.lang.Object%5B%5D,java.lang.Object)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/isNumerical(int)|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.4",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/TransactionTree/generateFList()|",
    "called": "|java+constructor:///org/apache/commons/lang/mutable/MutableLong/MutableLong(long)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///org/apache/commons/lang/mutable/MutableLong/MutableLong(long)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/TransactionTree/getIterator()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/commons/lang/mutable/MutableLong/add(java.lang.Number)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///org/apache/commons/lang/mutable/MutableLong/MutableLong(long)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/TransactionTree/iterator()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/commons/lang/mutable/MutableLong/add(java.lang.Number)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.4",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+initializer:///org/apache/mahout/classifier/bayes/mapreduce/bayes/BayesClassifierMapper/BayesClassifierMapper$initializer|",
    "called": "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable(double)|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|"
    ],
    "affectedLib": "org.slf4j:slf4j-api:1.6.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+initializer:///org/apache/mahout/cf/taste/impl/recommender/svd/SVDRecommender/SVDRecommender$initializer|",
    "called": "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|"
    ],
    "affectedLib": "org.slf4j:slf4j-api:1.6.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+initializer:///org/apache/mahout/cf/taste/impl/eval/GenericRecommenderIRStatsEvaluator/GenericRecommenderIRStatsEvaluator$initializer|",
    "called": "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+method:///java/lang/Math/log(double)|"
    ],
    "affectedLib": "org.slf4j:slf4j-api:1.6.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/df/tools/FrequenciesJob/parseOutput(org.apache.hadoop.mapreduce.JobContext)|",
    "called": "|java+method:///org/apache/hadoop/conf/Configuration/getInt(java.lang.String,int)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/mahout/df/tools/FrequenciesJob$Frequencies/clone()|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Reader/SequenceFile$Reader(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///org/apache/mahout/df/tools/FrequenciesJob$Frequencies/FrequenciesJob$Frequencies()|",
      "|java+constructor:///org/apache/hadoop/io/LongWritable/LongWritable()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/next(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/df/DFUtils/listOutputFiles(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/hadoop/mapreduce/JobContext/getConfiguration()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/close()|",
      "|java+method:///java/util/Arrays/sort(java.lang.Object%5B%5D)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getInt(java.lang.String,int)|",
      "|java+method:///org/apache/mahout/df/tools/FrequenciesJob$Frequencies/extractCounts(org.apache.mahout.df.tools.FrequenciesJob$Frequencies%5B%5D)|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterable/iterator()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/df/DFUtils/listOutputFiles(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterable/SequenceFileValueIterable(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/hadoop/mapreduce/JobContext/getConfiguration()|",
      "|java+method:///java/util/Arrays/sort(java.lang.Object%5B%5D)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getInt(java.lang.String,int)|",
      "|java+method:///org/apache/mahout/df/tools/FrequenciesJob$Frequencies/extractCounts(org.apache.mahout.df.tools.FrequenciesJob$Frequencies%5B%5D)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/run(java.lang.String%5B%5D)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/configure(org.apache.hadoop.mapred.JobConf)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(java.lang.String,java.lang.String,int,int)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/solve(org.apache.mahout.math.VectorIterable,int,org.apache.mahout.math.Matrix,java.util.List,boolean)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/getConf()|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/serializeOutput(org.apache.mahout.math.Matrix,java.util.List,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/DenseMatrix/DenseMatrix(int,int)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/run(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int,boolean,int)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/run(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int,boolean,int,double,double,boolean)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+constructor:///org/apache/mahout/cf/taste/hadoop/pseudo/UserIDsMapper/UserIDsMapper()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|",
    "v1Body": [
      "|java+constructor:///org/apache/hadoop/mapred/MapReduceBase/MapReduceBase()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/transpose()|",
    "called": "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(org.apache.hadoop.conf.Configuration)|",
    "v1Body": [
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/configure(org.apache.hadoop.mapred.JobConf)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(java.lang.String,java.lang.String,int,int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///org/apache/hadoop/mapred/JobClient/runJob(org.apache.hadoop.mapred.JobConf)|",
      "|java+method:///org/apache/mahout/math/hadoop/TransposeJob/buildTransposeJobConf(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int)|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(int)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/math/hadoop/TransposeJob/buildTransposeJobConf(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int)|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///org/apache/hadoop/mapred/JobClient/runJob(org.apache.hadoop.mapred.JobConf)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/getConf()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/times(org.apache.mahout.math.hadoop.DistributedRowMatrix)|",
    "called": "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(org.apache.hadoop.conf.Configuration)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/hadoop/MatrixMultiplicationJob/createMatrixMultiplyJobConf(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int)|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/configure(org.apache.hadoop.mapred.JobConf)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(java.lang.String,java.lang.String,int,int)|",
      "|java+constructor:///org/apache/mahout/math/CardinalityException/CardinalityException(int,int)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/numCols()|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///org/apache/hadoop/mapred/JobClient/runJob(org.apache.hadoop.mapred.JobConf)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/numRows()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///org/apache/mahout/math/hadoop/MatrixMultiplicationJob/createMatrixMultiplyJobConf(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/mahout/math/CardinalityException/CardinalityException(int,int)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/numCols()|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///org/apache/hadoop/mapred/JobClient/runJob(org.apache.hadoop.mapred.JobConf)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/numRows()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/getConf()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+constructor:///org/apache/mahout/clustering/kmeans/KMeansClusterMapper/KMeansClusterMapper()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapred/MapReduceBase/MapReduceBase()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/timesSquared(org.apache.mahout.math.Vector)|",
    "called": "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(org.apache.hadoop.conf.Configuration)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/hadoop/TimesSquaredJob/createTimesSquaredJobConf(org.apache.mahout.math.Vector,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///java/lang/Long/toString(long)|",
      "|java+method:///org/apache/mahout/math/hadoop/TimesSquaredJob/retrieveTimesSquaredOutputVector(org.apache.hadoop.mapred.JobConf)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///org/apache/hadoop/mapred/JobClient/runJob(org.apache.hadoop.mapred.JobConf)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///java/lang/Long/toString(long)|",
      "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/TimesSquaredJob/retrieveTimesSquaredOutputVector(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/delete(org.apache.hadoop.fs.Path,boolean)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///org/apache/hadoop/mapred/JobClient/runJob(org.apache.hadoop.mapred.JobConf)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/getConf()|",
      "|java+method:///org/apache/mahout/math/hadoop/TimesSquaredJob/createTimesSquaredJobConf(org.apache.hadoop.conf.Configuration,org.apache.mahout.math.Vector,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/clustering/canopy/CanopyDriver/main(java.lang.String%5B%5D)|",
    "called": "|java+method:///org/apache/hadoop/util/ToolRunner/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.util.Tool,java.lang.String%5B%5D)|",
    "v1Body": [
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/apache/mahout/clustering/canopy/CanopyDriver/runJob(java.lang.String,java.lang.String,java.lang.String,double,double)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withName(java.lang.String)|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withLongName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/create()|",
      "|java+constructor:///org/apache/commons/cli2/builder/ArgumentBuilder/ArgumentBuilder()|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMaximum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withRequired(boolean)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelp(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMinimum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withArgument(org.apache.commons.cli2.Argument)|",
      "|java+constructor:///org/apache/commons/cli2/builder/DefaultOptionBuilder/DefaultOptionBuilder()|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+constructor:///org/apache/mahout/clustering/canopy/CanopyDriver/CanopyDriver()|",
      "|java+method:///org/apache/hadoop/util/ToolRunner/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.util.Tool,java.lang.String%5B%5D)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/ParallelFPGrowthMapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/put(java.lang.Object,int)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/get(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/deserializeList(org.apache.mahout.common.Parameters,java.lang.String,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/map/OpenIntLongHashMap/put(int,long)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/apache/mahout/common/Parameters/fromString(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/map/OpenObjectIntHashMap/OpenObjectIntHashMap()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/deserializeMap(org.apache.mahout.common.Parameters,java.lang.String,org.apache.hadoop.conf.Configuration)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/put(java.lang.Object,int)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/get(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/mahout/common/Parameters/Parameters(java.lang.String)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/deserializeList(org.apache.mahout.common.Parameters,java.lang.String,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/map/OpenIntLongHashMap/put(int,long)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+constructor:///org/apache/mahout/math/map/OpenObjectIntHashMap/OpenObjectIntHashMap()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/deserializeMap(org.apache.mahout.common.Parameters,java.lang.String,org.apache.hadoop.conf.Configuration)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+constructor:///org/apache/mahout/clustering/kmeans/KMeansCombiner/KMeansCombiner()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|",
    "v1Body": [
      "|java+constructor:///org/apache/hadoop/mapred/MapReduceBase/MapReduceBase()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/iterateAll()|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix$DistributedMatrixIterator/DistributedRowMatrix$DistributedMatrixIterator(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.mapred.JobConf)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///com/google/common/collect/Iterators/transform(java.util.Iterator,com.google.common.base.Function)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirIterator/SequenceFileDirIterator(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,java.util.Comparator,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix$1/DistributedRowMatrix$1(org.apache.mahout.math.hadoop.DistributedRowMatrix)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/MatrixMultiplicationJob/createMatrixMultiplyJobConf(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int)|",
    "called": "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapred/JobConf/setOutputKeyClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/FileOutputFormat/setOutputPath(org.apache.hadoop.mapred.JobConf,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setReducerClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setCombinerClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setInputFormat(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setInt(java.lang.String,int)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setMapperClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setMapOutputKeyClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setOutputFormat(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setMapOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/join/CompositeInputFormat/compose(java.lang.String,java.lang.Class,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setOutputValueClass(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/mahout/math/hadoop/MatrixMultiplicationJob/createMatrixMultiplyJobConf(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesWeightSummerReducer/reduce(org.apache.mahout.common.StringTuple,java.util.Iterator,org.apache.hadoop.mapred.OutputCollector,org.apache.hadoop.mapred.Reporter)|",
    "called": "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable(double)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapred/Reporter/setStatus(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/io/DoubleWritable/get()|",
      "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable(double)|",
      "|java+constructor:///org/apache/hadoop/hbase/client/Put/Put(byte%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/hbase/client/Put/add(byte%5B%5D,byte%5B%5D,byte%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(double)|",
      "|java+method:///org/apache/hadoop/hbase/util/Bytes/toBytes(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/client/HTable/put(org.apache.hadoop.hbase.client.Put)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/hbase/util/Bytes/toBytes(double)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/StringTuple/stringAt(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/mapred/Reporter/setStatus(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/io/DoubleWritable/get()|",
      "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable(double)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(double)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/cf/taste/hadoop/slopeone/SlopeOneAverageDiffsJob/run(java.lang.String%5B%5D)|",
    "called": "|java+method:///org/apache/hadoop/mapreduce/Job/waitForCompletion(boolean)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapred/JobClient/runJob(org.apache.hadoop.mapred.JobConf)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/AbstractJob/prepareJobConf(java.lang.String,java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setClass(java.lang.String,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/AbstractJob/parseArguments(java.lang.String%5B%5D,org.apache.commons.cli2.Option%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/cf/taste/hadoop/slopeone/SlopeOneAverageDiffsJob/getInputPath()|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/slopeone/SlopeOneAverageDiffsJob/addOutputOption()|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/slopeone/SlopeOneAverageDiffsJob/addInputOption()|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/slopeone/SlopeOneAverageDiffsJob/getOutputPath()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/slopeone/SlopeOneAverageDiffsJob/prepareJob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/slopeone/SlopeOneAverageDiffsJob/shouldRunNextPhase(java.util.Map,java.util.concurrent.atomic.AtomicInteger)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/waitForCompletion(boolean)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/slopeone/SlopeOneAverageDiffsJob/parseArguments(java.lang.String%5B%5D)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicInteger/AtomicInteger()|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/FileOutputFormat/setOutputCompressorClass(org.apache.hadoop.mapreduce.Job,java.lang.Class)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/run(java.lang.String%5B%5D)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/saveCleanEigens(java.util.List)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/handleArgs(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/verifyEigens()|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/getConf()|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/pruneEigens(java.util.Map)|",
      "|java+constructor:///org/apache/mahout/math/decomposer/SimpleEigenVerifier/SimpleEigenVerifier()|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/configure(org.apache.hadoop.mapred.JobConf)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(java.lang.String,java.lang.String,int,int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/prepareEigens(java.lang.String,boolean)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/OrthonormalityVerifier/OrthonormalityVerifier()|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/computePairwiseInnerProducts()|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/handleArgs(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/runJob(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,boolean,double,double,int)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/getConf()|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/getOutputPath()|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+constructor:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansCombiner/FuzzyKMeansCombiner()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|",
    "v1Body": [
      "|java+constructor:///org/apache/hadoop/mapred/MapReduceBase/MapReduceBase()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/cf/taste/hadoop/pseudo/RecommenderJob/run(java.lang.String%5B%5D)|",
    "called": "|java+method:///org/apache/hadoop/mapreduce/Job/waitForCompletion(boolean)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapred/JobClient/runJob(org.apache.hadoop.mapred.JobConf)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/AbstractJob/buildOption(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/AbstractJob/prepareJobConf(java.lang.String,java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setClass(java.lang.String,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setInt(java.lang.String,int)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/AbstractJob/parseArguments(java.lang.String%5B%5D,org.apache.commons.cli2.Option%5B%5D)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/AbstractJob/buildOption(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/cf/taste/hadoop/pseudo/RecommenderJob/addOutputOption()|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/pseudo/RecommenderJob/addInputOption()|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/pseudo/RecommenderJob/getOutputPath()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/setInt(java.lang.String,int)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/pseudo/RecommenderJob/addOption(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/pseudo/RecommenderJob/addOption(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/pseudo/RecommenderJob/getInputPath()|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/waitForCompletion(boolean)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/pseudo/RecommenderJob/parseArguments(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/pseudo/RecommenderJob/prepareJob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/getConfiguration()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/FileOutputFormat/setOutputCompressorClass(org.apache.hadoop.mapreduce.Job,java.lang.Class)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/bayes/BayesThetaNormalizerMapper/configure(org.apache.hadoop.mapred.JobConf)|",
    "called": "|java+method:///org/apache/hadoop/io/DefaultStringifier/fromString(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/util/GenericsUtil/getClass(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/DefaultStringifier/fromString(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/DefaultStringifier/DefaultStringifier(org.apache.hadoop.conf.Configuration,java.lang.Class)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectDoubleHashMap/put(java.lang.Object,double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectDoubleHashMap/clear()|",
      "|java+method:///java/lang/Double/valueOf(java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/get(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/io/DefaultStringifier/toString(java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/io/IOException/toString()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/lang/Double/doubleValue()|",
      "|java+method:///org/apache/mahout/common/Parameters/fromString(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/util/GenericsUtil/getClass(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/DefaultStringifier/fromString(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/DefaultStringifier/DefaultStringifier(org.apache.hadoop.conf.Configuration,java.lang.Class)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectDoubleHashMap/put(java.lang.Object,double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectDoubleHashMap/clear()|",
      "|java+method:///java/lang/Double/valueOf(java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/get(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/io/DefaultStringifier/toString(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/common/Parameters/Parameters(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/io/IOException/toString()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/lang/Double/doubleValue()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/FPGrowthDriver/runFPGrowth(org.apache.mahout.common.Parameters)|",
    "called": "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPGrowth/FPGrowth()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/convertors/SequenceFileOutputCollector/SequenceFileOutputCollector(org.apache.hadoop.io.SequenceFile$Writer)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPGrowth/generateTopKFrequentPatterns(java.util.Iterator,java.util.List,long,int,java.util.Set,org.apache.hadoop.mapred.OutputCollector,org.apache.mahout.fpm.pfpgrowth.convertors.StatusUpdater)|",
      "|java+constructor:///org/apache/mahout/common/FileLineIterable/FileLineIterable(java.io.File,java.nio.charset.Charset,boolean)|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPGrowth/generateFList(java.util.Iterator,int)|",
      "|java+constructor:///org/apache/mahout/common/StringRecordIterator/StringRecordIterator(org.apache.mahout.common.FileLineIterable,java.lang.String)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/convertors/string/StringOutputConverter/StringOutputConverter(org.apache.hadoop.mapred.OutputCollector)|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/convertors/ContextStatusUpdater/ContextStatusUpdater(org.apache.hadoop.mapreduce.Reducer$Context)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/convertors/string/TopKStringPatterns/toString()|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/close()|",
      "|java+method:///java/util/regex/Pattern/toString()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPGrowth/readFrequentPattern(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/nio/charset/Charset/forName(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPGrowth/readFrequentPattern(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/mahout/common/iterator/FileLineIterable/FileLineIterable(java.io.File,java.nio.charset.Charset,boolean)|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPGrowth/FPGrowth()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/convertors/SequenceFileOutputCollector/SequenceFileOutputCollector(org.apache.hadoop.io.SequenceFile$Writer)|",
      "|java+constructor:///org/apache/mahout/common/iterator/StringRecordIterator/StringRecordIterator(java.lang.Iterable,java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPGrowth/generateFList(java.util.Iterator,int)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/convertors/string/StringOutputConverter/StringOutputConverter(org.apache.hadoop.mapred.OutputCollector)|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/convertors/ContextStatusUpdater/ContextStatusUpdater(org.apache.hadoop.mapreduce.Reducer$Context)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPGrowth/generateTopKFrequentPatterns(java.util.Iterator,java.util.Collection,long,int,java.util.Collection,org.apache.hadoop.mapred.OutputCollector,org.apache.mahout.fpm.pfpgrowth.convertors.StatusUpdater)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/close()|",
      "|java+method:///java/util/regex/Pattern/toString()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/nio/charset/Charset/forName(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/TimesSquaredJob$TimesSquaredMapper/configure(org.apache.hadoop.mapred.JobConf)|",
    "called": "|java+method:///org/apache/hadoop/filecache/DistributedCache/getCacheFiles(org.apache.hadoop.conf.Configuration)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Reader/SequenceFile$Reader(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable()|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(int)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/close()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(int,int)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/SequentialAccessSparseVector/SequentialAccessSparseVector(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/getBoolean(java.lang.String,boolean)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/getInt(java.lang.String,int)|",
      "|java+method:///java/net/URI/getPath()|",
      "|java+method:///org/apache/hadoop/filecache/DistributedCache/getCacheFiles(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/next(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///org/apache/hadoop/io/NullWritable/get()|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/SequenceFileValueIterator(org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/close()|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(int)|",
      "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(int,int)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/getBoolean(java.lang.String,boolean)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/getInt(java.lang.String,int)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/next()|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///java/net/URI/getPath()|",
      "|java+method:///org/apache/hadoop/filecache/DistributedCache/getCacheFiles(org.apache.hadoop.conf.Configuration)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/driver/MahoutDriver/main(java.lang.String%5B%5D)|",
    "called": "|java+constructor:///org/apache/hadoop/util/ProgramDriver/ProgramDriver()|",
    "v1Body": [
      "|java+method:///java/util/Properties/stringPropertyNames()|",
      "|java+method:///org/apache/mahout/driver/MahoutDriver/addClass(org.apache.hadoop.util.ProgramDriver,java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+constructor:///org/apache/hadoop/util/ProgramDriver/ProgramDriver()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/util/Properties/load(java.io.InputStream)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///java/util/Arrays/toString(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/charAt(int)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///java/lang/Throwable/getMessage()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/mahout/driver/MahoutDriver/shift(java.lang.String%5B%5D)|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///java/util/Properties/Properties()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+method:///java/lang/ClassLoader/getResourceAsStream(java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(char)|",
      "|java+method:///org/apache/hadoop/util/ProgramDriver/driver(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/mahout/driver/MahoutDriver/shortName(java.lang.String)|",
      "|java+method:///java/lang/Thread/getContextClassLoader()|",
      "|java+method:///java/util/Properties/keySet()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Properties/stringPropertyNames()|",
      "|java+method:///org/apache/mahout/driver/MahoutDriver/addClass(org.apache.hadoop.util.ProgramDriver,java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///org/apache/hadoop/util/ProgramDriver/ProgramDriver()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/mahout/driver/MahoutDriver/shift(java.lang.String%5B%5D)|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///java/util/Properties/Properties()|",
      "|java+method:///org/apache/mahout/driver/MahoutDriver/loadProperties(java.lang.String)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(char)|",
      "|java+method:///org/apache/hadoop/util/ProgramDriver/driver(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/mahout/driver/MahoutDriver/shortName(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/List/add(int,java.lang.Object)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/slf4j/Logger/isInfoEnabled()|",
      "|java+method:///java/util/Properties/keySet()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+constructor:///org/apache/mahout/clustering/canopy/CanopyReducer/CanopyReducer()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapred/MapReduceBase/MapReduceBase()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/bayes/BayesClassifierMapper/map(org.apache.hadoop.io.Text,org.apache.hadoop.io.Text,org.apache.hadoop.mapred.OutputCollector,org.apache.hadoop.mapred.Reporter)|",
    "called": "|java+method:///org/apache/hadoop/io/Text/toString()|",
    "v1Body": [
      "|java+method:///org/apache/mahout/classifier/bayes/model/ClassifierContext/classifyDocument(java.lang.String%5B%5D,java.lang.String)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/common/nlp/NGrams/NGrams(java.lang.String,int)|",
      "|java+method:///org/apache/mahout/common/nlp/NGrams/generateNGramsWithoutLabel()|",
      "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable(double)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+constructor:///org/apache/mahout/common/StringTuple/StringTuple(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/StringTuple/add(java.lang.String)|",
      "|java+method:///org/apache/mahout/classifier/ClassifierResult/getLabel()|",
      "|java+method:///org/apache/mahout/classifier/bayes/exceptions/InvalidDatastoreException/toString()|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/classifier/bayes/model/ClassifierContext/classifyDocument(java.lang.String%5B%5D,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/common/nlp/NGrams/NGrams(java.lang.String,int)|",
      "|java+method:///org/apache/mahout/common/nlp/NGrams/generateNGramsWithoutLabel()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+constructor:///org/apache/mahout/common/StringTuple/StringTuple(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/StringTuple/add(java.lang.String)|",
      "|java+method:///org/apache/mahout/classifier/ClassifierResult/getLabel()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.Throwable)|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+constructor:///org/apache/mahout/cf/taste/hadoop/slopeone/SlopeOnePrefsToDiffsReducer/SlopeOnePrefsToDiffsReducer()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|",
    "v1Body": [
      "|java+constructor:///org/apache/hadoop/mapred/MapReduceBase/MapReduceBase()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/classifier/bayes/TrainClassifier/main(java.lang.String%5B%5D)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/mahout/classifier/bayes/TrainClassifier/trainCNaiveBayes(java.lang.String,java.lang.String,org.apache.mahout.classifier.bayes.common.BayesParameters)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/helpOption()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/mahout/classifier/bayes/TrainClassifier/trainNaiveBayes(java.lang.String,java.lang.String,org.apache.mahout.classifier.bayes.common.BayesParameters)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withLongName(java.lang.String)|",
      "|java+constructor:///org/apache/commons/cli2/builder/ArgumentBuilder/ArgumentBuilder()|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMaximum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withRequired(boolean)|",
      "|java+method:///org/apache/mahout/classifier/bayes/common/BayesParameters/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelp(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMinimum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withArgument(org.apache.commons.cli2.Argument)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/create()|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/common/BayesParameters/BayesParameters(int)|",
      "|java+constructor:///org/apache/commons/cli2/builder/DefaultOptionBuilder/DefaultOptionBuilder()|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/common/BayesParameters/BayesParameters()|",
      "|java+method:///org/apache/mahout/classifier/bayes/common/BayesParameters/setGramSize(int)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelp(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/helpOption()|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withLongName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/create()|",
      "|java+constructor:///org/apache/commons/cli2/builder/ArgumentBuilder/ArgumentBuilder()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
      "|java+method:///org/apache/mahout/classifier/bayes/common/BayesParameters/setMinDF(int)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMaximum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withRequired(boolean)|",
      "|java+method:///org/apache/mahout/classifier/bayes/common/BayesParameters/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/classifier/bayes/common/BayesParameters/setMinSupport(int)|",
      "|java+method:///org/apache/mahout/classifier/bayes/TrainClassifier/trainNaiveBayes(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.mahout.classifier.bayes.common.BayesParameters)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/mahout/classifier/bayes/common/BayesParameters/setSkipCleanup(boolean)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMinimum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withArgument(org.apache.commons.cli2.Argument)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setHelpOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+constructor:///org/apache/commons/cli2/builder/DefaultOptionBuilder/DefaultOptionBuilder()|",
      "|java+method:///org/apache/mahout/classifier/bayes/TrainClassifier/trainCNaiveBayes(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.mahout.classifier.bayes.common.BayesParameters)|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesTfIdfReducer/reduce(org.apache.mahout.common.StringTuple,java.util.Iterator,org.apache.hadoop.mapred.OutputCollector,org.apache.hadoop.mapred.Reporter)|",
    "called": "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable(double)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapred/Reporter/setStatus(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/apache/hadoop/io/DoubleWritable/get()|",
      "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable(double)|",
      "|java+constructor:///org/apache/hadoop/hbase/client/Put/Put(byte%5B%5D)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/hbase/client/Put/add(byte%5B%5D,byte%5B%5D,byte%5B%5D)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(double)|",
      "|java+method:///org/apache/hadoop/hbase/util/Bytes/toBytes(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/client/HTable/put(org.apache.hadoop.hbase.client.Put)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/hbase/util/Bytes/toBytes(double)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/StringTuple/stringAt(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/mapred/Reporter/setStatus(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/io/DoubleWritable/get()|",
      "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable(double)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(double)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/StringTuple/stringAt(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+constructor:///org/apache/mahout/clustering/kmeans/KMeansMapper/KMeansMapper()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapred/MapReduceBase/MapReduceBase()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+constructor:///org/apache/mahout/clustering/canopy/CanopyMapper/CanopyMapper()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapred/MapReduceBase/MapReduceBase()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/driver/MahoutDriver/addClass(org.apache.hadoop.util.ProgramDriver,java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/apache/hadoop/util/ProgramDriver/addClass(java.lang.String,java.lang.Class,java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///org/apache/hadoop/util/ProgramDriver/addClass(java.lang.String,java.lang.Class,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/mahout/driver/MahoutDriver/desc(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/driver/MahoutDriver/shortName(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///org/apache/hadoop/util/ProgramDriver/addClass(java.lang.String,java.lang.Class,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/driver/MahoutDriver/desc(java.lang.String)|",
      "|java+method:///org/apache/mahout/driver/MahoutDriver/shortName(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/TransposeJob/buildTransposeJobConf(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int)|",
    "called": "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapred/JobConf/setOutputKeyClass(java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/FileOutputFormat/setOutputPath(org.apache.hadoop.mapred.JobConf,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setReducerClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setMapOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setJobName(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setInputFormat(java.lang.Class)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setInt(java.lang.String,int)|",
      "|java+method:///org/apache/hadoop/mapred/FileInputFormat/addInputPath(org.apache.hadoop.mapred.JobConf,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setMapOutputKeyClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setOutputFormat(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setMapperClass(java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/makeQualified(org.apache.hadoop.fs.Path)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/mahout/math/hadoop/TransposeJob/buildTransposeJobConf(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/readFList(org.apache.mahout.common.Parameters)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Reader/SequenceFile$Reader(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/PriorityQueue/add(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/io/LongWritable/get()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth$1/PFPGrowth$1()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text()|",
      "|java+constructor:///java/util/PriorityQueue/PriorityQueue(int,java.util.Comparator)|",
      "|java+method:///java/util/PriorityQueue/poll()|",
      "|java+constructor:///org/apache/hadoop/io/LongWritable/LongWritable()|",
      "|java+method:///java/util/PriorityQueue/isEmpty()|",
      "|java+constructor:///org/apache/mahout/common/Pair/Pair(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/next(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/CountDescendingPairComparator/CountDescendingPairComparator()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirIterable/SequenceFileDirIterable(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,java.util.Comparator,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/io/LongWritable/get()|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/PriorityQueue/add(java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirIterable/iterator()|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String)|",
      "|java+constructor:///java/util/PriorityQueue/PriorityQueue(int,java.util.Comparator)|",
      "|java+method:///java/util/PriorityQueue/poll()|",
      "|java+method:///java/util/PriorityQueue/isEmpty()|",
      "|java+constructor:///org/apache/mahout/common/Pair/Pair(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/bayes/BayesClassifierDriver/runJob(org.apache.mahout.common.Parameters)|",
    "called": "|java+method:///org/apache/hadoop/mapred/JobConf/setOutputValueClass(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/common/Parameters/toString()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/bayes/BayesClassifierDriver/readResult(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration,org.apache.mahout.common.Parameters)|",
      "|java+method:///org/apache/hadoop/mapred/FileInputFormat/setInputPaths(org.apache.hadoop.mapred.JobConf,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setCombinerClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setInputFormat(java.lang.Class)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setOutputKeyClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobClient/runJob(org.apache.hadoop.mapred.JobConf)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setOutputFormat(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(java.lang.Class)|",
      "|java+method:///org/apache/mahout/classifier/ConfusionMatrix/summarize()|",
      "|java+method:///org/apache/hadoop/conf/Configurable/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapred/FileOutputFormat/setOutputPath(org.apache.hadoop.mapred.JobConf,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setReducerClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setJobName(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/delete(org.apache.hadoop.fs.Path,boolean)|",
      "|java+constructor:///org/apache/hadoop/mapred/JobClient/JobClient()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setMapperClass(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/common/Parameters/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/FileInputFormat/setInputPaths(org.apache.hadoop.mapred.JobConf,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setReducerClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setCombinerClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setJobName(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setInputFormat(java.lang.Class)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setOutputKeyClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/HadoopUtil/delete(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+method:///org/apache/hadoop/mapred/JobClient/runJob(org.apache.hadoop.mapred.JobConf)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setOutputFormat(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configurable/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapred/FileOutputFormat/setOutputPath(org.apache.hadoop.mapred.JobConf,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/bayes/BayesClassifierDriver/readResult(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration,org.apache.mahout.common.Parameters)|",
      "|java+constructor:///org/apache/hadoop/mapred/JobClient/JobClient()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setMapperClass(java.lang.Class)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/convertors/integer/IntegerStringOutputConverter/collect(java.lang.Integer,java.util.List)|",
    "called": "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/convertors/string/TopKStringPatterns/TopKStringPatterns(java.util.List)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///org/apache/mahout/common/Pair/Pair(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/convertors/string/TopKStringPatterns/TopKStringPatterns(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///org/apache/mahout/common/Pair/Pair(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/df/tools/UDistrib/runTool(java.lang.String,java.lang.String,java.lang.String,int)|",
    "called": "|java+method:///org/apache/hadoop/fs/FileUtil/copyMerge(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Scanner/close()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/load(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/mahout/df/data/DataConverter/DataConverter(org.apache.mahout.df.data.Dataset)|",
      "|java+method:///org/apache/hadoop/fs/FSDataOutputStream/writeBytes(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FSDataOutputStream/close()|",
      "|java+method:///java/util/Scanner/hasNextLine()|",
      "|java+method:///org/apache/hadoop/fs/FSDataOutputStream/writeChar(int)|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///java/util/Scanner/nextLine()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/apache/hadoop/fs/FileUtil/copyMerge(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration,java.lang.String)|",
      "|java+constructor:///java/util/Scanner/Scanner(java.io.InputStream)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/nblabels()|",
      "|java+method:///java/io/File/toString()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/create(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///java/util/Random/nextInt(int)|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/nbInstances()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/open(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/FileUtil/createLocalTempFile(java.io.File,java.lang.String,boolean)|",
      "|java+method:///org/apache/mahout/df/data/DataConverter/convert(int,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Scanner/close()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/load(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/mahout/df/data/DataConverter/DataConverter(org.apache.mahout.df.data.Dataset)|",
      "|java+method:///org/apache/hadoop/fs/FSDataOutputStream/writeBytes(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FSDataOutputStream/close()|",
      "|java+method:///java/util/Scanner/hasNextLine()|",
      "|java+method:///org/apache/hadoop/fs/FSDataOutputStream/writeChar(int)|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileUtil/copyMerge(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration,java.lang.String)|",
      "|java+constructor:///java/util/Scanner/Scanner(java.io.InputStream)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/nblabels()|",
      "|java+method:///java/io/File/toString()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/create(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///java/util/Random/nextInt(int)|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///java/util/Scanner/nextLine()|",
      "|java+method:///java/lang/String/format(java.util.Locale,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/apache/mahout/df/data/Dataset/nbInstances()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/open(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/FileUtil/createLocalTempFile(java.io.File,java.lang.String,boolean)|",
      "|java+method:///org/apache/mahout/df/data/DataConverter/convert(int,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/mahout/df/data/Instance/getLabel()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+constructor:///org/apache/mahout/clustering/dirichlet/DirichletMapper/DirichletMapper()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|",
    "v1Body": [
      "|java+constructor:///org/apache/hadoop/mapred/MapReduceBase/MapReduceBase()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/startAggregating(org.apache.mahout.common.Parameters)|",
    "called": "|java+method:///org/apache/hadoop/mapreduce/Job/setInputFormatClass(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapreduce/Job/waitForCompletion(boolean)|",
      "|java+method:///org/apache/mahout/common/Parameters/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setReducerClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setCombinerClass(java.lang.Class)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputFormatClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapperClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setInputFormatClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setJarByClass(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Job/Job(org.apache.hadoop.conf.Configuration,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/FileOutputFormat/setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/delete(org.apache.hadoop.fs.Path,boolean)|",
      "|java+method:///org/apache/mahout/common/Parameters/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputKeyClass(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/input/FileInputFormat/addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/mapreduce/Job/waitForCompletion(boolean)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setReducerClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setJarByClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setCombinerClass(java.lang.Class)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputFormatClass(java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/Parameters/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputKeyClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapperClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/HadoopUtil/delete(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setInputFormatClass(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Parameters/toString()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Job/Job(org.apache.hadoop.conf.Configuration,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/FileOutputFormat/setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/input/FileInputFormat/addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/TransactionSortingMapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///java/util/regex/Pattern/compile(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/put(java.lang.Object,int)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/deserializeList(org.apache.mahout.common.Parameters,java.lang.String,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/regex/Pattern/toString()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/mahout/common/Parameters/fromString(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/util/regex/Pattern/compile(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/put(java.lang.Object,int)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/deserializeList(org.apache.mahout.common.Parameters,java.lang.String,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/regex/Pattern/toString()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/mahout/common/Parameters/Parameters(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/TransactionSortingMapper/map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+constructor:///org/apache/hadoop/io/LongWritable/LongWritable(long)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/regex/Pattern/split(java.lang.CharSequence)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Collections/sort(java.util.List)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/containsKey(java.lang.Object)|",
      "|java+constructor:///java/util/HashSet/HashSet(java.util.Collection)|",
      "|java+constructor:///org/apache/hadoop/io/LongWritable/LongWritable(long)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/TransactionTree/TransactionTree(java.lang.Integer%5B%5D,java.lang.Long)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/get(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/regex/Pattern/split(java.lang.CharSequence)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Collections/sort(java.util.List)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/containsKey(java.lang.Object)|",
      "|java+constructor:///java/util/HashSet/HashSet(java.util.Collection)|",
      "|java+constructor:///org/apache/hadoop/io/LongWritable/LongWritable(long)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/TransactionTree/TransactionTree(java.lang.Integer%5B%5D,java.lang.Long)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/get(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+method:///java/lang/Iterable/iterator()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/df/mapreduce/inmem/InMemBuilder/parseOutput(org.apache.hadoop.mapreduce.Job,org.apache.mahout.df.callback.PredictionCallback)|",
    "called": "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/df/mapreduce/inmem/InMemBuilder/processOutput(java.util.Map,org.apache.mahout.df.callback.PredictionCallback)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Reader/SequenceFile$Reader(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/getConfiguration()|",
      "|java+method:///org/apache/mahout/df/mapreduce/inmem/InMemBuilder/getOutputPath(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///org/apache/mahout/df/mapreduce/MapredOutput/MapredOutput()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/next(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/df/DFUtils/listOutputFiles(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/close()|",
      "|java+method:///org/apache/mahout/df/mapreduce/MapredOutput/clone()|",
      "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable()|",
      "|java+method:///org/apache/hadoop/io/IntWritable/get()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/df/mapreduce/inmem/InMemBuilder/processOutput(java.util.Map,org.apache.mahout.df.callback.PredictionCallback)|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/getConfiguration()|",
      "|java+method:///org/apache/mahout/df/mapreduce/inmem/InMemBuilder/getOutputPath(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileIterable/iterator()|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/hadoop/io/IntWritable/get()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileIterable/SequenceFileIterable(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/df/DFUtils/listOutputFiles(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+constructor:///org/apache/mahout/df/mapreduce/partial/TreeID/TreeID(int,int)|",
    "called": "|java+constructor:///org/apache/hadoop/io/LongWritable/LongWritable()|",
    "v1Body": [
      "|java+method:///org/apache/mahout/df/mapreduce/partial/TreeID/set(int,int)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/LongWritable/LongWritable()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/df/mapreduce/partial/TreeID/set(int,int)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/io/LongWritable/LongWritable()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/df/mapreduce/partial/InterResults/store(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.mahout.df.mapreduce.partial.TreeID%5B%5D,org.apache.mahout.df.node.Node%5B%5D,int%5B%5D)|",
    "called": "|java+method:///org/apache/hadoop/fs/FSDataOutputStream/close()|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/fs/FSDataOutputStream/close()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FSDataOutputStream/writeInt(int)|",
      "|java+method:///org/apache/mahout/df/node/Node/write(java.io.DataOutput)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/create(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/df/mapreduce/partial/TreeID/write(java.io.DataOutput)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/FSDataOutputStream/close()|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/fs/FSDataOutputStream/writeInt(int)|",
      "|java+method:///org/apache/mahout/df/node/Node/write(java.io.DataOutput)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/create(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/df/mapreduce/partial/TreeID/write(java.io.DataOutput)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+initializer:///org/apache/mahout/classifier/bayes/mapreduce/bayes/BayesClassifierMapper/BayesClassifierMapper$initializer|",
    "called": "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable(double)|",
    "v1Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable(double)|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/classifier/bayes/datastore/InMemoryBayesDatastore/initialize()|",
    "called": "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/map/OpenIntDoubleHashMap/get(int)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/mahout/classifier/bayes/io/SequenceFileModelReader/loadModel(org.apache.mahout.classifier.bayes.datastore.InMemoryBayesDatastore,org.apache.hadoop.fs.FileSystem,org.apache.mahout.common.Parameters,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/classifier/bayes/datastore/InMemoryBayesDatastore/getKeys(java.lang.String)|",
      "|java+method:///org/apache/mahout/classifier/bayes/datastore/InMemoryBayesDatastore/getLabelID(java.lang.String)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///java/io/IOException/getMessage()|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/exceptions/InvalidDatastoreException/InvalidDatastoreException(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/map/OpenIntDoubleHashMap/get(int)|",
      "|java+method:///org/apache/mahout/classifier/bayes/io/SequenceFileModelReader/loadModel(org.apache.mahout.classifier.bayes.datastore.InMemoryBayesDatastore,org.apache.mahout.common.Parameters,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/mahout/classifier/bayes/datastore/InMemoryBayesDatastore/getKeys(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/mahout/classifier/bayes/datastore/InMemoryBayesDatastore/getLabelID(java.lang.String)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/TimesSquaredJob/createTimesSquaredJobConf(org.apache.mahout.math.Vector,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
    "called": "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/hadoop/TimesSquaredJob/createTimesSquaredJobConf(org.apache.mahout.math.Vector,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/mahout/math/hadoop/TimesSquaredJob/createTimesSquaredJobConf(org.apache.hadoop.conf.Configuration,org.apache.mahout.math.Vector,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureReducer/reduce(org.apache.mahout.common.StringTuple,java.util.Iterator,org.apache.hadoop.mapred.OutputCollector,org.apache.hadoop.mapred.Reporter)|",
    "called": "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable(double)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapred/Reporter/setStatus(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/io/DoubleWritable/get()|",
      "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable(double)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(double)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/mapred/Reporter/incrCounter(java.lang.String,java.lang.String,long)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/io/DoubleWritable/get()|",
      "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable(double)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(double)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/Reporter/setStatus(java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/StringTuple/stringAt(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/mahout/common/StringTuple/length()|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/df/mapreduce/Builder/build(int,org.apache.mahout.df.callback.PredictionCallback)|",
    "called": "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///org/apache/mahout/df/mapreduce/Builder/runJob(org.apache.hadoop.mapreduce.Job)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/df/mapreduce/Builder/setOobEstimate(org.apache.hadoop.conf.Configuration,boolean)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/filecache/DistributedCache/addCacheFile(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/df/mapreduce/Builder/parseOutput(org.apache.hadoop.mapreduce.Job,org.apache.mahout.df.callback.PredictionCallback)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/df/mapreduce/Builder/configureJob(org.apache.hadoop.mapreduce.Job,int,boolean)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/mahout/df/mapreduce/Builder/getOutputPath(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/df/mapreduce/Builder/setNbTrees(org.apache.hadoop.conf.Configuration,int)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Job/Job(org.apache.hadoop.conf.Configuration,java.lang.String)|",
      "|java+method:///org/apache/mahout/df/mapreduce/Builder/isOutput(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/df/mapreduce/Builder/setTreeBuilder(org.apache.hadoop.conf.Configuration,org.apache.mahout.df.builder.TreeBuilder)|",
      "|java+method:///org/apache/mahout/df/mapreduce/Builder/setRandomSeed(org.apache.hadoop.conf.Configuration,long)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/delete(org.apache.hadoop.fs.Path,boolean)|"
    ],
    "v2Body": [
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///org/apache/mahout/df/mapreduce/Builder/runJob(org.apache.hadoop.mapreduce.Job)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/df/mapreduce/Builder/setOobEstimate(org.apache.hadoop.conf.Configuration,boolean)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/mahout/df/mapreduce/Builder/setRandomSeed(org.apache.hadoop.conf.Configuration,long)|",
      "|java+method:///org/apache/hadoop/filecache/DistributedCache/addCacheFile(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/HadoopUtil/delete(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/df/mapreduce/Builder/parseOutput(org.apache.hadoop.mapreduce.Job,org.apache.mahout.df.callback.PredictionCallback)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/df/mapreduce/Builder/configureJob(org.apache.hadoop.mapreduce.Job,int,boolean)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/mahout/df/mapreduce/Builder/getOutputPath(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/df/mapreduce/Builder/setNbTrees(org.apache.hadoop.conf.Configuration,int)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Job/Job(org.apache.hadoop.conf.Configuration,java.lang.String)|",
      "|java+method:///org/apache/mahout/df/mapreduce/Builder/isOutput(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/df/mapreduce/Builder/setTreeBuilder(org.apache.hadoop.conf.Configuration,org.apache.mahout.df.builder.TreeBuilder)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+constructor:///org/apache/mahout/ga/watchmaker/EvalMapper/EvalMapper()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|",
    "v1Body": [
      "|java+constructor:///org/apache/hadoop/mapred/MapReduceBase/MapReduceBase()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/TransposeJob/run(java.lang.String%5B%5D)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/hadoop/TransposeJob/parseArguments(java.lang.String%5B%5D,org.apache.commons.cli2.Option%5B%5D)|",
      "|java+method:///org/apache/mahout/math/hadoop/TransposeJob/getConf()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/configure(org.apache.hadoop.mapred.JobConf)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(java.lang.String,java.lang.String,int,int)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/transpose()|",
      "|java+method:///org/apache/mahout/math/hadoop/TransposeJob/buildOption(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(org.apache.hadoop.conf.Configuration)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/hadoop/TransposeJob/parseArguments(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/mahout/math/hadoop/TransposeJob/addOption(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/math/hadoop/TransposeJob/addInputOption()|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/TransposeJob/getConf()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/transpose()|",
      "|java+method:///org/apache/mahout/math/hadoop/TransposeJob/getInputPath()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper/map(org.apache.hadoop.io.Text,org.apache.hadoop.io.Text,org.apache.hadoop.mapred.OutputCollector,org.apache.hadoop.mapred.Reporter)|",
    "called": "|java+method:///org/apache/hadoop/io/Text/toString()|",
    "v1Body": [
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$1/BayesFeatureMapper$1(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,org.apache.commons.lang.mutable.MutableDouble)|",
      "|java+method:///org/apache/lucene/analysis/tokenattributes/TermAttribute/term()|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/forEachKey(org.apache.mahout.math.function.ObjectProcedure)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/getAttribute(java.lang.Class)|",
      "|java+method:///java/lang/String/length()|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$2/BayesFeatureMapper$2(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,java.lang.String,double,org.apache.hadoop.mapred.OutputCollector)|",
      "|java+constructor:///org/apache/mahout/math/map/OpenObjectIntHashMap/OpenObjectIntHashMap(int)|",
      "|java+constructor:///org/apache/mahout/common/iterator/ArrayIterator/ArrayIterator(java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/commons/lang/mutable/MutableDouble/doubleValue()|",
      "|java+method:///org/apache/mahout/common/StringTuple/add(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/common/StringTuple/StringTuple()|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/incrementToken()|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/Math/sqrt(double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/forEachPair(org.apache.mahout.math.function.ObjectIntProcedure)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$IteratorTokenStream/BayesFeatureMapper$IteratorTokenStream(java.util.Iterator)|",
      "|java+method:///org/apache/hadoop/mapred/Reporter/setStatus(java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/split(java.lang.CharSequence)|",
      "|java+constructor:///org/apache/commons/lang/mutable/MutableDouble/MutableDouble(double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/put(java.lang.Object,int)|",
      "|java+constructor:///org/apache/lucene/analysis/shingle/ShingleFilter/ShingleFilter(org.apache.lucene.analysis.TokenStream,int)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/get(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$3/BayesFeatureMapper$3(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,java.lang.String,org.apache.hadoop.mapred.OutputCollector)|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Iterators/forArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$1/BayesFeatureMapper$1(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,org.apache.commons.lang.mutable.MutableDouble)|",
      "|java+method:///org/apache/lucene/analysis/tokenattributes/TermAttribute/term()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/getAttribute(java.lang.Class)|",
      "|java+method:///java/lang/String/length()|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$2/BayesFeatureMapper$2(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,java.lang.String,double,org.apache.hadoop.mapred.OutputCollector)|",
      "|java+constructor:///org/apache/mahout/math/map/OpenObjectIntHashMap/OpenObjectIntHashMap(int)|",
      "|java+method:///org/apache/commons/lang/mutable/MutableDouble/doubleValue()|",
      "|java+method:///org/apache/mahout/common/StringTuple/add(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/common/StringTuple/StringTuple()|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/incrementToken()|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/Math/sqrt(double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/forEachPair(org.apache.mahout.math.function.ObjectIntProcedure)|",
      "|java+method:///org/apache/hadoop/mapred/Reporter/setStatus(java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/split(java.lang.CharSequence)|",
      "|java+constructor:///org/apache/commons/lang/mutable/MutableDouble/MutableDouble(double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/put(java.lang.Object,int)|",
      "|java+constructor:///org/apache/lucene/analysis/shingle/ShingleFilter/ShingleFilter(org.apache.lucene.analysis.TokenStream,int)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/get(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/mahout/common/lucene/IteratorTokenStream/IteratorTokenStream(java.util.Iterator)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$3/BayesFeatureMapper$3(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,java.lang.String,org.apache.hadoop.mapred.OutputCollector)|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/ParallelFPGrowthMapper/map(org.apache.hadoop.io.LongWritable,org.apache.mahout.fpm.pfpgrowth.TransactionTree,org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+constructor:///org/apache/hadoop/io/LongWritable/LongWritable(long)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/map/OpenIntLongHashMap/get(int)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/TransactionTree/TransactionTree(java.lang.Integer%5B%5D,java.lang.Long)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/setStatus(java.lang.String)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/TransactionTree/getIterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/hadoop/io/LongWritable/LongWritable(long)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/map/OpenIntLongHashMap/get(int)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+method:///java/util/Collection/contains(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/TransactionTree/TransactionTree(java.lang.Integer%5B%5D,java.lang.Long)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/setStatus(java.lang.String)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/TransactionTree/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/hadoop/io/LongWritable/LongWritable(long)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/startParallelCounting(org.apache.mahout.common.Parameters)|",
    "called": "|java+method:///org/apache/hadoop/mapreduce/Job/setInputFormatClass(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapreduce/Job/waitForCompletion(boolean)|",
      "|java+method:///org/apache/mahout/common/Parameters/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setReducerClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setCombinerClass(java.lang.Class)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputFormatClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/delete(org.apache.hadoop.fs.Path,boolean)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapperClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setInputFormatClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setJarByClass(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Job/Job(org.apache.hadoop.conf.Configuration,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/FileOutputFormat/setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputKeyClass(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/input/FileInputFormat/addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/mapreduce/Job/waitForCompletion(boolean)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setReducerClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setJarByClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setCombinerClass(java.lang.Class)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputFormatClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapperClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/HadoopUtil/delete(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setInputFormatClass(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Parameters/toString()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Job/Job(org.apache.hadoop.conf.Configuration,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/FileOutputFormat/setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputKeyClass(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/input/FileInputFormat/addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+constructor:///org/apache/mahout/cf/taste/hadoop/item/ItemIDIndexReducer/ItemIDIndexReducer()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|",
    "v1Body": [
      "|java+constructor:///org/apache/hadoop/mapred/MapReduceBase/MapReduceBase()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/df/mapreduce/partial/InterResults/load(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,int,int,int,org.apache.mahout.df.mapreduce.partial.TreeID%5B%5D,org.apache.mahout.df.node.Node%5B%5D)|",
    "called": "|java+method:///org/apache/hadoop/fs/FileSystem/open(org.apache.hadoop.fs.Path)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/df/node/Node/read(java.io.DataInput)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/df/mapreduce/partial/TreeID/TreeID()|",
      "|java+method:///org/apache/hadoop/fs/FSDataInputStream/close()|",
      "|java+method:///org/apache/hadoop/fs/FSDataInputStream/readInt()|",
      "|java+method:///org/apache/mahout/df/mapreduce/partial/TreeID/clone()|",
      "|java+method:///org/apache/mahout/df/mapreduce/partial/TreeID/readFields(java.io.DataInput)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/apache/mahout/df/mapreduce/partial/TreeID/partition()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/open(org.apache.hadoop.fs.Path)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/df/node/Node/read(java.io.DataInput)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/df/mapreduce/partial/TreeID/TreeID()|",
      "|java+method:///org/apache/hadoop/fs/FSDataInputStream/close()|",
      "|java+method:///org/apache/hadoop/fs/FSDataInputStream/readInt()|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///org/apache/mahout/df/mapreduce/partial/TreeID/clone()|",
      "|java+method:///org/apache/mahout/df/mapreduce/partial/TreeID/readFields(java.io.DataInput)|",
      "|java+method:///org/apache/mahout/df/mapreduce/partial/TreeID/partition()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/open(org.apache.hadoop.fs.Path)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/startParallelFPGrowth(org.apache.mahout.common.Parameters)|",
    "called": "|java+method:///org/apache/hadoop/mapreduce/Job/setInputFormatClass(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapOutputKeyClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/waitForCompletion(boolean)|",
      "|java+method:///org/apache/mahout/common/Parameters/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setReducerClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setCombinerClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapOutputValueClass(java.lang.Class)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputFormatClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/delete(org.apache.hadoop.fs.Path,boolean)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapperClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setInputFormatClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setJarByClass(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Job/Job(org.apache.hadoop.conf.Configuration,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/FileOutputFormat/setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputKeyClass(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/input/FileInputFormat/addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapOutputKeyClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/waitForCompletion(boolean)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setReducerClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setJarByClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setCombinerClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapOutputValueClass(java.lang.Class)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputFormatClass(java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputKeyClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapperClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/HadoopUtil/delete(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setInputFormatClass(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Parameters/toString()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Job/Job(org.apache.hadoop.conf.Configuration,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/FileOutputFormat/setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/input/FileInputFormat/addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+constructor:///org/apache/mahout/clustering/meanshift/MeanShiftCanopyReducer/MeanShiftCanopyReducer()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapred/MapReduceBase/MapReduceBase()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+constructor:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansClusterMapper/FuzzyKMeansClusterMapper()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapred/MapReduceBase/MapReduceBase()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/df/data/Data/extractLabels(org.apache.mahout.df.data.Dataset,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)|",
    "called": "|java+method:///org/apache/hadoop/fs/FileSystem/open(org.apache.hadoop.fs.Path)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/common/FileLineIterator/close()|",
      "|java+constructor:///org/apache/mahout/df/data/DataConverter/DataConverter(org.apache.mahout.df.data.Dataset)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/nbInstances()|",
      "|java+constructor:///org/apache/mahout/common/FileLineIterator/FileLineIterator(java.io.InputStream)|",
      "|java+method:///org/apache/mahout/common/FileLineIterator/next()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/open(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/df/data/DataConverter/convert(int,java.lang.String)|",
      "|java+method:///org/apache/mahout/common/FileLineIterator/hasNext()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/common/iterator/FileLineIterator/next()|",
      "|java+constructor:///org/apache/mahout/df/data/DataConverter/DataConverter(org.apache.mahout.df.data.Dataset)|",
      "|java+constructor:///org/apache/mahout/common/iterator/FileLineIterator/FileLineIterator(java.io.InputStream)|",
      "|java+method:///org/apache/mahout/common/iterator/FileLineIterator/hasNext()|",
      "|java+method:///org/apache/mahout/df/data/Dataset/nbInstances()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/open(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/common/iterator/FileLineIterator/close()|",
      "|java+method:///org/apache/mahout/df/data/DataConverter/convert(int,java.lang.String)|",
      "|java+method:///org/apache/mahout/df/data/Instance/getLabel()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+constructor:///org/apache/mahout/math/hadoop/MatrixMultiplicationJob$MatrixMultiplyMapper/MatrixMultiplicationJob$MatrixMultiplyMapper()|",
    "called": "|java+constructor:///org/apache/hadoop/mapred/MapReduceBase/MapReduceBase()|",
    "v1Body": [
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable()|",
      "|java+constructor:///org/apache/hadoop/mapred/MapReduceBase/MapReduceBase()|",
      "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/mapred/MapReduceBase/MapReduceBase()|",
      "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/df/mapreduce/Builder/getNumMaps(org.apache.hadoop.conf.Configuration)|",
    "called": "|java+method:///org/apache/hadoop/conf/Configuration/getInt(java.lang.String,int)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getInt(java.lang.String,int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/conf/Configuration/getInt(java.lang.String,int)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/setOutputTempPathString(java.lang.String)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/makeQualified(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/makeQualified(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/cbayes/CBayesThetaNormalizerMapper/configure(org.apache.hadoop.mapred.JobConf)|",
    "called": "|java+method:///org/apache/hadoop/io/DefaultStringifier/fromString(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/util/GenericsUtil/getClass(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/DefaultStringifier/fromString(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/DefaultStringifier/DefaultStringifier(org.apache.hadoop.conf.Configuration,java.lang.Class)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectDoubleHashMap/put(java.lang.Object,double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectDoubleHashMap/clear()|",
      "|java+method:///java/lang/Double/valueOf(java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/get(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/io/DefaultStringifier/toString(java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/io/IOException/toString()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/lang/Double/doubleValue()|",
      "|java+method:///org/apache/mahout/common/Parameters/fromString(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/util/GenericsUtil/getClass(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/DefaultStringifier/fromString(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/DefaultStringifier/DefaultStringifier(org.apache.hadoop.conf.Configuration,java.lang.Class)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectDoubleHashMap/put(java.lang.Object,double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectDoubleHashMap/clear()|",
      "|java+method:///java/lang/Double/valueOf(java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/get(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/io/DefaultStringifier/toString(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/common/Parameters/Parameters(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/io/IOException/toString()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/lang/Double/doubleValue()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+constructor:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansReducer/FuzzyKMeansReducer()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|",
    "v1Body": [
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///org/apache/hadoop/mapred/MapReduceBase/MapReduceBase()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|",
      "|java+constructor:///java/util/HashMap/HashMap()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/run(java.lang.String%5B%5D)|",
    "called": "|java+method:///org/apache/hadoop/conf/Configuration/setBoolean(java.lang.String,boolean)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapred/JobClient/runJob(org.apache.hadoop.mapred.JobConf)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setClass(java.lang.String,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setInt(java.lang.String,int)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/AbstractJob/prepareJobConf(java.lang.String,java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/AbstractJob/parseArguments(java.lang.String%5B%5D,org.apache.commons.cli2.Option%5B%5D)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/AbstractJob/buildOption(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/similarity/RowSimilarityJob/RowSimilarityJob()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/addOutputOption()|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/addInputOption()|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/shouldRunNextPhase(java.util.Map,java.util.concurrent.atomic.AtomicInteger)|",
      "|java+method:///java/lang/Boolean/toString()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/waitForCompletion(boolean)|",
      "|java+method:///java/lang/String/valueOf(java.lang.Object)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/addOption(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/setIOSort(org.apache.hadoop.mapreduce.JobContext)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/getConfiguration()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicInteger/AtomicInteger()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/setBoolean(java.lang.String,boolean)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/setInt(java.lang.String,int)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/getConf()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setCombinerClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/getOutputPath()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setPartitionerClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/getInputPath()|",
      "|java+method:///java/lang/StringBuilder/append(char)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/input/FileInputFormat/setInputPaths(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/prepareJob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setGroupingComparatorClass(java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/parseArguments(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/mahout/math/hadoop/similarity/SimilarityType/listEnumNames()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/hadoop/util/ToolRunner/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.util.Tool,java.lang.String%5B%5D)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/TasteHadoopUtils/readIntFromFile(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/String/valueOf(int)|",
      "|java+method:///org/apache/hadoop/fs/Path/makeQualified(org.apache.hadoop.fs.FileSystem)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/bayes/BayesThetaNormalizerReducer/reduce(org.apache.mahout.common.StringTuple,java.util.Iterator,org.apache.hadoop.mapred.OutputCollector,org.apache.hadoop.mapred.Reporter)|",
    "called": "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable(double)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapred/Reporter/setStatus(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/io/DoubleWritable/get()|",
      "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable(double)|",
      "|java+constructor:///org/apache/hadoop/hbase/client/Put/Put(byte%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/hbase/client/Put/add(byte%5B%5D,byte%5B%5D,byte%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(double)|",
      "|java+method:///org/apache/hadoop/hbase/util/Bytes/toBytes(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/client/HTable/put(org.apache.hadoop.hbase.client.Put)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/hbase/util/Bytes/toBytes(double)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/StringTuple/stringAt(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/mapred/Reporter/setStatus(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/io/DoubleWritable/get()|",
      "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable(double)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(double)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/MatrixMultiplicationJob/run(java.lang.String%5B%5D)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/configure(org.apache.hadoop.mapred.JobConf)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/hadoop/MatrixMultiplicationJob/getConf()|",
      "|java+method:///org/apache/mahout/math/hadoop/MatrixMultiplicationJob/buildOption(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(java.lang.String,java.lang.String,int,int)|",
      "|java+method:///org/apache/mahout/math/hadoop/MatrixMultiplicationJob/parseArguments(java.lang.String%5B%5D,org.apache.commons.cli2.Option%5B%5D)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/times(org.apache.mahout.math.hadoop.DistributedRowMatrix)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/MatrixMultiplicationJob/parseArguments(java.lang.String%5B%5D)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/hadoop/MatrixMultiplicationJob/getConf()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/hadoop/MatrixMultiplicationJob/addOption(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/times(org.apache.mahout.math.hadoop.DistributedRowMatrix)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/ga/watchmaker/MahoutFitnessEvaluator/evaluate(java.util.List,java.util.List)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/mahout/ga/watchmaker/MahoutEvaluator/evaluate(org.uncommons.watchmaker.framework.FitnessEvaluator,java.util.List,java.util.List)|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/mahout/ga/watchmaker/MahoutEvaluator/evaluate(org.uncommons.watchmaker.framework.FitnessEvaluator,java.lang.Iterable,java.util.Collection,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/FPGrowthDriver/main(java.lang.String%5B%5D)|",
    "called": "|java+method:///org/apache/hadoop/fs/Path/toString()|",
    "v1Body": [
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelp(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withLongName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/create()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/HadoopUtil/overwriteOutput(java.lang.String)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/runPFPGrowth(org.apache.mahout.common.Parameters)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMaximum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withRequired(boolean)|",
      "|java+constructor:///org/apache/mahout/common/Parameters/Parameters()|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/helpOption()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/outputOption()|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMinimum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withArgument(org.apache.commons.cli2.Argument)|",
      "|java+constructor:///org/apache/commons/cli2/builder/ArgumentBuilder/ArgumentBuilder()|",
      "|java+method:///org/apache/mahout/common/Parameters/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/FPGrowthDriver/runFPGrowth(org.apache.mahout.common.Parameters)|",
      "|java+constructor:///org/apache/commons/cli2/builder/DefaultOptionBuilder/DefaultOptionBuilder()|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelp(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withLongName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/create()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/runPFPGrowth(org.apache.mahout.common.Parameters)|",
      "|java+method:///org/apache/mahout/common/HadoopUtil/delete(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMaximum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withRequired(boolean)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+constructor:///org/apache/mahout/common/Parameters/Parameters()|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/helpOption()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/outputOption()|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMinimum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withArgument(org.apache.commons.cli2.Argument)|",
      "|java+constructor:///org/apache/commons/cli2/builder/ArgumentBuilder/ArgumentBuilder()|",
      "|java+method:///org/apache/mahout/common/Parameters/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/FPGrowthDriver/runFPGrowth(org.apache.mahout.common.Parameters)|",
      "|java+constructor:///org/apache/commons/cli2/builder/DefaultOptionBuilder/DefaultOptionBuilder()|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+constructor:///org/apache/mahout/cf/taste/hadoop/item/ItemIDIndexMapper/ItemIDIndexMapper()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|",
    "v1Body": [
      "|java+constructor:///org/apache/hadoop/mapred/MapReduceBase/MapReduceBase()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/times(org.apache.mahout.math.Vector)|",
    "called": "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(org.apache.hadoop.conf.Configuration)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapred/JobClient/runJob(org.apache.hadoop.mapred.JobConf)|",
      "|java+method:///org/apache/mahout/math/hadoop/TimesSquaredJob/createTimesJobConf(org.apache.mahout.math.Vector,int,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/lang/Long/toString(long)|",
      "|java+method:///org/apache/mahout/math/hadoop/TimesSquaredJob/retrieveTimesSquaredOutputVector(org.apache.hadoop.mapred.JobConf)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///java/lang/Long/toString(long)|",
      "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/TimesSquaredJob/retrieveTimesSquaredOutputVector(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/TimesSquaredJob/createTimesJobConf(org.apache.hadoop.conf.Configuration,org.apache.mahout.math.Vector,int,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/delete(org.apache.hadoop.fs.Path,boolean)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/getConf()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///org/apache/hadoop/mapred/JobClient/runJob(org.apache.hadoop.mapred.JobConf)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+constructor:///org/apache/mahout/clustering/meanshift/MeanShiftCanopyCreatorMapper/MeanShiftCanopyCreatorMapper()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|",
    "v1Body": [
      "|java+constructor:///org/apache/hadoop/mapred/MapReduceBase/MapReduceBase()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/convertors/string/StringOutputConverter/collect(java.lang.String,java.util.List)|",
    "called": "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/convertors/string/TopKStringPatterns/TopKStringPatterns(java.util.List)|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/convertors/string/TopKStringPatterns/TopKStringPatterns(java.util.Collection)|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+constructor:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansMapper/FuzzyKMeansMapper()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapred/MapReduceBase/MapReduceBase()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/AggregatorReducer/setup(org.apache.hadoop.mapreduce.Reducer$Context)|",
    "called": "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Parameters/fromString(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/getConfiguration()|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer/setup(org.apache.hadoop.mapreduce.Reducer$Context)|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///org/apache/mahout/common/Parameters/Parameters(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/getConfiguration()|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer/setup(org.apache.hadoop.mapreduce.Reducer$Context)|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/clustering/lda/LDADriver/main(java.lang.String%5B%5D)|",
    "called": "|java+method:///org/apache/hadoop/util/ToolRunner/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.util.Tool,java.lang.String%5B%5D)|",
    "v1Body": [
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/apache/mahout/clustering/lda/LDADriver/runJob(java.lang.String,java.lang.String,int,int,double,int,int)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withName(java.lang.String)|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelp(org.apache.commons.cli2.Group)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withLongName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/create()|",
      "|java+constructor:///org/apache/commons/cli2/builder/ArgumentBuilder/ArgumentBuilder()|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withDefault(java.lang.Object)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/HadoopUtil/overwriteOutput(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMaximum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withRequired(boolean)|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMinimum(int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withArgument(org.apache.commons.cli2.Argument)|",
      "|java+constructor:///org/apache/commons/cli2/builder/DefaultOptionBuilder/DefaultOptionBuilder()|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/mahout/clustering/lda/LDADriver/LDADriver()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/hadoop/util/ToolRunner/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.util.Tool,java.lang.String%5B%5D)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/clustering/meanshift/MeanShiftCanopyDriver/main(java.lang.String%5B%5D)|",
    "called": "|java+method:///org/apache/hadoop/util/ToolRunner/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.util.Tool,java.lang.String%5B%5D)|",
    "v1Body": [
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withName(java.lang.String)|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelp(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/mahout/clustering/meanshift/MeanShiftCanopyDriver/runJob(java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,double,double)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/create()|",
      "|java+constructor:///org/apache/commons/cli2/builder/ArgumentBuilder/ArgumentBuilder()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMaximum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withRequired(boolean)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/helpOption()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/outputOption()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/inputOption()|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMinimum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withArgument(org.apache.commons.cli2.Argument)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withLongName(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/meanshift/MeanShiftCanopyDriver/createCanopyFromVectors(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/commons/cli2/builder/DefaultOptionBuilder/DefaultOptionBuilder()|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/convergenceOption()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+constructor:///org/apache/mahout/clustering/meanshift/MeanShiftCanopyDriver/MeanShiftCanopyDriver()|",
      "|java+method:///org/apache/hadoop/util/ToolRunner/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.util.Tool,java.lang.String%5B%5D)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+constructor:///org/apache/mahout/cf/taste/hadoop/pseudo/RecommenderReducer/RecommenderReducer()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|",
    "v1Body": [
      "|java+constructor:///org/apache/hadoop/mapred/MapReduceBase/MapReduceBase()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/df/tools/FrequenciesJob$FrequenciesMapper/map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+constructor:///org/apache/hadoop/io/LongWritable/LongWritable(long)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable(int)|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+method:///org/apache/hadoop/io/LongWritable/get()|",
      "|java+method:///org/apache/mahout/df/data/DataConverter/convert(int,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/LongWritable/LongWritable(long)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable(int)|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+method:///org/apache/hadoop/io/LongWritable/get()|",
      "|java+constructor:///org/apache/hadoop/io/LongWritable/LongWritable(long)|",
      "|java+method:///org/apache/mahout/df/data/DataConverter/convert(int,java.lang.String)|",
      "|java+method:///org/apache/mahout/df/data/Instance/getLabel()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/readFrequentPattern(org.apache.mahout.common.Parameters)|",
    "called": "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPGrowth/readFrequentPattern(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPGrowth/readFrequentPattern(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+constructor:///org/apache/mahout/cf/taste/hadoop/item/ToUserVectorReducer/ToUserVectorReducer()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|",
    "v1Body": [
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable()|",
      "|java+constructor:///org/apache/hadoop/mapred/MapReduceBase/MapReduceBase()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/clustering/kmeans/KMeansDriver/main(java.lang.String%5B%5D)|",
    "called": "|java+method:///org/apache/hadoop/util/ToolRunner/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.util.Tool,java.lang.String%5B%5D)|",
    "v1Body": [
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withName(java.lang.String)|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withLongName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/create()|",
      "|java+constructor:///org/apache/commons/cli2/builder/ArgumentBuilder/ArgumentBuilder()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/HadoopUtil/overwriteOutput(java.lang.String)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMaximum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withRequired(boolean)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelp(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansDriver/runJob(java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,int,int)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMinimum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withArgument(org.apache.commons.cli2.Argument)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/RandomSeedGenerator/buildRandom(java.lang.String,java.lang.String,int)|",
      "|java+constructor:///org/apache/commons/cli2/builder/DefaultOptionBuilder/DefaultOptionBuilder()|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+constructor:///org/apache/mahout/clustering/kmeans/KMeansDriver/KMeansDriver()|",
      "|java+method:///org/apache/hadoop/util/ToolRunner/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.util.Tool,java.lang.String%5B%5D)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/df/mapreduce/partial/Step0Job/parseOutput(org.apache.hadoop.mapreduce.JobContext)|",
    "called": "|java+method:///org/apache/hadoop/conf/Configuration/getInt(java.lang.String,int)|",
    "v1Body": [
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Reader/SequenceFile$Reader(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/mahout/df/mapreduce/partial/Step0Job$Step0Output/Step0Job$Step0Output(long,int)|",
      "|java+method:///org/apache/mahout/df/mapreduce/partial/Step0Job$Step0Output/clone()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getInt(java.lang.String,int)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/next(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/mahout/df/DFUtils/listOutputFiles(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/hadoop/mapreduce/JobContext/getConfiguration()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/close()|",
      "|java+method:///org/apache/mahout/df/mapreduce/partial/Step0Job/processOutput(java.util.List,java.util.List)|",
      "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable()|",
      "|java+method:///org/apache/hadoop/io/IntWritable/get()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/logsCRCFilter()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirIterable/iterator()|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getInt(java.lang.String,int)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirIterable/SequenceFileDirIterable(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/hadoop/mapreduce/JobContext/getConfiguration()|",
      "|java+method:///org/apache/mahout/df/mapreduce/partial/Step0Job/processOutput(java.util.List,java.util.List)|",
      "|java+method:///org/apache/hadoop/io/IntWritable/get()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/common/JobExecutor/execute(java.lang.String%5B%5D,org.apache.mahout.classifier.bayes.mapreduce.common.BayesJob)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/commons/cli2/OptionException/getMessage()|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelp(org.apache.commons.cli2.Group)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/helpOption()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/outputOption()|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/inputOption()|",
      "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesJob/runJob(java.lang.String,java.lang.String,org.apache.mahout.classifier.bayes.common.BayesParameters)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/common/BayesParameters/BayesParameters(int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/cli2/OptionException/getMessage()|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/common/BayesParameters/BayesParameters()|",
      "|java+method:///org/apache/mahout/classifier/bayes/common/BayesParameters/setGramSize(int)|",
      "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesJob/runJob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.mahout.classifier.bayes.common.BayesParameters)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelp(org.apache.commons.cli2.Group)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/helpOption()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/outputOption()|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/inputOption()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/TimesSquaredJob/createTimesSquaredJobConf(org.apache.mahout.math.Vector,int,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
    "called": "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapred/JobConf/setOutputKeyClass(java.lang.Class)|",
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///java/net/URI/toString()|",
      "|java+method:///org/apache/hadoop/mapred/FileOutputFormat/setOutputPath(org.apache.hadoop.mapred.JobConf,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setCombinerClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setMapOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setInputFormat(java.lang.Class)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(char)|",
      "|java+method:///org/apache/hadoop/mapred/FileInputFormat/addInputPath(org.apache.hadoop.mapred.JobConf,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/math/Vector/getName()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/deleteOnExit(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setMapOutputKeyClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setOutputFormat(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/close()|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setReducerClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/filecache/DistributedCache/setCacheFiles(java.net.URI%5B%5D,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setJobName(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setBoolean(java.lang.String,boolean)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setInt(java.lang.String,int)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setMapperClass(java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/makeQualified(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/io/NullWritable/get()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/mahout/math/hadoop/TimesSquaredJob/createTimesSquaredJobConf(org.apache.hadoop.conf.Configuration,org.apache.mahout.math.Vector,int,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/main(java.lang.String%5B%5D)|",
    "called": "|java+method:///org/apache/hadoop/util/ToolRunner/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.util.Tool,java.lang.String%5B%5D)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/util/ToolRunner/run(org.apache.hadoop.util.Tool,java.lang.String%5B%5D)|",
      "|java+constructor:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/RecommenderJob()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+constructor:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/RecommenderJob()|",
      "|java+method:///org/apache/hadoop/util/ToolRunner/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.util.Tool,java.lang.String%5B%5D)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/AggregatorMapper/map(org.apache.hadoop.io.Text,org.apache.mahout.fpm.pfpgrowth.convertors.string.TopKStringPatterns,org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/setStatus(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/convertors/string/TopKStringPatterns/TopKStringPatterns(java.util.List)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/convertors/string/TopKStringPatterns/getPatterns()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/setStatus(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/convertors/string/TopKStringPatterns/TopKStringPatterns(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/convertors/string/TopKStringPatterns/getPatterns()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+constructor:///org/apache/mahout/clustering/canopy/ClusterMapper/ClusterMapper()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapred/MapReduceBase/MapReduceBase()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/TimesSquaredJob/createTimesSquaredJobConf(org.apache.mahout.math.Vector,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
    "called": "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/hadoop/TimesSquaredJob/createTimesSquaredJobConf(org.apache.mahout.math.Vector,int,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/mahout/math/Vector/size()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/mahout/math/hadoop/TimesSquaredJob/createTimesSquaredJobConf(org.apache.hadoop.conf.Configuration,org.apache.mahout.math.Vector,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver/main(java.lang.String%5B%5D)|",
    "called": "|java+method:///org/apache/hadoop/util/ToolRunner/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.util.Tool,java.lang.String%5B%5D)|",
    "v1Body": [
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver/runJob(java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,int,int,int,float)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withName(java.lang.String)|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withLongName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/create()|",
      "|java+constructor:///org/apache/commons/cli2/builder/ArgumentBuilder/ArgumentBuilder()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/HadoopUtil/overwriteOutput(java.lang.String)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///java/lang/Float/parseFloat(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver/runClustering(java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,int,float)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMaximum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withRequired(boolean)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelp(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMinimum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withArgument(org.apache.commons.cli2.Argument)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/RandomSeedGenerator/buildRandom(java.lang.String,java.lang.String,int)|",
      "|java+constructor:///org/apache/commons/cli2/builder/DefaultOptionBuilder/DefaultOptionBuilder()|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+constructor:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver/FuzzyKMeansDriver()|",
      "|java+method:///org/apache/hadoop/util/ToolRunner/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.util.Tool,java.lang.String%5B%5D)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/startTransactionSorting(org.apache.mahout.common.Parameters)|",
    "called": "|java+method:///org/apache/hadoop/mapreduce/Job/setInputFormatClass(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapOutputKeyClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/waitForCompletion(boolean)|",
      "|java+method:///org/apache/mahout/common/Parameters/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setReducerClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapOutputValueClass(java.lang.Class)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputFormatClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapperClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setInputFormatClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setJarByClass(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Job/Job(org.apache.hadoop.conf.Configuration,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/FileOutputFormat/setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/delete(org.apache.hadoop.fs.Path,boolean)|",
      "|java+method:///org/apache/mahout/common/Parameters/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputKeyClass(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/input/FileInputFormat/addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapOutputKeyClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/waitForCompletion(boolean)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setReducerClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setJarByClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapOutputValueClass(java.lang.Class)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputFormatClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/Parameters/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapperClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/HadoopUtil/delete(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setInputFormatClass(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Parameters/toString()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Job/Job(org.apache.hadoop.conf.Configuration,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/FileOutputFormat/setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputKeyClass(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/input/FileInputFormat/addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/df/tools/FrequenciesJob/run(org.apache.hadoop.conf.Configuration)|",
    "called": "|java+method:///org/apache/hadoop/mapreduce/Job/setInputFormatClass(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapOutputKeyClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setReducerClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapOutputValueClass(java.lang.Class)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/delete(org.apache.hadoop.fs.Path,boolean)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputKeyClass(java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapperClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setInputFormatClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/waitForCompletion(boolean)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Job/Job(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/filecache/DistributedCache/setCacheFiles(java.net.URI%5B%5D,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setJarByClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/df/tools/FrequenciesJob/parseOutput(org.apache.hadoop.mapreduce.JobContext)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/FileOutputFormat/setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputFormatClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/input/FileInputFormat/setInputPaths(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapOutputKeyClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setReducerClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapOutputValueClass(java.lang.Class)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputKeyClass(java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapperClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/HadoopUtil/delete(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setInputFormatClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/waitForCompletion(boolean)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Job/Job(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/filecache/DistributedCache/setCacheFiles(java.net.URI%5B%5D,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setJarByClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/df/tools/FrequenciesJob/parseOutput(org.apache.hadoop.mapreduce.JobContext)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/FileOutputFormat/setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputFormatClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/input/FileInputFormat/setInputPaths(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path%5B%5D)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+constructor:///org/apache/mahout/clustering/meanshift/MeanShiftCanopyMapper/MeanShiftCanopyMapper()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapred/MapReduceBase/MapReduceBase()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/ParallelFPGrowthReducer/setup(org.apache.hadoop.mapreduce.Reducer$Context)|",
    "called": "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/deserializeList(org.apache.mahout.common.Parameters,java.lang.String,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/Integer/toString(int)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPTreeDepthCache/setFirstLevelCacheSize(int)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPTreeDepthCache/getFirstLevelCacheSize()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer/setup(org.apache.hadoop.mapreduce.Reducer$Context)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/deserializeMap(org.apache.mahout.common.Parameters,java.lang.String,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/put(java.lang.Object,int)|",
      "|java+constructor:///org/apache/mahout/math/list/IntArrayList/IntArrayList()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/apache/mahout/common/Parameters/fromString(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/get(java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/map/OpenLongObjectHashMap/get(long)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/getConfiguration()|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/apache/mahout/math/list/IntArrayList/add(int)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/mahout/math/map/OpenLongObjectHashMap/put(long,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/deserializeList(org.apache.mahout.common.Parameters,java.lang.String,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer/setup(org.apache.hadoop.mapreduce.Reducer$Context)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/deserializeMap(org.apache.mahout.common.Parameters,java.lang.String,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/mahout/common/Parameters/Parameters(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/put(java.lang.Object,int)|",
      "|java+constructor:///org/apache/mahout/math/list/IntArrayList/IntArrayList()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/get(java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/map/OpenLongObjectHashMap/get(long)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/getConfiguration()|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/apache/mahout/math/list/IntArrayList/add(int)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/mahout/math/map/OpenLongObjectHashMap/put(long,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+constructor:///org/apache/mahout/cf/taste/hadoop/slopeone/SlopeOneDiffsToAveragesReducer/SlopeOneDiffsToAveragesReducer()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|",
    "v1Body": [
      "|java+constructor:///org/apache/hadoop/mapred/MapReduceBase/MapReduceBase()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+constructor:///org/apache/mahout/clustering/dirichlet/DirichletReducer/DirichletReducer()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|",
    "v1Body": [
      "|java+constructor:///org/apache/hadoop/mapred/MapReduceBase/MapReduceBase()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/df/mapreduce/Builder/setNbTrees(org.apache.hadoop.conf.Configuration,int)|",
    "called": "|java+method:///org/apache/hadoop/conf/Configuration/setInt(java.lang.String,int)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/conf/Configuration/setInt(java.lang.String,int)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/conf/Configuration/setInt(java.lang.String,int)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/clustering/lda/LDAReducer/reduce(org.apache.mahout.common.IntPairWritable,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)|",
    "called": "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable(double)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/common/IntPairWritable/getFirst()|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAUtil/logSum(double,double)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/io/DoubleWritable/get()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable(double)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Double/isNaN(double)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/IntPairWritable/getSecond()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/common/IntPairWritable/getFirst()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/io/DoubleWritable/get()|",
      "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable(double)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///org/apache/mahout/common/IntPairWritable/getSecond()|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAUtil/logSum(double,double)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Double/isNaN(double)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/write(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+constructor:///org/apache/mahout/clustering/kmeans/KMeansReducer/KMeansReducer()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|",
    "v1Body": [
      "|java+constructor:///org/apache/hadoop/mapred/MapReduceBase/MapReduceBase()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/clustering/dirichlet/DirichletDriver/main(java.lang.String%5B%5D)|",
    "called": "|java+method:///org/apache/hadoop/util/ToolRunner/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.util.Tool,java.lang.String%5B%5D)|",
    "v1Body": [
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/maxIterOption()|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/dirichlet/DirichletDriver/runJob(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,double,int)|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelp(org.apache.commons.cli2.Group)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withLongName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/create()|",
      "|java+constructor:///org/apache/commons/cli2/builder/ArgumentBuilder/ArgumentBuilder()|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMaximum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withRequired(boolean)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/helpOption()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/outputOption()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/inputOption()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/kOption()|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMinimum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withArgument(org.apache.commons.cli2.Argument)|",
      "|java+constructor:///org/apache/commons/cli2/builder/DefaultOptionBuilder/DefaultOptionBuilder()|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+constructor:///org/apache/mahout/clustering/dirichlet/DirichletDriver/DirichletDriver()|",
      "|java+method:///org/apache/hadoop/util/ToolRunner/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.util.Tool,java.lang.String%5B%5D)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/TimesSquaredJob/createTimesJobConf(org.apache.mahout.math.Vector,int,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
    "called": "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/hadoop/TimesSquaredJob/createTimesSquaredJobConf(org.apache.mahout.math.Vector,int,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/mahout/math/hadoop/TimesSquaredJob/createTimesJobConf(org.apache.hadoop.conf.Configuration,org.apache.mahout.math.Vector,int,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/ParallelCountingMapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///java/util/regex/Pattern/compile(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/toString()|",
      "|java+method:///org/apache/mahout/common/Parameters/fromString(java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|"
    ],
    "v2Body": [
      "|java+method:///java/util/regex/Pattern/compile(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/common/Parameters/Parameters(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/toString()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/TransactionTree/write(java.io.DataOutput)|",
    "called": "|java+constructor:///org/apache/hadoop/io/VIntWritable/VIntWritable()|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/io/VLongWritable/write(java.io.DataOutput)|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/io/DataOutput/writeBoolean(boolean)|",
      "|java+method:///org/apache/hadoop/io/VIntWritable/write(java.io.DataOutput)|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/apache/hadoop/io/VIntWritable/set(int)|",
      "|java+constructor:///org/apache/hadoop/io/VLongWritable/VLongWritable()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/hadoop/io/VLongWritable/set(long)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///org/apache/hadoop/io/VIntWritable/VIntWritable()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/io/VLongWritable/write(java.io.DataOutput)|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/io/DataOutput/writeBoolean(boolean)|",
      "|java+method:///org/apache/hadoop/io/VIntWritable/write(java.io.DataOutput)|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|",
      "|java+method:///org/apache/hadoop/io/VIntWritable/set(int)|",
      "|java+constructor:///org/apache/hadoop/io/VLongWritable/VLongWritable()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/hadoop/io/VLongWritable/set(long)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///org/apache/hadoop/io/VIntWritable/VIntWritable()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/df/mapreduce/partial/PartialBuilder/processOutput(org.apache.hadoop.mapreduce.JobContext,org.apache.hadoop.fs.Path,int%5B%5D,org.apache.mahout.df.mapreduce.partial.TreeID%5B%5D,org.apache.mahout.df.node.Node%5B%5D,org.apache.mahout.df.callback.PredictionCallback)|",
    "called": "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Reader/SequenceFile$Reader(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/mahout/df/mapreduce/partial/TreeID/TreeID()|",
      "|java+method:///org/apache/mahout/df/mapreduce/partial/TreeID/clone()|",
      "|java+method:///org/apache/mahout/df/mapreduce/partial/PartialBuilder/processOutput(int%5B%5D,org.apache.mahout.df.mapreduce.partial.TreeID,org.apache.mahout.df.mapreduce.MapredOutput,org.apache.mahout.df.callback.PredictionCallback)|",
      "|java+method:///org/apache/mahout/df/mapreduce/MapredOutput/getTree()|",
      "|java+constructor:///org/apache/mahout/df/mapreduce/MapredOutput/MapredOutput()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/next(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/df/DFUtils/listOutputFiles(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/mapreduce/JobContext/getConfiguration()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/close()|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/df/mapreduce/partial/PartialBuilder/processOutput(int%5B%5D,org.apache.mahout.df.mapreduce.partial.TreeID,org.apache.mahout.df.mapreduce.MapredOutput,org.apache.mahout.df.callback.PredictionCallback)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|",
      "|java+method:///org/apache/hadoop/mapreduce/JobContext/getConfiguration()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileIterable/SequenceFileIterable(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/df/DFUtils/listOutputFiles(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/df/mapreduce/MapredOutput/getTree()|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileIterable/iterator()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/cbayes/CBayesThetaNormalizerReducer/reduce(org.apache.mahout.common.StringTuple,java.util.Iterator,org.apache.hadoop.mapred.OutputCollector,org.apache.hadoop.mapred.Reporter)|",
    "called": "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable(double)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapred/Reporter/setStatus(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/io/DoubleWritable/get()|",
      "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable(double)|",
      "|java+constructor:///org/apache/hadoop/hbase/client/Put/Put(byte%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/hbase/client/Put/add(byte%5B%5D,byte%5B%5D,byte%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(double)|",
      "|java+method:///org/apache/hadoop/hbase/util/Bytes/toBytes(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/client/HTable/put(org.apache.hadoop.hbase.client.Put)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/hbase/util/Bytes/toBytes(double)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/StringTuple/stringAt(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/mapred/Reporter/setStatus(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/io/DoubleWritable/get()|",
      "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable(double)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(double)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/df/mapreduce/partial/Step2Mapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+method:///org/apache/hadoop/filecache/DistributedCache/getCacheFiles(org.apache.hadoop.conf.Configuration)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/df/mapreduce/Builder/getNbTrees(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///org/apache/commons/lang/ArrayUtils/toString(java.lang.Object)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/load(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/net/URI/getPath()|",
      "|java+method:///org/apache/hadoop/filecache/DistributedCache/getCacheFiles(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/df/mapreduce/Builder/getNumMaps(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/apache/mahout/df/mapreduce/partial/Step2Mapper/configure(int,org.apache.mahout.df.data.Dataset,org.apache.mahout.df.mapreduce.partial.TreeID%5B%5D,org.apache.mahout.df.node.Node%5B%5D,int)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getInt(java.lang.String,int)|",
      "|java+method:///org/apache/mahout/df/mapreduce/partial/InterResults/load(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,int,int,int,org.apache.mahout.df.mapreduce.partial.TreeID%5B%5D,org.apache.mahout.df.node.Node%5B%5D)|",
      "|java+method:///org/apache/mahout/df/mapreduce/partial/Step2Mapper/nbConcerned(int,int,int)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///org/apache/mahout/df/mapreduce/Builder/getNbTrees(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/mahout/df/mapreduce/partial/Step2Mapper/configure(int,org.apache.mahout.df.data.Dataset,org.apache.mahout.df.mapreduce.partial.TreeID%5B%5D,org.apache.mahout.df.node.Node%5B%5D,int)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///org/apache/commons/lang/ArrayUtils/toString(java.lang.Object)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/load(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/net/URI/getPath()|",
      "|java+method:///org/apache/hadoop/filecache/DistributedCache/getCacheFiles(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/df/mapreduce/Builder/getNumMaps(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getInt(java.lang.String,int)|",
      "|java+method:///org/apache/mahout/df/mapreduce/partial/InterResults/load(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,int,int,int,org.apache.mahout.df.mapreduce.partial.TreeID%5B%5D,org.apache.mahout.df.node.Node%5B%5D)|",
      "|java+method:///org/apache/mahout/df/mapreduce/partial/Step2Mapper/nbConcerned(int,int,int)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+constructor:///org/apache/mahout/cf/taste/impl/model/jdbc/ConnectionPoolDataSource/ConnectionPoolDataSource(javax.sql.DataSource)|",
    "called": "|java+method:///org/apache/commons/pool/impl/GenericObjectPool/setTimeBetweenEvictionRunsMillis(long)|",
    "v1Body": [
      "|java+constructor:///org/apache/commons/dbcp/PoolableConnectionFactory/PoolableConnectionFactory(org.apache.commons.dbcp.ConnectionFactory,org.apache.commons.pool.ObjectPool,org.apache.commons.pool.KeyedObjectPoolFactory,java.lang.String,boolean,boolean)|",
      "|java+method:///org/apache/commons/pool/impl/GenericObjectPool/setTestOnReturn(boolean)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/apache/commons/pool/impl/GenericObjectPool/setTestWhileIdle(boolean)|",
      "|java+method:///org/apache/commons/pool/impl/GenericObjectPool/setTimeBetweenEvictionRunsMillis(long)|",
      "|java+constructor:///org/apache/commons/pool/impl/GenericObjectPool/GenericObjectPool()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/apache/commons/pool/impl/GenericObjectPool/setFactory(org.apache.commons.pool.PoolableObjectFactory)|",
      "|java+constructor:///org/apache/mahout/cf/taste/impl/model/jdbc/ConnectionPoolDataSource$ConfiguringConnectionFactory/ConnectionPoolDataSource$ConfiguringConnectionFactory(javax.sql.DataSource)|",
      "|java+method:///org/apache/commons/pool/impl/GenericObjectPool/setTestOnBorrow(boolean)|",
      "|java+constructor:///org/apache/commons/dbcp/PoolingDataSource/PoolingDataSource(org.apache.commons.pool.ObjectPool)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/commons/dbcp/PoolableConnectionFactory/PoolableConnectionFactory(org.apache.commons.dbcp.ConnectionFactory,org.apache.commons.pool.ObjectPool,org.apache.commons.pool.KeyedObjectPoolFactory,java.lang.String,boolean,boolean)|",
      "|java+method:///org/apache/commons/pool/impl/GenericObjectPool/setTestOnReturn(boolean)|",
      "|java+method:///org/apache/commons/pool/impl/GenericObjectPool/setTestWhileIdle(boolean)|",
      "|java+method:///org/apache/commons/pool/impl/GenericObjectPool/setTimeBetweenEvictionRunsMillis(long)|",
      "|java+constructor:///org/apache/commons/pool/impl/GenericObjectPool/GenericObjectPool()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/apache/commons/pool/impl/GenericObjectPool/setFactory(org.apache.commons.pool.PoolableObjectFactory)|",
      "|java+constructor:///org/apache/mahout/cf/taste/impl/model/jdbc/ConnectionPoolDataSource$ConfiguringConnectionFactory/ConnectionPoolDataSource$ConfiguringConnectionFactory(javax.sql.DataSource)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///org/apache/commons/pool/impl/GenericObjectPool/setTestOnBorrow(boolean)|",
      "|java+constructor:///org/apache/commons/dbcp/PoolingDataSource/PoolingDataSource(org.apache.commons.pool.ObjectPool)|"
    ],
    "affectedLib": "commons-pool:commons-pool:1.4",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper/map(org.apache.hadoop.io.Text,org.apache.hadoop.io.Text,org.apache.hadoop.mapred.OutputCollector,org.apache.hadoop.mapred.Reporter)|",
    "called": "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/incrementToken()|",
    "v1Body": [
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$1/BayesFeatureMapper$1(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,org.apache.commons.lang.mutable.MutableDouble)|",
      "|java+method:///org/apache/lucene/analysis/tokenattributes/TermAttribute/term()|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/forEachKey(org.apache.mahout.math.function.ObjectProcedure)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/getAttribute(java.lang.Class)|",
      "|java+method:///java/lang/String/length()|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$2/BayesFeatureMapper$2(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,java.lang.String,double,org.apache.hadoop.mapred.OutputCollector)|",
      "|java+constructor:///org/apache/mahout/math/map/OpenObjectIntHashMap/OpenObjectIntHashMap(int)|",
      "|java+constructor:///org/apache/mahout/common/iterator/ArrayIterator/ArrayIterator(java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/commons/lang/mutable/MutableDouble/doubleValue()|",
      "|java+method:///org/apache/mahout/common/StringTuple/add(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/common/StringTuple/StringTuple()|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/incrementToken()|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/Math/sqrt(double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/forEachPair(org.apache.mahout.math.function.ObjectIntProcedure)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$IteratorTokenStream/BayesFeatureMapper$IteratorTokenStream(java.util.Iterator)|",
      "|java+method:///org/apache/hadoop/mapred/Reporter/setStatus(java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/split(java.lang.CharSequence)|",
      "|java+constructor:///org/apache/commons/lang/mutable/MutableDouble/MutableDouble(double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/put(java.lang.Object,int)|",
      "|java+constructor:///org/apache/lucene/analysis/shingle/ShingleFilter/ShingleFilter(org.apache.lucene.analysis.TokenStream,int)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/get(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$3/BayesFeatureMapper$3(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,java.lang.String,org.apache.hadoop.mapred.OutputCollector)|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Iterators/forArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$1/BayesFeatureMapper$1(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,org.apache.commons.lang.mutable.MutableDouble)|",
      "|java+method:///org/apache/lucene/analysis/tokenattributes/TermAttribute/term()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/getAttribute(java.lang.Class)|",
      "|java+method:///java/lang/String/length()|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$2/BayesFeatureMapper$2(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,java.lang.String,double,org.apache.hadoop.mapred.OutputCollector)|",
      "|java+constructor:///org/apache/mahout/math/map/OpenObjectIntHashMap/OpenObjectIntHashMap(int)|",
      "|java+method:///org/apache/commons/lang/mutable/MutableDouble/doubleValue()|",
      "|java+method:///org/apache/mahout/common/StringTuple/add(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/common/StringTuple/StringTuple()|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/incrementToken()|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/Math/sqrt(double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/forEachPair(org.apache.mahout.math.function.ObjectIntProcedure)|",
      "|java+method:///org/apache/hadoop/mapred/Reporter/setStatus(java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/split(java.lang.CharSequence)|",
      "|java+constructor:///org/apache/commons/lang/mutable/MutableDouble/MutableDouble(double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/put(java.lang.Object,int)|",
      "|java+constructor:///org/apache/lucene/analysis/shingle/ShingleFilter/ShingleFilter(org.apache.lucene.analysis.TokenStream,int)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/get(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/mahout/common/lucene/IteratorTokenStream/IteratorTokenStream(java.util.Iterator)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$3/BayesFeatureMapper$3(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,java.lang.String,org.apache.hadoop.mapred.OutputCollector)|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.lucene:lucene-analyzers:3.1.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+constructor:///org/apache/mahout/cf/taste/impl/model/jdbc/ConnectionPoolDataSource/ConnectionPoolDataSource(javax.sql.DataSource)|",
    "called": "|java+constructor:///org/apache/commons/dbcp/PoolableConnectionFactory/PoolableConnectionFactory(org.apache.commons.dbcp.ConnectionFactory,org.apache.commons.pool.ObjectPool,org.apache.commons.pool.KeyedObjectPoolFactory,java.lang.String,boolean,boolean)|",
    "v1Body": [
      "|java+constructor:///org/apache/commons/dbcp/PoolableConnectionFactory/PoolableConnectionFactory(org.apache.commons.dbcp.ConnectionFactory,org.apache.commons.pool.ObjectPool,org.apache.commons.pool.KeyedObjectPoolFactory,java.lang.String,boolean,boolean)|",
      "|java+method:///org/apache/commons/pool/impl/GenericObjectPool/setTestOnReturn(boolean)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/apache/commons/pool/impl/GenericObjectPool/setTestWhileIdle(boolean)|",
      "|java+method:///org/apache/commons/pool/impl/GenericObjectPool/setTimeBetweenEvictionRunsMillis(long)|",
      "|java+constructor:///org/apache/commons/pool/impl/GenericObjectPool/GenericObjectPool()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/apache/commons/pool/impl/GenericObjectPool/setFactory(org.apache.commons.pool.PoolableObjectFactory)|",
      "|java+constructor:///org/apache/mahout/cf/taste/impl/model/jdbc/ConnectionPoolDataSource$ConfiguringConnectionFactory/ConnectionPoolDataSource$ConfiguringConnectionFactory(javax.sql.DataSource)|",
      "|java+method:///org/apache/commons/pool/impl/GenericObjectPool/setTestOnBorrow(boolean)|",
      "|java+constructor:///org/apache/commons/dbcp/PoolingDataSource/PoolingDataSource(org.apache.commons.pool.ObjectPool)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/commons/dbcp/PoolableConnectionFactory/PoolableConnectionFactory(org.apache.commons.dbcp.ConnectionFactory,org.apache.commons.pool.ObjectPool,org.apache.commons.pool.KeyedObjectPoolFactory,java.lang.String,boolean,boolean)|",
      "|java+method:///org/apache/commons/pool/impl/GenericObjectPool/setTestOnReturn(boolean)|",
      "|java+method:///org/apache/commons/pool/impl/GenericObjectPool/setTestWhileIdle(boolean)|",
      "|java+method:///org/apache/commons/pool/impl/GenericObjectPool/setTimeBetweenEvictionRunsMillis(long)|",
      "|java+constructor:///org/apache/commons/pool/impl/GenericObjectPool/GenericObjectPool()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/apache/commons/pool/impl/GenericObjectPool/setFactory(org.apache.commons.pool.PoolableObjectFactory)|",
      "|java+constructor:///org/apache/mahout/cf/taste/impl/model/jdbc/ConnectionPoolDataSource$ConfiguringConnectionFactory/ConnectionPoolDataSource$ConfiguringConnectionFactory(javax.sql.DataSource)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///org/apache/commons/pool/impl/GenericObjectPool/setTestOnBorrow(boolean)|",
      "|java+constructor:///org/apache/commons/dbcp/PoolingDataSource/PoolingDataSource(org.apache.commons.pool.ObjectPool)|"
    ],
    "affectedLib": "commons-dbcp:commons-dbcp:1.2.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/convergenceOption()|",
    "called": "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMaximum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withRequired(boolean)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withLongName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/create()|",
      "|java+constructor:///org/apache/commons/cli2/builder/ArgumentBuilder/ArgumentBuilder()|",
      "|java+constructor:///org/apache/commons/cli2/builder/DefaultOptionBuilder/DefaultOptionBuilder()|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMinimum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withArgument(org.apache.commons.cli2.Argument)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMaximum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withRequired(boolean)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withLongName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/create()|",
      "|java+constructor:///org/apache/commons/cli2/builder/ArgumentBuilder/ArgumentBuilder()|",
      "|java+constructor:///org/apache/commons/cli2/builder/DefaultOptionBuilder/DefaultOptionBuilder()|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withDefault(java.lang.Object)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMinimum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withArgument(org.apache.commons.cli2.Argument)|"
    ],
    "affectedLib": "org.apache.mahout.commons:commons-cli:2.0-mahout",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/handleArgs(java.lang.String%5B%5D)|",
    "called": "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
    "v1Body": [
      "|java+method:///org/apache/commons/cli2/OptionException/getMessage()|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/buildOption(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/buildOption(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelp(org.apache.commons.cli2.Group)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/maybePut(java.util.Map,org.apache.commons.cli2.CommandLine,org.apache.commons.cli2.Option%5B%5D)|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/helpOption()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/outputOption()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/addOption(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/parseArguments(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/addOutputOption()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/addOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/addOption(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/helpOption()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/outputOption()|"
    ],
    "affectedLib": "org.apache.mahout.commons:commons-cli:2.0-mahout",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/common/JobExecutor/execute(java.lang.String%5B%5D,org.apache.mahout.classifier.bayes.mapreduce.common.BayesJob)|",
    "called": "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
    "v1Body": [
      "|java+method:///org/apache/commons/cli2/OptionException/getMessage()|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelp(org.apache.commons.cli2.Group)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/helpOption()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/outputOption()|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/inputOption()|",
      "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesJob/runJob(java.lang.String,java.lang.String,org.apache.mahout.classifier.bayes.common.BayesParameters)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/common/BayesParameters/BayesParameters(int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/cli2/OptionException/getMessage()|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/common/BayesParameters/BayesParameters()|",
      "|java+method:///org/apache/mahout/classifier/bayes/common/BayesParameters/setGramSize(int)|",
      "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesJob/runJob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.mahout.classifier.bayes.common.BayesParameters)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelp(org.apache.commons.cli2.Group)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/helpOption()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/outputOption()|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/inputOption()|"
    ],
    "affectedLib": "org.apache.mahout.commons:commons-cli:2.0-mahout",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/classifier/Classify/main(java.lang.String%5B%5D)|",
    "called": "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/datastore/InMemoryBayesDatastore/InMemoryBayesDatastore(org.apache.mahout.common.Parameters)|",
      "|java+method:///org/apache/mahout/classifier/bayes/model/ClassifierContext/initialize()|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withName(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/datastore/HBaseBayesDatastore/HBaseBayesDatastore(java.lang.String,org.apache.mahout.common.Parameters)|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///java/lang/Class/asSubclass(java.lang.Class)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/apache/mahout/classifier/BayesFileFormatter/readerToDocument(org.apache.lucene.analysis.Analyzer,java.io.Reader)|",
      "|java+method:///org/apache/mahout/classifier/bayes/model/ClassifierContext/classifyDocument(java.lang.String%5B%5D,java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMaximum(int)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/model/ClassifierContext/ClassifierContext(org.apache.mahout.classifier.bayes.interfaces.Algorithm,org.apache.mahout.classifier.bayes.interfaces.Datastore)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/mahout/common/nlp/NGrams/NGrams(java.lang.String,int)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withRequired(boolean)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/nlp/NGrams/generateNGramsWithoutLabel()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+constructor:///java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.nio.charset.Charset)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/algorithm/CBayesAlgorithm/CBayesAlgorithm()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(char)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMinimum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withArgument(org.apache.commons.cli2.Argument)|",
      "|java+constructor:///org/apache/lucene/analysis/standard/StandardAnalyzer/StandardAnalyzer(org.apache.lucene.util.Version)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withLongName(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/algorithm/BayesAlgorithm/BayesAlgorithm()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/create()|",
      "|java+method:///java/nio/charset/Charset/forName(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/common/BayesParameters/BayesParameters(int)|",
      "|java+constructor:///java/io/FileInputStream/FileInputStream(java.io.File)|",
      "|java+constructor:///org/apache/commons/cli2/builder/ArgumentBuilder/ArgumentBuilder()|",
      "|java+method:///org/apache/mahout/classifier/bayes/common/BayesParameters/print()|",
      "|java+constructor:///org/apache/commons/cli2/builder/DefaultOptionBuilder/DefaultOptionBuilder()|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/classifier/bayes/model/ClassifierContext/initialize()|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/common/BayesParameters/BayesParameters()|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/mahout/classifier/bayes/common/BayesParameters/setGramSize(int)|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///java/lang/Class/asSubclass(java.lang.Class)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+constructor:///org/apache/commons/cli2/builder/ArgumentBuilder/ArgumentBuilder()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/apache/mahout/classifier/BayesFileFormatter/readerToDocument(org.apache.lucene.analysis.Analyzer,java.io.Reader)|",
      "|java+method:///org/apache/mahout/classifier/bayes/common/BayesParameters/setBasePath(java.lang.String)|",
      "|java+method:///org/apache/mahout/classifier/bayes/model/ClassifierContext/classifyDocument(java.lang.String%5B%5D,java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMaximum(int)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/model/ClassifierContext/ClassifierContext(org.apache.mahout.classifier.bayes.interfaces.Algorithm,org.apache.mahout.classifier.bayes.interfaces.Datastore)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/mahout/common/nlp/NGrams/NGrams(java.lang.String,int)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withRequired(boolean)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/nlp/NGrams/generateNGramsWithoutLabel()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/datastore/InMemoryBayesDatastore/InMemoryBayesDatastore(org.apache.mahout.classifier.bayes.common.BayesParameters)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/algorithm/CBayesAlgorithm/CBayesAlgorithm()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///com/google/common/io/Files/newReader(java.io.File,java.nio.charset.Charset)|",
      "|java+method:///java/lang/StringBuilder/append(char)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMinimum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withArgument(org.apache.commons.cli2.Argument)|",
      "|java+constructor:///org/apache/lucene/analysis/standard/StandardAnalyzer/StandardAnalyzer(org.apache.lucene.util.Version)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withLongName(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/algorithm/BayesAlgorithm/BayesAlgorithm()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/create()|",
      "|java+method:///java/nio/charset/Charset/forName(java.lang.String)|",
      "|java+method:///org/apache/mahout/classifier/bayes/common/BayesParameters/print()|",
      "|java+constructor:///org/apache/commons/cli2/builder/DefaultOptionBuilder/DefaultOptionBuilder()|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|"
    ],
    "affectedLib": "org.apache.mahout.commons:commons-cli:2.0-mahout",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/classifier/bayes/TestClassifier/main(java.lang.String%5B%5D)|",
    "called": "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelp(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/helpOption()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withLongName(java.lang.String)|",
      "|java+constructor:///org/apache/commons/cli2/builder/ArgumentBuilder/ArgumentBuilder()|",
      "|java+method:///java/lang/Boolean/toString(boolean)|",
      "|java+method:///org/apache/mahout/classifier/bayes/TestClassifier/classifySequential(org.apache.mahout.classifier.bayes.common.BayesParameters)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMaximum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withRequired(boolean)|",
      "|java+method:///org/apache/mahout/classifier/bayes/common/BayesParameters/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/mahout/classifier/bayes/TestClassifier/classifyParallel(org.apache.mahout.classifier.bayes.common.BayesParameters)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMinimum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withArgument(org.apache.commons.cli2.Argument)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/create()|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/common/BayesParameters/BayesParameters(int)|",
      "|java+constructor:///org/apache/commons/cli2/builder/DefaultOptionBuilder/DefaultOptionBuilder()|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/classifier/bayes/common/BayesParameters/setBasePath(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/common/BayesParameters/BayesParameters()|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/mahout/classifier/bayes/common/BayesParameters/setGramSize(int)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelp(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/helpOption()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withLongName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/create()|",
      "|java+constructor:///org/apache/commons/cli2/builder/ArgumentBuilder/ArgumentBuilder()|",
      "|java+method:///java/lang/Boolean/toString(boolean)|",
      "|java+method:///org/apache/mahout/classifier/bayes/TestClassifier/classifySequential(org.apache.mahout.classifier.bayes.common.BayesParameters)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMaximum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withRequired(boolean)|",
      "|java+method:///org/apache/mahout/classifier/bayes/common/BayesParameters/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/mahout/classifier/bayes/TestClassifier/classifyParallel(org.apache.mahout.classifier.bayes.common.BayesParameters)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMinimum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withArgument(org.apache.commons.cli2.Argument)|",
      "|java+constructor:///org/apache/commons/cli2/builder/DefaultOptionBuilder/DefaultOptionBuilder()|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|"
    ],
    "affectedLib": "org.apache.mahout.commons:commons-cli:2.0-mahout",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/classifier/bayes/TrainClassifier/main(java.lang.String%5B%5D)|",
    "called": "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/mahout/classifier/bayes/TrainClassifier/trainCNaiveBayes(java.lang.String,java.lang.String,org.apache.mahout.classifier.bayes.common.BayesParameters)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/helpOption()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/mahout/classifier/bayes/TrainClassifier/trainNaiveBayes(java.lang.String,java.lang.String,org.apache.mahout.classifier.bayes.common.BayesParameters)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withLongName(java.lang.String)|",
      "|java+constructor:///org/apache/commons/cli2/builder/ArgumentBuilder/ArgumentBuilder()|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMaximum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withRequired(boolean)|",
      "|java+method:///org/apache/mahout/classifier/bayes/common/BayesParameters/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelp(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMinimum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withArgument(org.apache.commons.cli2.Argument)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/create()|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/common/BayesParameters/BayesParameters(int)|",
      "|java+constructor:///org/apache/commons/cli2/builder/DefaultOptionBuilder/DefaultOptionBuilder()|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/common/BayesParameters/BayesParameters()|",
      "|java+method:///org/apache/mahout/classifier/bayes/common/BayesParameters/setGramSize(int)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelp(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/helpOption()|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withLongName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/create()|",
      "|java+constructor:///org/apache/commons/cli2/builder/ArgumentBuilder/ArgumentBuilder()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
      "|java+method:///org/apache/mahout/classifier/bayes/common/BayesParameters/setMinDF(int)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMaximum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withRequired(boolean)|",
      "|java+method:///org/apache/mahout/classifier/bayes/common/BayesParameters/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/classifier/bayes/common/BayesParameters/setMinSupport(int)|",
      "|java+method:///org/apache/mahout/classifier/bayes/TrainClassifier/trainNaiveBayes(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.mahout.classifier.bayes.common.BayesParameters)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/mahout/classifier/bayes/common/BayesParameters/setSkipCleanup(boolean)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMinimum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withArgument(org.apache.commons.cli2.Argument)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setHelpOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+constructor:///org/apache/commons/cli2/builder/DefaultOptionBuilder/DefaultOptionBuilder()|",
      "|java+method:///org/apache/mahout/classifier/bayes/TrainClassifier/trainCNaiveBayes(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.mahout.classifier.bayes.common.BayesParameters)|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|"
    ],
    "affectedLib": "org.apache.mahout.commons:commons-cli:2.0-mahout",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/df/tools/Describe/main(java.lang.String%5B%5D)|",
    "called": "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/df/tools/Describe/runTool(java.lang.String,java.util.List,java.lang.String)|",
      "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelp(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withLongName(java.lang.String)|",
      "|java+constructor:///org/apache/commons/cli2/builder/ArgumentBuilder/ArgumentBuilder()|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMaximum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withRequired(boolean)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValues(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/df/tools/Describe/convert(java.util.List)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMinimum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withArgument(org.apache.commons.cli2.Argument)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/create()|",
      "|java+method:///org/apache/commons/cli2/OptionException/toString()|",
      "|java+constructor:///org/apache/commons/cli2/builder/DefaultOptionBuilder/DefaultOptionBuilder()|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelp(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/mahout/df/tools/Describe/runTool(java.lang.String,java.lang.Iterable,java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withLongName(java.lang.String)|",
      "|java+constructor:///org/apache/commons/cli2/builder/ArgumentBuilder/ArgumentBuilder()|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMaximum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withRequired(boolean)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///org/apache/mahout/df/tools/Describe/convert(java.util.Collection)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValues(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMinimum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withArgument(org.apache.commons.cli2.Argument)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/create()|",
      "|java+method:///org/apache/commons/cli2/OptionException/toString()|",
      "|java+constructor:///org/apache/commons/cli2/builder/DefaultOptionBuilder/DefaultOptionBuilder()|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|"
    ],
    "affectedLib": "org.apache.mahout.commons:commons-cli:2.0-mahout",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/FPGrowthDriver/main(java.lang.String%5B%5D)|",
    "called": "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelp(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withLongName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/create()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/HadoopUtil/overwriteOutput(java.lang.String)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/runPFPGrowth(org.apache.mahout.common.Parameters)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMaximum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withRequired(boolean)|",
      "|java+constructor:///org/apache/mahout/common/Parameters/Parameters()|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/helpOption()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/outputOption()|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMinimum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withArgument(org.apache.commons.cli2.Argument)|",
      "|java+constructor:///org/apache/commons/cli2/builder/ArgumentBuilder/ArgumentBuilder()|",
      "|java+method:///org/apache/mahout/common/Parameters/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/FPGrowthDriver/runFPGrowth(org.apache.mahout.common.Parameters)|",
      "|java+constructor:///org/apache/commons/cli2/builder/DefaultOptionBuilder/DefaultOptionBuilder()|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelp(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withLongName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/create()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/runPFPGrowth(org.apache.mahout.common.Parameters)|",
      "|java+method:///org/apache/mahout/common/HadoopUtil/delete(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMaximum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withRequired(boolean)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+constructor:///org/apache/mahout/common/Parameters/Parameters()|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/helpOption()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/outputOption()|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMinimum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withArgument(org.apache.commons.cli2.Argument)|",
      "|java+constructor:///org/apache/commons/cli2/builder/ArgumentBuilder/ArgumentBuilder()|",
      "|java+method:///org/apache/mahout/common/Parameters/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/FPGrowthDriver/runFPGrowth(org.apache.mahout.common.Parameters)|",
      "|java+constructor:///org/apache/commons/cli2/builder/DefaultOptionBuilder/DefaultOptionBuilder()|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|"
    ],
    "affectedLib": "org.apache.mahout.commons:commons-cli:2.0-mahout",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/classifier/Classify/main(java.lang.String%5B%5D)|",
    "called": "|java+constructor:///org/apache/lucene/analysis/standard/StandardAnalyzer/StandardAnalyzer(org.apache.lucene.util.Version)|",
    "v1Body": [
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/datastore/InMemoryBayesDatastore/InMemoryBayesDatastore(org.apache.mahout.common.Parameters)|",
      "|java+method:///org/apache/mahout/classifier/bayes/model/ClassifierContext/initialize()|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withName(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/datastore/HBaseBayesDatastore/HBaseBayesDatastore(java.lang.String,org.apache.mahout.common.Parameters)|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///java/lang/Class/asSubclass(java.lang.Class)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/apache/mahout/classifier/BayesFileFormatter/readerToDocument(org.apache.lucene.analysis.Analyzer,java.io.Reader)|",
      "|java+method:///org/apache/mahout/classifier/bayes/model/ClassifierContext/classifyDocument(java.lang.String%5B%5D,java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMaximum(int)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/model/ClassifierContext/ClassifierContext(org.apache.mahout.classifier.bayes.interfaces.Algorithm,org.apache.mahout.classifier.bayes.interfaces.Datastore)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/mahout/common/nlp/NGrams/NGrams(java.lang.String,int)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withRequired(boolean)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/nlp/NGrams/generateNGramsWithoutLabel()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+constructor:///java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.nio.charset.Charset)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/algorithm/CBayesAlgorithm/CBayesAlgorithm()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(char)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMinimum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withArgument(org.apache.commons.cli2.Argument)|",
      "|java+constructor:///org/apache/lucene/analysis/standard/StandardAnalyzer/StandardAnalyzer(org.apache.lucene.util.Version)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withLongName(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/algorithm/BayesAlgorithm/BayesAlgorithm()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/create()|",
      "|java+method:///java/nio/charset/Charset/forName(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/common/BayesParameters/BayesParameters(int)|",
      "|java+constructor:///java/io/FileInputStream/FileInputStream(java.io.File)|",
      "|java+constructor:///org/apache/commons/cli2/builder/ArgumentBuilder/ArgumentBuilder()|",
      "|java+method:///org/apache/mahout/classifier/bayes/common/BayesParameters/print()|",
      "|java+constructor:///org/apache/commons/cli2/builder/DefaultOptionBuilder/DefaultOptionBuilder()|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/classifier/bayes/model/ClassifierContext/initialize()|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/common/BayesParameters/BayesParameters()|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/mahout/classifier/bayes/common/BayesParameters/setGramSize(int)|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///java/lang/Class/asSubclass(java.lang.Class)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+constructor:///org/apache/commons/cli2/builder/ArgumentBuilder/ArgumentBuilder()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/apache/mahout/classifier/BayesFileFormatter/readerToDocument(org.apache.lucene.analysis.Analyzer,java.io.Reader)|",
      "|java+method:///org/apache/mahout/classifier/bayes/common/BayesParameters/setBasePath(java.lang.String)|",
      "|java+method:///org/apache/mahout/classifier/bayes/model/ClassifierContext/classifyDocument(java.lang.String%5B%5D,java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMaximum(int)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/model/ClassifierContext/ClassifierContext(org.apache.mahout.classifier.bayes.interfaces.Algorithm,org.apache.mahout.classifier.bayes.interfaces.Datastore)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/mahout/common/nlp/NGrams/NGrams(java.lang.String,int)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withRequired(boolean)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/nlp/NGrams/generateNGramsWithoutLabel()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/datastore/InMemoryBayesDatastore/InMemoryBayesDatastore(org.apache.mahout.classifier.bayes.common.BayesParameters)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/algorithm/CBayesAlgorithm/CBayesAlgorithm()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///com/google/common/io/Files/newReader(java.io.File,java.nio.charset.Charset)|",
      "|java+method:///java/lang/StringBuilder/append(char)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMinimum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withArgument(org.apache.commons.cli2.Argument)|",
      "|java+constructor:///org/apache/lucene/analysis/standard/StandardAnalyzer/StandardAnalyzer(org.apache.lucene.util.Version)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withLongName(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/algorithm/BayesAlgorithm/BayesAlgorithm()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/create()|",
      "|java+method:///java/nio/charset/Charset/forName(java.lang.String)|",
      "|java+method:///org/apache/mahout/classifier/bayes/common/BayesParameters/print()|",
      "|java+constructor:///org/apache/commons/cli2/builder/DefaultOptionBuilder/DefaultOptionBuilder()|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|"
    ],
    "affectedLib": "org.apache.lucene:lucene-core:3.1.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/clustering/lda/LDAInference/computeLikelihood(org.apache.mahout.math.Vector,int%5B%5D,org.apache.mahout.math.Matrix,org.apache.mahout.math.Vector,org.apache.mahout.math.Vector)|",
    "called": "|java+method:///org/apache/commons/math/special/Gamma/logGamma(double)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/Vector/get(int)|",
      "|java+method:///org/apache/mahout/math/Vector/zSum()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Math/exp(double)|",
      "|java+method:///org/apache/commons/math/special/Gamma/logGamma(double)|",
      "|java+method:///org/apache/mahout/math/Vector/iterateNonZero()|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAState/logProbWordGivenTopic(int,int)|",
      "|java+method:///org/apache/mahout/math/Matrix/getQuick(int,int)|",
      "|java+method:///org/apache/mahout/math/Vector/getQuick(int)|",
      "|java+method:///org/apache/mahout/math/Vector$Element/index()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/math/Vector$Element/get()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/clustering/lda/LDAState/getNumTopics()|",
      "|java+method:///org/apache/mahout/math/Vector/get(int)|",
      "|java+method:///org/apache/mahout/math/Vector/zSum()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Math/exp(double)|",
      "|java+method:///org/apache/commons/math/special/Gamma/logGamma(double)|",
      "|java+method:///org/apache/mahout/math/Vector/iterateNonZero()|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAState/logProbWordGivenTopic(int,int)|",
      "|java+method:///org/apache/mahout/math/Matrix/getQuick(int,int)|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAState/getTopicSmoothing()|",
      "|java+method:///org/apache/mahout/math/Vector/getQuick(int)|",
      "|java+method:///org/apache/mahout/math/Vector$Element/index()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/math/Vector$Element/get()|"
    ],
    "affectedLib": "org.apache.commons:commons-math:2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/cf/taste/impl/recommender/TreeClusteringRecommender2$ClusterClusterPair/hashCode()|",
    "called": "|java+method:///org/apache/mahout/common/RandomUtils/hashDouble(double)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/common/RandomUtils/hashDouble(double)|",
      "|java+method:///java/lang/Object/hashCode()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/common/RandomUtils/hashDouble(double)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/common/FastIDSet/hashCode()|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/df/data/DataLoader/parseString(int,org.apache.mahout.df.data.Dataset$Attribute%5B%5D,java.util.List%5B%5D,java.lang.String)|",
    "called": "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(int)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/mahout/df/data/Dataset$Attribute/isIgnored()|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/mahout/df/data/Dataset$Attribute/isNumerical()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/countAttributes(org.apache.mahout.df.data.Dataset$Attribute%5B%5D)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/indexOf(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/df/data/Instance/Instance(int,org.apache.mahout.math.Vector,int)|",
      "|java+constructor:///java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(int)|",
      "|java+method:///java/util/List/contains(java.lang.Object)|",
      "|java+method:///java/util/StringTokenizer/nextToken()|",
      "|java+method:///org/apache/mahout/math/DenseVector/set(int,double)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/util/StringTokenizer/countTokens()|",
      "|java+method:///org/apache/mahout/df/data/Dataset$Attribute/isCategorical()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/mahout/df/data/Dataset$Attribute/isIgnored()|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///org/apache/mahout/df/data/Dataset$Attribute/isNumerical()|",
      "|java+method:///org/apache/mahout/df/data/Dataset/countAttributes(org.apache.mahout.df.data.Dataset$Attribute%5B%5D)|",
      "|java+method:///java/util/List/indexOf(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/df/data/Instance/Instance(int,org.apache.mahout.math.Vector,int)|",
      "|java+constructor:///java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(int)|",
      "|java+method:///org/apache/mahout/math/DenseVector/set(int,double)|",
      "|java+method:///java/util/List/contains(java.lang.Object)|",
      "|java+method:///java/util/StringTokenizer/nextToken()|",
      "|java+method:///java/util/StringTokenizer/countTokens()|",
      "|java+method:///org/apache/mahout/df/data/Dataset$Attribute/isCategorical()|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/clustering/lda/LDAInference/infer(org.apache.mahout.math.Vector)|",
    "called": "|java+method:///org/apache/mahout/math/DenseMatrix/assignColumn(int,org.apache.mahout.math.Vector)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/DenseMatrix/assignColumn(int,org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAInference/computeLikelihood(org.apache.mahout.math.Vector,int%5B%5D,org.apache.mahout.math.Matrix,org.apache.mahout.math.Vector,org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/Vector/zSum()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Math/exp(double)|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAInference/createPhiMatrix(int)|",
      "|java+method:///org/apache/mahout/math/Vector/iterateNonZero()|",
      "|java+method:///org/apache/mahout/math/Vector/setQuick(int,double)|",
      "|java+method:///org/apache/mahout/math/Vector/assign(double)|",
      "|java+method:///org/apache/mahout/math/Vector/size()|",
      "|java+method:///org/apache/mahout/math/Vector/getQuick(int)|",
      "|java+method:///org/apache/mahout/math/Vector$Element/index()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/math/Vector$Element/get()|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAInference/eStepForWord(int,org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAInference/digammaGamma(org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/mahout/clustering/lda/LDAInference$InferredDocument/LDAInference$InferredDocument(org.apache.mahout.math.Vector,org.apache.mahout.math.Vector,int%5B%5D,org.apache.mahout.math.Matrix,double)|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/DenseMatrix/assignColumn(int,org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAState/getNumTopics()|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAInference/computeLikelihood(org.apache.mahout.math.Vector,int%5B%5D,org.apache.mahout.math.Matrix,org.apache.mahout.math.Vector,org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/Vector/zSum()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Math/exp(double)|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAInference/createPhiMatrix(int)|",
      "|java+method:///org/apache/mahout/math/Vector/iterateNonZero()|",
      "|java+method:///org/apache/mahout/math/Vector/setQuick(int,double)|",
      "|java+method:///org/apache/mahout/math/Vector/assign(double)|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAState/getTopicSmoothing()|",
      "|java+method:///org/apache/mahout/math/Vector/size()|",
      "|java+method:///org/apache/mahout/math/Vector/getQuick(int)|",
      "|java+method:///org/apache/mahout/math/Vector$Element/index()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/math/Vector$Element/get()|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAInference/eStepForWord(int,org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAInference/digammaGamma(org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/mahout/clustering/lda/LDAInference$InferredDocument/LDAInference$InferredDocument(org.apache.mahout.math.Vector,org.apache.mahout.math.Vector,int%5B%5D,org.apache.mahout.math.Matrix,double)|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(int)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/df/tools/UDistrib/runTool(java.lang.String,java.lang.String,java.lang.String,int)|",
    "called": "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Scanner/close()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/load(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/mahout/df/data/DataConverter/DataConverter(org.apache.mahout.df.data.Dataset)|",
      "|java+method:///org/apache/hadoop/fs/FSDataOutputStream/writeBytes(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FSDataOutputStream/close()|",
      "|java+method:///java/util/Scanner/hasNextLine()|",
      "|java+method:///org/apache/hadoop/fs/FSDataOutputStream/writeChar(int)|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///java/util/Scanner/nextLine()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/apache/hadoop/fs/FileUtil/copyMerge(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration,java.lang.String)|",
      "|java+constructor:///java/util/Scanner/Scanner(java.io.InputStream)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/nblabels()|",
      "|java+method:///java/io/File/toString()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/create(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///java/util/Random/nextInt(int)|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/nbInstances()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/open(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/FileUtil/createLocalTempFile(java.io.File,java.lang.String,boolean)|",
      "|java+method:///org/apache/mahout/df/data/DataConverter/convert(int,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Scanner/close()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/load(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/mahout/df/data/DataConverter/DataConverter(org.apache.mahout.df.data.Dataset)|",
      "|java+method:///org/apache/hadoop/fs/FSDataOutputStream/writeBytes(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FSDataOutputStream/close()|",
      "|java+method:///java/util/Scanner/hasNextLine()|",
      "|java+method:///org/apache/hadoop/fs/FSDataOutputStream/writeChar(int)|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileUtil/copyMerge(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration,java.lang.String)|",
      "|java+constructor:///java/util/Scanner/Scanner(java.io.InputStream)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/nblabels()|",
      "|java+method:///java/io/File/toString()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/create(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///java/util/Random/nextInt(int)|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///java/util/Scanner/nextLine()|",
      "|java+method:///java/lang/String/format(java.util.Locale,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/apache/mahout/df/data/Dataset/nbInstances()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/open(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/FileUtil/createLocalTempFile(java.io.File,java.lang.String,boolean)|",
      "|java+method:///org/apache/mahout/df/data/DataConverter/convert(int,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/mahout/df/data/Instance/getLabel()|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+constructor:///org/apache/mahout/common/iterator/FixedSizeSamplingIterator/FixedSizeSamplingIterator(int,java.util.Iterator)|",
    "called": "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
    "v1Body": [
      "|java+method:///org/apache/mahout/common/iterator/FixedSizeSamplingIterator/buildDelegate(int,java.util.Iterator)|",
      "|java+constructor:///org/apache/mahout/common/iterator/DelegatingIterator/DelegatingIterator(java.util.Iterator)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///com/google/common/collect/ForwardingIterator/ForwardingIterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/Random/nextInt(int)|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/List/set(int,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/df/mapreduce/partial/Step1Mapper/configure(java.lang.Long,int,int,int)|",
    "called": "|java+method:///org/apache/mahout/common/RandomUtils/getRandom(long)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/mahout/df/mapreduce/partial/Step1Mapper/nbTrees(int,int,int)|",
      "|java+constructor:///org/apache/mahout/df/data/DataConverter/DataConverter(org.apache.mahout.df.data.Dataset)|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom(long)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/apache/mahout/df/mapreduce/partial/Step1Mapper/getDataset()|",
      "|java+method:///java/lang/Long/longValue()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/mahout/df/mapreduce/partial/Step1Mapper/nbTrees(int,int,int)|",
      "|java+constructor:///org/apache/mahout/df/data/DataConverter/DataConverter(org.apache.mahout.df.data.Dataset)|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom(long)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/mahout/df/mapreduce/partial/Step1Mapper/getDataset()|",
      "|java+method:///java/lang/Long/longValue()|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/computePairwiseInnerProducts()|",
    "called": "|java+method:///org/apache/mahout/math/OrthonormalityVerifier/pairwiseInnerProducts(java.lang.Iterable)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/OrthonormalityVerifier/pairwiseInnerProducts(org.apache.mahout.math.VectorIterable)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/OrthonormalityVerifier/pairwiseInnerProducts(java.lang.Iterable)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/times(org.apache.mahout.math.hadoop.DistributedRowMatrix)|",
    "called": "|java+constructor:///org/apache/mahout/math/CardinalityException/CardinalityException(int,int)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/hadoop/MatrixMultiplicationJob/createMatrixMultiplyJobConf(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int)|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/configure(org.apache.hadoop.mapred.JobConf)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(java.lang.String,java.lang.String,int,int)|",
      "|java+constructor:///org/apache/mahout/math/CardinalityException/CardinalityException(int,int)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/numCols()|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///org/apache/hadoop/mapred/JobClient/runJob(org.apache.hadoop.mapred.JobConf)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/numRows()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///org/apache/mahout/math/hadoop/MatrixMultiplicationJob/createMatrixMultiplyJobConf(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/mahout/math/CardinalityException/CardinalityException(int,int)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/numCols()|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///org/apache/hadoop/mapred/JobClient/runJob(org.apache.hadoop.mapred.JobConf)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/numRows()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/getConf()|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/common/distance/ManhattanDistanceMeasure/distance(org.apache.mahout.math.Vector,org.apache.mahout.math.Vector)|",
    "called": "|java+constructor:///org/apache/mahout/math/CardinalityException/CardinalityException(int,int)|",
    "v1Body": [
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/mahout/math/Vector/minus(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/Vector/iterateNonZero()|",
      "|java+method:///org/apache/mahout/math/Vector/size()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/math/Vector$Element/get()|",
      "|java+method:///java/lang/Math/abs(double)|",
      "|java+constructor:///org/apache/mahout/math/CardinalityException/CardinalityException()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Math/abs(double)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/mahout/math/Vector/minus(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/Vector/iterateNonZero()|",
      "|java+constructor:///org/apache/mahout/math/CardinalityException/CardinalityException(int,int)|",
      "|java+method:///org/apache/mahout/math/Vector/size()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/math/Vector$Element/get()|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/TimesSquaredJob$TimesSquaredMapper/map(org.apache.hadoop.io.WritableComparable,org.apache.mahout.math.VectorWritable,org.apache.hadoop.mapred.OutputCollector,org.apache.hadoop.mapred.Reporter)|",
    "called": "|java+method:///org/apache/mahout/math/function/Functions/plusMult(double)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/Vector/assign(org.apache.mahout.math.Vector,org.apache.mahout.math.function.BinaryFunction)|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///org/apache/mahout/math/function/Functions/plusMult(double)|",
      "|java+method:///org/apache/mahout/math/hadoop/TimesSquaredJob$TimesSquaredMapper/scale(org.apache.mahout.math.VectorWritable)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/Vector/assign(org.apache.mahout.math.Vector,org.apache.mahout.math.function.DoubleDoubleFunction)|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///org/apache/mahout/math/function/Functions/plusMult(double)|",
      "|java+method:///org/apache/mahout/math/hadoop/TimesSquaredJob$TimesSquaredMapper/scale(org.apache.mahout.math.VectorWritable)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/math/MatrixWritable/readMatrix(java.io.DataInput)|",
    "called": "|java+constructor:///org/apache/mahout/math/DenseMatrix/DenseMatrix(int,int)|",
    "v1Body": [
      "|java+method:///java/io/DataInput/readUTF()|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///java/lang/Class/asSubclass(java.lang.Class)|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///org/apache/mahout/math/SparseRowMatrix/SparseRowMatrix(int%5B%5D,boolean)|",
      "|java+method:///java/lang/Integer/toString(int,int)|",
      "|java+method:///java/io/DataInput/readInt()|",
      "|java+method:///org/apache/mahout/math/VectorWritable/readVector(java.io.DataInput)|",
      "|java+method:///org/apache/mahout/math/Matrix/viewRow(int)|",
      "|java+method:///org/apache/mahout/math/Vector/assign(org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/mahout/math/DenseMatrix/DenseMatrix(int,int)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+constructor:///org/apache/mahout/cf/taste/impl/common/FastByIDMap/FastByIDMap(int,int)|",
    "called": "|java+method:///org/apache/mahout/common/RandomUtils/nextTwinPrime(int)|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+constructor:///org/apache/mahout/cf/taste/impl/common/BitSet/BitSet(int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Arrays/fill(long%5B%5D,long)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/mahout/common/RandomUtils/nextTwinPrime(int)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+constructor:///org/apache/mahout/cf/taste/impl/common/BitSet/BitSet(int)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Arrays/fill(long%5B%5D,long)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/mahout/common/RandomUtils/nextTwinPrime(int)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/clustering/lda/LDAInference/eStepForWord(int,org.apache.mahout.math.Vector)|",
    "called": "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(int)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/Vector/getQuick(int)|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAUtil/logSum(double,double)|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(int)|",
      "|java+method:///org/apache/mahout/math/Vector/setQuick(int,double)|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAState/logProbWordGivenTopic(int,int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/Vector/getQuick(int)|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAUtil/logSum(double,double)|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAState/getNumTopics()|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(int)|",
      "|java+method:///org/apache/mahout/math/Vector/setQuick(int,double)|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAState/logProbWordGivenTopic(int,int)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/TimesSquaredJob$TimesSquaredMapper/configure(org.apache.hadoop.mapred.JobConf)|",
    "called": "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(int,int)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Reader/SequenceFile$Reader(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable()|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(int)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/close()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(int,int)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/SequentialAccessSparseVector/SequentialAccessSparseVector(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/getBoolean(java.lang.String,boolean)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/getInt(java.lang.String,int)|",
      "|java+method:///java/net/URI/getPath()|",
      "|java+method:///org/apache/hadoop/filecache/DistributedCache/getCacheFiles(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/next(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///org/apache/hadoop/io/NullWritable/get()|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/SequenceFileValueIterator(org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/close()|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(int)|",
      "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(int,int)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/getBoolean(java.lang.String,boolean)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/getInt(java.lang.String,int)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/next()|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///java/net/URI/getPath()|",
      "|java+method:///org/apache/hadoop/filecache/DistributedCache/getCacheFiles(org.apache.hadoop.conf.Configuration)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/cf/taste/impl/similarity/LogLikelihoodSimilarity/userSimilarity(long,long)|",
    "called": "|java+method:///org/apache/mahout/math/stats/LogLikelihood/logLikelihoodRatio(int,int,int,int)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/cf/taste/impl/similarity/LogLikelihoodSimilarity/twoLogLambda(double,double,double,double)|",
      "|java+method:///org/apache/mahout/cf/taste/model/DataModel/getNumItems()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/common/FastIDSet/intersectionSize(org.apache.mahout.cf.taste.impl.common.FastIDSet)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/common/FastIDSet/size()|",
      "|java+method:///org/apache/mahout/cf/taste/model/DataModel/getItemIDsFromUser(long)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/stats/LogLikelihood/logLikelihoodRatio(int,int,int,int)|",
      "|java+method:///org/apache/mahout/cf/taste/model/DataModel/getNumItems()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/common/FastIDSet/intersectionSize(org.apache.mahout.cf.taste.impl.common.FastIDSet)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/common/FastIDSet/size()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/similarity/LogLikelihoodSimilarity/getDataModel()|",
      "|java+method:///org/apache/mahout/cf/taste/model/DataModel/getItemIDsFromUser(long)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/math/VectorWritable/readFields(java.io.DataInput)|",
    "called": "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(int,int)|",
    "v1Body": [
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///java/io/DataInput/readUTF()|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///java/lang/Class/asSubclass(java.lang.Class)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.Throwable)|",
      "|java+method:///org/apache/hadoop/io/Writable/readFields(java.io.DataInput)|"
    ],
    "v2Body": [
      "|java+method:///java/io/DataInput/readUTF()|",
      "|java+method:///java/io/DataInput/readByte()|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Integer/toString(int,int)|",
      "|java+method:///java/io/DataInput/readDouble()|",
      "|java+method:///org/apache/mahout/math/Varint/readUnsignedVarInt(java.io.DataInput)|",
      "|java+method:///java/io/DataInput/readFloat()|",
      "|java+constructor:///org/apache/mahout/math/NamedVector/NamedVector(org.apache.mahout.math.Vector,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(int,int)|",
      "|java+constructor:///org/apache/mahout/math/SequentialAccessSparseVector/SequentialAccessSparseVector(int,int)|",
      "|java+method:///org/apache/mahout/math/Vector/setQuick(int,double)|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(double%5B%5D)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+constructor:///org/apache/mahout/cf/taste/impl/common/FastIDSet/FastIDSet(int)|",
    "called": "|java+method:///org/apache/mahout/common/RandomUtils/nextTwinPrime(int)|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Arrays/fill(long%5B%5D,long)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/mahout/common/RandomUtils/nextTwinPrime(int)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Arrays/fill(long%5B%5D,long)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/apache/mahout/common/RandomUtils/nextTwinPrime(int)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/common/distance/CosineDistanceMeasure/distance(org.apache.mahout.math.Vector,org.apache.mahout.math.Vector)|",
    "called": "|java+constructor:///org/apache/mahout/math/CardinalityException/CardinalityException(int,int)|",
    "v1Body": [
      "|java+constructor:///org/apache/mahout/math/CardinalityException/CardinalityException()|",
      "|java+method:///org/apache/mahout/math/Vector/getLengthSquared()|",
      "|java+method:///org/apache/mahout/math/Vector/dot(org.apache.mahout.math.Vector)|",
      "|java+method:///java/lang/Math/sqrt(double)|",
      "|java+method:///org/apache/mahout/math/Vector/size()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/Vector/getLengthSquared()|",
      "|java+method:///java/lang/Math/sqrt(double)|",
      "|java+method:///org/apache/mahout/math/Vector/size()|",
      "|java+constructor:///org/apache/mahout/math/CardinalityException/CardinalityException(int,int)|",
      "|java+method:///org/apache/mahout/math/Vector/dot(org.apache.mahout.math.Vector)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/clustering/lda/LDAInference/digamma(org.apache.mahout.math.Vector)|",
    "called": "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(int)|",
    "v1Body": [
      "|java+constructor:///org/apache/mahout/clustering/lda/LDAInference$1/LDAInference$1()|",
      "|java+method:///org/apache/mahout/math/Vector/assign(org.apache.mahout.math.Vector,org.apache.mahout.math.function.BinaryFunction)|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(int)|",
      "|java+method:///org/apache/mahout/math/Vector/size()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/mahout/clustering/lda/LDAInference$1/LDAInference$1()|",
      "|java+method:///org/apache/mahout/math/Vector/assign(org.apache.mahout.math.Vector,org.apache.mahout.math.function.DoubleDoubleFunction)|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(int)|",
      "|java+method:///org/apache/mahout/math/Vector/size()|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+constructor:///org/apache/mahout/cf/taste/impl/common/FastMap/FastMap(int,int)|",
    "called": "|java+method:///org/apache/mahout/common/RandomUtils/nextTwinPrime(int)|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+constructor:///org/apache/mahout/cf/taste/impl/common/BitSet/BitSet(int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/mahout/common/RandomUtils/nextTwinPrime(int)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+constructor:///org/apache/mahout/cf/taste/impl/common/BitSet/BitSet(int)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/mahout/common/RandomUtils/nextTwinPrime(int)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/df/data/DataConverter/convert(int,java.lang.String)|",
    "called": "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(int)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/df/data/Dataset/getLabelId()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/labels()|",
      "|java+method:///org/apache/mahout/df/data/Dataset/labelCode(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/nbAttributes()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/isNumerical(int)|",
      "|java+method:///java/util/StringTokenizer/countTokens()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/commons/lang/ArrayUtils/contains(int%5B%5D,int)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/getIgnored()|",
      "|java+method:///java/util/Arrays/toString(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/apache/mahout/df/data/Instance/Instance(int,org.apache.mahout.math.Vector,int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/df/data/Dataset/valueOf(int,java.lang.String)|",
      "|java+method:///java/util/StringTokenizer/nextToken()|",
      "|java+method:///org/apache/mahout/math/DenseVector/set(int,double)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/df/data/Dataset/getLabelId()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/labels()|",
      "|java+method:///org/apache/mahout/df/data/Dataset/labelCode(java.lang.String)|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/nbAttributes()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/isNumerical(int)|",
      "|java+method:///java/util/StringTokenizer/countTokens()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/commons/lang/ArrayUtils/contains(int%5B%5D,int)|",
      "|java+method:///org/apache/mahout/df/data/Dataset/getIgnored()|",
      "|java+method:///java/util/Arrays/toString(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/apache/mahout/df/data/Instance/Instance(int,org.apache.mahout.math.Vector,int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/df/data/Dataset/valueOf(int,java.lang.String)|",
      "|java+method:///org/apache/mahout/math/DenseVector/set(int,double)|",
      "|java+method:///java/util/StringTokenizer/nextToken()|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+constructor:///org/apache/mahout/common/iterator/StableFixedSizeSamplingIterator/StableFixedSizeSamplingIterator(int,java.util.Iterator)|",
    "called": "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
    "v1Body": [
      "|java+method:///org/apache/mahout/common/iterator/StableFixedSizeSamplingIterator/buildDelegate(int,java.util.Iterator)|",
      "|java+constructor:///org/apache/mahout/common/iterator/DelegatingIterator/DelegatingIterator(java.util.Iterator)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Iterators/transform(java.util.Iterator,com.google.common.base.Function)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///com/google/common/collect/ForwardingIterator/ForwardingIterator()|",
      "|java+method:///java/util/Collections/sort(java.util.List)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///org/apache/mahout/common/Pair/Pair(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Random/nextInt(int)|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/apache/mahout/common/iterator/StableFixedSizeSamplingIterator$1/StableFixedSizeSamplingIterator$1(org.apache.mahout.common.iterator.StableFixedSizeSamplingIterator)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/List/set(int,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/classifier/discriminative/LinearTrainer/train(org.apache.mahout.math.Vector,org.apache.mahout.math.Matrix)|",
    "called": "|java+constructor:///org/apache/mahout/math/CardinalityException/CardinalityException(int,int)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/Matrix/size()|",
      "|java+method:///org/apache/mahout/math/Vector/get(int)|",
      "|java+method:///org/apache/mahout/classifier/discriminative/LinearModel/classify(org.apache.mahout.math.Vector)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/math/Matrix/getColumn(int)|",
      "|java+constructor:///org/apache/mahout/classifier/discriminative/TrainingException/TrainingException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/mahout/classifier/discriminative/LinearTrainer/update(double,org.apache.mahout.math.Vector,org.apache.mahout.classifier.discriminative.LinearModel)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/CardinalityException/CardinalityException()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/mahout/math/Vector/size()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/Matrix/size()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/Vector/get(int)|",
      "|java+method:///org/apache/mahout/classifier/discriminative/LinearModel/classify(org.apache.mahout.math.Vector)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/math/Matrix/getColumn(int)|",
      "|java+constructor:///org/apache/mahout/classifier/discriminative/TrainingException/TrainingException(java.lang.String)|",
      "|java+method:///org/apache/mahout/classifier/discriminative/LinearTrainer/update(double,org.apache.mahout.math.Vector,org.apache.mahout.classifier.discriminative.LinearModel)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/math/CardinalityException/CardinalityException(int,int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/mahout/math/Vector/size()|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.3",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/clustering/lda/LDAInference/createPhiMatrix(int)|",
    "called": "|java+method:///org/apache/mahout/math/DenseMatrix/assign(double)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/DenseMatrix/getRow(int)|",
      "|java+method:///org/apache/mahout/math/DenseMatrix/assign(double)|",
      "|java+constructor:///org/apache/mahout/math/DenseMatrix/DenseMatrix(int,int)|",
      "|java+method:///org/apache/mahout/math/Vector/size()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/DenseMatrix/getRow(int)|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAState/getNumTopics()|",
      "|java+method:///org/apache/mahout/math/DenseMatrix/assign(double)|",
      "|java+constructor:///org/apache/mahout/math/DenseMatrix/DenseMatrix(int,int)|",
      "|java+method:///org/apache/mahout/math/Vector/size()|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.5",
    "change": "UPDATED"
  }
]