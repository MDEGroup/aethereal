[
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.9.0",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "caller": "|java+method:///com/nicta/scoobi/io/sequence/CheckedSeqSource$$anonfun$checkInputPathType$1/apply(org.apache.hadoop.fs.Path)|",
    "called": "|java+method:///com/nicta/scoobi/impl/util/Compatibility$/newSequenceFileReader(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)|",
    "v1Body": [
      "|java+method:///scala/reflect/Manifest/runtimeClass()|",
      "|java+method:///com/nicta/scoobi/core/ScoobiConfiguration/configuration()|",
      "|java+method:///com/nicta/scoobi/core/WireFormat$/manifest(scala.reflect.Manifest)|",
      "|java+method:///com/nicta/scoobi/impl/util/Compatibility$/newSequenceFileReader(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/getKeyClass()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/close()|",
      "|java+method:///com/nicta/scoobi/io/sequence/CheckedSeqSource/com$nicta$scoobi$io$sequence$CheckedSeqSource$$checkType(java.lang.Class,java.lang.Class,java.lang.String)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/getValueClass()|"
    ],
    "v2Body": [
      "|java+method:///com/nicta/scoobi/impl/util/Compatibility$/newSequenceFileReader(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///com/nicta/scoobi/io/sequence/CheckedSeqSource/com$nicta$scoobi$io$sequence$CheckedSeqSource$$logger()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+constructor:///com/nicta/scoobi/io/sequence/CheckedSeqSource$$anonfun$checkInputPathType$1$$anonfun$apply$1/CheckedSeqSource$$anonfun$checkInputPathType$1$$anonfun$apply$1(com.nicta.scoobi.io.sequence.CheckedSeqSource$$anonfun$checkInputPathType$1)|",
      "|java+method:///com/nicta/scoobi/core/ScoobiConfiguration/configuration()|",
      "|java+method:///scala/Option/foreach(scala.Function1)|"
    ],
    "affectedLib": "com.nicta:scoobi-compatibility-cdh4_2.10:1.0.2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.9.0",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "caller": "|java+method:///com/nicta/scoobi/impl/plan/source/SeqInputFormat/getSplits(org.apache.hadoop.mapreduce.JobContext)|",
    "called": "|java+method:///com/nicta/scoobi/impl/util/Compatibility$/getConfiguration(org.apache.hadoop.mapreduce.JobContext)|",
    "v1Body": [
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullObject$default$3()|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullObject$default$4()|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/source/SeqInputFormat$$anonfun$getSplits$1/SeqInputFormat$$anonfun$getSplits$1(com.nicta.scoobi.impl.plan.source.SeqInputFormat,int,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/impl/plan/source/SeqInput$/wireFormatProperty(int)|",
      "|java+method:///com/nicta/scoobi/impl/plan/source/SeqInput$/seqProperty(int)|",
      "|java+method:///com/nicta/scoobi/impl/plan/source/SeqInputFormat/logger()|",
      "|java+method:///com/nicta/scoobi/impl/plan/source/SeqInput$/IdProperty()|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/source/SeqInputFormat$$anonfun$getSplits$2/SeqInputFormat$$anonfun$getSplits$2(com.nicta.scoobi.impl.plan.source.SeqInputFormat)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/source/SeqInputFormat$$anonfun$3/SeqInputFormat$$anonfun$3(com.nicta.scoobi.impl.plan.source.SeqInputFormat,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/impl/util/Compatibility$/getConfiguration(org.apache.hadoop.mapreduce.JobContext)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullObject(org.apache.hadoop.conf.Configuration,java.lang.String,scala.Function1,boolean)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getInt(java.lang.String,int)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///com/nicta/scoobi/impl/collection/Seqs$/split(java.lang.Object,int,scala.Function3,scala.Function1)|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullObject(org.apache.hadoop.conf.Configuration,java.lang.String,boolean)|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/source/SeqInputFormat$$anonfun$2/SeqInputFormat$$anonfun$2(com.nicta.scoobi.impl.plan.source.SeqInputFormat,int)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/collection/JavaConversions$/seqAsJavaList(scala.collection.Seq)|",
      "|java+method:///com/nicta/scoobi/impl/plan/source/SeqInput$/LengthProperty()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/source/SeqInputFormat$$anonfun$4/SeqInputFormat$$anonfun$4(com.nicta.scoobi.impl.plan.source.SeqInputFormat,int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullObject$default$3()|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/source/SeqInputFormat$$anonfun$getSplits$1/SeqInputFormat$$anonfun$getSplits$1(com.nicta.scoobi.impl.plan.source.SeqInputFormat,int,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/impl/plan/source/SeqInput$/wireFormatProperty(int)|",
      "|java+method:///com/nicta/scoobi/impl/plan/source/SeqInput$/seqProperty(int)|",
      "|java+method:///com/nicta/scoobi/impl/plan/source/SeqInputFormat/logger()|",
      "|java+method:///com/nicta/scoobi/impl/plan/source/SeqInput$/IdProperty()|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullObjectDeserialise$default$4()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/source/SeqInputFormat$$anonfun$3/SeqInputFormat$$anonfun$3(com.nicta.scoobi.impl.plan.source.SeqInputFormat,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/impl/util/Compatibility$/getConfiguration(org.apache.hadoop.mapreduce.JobContext)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getInt(java.lang.String,int)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///com/nicta/scoobi/impl/collection/Seqs$/split(java.lang.Object,int,scala.Function3,scala.Function1)|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullObject(org.apache.hadoop.conf.Configuration,java.lang.String,boolean)|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/source/SeqInputFormat$$anonfun$getSplits$2/SeqInputFormat$$anonfun$getSplits$2(com.nicta.scoobi.impl.plan.source.SeqInputFormat)|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullObjectDeserialise(org.apache.hadoop.conf.Configuration,java.lang.String,scala.Function1,boolean)|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/source/SeqInputFormat$$anonfun$2/SeqInputFormat$$anonfun$2(com.nicta.scoobi.impl.plan.source.SeqInputFormat,int)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/collection/JavaConversions$/seqAsJavaList(scala.collection.Seq)|",
      "|java+method:///com/nicta/scoobi/impl/plan/source/SeqInput$/LengthProperty()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/source/SeqInputFormat$$anonfun$4/SeqInputFormat$$anonfun$4(com.nicta.scoobi.impl.plan.source.SeqInputFormat,int)|"
    ],
    "affectedLib": "com.nicta:scoobi-compatibility-cdh4_2.10:1.0.2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/impl/io/Files$class/sameFileSystem(com.nicta.scoobi.impl.io.Files,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.FileSystem)|",
    "called": "|java+method:///com/nicta/scoobi/impl/util/Compatibility$/getScheme(org.apache.hadoop.fs.FileSystem)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/fs/FileSystem/getUri()|",
      "|java+method:///com/nicta/scoobi/impl/io/Files/sameFileSystem(java.net.URI,java.net.URI)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/FileSystem/getUri()|",
      "|java+method:///java/net/URI/getHost()|",
      "|java+method:///com/nicta/scoobi/impl/io/Files$class/equalIgnoreCase$1(com.nicta.scoobi.impl.io.Files,java.lang.String,java.lang.String)|",
      "|java+method:///com/nicta/scoobi/impl/util/Compatibility$/getScheme(org.apache.hadoop.fs.FileSystem)|"
    ],
    "affectedLib": "com.nicta:scoobi-compatibility-hadoop2_2.10:1.0.3",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/io/sequence/CheckedSeqSource$$anonfun$checkInputPathType$1/apply(org.apache.hadoop.fs.Path)|",
    "called": "|java+method:///com/nicta/scoobi/impl/util/Compatibility$/newSequenceFileReader(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)|",
    "v1Body": [
      "|java+method:///scala/reflect/Manifest/runtimeClass()|",
      "|java+method:///com/nicta/scoobi/core/ScoobiConfiguration/configuration()|",
      "|java+method:///com/nicta/scoobi/core/WireFormat$/manifest(scala.reflect.Manifest)|",
      "|java+method:///com/nicta/scoobi/impl/util/Compatibility$/newSequenceFileReader(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/getKeyClass()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/close()|",
      "|java+method:///com/nicta/scoobi/io/sequence/CheckedSeqSource/com$nicta$scoobi$io$sequence$CheckedSeqSource$$checkType(java.lang.Class,java.lang.Class,java.lang.String)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/getValueClass()|"
    ],
    "v2Body": [
      "|java+method:///com/nicta/scoobi/impl/util/Compatibility$/newSequenceFileReader(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///com/nicta/scoobi/io/sequence/CheckedSeqSource/com$nicta$scoobi$io$sequence$CheckedSeqSource$$logger()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+constructor:///com/nicta/scoobi/io/sequence/CheckedSeqSource$$anonfun$checkInputPathType$1$$anonfun$apply$1/CheckedSeqSource$$anonfun$checkInputPathType$1$$anonfun$apply$1(com.nicta.scoobi.io.sequence.CheckedSeqSource$$anonfun$checkInputPathType$1)|",
      "|java+method:///com/nicta/scoobi/core/ScoobiConfiguration/configuration()|",
      "|java+method:///scala/Option/foreach(scala.Function1)|"
    ],
    "affectedLib": "com.nicta:scoobi-compatibility-hadoop2_2.10:1.0.3",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/impl/plan/source/SeqInputFormat/getSplits(org.apache.hadoop.mapreduce.JobContext)|",
    "called": "|java+method:///com/nicta/scoobi/impl/util/Compatibility$/getConfiguration(org.apache.hadoop.mapreduce.JobContext)|",
    "v1Body": [
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullObject$default$3()|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullObject$default$4()|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/source/SeqInputFormat$$anonfun$getSplits$1/SeqInputFormat$$anonfun$getSplits$1(com.nicta.scoobi.impl.plan.source.SeqInputFormat,int,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/impl/plan/source/SeqInput$/wireFormatProperty(int)|",
      "|java+method:///com/nicta/scoobi/impl/plan/source/SeqInput$/seqProperty(int)|",
      "|java+method:///com/nicta/scoobi/impl/plan/source/SeqInputFormat/logger()|",
      "|java+method:///com/nicta/scoobi/impl/plan/source/SeqInput$/IdProperty()|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/source/SeqInputFormat$$anonfun$getSplits$2/SeqInputFormat$$anonfun$getSplits$2(com.nicta.scoobi.impl.plan.source.SeqInputFormat)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/source/SeqInputFormat$$anonfun$3/SeqInputFormat$$anonfun$3(com.nicta.scoobi.impl.plan.source.SeqInputFormat,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/impl/util/Compatibility$/getConfiguration(org.apache.hadoop.mapreduce.JobContext)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullObject(org.apache.hadoop.conf.Configuration,java.lang.String,scala.Function1,boolean)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getInt(java.lang.String,int)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///com/nicta/scoobi/impl/collection/Seqs$/split(java.lang.Object,int,scala.Function3,scala.Function1)|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullObject(org.apache.hadoop.conf.Configuration,java.lang.String,boolean)|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/source/SeqInputFormat$$anonfun$2/SeqInputFormat$$anonfun$2(com.nicta.scoobi.impl.plan.source.SeqInputFormat,int)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/collection/JavaConversions$/seqAsJavaList(scala.collection.Seq)|",
      "|java+method:///com/nicta/scoobi/impl/plan/source/SeqInput$/LengthProperty()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/source/SeqInputFormat$$anonfun$4/SeqInputFormat$$anonfun$4(com.nicta.scoobi.impl.plan.source.SeqInputFormat,int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullObject$default$3()|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/source/SeqInputFormat$$anonfun$getSplits$1/SeqInputFormat$$anonfun$getSplits$1(com.nicta.scoobi.impl.plan.source.SeqInputFormat,int,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/impl/plan/source/SeqInput$/wireFormatProperty(int)|",
      "|java+method:///com/nicta/scoobi/impl/plan/source/SeqInput$/seqProperty(int)|",
      "|java+method:///com/nicta/scoobi/impl/plan/source/SeqInputFormat/logger()|",
      "|java+method:///com/nicta/scoobi/impl/plan/source/SeqInput$/IdProperty()|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullObjectDeserialise$default$4()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/source/SeqInputFormat$$anonfun$3/SeqInputFormat$$anonfun$3(com.nicta.scoobi.impl.plan.source.SeqInputFormat,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/impl/util/Compatibility$/getConfiguration(org.apache.hadoop.mapreduce.JobContext)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getInt(java.lang.String,int)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///com/nicta/scoobi/impl/collection/Seqs$/split(java.lang.Object,int,scala.Function3,scala.Function1)|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullObject(org.apache.hadoop.conf.Configuration,java.lang.String,boolean)|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/source/SeqInputFormat$$anonfun$getSplits$2/SeqInputFormat$$anonfun$getSplits$2(com.nicta.scoobi.impl.plan.source.SeqInputFormat)|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullObjectDeserialise(org.apache.hadoop.conf.Configuration,java.lang.String,scala.Function1,boolean)|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/source/SeqInputFormat$$anonfun$2/SeqInputFormat$$anonfun$2(com.nicta.scoobi.impl.plan.source.SeqInputFormat,int)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/collection/JavaConversions$/seqAsJavaList(scala.collection.Seq)|",
      "|java+method:///com/nicta/scoobi/impl/plan/source/SeqInput$/LengthProperty()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/source/SeqInputFormat$$anonfun$4/SeqInputFormat$$anonfun$4(com.nicta.scoobi.impl.plan.source.SeqInputFormat,int)|"
    ],
    "affectedLib": "com.nicta:scoobi-compatibility-hadoop2_2.10:1.0.3",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/impl/io/Files$$anonfun$moveTo$2/apply(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
    "called": "|java+method:///com/nicta/scoobi/impl/util/Compatibility$/getScheme(org.apache.hadoop.fs.FileSystem)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+constructor:///com/nicta/scoobi/impl/io/Files$$anonfun$moveTo$2$$anonfun$apply$1/Files$$anonfun$moveTo$2$$anonfun$apply$1(com.nicta.scoobi.impl.io.Files$$anonfun$moveTo$2,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
      "|java+method:///com/nicta/scoobi/impl/control/Exceptions$/tryOk(scala.Function0)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///com/nicta/scoobi/impl/io/Files/dirPath(java.lang.String)|",
      "|java+method:///com/nicta/scoobi/impl/io/Files/pathExists(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///com/nicta/scoobi/impl/io/Files/pathExists$default$2()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/hadoop/fs/FileUtil/copy(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,boolean,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToBoolean(boolean)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///com/nicta/scoobi/impl/io/Files/com$nicta$scoobi$impl$io$Files$$logger()|",
      "|java+method:///com/nicta/scoobi/impl/io/Files/fileSystem(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///com/nicta/scoobi/impl/io/Files/sameFileSystem(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.FileSystem)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/makeQualified(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/mkdirs(org.apache.hadoop.fs.Path)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+constructor:///com/nicta/scoobi/impl/io/Files$$anonfun$moveTo$2$$anonfun$apply$1/Files$$anonfun$moveTo$2$$anonfun$apply$1(com.nicta.scoobi.impl.io.Files$$anonfun$moveTo$2,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///com/nicta/scoobi/impl/io/Files/dirPath(java.lang.String)|",
      "|java+method:///com/nicta/scoobi/impl/io/Files/pathExists$default$2()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///com/nicta/scoobi/impl/util/Compatibility$/isDirectory(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///scala/collection/immutable/List/contains(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///com/nicta/scoobi/impl/control/Exceptions$/tryOk(scala.Function0)|",
      "|java+method:///com/nicta/scoobi/impl/util/Compatibility$/getScheme(org.apache.hadoop.fs.FileSystem)|",
      "|java+method:///com/nicta/scoobi/impl/io/Files/pathExists(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/String/toLowerCase()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToBoolean(boolean)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///com/nicta/scoobi/impl/io/Files/com$nicta$scoobi$impl$io$Files$$logger()|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///com/nicta/scoobi/impl/io/Files/fileSystem(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///com/nicta/scoobi/impl/io/Files/sameFileSystem(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.FileSystem)|",
      "|java+method:///com/nicta/scoobi/impl/io/Files/moveToS3(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/net/URI/getPath()|",
      "|java+method:///org/apache/hadoop/fs/FileUtil/copy(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,boolean,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///scala/collection/immutable/List$/apply(scala.collection.Seq)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/makeQualified(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/mkdirs(org.apache.hadoop.fs.Path)|"
    ],
    "affectedLib": "com.nicta:scoobi-compatibility-hadoop2_2.10:1.0.3",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/impl/io/FileSystems$class/listDirectPaths(com.nicta.scoobi.impl.io.FileSystems,org.apache.hadoop.fs.Path,com.nicta.scoobi.core.ScoobiConfiguration)|",
    "called": "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///com/nicta/scoobi/impl/io/FileSystems$$anonfun$listDirectPaths$1/FileSystems$$anonfun$listDirectPaths$1(com.nicta.scoobi.impl.io.FileSystems)|",
      "|java+method:///com/nicta/scoobi/impl/io/FileSystems/fileSystem(com.nicta.scoobi.core.ScoobiConfiguration)|",
      "|java+method:///scala/collection/Seq$/apply(scala.collection.Seq)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path)|",
      "|java+method:///scala/collection/mutable/ArrayOps/toSeq()|",
      "|java+method:///scala/collection/Seq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+constructor:///com/nicta/scoobi/impl/io/FileSystems$$anonfun$listDirectPaths$1/FileSystems$$anonfun$listDirectPaths$1(com.nicta.scoobi.impl.io.FileSystems)|",
      "|java+method:///scala/collection/Seq$/apply(scala.collection.Seq)|",
      "|java+method:///com/nicta/scoobi/impl/io/FileSystems/fileSystemForPath(org.apache.hadoop.fs.Path,com.nicta.scoobi.core.ScoobiConfiguration)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path)|",
      "|java+method:///com/nicta/scoobi/impl/io/FileSystems/exists(org.apache.hadoop.fs.Path,com.nicta.scoobi.core.ScoobiConfiguration)|",
      "|java+method:///scala/collection/mutable/ArrayOps/toSeq()|",
      "|java+method:///scala/collection/Seq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "org.scala-lang:scala-library:2.10.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/impl/plan/source/SeqInputFormat/getSplits(org.apache.hadoop.mapreduce.JobContext)|",
    "called": "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
    "v1Body": [
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullObject$default$3()|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullObject$default$4()|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/source/SeqInputFormat$$anonfun$getSplits$1/SeqInputFormat$$anonfun$getSplits$1(com.nicta.scoobi.impl.plan.source.SeqInputFormat,int,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/impl/plan/source/SeqInput$/wireFormatProperty(int)|",
      "|java+method:///com/nicta/scoobi/impl/plan/source/SeqInput$/seqProperty(int)|",
      "|java+method:///com/nicta/scoobi/impl/plan/source/SeqInputFormat/logger()|",
      "|java+method:///com/nicta/scoobi/impl/plan/source/SeqInput$/IdProperty()|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/source/SeqInputFormat$$anonfun$getSplits$2/SeqInputFormat$$anonfun$getSplits$2(com.nicta.scoobi.impl.plan.source.SeqInputFormat)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/source/SeqInputFormat$$anonfun$3/SeqInputFormat$$anonfun$3(com.nicta.scoobi.impl.plan.source.SeqInputFormat,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/impl/util/Compatibility$/getConfiguration(org.apache.hadoop.mapreduce.JobContext)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullObject(org.apache.hadoop.conf.Configuration,java.lang.String,scala.Function1,boolean)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getInt(java.lang.String,int)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///com/nicta/scoobi/impl/collection/Seqs$/split(java.lang.Object,int,scala.Function3,scala.Function1)|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullObject(org.apache.hadoop.conf.Configuration,java.lang.String,boolean)|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/source/SeqInputFormat$$anonfun$2/SeqInputFormat$$anonfun$2(com.nicta.scoobi.impl.plan.source.SeqInputFormat,int)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/collection/JavaConversions$/seqAsJavaList(scala.collection.Seq)|",
      "|java+method:///com/nicta/scoobi/impl/plan/source/SeqInput$/LengthProperty()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/source/SeqInputFormat$$anonfun$4/SeqInputFormat$$anonfun$4(com.nicta.scoobi.impl.plan.source.SeqInputFormat,int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullObject$default$3()|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/source/SeqInputFormat$$anonfun$getSplits$1/SeqInputFormat$$anonfun$getSplits$1(com.nicta.scoobi.impl.plan.source.SeqInputFormat,int,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/impl/plan/source/SeqInput$/wireFormatProperty(int)|",
      "|java+method:///com/nicta/scoobi/impl/plan/source/SeqInput$/seqProperty(int)|",
      "|java+method:///com/nicta/scoobi/impl/plan/source/SeqInputFormat/logger()|",
      "|java+method:///com/nicta/scoobi/impl/plan/source/SeqInput$/IdProperty()|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullObjectDeserialise$default$4()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/source/SeqInputFormat$$anonfun$3/SeqInputFormat$$anonfun$3(com.nicta.scoobi.impl.plan.source.SeqInputFormat,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/impl/util/Compatibility$/getConfiguration(org.apache.hadoop.mapreduce.JobContext)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getInt(java.lang.String,int)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///com/nicta/scoobi/impl/collection/Seqs$/split(java.lang.Object,int,scala.Function3,scala.Function1)|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullObject(org.apache.hadoop.conf.Configuration,java.lang.String,boolean)|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/source/SeqInputFormat$$anonfun$getSplits$2/SeqInputFormat$$anonfun$getSplits$2(com.nicta.scoobi.impl.plan.source.SeqInputFormat)|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullObjectDeserialise(org.apache.hadoop.conf.Configuration,java.lang.String,scala.Function1,boolean)|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/source/SeqInputFormat$$anonfun$2/SeqInputFormat$$anonfun$2(com.nicta.scoobi.impl.plan.source.SeqInputFormat,int)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/collection/JavaConversions$/seqAsJavaList(scala.collection.Seq)|",
      "|java+method:///com/nicta/scoobi/impl/plan/source/SeqInput$/LengthProperty()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/source/SeqInputFormat$$anonfun$4/SeqInputFormat$$anonfun$4(com.nicta.scoobi.impl.plan.source.SeqInputFormat,int)|"
    ],
    "affectedLib": "org.scala-lang:scala-library:2.10.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/lib/LinearAlgebra$/matrixBySparseFunc(com.nicta.scoobi.lib.DMatrix,scala.Function0,scala.Function2,com.nicta.scoobi.core.Reduction,com.nicta.scoobi.core.WireFormat,scala.math.Ordering,com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.WireFormat)|",
    "called": "|java+method:///scala/math/Ordering$/Tuple2(scala.math.Ordering,scala.math.Ordering)|",
    "v1Body": [
      "|java+method:///com/nicta/scoobi/core/WireFormat$/Tuple2Fmt(com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/core/DList/parallelDo(scala.Function2,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///scalaz/Order$/fromScalaOrdering(scala.math.Ordering)|",
      "|java+method:///com/nicta/scoobi/core/DList/by(scala.Function1,com.nicta.scoobi.core.WireFormat)|",
      "|java+constructor:///com/nicta/scoobi/lib/LinearAlgebra$$anonfun$matrixBySparseFunc$1/LinearAlgebra$$anonfun$matrixBySparseFunc$1(scala.Function0,scala.Function2)|",
      "|java+method:///com/nicta/scoobi/Scoobi$/dlistToDMatrix(com.nicta.scoobi.core.DList,com.nicta.scoobi.core.WireFormat,scala.math.Ordering,com.nicta.scoobi.core.WireFormat)|",
      "|java+constructor:///com/nicta/scoobi/lib/LinearAlgebra$$anonfun$7/LinearAlgebra$$anonfun$7()|",
      "|java+method:///com/nicta/scoobi/Scoobi$/OrderGrouping2(scalaz.Order)|",
      "|java+method:///scala/Predef$/conforms()|",
      "|java+method:///scala/math/Ordering$/Tuple2(scala.math.Ordering,scala.math.Ordering)|",
      "|java+method:///com/nicta/scoobi/Scoobi$/dmatrixToDlist(com.nicta.scoobi.lib.DMatrix,com.nicta.scoobi.core.WireFormat,scala.math.Ordering,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/core/DList/combine(com.nicta.scoobi.core.Reduction,scala.Predef$$less$colon$less,com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/core/DList/groupByKey(scala.Predef$$less$colon$less,com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.Grouping,com.nicta.scoobi.core.WireFormat)|"
    ],
    "v2Body": [
      "|java+method:///com/nicta/scoobi/core/WireFormat$/Tuple2Fmt(com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/core/DList/parallelDo(scala.Function2,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/core/DList/by(scala.Function1,com.nicta.scoobi.core.WireFormat)|",
      "|java+constructor:///com/nicta/scoobi/lib/LinearAlgebra$$anonfun$matrixBySparseFunc$1/LinearAlgebra$$anonfun$matrixBySparseFunc$1(scala.Function0,scala.Function2)|",
      "|java+method:///com/nicta/scoobi/Scoobi$/OrderingGrouping(scala.math.Ordering)|",
      "|java+method:///com/nicta/scoobi/Scoobi$/dlistToDMatrix(com.nicta.scoobi.core.DList,com.nicta.scoobi.core.WireFormat,scala.math.Ordering,com.nicta.scoobi.core.WireFormat)|",
      "|java+constructor:///com/nicta/scoobi/lib/LinearAlgebra$$anonfun$7/LinearAlgebra$$anonfun$7()|",
      "|java+method:///scala/Predef$/conforms()|",
      "|java+method:///scala/math/Ordering$/Tuple2(scala.math.Ordering,scala.math.Ordering)|",
      "|java+method:///com/nicta/scoobi/Scoobi$/dmatrixToDlist(com.nicta.scoobi.lib.DMatrix,com.nicta.scoobi.core.WireFormat,scala.math.Ordering,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/core/DList/combine(com.nicta.scoobi.core.Reduction,scala.Predef$$less$colon$less,com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/core/DList/groupByKey(scala.Predef$$less$colon$less,com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.Grouping,com.nicta.scoobi.core.WireFormat)|"
    ],
    "affectedLib": "org.scala-lang:scala-library:2.10.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/impl/plan/mscr/MscrOutputChannel$$anonfun$collectSuccessFile$1$$anonfun$apply$6/apply(java.lang.Object)|",
    "called": "|java+method:///scala/runtime/BoxesRunTime/boxToBoolean(boolean)|",
    "v1Body": [
      "|java+method:///com/nicta/scoobi/impl/plan/mscr/MscrOutputChannel$$anonfun$collectSuccessFile$1$$anonfun$apply$6/apply(org.apache.hadoop.fs.Path)|"
    ],
    "v2Body": [
      "|java+method:///scala/runtime/BoxesRunTime/boxToBoolean(boolean)|",
      "|java+method:///com/nicta/scoobi/impl/plan/mscr/MscrOutputChannel$$anonfun$collectSuccessFile$1$$anonfun$apply$6/apply(org.apache.hadoop.fs.Path)|"
    ],
    "affectedLib": "org.scala-lang:scala-library:2.10.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/lib/LinearAlgebra$/matrixByMatrix(com.nicta.scoobi.lib.DMatrix,com.nicta.scoobi.lib.DMatrix,scala.Function2,com.nicta.scoobi.core.Reduction,com.nicta.scoobi.core.WireFormat,scala.math.Ordering,com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.WireFormat)|",
    "called": "|java+method:///scala/math/Ordering$/Tuple2(scala.math.Ordering,scala.math.Ordering)|",
    "v1Body": [
      "|java+constructor:///com/nicta/scoobi/lib/LinearAlgebra$$anonfun$11/LinearAlgebra$$anonfun$11()|",
      "|java+method:///com/nicta/scoobi/core/DList/parallelDo(scala.Function2,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///scalaz/Order$/fromScalaOrdering(scala.math.Ordering)|",
      "|java+method:///com/nicta/scoobi/core/DList/by(scala.Function1,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/Scoobi$/dlistToDMatrix(com.nicta.scoobi.core.DList,com.nicta.scoobi.core.WireFormat,scala.math.Ordering,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/Scoobi$/OrderGrouping2(scalaz.Order)|",
      "|java+constructor:///com/nicta/scoobi/lib/LinearAlgebra$$anonfun$10/LinearAlgebra$$anonfun$10()|",
      "|java+method:///com/nicta/scoobi/core/WireFormat$/Tuple2Fmt(com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.WireFormat)|",
      "|java+constructor:///com/nicta/scoobi/lib/LinearAlgebra$$anonfun$12/LinearAlgebra$$anonfun$12()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/math/Ordering$/Tuple2(scala.math.Ordering,scala.math.Ordering)|",
      "|java+method:///com/nicta/scoobi/Scoobi$/dmatrixToDlist(com.nicta.scoobi.lib.DMatrix,com.nicta.scoobi.core.WireFormat,scala.math.Ordering,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/core/DList/combine(com.nicta.scoobi.core.Reduction,scala.Predef$$less$colon$less,com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/core/DList/$plus$plus(scala.collection.Seq)|",
      "|java+method:///com/nicta/scoobi/core/DList/groupByKey(scala.Predef$$less$colon$less,com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.Grouping,com.nicta.scoobi.core.WireFormat)|",
      "|java+constructor:///com/nicta/scoobi/lib/LinearAlgebra$$anonfun$matrixByMatrix$1/LinearAlgebra$$anonfun$matrixByMatrix$1(scala.Function2)|",
      "|java+constructor:///com/nicta/scoobi/lib/LinearAlgebra$$anonfun$9/LinearAlgebra$$anonfun$9()|",
      "|java+method:///com/nicta/scoobi/core/DList/map(scala.Function1,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/core/WireFormat$/EitherFmt(com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///scala/Predef$/conforms()|"
    ],
    "v2Body": [
      "|java+constructor:///com/nicta/scoobi/lib/LinearAlgebra$$anonfun$11/LinearAlgebra$$anonfun$11()|",
      "|java+method:///com/nicta/scoobi/core/DList/parallelDo(scala.Function2,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/core/DList/by(scala.Function1,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/Scoobi$/OrderingGrouping(scala.math.Ordering)|",
      "|java+method:///com/nicta/scoobi/Scoobi$/dlistToDMatrix(com.nicta.scoobi.core.DList,com.nicta.scoobi.core.WireFormat,scala.math.Ordering,com.nicta.scoobi.core.WireFormat)|",
      "|java+constructor:///com/nicta/scoobi/lib/LinearAlgebra$$anonfun$10/LinearAlgebra$$anonfun$10()|",
      "|java+method:///com/nicta/scoobi/core/WireFormat$/Tuple2Fmt(com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.WireFormat)|",
      "|java+constructor:///com/nicta/scoobi/lib/LinearAlgebra$$anonfun$12/LinearAlgebra$$anonfun$12()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/math/Ordering$/Tuple2(scala.math.Ordering,scala.math.Ordering)|",
      "|java+method:///com/nicta/scoobi/Scoobi$/dmatrixToDlist(com.nicta.scoobi.lib.DMatrix,com.nicta.scoobi.core.WireFormat,scala.math.Ordering,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/core/DList/combine(com.nicta.scoobi.core.Reduction,scala.Predef$$less$colon$less,com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/core/DList/$plus$plus(scala.collection.Seq)|",
      "|java+method:///com/nicta/scoobi/core/DList/groupByKey(scala.Predef$$less$colon$less,com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.Grouping,com.nicta.scoobi.core.WireFormat)|",
      "|java+constructor:///com/nicta/scoobi/lib/LinearAlgebra$$anonfun$matrixByMatrix$1/LinearAlgebra$$anonfun$matrixByMatrix$1(scala.Function2)|",
      "|java+constructor:///com/nicta/scoobi/lib/LinearAlgebra$$anonfun$9/LinearAlgebra$$anonfun$9()|",
      "|java+method:///com/nicta/scoobi/core/DList/map(scala.Function1,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/core/WireFormat$/EitherFmt(com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///scala/Predef$/conforms()|"
    ],
    "affectedLib": "org.scala-lang:scala-library:2.10.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/lib/LinearAlgebra$/matrixByMatrixTimeoutWorkaround(com.nicta.scoobi.lib.DMatrix,com.nicta.scoobi.lib.DMatrix,scala.Function2,com.nicta.scoobi.core.Reduction,com.nicta.scoobi.core.WireFormat,scala.math.Ordering,com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.WireFormat)|",
    "called": "|java+method:///scala/math/Ordering$/Tuple2(scala.math.Ordering,scala.math.Ordering)|",
    "v1Body": [
      "|java+method:///com/nicta/scoobi/core/WireFormat$/Tuple2Fmt(com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///scalaz/Order$/fromScalaOrdering(scala.math.Ordering)|",
      "|java+method:///com/nicta/scoobi/core/DList/by(scala.Function1,com.nicta.scoobi.core.WireFormat)|",
      "|java+constructor:///com/nicta/scoobi/lib/LinearAlgebra$$anonfun$matrixByMatrixTimeoutWorkaround$3/LinearAlgebra$$anonfun$matrixByMatrixTimeoutWorkaround$3(scala.Function2)|",
      "|java+method:///com/nicta/scoobi/Scoobi$/dlistToRelational(com.nicta.scoobi.core.DList,com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.Grouping,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/Scoobi$/dlistToDMatrix(com.nicta.scoobi.core.DList,com.nicta.scoobi.core.WireFormat,scala.math.Ordering,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/Scoobi$/OrderGrouping2(scalaz.Order)|",
      "|java+method:///scala/Predef$/conforms()|",
      "|java+method:///scala/math/Ordering$/Tuple2(scala.math.Ordering,scala.math.Ordering)|",
      "|java+method:///com/nicta/scoobi/Scoobi$/dmatrixToDlist(com.nicta.scoobi.lib.DMatrix,com.nicta.scoobi.core.WireFormat,scala.math.Ordering,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/core/DList/combine(com.nicta.scoobi.core.Reduction,scala.Predef$$less$colon$less,com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/lib/Relational/join(com.nicta.scoobi.core.DList,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/core/DList/groupByKey(scala.Predef$$less$colon$less,com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.Grouping,com.nicta.scoobi.core.WireFormat)|",
      "|java+constructor:///com/nicta/scoobi/lib/LinearAlgebra$$anonfun$matrixByMatrixTimeoutWorkaround$2/LinearAlgebra$$anonfun$matrixByMatrixTimeoutWorkaround$2()|",
      "|java+constructor:///com/nicta/scoobi/lib/LinearAlgebra$$anonfun$matrixByMatrixTimeoutWorkaround$1/LinearAlgebra$$anonfun$matrixByMatrixTimeoutWorkaround$1()|",
      "|java+method:///com/nicta/scoobi/core/DList/map(scala.Function1,com.nicta.scoobi.core.WireFormat)|"
    ],
    "v2Body": [
      "|java+method:///com/nicta/scoobi/core/WireFormat$/Tuple2Fmt(com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/core/DList/by(scala.Function1,com.nicta.scoobi.core.WireFormat)|",
      "|java+constructor:///com/nicta/scoobi/lib/LinearAlgebra$$anonfun$matrixByMatrixTimeoutWorkaround$3/LinearAlgebra$$anonfun$matrixByMatrixTimeoutWorkaround$3(scala.Function2)|",
      "|java+method:///com/nicta/scoobi/Scoobi$/OrderingGrouping(scala.math.Ordering)|",
      "|java+method:///com/nicta/scoobi/Scoobi$/dlistToRelational(com.nicta.scoobi.core.DList,com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.Grouping,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/Scoobi$/dlistToDMatrix(com.nicta.scoobi.core.DList,com.nicta.scoobi.core.WireFormat,scala.math.Ordering,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///scala/Predef$/conforms()|",
      "|java+method:///scala/math/Ordering$/Tuple2(scala.math.Ordering,scala.math.Ordering)|",
      "|java+method:///com/nicta/scoobi/Scoobi$/dmatrixToDlist(com.nicta.scoobi.lib.DMatrix,com.nicta.scoobi.core.WireFormat,scala.math.Ordering,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/core/DList/combine(com.nicta.scoobi.core.Reduction,scala.Predef$$less$colon$less,com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/lib/Relational/join(com.nicta.scoobi.core.DList,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/core/DList/groupByKey(scala.Predef$$less$colon$less,com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.Grouping,com.nicta.scoobi.core.WireFormat)|",
      "|java+constructor:///com/nicta/scoobi/lib/LinearAlgebra$$anonfun$matrixByMatrixTimeoutWorkaround$2/LinearAlgebra$$anonfun$matrixByMatrixTimeoutWorkaround$2()|",
      "|java+constructor:///com/nicta/scoobi/lib/LinearAlgebra$$anonfun$matrixByMatrixTimeoutWorkaround$1/LinearAlgebra$$anonfun$matrixByMatrixTimeoutWorkaround$1()|",
      "|java+method:///com/nicta/scoobi/core/DList/map(scala.Function1,com.nicta.scoobi.core.WireFormat)|"
    ],
    "affectedLib": "org.scala-lang:scala-library:2.10.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullObject(org.apache.hadoop.fs.Path%5B%5D,org.apache.hadoop.fs.Path)|",
    "called": "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+constructor:///com/nicta/scoobi/impl/util/DistCache$$anonfun$pullObject$2/DistCache$$anonfun$pullObject$2()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullPath$default$4()|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|",
      "|java+method:///scala/collection/mutable/ArrayOps/toSeq()|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullPath(scala.collection.Seq,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration,boolean,scala.Function1)|"
    ],
    "v2Body": [
      "|java+constructor:///com/nicta/scoobi/impl/util/DistCache$$anonfun$pullObject$2/DistCache$$anonfun$pullObject$2()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullFromPath(scala.collection.Seq,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration,boolean,scala.Function1)|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullFromPath$default$4()|",
      "|java+method:///scala/collection/mutable/ArrayOps/toSeq()|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "org.scala-lang:scala-library:2.10.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/impl/io/Files$$anonfun$moveTo$2/apply(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
    "called": "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+constructor:///com/nicta/scoobi/impl/io/Files$$anonfun$moveTo$2$$anonfun$apply$1/Files$$anonfun$moveTo$2$$anonfun$apply$1(com.nicta.scoobi.impl.io.Files$$anonfun$moveTo$2,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
      "|java+method:///com/nicta/scoobi/impl/control/Exceptions$/tryOk(scala.Function0)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///com/nicta/scoobi/impl/io/Files/dirPath(java.lang.String)|",
      "|java+method:///com/nicta/scoobi/impl/io/Files/pathExists(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///com/nicta/scoobi/impl/io/Files/pathExists$default$2()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/hadoop/fs/FileUtil/copy(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,boolean,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToBoolean(boolean)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///com/nicta/scoobi/impl/io/Files/com$nicta$scoobi$impl$io$Files$$logger()|",
      "|java+method:///com/nicta/scoobi/impl/io/Files/fileSystem(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///com/nicta/scoobi/impl/io/Files/sameFileSystem(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.FileSystem)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/makeQualified(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/mkdirs(org.apache.hadoop.fs.Path)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+constructor:///com/nicta/scoobi/impl/io/Files$$anonfun$moveTo$2$$anonfun$apply$1/Files$$anonfun$moveTo$2$$anonfun$apply$1(com.nicta.scoobi.impl.io.Files$$anonfun$moveTo$2,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///com/nicta/scoobi/impl/io/Files/dirPath(java.lang.String)|",
      "|java+method:///com/nicta/scoobi/impl/io/Files/pathExists$default$2()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///com/nicta/scoobi/impl/util/Compatibility$/isDirectory(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///scala/collection/immutable/List/contains(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///com/nicta/scoobi/impl/control/Exceptions$/tryOk(scala.Function0)|",
      "|java+method:///com/nicta/scoobi/impl/util/Compatibility$/getScheme(org.apache.hadoop.fs.FileSystem)|",
      "|java+method:///com/nicta/scoobi/impl/io/Files/pathExists(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/String/toLowerCase()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToBoolean(boolean)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///com/nicta/scoobi/impl/io/Files/com$nicta$scoobi$impl$io$Files$$logger()|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///com/nicta/scoobi/impl/io/Files/fileSystem(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///com/nicta/scoobi/impl/io/Files/sameFileSystem(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.FileSystem)|",
      "|java+method:///com/nicta/scoobi/impl/io/Files/moveToS3(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/net/URI/getPath()|",
      "|java+method:///org/apache/hadoop/fs/FileUtil/copy(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,boolean,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///scala/collection/immutable/List$/apply(scala.collection.Seq)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/makeQualified(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/mkdirs(org.apache.hadoop.fs.Path)|"
    ],
    "affectedLib": "org.scala-lang:scala-library:2.10.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/core/DList$$anon$5/groupCompare(int,int)|",
    "called": "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
    "v1Body": [
      "|java+method:///scalaz/Order$/fromScalaOrdering(scala.math.Ordering)|",
      "|java+method:///scalaz/Order/order(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/Predef$/implicitly(java.lang.Object)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|"
    ],
    "v2Body": [
      "|java+method:///scalaz/Order$/fromScalaOrdering(scala.math.Ordering)|",
      "|java+method:///scalaz/Order/order(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|"
    ],
    "affectedLib": "org.scala-lang:scala-library:2.10.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/impl/io/FileSystems$class/listPaths(com.nicta.scoobi.impl.io.FileSystems,org.apache.hadoop.fs.Path,com.nicta.scoobi.core.ScoobiConfiguration)|",
    "called": "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///com/nicta/scoobi/impl/io/FileSystems/fileSystem(com.nicta.scoobi.core.ScoobiConfiguration)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///com/nicta/scoobi/impl/io/FileSystems$$anonfun$listPaths$1/FileSystems$$anonfun$listPaths$1(com.nicta.scoobi.impl.io.FileSystems,com.nicta.scoobi.core.ScoobiConfiguration)|",
      "|java+method:///scala/collection/Seq/flatMap(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///scala/collection/mutable/ArrayOps/toSeq()|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/collection/Seq/partition(scala.Function1)|",
      "|java+constructor:///com/nicta/scoobi/impl/io/FileSystems$$anonfun$2/FileSystems$$anonfun$2(com.nicta.scoobi.impl.io.FileSystems)|",
      "|java+method:///scala/collection/Seq/$plus$plus(scala.collection.GenTraversableOnce,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/collection/Seq$/apply(scala.collection.Seq)|",
      "|java+constructor:///com/nicta/scoobi/impl/io/FileSystems$$anonfun$3/FileSystems$$anonfun$3(com.nicta.scoobi.impl.io.FileSystems,org.apache.hadoop.fs.FileSystem)|",
      "|java+method:///scala/collection/Seq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|"
    ],
    "v2Body": [
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///com/nicta/scoobi/impl/io/FileSystems/fileSystemForPath(org.apache.hadoop.fs.Path,com.nicta.scoobi.core.ScoobiConfiguration)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///com/nicta/scoobi/impl/io/FileSystems$$anonfun$listPaths$1/FileSystems$$anonfun$listPaths$1(com.nicta.scoobi.impl.io.FileSystems,com.nicta.scoobi.core.ScoobiConfiguration)|",
      "|java+method:///scala/collection/Seq/flatMap(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///scala/collection/mutable/ArrayOps/toSeq()|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/collection/Seq/partition(scala.Function1)|",
      "|java+constructor:///com/nicta/scoobi/impl/io/FileSystems$$anonfun$2/FileSystems$$anonfun$2(com.nicta.scoobi.impl.io.FileSystems)|",
      "|java+method:///scala/collection/Seq/$plus$plus(scala.collection.GenTraversableOnce,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/collection/Seq$/apply(scala.collection.Seq)|",
      "|java+constructor:///com/nicta/scoobi/impl/io/FileSystems$$anonfun$3/FileSystems$$anonfun$3(com.nicta.scoobi.impl.io.FileSystems,org.apache.hadoop.fs.FileSystem)|",
      "|java+method:///scala/collection/Seq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|"
    ],
    "affectedLib": "org.scala-lang:scala-library:2.10.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/application/HadoopLogFactory/commonsLevel(java.lang.String)|",
    "called": "|java+method:///scala/runtime/BoxesRunTime/unboxToInt(java.lang.Object)|",
    "v1Body": [
      "|java+method:///scala/collection/immutable/Map/getOrElse(java.lang.Object,scala.Function0)|",
      "|java+method:///com/nicta/scoobi/application/HadoopLogFactory$/levelsMappings()|",
      "|java+constructor:///com/nicta/scoobi/application/HadoopLogFactory$$anonfun$commonsLevel$1/HadoopLogFactory$$anonfun$commonsLevel$1(com.nicta.scoobi.application.HadoopLogFactory)|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToInt(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///scala/collection/immutable/Map/getOrElse(java.lang.Object,scala.Function0)|",
      "|java+method:///com/nicta/scoobi/application/HadoopLogFactory$/levelsMappings()|",
      "|java+constructor:///com/nicta/scoobi/application/HadoopLogFactory$$anonfun$commonsLevel$1/HadoopLogFactory$$anonfun$commonsLevel$1(com.nicta.scoobi.application.HadoopLogFactory)|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToInt(java.lang.Object)|",
      "|java+constructor:///com/nicta/scoobi/application/Levels$Level/Levels$Level(java.lang.String)|"
    ],
    "affectedLib": "org.scala-lang:scala-library:2.10.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/impl/plan/comp/GraphNodes$$anonfun$com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable$1/apply(org.kiama.attribution.Attributable)|",
    "called": "|java+method:///scala/Predef$DummyImplicit$/dummyImplicit()|",
    "v1Body": [
      "|java+method:///scalaz/Scalaz$/mapMonoid(scalaz.Semigroup)|",
      "|java+method:///scala/package$/Vector()|",
      "|java+method:///org/kiama/attribution/AttributionCore$CachedAttribute/apply(java.lang.Object)|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/comp/GraphNodes$$anonfun$com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable$1$$anonfun$apply$5/GraphNodes$$anonfun$com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable$1$$anonfun$apply$5(com.nicta.scoobi.impl.plan.comp.GraphNodes$$anonfun$com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable$1,org.kiama.attribution.Attributable)|",
      "|java+method:///scalaz/syntax/FoldableOps/foldMap(scala.Function1,scalaz.Monoid)|",
      "|java+method:///scalaz/Scalaz$/ToFoldableOps(java.lang.Object,scalaz.Foldable)|",
      "|java+method:///scalaz/Scalaz$/setMonoid()|",
      "|java+method:///scala/collection/immutable/Vector$/apply(scala.collection.Seq)|",
      "|java+method:///com/nicta/scoobi/impl/plan/comp/GraphNodes/children()|",
      "|java+method:///scalaz/Scalaz$/vectorInstance()|"
    ],
    "v2Body": [
      "|java+method:///scala/package$/Vector()|",
      "|java+method:///org/kiama/attribution/AttributionCore$CachedAttribute/apply(java.lang.Object)|",
      "|java+method:///scala/Predef$DummyImplicit$/dummyImplicit()|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/comp/GraphNodes$$anonfun$com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable$1$$anonfun$apply$5/GraphNodes$$anonfun$com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable$1$$anonfun$apply$5(com.nicta.scoobi.impl.plan.comp.GraphNodes$$anonfun$com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable$1,org.kiama.attribution.Attributable)|",
      "|java+method:///scalaz/syntax/FoldableOps/foldMap(scala.Function1,scalaz.Monoid)|",
      "|java+method:///scalaz/Scalaz$/mapMonoid(java.lang.Object,scalaz.Semigroup)|",
      "|java+method:///scalaz/Scalaz$/ToFoldableOps(java.lang.Object,scalaz.Foldable)|",
      "|java+method:///scalaz/Scalaz$/setMonoid()|",
      "|java+method:///scala/collection/immutable/Vector$/apply(scala.collection.Seq)|",
      "|java+method:///com/nicta/scoobi/impl/plan/comp/GraphNodes/children()|",
      "|java+method:///scalaz/Scalaz$/vectorInstance()|"
    ],
    "affectedLib": "org.scala-lang:scala-library:2.10.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/application/HadoopLogFactory$/levelsMappings$lzycompute()|",
    "called": "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
    "v1Body": [
      "|java+method:///scala/collection/immutable/Map$/apply(scala.collection.Seq)|",
      "|java+method:///scala/Predef$/Map()|",
      "|java+method:///com/nicta/scoobi/application/HadoopLogFactory$/OFF()|",
      "|java+method:///com/nicta/scoobi/application/HadoopLogFactory$/WARN()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/Predef$ArrowAssoc$/$minus$greater$extension(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///com/nicta/scoobi/application/HadoopLogFactory$/ALL()|",
      "|java+method:///com/nicta/scoobi/application/HadoopLogFactory$/FATAL()|",
      "|java+method:///com/nicta/scoobi/application/HadoopLogFactory$/TRACE()|",
      "|java+method:///com/nicta/scoobi/application/HadoopLogFactory$/ERROR()|",
      "|java+method:///scala/Predef$/any2ArrowAssoc(java.lang.Object)|",
      "|java+method:///com/nicta/scoobi/application/HadoopLogFactory$/INFO()|"
    ],
    "v2Body": [
      "|java+method:///scala/collection/immutable/Map$/apply(scala.collection.Seq)|",
      "|java+method:///scala/Predef$/Map()|",
      "|java+method:///com/nicta/scoobi/application/HadoopLogFactory$/OFF()|",
      "|java+method:///com/nicta/scoobi/application/HadoopLogFactory$/WARN()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/Predef$ArrowAssoc$/$minus$greater$extension(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///com/nicta/scoobi/application/HadoopLogFactory$/ALL()|",
      "|java+method:///com/nicta/scoobi/application/HadoopLogFactory$/FATAL()|",
      "|java+method:///com/nicta/scoobi/application/HadoopLogFactory$/TRACE()|",
      "|java+constructor:///com/nicta/scoobi/application/Levels$Level/Levels$Level(java.lang.String)|",
      "|java+method:///com/nicta/scoobi/application/HadoopLogFactory$/ERROR()|",
      "|java+method:///scala/Predef$/any2ArrowAssoc(java.lang.Object)|",
      "|java+method:///com/nicta/scoobi/application/HadoopLogFactory$/INFO()|"
    ],
    "affectedLib": "org.scala-lang:scala-library:2.10.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/io/sequence/CheckedSeqSource$$anonfun$checkInputPathType$1/apply(org.apache.hadoop.fs.Path)|",
    "called": "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
    "v1Body": [
      "|java+method:///scala/reflect/Manifest/runtimeClass()|",
      "|java+method:///com/nicta/scoobi/core/ScoobiConfiguration/configuration()|",
      "|java+method:///com/nicta/scoobi/core/WireFormat$/manifest(scala.reflect.Manifest)|",
      "|java+method:///com/nicta/scoobi/impl/util/Compatibility$/newSequenceFileReader(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/getKeyClass()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/close()|",
      "|java+method:///com/nicta/scoobi/io/sequence/CheckedSeqSource/com$nicta$scoobi$io$sequence$CheckedSeqSource$$checkType(java.lang.Class,java.lang.Class,java.lang.String)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/getValueClass()|"
    ],
    "v2Body": [
      "|java+method:///com/nicta/scoobi/impl/util/Compatibility$/newSequenceFileReader(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///com/nicta/scoobi/io/sequence/CheckedSeqSource/com$nicta$scoobi$io$sequence$CheckedSeqSource$$logger()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+constructor:///com/nicta/scoobi/io/sequence/CheckedSeqSource$$anonfun$checkInputPathType$1$$anonfun$apply$1/CheckedSeqSource$$anonfun$checkInputPathType$1$$anonfun$apply$1(com.nicta.scoobi.io.sequence.CheckedSeqSource$$anonfun$checkInputPathType$1)|",
      "|java+method:///com/nicta/scoobi/core/ScoobiConfiguration/configuration()|",
      "|java+method:///scala/Option/foreach(scala.Function1)|"
    ],
    "affectedLib": "org.scala-lang:scala-library:2.10.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullPath(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,boolean,scala.Function1)|",
    "called": "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/localCacheFiles(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///scala/collection/mutable/ArrayOps/$plus$plus(scala.collection.GenTraversableOnce,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/cacheFiles(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///scala/Predef$DummyImplicit$/dummyImplicit()|",
      "|java+method:///scala/Array$/fallbackCanBuildFrom(scala.Predef$DummyImplicit)|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullPath(scala.collection.Seq,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration,boolean,scala.Function1)|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/localCacheFiles(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///scala/collection/mutable/ArrayOps/$plus$plus(scala.collection.GenTraversableOnce,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/cacheFiles(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///scala/Predef$DummyImplicit$/dummyImplicit()|",
      "|java+method:///scala/Array$/fallbackCanBuildFrom(scala.Predef$DummyImplicit)|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullFromPath(scala.collection.Seq,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration,boolean,scala.Function1)|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "org.scala-lang:scala-library:2.10.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/impl/mapreducer/MscrMapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
    "v1Body": [
      "|java+constructor:///com/nicta/scoobi/impl/mapreducer/ChannelOutputFormat/ChannelOutputFormat(org.apache.hadoop.mapreduce.TaskAttemptContext)|",
      "|java+method:///org/apache/hadoop/util/ReflectionUtils/newInstance(java.lang.Class,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///com/nicta/scoobi/impl/reflect/ClasspathDiagnostics$/logInfo(org.apache.commons.logging.Log)|",
      "|java+method:///com/nicta/scoobi/impl/mapreducer/MscrMapper/countValuesPerMapper_$eq(boolean)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///com/nicta/scoobi/impl/Configurations$/MAPPER_VALUES_COUNTER()|",
      "|java+method:///com/nicta/scoobi/impl/mapreducer/MscrMapper/tv_$eq(com.nicta.scoobi.impl.rtt.TaggedValue)|",
      "|java+constructor:///com/nicta/scoobi/impl/mapreducer/MscrMapper$$anonfun$1/MscrMapper$$anonfun$1(com.nicta.scoobi.impl.mapreducer.MscrMapper)|",
      "|java+method:///com/nicta/scoobi/impl/mapreducer/MscrMapper/countValuesPerMapper()|",
      "|java+method:///com/nicta/scoobi/impl/mapreducer/MscrMapper/allInputChannels_$eq(com.nicta.scoobi.impl.plan.mscr.InputChannels)|",
      "|java+constructor:///com/nicta/scoobi/impl/mapreducer/MscrMapper$$anonfun$setup$3/MscrMapper$$anonfun$setup$3(com.nicta.scoobi.impl.mapreducer.MscrMapper)|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullObject(org.apache.hadoop.conf.Configuration,java.lang.String,boolean)|",
      "|java+method:///com/nicta/scoobi/impl/mapreducer/MscrMapper/logger()|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullObject$default$3()|",
      "|java+constructor:///com/nicta/scoobi/impl/mapreducer/MscrMapper$$anonfun$setup$2/MscrMapper$$anonfun$setup$2(com.nicta.scoobi.impl.mapreducer.MscrMapper)|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///com/nicta/scoobi/impl/mapreducer/MscrMapper/allOutputChannels_$eq(com.nicta.scoobi.impl.plan.mscr.OutputChannels)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskAttemptID/getTaskID()|",
      "|java+method:///scala/collection/Seq/exists(scala.Function1)|",
      "|java+method:///com/nicta/scoobi/impl/Configurations$/COUNT_MAPPER_VALUES()|",
      "|java+constructor:///com/nicta/scoobi/impl/mapreducer/MscrMapper$$anonfun$setup$1/MscrMapper$$anonfun$setup$1(com.nicta.scoobi.impl.mapreducer.MscrMapper)|",
      "|java+method:///com/nicta/scoobi/impl/mapreducer/MscrMapper/hasBypassOutput_$eq(boolean)|",
      "|java+constructor:///com/nicta/scoobi/impl/mapreducer/MscrMapper$$anonfun$setup$4/MscrMapper$$anonfun$setup$4(com.nicta.scoobi.impl.mapreducer.MscrMapper,com.nicta.scoobi.impl.plan.mscr.OutputChannels)|",
      "|java+method:///java/net/InetAddress/getLocalHost()|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/mscr/OutputChannels/OutputChannels(scala.collection.Seq)|",
      "|java+constructor:///com/nicta/scoobi/impl/mapreducer/CompositeInputOutputContext/CompositeInputOutputContext(org.apache.hadoop.mapreduce.TaskInputOutputContext,com.nicta.scoobi.impl.plan.mscr.OutputChannels,com.nicta.scoobi.impl.mapreducer.ChannelOutputFormat)|",
      "|java+method:///com/nicta/scoobi/impl/plan/mscr/OutputChannels/setup(com.nicta.scoobi.impl.mapreducer.ChannelOutputFormat,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///scala/collection/Seq/foreach(scala.Function1)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getTaskAttemptID()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///com/nicta/scoobi/impl/mapreducer/MscrMapper/taggedInputChannels_$eq(scala.collection.Seq)|",
      "|java+method:///com/nicta/scoobi/impl/mapreducer/TaggedInputSplit/channel()|",
      "|java+method:///com/nicta/scoobi/impl/mapreducer/MscrMapper/allInputChannels()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getMapOutputValueClass()|",
      "|java+method:///com/nicta/scoobi/impl/plan/mscr/InputChannels/channelsForSource(int)|",
      "|java+method:///org/apache/commons/logging/Log/info(java.lang.Object)|",
      "|java+method:///com/nicta/scoobi/impl/mapreducer/MscrMapper/taggedInputChannels()|",
      "|java+method:///com/nicta/scoobi/impl/mapreducer/MscrMapper/tk_$eq(com.nicta.scoobi.impl.rtt.TaggedKey)|",
      "|java+method:///com/nicta/scoobi/impl/mapreducer/MscrMapper/com$nicta$scoobi$impl$mapreducer$MscrMapper$$compositeContext_$eq(com.nicta.scoobi.impl.mapreducer.CompositeInputOutputContext)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///com/nicta/scoobi/impl/mapreducer/MscrMapper/allOutputChannels()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/collection/Seq/flatMap(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///java/net/InetAddress/getHostName()|",
      "|java+method:///com/nicta/scoobi/impl/mapreducer/MscrMapper/channelOutputFormat_$eq(com.nicta.scoobi.impl.mapreducer.ChannelOutputFormat)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getCounter(java.lang.String,java.lang.String)|",
      "|java+method:///com/nicta/scoobi/impl/ScoobiConfigurationImpl/jobStep()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///com/nicta/scoobi/impl/mapreducer/MscrMapper/counter_$eq(org.apache.hadoop.mapreduce.Counter)|",
      "|java+constructor:///com/nicta/scoobi/impl/mapreducer/MscrMapper$$anonfun$setup$6/MscrMapper$$anonfun$setup$6(com.nicta.scoobi.impl.mapreducer.MscrMapper,org.apache.hadoop.mapreduce.MapContext)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getBoolean(java.lang.String,boolean)|",
      "|java+constructor:///com/nicta/scoobi/impl/mapreducer/MscrMapper$$anonfun$setup$5/MscrMapper$$anonfun$setup$5(com.nicta.scoobi.impl.mapreducer.MscrMapper)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskID/getId()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getInputSplit()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///com/nicta/scoobi/impl/mapreducer/MscrMapper/channelOutputFormat()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///com/nicta/scoobi/impl/ScoobiConfiguration$/apply(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getMapOutputKeyClass()|"
    ],
    "v2Body": [
      "|java+constructor:///com/nicta/scoobi/impl/mapreducer/ChannelOutputFormat/ChannelOutputFormat(org.apache.hadoop.mapreduce.TaskAttemptContext)|",
      "|java+method:///org/apache/hadoop/util/ReflectionUtils/newInstance(java.lang.Class,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///com/nicta/scoobi/impl/reflect/ClasspathDiagnostics$/logInfo(org.apache.commons.logging.Log)|",
      "|java+method:///com/nicta/scoobi/impl/mapreducer/MscrMapper/countValuesPerMapper_$eq(boolean)|",
      "|java+method:///com/nicta/scoobi/impl/Configurations$/MAPPER_VALUES_COUNTER()|",
      "|java+method:///com/nicta/scoobi/impl/mapreducer/MscrMapper/tv_$eq(com.nicta.scoobi.impl.rtt.TaggedValue)|",
      "|java+constructor:///com/nicta/scoobi/impl/mapreducer/MscrMapper$$anonfun$1/MscrMapper$$anonfun$1(com.nicta.scoobi.impl.mapreducer.MscrMapper)|",
      "|java+method:///com/nicta/scoobi/impl/mapreducer/MscrMapper/countValuesPerMapper()|",
      "|java+method:///com/nicta/scoobi/impl/mapreducer/MscrMapper/allInputChannels_$eq(com.nicta.scoobi.impl.plan.mscr.InputChannels)|",
      "|java+constructor:///com/nicta/scoobi/impl/mapreducer/MscrMapper$$anonfun$setup$3/MscrMapper$$anonfun$setup$3(com.nicta.scoobi.impl.mapreducer.MscrMapper)|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullObject(org.apache.hadoop.conf.Configuration,java.lang.String,boolean)|",
      "|java+method:///com/nicta/scoobi/impl/mapreducer/MscrMapper/logger()|",
      "|java+method:///com/nicta/scoobi/impl/util/DistCache$/pullObject$default$3()|",
      "|java+constructor:///com/nicta/scoobi/impl/mapreducer/MscrMapper$$anonfun$setup$2/MscrMapper$$anonfun$setup$2(com.nicta.scoobi.impl.mapreducer.MscrMapper)|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///com/nicta/scoobi/impl/mapreducer/MscrMapper/allOutputChannels_$eq(com.nicta.scoobi.impl.plan.mscr.OutputChannels)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskAttemptID/getTaskID()|",
      "|java+method:///scala/collection/Seq/exists(scala.Function1)|",
      "|java+method:///com/nicta/scoobi/impl/Configurations$/COUNT_MAPPER_VALUES()|",
      "|java+constructor:///com/nicta/scoobi/impl/mapreducer/MscrMapper$$anonfun$setup$1/MscrMapper$$anonfun$setup$1(com.nicta.scoobi.impl.mapreducer.MscrMapper)|",
      "|java+method:///com/nicta/scoobi/impl/mapreducer/MscrMapper/hasBypassOutput_$eq(boolean)|",
      "|java+constructor:///com/nicta/scoobi/impl/mapreducer/MscrMapper$$anonfun$setup$4/MscrMapper$$anonfun$setup$4(com.nicta.scoobi.impl.mapreducer.MscrMapper,com.nicta.scoobi.impl.plan.mscr.OutputChannels)|",
      "|java+method:///java/net/InetAddress/getLocalHost()|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/mscr/OutputChannels/OutputChannels(scala.collection.Seq)|",
      "|java+constructor:///com/nicta/scoobi/impl/mapreducer/CompositeInputOutputContext/CompositeInputOutputContext(org.apache.hadoop.mapreduce.TaskInputOutputContext,com.nicta.scoobi.impl.plan.mscr.OutputChannels,com.nicta.scoobi.impl.mapreducer.ChannelOutputFormat)|",
      "|java+method:///com/nicta/scoobi/impl/plan/mscr/OutputChannels/setup(com.nicta.scoobi.impl.mapreducer.ChannelOutputFormat,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///scala/collection/Seq/foreach(scala.Function1)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getTaskAttemptID()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///com/nicta/scoobi/impl/mapreducer/MscrMapper/taggedInputChannels_$eq(scala.collection.Seq)|",
      "|java+method:///com/nicta/scoobi/impl/mapreducer/TaggedInputSplit/channel()|",
      "|java+method:///com/nicta/scoobi/impl/mapreducer/MscrMapper/allInputChannels()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getMapOutputValueClass()|",
      "|java+method:///com/nicta/scoobi/impl/plan/mscr/InputChannels/channelsForSource(int)|",
      "|java+method:///org/apache/commons/logging/Log/info(java.lang.Object)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///com/nicta/scoobi/impl/mapreducer/TaggedInputSplit/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///com/nicta/scoobi/impl/mapreducer/MscrMapper/taggedInputChannels()|",
      "|java+method:///com/nicta/scoobi/impl/mapreducer/MscrMapper/tk_$eq(com.nicta.scoobi.impl.rtt.TaggedKey)|",
      "|java+method:///com/nicta/scoobi/impl/mapreducer/MscrMapper/com$nicta$scoobi$impl$mapreducer$MscrMapper$$compositeContext_$eq(com.nicta.scoobi.impl.mapreducer.CompositeInputOutputContext)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///com/nicta/scoobi/impl/mapreducer/MscrMapper/allOutputChannels()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/collection/Seq/flatMap(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///java/net/InetAddress/getHostName()|",
      "|java+method:///com/nicta/scoobi/impl/mapreducer/MscrMapper/channelOutputFormat_$eq(com.nicta.scoobi.impl.mapreducer.ChannelOutputFormat)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getCounter(java.lang.String,java.lang.String)|",
      "|java+method:///com/nicta/scoobi/impl/ScoobiConfigurationImpl/jobStep()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///com/nicta/scoobi/impl/mapreducer/MscrMapper/counter_$eq(org.apache.hadoop.mapreduce.Counter)|",
      "|java+constructor:///com/nicta/scoobi/impl/mapreducer/MscrMapper$$anonfun$setup$6/MscrMapper$$anonfun$setup$6(com.nicta.scoobi.impl.mapreducer.MscrMapper,org.apache.hadoop.mapreduce.MapContext)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getBoolean(java.lang.String,boolean)|",
      "|java+constructor:///com/nicta/scoobi/impl/mapreducer/MscrMapper$$anonfun$setup$5/MscrMapper$$anonfun$setup$5(com.nicta.scoobi.impl.mapreducer.MscrMapper)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskID/getId()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getInputSplit()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///com/nicta/scoobi/impl/mapreducer/MscrMapper/channelOutputFormat()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///com/nicta/scoobi/impl/ScoobiConfiguration$/apply(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getMapOutputKeyClass()|"
    ],
    "affectedLib": "org.scala-lang:scala-library:2.10.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/impl/plan/comp/GraphNodes$$anonfun$com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable$1$$anonfun$apply$5/apply(org.kiama.attribution.Attributable)|",
    "called": "|java+method:///scala/Predef$DummyImplicit$/dummyImplicit()|",
    "v1Body": [
      "|java+method:///scalaz/Scalaz$/setMonoid()|",
      "|java+method:///scalaz/Scalaz$/ToSemigroupOps(java.lang.Object,scalaz.Semigroup)|",
      "|java+method:///org/kiama/attribution/AttributionCore$CachedAttribute/apply(java.lang.Object)|",
      "|java+method:///com/nicta/scoobi/impl/plan/comp/GraphNodes$$anonfun$com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable$1/com$nicta$scoobi$impl$plan$comp$GraphNodes$$anonfun$$$outer()|",
      "|java+method:///scalaz/syntax/SemigroupOps/$bar$plus$bar(scala.Function0)|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/comp/GraphNodes$$anonfun$com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable$1$$anonfun$apply$5$$anonfun$apply$6/GraphNodes$$anonfun$com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable$1$$anonfun$apply$5$$anonfun$apply$6(com.nicta.scoobi.impl.plan.comp.GraphNodes$$anonfun$com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable$1$$anonfun$apply$5,org.kiama.attribution.Attributable)|",
      "|java+method:///scalaz/Scalaz$/mapMonoid(scalaz.Semigroup)|",
      "|java+method:///com/nicta/scoobi/impl/plan/comp/GraphNodes/com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable()|"
    ],
    "v2Body": [
      "|java+method:///scalaz/Scalaz$/setMonoid()|",
      "|java+method:///com/nicta/scoobi/impl/plan/comp/GraphNodes/com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable()|",
      "|java+method:///scalaz/Scalaz$/ToSemigroupOps(java.lang.Object,scalaz.Semigroup)|",
      "|java+method:///org/kiama/attribution/AttributionCore$CachedAttribute/apply(java.lang.Object)|",
      "|java+method:///scala/Predef$DummyImplicit$/dummyImplicit()|",
      "|java+method:///com/nicta/scoobi/impl/plan/comp/GraphNodes$$anonfun$com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable$1/com$nicta$scoobi$impl$plan$comp$GraphNodes$$anonfun$$$outer()|",
      "|java+method:///scalaz/syntax/SemigroupOps/$bar$plus$bar(scala.Function0)|",
      "|java+method:///scalaz/Scalaz$/mapMonoid(java.lang.Object,scalaz.Semigroup)|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/comp/GraphNodes$$anonfun$com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable$1$$anonfun$apply$5$$anonfun$apply$6/GraphNodes$$anonfun$com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable$1$$anonfun$apply$5$$anonfun$apply$6(com.nicta.scoobi.impl.plan.comp.GraphNodes$$anonfun$com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable$1$$anonfun$apply$5,org.kiama.attribution.Attributable)|"
    ],
    "affectedLib": "org.scala-lang:scala-library:2.10.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/lib/Relational$$anon$4$$anonfun$groupCompare$1/apply()|",
    "called": "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
    "v1Body": [
      "|java+method:///scalaz/syntax/package$/order()|",
      "|java+method:///scalaz/syntax/Syntaxes$order$/ToOrderOps(java.lang.Object,scalaz.Order)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///com/nicta/scoobi/lib/Relational$$anon$4$$anonfun$groupCompare$1/apply()|",
      "|java+method:///scala/Tuple2/_2$mcI$sp()|",
      "|java+method:///scalaz/syntax/OrderOps/$qmark$bar$qmark(java.lang.Object)|",
      "|java+method:///scalaz/Order$/fromScalaOrdering(scala.math.Ordering)|"
    ],
    "v2Body": [
      "|java+method:///scalaz/Order$/fromScalaOrdering(scala.math.Ordering)|",
      "|java+method:///scalaz/Order/order(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///com/nicta/scoobi/lib/Relational$$anon$4$$anonfun$groupCompare$1/apply()|",
      "|java+method:///scala/Tuple2/_2$mcI$sp()|"
    ],
    "affectedLib": "org.scala-lang:scala-library:2.10.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/io/partition/PartitionedOutputFormat/generatePathForKeyValue(java.lang.String,java.lang.Object,org.apache.hadoop.fs.Path,scala.Option,org.apache.hadoop.conf.Configuration)|",
    "called": "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.String)|",
    "v1Body": [
      "|java+method:///scala/Option/fold(scala.Function0,scala.Function1)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
      "|java+constructor:///com/nicta/scoobi/io/partition/PartitionedOutputFormat$$anonfun$generatePathForKeyValue$2/PartitionedOutputFormat$$anonfun$generatePathForKeyValue$2(com.nicta.scoobi.io.partition.PartitionedOutputFormat,java.lang.Object)|",
      "|java+constructor:///com/nicta/scoobi/io/partition/PartitionedOutputFormat$$anonfun$generatePathForKeyValue$1/PartitionedOutputFormat$$anonfun$generatePathForKeyValue$1(com.nicta.scoobi.io.partition.PartitionedOutputFormat,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///scala/Option/fold(scala.Function0,scala.Function1)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+constructor:///com/nicta/scoobi/io/partition/PartitionedOutputFormat$$anonfun$generatePathForKeyValue$2/PartitionedOutputFormat$$anonfun$generatePathForKeyValue$2(com.nicta.scoobi.io.partition.PartitionedOutputFormat,java.lang.Object)|",
      "|java+constructor:///com/nicta/scoobi/io/partition/PartitionedOutputFormat$$anonfun$generatePathForKeyValue$1/PartitionedOutputFormat$$anonfun$generatePathForKeyValue$1(com.nicta.scoobi.io.partition.PartitionedOutputFormat,java.lang.Object)|"
    ],
    "affectedLib": "org.scala-lang:scala-library:2.10.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/application/HadoopLogFactory/logLevel()|",
    "called": "|java+method:///scala/Option/map(scala.Function1)|",
    "v1Body": [
      "|java+method:///scala/Option$/apply(java.lang.Object)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+method:///com/nicta/scoobi/application/HadoopLogFactory$/LOG_LEVEL()|",
      "|java+method:///com/nicta/scoobi/application/HadoopLogFactory/getAttribute(java.lang.String)|",
      "|java+method:///scala/Option/map(scala.Function1)|",
      "|java+constructor:///com/nicta/scoobi/application/HadoopLogFactory$$anonfun$logLevel$2/HadoopLogFactory$$anonfun$logLevel$2(com.nicta.scoobi.application.HadoopLogFactory)|",
      "|java+constructor:///com/nicta/scoobi/application/HadoopLogFactory$$anonfun$logLevel$1/HadoopLogFactory$$anonfun$logLevel$1(com.nicta.scoobi.application.HadoopLogFactory)|"
    ],
    "v2Body": [
      "|java+method:///scala/Option$/apply(java.lang.Object)|",
      "|java+method:///com/nicta/scoobi/application/Levels$Level/level()|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+method:///com/nicta/scoobi/application/HadoopLogFactory$/LOG_LEVEL()|",
      "|java+method:///com/nicta/scoobi/application/HadoopLogFactory/getAttribute(java.lang.String)|",
      "|java+method:///scala/Option/map(scala.Function1)|",
      "|java+constructor:///com/nicta/scoobi/application/HadoopLogFactory$$anonfun$logLevel$2/HadoopLogFactory$$anonfun$logLevel$2(com.nicta.scoobi.application.HadoopLogFactory)|",
      "|java+constructor:///com/nicta/scoobi/application/HadoopLogFactory$$anonfun$logLevel$1/HadoopLogFactory$$anonfun$logLevel$1(com.nicta.scoobi.application.HadoopLogFactory)|"
    ],
    "affectedLib": "org.scala-lang:scala-library:2.10.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/application/ScoobiUserArgs$class/extractLevel(com.nicta.scoobi.application.ScoobiUserArgs,scala.collection.Seq)|",
    "called": "|java+method:///scala/Option/getOrElse(scala.Function0)|",
    "v1Body": [
      "|java+method:///scala/collection/Seq/filter(scala.Function1)|",
      "|java+method:///scala/collection/TraversableLike/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///scala/collection/TraversableLike/headOption()|",
      "|java+constructor:///com/nicta/scoobi/application/ScoobiUserArgs$$anonfun$extractLevel$3/ScoobiUserArgs$$anonfun$extractLevel$3(com.nicta.scoobi.application.ScoobiUserArgs)|",
      "|java+constructor:///com/nicta/scoobi/application/ScoobiUserArgs$$anonfun$extractLevel$2/ScoobiUserArgs$$anonfun$extractLevel$2(com.nicta.scoobi.application.ScoobiUserArgs)|",
      "|java+constructor:///com/nicta/scoobi/application/ScoobiUserArgs$$anonfun$extractLevel$1/ScoobiUserArgs$$anonfun$extractLevel$1(com.nicta.scoobi.application.ScoobiUserArgs)|"
    ],
    "v2Body": [
      "|java+method:///scala/collection/Seq/filter(scala.Function1)|",
      "|java+method:///com/nicta/scoobi/application/Levels$Level/level()|",
      "|java+method:///scala/collection/TraversableLike/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///scala/collection/TraversableLike/headOption()|",
      "|java+constructor:///com/nicta/scoobi/application/ScoobiUserArgs$$anonfun$extractLevel$3/ScoobiUserArgs$$anonfun$extractLevel$3(com.nicta.scoobi.application.ScoobiUserArgs)|",
      "|java+constructor:///com/nicta/scoobi/application/ScoobiUserArgs$$anonfun$extractLevel$2/ScoobiUserArgs$$anonfun$extractLevel$2(com.nicta.scoobi.application.ScoobiUserArgs)|",
      "|java+constructor:///com/nicta/scoobi/application/ScoobiUserArgs$$anonfun$extractLevel$1/ScoobiUserArgs$$anonfun$extractLevel$1(com.nicta.scoobi.application.ScoobiUserArgs)|"
    ],
    "affectedLib": "org.scala-lang:scala-library:2.10.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/lib/LinearAlgebra$/matrixByDenseFunc(com.nicta.scoobi.lib.DMatrix,scala.Function0,scala.Function2,com.nicta.scoobi.core.Reduction,com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.WireFormat)|",
    "called": "|java+method:///scala/math/Ordering$/Tuple2(scala.math.Ordering,scala.math.Ordering)|",
    "v1Body": [
      "|java+method:///com/nicta/scoobi/core/WireFormat$/Tuple2Fmt(com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/core/DList/parallelDo(scala.Function2,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///scalaz/Order$/fromScalaOrdering(scala.math.Ordering)|",
      "|java+constructor:///com/nicta/scoobi/lib/LinearAlgebra$$anonfun$matrixByDenseFunc$1/LinearAlgebra$$anonfun$matrixByDenseFunc$1(scala.Function0,scala.Function2)|",
      "|java+method:///com/nicta/scoobi/Scoobi$/dlistToDMatrix(com.nicta.scoobi.core.DList,com.nicta.scoobi.core.WireFormat,scala.math.Ordering,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/Scoobi$/OrderGrouping2(scalaz.Order)|",
      "|java+method:///scala/Predef$/conforms()|",
      "|java+method:///com/nicta/scoobi/core/WireFormat$/IntFmt()|",
      "|java+method:///scala/math/Ordering$/Tuple2(scala.math.Ordering,scala.math.Ordering)|",
      "|java+method:///com/nicta/scoobi/Scoobi$/dmatrixToDlist(com.nicta.scoobi.lib.DMatrix,com.nicta.scoobi.core.WireFormat,scala.math.Ordering,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/core/DList/combine(com.nicta.scoobi.core.Reduction,scala.Predef$$less$colon$less,com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/core/DList/groupByKey(scala.Predef$$less$colon$less,com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.Grouping,com.nicta.scoobi.core.WireFormat)|",
      "|java+constructor:///com/nicta/scoobi/lib/LinearAlgebra$$anonfun$8/LinearAlgebra$$anonfun$8()|",
      "|java+method:///com/nicta/scoobi/core/DList/map(scala.Function1,com.nicta.scoobi.core.WireFormat)|"
    ],
    "v2Body": [
      "|java+method:///com/nicta/scoobi/core/WireFormat$/Tuple2Fmt(com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/core/DList/parallelDo(scala.Function2,com.nicta.scoobi.core.WireFormat)|",
      "|java+constructor:///com/nicta/scoobi/lib/LinearAlgebra$$anonfun$matrixByDenseFunc$1/LinearAlgebra$$anonfun$matrixByDenseFunc$1(scala.Function0,scala.Function2)|",
      "|java+method:///com/nicta/scoobi/Scoobi$/OrderingGrouping(scala.math.Ordering)|",
      "|java+method:///com/nicta/scoobi/Scoobi$/dlistToDMatrix(com.nicta.scoobi.core.DList,com.nicta.scoobi.core.WireFormat,scala.math.Ordering,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///scala/Predef$/conforms()|",
      "|java+method:///com/nicta/scoobi/core/WireFormat$/IntFmt()|",
      "|java+method:///scala/math/Ordering$/Tuple2(scala.math.Ordering,scala.math.Ordering)|",
      "|java+method:///com/nicta/scoobi/Scoobi$/dmatrixToDlist(com.nicta.scoobi.lib.DMatrix,com.nicta.scoobi.core.WireFormat,scala.math.Ordering,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/core/DList/combine(com.nicta.scoobi.core.Reduction,scala.Predef$$less$colon$less,com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.WireFormat)|",
      "|java+method:///com/nicta/scoobi/core/DList/groupByKey(scala.Predef$$less$colon$less,com.nicta.scoobi.core.WireFormat,com.nicta.scoobi.core.Grouping,com.nicta.scoobi.core.WireFormat)|",
      "|java+constructor:///com/nicta/scoobi/lib/LinearAlgebra$$anonfun$8/LinearAlgebra$$anonfun$8()|",
      "|java+method:///com/nicta/scoobi/core/DList/map(scala.Function1,com.nicta.scoobi.core.WireFormat)|"
    ],
    "affectedLib": "org.scala-lang:scala-library:2.10.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/impl/exec/HadoopMode/com$nicta$scoobi$impl$exec$HadoopMode$$executeMscrs(com.nicta.scoobi.core.CompNode)|",
    "called": "|java+method:///scala/collection/Seq$/canBuildFrom()|",
    "v1Body": [
      "|java+method:///scala/collection/Seq/zipWithIndex(scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///com/nicta/scoobi/impl/exec/HadoopMode/setJobSuccess(scala.collection.Seq)|",
      "|java+constructor:///com/nicta/scoobi/impl/exec/HadoopMode$$anonfun$2/HadoopMode$$anonfun$2(com.nicta.scoobi.impl.exec.HadoopMode)|",
      "|java+method:///scala/collection/IterableLike/foreach(scala.Function1)|",
      "|java+method:///com/nicta/scoobi/impl/exec/HadoopMode/showPlanOnly(com.nicta.scoobi.core.ScoobiConfiguration)|",
      "|java+method:///com/nicta/scoobi/impl/exec/HadoopMode/sc()|",
      "|java+method:///com/nicta/scoobi/impl/exec/HadoopMode/modeLogger()|",
      "|java+constructor:///com/nicta/scoobi/impl/exec/HadoopMode$$anonfun$com$nicta$scoobi$impl$exec$HadoopMode$$executeMscrs$1/HadoopMode$$anonfun$com$nicta$scoobi$impl$exec$HadoopMode$$executeMscrs$1(com.nicta.scoobi.impl.exec.HadoopMode,scala.collection.Seq)|",
      "|java+method:///com/nicta/scoobi/impl/monitor/Loggable$LoggableObject/info(java.lang.String,scala.Function1)|",
      "|java+method:///com/nicta/scoobi/impl/monitor/Loggable$/asLoggable(scala.Function0,org.apache.commons.logging.Log)|",
      "|java+constructor:///com/nicta/scoobi/impl/exec/HadoopMode$$anonfun$1/HadoopMode$$anonfun$1(com.nicta.scoobi.impl.exec.HadoopMode,com.nicta.scoobi.core.CompNode)|"
    ],
    "v2Body": [
      "|java+method:///scala/collection/Seq/zipWithIndex(scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+constructor:///com/nicta/scoobi/impl/exec/HadoopMode$$anonfun$2/HadoopMode$$anonfun$2(com.nicta.scoobi.impl.exec.HadoopMode)|",
      "|java+method:///scala/collection/IterableLike/foreach(scala.Function1)|",
      "|java+method:///com/nicta/scoobi/impl/exec/HadoopMode/showPlanOnly(com.nicta.scoobi.core.ScoobiConfiguration)|",
      "|java+method:///com/nicta/scoobi/impl/exec/HadoopMode/sc()|",
      "|java+method:///com/nicta/scoobi/impl/exec/HadoopMode/modeLogger()|",
      "|java+constructor:///com/nicta/scoobi/impl/exec/HadoopMode$$anonfun$com$nicta$scoobi$impl$exec$HadoopMode$$executeMscrs$1/HadoopMode$$anonfun$com$nicta$scoobi$impl$exec$HadoopMode$$executeMscrs$1(com.nicta.scoobi.impl.exec.HadoopMode,scala.collection.Seq)|",
      "|java+method:///com/nicta/scoobi/impl/exec/HadoopMode/setJobSuccess(scala.collection.Seq)|",
      "|java+method:///com/nicta/scoobi/impl/monitor/Loggable$LoggableObject/debug(java.lang.String,scala.Function1)|",
      "|java+method:///com/nicta/scoobi/impl/monitor/Loggable$/asLoggable(scala.Function0,org.apache.commons.logging.Log)|",
      "|java+constructor:///com/nicta/scoobi/impl/exec/HadoopMode$$anonfun$1/HadoopMode$$anonfun$1(com.nicta.scoobi.impl.exec.HadoopMode,com.nicta.scoobi.core.CompNode)|"
    ],
    "affectedLib": "org.scala-lang:scala-library:2.10.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/core/LowPriorityWireFormatImplicits$AvroWireFormat/toString()|",
    "called": "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
    "v1Body": [
      "|java+method:///java/lang/Class/getSimpleName()|",
      "|java+method:///scala/reflect/ClassTag/runtimeClass()|",
      "|java+method:///scala/Predef$/implicitly(java.lang.Object)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+method:///scala/reflect/ClassTag/runtimeClass()|",
      "|java+method:///scala/Predef$/implicitly(java.lang.Object)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|"
    ],
    "affectedLib": "org.scala-lang:scala-library:2.10.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/io/partition/PartitionedOutputFormat$$anon$2/write(java.lang.Object,scala.Tuple2)|",
    "called": "|java+method:///scala/collection/mutable/HashMap/get(java.lang.Object)|",
    "v1Body": [
      "|java+method:///scala/Some/x()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///com/nicta/scoobi/io/partition/PartitionedOutputFormat/getBaseRecordWriter(org.apache.hadoop.mapreduce.TaskAttemptContext,org.apache.hadoop.fs.Path)|",
      "|java+method:///com/nicta/scoobi/io/partition/PartitionedOutputFormat/com$nicta$scoobi$io$partition$PartitionedOutputFormat$$recordWriters()|",
      "|java+method:///com/nicta/scoobi/io/partition/PartitionedOutputFormat/generatePathForKeyValue(java.lang.String,java.lang.Object,org.apache.hadoop.fs.Path,scala.Option,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/collection/mutable/HashMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskAttemptContext/getConfiguration()|",
      "|java+method:///org/apache/hadoop/mapreduce/RecordWriter/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///scala/collection/mutable/HashMap/get(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///scala/Some/x()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///com/nicta/scoobi/io/partition/PartitionedOutputFormat/getBaseRecordWriter(org.apache.hadoop.mapreduce.TaskAttemptContext,org.apache.hadoop.fs.Path)|",
      "|java+method:///com/nicta/scoobi/io/partition/PartitionedOutputFormat/com$nicta$scoobi$io$partition$PartitionedOutputFormat$$recordWriters()|",
      "|java+method:///com/nicta/scoobi/io/partition/PartitionedOutputFormat/generatePathForKeyValue(java.lang.String,java.lang.Object,org.apache.hadoop.fs.Path,scala.Option,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/collection/mutable/HashMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskAttemptContext/getConfiguration()|",
      "|java+method:///org/apache/hadoop/mapreduce/RecordWriter/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///scala/collection/mutable/HashMap/get(java.lang.Object)|"
    ],
    "affectedLib": "org.scala-lang:scala-library:2.10.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/impl/exec/HadoopMode$Execution/execute()|",
    "called": "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
    "v1Body": [
      "|java+method:///com/nicta/scoobi/impl/exec/MapReduceJob/job()|",
      "|java+method:///com/nicta/scoobi/impl/exec/HadoopMode$Execution/com$nicta$scoobi$impl$exec$HadoopMode$Execution$$$outer()|",
      "|java+constructor:///com/nicta/scoobi/impl/exec/HadoopMode$Execution$$anonfun$execute$2/HadoopMode$Execution$$anonfun$execute$2(com.nicta.scoobi.impl.exec.HadoopMode$Execution,java.lang.String)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///com/nicta/scoobi/impl/exec/HadoopMode$Execution/mscrNumber()|",
      "|java+method:///scala/collection/IterableLike/foreach(scala.Function1)|",
      "|java+method:///com/nicta/scoobi/core/ScoobiConfiguration/updateCounters(org.apache.hadoop.mapreduce.Counters)|",
      "|java+method:///com/nicta/scoobi/impl/exec/HadoopMode$Execution/configureMscr(com.nicta.scoobi.impl.plan.mscr.Mscr,int,int)|",
      "|java+method:///com/nicta/scoobi/impl/exec/MapReduceJob/execute()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///com/nicta/scoobi/impl/exec/MapReduceJob/report()|",
      "|java+method:///com/nicta/scoobi/impl/exec/HadoopMode$Execution/mscr()|",
      "|java+constructor:///com/nicta/scoobi/impl/exec/HadoopMode$Execution$$anonfun$execute$1/HadoopMode$Execution$$anonfun$execute$1(com.nicta.scoobi.impl.exec.HadoopMode$Execution,java.lang.String)|",
      "|java+method:///com/nicta/scoobi/impl/exec/HadoopMode$Execution/totalMscrs()|",
      "|java+method:///com/nicta/scoobi/impl/monitor/Loggable$LoggableObject/info()|",
      "|java+method:///com/nicta/scoobi/impl/monitor/Loggable$/asLoggable(scala.Function0,org.apache.commons.logging.Log)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///com/nicta/scoobi/impl/monitor/Loggable$LoggableObject/info(java.lang.String,java.lang.String)|",
      "|java+method:///com/nicta/scoobi/impl/exec/HadoopMode/sc()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///com/nicta/scoobi/impl/monitor/Loggable$LoggableObject/info$default$2()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///com/nicta/scoobi/impl/exec/HadoopMode/modeLogger()|",
      "|java+constructor:///com/nicta/scoobi/impl/exec/HadoopMode$Execution$$anonfun$5/HadoopMode$Execution$$anonfun$5(com.nicta.scoobi.impl.exec.HadoopMode$Execution)|",
      "|java+method:///com/nicta/scoobi/impl/exec/HadoopMode/markSinkAsFilled()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/getCounters()|"
    ],
    "v2Body": [
      "|java+method:///com/nicta/scoobi/core/ScoobiConfiguration/counters()|",
      "|java+method:///com/nicta/scoobi/impl/exec/HadoopMode$Execution/com$nicta$scoobi$impl$exec$HadoopMode$Execution$$$outer()|",
      "|java+constructor:///com/nicta/scoobi/impl/exec/HadoopMode$Execution$$anonfun$execute$2/HadoopMode$Execution$$anonfun$execute$2(com.nicta.scoobi.impl.exec.HadoopMode$Execution,java.lang.String)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///com/nicta/scoobi/impl/exec/HadoopMode$Execution/mscrNumber()|",
      "|java+method:///scala/collection/IterableLike/foreach(scala.Function1)|",
      "|java+method:///com/nicta/scoobi/core/ScoobiConfiguration/updateCounters(org.apache.hadoop.mapreduce.Counters)|",
      "|java+method:///com/nicta/scoobi/impl/exec/HadoopMode/markSinkAsFilled()|",
      "|java+method:///com/nicta/scoobi/impl/exec/HadoopMode$Execution/configureMscr(com.nicta.scoobi.impl.plan.mscr.Mscr,int,int)|",
      "|java+method:///com/nicta/scoobi/impl/exec/MapReduceJob/execute()|",
      "|java+method:///com/nicta/scoobi/impl/exec/MapReduceJob/configuration()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///com/nicta/scoobi/impl/exec/MapReduceJob/report()|",
      "|java+method:///com/nicta/scoobi/impl/exec/HadoopMode$Execution/mscr()|",
      "|java+constructor:///com/nicta/scoobi/impl/exec/HadoopMode$Execution$$anonfun$execute$1/HadoopMode$Execution$$anonfun$execute$1(com.nicta.scoobi.impl.exec.HadoopMode$Execution,java.lang.String)|",
      "|java+method:///com/nicta/scoobi/impl/exec/HadoopMode$Execution/totalMscrs()|",
      "|java+method:///com/nicta/scoobi/impl/monitor/Loggable$LoggableObject/info()|",
      "|java+method:///com/nicta/scoobi/impl/monitor/Loggable$/asLoggable(scala.Function0,org.apache.commons.logging.Log)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///com/nicta/scoobi/impl/monitor/Loggable$LoggableObject/info(java.lang.String,java.lang.String)|",
      "|java+method:///com/nicta/scoobi/impl/exec/HadoopMode/sc()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///com/nicta/scoobi/impl/monitor/Loggable$LoggableObject/info$default$2()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///com/nicta/scoobi/impl/exec/HadoopMode/modeLogger()|",
      "|java+constructor:///com/nicta/scoobi/impl/exec/HadoopMode$Execution$$anonfun$5/HadoopMode$Execution$$anonfun$5(com.nicta.scoobi.impl.exec.HadoopMode$Execution)|"
    ],
    "affectedLib": "org.scala-lang:scala-library:2.10.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/impl/plan/comp/GraphNodes$$anonfun$com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable$1/apply(org.kiama.attribution.Attributable)|",
    "called": "|java+method:///scalaz/Scalaz$/ToFoldableOps(java.lang.Object,scalaz.Foldable)|",
    "v1Body": [
      "|java+method:///scalaz/Scalaz$/mapMonoid(scalaz.Semigroup)|",
      "|java+method:///scala/package$/Vector()|",
      "|java+method:///org/kiama/attribution/AttributionCore$CachedAttribute/apply(java.lang.Object)|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/comp/GraphNodes$$anonfun$com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable$1$$anonfun$apply$5/GraphNodes$$anonfun$com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable$1$$anonfun$apply$5(com.nicta.scoobi.impl.plan.comp.GraphNodes$$anonfun$com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable$1,org.kiama.attribution.Attributable)|",
      "|java+method:///scalaz/syntax/FoldableOps/foldMap(scala.Function1,scalaz.Monoid)|",
      "|java+method:///scalaz/Scalaz$/ToFoldableOps(java.lang.Object,scalaz.Foldable)|",
      "|java+method:///scalaz/Scalaz$/setMonoid()|",
      "|java+method:///scala/collection/immutable/Vector$/apply(scala.collection.Seq)|",
      "|java+method:///com/nicta/scoobi/impl/plan/comp/GraphNodes/children()|",
      "|java+method:///scalaz/Scalaz$/vectorInstance()|"
    ],
    "v2Body": [
      "|java+method:///scala/package$/Vector()|",
      "|java+method:///org/kiama/attribution/AttributionCore$CachedAttribute/apply(java.lang.Object)|",
      "|java+method:///scala/Predef$DummyImplicit$/dummyImplicit()|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/comp/GraphNodes$$anonfun$com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable$1$$anonfun$apply$5/GraphNodes$$anonfun$com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable$1$$anonfun$apply$5(com.nicta.scoobi.impl.plan.comp.GraphNodes$$anonfun$com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable$1,org.kiama.attribution.Attributable)|",
      "|java+method:///scalaz/syntax/FoldableOps/foldMap(scala.Function1,scalaz.Monoid)|",
      "|java+method:///scalaz/Scalaz$/mapMonoid(java.lang.Object,scalaz.Semigroup)|",
      "|java+method:///scalaz/Scalaz$/ToFoldableOps(java.lang.Object,scalaz.Foldable)|",
      "|java+method:///scalaz/Scalaz$/setMonoid()|",
      "|java+method:///scala/collection/immutable/Vector$/apply(scala.collection.Seq)|",
      "|java+method:///com/nicta/scoobi/impl/plan/comp/GraphNodes/children()|",
      "|java+method:///scalaz/Scalaz$/vectorInstance()|"
    ],
    "affectedLib": "org.scalaz:scalaz-core_2.10:7.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/core/Reduction$$anonfun$pointwise3K$1/apply(scalaz.Kleisli,scalaz.Kleisli)|",
    "called": "|java+method:///scalaz/Kleisli$/kleisli(scala.Function1)|",
    "v1Body": [
      "|java+method:///scalaz/Kleisli$/apply(scala.Function1)|",
      "|java+constructor:///com/nicta/scoobi/core/Reduction$$anonfun$pointwise3K$1$$anonfun$apply$24/Reduction$$anonfun$pointwise3K$1$$anonfun$apply$24(com.nicta.scoobi.core.Reduction$$anonfun$pointwise3K$1,scalaz.Kleisli,scalaz.Kleisli)|"
    ],
    "v2Body": [
      "|java+method:///scalaz/Kleisli$/kleisli(scala.Function1)|",
      "|java+constructor:///com/nicta/scoobi/core/Reduction$$anonfun$pointwise3K$1$$anonfun$apply$24/Reduction$$anonfun$pointwise3K$1$$anonfun$apply$24(com.nicta.scoobi.core.Reduction$$anonfun$pointwise3K$1,scalaz.Kleisli,scalaz.Kleisli)|"
    ],
    "affectedLib": "org.scalaz:scalaz-core_2.10:7.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/core/GroupingFunctions$$anon$10/partition(java.lang.Object,int)|",
    "called": "|java+method:///scalaz/syntax/EitherOps/right()|",
    "v1Body": [
      "|java+method:///com/nicta/scoobi/core/Grouping/partition(java.lang.Object,int)|",
      "|java+method:///scalaz/Scalaz$/ToIdOps(java.lang.Object)|",
      "|java+method:///scalaz/syntax/IdOps/right()|"
    ],
    "v2Body": [
      "|java+method:///com/nicta/scoobi/core/Grouping/partition(java.lang.Object,int)|",
      "|java+method:///scalaz/syntax/EitherOps/right()|",
      "|java+method:///scalaz/Scalaz$/ToEitherOps(java.lang.Object)|"
    ],
    "affectedLib": "org.scalaz:scalaz-core_2.10:7.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+constructor:///com/nicta/scoobi/core/Reduction$$anon$2/Reduction$$anon$2(com.nicta.scoobi.core.Reduction)|",
    "called": "|java+method:///scalaz/InvariantFunctor$class/$init$(scalaz.InvariantFunctor)|",
    "v1Body": [
      "|java+method:///scalaz/Apply$class/$init$(scalaz.Apply)|",
      "|java+method:///scalaz/Functor$class/$init$(scalaz.Functor)|",
      "|java+constructor:///java/lang/NullPointerException/NullPointerException()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///scalaz/Apply$class/$init$(scalaz.Apply)|",
      "|java+method:///scalaz/InvariantFunctor$class/$init$(scalaz.InvariantFunctor)|",
      "|java+method:///scalaz/Functor$class/$init$(scalaz.Functor)|",
      "|java+constructor:///java/lang/NullPointerException/NullPointerException()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "org.scalaz:scalaz-core_2.10:7.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/core/Reduction$$anonfun$pointwise5K$1/apply(scalaz.Kleisli,scalaz.Kleisli)|",
    "called": "|java+method:///scalaz/Kleisli$/kleisli(scala.Function1)|",
    "v1Body": [
      "|java+constructor:///com/nicta/scoobi/core/Reduction$$anonfun$pointwise5K$1$$anonfun$apply$32/Reduction$$anonfun$pointwise5K$1$$anonfun$apply$32(com.nicta.scoobi.core.Reduction$$anonfun$pointwise5K$1,scalaz.Kleisli,scalaz.Kleisli)|",
      "|java+method:///scalaz/Kleisli$/apply(scala.Function1)|"
    ],
    "v2Body": [
      "|java+constructor:///com/nicta/scoobi/core/Reduction$$anonfun$pointwise5K$1$$anonfun$apply$32/Reduction$$anonfun$pointwise5K$1$$anonfun$apply$32(com.nicta.scoobi.core.Reduction$$anonfun$pointwise5K$1,scalaz.Kleisli,scalaz.Kleisli)|",
      "|java+method:///scalaz/Kleisli$/kleisli(scala.Function1)|"
    ],
    "affectedLib": "org.scalaz:scalaz-core_2.10:7.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/core/Reduction$$anonfun$pointwise2K$1/apply(scalaz.Kleisli,scalaz.Kleisli)|",
    "called": "|java+method:///scalaz/Kleisli$/kleisli(scala.Function1)|",
    "v1Body": [
      "|java+method:///scalaz/Kleisli$/apply(scala.Function1)|",
      "|java+constructor:///com/nicta/scoobi/core/Reduction$$anonfun$pointwise2K$1$$anonfun$apply$20/Reduction$$anonfun$pointwise2K$1$$anonfun$apply$20(com.nicta.scoobi.core.Reduction$$anonfun$pointwise2K$1,scalaz.Kleisli,scalaz.Kleisli)|"
    ],
    "v2Body": [
      "|java+method:///scalaz/Kleisli$/kleisli(scala.Function1)|",
      "|java+constructor:///com/nicta/scoobi/core/Reduction$$anonfun$pointwise2K$1$$anonfun$apply$20/Reduction$$anonfun$pointwise2K$1$$anonfun$apply$20(com.nicta.scoobi.core.Reduction$$anonfun$pointwise2K$1,scalaz.Kleisli,scalaz.Kleisli)|"
    ],
    "affectedLib": "org.scalaz:scalaz-core_2.10:7.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/core/GroupingFunctions$$anon$10/sortCompare(java.lang.Object,java.lang.Object)|",
    "called": "|java+method:///scalaz/syntax/EitherOps/right()|",
    "v1Body": [
      "|java+method:///com/nicta/scoobi/core/Grouping/sortCompare(java.lang.Object,java.lang.Object)|",
      "|java+method:///scalaz/Scalaz$/ToIdOps(java.lang.Object)|",
      "|java+method:///scalaz/syntax/IdOps/right()|"
    ],
    "v2Body": [
      "|java+method:///scalaz/Scalaz$/ToEitherOps(java.lang.Object)|",
      "|java+method:///scalaz/syntax/EitherOps/right()|",
      "|java+method:///com/nicta/scoobi/core/Grouping/sortCompare(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.scalaz:scalaz-core_2.10:7.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/core/Reduction$$anonfun$pointwise5C$1/apply(scalaz.Cokleisli,scalaz.Cokleisli)|",
    "called": "|java+constructor:///scalaz/Cokleisli/Cokleisli(scala.Function1)|",
    "v1Body": [
      "|java+constructor:///com/nicta/scoobi/core/Reduction$$anonfun$pointwise5C$1$$anonfun$apply$40/Reduction$$anonfun$pointwise5C$1$$anonfun$apply$40(com.nicta.scoobi.core.Reduction$$anonfun$pointwise5C$1,scalaz.Cokleisli,scalaz.Cokleisli)|",
      "|java+method:///scalaz/Cokleisli$/apply(scala.Function1)|"
    ],
    "v2Body": [
      "|java+constructor:///com/nicta/scoobi/core/Reduction$$anonfun$pointwise5C$1$$anonfun$apply$40/Reduction$$anonfun$pointwise5C$1$$anonfun$apply$40(com.nicta.scoobi.core.Reduction$$anonfun$pointwise5C$1,scalaz.Cokleisli,scalaz.Cokleisli)|",
      "|java+constructor:///scalaz/Cokleisli/Cokleisli(scala.Function1)|"
    ],
    "affectedLib": "org.scalaz:scalaz-core_2.10:7.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/core/GroupingFunctions$$anon$9/groupCompare(java.lang.Object,java.lang.Object)|",
    "called": "|java+method:///scalaz/syntax/EitherOps/left()|",
    "v1Body": [
      "|java+method:///scalaz/Scalaz$/ToIdOps(java.lang.Object)|",
      "|java+method:///scalaz/syntax/IdOps/left()|",
      "|java+method:///com/nicta/scoobi/core/Grouping/groupCompare(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///com/nicta/scoobi/core/Grouping/groupCompare(java.lang.Object,java.lang.Object)|",
      "|java+method:///scalaz/syntax/EitherOps/left()|",
      "|java+method:///scalaz/Scalaz$/ToEitherOps(java.lang.Object)|"
    ],
    "affectedLib": "org.scalaz:scalaz-core_2.10:7.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/core/GroupingFunctions$$anon$9/partition(java.lang.Object,int)|",
    "called": "|java+method:///scalaz/syntax/EitherOps/left()|",
    "v1Body": [
      "|java+method:///com/nicta/scoobi/core/Grouping/partition(java.lang.Object,int)|",
      "|java+method:///scalaz/Scalaz$/ToIdOps(java.lang.Object)|",
      "|java+method:///scalaz/syntax/IdOps/left()|"
    ],
    "v2Body": [
      "|java+method:///com/nicta/scoobi/core/Grouping/partition(java.lang.Object,int)|",
      "|java+method:///scalaz/syntax/EitherOps/left()|",
      "|java+method:///scalaz/Scalaz$/ToEitherOps(java.lang.Object)|"
    ],
    "affectedLib": "org.scalaz:scalaz-core_2.10:7.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/core/Reduction$$anonfun$pointwise3C$1/apply(scalaz.Cokleisli,scalaz.Cokleisli)|",
    "called": "|java+constructor:///scalaz/Cokleisli/Cokleisli(scala.Function1)|",
    "v1Body": [
      "|java+constructor:///com/nicta/scoobi/core/Reduction$$anonfun$pointwise3C$1$$anonfun$apply$38/Reduction$$anonfun$pointwise3C$1$$anonfun$apply$38(com.nicta.scoobi.core.Reduction$$anonfun$pointwise3C$1,scalaz.Cokleisli,scalaz.Cokleisli)|",
      "|java+method:///scalaz/Cokleisli$/apply(scala.Function1)|"
    ],
    "v2Body": [
      "|java+constructor:///com/nicta/scoobi/core/Reduction$$anonfun$pointwise3C$1$$anonfun$apply$38/Reduction$$anonfun$pointwise3C$1$$anonfun$apply$38(com.nicta.scoobi.core.Reduction$$anonfun$pointwise3C$1,scalaz.Cokleisli,scalaz.Cokleisli)|",
      "|java+constructor:///scalaz/Cokleisli/Cokleisli(scala.Function1)|"
    ],
    "affectedLib": "org.scalaz:scalaz-core_2.10:7.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+constructor:///com/nicta/scoobi/core/Association1$$anon$1/Association1$$anon$1(scalaz.Semigroup)|",
    "called": "|java+method:///scalaz/InvariantFunctor$class/$init$(scalaz.InvariantFunctor)|",
    "v1Body": [
      "|java+method:///scalaz/Apply$class/$init$(scalaz.Apply)|",
      "|java+method:///scalaz/Functor$class/$init$(scalaz.Functor)|",
      "|java+method:///scalaz/Zip$class/$init$(scalaz.Zip)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///scalaz/Apply$class/$init$(scalaz.Apply)|",
      "|java+method:///scalaz/InvariantFunctor$class/$init$(scalaz.InvariantFunctor)|",
      "|java+method:///scalaz/Functor$class/$init$(scalaz.Functor)|",
      "|java+method:///scalaz/Zip$class/$init$(scalaz.Zip)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "org.scalaz:scalaz-core_2.10:7.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/lib/Relational$$anon$4$$anonfun$groupCompare$1/apply()|",
    "called": "|java+method:///scalaz/Order$/fromScalaOrdering(scala.math.Ordering)|",
    "v1Body": [
      "|java+method:///scalaz/syntax/package$/order()|",
      "|java+method:///scalaz/syntax/Syntaxes$order$/ToOrderOps(java.lang.Object,scalaz.Order)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///com/nicta/scoobi/lib/Relational$$anon$4$$anonfun$groupCompare$1/apply()|",
      "|java+method:///scala/Tuple2/_2$mcI$sp()|",
      "|java+method:///scalaz/syntax/OrderOps/$qmark$bar$qmark(java.lang.Object)|",
      "|java+method:///scalaz/Order$/fromScalaOrdering(scala.math.Ordering)|"
    ],
    "v2Body": [
      "|java+method:///scalaz/Order$/fromScalaOrdering(scala.math.Ordering)|",
      "|java+method:///scalaz/Order/order(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///com/nicta/scoobi/lib/Relational$$anon$4$$anonfun$groupCompare$1/apply()|",
      "|java+method:///scala/Tuple2/_2$mcI$sp()|"
    ],
    "affectedLib": "org.scalaz:scalaz-core_2.10:7.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/core/Reduction$$anonfun$pointwise4C$1/apply(scalaz.Cokleisli,scalaz.Cokleisli)|",
    "called": "|java+constructor:///scalaz/Cokleisli/Cokleisli(scala.Function1)|",
    "v1Body": [
      "|java+constructor:///com/nicta/scoobi/core/Reduction$$anonfun$pointwise4C$1$$anonfun$apply$39/Reduction$$anonfun$pointwise4C$1$$anonfun$apply$39(com.nicta.scoobi.core.Reduction$$anonfun$pointwise4C$1,scalaz.Cokleisli,scalaz.Cokleisli)|",
      "|java+method:///scalaz/Cokleisli$/apply(scala.Function1)|"
    ],
    "v2Body": [
      "|java+constructor:///com/nicta/scoobi/core/Reduction$$anonfun$pointwise4C$1$$anonfun$apply$39/Reduction$$anonfun$pointwise4C$1$$anonfun$apply$39(com.nicta.scoobi.core.Reduction$$anonfun$pointwise4C$1,scalaz.Cokleisli,scalaz.Cokleisli)|",
      "|java+constructor:///scalaz/Cokleisli/Cokleisli(scala.Function1)|"
    ],
    "affectedLib": "org.scalaz:scalaz-core_2.10:7.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/core/DList$$anon$5/groupCompare(int,int)|",
    "called": "|java+method:///scalaz/Order$/fromScalaOrdering(scala.math.Ordering)|",
    "v1Body": [
      "|java+method:///scalaz/Order$/fromScalaOrdering(scala.math.Ordering)|",
      "|java+method:///scalaz/Order/order(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/Predef$/implicitly(java.lang.Object)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|"
    ],
    "v2Body": [
      "|java+method:///scalaz/Order$/fromScalaOrdering(scala.math.Ordering)|",
      "|java+method:///scalaz/Order/order(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|"
    ],
    "affectedLib": "org.scalaz:scalaz-core_2.10:7.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/impl/exec/HadoopMode/execute(com.nicta.scoobi.core.CompNode)|",
    "called": "|java+method:///scalaz/syntax/Syntaxes$id$/ToIdOpsDeprecated(java.lang.Object)|",
    "v1Body": [
      "|java+method:///com/nicta/scoobi/impl/exec/HadoopMode/executeNode()|",
      "|java+method:///scalaz/syntax/IdOps/$bar$greater(scala.Function1)|",
      "|java+method:///com/nicta/scoobi/impl/exec/HadoopMode/sc()|",
      "|java+method:///scalaz/syntax/Syntaxes$id$/ToIdOps(java.lang.Object)|",
      "|java+method:///com/nicta/scoobi/impl/exec/HadoopMode/prepare(com.nicta.scoobi.core.CompNode,com.nicta.scoobi.core.ScoobiConfiguration)|",
      "|java+method:///scalaz/syntax/package$/id()|"
    ],
    "v2Body": [
      "|java+method:///scalaz/syntax/IdOpsDeprecated/$bar$greater(scala.Function1)|",
      "|java+method:///com/nicta/scoobi/impl/exec/HadoopMode/executeNode()|",
      "|java+method:///scalaz/syntax/Syntaxes$id$/ToIdOpsDeprecated(java.lang.Object)|",
      "|java+method:///com/nicta/scoobi/impl/exec/HadoopMode/sc()|",
      "|java+method:///com/nicta/scoobi/impl/exec/HadoopMode/prepare(com.nicta.scoobi.core.CompNode,com.nicta.scoobi.core.ScoobiConfiguration)|",
      "|java+method:///scalaz/syntax/package$/id()|"
    ],
    "affectedLib": "org.scalaz:scalaz-core_2.10:7.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/core/Reduction$$anonfun$pointwiseK$1/apply(scalaz.Kleisli,scalaz.Kleisli)|",
    "called": "|java+method:///scalaz/Kleisli$/kleisli(scala.Function1)|",
    "v1Body": [
      "|java+method:///scalaz/Kleisli$/apply(scala.Function1)|",
      "|java+constructor:///com/nicta/scoobi/core/Reduction$$anonfun$pointwiseK$1$$anonfun$apply$16/Reduction$$anonfun$pointwiseK$1$$anonfun$apply$16(com.nicta.scoobi.core.Reduction$$anonfun$pointwiseK$1,scalaz.Kleisli,scalaz.Kleisli)|"
    ],
    "v2Body": [
      "|java+method:///scalaz/Kleisli$/kleisli(scala.Function1)|",
      "|java+constructor:///com/nicta/scoobi/core/Reduction$$anonfun$pointwiseK$1$$anonfun$apply$16/Reduction$$anonfun$pointwiseK$1$$anonfun$apply$16(com.nicta.scoobi.core.Reduction$$anonfun$pointwiseK$1,scalaz.Kleisli,scalaz.Kleisli)|"
    ],
    "affectedLib": "org.scalaz:scalaz-core_2.10:7.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/core/GroupingFunctions$$anon$9/sortCompare(java.lang.Object,java.lang.Object)|",
    "called": "|java+method:///scalaz/syntax/EitherOps/left()|",
    "v1Body": [
      "|java+method:///com/nicta/scoobi/core/Grouping/sortCompare(java.lang.Object,java.lang.Object)|",
      "|java+method:///scalaz/Scalaz$/ToIdOps(java.lang.Object)|",
      "|java+method:///scalaz/syntax/IdOps/left()|"
    ],
    "v2Body": [
      "|java+method:///com/nicta/scoobi/core/Grouping/sortCompare(java.lang.Object,java.lang.Object)|",
      "|java+method:///scalaz/syntax/EitherOps/left()|",
      "|java+method:///scalaz/Scalaz$/ToEitherOps(java.lang.Object)|"
    ],
    "affectedLib": "org.scalaz:scalaz-core_2.10:7.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/impl/plan/comp/GraphNodes$$anonfun$com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable$1$$anonfun$apply$5/apply(org.kiama.attribution.Attributable)|",
    "called": "|java+method:///scalaz/syntax/SemigroupOps/$bar$plus$bar(scala.Function0)|",
    "v1Body": [
      "|java+method:///scalaz/Scalaz$/setMonoid()|",
      "|java+method:///scalaz/Scalaz$/ToSemigroupOps(java.lang.Object,scalaz.Semigroup)|",
      "|java+method:///org/kiama/attribution/AttributionCore$CachedAttribute/apply(java.lang.Object)|",
      "|java+method:///com/nicta/scoobi/impl/plan/comp/GraphNodes$$anonfun$com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable$1/com$nicta$scoobi$impl$plan$comp$GraphNodes$$anonfun$$$outer()|",
      "|java+method:///scalaz/syntax/SemigroupOps/$bar$plus$bar(scala.Function0)|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/comp/GraphNodes$$anonfun$com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable$1$$anonfun$apply$5$$anonfun$apply$6/GraphNodes$$anonfun$com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable$1$$anonfun$apply$5$$anonfun$apply$6(com.nicta.scoobi.impl.plan.comp.GraphNodes$$anonfun$com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable$1$$anonfun$apply$5,org.kiama.attribution.Attributable)|",
      "|java+method:///scalaz/Scalaz$/mapMonoid(scalaz.Semigroup)|",
      "|java+method:///com/nicta/scoobi/impl/plan/comp/GraphNodes/com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable()|"
    ],
    "v2Body": [
      "|java+method:///scalaz/Scalaz$/setMonoid()|",
      "|java+method:///com/nicta/scoobi/impl/plan/comp/GraphNodes/com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable()|",
      "|java+method:///scalaz/Scalaz$/ToSemigroupOps(java.lang.Object,scalaz.Semigroup)|",
      "|java+method:///org/kiama/attribution/AttributionCore$CachedAttribute/apply(java.lang.Object)|",
      "|java+method:///scala/Predef$DummyImplicit$/dummyImplicit()|",
      "|java+method:///com/nicta/scoobi/impl/plan/comp/GraphNodes$$anonfun$com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable$1/com$nicta$scoobi$impl$plan$comp$GraphNodes$$anonfun$$$outer()|",
      "|java+method:///scalaz/syntax/SemigroupOps/$bar$plus$bar(scala.Function0)|",
      "|java+method:///scalaz/Scalaz$/mapMonoid(java.lang.Object,scalaz.Semigroup)|",
      "|java+constructor:///com/nicta/scoobi/impl/plan/comp/GraphNodes$$anonfun$com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable$1$$anonfun$apply$5$$anonfun$apply$6/GraphNodes$$anonfun$com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable$1$$anonfun$apply$5$$anonfun$apply$6(com.nicta.scoobi.impl.plan.comp.GraphNodes$$anonfun$com$nicta$scoobi$impl$plan$comp$GraphNodes$$usesTable$1$$anonfun$apply$5,org.kiama.attribution.Attributable)|"
    ],
    "affectedLib": "org.scalaz:scalaz-core_2.10:7.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/core/Reduction$class/pairE(com.nicta.scoobi.core.Reduction)|",
    "called": "|java+constructor:///scalaz/Endo/Endo(scala.Function1)|",
    "v1Body": [
      "|java+method:///scalaz/Endo$/apply(scala.Function1)|",
      "|java+method:///com/nicta/scoobi/core/Reduction/pair()|"
    ],
    "v2Body": [
      "|java+constructor:///scalaz/Endo/Endo(scala.Function1)|",
      "|java+method:///com/nicta/scoobi/core/Reduction/pair()|"
    ],
    "affectedLib": "org.scalaz:scalaz-core_2.10:7.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/core/GroupingFunctions$$anon$10/groupCompare(java.lang.Object,java.lang.Object)|",
    "called": "|java+method:///scalaz/syntax/EitherOps/right()|",
    "v1Body": [
      "|java+method:///scalaz/Scalaz$/ToIdOps(java.lang.Object)|",
      "|java+method:///com/nicta/scoobi/core/Grouping/groupCompare(java.lang.Object,java.lang.Object)|",
      "|java+method:///scalaz/syntax/IdOps/right()|"
    ],
    "v2Body": [
      "|java+method:///scalaz/syntax/EitherOps/right()|",
      "|java+method:///com/nicta/scoobi/core/Grouping/groupCompare(java.lang.Object,java.lang.Object)|",
      "|java+method:///scalaz/Scalaz$/ToEitherOps(java.lang.Object)|"
    ],
    "affectedLib": "org.scalaz:scalaz-core_2.10:7.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/core/Reduction$$anonfun$pointwise4K$1/apply(scalaz.Kleisli,scalaz.Kleisli)|",
    "called": "|java+method:///scalaz/Kleisli$/kleisli(scala.Function1)|",
    "v1Body": [
      "|java+constructor:///com/nicta/scoobi/core/Reduction$$anonfun$pointwise4K$1$$anonfun$apply$28/Reduction$$anonfun$pointwise4K$1$$anonfun$apply$28(com.nicta.scoobi.core.Reduction$$anonfun$pointwise4K$1,scalaz.Kleisli,scalaz.Kleisli)|",
      "|java+method:///scalaz/Kleisli$/apply(scala.Function1)|"
    ],
    "v2Body": [
      "|java+constructor:///com/nicta/scoobi/core/Reduction$$anonfun$pointwise4K$1$$anonfun$apply$28/Reduction$$anonfun$pointwise4K$1$$anonfun$apply$28(com.nicta.scoobi.core.Reduction$$anonfun$pointwise4K$1,scalaz.Kleisli,scalaz.Kleisli)|",
      "|java+method:///scalaz/Kleisli$/kleisli(scala.Function1)|"
    ],
    "affectedLib": "org.scalaz:scalaz-core_2.10:7.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/core/Reduction$$anonfun$pointwiseC$1/apply(scalaz.Cokleisli,scalaz.Cokleisli)|",
    "called": "|java+constructor:///scalaz/Cokleisli/Cokleisli(scala.Function1)|",
    "v1Body": [
      "|java+constructor:///com/nicta/scoobi/core/Reduction$$anonfun$pointwiseC$1$$anonfun$apply$36/Reduction$$anonfun$pointwiseC$1$$anonfun$apply$36(com.nicta.scoobi.core.Reduction$$anonfun$pointwiseC$1,scalaz.Cokleisli,scalaz.Cokleisli)|",
      "|java+method:///scalaz/Cokleisli$/apply(scala.Function1)|"
    ],
    "v2Body": [
      "|java+constructor:///com/nicta/scoobi/core/Reduction$$anonfun$pointwiseC$1$$anonfun$apply$36/Reduction$$anonfun$pointwiseC$1$$anonfun$apply$36(com.nicta.scoobi.core.Reduction$$anonfun$pointwiseC$1,scalaz.Cokleisli,scalaz.Cokleisli)|",
      "|java+constructor:///scalaz/Cokleisli/Cokleisli(scala.Function1)|"
    ],
    "affectedLib": "org.scalaz:scalaz-core_2.10:7.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+method:///com/nicta/scoobi/core/Reduction$$anonfun$pointwise2C$1/apply(scalaz.Cokleisli,scalaz.Cokleisli)|",
    "called": "|java+constructor:///scalaz/Cokleisli/Cokleisli(scala.Function1)|",
    "v1Body": [
      "|java+constructor:///com/nicta/scoobi/core/Reduction$$anonfun$pointwise2C$1$$anonfun$apply$37/Reduction$$anonfun$pointwise2C$1$$anonfun$apply$37(com.nicta.scoobi.core.Reduction$$anonfun$pointwise2C$1,scalaz.Cokleisli,scalaz.Cokleisli)|",
      "|java+method:///scalaz/Cokleisli$/apply(scala.Function1)|"
    ],
    "v2Body": [
      "|java+constructor:///com/nicta/scoobi/core/Reduction$$anonfun$pointwise2C$1$$anonfun$apply$37/Reduction$$anonfun$pointwise2C$1$$anonfun$apply$37(com.nicta.scoobi.core.Reduction$$anonfun$pointwise2C$1,scalaz.Cokleisli,scalaz.Cokleisli)|",
      "|java+constructor:///scalaz/Cokleisli/Cokleisli(scala.Function1)|"
    ],
    "affectedLib": "org.scalaz:scalaz-core_2.10:7.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.nicta:scoobi_2.10:0.8.5-cdh4",
    "coordinatesV2": "com.nicta:scoobi_2.10:0.9.0",
    "caller": "|java+constructor:///com/nicta/scoobi/application/ScoobiILoop/ScoobiILoop(com.nicta.scoobi.application.ScoobiInterpreter)|",
    "called": "|java+constructor:///scala/tools/nsc/interpreter/ILoop/ILoop()|",
    "v1Body": [
      "|java+constructor:///scala/tools/nsc/interpreter/ILoop/ILoop()|",
      "|java+constructor:///com/nicta/scoobi/application/ScoobiILoop$$anonfun$1/ScoobiILoop$$anonfun$1(com.nicta.scoobi.application.ScoobiILoop)|",
      "|java+method:///com/nicta/scoobi/application/ScoobiInterpreter/configuration()|",
      "|java+method:///com/nicta/scoobi/application/ScoobiILoop/addThunk(scala.Function0)|"
    ],
    "v2Body": [
      "|java+constructor:///scala/tools/nsc/interpreter/ILoop/ILoop()|",
      "|java+method:///com/nicta/scoobi/application/ScoobiInterpreter/configuration()|"
    ],
    "affectedLib": "org.scala-lang:scala-compiler:2.10.4",
    "change": "UPDATED"
  }
]