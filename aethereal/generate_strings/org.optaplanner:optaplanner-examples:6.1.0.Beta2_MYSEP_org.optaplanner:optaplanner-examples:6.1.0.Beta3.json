[
  {
    "coordinatesV1": "org.optaplanner:optaplanner-examples:6.1.0.Beta2",
    "coordinatesV2": "org.optaplanner:optaplanner-examples:6.1.0.Beta3",
    "caller": "|java+method:///org/optaplanner/examples/common/app/CommonBenchmarkApp/buildAndBenchmark(java.lang.String%5B%5D)|",
    "called": "|java+method:///org/optaplanner/benchmark/api/PlannerBenchmarkFactory/createFromFreemarkerXmlResource(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/optaplanner/examples/common/app/CommonBenchmarkApp$ArgOption/getName()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///org/optaplanner/benchmark/impl/aggregator/swingui/BenchmarkAggregatorFrame/createAndDisplay(org.optaplanner.benchmark.api.PlannerBenchmarkFactory)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///org/optaplanner/examples/common/app/CommonBenchmarkApp$ArgOption/isTemplate()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/optaplanner/examples/common/app/CommonBenchmarkApp$ArgOption/getBenchmarkConfig()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/optaplanner/benchmark/config/FreemarkerXmlPlannerBenchmarkFactory/FreemarkerXmlPlannerBenchmarkFactory(java.lang.String)|",
      "|java+constructor:///org/optaplanner/benchmark/config/XmlPlannerBenchmarkFactory/XmlPlannerBenchmarkFactory(java.lang.String)|",
      "|java+method:///org/optaplanner/benchmark/api/PlannerBenchmarkFactory/buildPlannerBenchmark()|",
      "|java+method:///java/util/Arrays/toString(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/optaplanner/benchmark/api/PlannerBenchmark/benchmark()|",
      "|java+method:///java/util/Map/keySet()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/optaplanner/benchmark/api/PlannerBenchmarkFactory/createFromFreemarkerXmlResource(java.lang.String)|",
      "|java+method:///org/optaplanner/examples/common/app/CommonBenchmarkApp$ArgOption/getName()|",
      "|java+method:///org/optaplanner/benchmark/api/PlannerBenchmarkFactory/createFromXmlResource(java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///org/optaplanner/benchmark/impl/aggregator/swingui/BenchmarkAggregatorFrame/createAndDisplay(org.optaplanner.benchmark.api.PlannerBenchmarkFactory)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///org/optaplanner/examples/common/app/CommonBenchmarkApp$ArgOption/isTemplate()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/optaplanner/examples/common/app/CommonBenchmarkApp$ArgOption/getBenchmarkConfig()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/optaplanner/benchmark/api/PlannerBenchmarkFactory/buildPlannerBenchmark()|",
      "|java+method:///java/util/Arrays/toString(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/optaplanner/benchmark/api/PlannerBenchmark/benchmark()|",
      "|java+method:///java/util/Map/keySet()|"
    ],
    "affectedLib": "org.optaplanner:optaplanner-benchmark:6.1.0.Beta3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.optaplanner:optaplanner-examples:6.1.0.Beta2",
    "coordinatesV2": "org.optaplanner:optaplanner-examples:6.1.0.Beta3",
    "caller": "|java+method:///org/optaplanner/examples/vehiclerouting/swingui/VehicleRoutingSchedulePainter/reset(org.optaplanner.examples.vehiclerouting.domain.VehicleRoutingSolution,java.awt.Dimension,java.awt.image.ImageObserver)|",
    "called": "|java+method:///org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScore/isFeasible()|",
    "v1Body": [
      "|java+method:///org/optaplanner/examples/vehiclerouting/swingui/VehicleRoutingSchedulePainter/calculateTimeWindowDegree(int,int)|",
      "|java+method:///java/awt/Graphics2D/setFont(java.awt.Font)|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/Location/getLongitude()|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/Customer/getDemand()|",
      "|java+method:///java/awt/Dimension/getWidth()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///javax/swing/ImageIcon/getIconWidth()|",
      "|java+method:///org/optaplanner/examples/common/swingui/latitudelongitude/LatitudeLongitudeTranslator/addCoordinates(double,double)|",
      "|java+method:///java/awt/Graphics2D/fillRect(int,int,int,int)|",
      "|java+method:///java/lang/Math/cos(double)|",
      "|java+method:///java/awt/Graphics2D/drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/Vehicle/getCapacity()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/timewindowed/TimeWindowedCustomer/getMilliArrivalTime()|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/Depot/getLocation()|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/swingui/VehicleRoutingSchedulePainter/determineMaximumTimeWindowTime(org.optaplanner.examples.vehiclerouting.domain.VehicleRoutingSolution)|",
      "|java+method:///javax/swing/ImageIcon/getImage()|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/VehicleRoutingSolution/getVehicleList()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/timewindowed/TimeWindowedCustomer/isArrivalAfterDueTime()|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/timewindowed/TimeWindowedCustomer/isArrivalBeforeReadyTime()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/awt/Graphics2D/drawLine(int,int,int,int)|",
      "|java+method:///java/awt/Graphics2D/setColor(java.awt.Color)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///java/awt/Graphics2D/drawOval(int,int,int,int)|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/Location/getLatitude()|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/timewindowed/TimeWindowedCustomer/getMilliReadyTime()|",
      "|java+method:///org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScore/isFeasible()|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/VehicleRoutingSolution/getDepotList()|",
      "|java+method:///java/awt/Graphics2D/getFontMetrics()|",
      "|java+method:///java/lang/Integer/toString(int)|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/VehicleRoutingSolution/getScore()|",
      "|java+method:///javax/swing/ImageIcon/getIconHeight()|",
      "|java+method:///java/lang/Math/toRadians(double)|",
      "|java+method:///java/awt/Graphics2D/getFont()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/lang/Math/sin(double)|",
      "|java+method:///org/optaplanner/examples/common/swingui/latitudelongitude/LatitudeLongitudeTranslator/prepareFor(double,double)|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/VehicleRoutingSolution/getLocationList()|",
      "|java+method:///org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScore/getSoftScore()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/awt/Dimension/getHeight()|",
      "|java+method:///java/awt/Graphics2D/setStroke(java.awt.Stroke)|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/Customer/getPreviousStandstill()|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/Standstill/getLocation()|",
      "|java+method:///java/awt/FontMetrics/stringWidth(java.lang.String)|",
      "|java+constructor:///org/optaplanner/examples/common/swingui/latitudelongitude/LatitudeLongitudeTranslator/LatitudeLongitudeTranslator()|",
      "|java+method:///java/awt/Graphics2D/fillArc(int,int,int,int,int,int)|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/Customer/getMilliDistanceToPreviousStandstill()|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/swingui/VehicleRoutingSchedulePainter/createCanvas(double,double)|",
      "|java+method:///java/awt/Font/deriveFont(int,float)|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/Customer/getNextCustomer()|",
      "|java+method:///java/awt/Font/deriveFont(float)|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/VehicleRoutingSolution/getCustomerList()|",
      "|java+method:///java/awt/Graphics2D/drawString(java.lang.String,int,int)|",
      "|java+method:///org/optaplanner/examples/common/swingui/latitudelongitude/LatitudeLongitudeTranslator/translateLongitudeToX(double)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/Customer/getVehicle()|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/timewindowed/TimeWindowedCustomer/getMilliDueTime()|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/Customer/getLocation()|",
      "|java+method:///java/text/NumberFormat/format(double)|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/Vehicle/getLocation()|",
      "|java+method:///org/optaplanner/examples/common/swingui/latitudelongitude/LatitudeLongitudeTranslator/translateLatitudeToY(double)|"
    ],
    "v2Body": [
      "|java+method:///java/awt/Graphics2D/setFont(java.awt.Font)|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/Location/getLongitude()|",
      "|java+method:///org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScore/isFeasible()|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/Customer/getDemand()|",
      "|java+method:///java/awt/Dimension/getWidth()|",
      "|java+method:///javax/swing/ImageIcon/getIconWidth()|",
      "|java+method:///org/optaplanner/examples/common/swingui/latitudelongitude/LatitudeLongitudeTranslator/addCoordinates(double,double)|",
      "|java+method:///java/awt/Graphics2D/fillRect(int,int,int,int)|",
      "|java+method:///java/lang/Math/cos(double)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/swingui/VehicleRoutingSchedulePainter/calculateTimeWindowDegree(int,int)|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/Customer/getDistanceToPreviousStandstill()|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/Vehicle/getCapacity()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/Depot/getLocation()|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/swingui/VehicleRoutingSchedulePainter/determineMaximumTimeWindowTime(org.optaplanner.examples.vehiclerouting.domain.VehicleRoutingSolution)|",
      "|java+method:///javax/swing/ImageIcon/getImage()|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/VehicleRoutingSolution/getVehicleList()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/timewindowed/TimeWindowedCustomer/isArrivalAfterDueTime()|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/timewindowed/TimeWindowedCustomer/isArrivalBeforeReadyTime()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/awt/Graphics2D/drawLine(int,int,int,int)|",
      "|java+method:///java/awt/Graphics2D/setColor(java.awt.Color)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///java/awt/Graphics2D/drawOval(int,int,int,int)|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/Location/getLatitude()|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/VehicleRoutingSolution/getDepotList()|",
      "|java+method:///java/awt/Graphics2D/getFontMetrics()|",
      "|java+method:///java/lang/Integer/toString(int)|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/VehicleRoutingSolution/getScore()|",
      "|java+method:///javax/swing/ImageIcon/getIconHeight()|",
      "|java+method:///java/lang/Math/toRadians(double)|",
      "|java+method:///java/awt/Graphics2D/getFont()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/lang/Math/sin(double)|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/timewindowed/TimeWindowedCustomer/getDueTime()|",
      "|java+method:///org/optaplanner/examples/common/swingui/latitudelongitude/LatitudeLongitudeTranslator/prepareFor(double,double)|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/VehicleRoutingSolution/getLocationList()|",
      "|java+method:///org/optaplanner/core/api/score/buildin/hardsoft/HardSoftScore/getSoftScore()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/awt/Dimension/getHeight()|",
      "|java+method:///java/awt/Graphics2D/setStroke(java.awt.Stroke)|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/Customer/getPreviousStandstill()|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/Standstill/getLocation()|",
      "|java+method:///java/awt/FontMetrics/stringWidth(java.lang.String)|",
      "|java+constructor:///org/optaplanner/examples/common/swingui/latitudelongitude/LatitudeLongitudeTranslator/LatitudeLongitudeTranslator()|",
      "|java+method:///java/awt/Graphics2D/fillArc(int,int,int,int,int,int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/timewindowed/TimeWindowedCustomer/getArrivalTime()|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/swingui/VehicleRoutingSchedulePainter/createCanvas(double,double)|",
      "|java+method:///java/awt/Font/deriveFont(int,float)|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/Customer/getNextCustomer()|",
      "|java+method:///java/awt/Font/deriveFont(float)|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/VehicleRoutingSolution/getCustomerList()|",
      "|java+method:///java/awt/Graphics2D/drawString(java.lang.String,int,int)|",
      "|java+method:///org/optaplanner/examples/common/swingui/latitudelongitude/LatitudeLongitudeTranslator/translateLongitudeToX(double)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/Customer/getVehicle()|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/Customer/getLocation()|",
      "|java+method:///java/text/NumberFormat/format(double)|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/Vehicle/getLocation()|",
      "|java+method:///org/optaplanner/examples/common/swingui/latitudelongitude/LatitudeLongitudeTranslator/translateLatitudeToY(double)|",
      "|java+method:///java/awt/Graphics2D/drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)|",
      "|java+method:///org/optaplanner/examples/vehiclerouting/domain/timewindowed/TimeWindowedCustomer/getReadyTime()|"
    ],
    "affectedLib": "org.optaplanner:optaplanner-core:6.1.0.Beta3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.optaplanner:optaplanner-examples:6.1.0.Beta2",
    "coordinatesV2": "org.optaplanner:optaplanner-examples:6.1.0.Beta3",
    "caller": "|java+method:///org/optaplanner/examples/nqueens/app/NQueensApp/createSolverByApi()|",
    "called": "|java+constructor:///org/optaplanner/core/config/solver/termination/TerminationConfig/TerminationConfig()|",
    "v1Body": [
      "|java+constructor:///org/optaplanner/core/config/localsearch/decider/acceptor/AcceptorConfig/AcceptorConfig()|",
      "|java+method:///org/optaplanner/core/config/solver/SolverConfig/setPlanningEntityClassList(java.util.List)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/optaplanner/core/config/heuristic/selector/move/generic/ChangeMoveSelectorConfig/setSelectionOrder(org.optaplanner.core.config.heuristic.selector.common.SelectionOrder)|",
      "|java+method:///org/optaplanner/core/config/localsearch/LocalSearchSolverPhaseConfig/setMoveSelectorConfigList(java.util.List)|",
      "|java+method:///org/optaplanner/core/config/localsearch/LocalSearchSolverPhaseConfig/setAcceptorConfig(org.optaplanner.core.config.localsearch.decider.acceptor.AcceptorConfig)|",
      "|java+method:///org/optaplanner/core/config/solver/SolverConfig/setScoreDirectorFactoryConfig(org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig)|",
      "|java+constructor:///org/optaplanner/core/config/constructionheuristic/ConstructionHeuristicSolverPhaseConfig/ConstructionHeuristicSolverPhaseConfig()|",
      "|java+constructor:///org/optaplanner/core/config/solver/termination/TerminationConfig/TerminationConfig()|",
      "|java+method:///org/optaplanner/core/config/solver/SolverConfig/setSolverPhaseConfigList(java.util.List)|",
      "|java+constructor:///org/optaplanner/core/config/heuristic/selector/move/generic/ChangeMoveSelectorConfig/ChangeMoveSelectorConfig()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/optaplanner/core/config/solver/SolverConfig/setSolutionClass(java.lang.Class)|",
      "|java+method:///org/optaplanner/core/config/score/director/ScoreDirectorFactoryConfig/setScoreDefinitionType(org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig$ScoreDefinitionType)|",
      "|java+constructor:///org/optaplanner/core/config/localsearch/LocalSearchSolverPhaseConfig/LocalSearchSolverPhaseConfig()|",
      "|java+constructor:///org/optaplanner/core/config/solver/SolverConfig/SolverConfig()|",
      "|java+method:///org/optaplanner/core/config/solver/termination/TerminationConfig/setBestScoreLimit(java.lang.String)|",
      "|java+method:///org/optaplanner/core/config/solver/SolverConfig/buildSolver()|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///org/optaplanner/core/config/localsearch/decider/acceptor/AcceptorConfig/setEntityTabuSize(java.lang.Integer)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/optaplanner/core/config/score/director/ScoreDirectorFactoryConfig/setScoreDrlList(java.util.List)|",
      "|java+method:///org/optaplanner/core/config/constructionheuristic/ConstructionHeuristicSolverPhaseConfig/setConstructionHeuristicType(org.optaplanner.core.config.constructionheuristic.ConstructionHeuristicSolverPhaseConfig$ConstructionHeuristicType)|",
      "|java+constructor:///org/optaplanner/core/config/score/director/ScoreDirectorFactoryConfig/ScoreDirectorFactoryConfig()|",
      "|java+method:///org/optaplanner/core/config/solver/SolverConfig/setTerminationConfig(org.optaplanner.core.config.solver.termination.TerminationConfig)|"
    ],
    "v2Body": [
      "|java+constructor:///org/optaplanner/core/config/localsearch/decider/acceptor/AcceptorConfig/AcceptorConfig()|",
      "|java+method:///org/optaplanner/core/config/solver/SolverConfig/setPlanningEntityClassList(java.util.List)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/optaplanner/core/config/heuristic/selector/move/generic/ChangeMoveSelectorConfig/setSelectionOrder(org.optaplanner.core.config.heuristic.selector.common.SelectionOrder)|",
      "|java+method:///org/optaplanner/core/config/localsearch/LocalSearchSolverPhaseConfig/setAcceptorConfig(org.optaplanner.core.config.localsearch.decider.acceptor.AcceptorConfig)|",
      "|java+method:///org/optaplanner/core/config/solver/SolverConfig/setScoreDirectorFactoryConfig(org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig)|",
      "|java+constructor:///org/optaplanner/core/config/constructionheuristic/ConstructionHeuristicSolverPhaseConfig/ConstructionHeuristicSolverPhaseConfig()|",
      "|java+constructor:///org/optaplanner/core/config/solver/termination/TerminationConfig/TerminationConfig()|",
      "|java+method:///org/optaplanner/core/config/localsearch/LocalSearchSolverPhaseConfig/setMoveSelectorConfig(org.optaplanner.core.config.heuristic.selector.move.MoveSelectorConfig)|",
      "|java+method:///org/optaplanner/core/config/solver/SolverConfig/setSolverPhaseConfigList(java.util.List)|",
      "|java+constructor:///org/optaplanner/core/config/heuristic/selector/move/generic/ChangeMoveSelectorConfig/ChangeMoveSelectorConfig()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/optaplanner/core/config/solver/SolverConfig/setSolutionClass(java.lang.Class)|",
      "|java+method:///org/optaplanner/core/config/score/director/ScoreDirectorFactoryConfig/setScoreDefinitionType(org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig$ScoreDefinitionType)|",
      "|java+constructor:///org/optaplanner/core/config/localsearch/LocalSearchSolverPhaseConfig/LocalSearchSolverPhaseConfig()|",
      "|java+constructor:///org/optaplanner/core/config/solver/SolverConfig/SolverConfig()|",
      "|java+method:///org/optaplanner/core/config/solver/termination/TerminationConfig/setBestScoreLimit(java.lang.String)|",
      "|java+method:///org/optaplanner/core/config/solver/SolverConfig/buildSolver()|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///org/optaplanner/core/config/localsearch/decider/acceptor/AcceptorConfig/setEntityTabuSize(java.lang.Integer)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/optaplanner/core/config/score/director/ScoreDirectorFactoryConfig/setScoreDrlList(java.util.List)|",
      "|java+method:///org/optaplanner/core/config/constructionheuristic/ConstructionHeuristicSolverPhaseConfig/setConstructionHeuristicType(org.optaplanner.core.config.constructionheuristic.ConstructionHeuristicSolverPhaseConfig$ConstructionHeuristicType)|",
      "|java+constructor:///org/optaplanner/core/config/score/director/ScoreDirectorFactoryConfig/ScoreDirectorFactoryConfig()|",
      "|java+method:///org/optaplanner/core/config/solver/SolverConfig/setTerminationConfig(org.optaplanner.core.config.solver.termination.TerminationConfig)|"
    ],
    "affectedLib": "org.optaplanner:optaplanner-core:6.1.0.Beta3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.optaplanner:optaplanner-examples:6.1.0.Beta2",
    "coordinatesV2": "org.optaplanner:optaplanner-examples:6.1.0.Beta3",
    "caller": "|java+method:///org/optaplanner/examples/nurserostering/app/NurseRosteringApp/createSolver()|",
    "called": "|java+method:///org/optaplanner/core/api/solver/SolverFactory/createFromXmlResource(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/optaplanner/core/config/solver/XmlSolverFactory/XmlSolverFactory(java.lang.String)|",
      "|java+method:///org/optaplanner/core/config/solver/XmlSolverFactory/buildSolver()|"
    ],
    "v2Body": [
      "|java+method:///org/optaplanner/core/api/solver/SolverFactory/createFromXmlResource(java.lang.String)|",
      "|java+method:///org/optaplanner/core/api/solver/SolverFactory/buildSolver()|"
    ],
    "affectedLib": "org.optaplanner:optaplanner-core:6.1.0.Beta3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.optaplanner:optaplanner-examples:6.1.0.Beta2",
    "coordinatesV2": "org.optaplanner:optaplanner-examples:6.1.0.Beta3",
    "caller": "|java+method:///org/optaplanner/examples/travelingtournament/app/TravelingTournamentApp/createSolver()|",
    "called": "|java+method:///org/optaplanner/core/api/solver/SolverFactory/createFromXmlResource(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/optaplanner/core/config/solver/XmlSolverFactory/XmlSolverFactory(java.lang.String)|",
      "|java+method:///org/optaplanner/core/config/solver/XmlSolverFactory/buildSolver()|"
    ],
    "v2Body": [
      "|java+method:///org/optaplanner/core/api/solver/SolverFactory/createFromXmlResource(java.lang.String)|",
      "|java+method:///org/optaplanner/core/api/solver/SolverFactory/buildSolver()|"
    ],
    "affectedLib": "org.optaplanner:optaplanner-core:6.1.0.Beta3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.optaplanner:optaplanner-examples:6.1.0.Beta2",
    "coordinatesV2": "org.optaplanner:optaplanner-examples:6.1.0.Beta3",
    "caller": "|java+method:///org/optaplanner/examples/machinereassignment/app/MachineReassignmentApp/createSolver()|",
    "called": "|java+method:///org/optaplanner/core/api/solver/SolverFactory/createFromXmlResource(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/optaplanner/core/config/solver/XmlSolverFactory/XmlSolverFactory(java.lang.String)|",
      "|java+method:///org/optaplanner/core/config/solver/XmlSolverFactory/buildSolver()|"
    ],
    "v2Body": [
      "|java+method:///org/optaplanner/core/api/solver/SolverFactory/createFromXmlResource(java.lang.String)|",
      "|java+method:///org/optaplanner/core/api/solver/SolverFactory/buildSolver()|"
    ],
    "affectedLib": "org.optaplanner:optaplanner-core:6.1.0.Beta3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.optaplanner:optaplanner-examples:6.1.0.Beta2",
    "coordinatesV2": "org.optaplanner:optaplanner-examples:6.1.0.Beta3",
    "caller": "|java+method:///org/optaplanner/examples/curriculumcourse/app/CurriculumCourseApp/createSolver()|",
    "called": "|java+method:///org/optaplanner/core/api/solver/SolverFactory/createFromXmlResource(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/optaplanner/core/config/solver/XmlSolverFactory/XmlSolverFactory(java.lang.String)|",
      "|java+method:///org/optaplanner/core/config/solver/XmlSolverFactory/buildSolver()|"
    ],
    "v2Body": [
      "|java+method:///org/optaplanner/core/api/solver/SolverFactory/createFromXmlResource(java.lang.String)|",
      "|java+method:///org/optaplanner/core/api/solver/SolverFactory/buildSolver()|"
    ],
    "affectedLib": "org.optaplanner:optaplanner-core:6.1.0.Beta3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.optaplanner:optaplanner-examples:6.1.0.Beta2",
    "coordinatesV2": "org.optaplanner:optaplanner-examples:6.1.0.Beta3",
    "caller": "|java+method:///org/optaplanner/examples/nqueens/app/NQueensApp/createSolverByXml()|",
    "called": "|java+method:///org/optaplanner/core/api/solver/SolverFactory/createFromXmlResource(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/optaplanner/core/config/solver/XmlSolverFactory/XmlSolverFactory(java.lang.String)|",
      "|java+method:///org/optaplanner/core/config/solver/XmlSolverFactory/buildSolver()|"
    ],
    "v2Body": [
      "|java+method:///org/optaplanner/core/api/solver/SolverFactory/createFromXmlResource(java.lang.String)|",
      "|java+method:///org/optaplanner/core/api/solver/SolverFactory/buildSolver()|"
    ],
    "affectedLib": "org.optaplanner:optaplanner-core:6.1.0.Beta3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.optaplanner:optaplanner-examples:6.1.0.Beta2",
    "coordinatesV2": "org.optaplanner:optaplanner-examples:6.1.0.Beta3",
    "caller": "|java+method:///org/optaplanner/examples/cloudbalancing/app/CloudBalancingApp/createSolver()|",
    "called": "|java+method:///org/optaplanner/core/api/solver/SolverFactory/createFromXmlResource(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/optaplanner/core/config/solver/XmlSolverFactory/XmlSolverFactory(java.lang.String)|",
      "|java+method:///org/optaplanner/core/config/solver/XmlSolverFactory/buildSolver()|"
    ],
    "v2Body": [
      "|java+method:///org/optaplanner/core/api/solver/SolverFactory/createFromXmlResource(java.lang.String)|",
      "|java+method:///org/optaplanner/core/api/solver/SolverFactory/buildSolver()|"
    ],
    "affectedLib": "org.optaplanner:optaplanner-core:6.1.0.Beta3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.optaplanner:optaplanner-examples:6.1.0.Beta2",
    "coordinatesV2": "org.optaplanner:optaplanner-examples:6.1.0.Beta3",
    "caller": "|java+method:///org/optaplanner/examples/nqueens/app/NQueensHelloWorld/main(java.lang.String%5B%5D)|",
    "called": "|java+method:///org/optaplanner/core/api/solver/SolverFactory/createFromXmlResource(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/optaplanner/core/api/solver/Solver/solve(org.optaplanner.core.impl.solution.Solution)|",
      "|java+constructor:///org/optaplanner/core/config/solver/XmlSolverFactory/XmlSolverFactory(java.lang.String)|",
      "|java+method:///org/optaplanner/examples/nqueens/app/NQueensHelloWorld/toDisplayString(org.optaplanner.examples.nqueens.domain.NQueens)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/optaplanner/examples/nqueens/persistence/NQueensGenerator/createNQueens(int)|",
      "|java+method:///org/optaplanner/core/api/solver/Solver/getBestSolution()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+constructor:///org/optaplanner/examples/nqueens/persistence/NQueensGenerator/NQueensGenerator()|",
      "|java+method:///org/optaplanner/core/api/solver/SolverFactory/buildSolver()|"
    ],
    "v2Body": [
      "|java+method:///org/optaplanner/core/api/solver/Solver/solve(org.optaplanner.core.impl.solution.Solution)|",
      "|java+method:///org/optaplanner/examples/nqueens/app/NQueensHelloWorld/toDisplayString(org.optaplanner.examples.nqueens.domain.NQueens)|",
      "|java+method:///org/optaplanner/core/api/solver/SolverFactory/createFromXmlResource(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/optaplanner/examples/nqueens/persistence/NQueensGenerator/createNQueens(int)|",
      "|java+method:///org/optaplanner/core/api/solver/Solver/getBestSolution()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+constructor:///org/optaplanner/examples/nqueens/persistence/NQueensGenerator/NQueensGenerator()|",
      "|java+method:///org/optaplanner/core/api/solver/SolverFactory/buildSolver()|"
    ],
    "affectedLib": "org.optaplanner:optaplanner-core:6.1.0.Beta3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.optaplanner:optaplanner-examples:6.1.0.Beta2",
    "coordinatesV2": "org.optaplanner:optaplanner-examples:6.1.0.Beta3",
    "caller": "|java+method:///org/optaplanner/examples/tennis/app/TennisApp/createSolver()|",
    "called": "|java+method:///org/optaplanner/core/api/solver/SolverFactory/createFromXmlResource(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/optaplanner/core/config/solver/XmlSolverFactory/XmlSolverFactory(java.lang.String)|",
      "|java+method:///org/optaplanner/core/config/solver/XmlSolverFactory/buildSolver()|"
    ],
    "v2Body": [
      "|java+method:///org/optaplanner/core/api/solver/SolverFactory/createFromXmlResource(java.lang.String)|",
      "|java+method:///org/optaplanner/core/api/solver/SolverFactory/buildSolver()|"
    ],
    "affectedLib": "org.optaplanner:optaplanner-core:6.1.0.Beta3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.optaplanner:optaplanner-examples:6.1.0.Beta2",
    "coordinatesV2": "org.optaplanner:optaplanner-examples:6.1.0.Beta3",
    "caller": "|java+method:///org/optaplanner/examples/cloudbalancing/app/CloudBalancingHelloWorld/main(java.lang.String%5B%5D)|",
    "called": "|java+method:///org/optaplanner/core/api/solver/SolverFactory/createFromXmlResource(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/optaplanner/core/api/solver/Solver/solve(org.optaplanner.core.impl.solution.Solution)|",
      "|java+constructor:///org/optaplanner/core/config/solver/XmlSolverFactory/XmlSolverFactory(java.lang.String)|",
      "|java+constructor:///org/optaplanner/examples/cloudbalancing/persistence/CloudBalancingGenerator/CloudBalancingGenerator()|",
      "|java+method:///org/optaplanner/examples/cloudbalancing/persistence/CloudBalancingGenerator/createCloudBalance(int,int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/optaplanner/core/api/solver/SolverFactory/buildSolver()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///org/optaplanner/core/api/solver/Solver/getBestSolution()|",
      "|java+method:///org/optaplanner/examples/cloudbalancing/app/CloudBalancingHelloWorld/toDisplayString(org.optaplanner.examples.cloudbalancing.domain.CloudBalance)|"
    ],
    "v2Body": [
      "|java+method:///org/optaplanner/core/api/solver/Solver/solve(org.optaplanner.core.impl.solution.Solution)|",
      "|java+constructor:///org/optaplanner/examples/cloudbalancing/persistence/CloudBalancingGenerator/CloudBalancingGenerator()|",
      "|java+method:///org/optaplanner/examples/cloudbalancing/persistence/CloudBalancingGenerator/createCloudBalance(int,int)|",
      "|java+method:///org/optaplanner/core/api/solver/SolverFactory/createFromXmlResource(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/optaplanner/core/api/solver/SolverFactory/buildSolver()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///org/optaplanner/core/api/solver/Solver/getBestSolution()|",
      "|java+method:///org/optaplanner/examples/cloudbalancing/app/CloudBalancingHelloWorld/toDisplayString(org.optaplanner.examples.cloudbalancing.domain.CloudBalance)|"
    ],
    "affectedLib": "org.optaplanner:optaplanner-core:6.1.0.Beta3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.optaplanner:optaplanner-examples:6.1.0.Beta2",
    "coordinatesV2": "org.optaplanner:optaplanner-examples:6.1.0.Beta3",
    "caller": "|java+method:///org/optaplanner/examples/tsp/app/TspApp/createSolver()|",
    "called": "|java+method:///org/optaplanner/core/api/solver/SolverFactory/createFromXmlResource(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/optaplanner/core/config/solver/XmlSolverFactory/XmlSolverFactory(java.lang.String)|",
      "|java+method:///org/optaplanner/core/config/solver/XmlSolverFactory/buildSolver()|"
    ],
    "v2Body": [
      "|java+method:///org/optaplanner/core/api/solver/SolverFactory/createFromXmlResource(java.lang.String)|",
      "|java+method:///org/optaplanner/core/api/solver/SolverFactory/buildSolver()|"
    ],
    "affectedLib": "org.optaplanner:optaplanner-core:6.1.0.Beta3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.optaplanner:optaplanner-examples:6.1.0.Beta2",
    "coordinatesV2": "org.optaplanner:optaplanner-examples:6.1.0.Beta3",
    "caller": "|java+method:///org/optaplanner/examples/common/business/SolutionBusiness/createChangeMove(java.lang.Object,java.lang.String,java.lang.Object)|",
    "called": "|java+constructor:///org/optaplanner/core/impl/heuristic/selector/move/generic/ChangeMove/ChangeMove(java.lang.Object,org.optaplanner.core.impl.domain.variable.descriptor.GenuineVariableDescriptor,java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/optaplanner/core/impl/domain/variable/descriptor/GenuineVariableDescriptor/isChained()|",
      "|java+constructor:///org/optaplanner/core/impl/heuristic/selector/move/generic/ChangeMove/ChangeMove(java.lang.Object,org.optaplanner.core.impl.domain.variable.descriptor.GenuineVariableDescriptor,java.lang.Object)|",
      "|java+method:///org/optaplanner/core/impl/score/director/ScoreDirector/getSolutionDescriptor()|",
      "|java+method:///org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptor/findVariableDescriptor(java.lang.Object,java.lang.String)|",
      "|java+constructor:///org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedChangeMove/ChainedChangeMove(java.lang.Object,org.optaplanner.core.impl.domain.variable.descriptor.GenuineVariableDescriptor,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+constructor:///org/optaplanner/core/impl/heuristic/selector/move/generic/ChangeMove/ChangeMove(java.lang.Object,org.optaplanner.core.impl.domain.variable.descriptor.GenuineVariableDescriptor,java.lang.Object)|",
      "|java+method:///org/optaplanner/core/impl/domain/solution/descriptor/SolutionDescriptor/findVariableDescriptor(java.lang.Object,java.lang.String)|",
      "|java+constructor:///org/optaplanner/core/impl/heuristic/selector/move/generic/chained/ChainedChangeMove/ChainedChangeMove(java.lang.Object,org.optaplanner.core.impl.domain.variable.descriptor.GenuineVariableDescriptor,java.lang.Object)|",
      "|java+method:///org/optaplanner/core/impl/domain/variable/descriptor/GenuineVariableDescriptor/isChained()|",
      "|java+method:///org/optaplanner/core/impl/score/director/InnerScoreDirector/getSolutionDescriptor()|"
    ],
    "affectedLib": "org.optaplanner:optaplanner-core:6.1.0.Beta3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.optaplanner:optaplanner-examples:6.1.0.Beta2",
    "coordinatesV2": "org.optaplanner:optaplanner-examples:6.1.0.Beta3",
    "caller": "|java+method:///org/optaplanner/examples/vehiclerouting/app/VehicleRoutingApp/createSolver()|",
    "called": "|java+method:///org/optaplanner/core/api/solver/SolverFactory/createFromXmlResource(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/optaplanner/core/config/solver/XmlSolverFactory/XmlSolverFactory(java.lang.String)|",
      "|java+method:///org/optaplanner/core/config/solver/XmlSolverFactory/buildSolver()|"
    ],
    "v2Body": [
      "|java+method:///org/optaplanner/core/api/solver/SolverFactory/createFromXmlResource(java.lang.String)|",
      "|java+method:///org/optaplanner/core/api/solver/SolverFactory/buildSolver()|"
    ],
    "affectedLib": "org.optaplanner:optaplanner-core:6.1.0.Beta3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.optaplanner:optaplanner-examples:6.1.0.Beta2",
    "coordinatesV2": "org.optaplanner:optaplanner-examples:6.1.0.Beta3",
    "caller": "|java+method:///org/optaplanner/examples/tsp/solver/score/TspIncrementalScoreCalculator/calculateScore()|",
    "called": "|java+method:///org/optaplanner/core/api/score/buildin/simplelong/SimpleLongScore/valueOf(long)|",
    "v1Body": [
      "|java+method:///org/optaplanner/examples/tsp/solver/score/TspIncrementalScoreCalculator/calculateScore()|",
      "|java+method:///org/optaplanner/core/api/score/buildin/simple/SimpleScore/valueOf(int)|"
    ],
    "v2Body": [
      "|java+method:///org/optaplanner/core/api/score/buildin/simplelong/SimpleLongScore/valueOf(long)|",
      "|java+method:///org/optaplanner/examples/tsp/solver/score/TspIncrementalScoreCalculator/calculateScore()|"
    ],
    "affectedLib": "org.optaplanner:optaplanner-core:6.1.0.Beta3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.optaplanner:optaplanner-examples:6.1.0.Beta2",
    "coordinatesV2": "org.optaplanner:optaplanner-examples:6.1.0.Beta3",
    "caller": "|java+method:///org/optaplanner/examples/pas/app/PatientAdmissionScheduleApp/createSolver()|",
    "called": "|java+method:///org/optaplanner/core/api/solver/SolverFactory/createFromXmlResource(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/optaplanner/core/config/solver/XmlSolverFactory/XmlSolverFactory(java.lang.String)|",
      "|java+method:///org/optaplanner/core/config/solver/XmlSolverFactory/buildSolver()|"
    ],
    "v2Body": [
      "|java+method:///org/optaplanner/core/api/solver/SolverFactory/createFromXmlResource(java.lang.String)|",
      "|java+method:///org/optaplanner/core/api/solver/SolverFactory/buildSolver()|"
    ],
    "affectedLib": "org.optaplanner:optaplanner-core:6.1.0.Beta3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.optaplanner:optaplanner-examples:6.1.0.Beta2",
    "coordinatesV2": "org.optaplanner:optaplanner-examples:6.1.0.Beta3",
    "caller": "|java+method:///org/optaplanner/examples/examination/app/ExaminationApp/createSolver()|",
    "called": "|java+method:///org/optaplanner/core/api/solver/SolverFactory/createFromXmlResource(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/optaplanner/core/config/solver/XmlSolverFactory/XmlSolverFactory(java.lang.String)|",
      "|java+method:///org/optaplanner/core/config/solver/XmlSolverFactory/buildSolver()|"
    ],
    "v2Body": [
      "|java+method:///org/optaplanner/core/api/solver/SolverFactory/createFromXmlResource(java.lang.String)|",
      "|java+method:///org/optaplanner/core/api/solver/SolverFactory/buildSolver()|"
    ],
    "affectedLib": "org.optaplanner:optaplanner-core:6.1.0.Beta3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.optaplanner:optaplanner-examples:6.1.0.Beta2",
    "coordinatesV2": "org.optaplanner:optaplanner-examples:6.1.0.Beta3",
    "caller": "|java+method:///org/optaplanner/examples/projectjobscheduling/app/ProjectJobSchedulingApp/createSolver()|",
    "called": "|java+method:///org/optaplanner/core/api/solver/SolverFactory/createFromXmlResource(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/optaplanner/core/config/solver/XmlSolverFactory/XmlSolverFactory(java.lang.String)|",
      "|java+method:///org/optaplanner/core/config/solver/XmlSolverFactory/buildSolver()|"
    ],
    "v2Body": [
      "|java+method:///org/optaplanner/core/api/solver/SolverFactory/createFromXmlResource(java.lang.String)|",
      "|java+method:///org/optaplanner/core/api/solver/SolverFactory/buildSolver()|"
    ],
    "affectedLib": "org.optaplanner:optaplanner-core:6.1.0.Beta3",
    "change": "UPDATED"
  }
]