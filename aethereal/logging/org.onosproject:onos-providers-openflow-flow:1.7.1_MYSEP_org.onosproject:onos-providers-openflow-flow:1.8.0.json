[
  {
    "coordinatesV1": "org.onosproject:onos-providers-openflow-flow:1.7.1",
    "coordinatesV2": "org.onosproject:onos-providers-openflow-flow:1.8.0",
    "caller": "|java+method:///org/onosproject/provider/of/flow/util/FlowEntryBuilder/handleSetField(org.onosproject.net.flow.TrafficTreatment$Builder,org.projectfloodlight.openflow.protocol.action.OFActionSetField,org.onosproject.net.driver.DriverHandler,org.onosproject.net.DeviceId)|",
    "called": "|java+method:///org/onlab/packet/Ip4Address/valueOf(int)|",
    "v1Body": [
      "|java+method:///java/lang/Byte/valueOf(byte)|",
      "|java+method:///org/onosproject/provider/of/flow/util/NoMappingFoundException/getMessage()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setEthDst(org.onlab.packet.MacAddress)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setEthSrc(org.onlab.packet.MacAddress)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getSpectralWidth()|",
      "|java+method:///org/onlab/packet/VlanId/vlanId(short)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setArpOp(short)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/onlab/packet/Ip4Address/valueOf(int)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setArpSpa(org.onlab.packet.IpAddress)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/extension(org.onosproject.net.flow.instructions.ExtensionTreatment,org.onosproject.net.DeviceId)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setVlanId(org.onlab.packet.VlanId)|",
      "|java+method:///org/onosproject/net/flow/instructions/Instructions/modL0Lambda(org.onosproject.net.Lambda)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/onosproject/net/driver/DriverHandler/hasBehaviour(java.lang.Class)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setVlanPcp(java.lang.Byte)|",
      "|java+method:///org/projectfloodlight/openflow/types/MacAddress/getLong()|",
      "|java+method:///org/projectfloodlight/openflow/types/OduSignalID/getTpn()|",
      "|java+method:///org/projectfloodlight/openflow/types/TransportPort/getPort()|",
      "|java+method:///org/onosproject/openflow/controller/ExtensionTreatmentInterpreter/mapAction(org.projectfloodlight.openflow.protocol.action.OFAction)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setMpls(org.onlab.packet.MplsLabel)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getGridType()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/match/MatchFields/ordinal()|",
      "|java+method:///org/onlab/packet/TpPort/tpPort(int)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/add(org.onosproject.net.flow.instructions.Instruction)|",
      "|java+method:///org/onosproject/net/driver/DriverHandler/behaviour(java.lang.Class)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getChannelSpacing()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/oxm/OFOxm/getValue()|",
      "|java+method:///org/onosproject/provider/of/flow/util/OpenFlowValueMapper/lookupGridType(byte)|",
      "|java+method:///org/onosproject/provider/of/flow/util/OpenFlowValueMapper/lookupChannelSpacing(byte)|",
      "|java+method:///org/projectfloodlight/openflow/types/OduSignalID/getTslen()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setArpSha(org.onlab.packet.MacAddress)|",
      "|java+method:///org/projectfloodlight/openflow/types/VlanPcp/getValue()|",
      "|java+method:///org/onosproject/net/Lambda/ochSignal(org.onosproject.net.GridType,org.onosproject.net.ChannelSpacing,int,int)|",
      "|java+method:///org/projectfloodlight/openflow/protocol/oxm/OFOxm/getMatchField()|",
      "|java+method:///java/lang/UnsupportedOperationException/getMessage()|",
      "|java+method:///org/onosproject/net/flow/instructions/Instructions/modL1OduSignalId(org.onosproject.net.OduSignalId)|",
      "|java+method:///org/projectfloodlight/openflow/types/OduSignalID/getTsmap()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setTunnelId(long)|",
      "|java+method:///org/onlab/packet/MplsLabel/mplsLabel(int)|",
      "|java+method:///org/projectfloodlight/openflow/types/U32/getValue()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setIpSrc(org.onlab.packet.IpAddress)|",
      "|java+method:///org/projectfloodlight/openflow/types/U64/getValue()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setIpDst(org.onlab.packet.IpAddress)|",
      "|java+method:///org/projectfloodlight/openflow/types/OFVlanVidMatch/getVlan()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionSetField/getField()|",
      "|java+method:///org/projectfloodlight/openflow/types/ArpOpcode/getOpcode()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setMplsBos(boolean)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getChannelNumber()|",
      "|java+method:///org/onlab/packet/MacAddress/valueOf(long)|",
      "|java+method:///org/onosproject/net/OduSignalId/oduSignalId(int,int,byte%5B%5D)|",
      "|java+method:///org/projectfloodlight/openflow/types/IPv4Address/getInt()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setUdpDst(org.onlab.packet.TpPort)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setTcpDst(org.onlab.packet.TpPort)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setUdpSrc(org.onlab.packet.TpPort)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setTcpSrc(org.onlab.packet.TpPort)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Byte/valueOf(byte)|",
      "|java+method:///org/onosproject/provider/of/flow/util/NoMappingFoundException/getMessage()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setEthDst(org.onlab.packet.MacAddress)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setEthSrc(org.onlab.packet.MacAddress)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getSpectralWidth()|",
      "|java+method:///org/onlab/packet/VlanId/vlanId(short)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setArpOp(short)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/onlab/packet/Ip4Address/valueOf(int)|",
      "|java+method:///org/projectfloodlight/openflow/types/OFBooleanValue/getValue()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setArpSpa(org.onlab.packet.IpAddress)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/extension(org.onosproject.net.flow.instructions.ExtensionTreatment,org.onosproject.net.DeviceId)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setVlanId(org.onlab.packet.VlanId)|",
      "|java+method:///org/onosproject/net/flow/instructions/Instructions/modL0Lambda(org.onosproject.net.Lambda)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/onosproject/net/driver/DriverHandler/hasBehaviour(java.lang.Class)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setVlanPcp(java.lang.Byte)|",
      "|java+method:///org/projectfloodlight/openflow/types/MacAddress/getLong()|",
      "|java+method:///org/projectfloodlight/openflow/types/OduSignalID/getTpn()|",
      "|java+method:///org/projectfloodlight/openflow/types/TransportPort/getPort()|",
      "|java+method:///org/onosproject/openflow/controller/ExtensionTreatmentInterpreter/mapAction(org.projectfloodlight.openflow.protocol.action.OFAction)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setMpls(org.onlab.packet.MplsLabel)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getGridType()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/match/MatchFields/ordinal()|",
      "|java+method:///org/onlab/packet/TpPort/tpPort(int)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/add(org.onosproject.net.flow.instructions.Instruction)|",
      "|java+method:///org/onosproject/net/driver/DriverHandler/behaviour(java.lang.Class)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getChannelSpacing()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/oxm/OFOxm/getValue()|",
      "|java+method:///org/onosproject/provider/of/flow/util/OpenFlowValueMapper/lookupGridType(byte)|",
      "|java+method:///org/onosproject/provider/of/flow/util/OpenFlowValueMapper/lookupChannelSpacing(byte)|",
      "|java+method:///org/projectfloodlight/openflow/types/OduSignalID/getTslen()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setArpSha(org.onlab.packet.MacAddress)|",
      "|java+method:///org/projectfloodlight/openflow/types/VlanPcp/getValue()|",
      "|java+method:///org/onosproject/net/Lambda/ochSignal(org.onosproject.net.GridType,org.onosproject.net.ChannelSpacing,int,int)|",
      "|java+method:///org/projectfloodlight/openflow/protocol/oxm/OFOxm/getMatchField()|",
      "|java+method:///java/lang/UnsupportedOperationException/getMessage()|",
      "|java+method:///org/onosproject/net/flow/instructions/Instructions/modL1OduSignalId(org.onosproject.net.OduSignalId)|",
      "|java+method:///org/projectfloodlight/openflow/types/OduSignalID/getTsmap()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setTunnelId(long)|",
      "|java+method:///org/onlab/packet/MplsLabel/mplsLabel(int)|",
      "|java+method:///org/projectfloodlight/openflow/types/U32/getValue()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setIpSrc(org.onlab.packet.IpAddress)|",
      "|java+method:///org/projectfloodlight/openflow/types/U64/getValue()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setIpDst(org.onlab.packet.IpAddress)|",
      "|java+method:///org/projectfloodlight/openflow/types/OFVlanVidMatch/getVlan()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionSetField/getField()|",
      "|java+method:///org/projectfloodlight/openflow/types/ArpOpcode/getOpcode()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setMplsBos(boolean)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getChannelNumber()|",
      "|java+method:///org/onlab/packet/MacAddress/valueOf(long)|",
      "|java+method:///org/onosproject/net/OduSignalId/oduSignalId(int,int,byte%5B%5D)|",
      "|java+method:///org/projectfloodlight/openflow/types/IPv4Address/getInt()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setUdpDst(org.onlab.packet.TpPort)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setTcpDst(org.onlab.packet.TpPort)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setUdpSrc(org.onlab.packet.TpPort)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setTcpSrc(org.onlab.packet.TpPort)|"
    ],
    "affectedLib": "org.onosproject:onlab-misc:1.8.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.onosproject:onos-providers-openflow-flow:1.7.1",
    "coordinatesV2": "org.onosproject:onos-providers-openflow-flow:1.8.0",
    "caller": "|java+method:///org/onosproject/provider/of/flow/util/FlowEntryBuilder/configureTreatmentBuilder(java.util.List,org.onosproject.net.flow.TrafficTreatment$Builder,org.onosproject.net.driver.DriverHandler,org.onosproject.net.DeviceId)|",
    "called": "|java+method:///org/onlab/packet/Ip4Address/valueOf(int)|",
    "v1Body": [
      "|java+method:///org/onlab/packet/Ip4Address/valueOf(int)|",
      "|java+constructor:///org/onosproject/core/DefaultGroupId/DefaultGroupId(int)|",
      "|java+method:///org/onosproject/net/driver/DriverHandler/hasBehaviour(java.lang.Class)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getSpectralWidth()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionGroup/getGroup()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFAction/getType()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setQueue(long)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/extension(org.onosproject.net.flow.instructions.ExtensionTreatment,org.onosproject.net.DeviceId)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setVlanId(org.onlab.packet.VlanId)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object)|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionOutput/getPort()|",
      "|java+method:///org/onosproject/net/flow/instructions/Instructions/modL0Lambda(org.onosproject.net.Lambda)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/copyTtlOut()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionCircuit/getField()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/copyTtlIn()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/Byte/valueOf(byte)|",
      "|java+constructor:///org/onlab/packet/EthType/EthType(int)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setVlanPcp(java.lang.Byte)|",
      "|java+method:///org/projectfloodlight/openflow/types/MacAddress/getLong()|",
      "|java+method:///org/onosproject/openflow/controller/ExtensionTreatmentInterpreter/mapAction(org.projectfloodlight.openflow.protocol.action.OFAction)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getGridType()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/pushVlan()|",
      "|java+method:///org/onosproject/net/driver/DriverHandler/behaviour(java.lang.Class)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getChannelSpacing()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/add(org.onosproject.net.flow.instructions.Instruction)|",
      "|java+method:///org/projectfloodlight/openflow/types/OFPort/getPortNumber()|",
      "|java+method:///org/onosproject/provider/of/flow/util/OpenFlowValueMapper/lookupGridType(byte)|",
      "|java+method:///org/onosproject/provider/of/flow/util/OpenFlowValueMapper/lookupChannelSpacing(byte)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/decMplsTtl()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/OFActionType/ordinal()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/decNwTtl()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setEthDst(org.onlab.packet.MacAddress)|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionEnqueue/getPort()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/popMpls(org.onlab.packet.EthType)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setEthSrc(org.onlab.packet.MacAddress)|",
      "|java+method:///org/projectfloodlight/openflow/types/VlanVid/getVlan()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/pushMpls()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setOutput(org.onosproject.net.PortNumber)|",
      "|java+method:///org/onosproject/net/Lambda/ochSignal(org.onosproject.net.GridType,org.onosproject.net.ChannelSpacing,int,int)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/projectfloodlight/openflow/types/VlanPcp/getValue()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionSetQueue/getQueueId()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionSetDlSrc/getDlAddr()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/oxm/OFOxmOchSigid/getValue()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionSetNwSrc/getNwAddr()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionSetDlDst/getDlAddr()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionExperimenter/getExperimenter()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionSetNwDst/getNwAddr()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionEnqueue/getQueueId()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setIpSrc(org.onlab.packet.IpAddress)|",
      "|java+method:///org/projectfloodlight/openflow/types/EthType/getValue()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionPopMpls/getEthertype()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setIpDst(org.onlab.packet.IpAddress)|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionSetVlanVid/getVlanVid()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionSetVlanPcp/getVlanPcp()|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getChannelNumber()|",
      "|java+method:///org/projectfloodlight/openflow/types/OFGroup/getGroupNumber()|",
      "|java+method:///org/onlab/packet/MacAddress/valueOf(long)|",
      "|java+method:///org/onosproject/net/PortNumber/portNumber(long)|",
      "|java+method:///org/projectfloodlight/openflow/types/IPv4Address/getInt()|",
      "|java+method:///org/onlab/packet/VlanId/vlanId(short)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/group(org.onosproject.core.GroupId)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/popVlan()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setQueue(long,org.onosproject.net.PortNumber)|",
      "|java+method:///org/onosproject/provider/of/flow/util/FlowEntryBuilder/handleSetField(org.onosproject.net.flow.TrafficTreatment$Builder,org.projectfloodlight.openflow.protocol.action.OFActionSetField,org.onosproject.net.driver.DriverHandler,org.onosproject.net.DeviceId)|"
    ],
    "v2Body": [
      "|java+method:///org/onlab/packet/Ip4Address/valueOf(int)|",
      "|java+constructor:///org/onosproject/core/DefaultGroupId/DefaultGroupId(int)|",
      "|java+method:///org/onosproject/net/driver/DriverHandler/hasBehaviour(java.lang.Class)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getSpectralWidth()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFAction/getType()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setQueue(long)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/extension(org.onosproject.net.flow.instructions.ExtensionTreatment,org.onosproject.net.DeviceId)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setVlanId(org.onlab.packet.VlanId)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object)|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionOutput/getPort()|",
      "|java+method:///org/onosproject/net/flow/instructions/Instructions/modL0Lambda(org.onosproject.net.Lambda)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/copyTtlOut()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionCircuit/getField()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/copyTtlIn()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/Byte/valueOf(byte)|",
      "|java+constructor:///org/onlab/packet/EthType/EthType(int)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setVlanPcp(java.lang.Byte)|",
      "|java+method:///org/projectfloodlight/openflow/types/MacAddress/getLong()|",
      "|java+method:///org/onosproject/openflow/controller/ExtensionTreatmentInterpreter/mapAction(org.projectfloodlight.openflow.protocol.action.OFAction)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getGridType()|",
      "|java+method:///org/onosproject/net/driver/DriverHandler/behaviour(java.lang.Class)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getChannelSpacing()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/add(org.onosproject.net.flow.instructions.Instruction)|",
      "|java+method:///org/projectfloodlight/openflow/types/OFPort/getPortNumber()|",
      "|java+method:///org/onosproject/provider/of/flow/util/OpenFlowValueMapper/lookupGridType(byte)|",
      "|java+method:///org/onosproject/provider/of/flow/util/OpenFlowValueMapper/lookupChannelSpacing(byte)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/decMplsTtl()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/OFActionType/ordinal()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/decNwTtl()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setEthDst(org.onlab.packet.MacAddress)|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionEnqueue/getPort()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/popMpls(org.onlab.packet.EthType)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setEthSrc(org.onlab.packet.MacAddress)|",
      "|java+method:///org/projectfloodlight/openflow/types/VlanVid/getVlan()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/pushMpls()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setOutput(org.onosproject.net.PortNumber)|",
      "|java+method:///org/onosproject/net/Lambda/ochSignal(org.onosproject.net.GridType,org.onosproject.net.ChannelSpacing,int,int)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/projectfloodlight/openflow/types/VlanPcp/getValue()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/pushVlan(org.onlab.packet.EthType)|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionGroup/getGroup()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionSetQueue/getQueueId()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionSetDlSrc/getDlAddr()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/oxm/OFOxmOchSigid/getValue()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionSetNwSrc/getNwAddr()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionSetDlDst/getDlAddr()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionExperimenter/getExperimenter()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionSetNwDst/getNwAddr()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionEnqueue/getQueueId()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setIpSrc(org.onlab.packet.IpAddress)|",
      "|java+method:///org/projectfloodlight/openflow/types/EthType/getValue()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionPopMpls/getEthertype()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setIpDst(org.onlab.packet.IpAddress)|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionSetVlanVid/getVlanVid()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionSetVlanPcp/getVlanPcp()|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getChannelNumber()|",
      "|java+method:///org/projectfloodlight/openflow/types/OFGroup/getGroupNumber()|",
      "|java+method:///org/onlab/packet/MacAddress/valueOf(long)|",
      "|java+method:///org/onosproject/net/PortNumber/portNumber(long)|",
      "|java+method:///org/projectfloodlight/openflow/types/IPv4Address/getInt()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionPushVlan/getEthertype()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///org/onlab/packet/EthType/EthType(short)|",
      "|java+method:///org/onlab/packet/VlanId/vlanId(short)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/group(org.onosproject.core.GroupId)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/popVlan()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setQueue(long,org.onosproject.net.PortNumber)|",
      "|java+method:///org/onosproject/provider/of/flow/util/FlowEntryBuilder/handleSetField(org.onosproject.net.flow.TrafficTreatment$Builder,org.projectfloodlight.openflow.protocol.action.OFActionSetField,org.onosproject.net.driver.DriverHandler,org.onosproject.net.DeviceId)|"
    ],
    "affectedLib": "org.onosproject:onlab-misc:1.8.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.onosproject:onos-providers-openflow-flow:1.7.1",
    "coordinatesV2": "org.onosproject:onos-providers-openflow-flow:1.8.0",
    "caller": "|java+method:///org/onosproject/provider/of/flow/util/FlowEntryBuilder/handleSetField(org.onosproject.net.flow.TrafficTreatment$Builder,org.projectfloodlight.openflow.protocol.action.OFActionSetField,org.onosproject.net.driver.DriverHandler,org.onosproject.net.DeviceId)|",
    "called": "|java+method:///org/onosproject/net/flow/instructions/Instructions/modL0Lambda(org.onosproject.net.Lambda)|",
    "v1Body": [
      "|java+method:///java/lang/Byte/valueOf(byte)|",
      "|java+method:///org/onosproject/provider/of/flow/util/NoMappingFoundException/getMessage()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setEthDst(org.onlab.packet.MacAddress)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setEthSrc(org.onlab.packet.MacAddress)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getSpectralWidth()|",
      "|java+method:///org/onlab/packet/VlanId/vlanId(short)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setArpOp(short)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/onlab/packet/Ip4Address/valueOf(int)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setArpSpa(org.onlab.packet.IpAddress)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/extension(org.onosproject.net.flow.instructions.ExtensionTreatment,org.onosproject.net.DeviceId)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setVlanId(org.onlab.packet.VlanId)|",
      "|java+method:///org/onosproject/net/flow/instructions/Instructions/modL0Lambda(org.onosproject.net.Lambda)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/onosproject/net/driver/DriverHandler/hasBehaviour(java.lang.Class)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setVlanPcp(java.lang.Byte)|",
      "|java+method:///org/projectfloodlight/openflow/types/MacAddress/getLong()|",
      "|java+method:///org/projectfloodlight/openflow/types/OduSignalID/getTpn()|",
      "|java+method:///org/projectfloodlight/openflow/types/TransportPort/getPort()|",
      "|java+method:///org/onosproject/openflow/controller/ExtensionTreatmentInterpreter/mapAction(org.projectfloodlight.openflow.protocol.action.OFAction)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setMpls(org.onlab.packet.MplsLabel)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getGridType()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/match/MatchFields/ordinal()|",
      "|java+method:///org/onlab/packet/TpPort/tpPort(int)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/add(org.onosproject.net.flow.instructions.Instruction)|",
      "|java+method:///org/onosproject/net/driver/DriverHandler/behaviour(java.lang.Class)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getChannelSpacing()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/oxm/OFOxm/getValue()|",
      "|java+method:///org/onosproject/provider/of/flow/util/OpenFlowValueMapper/lookupGridType(byte)|",
      "|java+method:///org/onosproject/provider/of/flow/util/OpenFlowValueMapper/lookupChannelSpacing(byte)|",
      "|java+method:///org/projectfloodlight/openflow/types/OduSignalID/getTslen()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setArpSha(org.onlab.packet.MacAddress)|",
      "|java+method:///org/projectfloodlight/openflow/types/VlanPcp/getValue()|",
      "|java+method:///org/onosproject/net/Lambda/ochSignal(org.onosproject.net.GridType,org.onosproject.net.ChannelSpacing,int,int)|",
      "|java+method:///org/projectfloodlight/openflow/protocol/oxm/OFOxm/getMatchField()|",
      "|java+method:///java/lang/UnsupportedOperationException/getMessage()|",
      "|java+method:///org/onosproject/net/flow/instructions/Instructions/modL1OduSignalId(org.onosproject.net.OduSignalId)|",
      "|java+method:///org/projectfloodlight/openflow/types/OduSignalID/getTsmap()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setTunnelId(long)|",
      "|java+method:///org/onlab/packet/MplsLabel/mplsLabel(int)|",
      "|java+method:///org/projectfloodlight/openflow/types/U32/getValue()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setIpSrc(org.onlab.packet.IpAddress)|",
      "|java+method:///org/projectfloodlight/openflow/types/U64/getValue()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setIpDst(org.onlab.packet.IpAddress)|",
      "|java+method:///org/projectfloodlight/openflow/types/OFVlanVidMatch/getVlan()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionSetField/getField()|",
      "|java+method:///org/projectfloodlight/openflow/types/ArpOpcode/getOpcode()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setMplsBos(boolean)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getChannelNumber()|",
      "|java+method:///org/onlab/packet/MacAddress/valueOf(long)|",
      "|java+method:///org/onosproject/net/OduSignalId/oduSignalId(int,int,byte%5B%5D)|",
      "|java+method:///org/projectfloodlight/openflow/types/IPv4Address/getInt()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setUdpDst(org.onlab.packet.TpPort)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setTcpDst(org.onlab.packet.TpPort)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setUdpSrc(org.onlab.packet.TpPort)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setTcpSrc(org.onlab.packet.TpPort)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Byte/valueOf(byte)|",
      "|java+method:///org/onosproject/provider/of/flow/util/NoMappingFoundException/getMessage()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setEthDst(org.onlab.packet.MacAddress)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setEthSrc(org.onlab.packet.MacAddress)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getSpectralWidth()|",
      "|java+method:///org/onlab/packet/VlanId/vlanId(short)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setArpOp(short)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/onlab/packet/Ip4Address/valueOf(int)|",
      "|java+method:///org/projectfloodlight/openflow/types/OFBooleanValue/getValue()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setArpSpa(org.onlab.packet.IpAddress)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/extension(org.onosproject.net.flow.instructions.ExtensionTreatment,org.onosproject.net.DeviceId)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setVlanId(org.onlab.packet.VlanId)|",
      "|java+method:///org/onosproject/net/flow/instructions/Instructions/modL0Lambda(org.onosproject.net.Lambda)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/onosproject/net/driver/DriverHandler/hasBehaviour(java.lang.Class)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setVlanPcp(java.lang.Byte)|",
      "|java+method:///org/projectfloodlight/openflow/types/MacAddress/getLong()|",
      "|java+method:///org/projectfloodlight/openflow/types/OduSignalID/getTpn()|",
      "|java+method:///org/projectfloodlight/openflow/types/TransportPort/getPort()|",
      "|java+method:///org/onosproject/openflow/controller/ExtensionTreatmentInterpreter/mapAction(org.projectfloodlight.openflow.protocol.action.OFAction)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setMpls(org.onlab.packet.MplsLabel)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getGridType()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/match/MatchFields/ordinal()|",
      "|java+method:///org/onlab/packet/TpPort/tpPort(int)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/add(org.onosproject.net.flow.instructions.Instruction)|",
      "|java+method:///org/onosproject/net/driver/DriverHandler/behaviour(java.lang.Class)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getChannelSpacing()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/oxm/OFOxm/getValue()|",
      "|java+method:///org/onosproject/provider/of/flow/util/OpenFlowValueMapper/lookupGridType(byte)|",
      "|java+method:///org/onosproject/provider/of/flow/util/OpenFlowValueMapper/lookupChannelSpacing(byte)|",
      "|java+method:///org/projectfloodlight/openflow/types/OduSignalID/getTslen()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setArpSha(org.onlab.packet.MacAddress)|",
      "|java+method:///org/projectfloodlight/openflow/types/VlanPcp/getValue()|",
      "|java+method:///org/onosproject/net/Lambda/ochSignal(org.onosproject.net.GridType,org.onosproject.net.ChannelSpacing,int,int)|",
      "|java+method:///org/projectfloodlight/openflow/protocol/oxm/OFOxm/getMatchField()|",
      "|java+method:///java/lang/UnsupportedOperationException/getMessage()|",
      "|java+method:///org/onosproject/net/flow/instructions/Instructions/modL1OduSignalId(org.onosproject.net.OduSignalId)|",
      "|java+method:///org/projectfloodlight/openflow/types/OduSignalID/getTsmap()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setTunnelId(long)|",
      "|java+method:///org/onlab/packet/MplsLabel/mplsLabel(int)|",
      "|java+method:///org/projectfloodlight/openflow/types/U32/getValue()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setIpSrc(org.onlab.packet.IpAddress)|",
      "|java+method:///org/projectfloodlight/openflow/types/U64/getValue()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setIpDst(org.onlab.packet.IpAddress)|",
      "|java+method:///org/projectfloodlight/openflow/types/OFVlanVidMatch/getVlan()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionSetField/getField()|",
      "|java+method:///org/projectfloodlight/openflow/types/ArpOpcode/getOpcode()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setMplsBos(boolean)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getChannelNumber()|",
      "|java+method:///org/onlab/packet/MacAddress/valueOf(long)|",
      "|java+method:///org/onosproject/net/OduSignalId/oduSignalId(int,int,byte%5B%5D)|",
      "|java+method:///org/projectfloodlight/openflow/types/IPv4Address/getInt()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setUdpDst(org.onlab.packet.TpPort)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setTcpDst(org.onlab.packet.TpPort)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setUdpSrc(org.onlab.packet.TpPort)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setTcpSrc(org.onlab.packet.TpPort)|"
    ],
    "affectedLib": "org.onosproject:onos-api:1.8.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.onosproject:onos-providers-openflow-flow:1.7.1",
    "coordinatesV2": "org.onosproject:onos-providers-openflow-flow:1.8.0",
    "caller": "|java+method:///org/onosproject/provider/of/flow/util/FlowEntryBuilder/configureTreatmentBuilder(java.util.List,org.onosproject.net.flow.TrafficTreatment$Builder,org.onosproject.net.driver.DriverHandler,org.onosproject.net.DeviceId)|",
    "called": "|java+method:///org/onosproject/net/PortNumber/portNumber(long)|",
    "v1Body": [
      "|java+method:///org/onlab/packet/Ip4Address/valueOf(int)|",
      "|java+constructor:///org/onosproject/core/DefaultGroupId/DefaultGroupId(int)|",
      "|java+method:///org/onosproject/net/driver/DriverHandler/hasBehaviour(java.lang.Class)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getSpectralWidth()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionGroup/getGroup()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFAction/getType()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setQueue(long)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/extension(org.onosproject.net.flow.instructions.ExtensionTreatment,org.onosproject.net.DeviceId)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setVlanId(org.onlab.packet.VlanId)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object)|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionOutput/getPort()|",
      "|java+method:///org/onosproject/net/flow/instructions/Instructions/modL0Lambda(org.onosproject.net.Lambda)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/copyTtlOut()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionCircuit/getField()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/copyTtlIn()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/Byte/valueOf(byte)|",
      "|java+constructor:///org/onlab/packet/EthType/EthType(int)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setVlanPcp(java.lang.Byte)|",
      "|java+method:///org/projectfloodlight/openflow/types/MacAddress/getLong()|",
      "|java+method:///org/onosproject/openflow/controller/ExtensionTreatmentInterpreter/mapAction(org.projectfloodlight.openflow.protocol.action.OFAction)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getGridType()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/pushVlan()|",
      "|java+method:///org/onosproject/net/driver/DriverHandler/behaviour(java.lang.Class)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getChannelSpacing()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/add(org.onosproject.net.flow.instructions.Instruction)|",
      "|java+method:///org/projectfloodlight/openflow/types/OFPort/getPortNumber()|",
      "|java+method:///org/onosproject/provider/of/flow/util/OpenFlowValueMapper/lookupGridType(byte)|",
      "|java+method:///org/onosproject/provider/of/flow/util/OpenFlowValueMapper/lookupChannelSpacing(byte)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/decMplsTtl()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/OFActionType/ordinal()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/decNwTtl()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setEthDst(org.onlab.packet.MacAddress)|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionEnqueue/getPort()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/popMpls(org.onlab.packet.EthType)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setEthSrc(org.onlab.packet.MacAddress)|",
      "|java+method:///org/projectfloodlight/openflow/types/VlanVid/getVlan()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/pushMpls()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setOutput(org.onosproject.net.PortNumber)|",
      "|java+method:///org/onosproject/net/Lambda/ochSignal(org.onosproject.net.GridType,org.onosproject.net.ChannelSpacing,int,int)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/projectfloodlight/openflow/types/VlanPcp/getValue()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionSetQueue/getQueueId()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionSetDlSrc/getDlAddr()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/oxm/OFOxmOchSigid/getValue()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionSetNwSrc/getNwAddr()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionSetDlDst/getDlAddr()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionExperimenter/getExperimenter()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionSetNwDst/getNwAddr()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionEnqueue/getQueueId()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setIpSrc(org.onlab.packet.IpAddress)|",
      "|java+method:///org/projectfloodlight/openflow/types/EthType/getValue()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionPopMpls/getEthertype()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setIpDst(org.onlab.packet.IpAddress)|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionSetVlanVid/getVlanVid()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionSetVlanPcp/getVlanPcp()|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getChannelNumber()|",
      "|java+method:///org/projectfloodlight/openflow/types/OFGroup/getGroupNumber()|",
      "|java+method:///org/onlab/packet/MacAddress/valueOf(long)|",
      "|java+method:///org/onosproject/net/PortNumber/portNumber(long)|",
      "|java+method:///org/projectfloodlight/openflow/types/IPv4Address/getInt()|",
      "|java+method:///org/onlab/packet/VlanId/vlanId(short)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/group(org.onosproject.core.GroupId)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/popVlan()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setQueue(long,org.onosproject.net.PortNumber)|",
      "|java+method:///org/onosproject/provider/of/flow/util/FlowEntryBuilder/handleSetField(org.onosproject.net.flow.TrafficTreatment$Builder,org.projectfloodlight.openflow.protocol.action.OFActionSetField,org.onosproject.net.driver.DriverHandler,org.onosproject.net.DeviceId)|"
    ],
    "v2Body": [
      "|java+method:///org/onlab/packet/Ip4Address/valueOf(int)|",
      "|java+constructor:///org/onosproject/core/DefaultGroupId/DefaultGroupId(int)|",
      "|java+method:///org/onosproject/net/driver/DriverHandler/hasBehaviour(java.lang.Class)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getSpectralWidth()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFAction/getType()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setQueue(long)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/extension(org.onosproject.net.flow.instructions.ExtensionTreatment,org.onosproject.net.DeviceId)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setVlanId(org.onlab.packet.VlanId)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object)|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionOutput/getPort()|",
      "|java+method:///org/onosproject/net/flow/instructions/Instructions/modL0Lambda(org.onosproject.net.Lambda)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/copyTtlOut()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionCircuit/getField()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/copyTtlIn()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/Byte/valueOf(byte)|",
      "|java+constructor:///org/onlab/packet/EthType/EthType(int)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setVlanPcp(java.lang.Byte)|",
      "|java+method:///org/projectfloodlight/openflow/types/MacAddress/getLong()|",
      "|java+method:///org/onosproject/openflow/controller/ExtensionTreatmentInterpreter/mapAction(org.projectfloodlight.openflow.protocol.action.OFAction)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getGridType()|",
      "|java+method:///org/onosproject/net/driver/DriverHandler/behaviour(java.lang.Class)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getChannelSpacing()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/add(org.onosproject.net.flow.instructions.Instruction)|",
      "|java+method:///org/projectfloodlight/openflow/types/OFPort/getPortNumber()|",
      "|java+method:///org/onosproject/provider/of/flow/util/OpenFlowValueMapper/lookupGridType(byte)|",
      "|java+method:///org/onosproject/provider/of/flow/util/OpenFlowValueMapper/lookupChannelSpacing(byte)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/decMplsTtl()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/OFActionType/ordinal()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/decNwTtl()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setEthDst(org.onlab.packet.MacAddress)|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionEnqueue/getPort()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/popMpls(org.onlab.packet.EthType)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setEthSrc(org.onlab.packet.MacAddress)|",
      "|java+method:///org/projectfloodlight/openflow/types/VlanVid/getVlan()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/pushMpls()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setOutput(org.onosproject.net.PortNumber)|",
      "|java+method:///org/onosproject/net/Lambda/ochSignal(org.onosproject.net.GridType,org.onosproject.net.ChannelSpacing,int,int)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/projectfloodlight/openflow/types/VlanPcp/getValue()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/pushVlan(org.onlab.packet.EthType)|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionGroup/getGroup()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionSetQueue/getQueueId()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionSetDlSrc/getDlAddr()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/oxm/OFOxmOchSigid/getValue()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionSetNwSrc/getNwAddr()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionSetDlDst/getDlAddr()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionExperimenter/getExperimenter()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionSetNwDst/getNwAddr()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionEnqueue/getQueueId()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setIpSrc(org.onlab.packet.IpAddress)|",
      "|java+method:///org/projectfloodlight/openflow/types/EthType/getValue()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionPopMpls/getEthertype()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setIpDst(org.onlab.packet.IpAddress)|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionSetVlanVid/getVlanVid()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionSetVlanPcp/getVlanPcp()|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getChannelNumber()|",
      "|java+method:///org/projectfloodlight/openflow/types/OFGroup/getGroupNumber()|",
      "|java+method:///org/onlab/packet/MacAddress/valueOf(long)|",
      "|java+method:///org/onosproject/net/PortNumber/portNumber(long)|",
      "|java+method:///org/projectfloodlight/openflow/types/IPv4Address/getInt()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionPushVlan/getEthertype()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///org/onlab/packet/EthType/EthType(short)|",
      "|java+method:///org/onlab/packet/VlanId/vlanId(short)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/group(org.onosproject.core.GroupId)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/popVlan()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setQueue(long,org.onosproject.net.PortNumber)|",
      "|java+method:///org/onosproject/provider/of/flow/util/FlowEntryBuilder/handleSetField(org.onosproject.net.flow.TrafficTreatment$Builder,org.projectfloodlight.openflow.protocol.action.OFActionSetField,org.onosproject.net.driver.DriverHandler,org.onosproject.net.DeviceId)|"
    ],
    "affectedLib": "org.onosproject:onos-api:1.8.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.onosproject:onos-providers-openflow-flow:1.7.1",
    "coordinatesV2": "org.onosproject:onos-providers-openflow-flow:1.8.0",
    "caller": "|java+method:///org/onosproject/provider/of/flow/util/FlowEntryBuilder/handleSetField(org.onosproject.net.flow.TrafficTreatment$Builder,org.projectfloodlight.openflow.protocol.action.OFActionSetField,org.onosproject.net.driver.DriverHandler,org.onosproject.net.DeviceId)|",
    "called": "|java+method:///org/projectfloodlight/openflow/types/U32/getValue()|",
    "v1Body": [
      "|java+method:///java/lang/Byte/valueOf(byte)|",
      "|java+method:///org/onosproject/provider/of/flow/util/NoMappingFoundException/getMessage()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setEthDst(org.onlab.packet.MacAddress)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setEthSrc(org.onlab.packet.MacAddress)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getSpectralWidth()|",
      "|java+method:///org/onlab/packet/VlanId/vlanId(short)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setArpOp(short)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/onlab/packet/Ip4Address/valueOf(int)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setArpSpa(org.onlab.packet.IpAddress)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/extension(org.onosproject.net.flow.instructions.ExtensionTreatment,org.onosproject.net.DeviceId)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setVlanId(org.onlab.packet.VlanId)|",
      "|java+method:///org/onosproject/net/flow/instructions/Instructions/modL0Lambda(org.onosproject.net.Lambda)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/onosproject/net/driver/DriverHandler/hasBehaviour(java.lang.Class)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setVlanPcp(java.lang.Byte)|",
      "|java+method:///org/projectfloodlight/openflow/types/MacAddress/getLong()|",
      "|java+method:///org/projectfloodlight/openflow/types/OduSignalID/getTpn()|",
      "|java+method:///org/projectfloodlight/openflow/types/TransportPort/getPort()|",
      "|java+method:///org/onosproject/openflow/controller/ExtensionTreatmentInterpreter/mapAction(org.projectfloodlight.openflow.protocol.action.OFAction)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setMpls(org.onlab.packet.MplsLabel)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getGridType()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/match/MatchFields/ordinal()|",
      "|java+method:///org/onlab/packet/TpPort/tpPort(int)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/add(org.onosproject.net.flow.instructions.Instruction)|",
      "|java+method:///org/onosproject/net/driver/DriverHandler/behaviour(java.lang.Class)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getChannelSpacing()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/oxm/OFOxm/getValue()|",
      "|java+method:///org/onosproject/provider/of/flow/util/OpenFlowValueMapper/lookupGridType(byte)|",
      "|java+method:///org/onosproject/provider/of/flow/util/OpenFlowValueMapper/lookupChannelSpacing(byte)|",
      "|java+method:///org/projectfloodlight/openflow/types/OduSignalID/getTslen()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setArpSha(org.onlab.packet.MacAddress)|",
      "|java+method:///org/projectfloodlight/openflow/types/VlanPcp/getValue()|",
      "|java+method:///org/onosproject/net/Lambda/ochSignal(org.onosproject.net.GridType,org.onosproject.net.ChannelSpacing,int,int)|",
      "|java+method:///org/projectfloodlight/openflow/protocol/oxm/OFOxm/getMatchField()|",
      "|java+method:///java/lang/UnsupportedOperationException/getMessage()|",
      "|java+method:///org/onosproject/net/flow/instructions/Instructions/modL1OduSignalId(org.onosproject.net.OduSignalId)|",
      "|java+method:///org/projectfloodlight/openflow/types/OduSignalID/getTsmap()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setTunnelId(long)|",
      "|java+method:///org/onlab/packet/MplsLabel/mplsLabel(int)|",
      "|java+method:///org/projectfloodlight/openflow/types/U32/getValue()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setIpSrc(org.onlab.packet.IpAddress)|",
      "|java+method:///org/projectfloodlight/openflow/types/U64/getValue()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setIpDst(org.onlab.packet.IpAddress)|",
      "|java+method:///org/projectfloodlight/openflow/types/OFVlanVidMatch/getVlan()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionSetField/getField()|",
      "|java+method:///org/projectfloodlight/openflow/types/ArpOpcode/getOpcode()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setMplsBos(boolean)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getChannelNumber()|",
      "|java+method:///org/onlab/packet/MacAddress/valueOf(long)|",
      "|java+method:///org/onosproject/net/OduSignalId/oduSignalId(int,int,byte%5B%5D)|",
      "|java+method:///org/projectfloodlight/openflow/types/IPv4Address/getInt()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setUdpDst(org.onlab.packet.TpPort)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setTcpDst(org.onlab.packet.TpPort)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setUdpSrc(org.onlab.packet.TpPort)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setTcpSrc(org.onlab.packet.TpPort)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Byte/valueOf(byte)|",
      "|java+method:///org/onosproject/provider/of/flow/util/NoMappingFoundException/getMessage()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setEthDst(org.onlab.packet.MacAddress)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setEthSrc(org.onlab.packet.MacAddress)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getSpectralWidth()|",
      "|java+method:///org/onlab/packet/VlanId/vlanId(short)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setArpOp(short)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/onlab/packet/Ip4Address/valueOf(int)|",
      "|java+method:///org/projectfloodlight/openflow/types/OFBooleanValue/getValue()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setArpSpa(org.onlab.packet.IpAddress)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/extension(org.onosproject.net.flow.instructions.ExtensionTreatment,org.onosproject.net.DeviceId)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setVlanId(org.onlab.packet.VlanId)|",
      "|java+method:///org/onosproject/net/flow/instructions/Instructions/modL0Lambda(org.onosproject.net.Lambda)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/onosproject/net/driver/DriverHandler/hasBehaviour(java.lang.Class)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setVlanPcp(java.lang.Byte)|",
      "|java+method:///org/projectfloodlight/openflow/types/MacAddress/getLong()|",
      "|java+method:///org/projectfloodlight/openflow/types/OduSignalID/getTpn()|",
      "|java+method:///org/projectfloodlight/openflow/types/TransportPort/getPort()|",
      "|java+method:///org/onosproject/openflow/controller/ExtensionTreatmentInterpreter/mapAction(org.projectfloodlight.openflow.protocol.action.OFAction)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setMpls(org.onlab.packet.MplsLabel)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getGridType()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/match/MatchFields/ordinal()|",
      "|java+method:///org/onlab/packet/TpPort/tpPort(int)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/add(org.onosproject.net.flow.instructions.Instruction)|",
      "|java+method:///org/onosproject/net/driver/DriverHandler/behaviour(java.lang.Class)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getChannelSpacing()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/oxm/OFOxm/getValue()|",
      "|java+method:///org/onosproject/provider/of/flow/util/OpenFlowValueMapper/lookupGridType(byte)|",
      "|java+method:///org/onosproject/provider/of/flow/util/OpenFlowValueMapper/lookupChannelSpacing(byte)|",
      "|java+method:///org/projectfloodlight/openflow/types/OduSignalID/getTslen()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setArpSha(org.onlab.packet.MacAddress)|",
      "|java+method:///org/projectfloodlight/openflow/types/VlanPcp/getValue()|",
      "|java+method:///org/onosproject/net/Lambda/ochSignal(org.onosproject.net.GridType,org.onosproject.net.ChannelSpacing,int,int)|",
      "|java+method:///org/projectfloodlight/openflow/protocol/oxm/OFOxm/getMatchField()|",
      "|java+method:///java/lang/UnsupportedOperationException/getMessage()|",
      "|java+method:///org/onosproject/net/flow/instructions/Instructions/modL1OduSignalId(org.onosproject.net.OduSignalId)|",
      "|java+method:///org/projectfloodlight/openflow/types/OduSignalID/getTsmap()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setTunnelId(long)|",
      "|java+method:///org/onlab/packet/MplsLabel/mplsLabel(int)|",
      "|java+method:///org/projectfloodlight/openflow/types/U32/getValue()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setIpSrc(org.onlab.packet.IpAddress)|",
      "|java+method:///org/projectfloodlight/openflow/types/U64/getValue()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setIpDst(org.onlab.packet.IpAddress)|",
      "|java+method:///org/projectfloodlight/openflow/types/OFVlanVidMatch/getVlan()|",
      "|java+method:///org/projectfloodlight/openflow/protocol/action/OFActionSetField/getField()|",
      "|java+method:///org/projectfloodlight/openflow/types/ArpOpcode/getOpcode()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setMplsBos(boolean)|",
      "|java+method:///org/projectfloodlight/openflow/types/CircuitSignalID/getChannelNumber()|",
      "|java+method:///org/onlab/packet/MacAddress/valueOf(long)|",
      "|java+method:///org/onosproject/net/OduSignalId/oduSignalId(int,int,byte%5B%5D)|",
      "|java+method:///org/projectfloodlight/openflow/types/IPv4Address/getInt()|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setUdpDst(org.onlab.packet.TpPort)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setTcpDst(org.onlab.packet.TpPort)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setUdpSrc(org.onlab.packet.TpPort)|",
      "|java+method:///org/onosproject/net/flow/TrafficTreatment$Builder/setTcpSrc(org.onlab.packet.TpPort)|"
    ],
    "affectedLib": "org.onosproject:openflowj:0.9.7.onos",
    "change": "UPDATED"
  }
]