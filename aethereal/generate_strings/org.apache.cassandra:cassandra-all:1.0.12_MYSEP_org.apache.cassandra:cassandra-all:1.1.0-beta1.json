[
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/initialize(org.apache.hadoop.mapreduce.InputSplit,org.apache.hadoop.mapreduce.TaskAttemptContext)|",
    "called": "|java+method:///org/apache/thrift/transport/TSocket/open()|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputKeyspaceUserName(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getReadConsistencyLevel(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskAttemptContext/getConfiguration()|",
      "|java+constructor:///org/apache/cassandra/thrift/Cassandra$Client/Cassandra$Client(org.apache.thrift.protocol.TProtocol)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputKeyspacePassword(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/isEmptyPredicate(org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputSlicePredicate(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/cassandra/thrift/AuthenticationRequest/AuthenticationRequest(java.util.Map)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/getLocation()|",
      "|java+method:///org/apache/thrift/transport/TSocket/open()|",
      "|java+constructor:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader$RowIterator/ColumnFamilyRecordReader$RowIterator(org.apache.cassandra.hadoop.ColumnFamilyRecordReader,org.apache.cassandra.hadoop.ColumnFamilyRecordReader$1)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getRpcPort(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputKeyspace(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/set_keyspace(java.lang.String)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputSplitSize(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///org/apache/cassandra/thrift/ConsistencyLevel/valueOf(java.lang.String)|",
      "|java+constructor:///org/apache/thrift/transport/TFramedTransport/TFramedTransport(org.apache.thrift.transport.TTransport)|",
      "|java+constructor:///org/apache/thrift/transport/TSocket/TSocket(java.lang.String,int)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/login(org.apache.cassandra.thrift.AuthenticationRequest)|",
      "|java+constructor:///org/apache/cassandra/thrift/TBinaryProtocol/TBinaryProtocol(org.apache.thrift.transport.TTransport)|",
      "|java+method:///org/apache/thrift/transport/TSocket/isOpen()|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputColumnFamily(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getRangeBatchSize(org.apache.hadoop.conf.Configuration)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskAttemptContext/getConfiguration()|",
      "|java+constructor:///org/apache/cassandra/thrift/Cassandra$Client/Cassandra$Client(org.apache.thrift.protocol.TProtocol)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputKeyspacePassword(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/isEmptyPredicate(org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputSlicePredicate(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/cassandra/thrift/AuthenticationRequest/AuthenticationRequest(java.util.Map)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/getLocation()|",
      "|java+method:///org/apache/thrift/transport/TSocket/open()|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputRpcPort(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputIsWide(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputKeyspaceUserName(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getReadConsistencyLevel(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputKeyRange(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputKeyspace(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/set_keyspace(java.lang.String)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputSplitSize(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///org/apache/cassandra/thrift/ConsistencyLevel/valueOf(java.lang.String)|",
      "|java+constructor:///org/apache/thrift/transport/TFramedTransport/TFramedTransport(org.apache.thrift.transport.TTransport)|",
      "|java+constructor:///org/apache/thrift/transport/TSocket/TSocket(java.lang.String,int)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/login(org.apache.cassandra.thrift.AuthenticationRequest)|",
      "|java+constructor:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader$StaticRowIterator/ColumnFamilyRecordReader$StaticRowIterator(org.apache.cassandra.hadoop.ColumnFamilyRecordReader,org.apache.cassandra.hadoop.ColumnFamilyRecordReader$1)|",
      "|java+constructor:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader$WideRowIterator/ColumnFamilyRecordReader$WideRowIterator(org.apache.cassandra.hadoop.ColumnFamilyRecordReader,org.apache.cassandra.hadoop.ColumnFamilyRecordReader$1)|",
      "|java+constructor:///org/apache/cassandra/thrift/TBinaryProtocol/TBinaryProtocol(org.apache.thrift.transport.TTransport)|",
      "|java+method:///org/apache/thrift/transport/TSocket/isOpen()|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputColumnFamily(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getRangeBatchSize(org.apache.hadoop.conf.Configuration)|"
    ],
    "affectedLib": "org.apache.thrift:libthrift:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/db/RangeSliceCommandSerializer/serialize(org.apache.cassandra.db.RangeSliceCommand,java.io.DataOutput,int)|",
    "called": "|java+constructor:///org/apache/thrift/TSerializer/TSerializer(org.apache.thrift.protocol.TProtocolFactory)|",
    "v1Body": [
      "|java+constructor:///org/apache/cassandra/thrift/TBinaryProtocol$Factory/TBinaryProtocol$Factory()|",
      "|java+method:///java/io/DataOutput/writeUTF(java.lang.String)|",
      "|java+method:///org/apache/cassandra/dht/AbstractBounds/serializer()|",
      "|java+method:///java/nio/ByteBuffer/remaining()|",
      "|java+constructor:///org/apache/thrift/TSerializer/TSerializer(org.apache.thrift.protocol.TProtocolFactory)|",
      "|java+method:///org/apache/cassandra/dht/AbstractBounds$AbstractBoundsSerializer/serialize(org.apache.cassandra.dht.AbstractBounds,java.io.DataOutput)|",
      "|java+method:///java/io/DataOutput/writeInt(int)|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/write(java.nio.ByteBuffer,java.io.DataOutput)|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/serialize(org.apache.thrift.TSerializer,org.apache.thrift.TBase,java.io.DataOutput)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/dht/AbstractBounds$AbstractBoundsSerializer/serialize(org.apache.cassandra.dht.AbstractBounds,java.io.DataOutput,int)|",
      "|java+constructor:///org/apache/cassandra/thrift/TBinaryProtocol$Factory/TBinaryProtocol$Factory()|",
      "|java+method:///java/io/DataOutput/writeInt(int)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/io/DataOutput/writeUTF(java.lang.String)|",
      "|java+method:///org/apache/cassandra/dht/AbstractBounds/serializer()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/io/DataOutput/writeBoolean(boolean)|",
      "|java+method:///java/nio/ByteBuffer/remaining()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///org/apache/thrift/TSerializer/TSerializer(org.apache.thrift.protocol.TProtocolFactory)|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/write(java.nio.ByteBuffer,java.io.DataOutput)|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/serialize(org.apache.thrift.TSerializer,org.apache.thrift.TBase,java.io.DataOutput)|"
    ],
    "affectedLib": "org.apache.thrift:libthrift:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordWriter$RangeClient/run()|",
    "called": "|java+constructor:///org/apache/thrift/transport/TSocket/TSocket(java.lang.String,int)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyOutputFormat/createAuthenticatedClient(org.apache.thrift.transport.TSocket,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/batch_mutate(java.util.Map,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordWriter/access$000(org.apache.cassandra.hadoop.ColumnFamilyRecordWriter)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordWriter/access$200(org.apache.cassandra.hadoop.ColumnFamilyRecordWriter)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordWriter/access$300(org.apache.cassandra.hadoop.ColumnFamilyRecordWriter)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordWriter$RangeClient/closeInternal()|",
      "|java+method:///java/util/concurrent/BlockingQueue/isEmpty()|",
      "|java+constructor:///org/apache/thrift/transport/TSocket/TSocket(java.lang.String,int)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getRpcPort(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/concurrent/BlockingQueue/poll()|",
      "|java+method:///java/util/Map/size()|",
      "|java+method:///java/util/concurrent/BlockingQueue/take()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/net/InetAddress/getHostName()|",
      "|java+method:///java/util/Collections/singletonMap(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyOutputFormat/createAuthenticatedClient(org.apache.thrift.transport.TSocket,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/batch_mutate(java.util.Map,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordWriter/access$000(org.apache.cassandra.hadoop.ColumnFamilyRecordWriter)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordWriter/access$200(org.apache.cassandra.hadoop.ColumnFamilyRecordWriter)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordWriter/access$300(org.apache.cassandra.hadoop.ColumnFamilyRecordWriter)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordWriter$RangeClient/closeInternal()|",
      "|java+method:///java/util/concurrent/BlockingQueue/isEmpty()|",
      "|java+constructor:///org/apache/thrift/transport/TSocket/TSocket(java.lang.String,int)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/concurrent/BlockingQueue/poll()|",
      "|java+method:///java/util/Map/size()|",
      "|java+method:///java/util/concurrent/BlockingQueue/take()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/net/InetAddress/getHostName()|",
      "|java+method:///java/util/Collections/singletonMap(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getOutputRpcPort(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.Throwable)|"
    ],
    "affectedLib": "org.apache.thrift:libthrift:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/db/RangeSliceCommandSerializer/deserialize(java.io.DataInput,int)|",
    "called": "|java+constructor:///org/apache/thrift/TDeserializer/TDeserializer(org.apache.thrift.protocol.TProtocolFactory)|",
    "v1Body": [
      "|java+constructor:///org/apache/cassandra/thrift/TBinaryProtocol$Factory/TBinaryProtocol$Factory()|",
      "|java+method:///java/io/DataInput/readUTF()|",
      "|java+method:///java/io/DataInput/readInt()|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/deserialize(org.apache.thrift.TDeserializer,org.apache.thrift.TBase,java.io.DataInput)|",
      "|java+method:///java/io/DataInput/readFully(byte%5B%5D)|",
      "|java+constructor:///org/apache/thrift/TDeserializer/TDeserializer(org.apache.thrift.protocol.TProtocolFactory)|",
      "|java+method:///org/apache/cassandra/dht/AbstractBounds$AbstractBoundsSerializer/deserialize(java.io.DataInput)|",
      "|java+method:///org/apache/cassandra/db/RangeSliceCommandSerializer/deserialize(java.io.DataInput,int)|",
      "|java+method:///org/apache/cassandra/dht/AbstractBounds/serializer()|",
      "|java+constructor:///org/apache/cassandra/db/RangeSliceCommand/RangeSliceCommand(java.lang.String,java.lang.String,java.nio.ByteBuffer,org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.dht.AbstractBounds,int)|",
      "|java+method:///java/nio/ByteBuffer/wrap(byte%5B%5D)|",
      "|java+constructor:///org/apache/cassandra/thrift/SlicePredicate/SlicePredicate()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/cassandra/db/RangeSliceCommand/RangeSliceCommand(java.lang.String,java.lang.String,java.nio.ByteBuffer,org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.dht.AbstractBounds,java.util.List,int,boolean)|",
      "|java+constructor:///org/apache/cassandra/thrift/TBinaryProtocol$Factory/TBinaryProtocol$Factory()|",
      "|java+method:///java/io/DataInput/readUTF()|",
      "|java+method:///org/apache/cassandra/dht/AbstractBounds/serializer()|",
      "|java+method:///java/io/DataInput/readInt()|",
      "|java+method:///org/apache/cassandra/dht/AbstractBounds/toRowBounds()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/thrift/TDeserializer/TDeserializer(org.apache.thrift.protocol.TProtocolFactory)|",
      "|java+method:///org/apache/cassandra/db/RangeSliceCommandSerializer/deserialize(java.io.DataInput,int)|",
      "|java+method:///java/io/DataInput/readBoolean()|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+constructor:///org/apache/cassandra/thrift/IndexExpression/IndexExpression()|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/deserialize(org.apache.thrift.TDeserializer,org.apache.thrift.TBase,java.io.DataInput)|",
      "|java+method:///java/nio/ByteBuffer/wrap(byte%5B%5D)|",
      "|java+constructor:///org/apache/cassandra/thrift/SlicePredicate/SlicePredicate()|",
      "|java+method:///org/apache/cassandra/dht/AbstractBounds$AbstractBoundsSerializer/deserialize(java.io.DataInput,int)|",
      "|java+method:///java/io/DataInput/readFully(byte%5B%5D)|"
    ],
    "affectedLib": "org.apache.thrift:libthrift:0.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnData(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.Column,boolean)|",
    "called": "|java+method:///org/apache/cassandra/thrift/Column/isSetTimestamp()|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/summarize(java.nio.ByteBuffer)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/marshal/AbstractType/getString(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/db/marshal/MarshalException/getMessage()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getValueValidator(org.apache.cassandra.config.ColumnDefinition)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getColumnDefinition(java.nio.ByteBuffer)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/db/index/SecondaryIndexManager/validate(org.apache.cassandra.thrift.Column)|",
      "|java+method:///java/nio/ByteBuffer/remaining()|",
      "|java+method:///org/apache/cassandra/thrift/Column/isSetValue()|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/getIndexName()|",
      "|java+method:///org/apache/cassandra/thrift/Column/isSetTimestamp()|",
      "|java+method:///org/apache/cassandra/db/Table/getColumnFamilyStore(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/isDebugEnabled()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateTtl(org.apache.cassandra.thrift.Column)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/db/Table/open(java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/cassandra/db/marshal/AbstractType/validate(java.nio.ByteBuffer)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/bytesToHex(java.nio.ByteBuffer)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/summarize(java.nio.ByteBuffer)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/marshal/AbstractType/getString(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/db/marshal/MarshalException/getMessage()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getValueValidator(org.apache.cassandra.config.ColumnDefinition)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getColumnDefinition(java.nio.ByteBuffer)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/nio/ByteBuffer/remaining()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/thrift/Column/isSetValue()|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/getIndexName()|",
      "|java+method:///org/apache/cassandra/thrift/Column/isSetTimestamp()|",
      "|java+method:///org/slf4j/Logger/isDebugEnabled()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateTtl(org.apache.cassandra.thrift.Column)|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/getIndexType()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/cassandra/db/marshal/AbstractType/validate(java.nio.ByteBuffer)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/bytesToHex(java.nio.ByteBuffer)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/config/CFMetaData/fromThrift(org.apache.cassandra.thrift.CfDef)|",
    "called": "|java+method:///org/apache/cassandra/thrift/CfDef/isSetId()|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetKey_validation_class()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetGc_grace_seconds()|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetId()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/readRepairChance(double)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetRow_cache_save_period_in_seconds()|",
      "|java+method:///org/apache/cassandra/io/compress/CompressionParameters/create(java.util.Map)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetCompaction_strategy()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/mergeShardsChance(double)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetRow_cache_provider()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/bloomFilterFpChance(java.lang.Double)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/rowCacheSize(double)|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/newCacheProvider(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetRow_cache_keys_to_save()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/comment(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/rowCacheSavePeriod(int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/util/HashMap/HashMap(java.util.Map)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/rowCacheProvider(org.apache.cassandra.cache.IRowCacheProvider)|",
      "|java+method:///org/apache/cassandra/config/Schema/nextCFId()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/applyImplicitDefaults(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/gcGraceSeconds(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetKey_cache_save_period_in_seconds()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetMin_compaction_threshold()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/maxCompactionThreshold(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetBloom_filter_fp_chance()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/keyCacheSavePeriod(int)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/compressionParameters(org.apache.cassandra.io.compress.CompressionParameters)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetCompaction_strategy_options()|",
      "|java+method:///org/apache/cassandra/db/marshal/TypeParser/parse(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/fromThrift(java.util.List)|",
      "|java+constructor:///org/apache/cassandra/config/CFMetaData/CFMetaData(java.lang.String,java.lang.String,org.apache.cassandra.db.ColumnFamilyType,org.apache.cassandra.db.marshal.AbstractType,org.apache.cassandra.db.marshal.AbstractType,int)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/compactionStrategyOptions(java.util.Map)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetKey_alias()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/createCompactionStrategy(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/defaultValidator(org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyType/create(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/rowCacheKeysToSave(int)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/minCompactionThreshold(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetMax_compaction_threshold()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/keyCacheSize(double)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/keyValidator(org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/columnMetadata(java.util.Map)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/keyAlias(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/replicateOnWrite(boolean)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/validate()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetMerge_shards_chance()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetKey_validation_class()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/bloomFilterFpChance(java.lang.Double)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetId()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetValue_alias()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/compressionParameters(org.apache.cassandra.io.compress.CompressionParameters)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/valueAlias(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/io/compress/CompressionParameters/create(java.util.Map)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetCompaction_strategy()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/mergeShardsChance(double)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetGc_grace_seconds()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetColumn_aliases()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData$Caching/fromString(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetCaching()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/comment(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/util/HashMap/HashMap(java.util.Map)|",
      "|java+method:///org/apache/cassandra/config/Schema/nextCFId()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/applyImplicitDefaults(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/gcGraceSeconds(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetMin_compaction_threshold()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/maxCompactionThreshold(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetBloom_filter_fp_chance()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/caching(org.apache.cassandra.config.CFMetaData$Caching)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/readRepairChance(double)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetCompaction_strategy_options()|",
      "|java+method:///org/apache/cassandra/db/marshal/TypeParser/parse(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/config/CFMetaData/CFMetaData(java.lang.String,java.lang.String,org.apache.cassandra.db.ColumnFamilyType,org.apache.cassandra.db.marshal.AbstractType,org.apache.cassandra.db.marshal.AbstractType,int)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/compactionStrategyOptions(java.util.Map)|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/fromThrift(java.util.List)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/columnAliases(java.util.List)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetKey_alias()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/createCompactionStrategy(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/defaultValidator(org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyType/create(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/minCompactionThreshold(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetMax_compaction_threshold()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/keyValidator(org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/columnMetadata(java.util.Map)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetDclocal_read_repair_chance()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/keyAlias(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/replicateOnWrite(boolean)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/dclocalReadRepairChance(double)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/validate()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetMerge_shards_chance()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/cli/CliClient/updateCfDefAttributes(org.antlr.runtime.tree.Tree,org.apache.cassandra.thrift.CfDef)|",
    "called": "|java+method:///org/apache/cassandra/thrift/CfDef/setBloom_filter_fp_chance(double)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/thrift/CfDef/setCompaction_strategy_options(java.util.Map)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setDefault_validation_class(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setRead_repair_chance(double)|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getStrategyOptionsFromTree(org.antlr.runtime.tree.Tree)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setReplicate_on_write(boolean)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient$ColumnFamilyArgument/ordinal()|",
      "|java+method:///org/antlr/runtime/tree/Tree/getText()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setKey_cache_save_period_in_seconds(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setMin_compaction_threshold(int)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getChildCount()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setKey_cache_size(double)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setKey_validation_class(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setBloom_filter_fp_chance(double)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setRow_cache_provider(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setCompaction_strategy(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setCompression_options(java.util.Map)|",
      "|java+method:///java/lang/String/toUpperCase()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setRow_cache_keys_to_save(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setGc_grace_seconds(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setRow_cache_size(double)|",
      "|java+method:///org/apache/cassandra/cli/CliUtils/unescapeSQLString(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient$ColumnFamilyArgument/valueOf(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/CfDef/CfDef(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getChild(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setMax_compaction_threshold(int)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getCFColumnMetaFromTree(org.apache.cassandra.thrift.CfDef,org.antlr.runtime.tree.Tree)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setSubcomparator_type(java.lang.String)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setComment(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setColumn_metadata(java.util.List)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setColumn_type(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setRow_cache_save_period_in_seconds(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setComparator_type(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/thrift/CfDef/setCompaction_strategy_options(java.util.Map)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setDefault_validation_class(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setRead_repair_chance(double)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setCompaction_strategy(java.lang.String)|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getStrategyOptionsFromTree(org.antlr.runtime.tree.Tree)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setReplicate_on_write(boolean)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setDclocal_read_repair_chance(double)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient$ColumnFamilyArgument/ordinal()|",
      "|java+method:///org/antlr/runtime/tree/Tree/getText()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setMin_compaction_threshold(int)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getChildCount()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setKey_validation_class(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setBloom_filter_fp_chance(double)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setCompression_options(java.util.Map)|",
      "|java+method:///java/lang/String/toUpperCase()|",
      "|java+method:///org/apache/cassandra/cli/CliUtils/unescapeSQLString(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setGc_grace_seconds(int)|",
      "|java+method:///org/apache/cassandra/cli/CliClient$ColumnFamilyArgument/valueOf(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/CfDef/CfDef(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getChild(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setMax_compaction_threshold(int)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getCFColumnMetaFromTree(org.apache.cassandra.thrift.CfDef,org.antlr.runtime.tree.Tree)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setSubcomparator_type(java.lang.String)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setComment(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setColumn_metadata(java.util.List)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setCaching(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setColumn_type(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setComparator_type(java.lang.String)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateCfDef(org.apache.cassandra.thrift.CfDef,org.apache.cassandra.config.CFMetaData)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/all()|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///java/nio/ByteBuffer/equals(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getColumn_metadata()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getColumnDefinition(java.nio.ByteBuffer)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/nio/ByteBuffer/hasRemaining()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/db/marshal/TypeParser/parse(java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/marshal/AbstractType/validate(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/getIndexName()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyType/create(java.lang.String)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/getIndexType()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateMinMaxCompactionThresholds(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/io/compress/CompressionParameters/create(java.util.Map)|",
      "|java+method:///org/apache/cassandra/db/marshal/AsciiType/compose(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/getMessage()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/db/index/SecondaryIndex/createInstance(org.apache.cassandra.db.ColumnFamilyStore,org.apache.cassandra.config.ColumnDefinition)|",
      "|java+method:///org/apache/cassandra/db/migration/Migration/isLegalName(java.lang.String)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/getColumnFamilyName()|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/fromThrift(org.apache.cassandra.thrift.ColumnDef)|",
      "|java+constructor:///org/apache/cassandra/config/ConfigurationException/ConfigurationException(java.lang.String)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/db/marshal/AsciiType/validate(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/bytesToHex(java.nio.ByteBuffer)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/all()|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///java/nio/ByteBuffer/equals(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getColumn_metadata()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/nio/ByteBuffer/hasRemaining()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/db/marshal/TypeParser/parse(java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/marshal/AbstractType/validate(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/getIndexName()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyType/create(java.lang.String)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/getIndexType()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateMinMaxCompactionThresholds(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getColumnDefinition(java.nio.ByteBuffer)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/io/compress/CompressionParameters/create(java.util.Map)|",
      "|java+method:///org/apache/cassandra/db/marshal/AsciiType/compose(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/getMessage()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/db/index/SecondaryIndex/createInstance(org.apache.cassandra.db.ColumnFamilyStore,org.apache.cassandra.config.ColumnDefinition)|",
      "|java+method:///org/apache/cassandra/db/migration/Migration/isLegalName(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getColumnDefinitionComparator(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/getColumnFamilyName()|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/fromThrift(org.apache.cassandra.thrift.ColumnDef)|",
      "|java+constructor:///org/apache/cassandra/config/ConfigurationException/ConfigurationException(java.lang.String)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/db/marshal/AsciiType/validate(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/bytesToHex(java.nio.ByteBuffer)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/cql/AlterTableStatement/getCfDef(java.lang.String)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/db/marshal/AbstractType/fromString(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///java/nio/ByteBuffer/equals(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getColumnDefinition(java.nio.ByteBuffer)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/List/remove(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/setValidator(org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///org/apache/cassandra/cql/AlterTableStatement$OperationType/ordinal()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/toAvro()|",
      "|java+method:///org/apache/cassandra/config/Schema/getCFMetaData(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/config/ColumnDefinition/ColumnDefinition(java.nio.ByteBuffer,org.apache.cassandra.db.marshal.AbstractType,org.apache.cassandra.thrift.IndexType,java.util.Map,java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/db/marshal/TypeParser/parse(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/toAvro()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/db/marshal/AbstractType/fromString(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql/AlterTableStatement/applyPropertiesToCfDef(org.apache.cassandra.thrift.CfDef,org.apache.cassandra.cql.CFPropDefs)|",
      "|java+method:///org/apache/cassandra/cql/AlterTableStatement$OperationType/ordinal()|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/setValidation_class(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/List/remove(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/nio/ByteBuffer/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setKey_validation_class(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/toThrift()|",
      "|java+method:///org/apache/cassandra/db/marshal/AbstractType/toString()|",
      "|java+method:///org/apache/cassandra/config/Schema/getCFMetaData(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/config/ColumnDefinition/ColumnDefinition(java.nio.ByteBuffer,org.apache.cassandra.db.marshal.AbstractType,org.apache.cassandra.thrift.IndexType,java.util.Map,java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/db/marshal/TypeParser/parse(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/toThrift()|",
      "|java+method:///org/apache/cassandra/cql/CFPropDefs/validate()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+constructor:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader$RowIterator/ColumnFamilyRecordReader$RowIterator(org.apache.cassandra.hadoop.ColumnFamilyRecordReader)|",
    "called": "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_partitioner()|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_keyspace(java.lang.String)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/access$200(org.apache.cassandra.hadoop.ColumnFamilyRecordReader)|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/newPartitioner(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_partitioner()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///com/google/common/collect/AbstractIterator/AbstractIterator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/access$100(org.apache.cassandra.hadoop.ColumnFamilyRecordReader)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/access$300(org.apache.cassandra.hadoop.ColumnFamilyRecordReader)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/db/marshal/TypeParser/parse(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/List/indexOf(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_keyspace(java.lang.String)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/access$200(org.apache.cassandra.hadoop.ColumnFamilyRecordReader)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/access$400(org.apache.cassandra.hadoop.ColumnFamilyRecordReader)|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/newPartitioner(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_partitioner()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///com/google/common/collect/AbstractIterator/AbstractIterator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/access$300(org.apache.cassandra.hadoop.ColumnFamilyRecordReader)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/db/marshal/TypeParser/parse(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/List/indexOf(java.lang.Object)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateIndexClauses(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.IndexClause)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/Schema/getValueValidator(java.lang.String,java.lang.String,java.nio.ByteBuffer)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/db/Table/open(java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/marshal/AbstractType/validate(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/getComparatorFor(java.lang.String,java.lang.String,java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/bytesToHex(java.nio.ByteBuffer)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/db/marshal/MarshalException/getMessage()|",
      "|java+method:///org/apache/cassandra/db/index/SecondaryIndexManager/getIndexedColumns()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/db/Table/getColumnFamilyStore(java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateFilterClauses(org.apache.cassandra.config.CFMetaData,java.util.List)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/config/CFMetaData/toThrift()|",
    "called": "|java+method:///org/apache/cassandra/thrift/CfDef/setBloom_filter_fp_chance(double)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/thrift/CfDef/setCompaction_strategy_options(java.util.Map)|",
      "|java+constructor:///org/apache/cassandra/thrift/CfDef/CfDef(java.lang.String,java.lang.String)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError(java.lang.Object)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setReplicate_on_write(boolean)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setMax_compaction_threshold(int)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getKeyName()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/enforceCommentNotNull(java.lang.CharSequence)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setMin_compaction_threshold(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setKey_cache_save_period_in_seconds(int)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setDefault_validation_class(java.lang.String)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setMerge_shards_chance(double)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setId(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setRead_repair_chance(double)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setKey_cache_size(double)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setKey_validation_class(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setBloom_filter_fp_chance(double)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setRow_cache_provider(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setCompaction_strategy(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/getIndexOptions()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setCompression_options(java.util.Map)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/setIndex_type(org.apache.cassandra.thrift.IndexType)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setRow_cache_keys_to_save(int)|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/getIndexType()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/setIndex_options(java.util.Map)|",
      "|java+constructor:///java/util/HashMap/HashMap(java.util.Map)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/setName(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setRow_cache_size(double)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setKey_alias(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setGc_grace_seconds(int)|",
      "|java+method:///org/apache/cassandra/io/compress/CompressionParameters/asThriftOptions()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/getValidator()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyType/name()|",
      "|java+method:///java/util/Map/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Double/doubleValue()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/setValidation_class(java.lang.String)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///org/apache/cassandra/db/marshal/AbstractType/toString()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setSubcomparator_type(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setComment(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setColumn_metadata(java.util.List)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/setIndex_name(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/ColumnDef/ColumnDef()|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/getIndexName()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setColumn_type(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setRow_cache_save_period_in_seconds(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setComparator_type(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/thrift/CfDef/setCompaction_strategy_options(java.util.Map)|",
      "|java+constructor:///org/apache/cassandra/thrift/CfDef/CfDef(java.lang.String,java.lang.String)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError(java.lang.Object)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setReplicate_on_write(boolean)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setMax_compaction_threshold(int)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData$Caching/toString()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/enforceCommentNotNull(java.lang.CharSequence)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setMin_compaction_threshold(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setDefault_validation_class(java.lang.String)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setMerge_shards_chance(double)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setId(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setRead_repair_chance(double)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setKey_validation_class(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setBloom_filter_fp_chance(double)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setCompaction_strategy(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/getIndexOptions()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setCompression_options(java.util.Map)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/setIndex_type(org.apache.cassandra.thrift.IndexType)|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/getIndexType()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/setIndex_options(java.util.Map)|",
      "|java+constructor:///java/util/HashMap/HashMap(java.util.Map)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/setName(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setKey_alias(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setGc_grace_seconds(int)|",
      "|java+method:///org/apache/cassandra/io/compress/CompressionParameters/asThriftOptions()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/getValidator()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyType/name()|",
      "|java+method:///java/util/Map/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Double/doubleValue()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/setValidation_class(java.lang.String)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///org/apache/cassandra/db/marshal/AbstractType/toString()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setSubcomparator_type(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setDclocal_read_repair_chance(double)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setComment(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setColumn_metadata(java.util.List)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setCaching(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/setIndex_name(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/ColumnDef/ColumnDef()|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/getIndexName()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setColumn_type(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setComparator_type(java.lang.String)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyInputFormat/getSubSplits(java.lang.String,java.lang.String,org.apache.cassandra.thrift.TokenRange,org.apache.hadoop.conf.Configuration)|",
    "called": "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_splits(java.lang.String,java.lang.String,java.lang.String,int)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/createConnection(java.lang.String,java.lang.Integer,boolean)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/commons/lang/StringUtils/join(java.util.Collection,java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/set_keyspace(java.lang.String)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputSplitSize(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_splits(java.lang.String,java.lang.String,java.lang.String,int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getRpcPort(org.apache.hadoop.conf.Configuration)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/createConnection(java.lang.String,java.lang.Integer,boolean)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputRpcPort(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/commons/lang/StringUtils/join(java.util.Collection,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/set_keyspace(java.lang.String)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputSplitSize(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_splits(java.lang.String,java.lang.String,java.lang.String,int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/cli/CliClient/executeIncr(org.antlr.runtime.tree.Tree,long)|",
    "called": "|java+method:///org/apache/cassandra/thrift/ColumnParent/setSuper_column(byte%5B%5D)|",
    "v1Body": [
      "|java+method:///org/antlr/runtime/tree/Tree/getChildCount()|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/hasKeySpace()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/cli/CliMain/isConnected()|",
      "|java+method:///java/io/PrintStream/printf(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/CounterColumn/CounterColumn(java.nio.ByteBuffer,long)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/cli/CliCompiler/numColumnSpecifiers(org.antlr.runtime.tree.Tree)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/add(java.nio.ByteBuffer,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.CounterColumn,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getSubColumnName(java.lang.String,org.antlr.runtime.tree.Tree)|",
      "|java+method:///org/apache/cassandra/cli/CliCompiler/getColumnFamily(org.antlr.runtime.tree.Tree,java.util.List)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getCfDef(java.lang.String)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getChild(int)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getKeyAsBytes(java.lang.String,org.antlr.runtime.tree.Tree)|",
      "|java+constructor:///org/apache/cassandra/thrift/ColumnParent/ColumnParent(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnParent/setSuper_column(byte%5B%5D)|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getColumnName(java.lang.String,org.antlr.runtime.tree.Tree)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getText()|"
    ],
    "v2Body": [
      "|java+method:///org/antlr/runtime/tree/Tree/getChildCount()|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/hasKeySpace()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getChild(int)|",
      "|java+method:///org/apache/cassandra/cli/CliMain/isConnected()|",
      "|java+method:///java/io/PrintStream/printf(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/CounterColumn/CounterColumn(java.nio.ByteBuffer,long)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/cli/CliCompiler/numColumnSpecifiers(org.antlr.runtime.tree.Tree)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/add(java.nio.ByteBuffer,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.CounterColumn,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getSubColumnName(java.lang.String,org.antlr.runtime.tree.Tree)|",
      "|java+method:///org/apache/cassandra/cli/CliCompiler/getColumnFamily(org.antlr.runtime.tree.Tree,java.util.List)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getKeyAsBytes(java.lang.String,org.antlr.runtime.tree.Tree)|",
      "|java+constructor:///org/apache/cassandra/thrift/ColumnParent/ColumnParent(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnParent/setSuper_column(byte%5B%5D)|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getColumnName(java.lang.String,org.antlr.runtime.tree.Tree)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getText()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/setInputRange(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/KeyRange/KeyRange()|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/keyRangeToString(org.apache.cassandra.thrift.KeyRange)|",
      "|java+method:///org/apache/cassandra/thrift/KeyRange/setEnd_token(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/KeyRange/setStart_token(java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/KeyRange/KeyRange()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/thrift/KeyRange/setEnd_token(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/KeyRange/setStart_token(java.lang.String)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/thriftToString(org.apache.thrift.TBase)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/KeyRange/KeyRange()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/config/CFMetaData/applyImplicitDefaults(org.apache.cassandra.thrift.CfDef)|",
    "called": "|java+method:///org/apache/cassandra/thrift/CfDef/setMin_compaction_threshold(int)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/thrift/CfDef/setMerge_shards_chance(double)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetRow_cache_keys_to_save()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setMax_compaction_threshold(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setComment(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetMax_compaction_threshold()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setRow_cache_save_period_in_seconds(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetMerge_shards_chance()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setKey_cache_save_period_in_seconds(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setMin_compaction_threshold(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetReplicate_on_write()|",
      "|java+method:///java/util/Collections/emptyMap()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetComment()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setRow_cache_keys_to_save(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetKey_cache_save_period_in_seconds()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetMin_compaction_threshold()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setReplicate_on_write(boolean)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetRow_cache_save_period_in_seconds()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/thrift/CfDef/setMin_compaction_threshold(int)|",
      "|java+constructor:///org/apache/cassandra/config/CFMetaData$1/CFMetaData$1()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setMerge_shards_chance(double)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetMin_compaction_threshold()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetCompression_options()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setReplicate_on_write(boolean)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setMax_compaction_threshold(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setDclocal_read_repair_chance(double)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setComment(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetMax_compaction_threshold()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetDclocal_read_repair_chance()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetMerge_shards_chance()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetReplicate_on_write()|",
      "|java+method:///java/util/Collections/emptyMap()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/setCompression_options(java.util.Map)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetComment()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/thrift/CassandraServer/get_indexed_slices(org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.IndexClause,org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.thrift.ConsistencyLevel)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/TimedOutException/TimedOutException()|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/TimedOutException/TimedOutException()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnParent(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.ColumnParent)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String,boolean)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/thriftifyKeySlices(java.util.List,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasColumnFamilyAccess(java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/service/ClientState/getKeyspace()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateConsistencyLevel(java.lang.String,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/scan(java.lang.String,java.lang.String,org.apache.cassandra.thrift.IndexClause,org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateIndexClauses(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.IndexClause)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validatePredicate(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/dht/Bounds/Bounds(org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.RingPosition)|",
      "|java+constructor:///org/apache/cassandra/thrift/TimedOutException/TimedOutException()|",
      "|java+method:///org/apache/cassandra/db/RowPosition/forKey(java.nio.ByteBuffer,org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnParent(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.ColumnParent)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String,boolean)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/thriftifyKeySlices(java.util.List,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/getRangeSlice(org.apache.cassandra.db.RangeSliceCommand,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/service/ClientState/getKeyspace()|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getMinimumToken()|",
      "|java+constructor:///org/apache/cassandra/db/RangeSliceCommand/RangeSliceCommand(java.lang.String,java.lang.String,java.nio.ByteBuffer,org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.dht.AbstractBounds,java.util.List,int)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateIndexClauses(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.IndexClause)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validatePredicate(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasColumnFamilyAccess(java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateConsistencyLevel(java.lang.String,org.apache.cassandra.thrift.ConsistencyLevel,org.apache.cassandra.thrift.RequestType)|",
      "|java+method:///org/apache/cassandra/dht/Token/minKeyBound()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/cli/CliClient/describeKeySpace(java.lang.String,org.apache.cassandra.thrift.KsDef)|",
    "called": "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_keyspace(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/tools/NodeProbe/close()|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_keyspace(java.lang.String)|",
      "|java+method:///org/apache/cassandra/tools/NodeProbe/getCompactionManagerProxy()|",
      "|java+method:///org/apache/cassandra/db/compaction/CompactionInfo/getTaskType()|",
      "|java+method:///java/io/IOException/getMessage()|",
      "|java+method:///org/apache/cassandra/db/compaction/CompactionInfo/getBytesComplete()|",
      "|java+method:///java/lang/StringBuilder/append(boolean)|",
      "|java+method:///org/apache/cassandra/db/compaction/CompactionInfo/getTotalBytes()|",
      "|java+method:///java/io/PrintStream/printf(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/db/compaction/CompactionInfo/getColumnFamily()|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/toString(java.util.Map)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/describeColumnFamily(org.apache.cassandra.thrift.KsDef,org.apache.cassandra.thrift.CfDef,org.apache.cassandra.tools.NodeProbe)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Collections/sort(java.util.List,java.util.Comparator)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/cli/CliSessionState/getNodeProbe()|",
      "|java+constructor:///org/apache/cassandra/cli/CliClient$CfDefNamesComparator/CliClient$CfDefNamesComparator(org.apache.cassandra.cli.CliClient$1)|",
      "|java+method:///org/apache/cassandra/db/compaction/CompactionManagerMBean/getCompactions()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/tools/NodeProbe/close()|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_keyspace(java.lang.String)|",
      "|java+method:///org/apache/cassandra/tools/NodeProbe/getCompactionManagerProxy()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/describeColumnFamily(org.apache.cassandra.thrift.KsDef,org.apache.cassandra.thrift.CfDef,org.apache.cassandra.tools.NodeProbe)|",
      "|java+method:///java/io/IOException/getMessage()|",
      "|java+method:///java/lang/StringBuilder/append(boolean)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/io/PrintStream/printf(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/toString(java.util.Map)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/db/compaction/OperationType/toString()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Collections/sort(java.util.List,java.util.Comparator)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/cli/CliSessionState/getNodeProbe()|",
      "|java+constructor:///org/apache/cassandra/cli/CliClient$CfDefNamesComparator/CliClient$CfDefNamesComparator(org.apache.cassandra.cli.CliClient$1)|",
      "|java+method:///org/apache/cassandra/db/compaction/CompactionManagerMBean/getCompactions()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/cli/CliClient/executeAddKeySpace(org.antlr.runtime.tree.Tree)|",
    "called": "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/system_add_keyspace(org.apache.cassandra.thrift.KsDef)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_keyspace(java.lang.String)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/updateKsDefAttributes(org.antlr.runtime.tree.Tree,org.apache.cassandra.thrift.KsDef)|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///org/antlr/runtime/tree/Tree/getChild(int)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getText()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/validateSchemaIsSettled(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/system_add_keyspace(org.apache.cassandra.thrift.KsDef)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/cli/CliUtils/unescapeSQLString(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/KsDef/KsDef(java.lang.String,java.lang.String,java.util.List)|",
      "|java+method:///org/apache/cassandra/cli/CliMain/isConnected()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_keyspace(java.lang.String)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/updateKsDefAttributes(org.antlr.runtime.tree.Tree,org.apache.cassandra.thrift.KsDef)|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///org/antlr/runtime/tree/Tree/getChild(int)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getText()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/validateSchemaIsSettled(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/system_add_keyspace(org.apache.cassandra.thrift.KsDef)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/thrift/KsDef/KsDef(java.lang.String,java.lang.String,java.util.List)|",
      "|java+method:///org/apache/cassandra/cli/CliMain/isConnected()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/thrift/CassandraServer/truncate(java.lang.String)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/UnavailableException/UnavailableException()|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/release()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/schedule(long)|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasColumnFamilyAccess(java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+constructor:///org/apache/cassandra/thrift/UnavailableException/UnavailableException()|",
      "|java+method:///org/apache/cassandra/thrift/UnavailableException/initCause(java.lang.Throwable)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/truncateBlocking(java.lang.String,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/service/ClientState/getKeyspace()|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRpcTimeout()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/release()|",
      "|java+constructor:///org/apache/cassandra/thrift/TimedOutException/TimedOutException()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/schedule(long)|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasColumnFamilyAccess(java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+constructor:///org/apache/cassandra/thrift/UnavailableException/UnavailableException()|",
      "|java+method:///org/apache/cassandra/thrift/UnavailableException/initCause(java.lang.Throwable)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/truncateBlocking(java.lang.String,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/service/ClientState/getKeyspace()|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRpcTimeout()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/cql/DropIndexStatement/generateMutation(java.lang.String)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/config/Schema/getTableDefinition(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/db/migration/UpdateColumnFamily/UpdateColumnFamily(org.apache.cassandra.db.migration.avro.CfDef)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql/DropIndexStatement/getUpdatedCFDef(org.apache.cassandra.db.migration.avro.CfDef)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/toAvro()|",
      "|java+method:///org/apache/cassandra/config/KSMetaData/cfMetaData()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/config/Schema/getTableDefinition(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/db/migration/UpdateColumnFamily/UpdateColumnFamily(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/config/KSMetaData/cfMetaData()|",
      "|java+method:///org/apache/cassandra/cql/DropIndexStatement/getUpdatedCFDef(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/toThrift()|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/thrift/CassandraServer/get_range_slices(org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.thrift.KeyRange,org.apache.cassandra.thrift.ConsistencyLevel)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/TimedOutException/TimedOutException()|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/release()|",
      "|java+method:///org/apache/cassandra/dht/Token$TokenFactory/fromString(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/TimedOutException/TimedOutException()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnParent(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.ColumnParent)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/thriftifyKeySlices(java.util.List,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/schedule(long)|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/getRangeSlice(org.apache.cassandra.db.RangeSliceCommand,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getToken(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|",
      "|java+constructor:///org/apache/cassandra/db/RangeSliceCommand/RangeSliceCommand(java.lang.String,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.dht.AbstractBounds,int)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKeyRange(org.apache.cassandra.thrift.KeyRange)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validatePredicate(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+constructor:///org/apache/cassandra/dht/Bounds/Bounds(org.apache.cassandra.dht.Token,org.apache.cassandra.dht.Token)|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasColumnFamilyAccess(java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/service/ClientState/getKeyspace()|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRpcTimeout()|",
      "|java+constructor:///org/apache/cassandra/dht/Range/Range(org.apache.cassandra.dht.Token,org.apache.cassandra.dht.Token)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateConsistencyLevel(java.lang.String,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getTokenFactory()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/cassandra/dht/Range/makeRowRange(org.apache.cassandra.dht.Token,org.apache.cassandra.dht.Token,org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/dht/Token$TokenFactory/fromString(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/TimedOutException/TimedOutException()|",
      "|java+method:///org/apache/cassandra/db/RowPosition/forKey(java.nio.ByteBuffer,org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnParent(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.ColumnParent)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/thriftifyKeySlices(java.util.List,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/schedule(long)|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/release()|",
      "|java+constructor:///org/apache/cassandra/dht/Bounds/Bounds(org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.RingPosition)|",
      "|java+constructor:///org/apache/cassandra/db/RangeSliceCommand/RangeSliceCommand(java.lang.String,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.dht.AbstractBounds,java.util.List,int)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validatePredicate(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/getRangeSlice(org.apache.cassandra.db.RangeSliceCommand,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKeyRange(org.apache.cassandra.config.CFMetaData,java.nio.ByteBuffer,org.apache.cassandra.thrift.KeyRange)|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasColumnFamilyAccess(java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateConsistencyLevel(java.lang.String,org.apache.cassandra.thrift.ConsistencyLevel,org.apache.cassandra.thrift.RequestType)|",
      "|java+method:///org/apache/cassandra/service/ClientState/getKeyspace()|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRpcTimeout()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getTokenFactory()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/cli/CliClient/updateKsDefAttributes(org.antlr.runtime.tree.Tree,org.apache.cassandra.thrift.KsDef)|",
    "called": "|java+method:///org/apache/cassandra/thrift/KsDef/setDurable_writes(boolean)|",
    "v1Body": [
      "|java+method:///org/antlr/runtime/tree/Tree/getChildCount()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///org/apache/cassandra/cli/CliClient$AddKeyspaceArgument/valueOf(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/setCf_defs(java.util.List)|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/getStrategy_options()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/setStrategy_options(java.util.Map)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///java/lang/String/toUpperCase()|",
      "|java+method:///java/net/InetAddress/getLocalHost()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/cli/CliUtils/unescapeSQLString(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getStrategyOptionsFromTree(org.antlr.runtime.tree.Tree)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///org/apache/cassandra/locator/SimpleSnitch/getDatacenter(java.net.InetAddress)|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///org/antlr/runtime/tree/Tree/getChild(int)|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/setDurable_writes(boolean)|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/getStrategy_class()|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/setStrategy_class(java.lang.String)|",
      "|java+method:///java/lang/String/contains(java.lang.CharSequence)|",
      "|java+constructor:///org/apache/cassandra/locator/SimpleSnitch/SimpleSnitch()|",
      "|java+constructor:///org/apache/cassandra/thrift/KsDef/KsDef(org.apache.cassandra.thrift.KsDef)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getText()|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/unsetReplication_factor()|",
      "|java+method:///org/apache/cassandra/cli/CliClient$AddKeyspaceArgument/ordinal()|"
    ],
    "v2Body": [
      "|java+method:///org/antlr/runtime/tree/Tree/getChildCount()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/cli/CliUtils/unescapeSQLString(java.lang.String)|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///org/apache/cassandra/cli/CliClient$AddKeyspaceArgument/valueOf(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/setCf_defs(java.util.List)|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/getStrategy_options()|",
      "|java+method:///org/apache/cassandra/cli/CliClient$AddKeyspaceArgument/ordinal()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/setStrategy_options(java.util.Map)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///java/lang/String/toUpperCase()|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/getBroadcastAddress()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getStrategyOptionsFromTree(org.antlr.runtime.tree.Tree)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///org/apache/cassandra/locator/SimpleSnitch/getDatacenter(java.net.InetAddress)|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///org/antlr/runtime/tree/Tree/getChild(int)|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/setDurable_writes(boolean)|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/getStrategy_class()|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/setStrategy_class(java.lang.String)|",
      "|java+method:///java/lang/String/contains(java.lang.CharSequence)|",
      "|java+constructor:///org/apache/cassandra/locator/SimpleSnitch/SimpleSnitch()|",
      "|java+constructor:///org/apache/cassandra/thrift/KsDef/KsDef(org.apache.cassandra.thrift.KsDef)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getText()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/thrift/CassandraServer/system_update_keyspace(org.apache.cassandra.thrift.KsDef)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKsDef(org.apache.cassandra.thrift.KsDef)|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasKeyspaceSchemaAccess(org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateTable(java.lang.String)|",
      "|java+method:///java/io/IOException/getMessage()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/validateSchemaAgreement()|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/getMessage()|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/getCf_defs()|",
      "|java+method:///org/apache/cassandra/config/KSMetaData/fromThrift(org.apache.cassandra.thrift.KsDef,org.apache.cassandra.config.CFMetaData%5B%5D)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/applyMigrationOnStage(org.apache.cassandra.db.migration.Migration)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKeyspaceNotSystem(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/db/migration/UpdateKeyspace/UpdateKeyspace(org.apache.cassandra.config.KSMetaData)|",
      "|java+method:///org/apache/cassandra/thrift/InvalidRequestException/initCause(java.lang.Throwable)|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///org/apache/cassandra/config/Schema/getVersion()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKsDef(org.apache.cassandra.thrift.KsDef)|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasKeyspaceSchemaAccess(org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateTable(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/validateSchemaAgreement()|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/getCf_defs()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/applyMigrationOnStage(org.apache.cassandra.db.migration.Migration)|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/getMessage()|",
      "|java+constructor:///org/apache/cassandra/db/migration/UpdateKeyspace/UpdateKeyspace(org.apache.cassandra.thrift.KsDef)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKeyspaceNotSystem(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/InvalidRequestException/initCause(java.lang.Throwable)|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///org/apache/cassandra/config/Schema/getVersion()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/initialize(org.apache.hadoop.mapreduce.InputSplit,org.apache.hadoop.mapreduce.TaskAttemptContext)|",
    "called": "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/login(org.apache.cassandra.thrift.AuthenticationRequest)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputKeyspaceUserName(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getReadConsistencyLevel(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskAttemptContext/getConfiguration()|",
      "|java+constructor:///org/apache/cassandra/thrift/Cassandra$Client/Cassandra$Client(org.apache.thrift.protocol.TProtocol)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputKeyspacePassword(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/isEmptyPredicate(org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputSlicePredicate(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/cassandra/thrift/AuthenticationRequest/AuthenticationRequest(java.util.Map)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/getLocation()|",
      "|java+method:///org/apache/thrift/transport/TSocket/open()|",
      "|java+constructor:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader$RowIterator/ColumnFamilyRecordReader$RowIterator(org.apache.cassandra.hadoop.ColumnFamilyRecordReader,org.apache.cassandra.hadoop.ColumnFamilyRecordReader$1)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getRpcPort(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputKeyspace(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/set_keyspace(java.lang.String)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputSplitSize(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///org/apache/cassandra/thrift/ConsistencyLevel/valueOf(java.lang.String)|",
      "|java+constructor:///org/apache/thrift/transport/TFramedTransport/TFramedTransport(org.apache.thrift.transport.TTransport)|",
      "|java+constructor:///org/apache/thrift/transport/TSocket/TSocket(java.lang.String,int)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/login(org.apache.cassandra.thrift.AuthenticationRequest)|",
      "|java+constructor:///org/apache/cassandra/thrift/TBinaryProtocol/TBinaryProtocol(org.apache.thrift.transport.TTransport)|",
      "|java+method:///org/apache/thrift/transport/TSocket/isOpen()|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputColumnFamily(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getRangeBatchSize(org.apache.hadoop.conf.Configuration)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskAttemptContext/getConfiguration()|",
      "|java+constructor:///org/apache/cassandra/thrift/Cassandra$Client/Cassandra$Client(org.apache.thrift.protocol.TProtocol)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputKeyspacePassword(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/isEmptyPredicate(org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputSlicePredicate(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/cassandra/thrift/AuthenticationRequest/AuthenticationRequest(java.util.Map)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/getLocation()|",
      "|java+method:///org/apache/thrift/transport/TSocket/open()|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputRpcPort(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputIsWide(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputKeyspaceUserName(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getReadConsistencyLevel(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputKeyRange(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputKeyspace(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/set_keyspace(java.lang.String)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputSplitSize(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///org/apache/cassandra/thrift/ConsistencyLevel/valueOf(java.lang.String)|",
      "|java+constructor:///org/apache/thrift/transport/TFramedTransport/TFramedTransport(org.apache.thrift.transport.TTransport)|",
      "|java+constructor:///org/apache/thrift/transport/TSocket/TSocket(java.lang.String,int)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/login(org.apache.cassandra.thrift.AuthenticationRequest)|",
      "|java+constructor:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader$StaticRowIterator/ColumnFamilyRecordReader$StaticRowIterator(org.apache.cassandra.hadoop.ColumnFamilyRecordReader,org.apache.cassandra.hadoop.ColumnFamilyRecordReader$1)|",
      "|java+constructor:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader$WideRowIterator/ColumnFamilyRecordReader$WideRowIterator(org.apache.cassandra.hadoop.ColumnFamilyRecordReader,org.apache.cassandra.hadoop.ColumnFamilyRecordReader$1)|",
      "|java+constructor:///org/apache/cassandra/thrift/TBinaryProtocol/TBinaryProtocol(org.apache.thrift.transport.TTransport)|",
      "|java+method:///org/apache/thrift/transport/TSocket/isOpen()|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputColumnFamily(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getRangeBatchSize(org.apache.hadoop.conf.Configuration)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/thrift/CassandraServer/get_count(java.nio.ByteBuffer,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.thrift.ConsistencyLevel)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/SliceRange/SliceRange(java.nio.ByteBuffer,java.nio.ByteBuffer,boolean,int)|",
    "v1Body": [
      "|java+method:///java/nio/ByteBuffer/equals(java.lang.Object)|",
      "|java+method:///java/lang/Math/max(int,int)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/get_slice(java.nio.ByteBuffer,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getInMemoryCompactionLimit()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/getMeanRowSize()|",
      "|java+method:///org/apache/cassandra/service/ClientState/getKeyspace()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnOrSuperColumn/isSetColumn()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnOrSuperColumn/isSetCounter_column()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnOrSuperColumn/isSetSuper_column()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+constructor:///org/apache/cassandra/thrift/SliceRange/SliceRange(java.nio.ByteBuffer,java.nio.ByteBuffer,boolean,int)|",
      "|java+method:///org/apache/cassandra/db/Table/open(java.lang.String)|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasColumnFamilyAccess(java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/getMeanColumns()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/apache/cassandra/db/Table/getColumnFamilyStore(java.lang.String)|",
      "|java+method:///java/lang/Math/min(int,int)|"
    ],
    "v2Body": [
      "|java+method:///java/nio/ByteBuffer/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/getName(org.apache.cassandra.thrift.ColumnOrSuperColumn)|",
      "|java+method:///java/lang/Math/max(int,int)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/get_slice(java.nio.ByteBuffer,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getInMemoryCompactionLimit()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/getMeanRowSize()|",
      "|java+method:///org/apache/cassandra/service/ClientState/getKeyspace()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+constructor:///org/apache/cassandra/thrift/SliceRange/SliceRange(java.nio.ByteBuffer,java.nio.ByteBuffer,boolean,int)|",
      "|java+method:///org/apache/cassandra/db/Table/open(java.lang.String)|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasColumnFamilyAccess(java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/getMeanColumns()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/apache/cassandra/db/Table/getColumnFamilyStore(java.lang.String)|",
      "|java+method:///java/lang/Math/min(int,int)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/thrift/CassandraServer/internal_get(java.nio.ByteBuffer,org.apache.cassandra.thrift.ColumnPath,org.apache.cassandra.thrift.ConsistencyLevel)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/NotFoundException/NotFoundException()|",
    "v1Body": [
      "|java+constructor:///org/apache/cassandra/db/filter/QueryPath/QueryPath(java.lang.String,java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/decorateKey(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+constructor:///org/apache/cassandra/db/SliceByNamesReadCommand/SliceByNamesReadCommand(java.lang.String,java.nio.ByteBuffer,org.apache.cassandra.db.filter.QueryPath,java.util.Collection)|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasColumnFamilyAccess(java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/thriftifyColumnFamily(org.apache.cassandra.db.ColumnFamily,boolean,boolean)|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/readColumnFamily(java.util.List,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/service/ClientState/getKeyspace()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnPath(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.ColumnPath)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateConsistencyLevel(java.lang.String,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+constructor:///org/apache/cassandra/thrift/NotFoundException/NotFoundException()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKey(org.apache.cassandra.config.CFMetaData,java.nio.ByteBuffer)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/cassandra/db/filter/QueryPath/QueryPath(java.lang.String,java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/decorateKey(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+constructor:///org/apache/cassandra/db/SliceByNamesReadCommand/SliceByNamesReadCommand(java.lang.String,java.nio.ByteBuffer,org.apache.cassandra.db.filter.QueryPath,java.util.Collection)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/thriftifyColumnFamily(org.apache.cassandra.db.ColumnFamily,boolean,boolean)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/readColumnFamily(java.util.List,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasColumnFamilyAccess(java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateConsistencyLevel(java.lang.String,org.apache.cassandra.thrift.ConsistencyLevel,org.apache.cassandra.thrift.RequestType)|",
      "|java+method:///org/apache/cassandra/service/ClientState/getKeyspace()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnPath(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.ColumnPath)|",
      "|java+constructor:///org/apache/cassandra/thrift/NotFoundException/NotFoundException()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKey(org.apache.cassandra.config.CFMetaData,java.nio.ByteBuffer)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/thrift/CassandraServer/system_drop_keyspace(java.lang.String)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasKeyspaceSchemaAccess(org.apache.cassandra.auth.Permission)|",
      "|java+method:///java/io/IOException/getMessage()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/applyMigrationOnStage(org.apache.cassandra.db.migration.Migration)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/validateSchemaAgreement()|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/getMessage()|",
      "|java+constructor:///org/apache/cassandra/db/migration/DropKeyspace/DropKeyspace(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKeyspaceNotSystem(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/InvalidRequestException/initCause(java.lang.Throwable)|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///org/apache/cassandra/config/Schema/getVersion()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasKeyspaceSchemaAccess(org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/applyMigrationOnStage(org.apache.cassandra.db.migration.Migration)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/validateSchemaAgreement()|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/getMessage()|",
      "|java+constructor:///org/apache/cassandra/db/migration/DropKeyspace/DropKeyspace(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKeyspaceNotSystem(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/InvalidRequestException/initCause(java.lang.Throwable)|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///org/apache/cassandra/config/Schema/getVersion()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyInputFormat/getRangeMap(org.apache.hadoop.conf.Configuration)|",
    "called": "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_ring(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getClientFromAddressList(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_ring(java.lang.String)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputKeyspace(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getClientFromInputAddressList(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_ring(java.lang.String)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputKeyspace(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/config/KSMetaData/toThrift()|",
    "called": "|java+method:///org/apache/cassandra/thrift/KsDef/setDurable_writes(boolean)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/thrift/KsDef/setStrategy_options(java.util.Map)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/setDurable_writes(boolean)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/toThrift()|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/setReplication_factor(int)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/KSMetaData/cfMetaData()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/thrift/KsDef/KsDef(java.lang.String,java.lang.String,java.util.List)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/setStrategy_options(java.util.Map)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/setDurable_writes(boolean)|",
      "|java+method:///org/apache/cassandra/config/KSMetaData/cfMetaData()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/toThrift()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/thrift/KsDef/KsDef(java.lang.String,java.lang.String,java.util.List)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/cql/CreateKeyspaceStatement/validate()|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/locator/AbstractReplicationStrategy/getClass(java.lang.String)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/locator/AbstractReplicationStrategy/createReplicationStrategy(java.lang.String,java.lang.Class,org.apache.cassandra.locator.TokenMetadata,org.apache.cassandra.locator.IEndpointSnitch,java.util.Map)|",
      "|java+method:///org/apache/cassandra/service/StorageService/getTokenMetadata()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/getMessage()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/lang/String/contains(java.lang.CharSequence)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getEndpointSnitch()|",
      "|java+method:///java/lang/String/matches(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Map/keySet()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/locator/AbstractReplicationStrategy/getClass(java.lang.String)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/locator/AbstractReplicationStrategy/createReplicationStrategy(java.lang.String,java.lang.Class,org.apache.cassandra.locator.TokenMetadata,org.apache.cassandra.locator.IEndpointSnitch,java.util.Map)|",
      "|java+method:///org/apache/cassandra/service/StorageService/getTokenMetadata()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/getMessage()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/lang/String/contains(java.lang.CharSequence)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getEndpointSnitch()|",
      "|java+method:///java/lang/String/matches(java.lang.String)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Map/keySet()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/thrift/CassandraServer/doInsert(org.apache.cassandra.thrift.ConsistencyLevel,java.util.List)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/TimedOutException/TimedOutException()|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/release()|",
      "|java+constructor:///org/apache/cassandra/thrift/TimedOutException/TimedOutException()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/mutate(java.util.List,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/schedule(long)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateConsistencyLevel(java.lang.String,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/service/ClientState/getKeyspace()|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRpcTimeout()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/release()|",
      "|java+constructor:///org/apache/cassandra/thrift/TimedOutException/TimedOutException()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/mutate(java.util.List,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/schedule(long)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateConsistencyLevel(java.lang.String,org.apache.cassandra.thrift.ConsistencyLevel,org.apache.cassandra.thrift.RequestType)|",
      "|java+method:///org/apache/cassandra/service/ClientState/getKeyspace()|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRpcTimeout()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/thrift/CassandraServer/readColumnFamily(java.util.List,org.apache.cassandra.thrift.ConsistencyLevel)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/TimedOutException/TimedOutException()|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+constructor:///org/apache/cassandra/thrift/TimedOutException/TimedOutException()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/schedule(long)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRpcTimeout()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/read(java.util.List,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/release()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+constructor:///org/apache/cassandra/thrift/TimedOutException/TimedOutException()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/schedule(long)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRpcTimeout()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/read(java.util.List,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/release()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/thrift/CassandraServer/system_update_column_family(org.apache.cassandra.thrift.CfDef)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/db/migration/UpdateColumnFamily/UpdateColumnFamily(org.apache.cassandra.db.migration.avro.CfDef)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/applyImplicitDefaults(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///java/io/IOException/getMessage()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/applyMigrationOnStage(org.apache.cassandra.db.migration.Migration)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/fromThrift(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/validateSchemaAgreement()|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/getMessage()|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasColumnFamilySchemaAccess(org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateCfDef(org.apache.cassandra.thrift.CfDef,org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/addDefaultIndexNames(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/toAvro()|",
      "|java+method:///org/apache/cassandra/config/Schema/getCFMetaData(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/InvalidRequestException/initCause(java.lang.Throwable)|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///org/apache/cassandra/config/Schema/getVersion()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/applyImplicitDefaults(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/validateSchemaAgreement()|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/getMessage()|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasColumnFamilySchemaAccess(org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateCfDef(org.apache.cassandra.thrift.CfDef,org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/addDefaultIndexNames(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/applyMigrationOnStage(org.apache.cassandra.db.migration.Migration)|",
      "|java+constructor:///org/apache/cassandra/db/migration/UpdateColumnFamily/UpdateColumnFamily(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///org/apache/cassandra/config/Schema/getCFMetaData(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/InvalidRequestException/initCause(java.lang.Throwable)|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///org/apache/cassandra/config/Schema/getVersion()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/thrift/CassandraServer/system_drop_column_family(java.lang.String)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/db/migration/DropColumnFamily/DropColumnFamily(java.lang.String,java.lang.String)|",
      "|java+method:///java/io/IOException/getMessage()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/applyMigrationOnStage(org.apache.cassandra.db.migration.Migration)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/validateSchemaAgreement()|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/getMessage()|",
      "|java+method:///org/apache/cassandra/thrift/InvalidRequestException/initCause(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/service/ClientState/getKeyspace()|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasColumnFamilySchemaAccess(org.apache.cassandra.auth.Permission)|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///org/apache/cassandra/config/Schema/getVersion()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/db/migration/DropColumnFamily/DropColumnFamily(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/applyMigrationOnStage(org.apache.cassandra.db.migration.Migration)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/validateSchemaAgreement()|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/getMessage()|",
      "|java+method:///org/apache/cassandra/thrift/InvalidRequestException/initCause(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/service/ClientState/getKeyspace()|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasColumnFamilySchemaAccess(org.apache.cassandra.auth.Permission)|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///org/apache/cassandra/config/Schema/getVersion()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/thrift/CassandraServer/system_add_column_family(org.apache.cassandra.thrift.CfDef)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///java/io/IOException/getMessage()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/applyMigrationOnStage(org.apache.cassandra.db.migration.Migration)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/fromThrift(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/validateSchemaAgreement()|",
      "|java+method:///org/apache/cassandra/thrift/InvalidRequestException/initCause(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateCfDef(org.apache.cassandra.thrift.CfDef,org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/addDefaultIndexNames(org.apache.cassandra.thrift.CfDef)|",
      "|java+constructor:///org/apache/cassandra/db/migration/AddColumnFamily/AddColumnFamily(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/getMessage()|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasColumnFamilySchemaAccess(org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/unsetId()|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///org/apache/cassandra/config/Schema/getVersion()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/applyMigrationOnStage(org.apache.cassandra.db.migration.Migration)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/fromThrift(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/validateSchemaAgreement()|",
      "|java+method:///org/apache/cassandra/thrift/InvalidRequestException/initCause(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateCfDef(org.apache.cassandra.thrift.CfDef,org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/addDefaultIndexNames(org.apache.cassandra.thrift.CfDef)|",
      "|java+constructor:///org/apache/cassandra/db/migration/AddColumnFamily/AddColumnFamily(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/getMessage()|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasColumnFamilySchemaAccess(org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/unsetId()|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///org/apache/cassandra/config/Schema/getVersion()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/service/StorageService/describeRing(java.lang.String)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/TokenRange/TokenRange(java.lang.String,java.lang.String,java.util.List)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/cassandra/config/Schema/getNonSystemTables()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/thrift/TokenRange/setRpc_endpoints(java.util.List)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/net/InetAddress/getHostAddress()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getRpcaddress(java.net.InetAddress)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/TokenRange/setEndpoint_details(java.util.List)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/apache/cassandra/locator/IEndpointSnitch/getRack(java.net.InetAddress)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/locator/IEndpointSnitch/getDatacenter(java.net.InetAddress)|",
      "|java+constructor:///org/apache/cassandra/thrift/EndpointDetails/EndpointDetails()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/contains(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getEndpointSnitch()|",
      "|java+constructor:///org/apache/cassandra/thrift/TokenRange/TokenRange(java.lang.String,java.lang.String,java.util.List)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getRangeToAddressMap(java.lang.String)|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getTokenFactory()|",
      "|java+method:///org/apache/cassandra/dht/Token$TokenFactory/toString(org.apache.cassandra.dht.Token)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/cassandra/config/Schema/getNonSystemTables()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/thrift/TokenRange/setRpc_endpoints(java.util.List)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/net/InetAddress/getHostAddress()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getRpcaddress(java.net.InetAddress)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/TokenRange/setEndpoint_details(java.util.List)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/apache/cassandra/locator/IEndpointSnitch/getRack(java.net.InetAddress)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/locator/IEndpointSnitch/getDatacenter(java.net.InetAddress)|",
      "|java+constructor:///org/apache/cassandra/thrift/EndpointDetails/EndpointDetails()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/cassandra/dht/RingPosition/getToken()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/contains(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getEndpointSnitch()|",
      "|java+constructor:///org/apache/cassandra/thrift/TokenRange/TokenRange(java.lang.String,java.lang.String,java.util.List)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getRangeToAddressMap(java.lang.String)|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getTokenFactory()|",
      "|java+method:///org/apache/cassandra/dht/Token$TokenFactory/toString(org.apache.cassandra.dht.Token)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/client/RingCache/refreshEndpointMap()|",
    "called": "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_ring(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/thrift/TException/getMessage()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError(java.lang.Object)|",
      "|java+method:///com/google/common/collect/ArrayListMultimap/create()|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInitialAddress(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getClientFromAddressList(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getTokenFactory()|",
      "|java+method:///org/apache/cassandra/dht/Token$TokenFactory/fromString(java.lang.String)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getOutputKeyspace(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_ring(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+constructor:///org/apache/cassandra/dht/Range/Range(org.apache.cassandra.dht.Token,org.apache.cassandra.dht.Token,org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/net/InetAddress/getByName(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/thrift/TException/getMessage()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError(java.lang.Object)|",
      "|java+method:///com/google/common/collect/ArrayListMultimap/create()|",
      "|java+constructor:///org/apache/cassandra/dht/Range/Range(org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.IPartitioner)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getClientFromOutputAddressList(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getTokenFactory()|",
      "|java+method:///org/apache/cassandra/dht/Token$TokenFactory/fromString(java.lang.String)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getOutputKeyspace(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_ring(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getOutputInitialAddress(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/net/InetAddress/getByName(java.lang.String)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/cli/CliClient/describeColumnFamily(org.apache.cassandra.thrift.KsDef,org.apache.cassandra.thrift.CfDef,org.apache.cassandra.tools.NodeProbe)|",
    "called": "|java+method:///org/apache/cassandra/thrift/CfDef/isSetBloom_filter_fp_chance()|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/getIndex_type()|",
      "|java+method:///org/apache/cassandra/thrift/IndexType/name()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/getColumn_metadataSize()|",
      "|java+method:///org/apache/cassandra/db/marshal/AbstractType/getString(java.nio.ByteBuffer)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/getValidation_class()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStoreMBean/getBuiltIndexes()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/getIndex_options()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/getIndex_name()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/db/marshal/UTF8Type/getString(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/getName()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/io/PrintStream/printf(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/apache/cassandra/tools/NodeProbe/getCfsProxy(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/getColumn_metadata()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/isSetIndex_type()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/isSetIndex_options()|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getFormatType(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetBloom_filter_fp_chance()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/getName()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/isSetIndex_name()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/getRow_cache_provider()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/getIndex_type()|",
      "|java+method:///org/apache/cassandra/thrift/IndexType/name()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/getColumn_metadataSize()|",
      "|java+method:///org/apache/cassandra/db/marshal/AbstractType/getString(java.nio.ByteBuffer)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/getValidation_class()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStoreMBean/getBuiltIndexes()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/getIndex_options()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/getIndex_name()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/db/marshal/UTF8Type/getString(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/getName()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/io/PrintStream/printf(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/apache/cassandra/tools/NodeProbe/getCfsProxy(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/getColumn_metadata()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/isSetIndex_type()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/isSetIndex_options()|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getFormatType(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetBloom_filter_fp_chance()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/getName()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/isSetIndex_name()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/Map$Entry/getValue()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/db/HintedHandOffManager/getHintsSlice(int)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/ColumnParent/ColumnParent(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/thrift/SliceRange/setCount(int)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/getRangeSlice(org.apache.cassandra.db.RangeSliceCommand,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+constructor:///org/apache/cassandra/thrift/ColumnParent/ColumnParent(java.lang.String)|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getToken(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/SlicePredicate/setSlice_range(org.apache.cassandra.thrift.SliceRange)|",
      "|java+constructor:///org/apache/cassandra/dht/Range/Range(org.apache.cassandra.dht.Token,org.apache.cassandra.dht.Token)|",
      "|java+method:///org/apache/cassandra/thrift/SliceRange/setStart(byte%5B%5D)|",
      "|java+constructor:///org/apache/cassandra/thrift/SliceRange/SliceRange()|",
      "|java+constructor:///org/apache/cassandra/thrift/SlicePredicate/SlicePredicate()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|",
      "|java+method:///org/apache/cassandra/thrift/SliceRange/setFinish(byte%5B%5D)|",
      "|java+constructor:///org/apache/cassandra/db/RangeSliceCommand/RangeSliceCommand(java.lang.String,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.dht.AbstractBounds,int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/thrift/SliceRange/setCount(int)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/getRangeSlice(org.apache.cassandra.db.RangeSliceCommand,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+constructor:///org/apache/cassandra/thrift/ColumnParent/ColumnParent(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/SlicePredicate/setSlice_range(org.apache.cassandra.thrift.SliceRange)|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getMinimumToken()|",
      "|java+method:///org/apache/cassandra/thrift/SliceRange/setFinish(byte%5B%5D)|",
      "|java+method:///org/apache/cassandra/thrift/SliceRange/setStart(byte%5B%5D)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+constructor:///org/apache/cassandra/db/RangeSliceCommand/RangeSliceCommand(java.lang.String,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.dht.AbstractBounds,java.util.List,int)|",
      "|java+constructor:///org/apache/cassandra/dht/Range/Range(org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.RingPosition)|",
      "|java+constructor:///org/apache/cassandra/thrift/SliceRange/SliceRange()|",
      "|java+method:///org/apache/cassandra/dht/Token/minKeyBound()|",
      "|java+constructor:///org/apache/cassandra/thrift/SlicePredicate/SlicePredicate()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/thrift/CassandraServer/execute_cql_query(java.nio.ByteBuffer,org.apache.cassandra.thrift.Compression)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/util/zip/Inflater/inflate(byte%5B%5D)|",
      "|java+method:///java/util/zip/Inflater/setInput(byte%5B%5D,int,int)|",
      "|java+method:///org/apache/cassandra/thrift/Compression/ordinal()|",
      "|java+method:///org/apache/cassandra/io/util/FastByteArrayOutputStream/write(byte%5B%5D,int,int)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+constructor:///java/lang/String/String(byte%5B%5D,int,int,java.lang.String)|",
      "|java+method:///org/apache/cassandra/io/util/FastByteArrayOutputStream/size()|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/process(java.lang.String,org.apache.cassandra.service.ClientState)|",
      "|java+constructor:///org/apache/cassandra/io/util/FastByteArrayOutputStream/FastByteArrayOutputStream()|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/string(java.nio.ByteBuffer)|",
      "|java+method:///java/nio/ByteBuffer/get(byte%5B%5D,int,int)|",
      "|java+constructor:///java/util/zip/Inflater/Inflater()|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///java/util/zip/Inflater/finished()|",
      "|java+method:///java/nio/ByteBuffer/remaining()|",
      "|java+method:///java/nio/charset/CharacterCodingException/getMessage()|",
      "|java+method:///org/apache/cassandra/io/util/FastByteArrayOutputStream/toByteArray()|",
      "|java+method:///org/apache/cassandra/thrift/InvalidRequestException/initCause(java.lang.Throwable)|",
      "|java+method:///java/util/zip/Inflater/needsInput()|",
      "|java+method:///java/util/zip/Inflater/end()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/uncompress(java.nio.ByteBuffer,org.apache.cassandra.thrift.Compression)|",
      "|java+method:///org/apache/cassandra/service/ClientState/getCQLVersion()|",
      "|java+method:///org/apache/cassandra/cql3/QueryProcessor/process(java.lang.String,org.apache.cassandra.service.ClientState)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/thrift/InvalidRequestException/initCause(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/process(java.lang.String,org.apache.cassandra.service.ClientState)|",
      "|java+method:///org/slf4j/Logger/isDebugEnabled()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/thrift/CassandraServer/system_add_keyspace(org.apache.cassandra.thrift.KsDef)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKsDef(org.apache.cassandra.thrift.KsDef)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasKeyspaceSchemaAccess(org.apache.cassandra.auth.Permission)|",
      "|java+method:///java/io/IOException/getMessage()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/fromThrift(org.apache.cassandra.thrift.CfDef)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKeyspaceNotYetExisting(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/unsetId()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateCfDef(org.apache.cassandra.thrift.CfDef,org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/addDefaultIndexNames(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/db/migration/AddKeyspace/AddKeyspace(org.apache.cassandra.config.KSMetaData)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/applyMigrationOnStage(org.apache.cassandra.db.migration.Migration)|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///java/util/Collection/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/getName()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/validateSchemaAgreement()|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/getMessage()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/getKeyspace()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKeyspaceNotSystem(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/InvalidRequestException/initCause(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/getName()|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/config/KSMetaData/fromThrift(org.apache.cassandra.thrift.KsDef,org.apache.cassandra.config.CFMetaData%5B%5D)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///org/apache/cassandra/config/Schema/getVersion()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKsDef(org.apache.cassandra.thrift.KsDef)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasKeyspaceSchemaAccess(org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/fromThrift(org.apache.cassandra.thrift.CfDef)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKeyspaceNotYetExisting(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/unsetId()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateCfDef(org.apache.cassandra.thrift.CfDef,org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/addDefaultIndexNames(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/db/migration/AddKeyspace/AddKeyspace(org.apache.cassandra.config.KSMetaData)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/applyMigrationOnStage(org.apache.cassandra.db.migration.Migration)|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///java/util/Collection/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/getName()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/validateSchemaAgreement()|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/getMessage()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/getKeyspace()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKeyspaceNotSystem(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/InvalidRequestException/initCause(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/getName()|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/config/KSMetaData/fromThrift(org.apache.cassandra.thrift.KsDef,org.apache.cassandra.config.CFMetaData%5B%5D)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///org/apache/cassandra/config/Schema/getVersion()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/tools/BulkLoader$ExternalClient/init(java.lang.String)|",
    "called": "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_ring(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRpcPort()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/gms/Gossiper/getLiveMembers()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/tools/BulkLoader$ExternalClient/addRangeForEndpoint(org.apache.cassandra.dht.Range,java.net.InetAddress)|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableLoader$OutputHandler/output(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+method:///org/apache/cassandra/service/StorageService/initClient()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getTokenFactory()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_keyspaces()|",
      "|java+method:///org/apache/cassandra/dht/Token$TokenFactory/fromString(java.lang.String)|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/getBroadcastAddress()|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_ring(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/net/InetAddress/toString()|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///java/util/Set/remove(java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/dht/Range/Range(org.apache.cassandra.dht.Token,org.apache.cassandra.dht.Token)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|",
      "|java+method:///org/apache/cassandra/tools/BulkLoader$ExternalClient/createThriftClient(java.lang.String,int)|",
      "|java+method:///java/net/InetAddress/getByName(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/net/InetAddress/getHostAddress()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_keyspaces()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/dht/Token$TokenFactory/fromString(java.lang.String)|",
      "|java+method:///org/apache/cassandra/tools/BulkLoader$ExternalClient/getPartitioner()|",
      "|java+method:///org/apache/cassandra/tools/BulkLoader$ExternalClient/addRangeForEndpoint(org.apache.cassandra.dht.Range,java.net.InetAddress)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_partitioner()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/cassandra/tools/BulkLoader$ExternalClient/setPartitioner(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getTokenFactory()|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_ring(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/dht/Range/Range(org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.RingPosition)|",
      "|java+method:///org/apache/cassandra/tools/BulkLoader$ExternalClient/createThriftClient(java.lang.String,int)|",
      "|java+method:///java/net/InetAddress/getByName(java.lang.String)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordWriter$RangeClient/run()|",
    "called": "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/batch_mutate(java.util.Map,org.apache.cassandra.thrift.ConsistencyLevel)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyOutputFormat/createAuthenticatedClient(org.apache.thrift.transport.TSocket,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/batch_mutate(java.util.Map,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordWriter/access$000(org.apache.cassandra.hadoop.ColumnFamilyRecordWriter)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordWriter/access$200(org.apache.cassandra.hadoop.ColumnFamilyRecordWriter)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordWriter/access$300(org.apache.cassandra.hadoop.ColumnFamilyRecordWriter)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordWriter$RangeClient/closeInternal()|",
      "|java+method:///java/util/concurrent/BlockingQueue/isEmpty()|",
      "|java+constructor:///org/apache/thrift/transport/TSocket/TSocket(java.lang.String,int)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getRpcPort(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/concurrent/BlockingQueue/poll()|",
      "|java+method:///java/util/Map/size()|",
      "|java+method:///java/util/concurrent/BlockingQueue/take()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/net/InetAddress/getHostName()|",
      "|java+method:///java/util/Collections/singletonMap(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyOutputFormat/createAuthenticatedClient(org.apache.thrift.transport.TSocket,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/batch_mutate(java.util.Map,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordWriter/access$000(org.apache.cassandra.hadoop.ColumnFamilyRecordWriter)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordWriter/access$200(org.apache.cassandra.hadoop.ColumnFamilyRecordWriter)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordWriter/access$300(org.apache.cassandra.hadoop.ColumnFamilyRecordWriter)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordWriter$RangeClient/closeInternal()|",
      "|java+method:///java/util/concurrent/BlockingQueue/isEmpty()|",
      "|java+constructor:///org/apache/thrift/transport/TSocket/TSocket(java.lang.String,int)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/concurrent/BlockingQueue/poll()|",
      "|java+method:///java/util/Map/size()|",
      "|java+method:///java/util/concurrent/BlockingQueue/take()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/net/InetAddress/getHostName()|",
      "|java+method:///java/util/Collections/singletonMap(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getOutputRpcPort(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.Throwable)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.12",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.1.0-beta1",
    "caller": "|java+method:///org/apache/cassandra/db/RangeSliceCommandSerializer/deserialize(java.io.DataInput,int)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/SlicePredicate/SlicePredicate()|",
    "v1Body": [
      "|java+constructor:///org/apache/cassandra/thrift/TBinaryProtocol$Factory/TBinaryProtocol$Factory()|",
      "|java+method:///java/io/DataInput/readUTF()|",
      "|java+method:///java/io/DataInput/readInt()|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/deserialize(org.apache.thrift.TDeserializer,org.apache.thrift.TBase,java.io.DataInput)|",
      "|java+method:///java/io/DataInput/readFully(byte%5B%5D)|",
      "|java+constructor:///org/apache/thrift/TDeserializer/TDeserializer(org.apache.thrift.protocol.TProtocolFactory)|",
      "|java+method:///org/apache/cassandra/dht/AbstractBounds$AbstractBoundsSerializer/deserialize(java.io.DataInput)|",
      "|java+method:///org/apache/cassandra/db/RangeSliceCommandSerializer/deserialize(java.io.DataInput,int)|",
      "|java+method:///org/apache/cassandra/dht/AbstractBounds/serializer()|",
      "|java+constructor:///org/apache/cassandra/db/RangeSliceCommand/RangeSliceCommand(java.lang.String,java.lang.String,java.nio.ByteBuffer,org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.dht.AbstractBounds,int)|",
      "|java+method:///java/nio/ByteBuffer/wrap(byte%5B%5D)|",
      "|java+constructor:///org/apache/cassandra/thrift/SlicePredicate/SlicePredicate()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/cassandra/db/RangeSliceCommand/RangeSliceCommand(java.lang.String,java.lang.String,java.nio.ByteBuffer,org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.dht.AbstractBounds,java.util.List,int,boolean)|",
      "|java+constructor:///org/apache/cassandra/thrift/TBinaryProtocol$Factory/TBinaryProtocol$Factory()|",
      "|java+method:///java/io/DataInput/readUTF()|",
      "|java+method:///org/apache/cassandra/dht/AbstractBounds/serializer()|",
      "|java+method:///java/io/DataInput/readInt()|",
      "|java+method:///org/apache/cassandra/dht/AbstractBounds/toRowBounds()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/thrift/TDeserializer/TDeserializer(org.apache.thrift.protocol.TProtocolFactory)|",
      "|java+method:///org/apache/cassandra/db/RangeSliceCommandSerializer/deserialize(java.io.DataInput,int)|",
      "|java+method:///java/io/DataInput/readBoolean()|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+constructor:///org/apache/cassandra/thrift/IndexExpression/IndexExpression()|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/deserialize(org.apache.thrift.TDeserializer,org.apache.thrift.TBase,java.io.DataInput)|",
      "|java+method:///java/nio/ByteBuffer/wrap(byte%5B%5D)|",
      "|java+constructor:///org/apache/cassandra/thrift/SlicePredicate/SlicePredicate()|",
      "|java+method:///org/apache/cassandra/dht/AbstractBounds$AbstractBoundsSerializer/deserialize(java.io.DataInput,int)|",
      "|java+method:///java/io/DataInput/readFully(byte%5B%5D)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.1.0-beta1",
    "change": "UPDATED"
  }
]