[
  {
    "coordinatesV1": "org.openrdf.sesame:sesame-http-server-spring:2.8.0-beta1",
    "coordinatesV2": "org.openrdf.sesame:sesame-http-server-spring:2.8.0-beta2",
    "caller": "|java+method:///org/openrdf/http/server/repository/statements/StatementsController/getAddDataResult(org.openrdf.repository.Repository,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)|",
    "called": "|java+constructor:///org/springframework/web/servlet/ModelAndView/ModelAndView(org.springframework.web.servlet.View)|",
    "v1Body": [
      "|java+constructor:///org/openrdf/http/server/ServerHTTPException/ServerHTTPException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/openrdf/repository/RepositoryConnection/commit()|",
      "|java+method:///org/openrdf/model/ValueFactory/createURI(java.lang.String)|",
      "|java+method:///javax/servlet/http/HttpServletRequest/getInputStream()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///info/aduna/webapp/views/EmptySuccessView/getInstance()|",
      "|java+method:///org/openrdf/repository/RepositoryConnection/add(java.io.InputStream,java.lang.String,org.openrdf.rio.RDFFormat,org.openrdf.model.Resource%5B%5D)|",
      "|java+method:///org/openrdf/repository/RepositoryException/getMessage()|",
      "|java+method:///java/io/IOException/getMessage()|",
      "|java+method:///org/openrdf/repository/RepositoryException/getCause()|",
      "|java+method:///info/aduna/webapp/util/HttpServerUtil/getMIMEType(java.lang.String)|",
      "|java+method:///javax/servlet/http/HttpServletRequest/getContentType()|",
      "|java+method:///org/openrdf/rio/RDFParseException/getMessage()|",
      "|java+method:///org/openrdf/rio/RDFFormat/getName()|",
      "|java+method:///org/openrdf/repository/RepositoryConnection/begin()|",
      "|java+method:///org/openrdf/repository/RepositoryConnection/isAutoCommit()|",
      "|java+method:///org/openrdf/http/server/ProtocolUtil/parseContextParam(javax.servlet.http.HttpServletRequest,java.lang.String,org.openrdf.model.ValueFactory)|",
      "|java+method:///org/openrdf/http/protocol/error/ErrorInfo/toString()|",
      "|java+constructor:///org/openrdf/http/protocol/error/ErrorInfo/ErrorInfo(org.openrdf.http.protocol.error.ErrorType,java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/openrdf/repository/RepositoryConnection/clear(org.openrdf.model.Resource%5B%5D)|",
      "|java+constructor:///org/springframework/web/servlet/ModelAndView/ModelAndView(org.springframework.web.servlet.View)|",
      "|java+constructor:///org/openrdf/http/server/ClientHTTPException/ClientHTTPException(int,java.lang.String)|",
      "|java+method:///org/openrdf/http/server/ProtocolUtil/parseURIParam(javax.servlet.http.HttpServletRequest,java.lang.String,org.openrdf.model.ValueFactory)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/openrdf/http/server/repository/RepositoryInterceptor/getRepositoryConnection(javax.servlet.http.HttpServletRequest)|",
      "|java+method:///org/openrdf/repository/Repository/getValueFactory()|",
      "|java+method:///org/openrdf/http/server/ProtocolUtil/logRequestParameters(javax.servlet.http.HttpServletRequest)|",
      "|java+method:///org/openrdf/rio/Rio/getParserFormatForMIMEType(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/openrdf/model/URI/toString()|"
    ],
    "v2Body": [
      "|java+method:///org/openrdf/repository/RepositoryConnection/getParserConfig()|",
      "|java+constructor:///org/openrdf/http/server/ServerHTTPException/ServerHTTPException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/openrdf/repository/RepositoryConnection/commit()|",
      "|java+method:///org/openrdf/model/ValueFactory/createURI(java.lang.String)|",
      "|java+method:///javax/servlet/http/HttpServletRequest/getInputStream()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///info/aduna/webapp/views/EmptySuccessView/getInstance()|",
      "|java+method:///org/openrdf/repository/RepositoryConnection/add(java.io.InputStream,java.lang.String,org.openrdf.rio.RDFFormat,org.openrdf.model.Resource%5B%5D)|",
      "|java+method:///org/openrdf/repository/RepositoryException/getMessage()|",
      "|java+method:///java/io/IOException/getMessage()|",
      "|java+method:///info/aduna/webapp/util/HttpServerUtil/getMIMEType(java.lang.String)|",
      "|java+method:///javax/servlet/http/HttpServletRequest/getContentType()|",
      "|java+method:///org/openrdf/rio/RDFParseException/getMessage()|",
      "|java+method:///org/openrdf/rio/RDFFormat/getName()|",
      "|java+method:///org/openrdf/repository/RepositoryConnection/begin()|",
      "|java+method:///org/openrdf/http/server/ProtocolUtil/parseContextParam(javax.servlet.http.HttpServletRequest,java.lang.String,org.openrdf.model.ValueFactory)|",
      "|java+method:///org/openrdf/http/protocol/error/ErrorInfo/toString()|",
      "|java+constructor:///org/openrdf/http/protocol/error/ErrorInfo/ErrorInfo(org.openrdf.http.protocol.error.ErrorType,java.lang.String)|",
      "|java+method:///org/openrdf/repository/RepositoryException/getCause()|",
      "|java+method:///org/openrdf/rio/ParserConfig/set(org.openrdf.rio.RioSetting,java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/openrdf/repository/RepositoryConnection/clear(org.openrdf.model.Resource%5B%5D)|",
      "|java+constructor:///org/openrdf/http/server/ClientHTTPException/ClientHTTPException(int,java.lang.String)|",
      "|java+constructor:///org/springframework/web/servlet/ModelAndView/ModelAndView(org.springframework.web.servlet.View)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/openrdf/http/server/ProtocolUtil/parseURIParam(javax.servlet.http.HttpServletRequest,java.lang.String,org.openrdf.model.ValueFactory)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/openrdf/http/server/repository/RepositoryInterceptor/getRepositoryConnection(javax.servlet.http.HttpServletRequest)|",
      "|java+method:///org/openrdf/repository/Repository/getValueFactory()|",
      "|java+method:///org/openrdf/http/server/ProtocolUtil/parseBooleanParam(javax.servlet.http.HttpServletRequest,java.lang.String,boolean)|",
      "|java+method:///org/openrdf/repository/RepositoryConnection/isActive()|",
      "|java+method:///org/openrdf/http/server/ProtocolUtil/logRequestParameters(javax.servlet.http.HttpServletRequest)|",
      "|java+method:///org/openrdf/rio/Rio/getParserFormatForMIMEType(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/openrdf/model/URI/toString()|"
    ],
    "affectedLib": "org.springframework:spring-webmvc:4.0.5.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openrdf.sesame:sesame-http-server-spring:2.8.0-beta1",
    "coordinatesV2": "org.openrdf.sesame:sesame-http-server-spring:2.8.0-beta2",
    "caller": "|java+method:///info/aduna/webapp/system/logging/LoggingOverviewController/handleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)|",
    "called": "|java+constructor:///org/springframework/web/servlet/ModelAndView/ModelAndView(java.lang.String,java.util.Map)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///info/aduna/logging/LogReader/supportsThreadFilter()|",
      "|java+method:///info/aduna/webapp/system/logging/LoggingOverviewController/getCount(javax.servlet.http.HttpServletRequest)|",
      "|java+method:///info/aduna/webapp/system/logging/LoggingOverviewController/getLogReader(int,int,javax.servlet.http.HttpServletRequest)|",
      "|java+method:///java/util/Calendar/setTime(java.util.Date)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///info/aduna/logging/LogReader/getLevel()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///info/aduna/logging/LogReader/getEndDate()|",
      "|java+method:///java/util/Calendar/getInstance()|",
      "|java+method:///info/aduna/logging/LogReader/getStartDate()|",
      "|java+method:///info/aduna/logging/LogLevel/toString()|",
      "|java+method:///info/aduna/logging/LogReader/getMaxDate()|",
      "|java+method:///java/util/ArrayList/iterator()|",
      "|java+method:///info/aduna/webapp/system/logging/LoggingOverviewController/getOffset(javax.servlet.http.HttpServletRequest)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///info/aduna/logging/LogReader/supportsDateRanges()|",
      "|java+method:///info/aduna/logging/LogReader/getThreadNames()|",
      "|java+constructor:///java/lang/Integer/Integer(int)|",
      "|java+method:///info/aduna/logging/LogReader/getMinDate()|",
      "|java+constructor:///org/springframework/web/servlet/ModelAndView/ModelAndView(java.lang.String,java.util.Map)|",
      "|java+method:///info/aduna/logging/LogReader/supportsLevelFilter()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///info/aduna/logging/LogReader/getThread()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/Calendar/get(int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|"
    ],
    "v2Body": [
      "|java+method:///info/aduna/webapp/system/logging/LoggingOverviewController/getOffset(javax.servlet.http.HttpServletRequest)|",
      "|java+method:///info/aduna/logging/LogReader/supportsThreadFilter()|",
      "|java+method:///info/aduna/webapp/system/logging/LoggingOverviewController/getCount(javax.servlet.http.HttpServletRequest)|",
      "|java+method:///info/aduna/webapp/system/logging/LoggingOverviewController/getLogReader(int,int,javax.servlet.http.HttpServletRequest)|",
      "|java+method:///java/util/Calendar/setTime(java.util.Date)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///info/aduna/logging/LogReader/getLevel()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///info/aduna/logging/LogReader/getEndDate()|",
      "|java+method:///java/util/Calendar/getInstance()|",
      "|java+method:///info/aduna/logging/LogReader/getStartDate()|",
      "|java+method:///info/aduna/logging/LogLevel/toString()|",
      "|java+method:///info/aduna/logging/LogReader/getMaxDate()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///info/aduna/logging/LogReader/supportsDateRanges()|",
      "|java+method:///info/aduna/logging/LogReader/getThreadNames()|",
      "|java+constructor:///java/lang/Integer/Integer(int)|",
      "|java+method:///info/aduna/logging/LogReader/getMinDate()|",
      "|java+constructor:///org/springframework/web/servlet/ModelAndView/ModelAndView(java.lang.String,java.util.Map)|",
      "|java+method:///info/aduna/logging/LogReader/supportsLevelFilter()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///info/aduna/logging/LogReader/getThread()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/Calendar/get(int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|"
    ],
    "affectedLib": "org.springframework:spring-webmvc:4.0.5.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openrdf.sesame:sesame-http-server-spring:2.8.0-beta1",
    "coordinatesV2": "org.openrdf.sesame:sesame-http-server-spring:2.8.0-beta2",
    "caller": "|java+method:///org/openrdf/http/server/ProtocolExceptionResolver/resolveException(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)|",
    "called": "|java+constructor:///org/springframework/web/servlet/ModelAndView/ModelAndView(org.springframework.web.servlet.View,java.util.Map)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/springframework/web/servlet/ModelAndView/ModelAndView(org.springframework.web.servlet.View,java.util.Map)|",
      "|java+method:///info/aduna/webapp/views/SimpleResponseView/getInstance()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///org/openrdf/http/server/HTTPException/getStatusCode()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/Exception/getMessage()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/springframework/web/servlet/ModelAndView/ModelAndView(org.springframework.web.servlet.View,java.util.Map)|",
      "|java+method:///info/aduna/webapp/views/SimpleResponseView/getInstance()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/openrdf/http/server/HTTPException/getStatusCode()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Exception/getMessage()|"
    ],
    "affectedLib": "org.springframework:spring-webmvc:4.0.5.RELEASE",
    "change": "UPDATED"
  }
]