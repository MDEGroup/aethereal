[
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/datatype/binding/DatatypeTableBoundNode/checkInheritedFieldsDuplication(org.openl.binding.IBindingContext)|",
    "called": "|java+method:///org/openl/binding/impl/BindHelper/processWarn(java.lang.String,org.openl.syntax.ISyntaxNode,org.openl.binding.IBindingContext)|",
    "v1Body": [
      "|java+constructor:///org/openl/syntax/exception/SyntaxNodeException/SyntaxNodeException(java.lang.String,java.lang.Throwable,org.openl.syntax.ISyntaxNode)|",
      "|java+method:///org/openl/types/IOpenClass/getInstanceClass()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/openl/rules/lang/xls/types/DatatypeOpenClass/getSuperClass()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/openl/types/IOpenClass/getField(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/openl/binding/impl/BindHelper/processWarn(java.lang.String,org.openl.syntax.ISyntaxNode,org.openl.binding.IBindingContext)|",
      "|java+method:///org/openl/types/IOpenField/getDeclaringClass()|",
      "|java+method:///org/openl/rules/lang/xls/types/DatatypeOpenClass/getDeclaredFields()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/openl/types/IOpenClass/getDisplayName(int)|",
      "|java+method:///org/openl/types/IOpenField/getType()|",
      "|java+method:///java/util/Iterator/next()|"
    ],
    "v2Body": [
      "|java+method:///org/openl/types/IOpenClass/getInstanceClass()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/openl/rules/lang/xls/types/DatatypeOpenClass/getSuperClass()|",
      "|java+method:///org/openl/syntax/exception/SyntaxNodeExceptionUtils/createError(java.lang.String,org.openl.syntax.ISyntaxNode)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/openl/types/IOpenClass/getField(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/openl/binding/impl/BindHelper/processWarn(java.lang.String,org.openl.syntax.ISyntaxNode,org.openl.binding.IBindingContext)|",
      "|java+method:///org/openl/types/IOpenField/getDeclaringClass()|",
      "|java+method:///org/openl/rules/lang/xls/types/DatatypeOpenClass/getDeclaredFields()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/openl/types/IOpenClass/getDisplayName(int)|",
      "|java+method:///org/openl/types/IOpenField/getType()|",
      "|java+method:///java/util/Iterator/next()|"
    ],
    "affectedLib": "org.openl:org.openl.core:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/tbasic/AlgorithmBuilder/bindMetaInfo(org.openl.rules.table.IGridTable,int,int)|",
    "called": "|java+constructor:///org/openl/types/impl/DomainOpenClass/DomainOpenClass(java.lang.String,org.openl.types.IOpenClass,org.openl.domain.IDomain,org.openl.meta.IMetaInfo)|",
    "v1Body": [
      "|java+constructor:///org/openl/rules/lang/xls/types/CellMetaInfo/CellMetaInfo(org.openl.rules.lang.xls.types.CellMetaInfo$Type,java.lang.String,org.openl.types.IOpenClass,boolean)|",
      "|java+method:///org/openl/rules/table/IGridTable/getRegion()|",
      "|java+method:///org/openl/rules/table/IWritableGrid/setCellMetaInfo(int,int,org.openl.rules.lang.xls.types.CellMetaInfo)|",
      "|java+method:///org/openl/rules/table/IGridRegion$Tool/getAbsoluteColumn(org.openl.rules.table.IGridRegion,int)|",
      "|java+method:///org/openl/rules/table/IGridTable/getGrid()|",
      "|java+method:///java/util/Set/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/openl/rules/table/IGridRegion$Tool/getAbsoluteRow(org.openl.rules.table.IGridRegion,int)|",
      "|java+method:///java/util/Set/size()|",
      "|java+constructor:///org/openl/domain/EnumDomain/EnumDomain(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/openl/types/impl/DomainOpenClass/DomainOpenClass(java.lang.String,org.openl.types.IOpenClass,org.openl.domain.IDomain,org.openl.meta.IMetaInfo)|"
    ],
    "v2Body": [
      "|java+constructor:///org/openl/rules/lang/xls/types/CellMetaInfo/CellMetaInfo(org.openl.rules.lang.xls.types.CellMetaInfo$Type,java.lang.String,org.openl.types.IOpenClass,boolean)|",
      "|java+method:///org/openl/rules/table/IGridTable/getRegion()|",
      "|java+method:///org/openl/rules/table/IWritableGrid/setCellMetaInfo(int,int,org.openl.rules.lang.xls.types.CellMetaInfo)|",
      "|java+method:///org/openl/rules/table/IGridRegion$Tool/getAbsoluteColumn(org.openl.rules.table.IGridRegion,int)|",
      "|java+method:///org/openl/rules/table/IGridTable/getGrid()|",
      "|java+method:///org/openl/rules/table/IGridRegion$Tool/getAbsoluteRow(org.openl.rules.table.IGridRegion,int)|",
      "|java+constructor:///org/openl/domain/EnumDomain/EnumDomain(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/openl/types/impl/DomainOpenClass/DomainOpenClass(java.lang.String,org.openl.types.IOpenClass,org.openl.domain.IDomain,org.openl.meta.IMetaInfo)|"
    ],
    "affectedLib": "org.openl:org.openl.core:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/calc/SpreadsheetStructureBuilder/createAndPopulateColumnOpenClass(int,java.lang.String)|",
    "called": "|java+constructor:///org/openl/types/impl/ConstOpenField/ConstOpenField(java.lang.String,java.lang.Object,org.openl.types.IOpenClass)|",
    "v1Body": [
      "|java+method:///org/openl/binding/impl/component/ComponentOpenClass/addField(org.openl.types.IOpenField)|",
      "|java+method:///org/openl/rules/calc/element/SpreadsheetCellField/createSpreadsheetCellField(org.openl.rules.calc.element.SpreadsheetStructureBuilderHolder,org.openl.types.IOpenMethodHeader,org.openl.types.IOpenClass,java.lang.String,org.openl.rules.calc.element.SpreadsheetCell)|",
      "|java+method:///org/openl/binding/IBindingContext/getOpenL()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/openl/rules/calc/SpreadsheetStructureBuilder/getSpreadsheetStructureBuilderHolder()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///org/openl/types/impl/ConstOpenField/ConstOpenField(java.lang.String,java.lang.Object,org.openl.types.IOpenClass)|",
      "|java+method:///org/openl/rules/calc/SpreadsheetHeaderDefinition/getFirstname()|",
      "|java+method:///org/openl/rules/calc/SpreadsheetHeaderDefinition/getVars()|",
      "|java+method:///org/openl/rules/calc/SpreadsheetComponentsBuilder/getRowHeaders()|",
      "|java+method:///org/openl/rules/calc/SpreadsheetStructureBuilder/createRowOrColumnOpenClass(java.lang.String,org.openl.OpenL)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/openl/rules/calc/SymbolicTypeDefinition/getName()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/openl/rules/calc/SpreadsheetComponentsBuilder/getBindingContext()|",
      "|java+method:///org/openl/syntax/impl/IdentifierNode/getIdentifier()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/String/intern()|"
    ],
    "v2Body": [
      "|java+method:///org/openl/binding/impl/component/ComponentOpenClass/addField(org.openl.types.IOpenField)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///org/openl/types/impl/ConstOpenField/ConstOpenField(java.lang.String,java.lang.Object,org.openl.types.IOpenClass)|",
      "|java+method:///org/openl/rules/calc/SpreadsheetHeaderDefinition/getFirstname()|",
      "|java+method:///org/openl/rules/calc/SpreadsheetHeaderDefinition/getVars()|",
      "|java+method:///org/openl/rules/calc/SpreadsheetComponentsBuilder/getRowHeaders()|",
      "|java+method:///org/openl/rules/calc/SpreadsheetStructureBuilder/createRowOrColumnOpenClass(java.lang.String,org.openl.OpenL)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/openl/rules/calc/SymbolicTypeDefinition/getName()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/openl/rules/calc/SpreadsheetStructureBuilder/createSpreadsheetCellField(org.openl.types.IOpenClass,org.openl.rules.calc.element.SpreadsheetCell,java.lang.String)|",
      "|java+method:///org/openl/binding/IBindingContext/getOpenL()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/openl/rules/calc/SpreadsheetComponentsBuilder/getBindingContext()|",
      "|java+method:///org/openl/syntax/impl/IdentifierNode/getIdentifier()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/String/intern()|"
    ],
    "affectedLib": "org.openl:org.openl.core:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+constructor:///org/openl/rules/lang/xls/XlsWorkbookSourceCodeModule/XlsWorkbookSourceCodeModule(org.openl.source.IOpenSourceCodeModule,org.openl.rules.lang.xls.load.WorkbookLoader)|",
    "called": "|java+constructor:///org/openl/source/impl/SourceCodeModuleDelegator/SourceCodeModuleDelegator(org.openl.source.IOpenSourceCodeModule)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/openl/rules/lang/xls/XlsWorkbookSourceCodeModule/getWorkbook()|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+constructor:///org/openl/source/impl/SourceCodeModuleDelegator/SourceCodeModuleDelegator(org.openl.source.IOpenSourceCodeModule)|",
      "|java+method:///org/openl/rules/lang/xls/XlsWorkbookSourceCodeModule/initWorkbookColors()|",
      "|java+constructor:///org/openl/rules/lang/xls/XlsWorkbookSourceCodeModule$1/XlsWorkbookSourceCodeModule$1(org.openl.rules.lang.xls.XlsWorkbookSourceCodeModule)|",
      "|java+constructor:///java/util/TreeSet/TreeSet()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+constructor:///org/openl/source/impl/SourceCodeModuleDelegator/SourceCodeModuleDelegator(org.openl.source.IOpenSourceCodeModule)|",
      "|java+constructor:///org/openl/rules/lang/xls/XlsWorkbookSourceCodeModule$1/XlsWorkbookSourceCodeModule$1(org.openl.rules.lang.xls.XlsWorkbookSourceCodeModule)|",
      "|java+constructor:///java/util/TreeSet/TreeSet()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "org.openl:org.openl.core:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/lang/xls/binding/XlsModuleOpenClass/addDataTables(org.openl.CompiledOpenClass)|",
    "called": "|java+method:///org/openl/syntax/exception/SyntaxNodeExceptionUtils/createError(java.lang.String,java.lang.Throwable,org.openl.syntax.ISyntaxNode)|",
    "v1Body": [
      "|java+method:///org/openl/rules/lang/xls/binding/XlsModuleOpenClass/addField(org.openl.types.IOpenField)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/openl/rules/lang/xls/binding/XlsModuleOpenClass/getFields()|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+method:///org/openl/rules/lang/xls/binding/XlsModuleOpenClass/addError(java.lang.Throwable)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/getType()|",
      "|java+method:///org/openl/rules/data/IDataBase/registerTable(org.openl.rules.data.ITable)|",
      "|java+method:///org/openl/rules/data/ITable/getTableSyntaxNode()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/openl/rules/lang/xls/binding/XlsModuleOpenClass/getDataBase()|",
      "|java+method:///org/openl/CompiledOpenClass/getOpenClassWithErrors()|",
      "|java+method:///org/openl/types/IOpenClass/getFields()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/openl/rules/data/DataOpenField/getTableUri()|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///org/openl/rules/data/IDataBase/getTables()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///org/openl/rules/lang/xls/XlsNodeTypes/toString()|"
    ],
    "v2Body": [
      "|java+method:///org/openl/rules/lang/xls/binding/XlsModuleOpenClass/addField(org.openl.types.IOpenField)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/openl/dependency/CompiledDependency/getCompiledOpenClass()|",
      "|java+method:///org/openl/rules/lang/xls/binding/XlsModuleOpenClass/getFields()|",
      "|java+method:///org/openl/exception/OpenlNotCheckedException/getMessage()|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+method:///org/openl/rules/lang/xls/binding/XlsModuleOpenClass/addError(java.lang.Throwable)|",
      "|java+method:///org/openl/rules/lang/xls/binding/XlsModuleOpenClass/getDependencies()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///org/openl/meta/IMetaInfo/getSourceUrl()|",
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/getType()|",
      "|java+method:///org/openl/rules/data/IDataBase/registerTable(org.openl.rules.data.ITable)|",
      "|java+method:///org/openl/rules/data/ITable/getTableSyntaxNode()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/openl/rules/lang/xls/binding/XlsModuleOpenClass/getDataBase()|",
      "|java+method:///org/openl/CompiledOpenClass/getOpenClassWithErrors()|",
      "|java+method:///org/openl/types/IOpenClass/getFields()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/openl/rules/data/DataOpenField/getTableUri()|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/openl/rules/data/DataOpenField/getTable()|",
      "|java+method:///org/openl/syntax/exception/SyntaxNodeExceptionUtils/createError(java.lang.String,java.lang.Throwable,org.openl.syntax.ISyntaxNode)|",
      "|java+method:///org/openl/rules/data/IDataBase/getTables()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///org/openl/rules/lang/xls/XlsNodeTypes/toString()|"
    ],
    "affectedLib": "org.openl:org.openl.core:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/dtx/validator/ValidationAlgorithm/getTransformedSignatureParams(org.openl.types.IParameterDeclaration%5B%5D,org.openl.rules.dtx.validator.DecisionTableAnalyzer)|",
    "called": "|java+constructor:///org/openl/types/impl/ParameterDeclaration/ParameterDeclaration(org.openl.types.IOpenClass,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/openl/types/impl/ParameterDeclaration/ParameterDeclaration(org.openl.types.IOpenClass,java.lang.String,int)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/openl/rules/dtx/validator/DecisionTableAnalyzer/transformSignatureType(org.openl.types.IParameterDeclaration,org.openl.rules.dtx.validator.IDecisionTableValidatedObject)|",
      "|java+method:///org/openl/types/IParameterDeclaration/getDirection()|",
      "|java+method:///org/openl/types/IParameterDeclaration/getType()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/openl/types/IParameterDeclaration/getName()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/openl/rules/dtx/validator/DecisionTableAnalyzer/transformSignatureType(org.openl.types.IParameterDeclaration,org.openl.rules.dtx.validator.IDecisionTableValidatedObject)|",
      "|java+constructor:///org/openl/types/impl/ParameterDeclaration/ParameterDeclaration(org.openl.types.IOpenClass,java.lang.String)|",
      "|java+method:///org/openl/types/IParameterDeclaration/getType()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/openl/types/IParameterDeclaration/getName()|"
    ],
    "affectedLib": "org.openl:org.openl.core:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/validation/GapOverlapValidator/addError(org.openl.rules.lang.xls.syntax.TableSyntaxNode,java.lang.String)|",
    "called": "|java+method:///org/openl/syntax/exception/SyntaxNodeExceptionUtils/createError(java.lang.String,org.openl.syntax.ISyntaxNode)|",
    "v1Body": [
      "|java+constructor:///org/openl/syntax/exception/SyntaxNodeException/SyntaxNodeException(java.lang.String,java.lang.Throwable,org.openl.syntax.ISyntaxNode)|",
      "|java+method:///org/openl/validation/ValidationUtils/addValidationMessage(org.openl.validation.ValidationResult,org.openl.message.OpenLMessage)|",
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/addError(org.openl.syntax.exception.SyntaxNodeException)|",
      "|java+constructor:///org/openl/message/OpenLErrorMessage/OpenLErrorMessage(org.openl.exception.OpenLException)|",
      "|java+constructor:///org/openl/validation/ValidationResult/ValidationResult(org.openl.validation.ValidationStatus)|"
    ],
    "v2Body": [
      "|java+method:///org/openl/validation/ValidationUtils/addValidationMessage(org.openl.validation.ValidationResult,org.openl.message.OpenLMessage)|",
      "|java+constructor:///org/openl/message/OpenLErrorMessage/OpenLErrorMessage(org.openl.exception.OpenLException)|",
      "|java+constructor:///org/openl/validation/ValidationResult/ValidationResult(org.openl.validation.ValidationStatus)|",
      "|java+method:///org/openl/syntax/exception/SyntaxNodeExceptionUtils/createError(java.lang.String,org.openl.syntax.ISyntaxNode)|",
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/addError(org.openl.syntax.exception.SyntaxNodeException)|"
    ],
    "affectedLib": "org.openl:org.openl.core:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/lang/xls/binding/AMethodBasedNode/addServiceMethod(org.openl.binding.impl.module.ModuleOpenClass,org.openl.types.IOpenMethod)|",
    "called": "|java+method:///org/openl/message/OpenLMessagesUtils/addError(org.openl.exception.OpenLCompilationException)|",
    "v1Body": [
      "|java+method:///org/openl/rules/lang/xls/binding/AMethodBasedNode/getTableSyntaxNode()|",
      "|java+method:///org/openl/message/OpenLMessagesUtils/addError(org.openl.exception.OpenLCompilationException)|",
      "|java+method:///org/openl/binding/impl/module/ModuleOpenClass/addMethod(org.openl.types.IOpenMethod)|",
      "|java+constructor:///org/openl/syntax/exception/SyntaxNodeException/SyntaxNodeException(java.lang.String,java.lang.Throwable,org.openl.syntax.ISyntaxNode)|",
      "|java+method:///org/openl/rules/lang/xls/binding/AMethodBasedNode/getServiceMethod(org.openl.types.IOpenMethod)|",
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/addError(org.openl.syntax.exception.SyntaxNodeException)|"
    ],
    "v2Body": [
      "|java+method:///org/openl/binding/impl/module/ModuleOpenClass/addMethod(org.openl.types.IOpenMethod)|",
      "|java+method:///org/openl/rules/lang/xls/binding/AMethodBasedNode/getTableSyntaxNode()|",
      "|java+method:///org/openl/message/OpenLMessagesUtils/addError(org.openl.exception.OpenLCompilationException)|",
      "|java+method:///org/openl/rules/lang/xls/binding/AMethodBasedNode/getServiceMethod(org.openl.types.IOpenMethod)|",
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/addError(org.openl.syntax.exception.SyntaxNodeException)|",
      "|java+method:///org/openl/syntax/exception/SyntaxNodeExceptionUtils/createError(java.lang.String,java.lang.Throwable,org.openl.syntax.ISyntaxNode)|"
    ],
    "affectedLib": "org.openl:org.openl.core:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/lang/xls/binding/XlsModuleOpenClass/addMethod(org.openl.types.IOpenMethod)|",
    "called": "|java+method:///org/openl/binding/exception/DuplicatedMethodException/getMessage()|",
    "v1Body": [
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/openl/binding/exception/DuplicatedMethodException/getMessage()|",
      "|java+method:///org/openl/types/IOpenClass/getDisplayName(int)|",
      "|java+method:///org/openl/message/OpenLMessagesUtils/addError(java.lang.Throwable)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/openl/types/IOpenMethod/getName()|",
      "|java+constructor:///org/openl/binding/exception/DuplicatedMethodException/DuplicatedMethodException(java.lang.String,org.openl.types.IOpenMethod)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/openl/syntax/exception/SyntaxNodeException/SyntaxNodeException(java.lang.String,java.lang.Throwable,org.openl.syntax.ISyntaxNode)|",
      "|java+method:///org/openl/types/IOpenMethod/getType()|",
      "|java+method:///org/openl/rules/lang/xls/binding/XlsModuleOpenClass/decorateForMultimoduleDispatching(org.openl.types.IOpenMethod)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/openl/rules/lang/xls/binding/XlsModuleOpenClass/addDispatcherMethod(org.openl.types.IOpenMethod,org.openl.types.impl.MethodKey)|",
      "|java+method:///java/lang/Throwable/getMessage()|",
      "|java+method:///org/openl/rules/lang/xls/binding/XlsModuleOpenClass/dimensionalPropertyPresented(org.openl.types.IOpenMethod)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/openl/rules/lang/xls/binding/XlsModuleOpenClass/addDispatcherMethod(org.openl.rules.types.OpenMethodDispatcher)|",
      "|java+method:///org/openl/types/IMemberMetaInfo/getSyntaxNode()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/addError(org.openl.syntax.exception.SyntaxNodeException)|",
      "|java+method:///org/openl/rules/lang/xls/binding/XlsModuleOpenClass/methodMap()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///org/openl/rules/lang/xls/binding/XlsModuleOpenClass/addError(java.lang.Throwable)|",
      "|java+method:///org/openl/rules/types/OpenMethodDispatcher/addMethod(org.openl.types.IOpenMethod)|",
      "|java+method:///org/openl/rules/lang/xls/binding/XlsModuleOpenClass/getErrors()|",
      "|java+method:///org/openl/rules/lang/xls/binding/XlsModuleOpenClass/undecorateForMultimoduleDispatching(org.openl.types.IOpenMethod)|",
      "|java+constructor:///org/openl/types/impl/MethodKey/MethodKey(org.openl.types.IOpenMethod)|",
      "|java+method:///org/openl/message/OpenLMessagesUtils/addError(org.openl.exception.OpenLCompilationException)|"
    ],
    "v2Body": [
      "|java+method:///org/openl/types/impl/AMethod/setModuleName(java.lang.String)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/openl/binding/exception/DuplicatedMethodException/getMessage()|",
      "|java+method:///org/openl/types/IOpenClass/getDisplayName(int)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/openl/types/IModuleInfo/getModuleName()|",
      "|java+method:///org/openl/types/impl/AMethod/getModuleName()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+constructor:///org/openl/types/impl/MethodKey/MethodKey(org.openl.types.IOpenMethod)|",
      "|java+method:///org/openl/types/IMemberMetaInfo/getSourceUrl()|",
      "|java+method:///org/openl/types/IOpenMethod/getType()|",
      "|java+method:///org/openl/rules/lang/xls/binding/XlsModuleOpenClass/decorateForMultimoduleDispatching(org.openl.types.IOpenMethod)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/openl/rules/lang/xls/binding/XlsModuleOpenClass/addDispatcherMethod(org.openl.types.IOpenMethod,org.openl.types.impl.MethodKey)|",
      "|java+method:///org/openl/rules/types/ValidationMessages/getDuplicatedMethodMessage(org.openl.types.IOpenMethod,org.openl.types.IOpenMethod)|",
      "|java+method:///org/openl/rules/lang/xls/binding/XlsModuleOpenClass/addDuplicatedMethodError(java.lang.String,org.openl.types.IOpenMethod,org.openl.types.IOpenMethod)|",
      "|java+method:///java/lang/Throwable/getMessage()|",
      "|java+method:///org/openl/rules/lang/xls/binding/XlsModuleOpenClass/dimensionalPropertyPresented(org.openl.types.IOpenMethod)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/openl/rules/lang/xls/binding/XlsModuleOpenClass/addDispatcherMethod(org.openl.rules.types.OpenMethodDispatcher)|",
      "|java+method:///org/openl/types/IMemberMetaInfo/getSyntaxNode()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/addError(org.openl.syntax.exception.SyntaxNodeException)|",
      "|java+method:///org/openl/syntax/exception/SyntaxNodeExceptionUtils/createError(java.lang.String,java.lang.Throwable,org.openl.syntax.ISyntaxNode)|",
      "|java+method:///org/openl/rules/lang/xls/syntax/XlsModuleSyntaxNode/getModule()|",
      "|java+method:///org/openl/types/IOpenMethod/getName()|",
      "|java+method:///org/openl/rules/lang/xls/binding/XlsModuleOpenClass/methodMap()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///org/openl/types/IOpenMethod/getInfo()|",
      "|java+method:///org/openl/rules/lang/xls/binding/XlsModuleOpenClass/getXlsMetaInfo()|",
      "|java+method:///org/openl/rules/lang/xls/binding/XlsModuleOpenClass/addError(java.lang.Throwable)|",
      "|java+method:///org/openl/rules/types/OpenMethodDispatcher/addMethod(org.openl.types.IOpenMethod)|",
      "|java+method:///org/openl/rules/lang/xls/binding/XlsMetaInfo/getXlsModuleNode()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/openl/rules/lang/xls/binding/XlsModuleOpenClass/getErrors()|",
      "|java+method:///org/openl/rules/lang/xls/binding/XlsModuleOpenClass/undecorateForMultimoduleDispatching(org.openl.types.IOpenMethod)|"
    ],
    "affectedLib": "org.openl:org.openl.core:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/types/OpenMethodDispatcher/addMethod(org.openl.types.IOpenMethod)|",
    "called": "|java+method:///org/openl/binding/exception/DuplicatedMethodException/getMessage()|",
    "v1Body": [
      "|java+constructor:///org/openl/syntax/exception/SyntaxNodeException/SyntaxNodeException(java.lang.String,java.lang.Throwable,org.openl.syntax.ISyntaxNode)|",
      "|java+method:///org/openl/rules/types/OpenMethodDispatcher/getName()|",
      "|java+method:///org/openl/binding/exception/DuplicatedMethodException/getMessage()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/openl/exception/OpenLRuntimeException/OpenLRuntimeException(java.lang.String)|",
      "|java+method:///org/openl/rules/types/OpenMethodDispatcher/searchTheSameMethod(org.openl.types.IOpenMethod)|",
      "|java+method:///org/openl/types/IMemberMetaInfo/getSyntaxNode()|",
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/addError(org.openl.syntax.exception.SyntaxNodeException)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/openl/rules/types/OpenMethodDispatcher/getSignature()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/openl/types/impl/MethodKey/equals(java.lang.Object)|",
      "|java+method:///java/util/List/set(int,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///org/openl/rules/types/OpenMethodDispatcher/useActiveOrNewerVersion(org.openl.types.IOpenMethod,org.openl.types.IOpenMethod,org.openl.types.impl.MethodKey)|",
      "|java+constructor:///org/openl/types/impl/MethodKey/MethodKey(org.openl.types.IOpenMethod)|",
      "|java+method:///org/openl/binding/MethodUtil/printMethod(java.lang.String,org.openl.types.IMethodSignature,java.lang.StringBuilder)|"
    ],
    "v2Body": [
      "|java+method:///org/openl/rules/types/OpenMethodDispatcher/getName()|",
      "|java+method:///org/openl/binding/exception/DuplicatedMethodException/getMessage()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/openl/exception/OpenLRuntimeException/OpenLRuntimeException(java.lang.String)|",
      "|java+method:///org/openl/rules/types/OpenMethodDispatcher/searchTheSameMethod(org.openl.types.IOpenMethod)|",
      "|java+method:///org/openl/types/IMemberMetaInfo/getSyntaxNode()|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/openl/rules/types/OpenMethodDispatcher/getSignature()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/openl/types/impl/MethodKey/equals(java.lang.Object)|",
      "|java+method:///java/util/List/set(int,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/addError(org.openl.syntax.exception.SyntaxNodeException)|",
      "|java+method:///org/openl/syntax/exception/SyntaxNodeExceptionUtils/createError(java.lang.String,java.lang.Throwable,org.openl.syntax.ISyntaxNode)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///org/openl/rules/types/OpenMethodDispatcher/useActiveOrNewerVersion(org.openl.types.IOpenMethod,org.openl.types.IOpenMethod,org.openl.types.impl.MethodKey)|",
      "|java+constructor:///org/openl/types/impl/MethodKey/MethodKey(org.openl.types.IOpenMethod)|",
      "|java+method:///org/openl/binding/MethodUtil/printMethod(java.lang.String,org.openl.types.IMethodSignature,java.lang.StringBuilder)|"
    ],
    "affectedLib": "org.openl:org.openl.core:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/dt2/validator/ValidationAlgorithm/getTransformedSignatureParams(org.openl.types.IParameterDeclaration%5B%5D,org.openl.rules.dt2.validator.DecisionTableAnalyzer)|",
    "called": "|java+constructor:///org/openl/types/impl/ParameterDeclaration/ParameterDeclaration(org.openl.types.IOpenClass,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/openl/types/impl/ParameterDeclaration/ParameterDeclaration(org.openl.types.IOpenClass,java.lang.String,int)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/openl/rules/dt2/validator/DecisionTableAnalyzer/transformSignatureType(org.openl.types.IParameterDeclaration,org.openl.rules.dt2.validator.IDecisionTableValidatedObject)|",
      "|java+method:///org/openl/types/IParameterDeclaration/getDirection()|",
      "|java+method:///org/openl/types/IParameterDeclaration/getType()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/openl/types/IParameterDeclaration/getName()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/openl/rules/dt2/validator/DecisionTableAnalyzer/transformSignatureType(org.openl.types.IParameterDeclaration,org.openl.rules.dt2.validator.IDecisionTableValidatedObject)|",
      "|java+constructor:///org/openl/types/impl/ParameterDeclaration/ParameterDeclaration(org.openl.types.IOpenClass,java.lang.String)|",
      "|java+method:///org/openl/types/IParameterDeclaration/getType()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/openl/types/IParameterDeclaration/getName()|"
    ],
    "affectedLib": "org.openl:org.openl.core:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/calc/SpreadsheetComponentsBuilder/cutTypeIdentifier(org.openl.syntax.impl.IdentifierNode)|",
    "called": "|java+method:///org/openl/syntax/impl/Tokenizer/tokenize(org.openl.source.IOpenSourceCodeModule,java.lang.String,org.openl.util.text.ILocation)|",
    "v1Body": [
      "|java+method:///org/openl/rules/calc/SpreadsheetComponentsBuilder/getTableSyntaxNode()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/openl/binding/impl/BindHelper/processError(org.openl.syntax.exception.SyntaxNodeException,org.openl.binding.IBindingContext)|",
      "|java+method:///org/openl/rules/calc/SpreadsheetComponentsBuilder/getBindingContext()|",
      "|java+method:///org/openl/syntax/impl/IdentifierNode/getModule()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/openl/syntax/impl/Tokenizer/tokenize(org.openl.source.IOpenSourceCodeModule,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/openl/syntax/exception/SyntaxNodeExceptionUtils/createError(java.lang.String,org.openl.syntax.ISyntaxNode)|",
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/addError(org.openl.syntax.exception.SyntaxNodeException)|"
    ],
    "v2Body": [
      "|java+method:///org/openl/rules/calc/SpreadsheetComponentsBuilder/getTableSyntaxNode()|",
      "|java+method:///org/openl/binding/impl/BindHelper/processError(org.openl.syntax.exception.SyntaxNodeException,org.openl.binding.IBindingContext)|",
      "|java+method:///org/openl/syntax/impl/IdentifierNode/getModule()|",
      "|java+method:///org/openl/syntax/impl/Tokenizer/tokenize(org.openl.source.IOpenSourceCodeModule,java.lang.String)|",
      "|java+method:///org/openl/syntax/impl/Tokenizer/tokenize(org.openl.source.IOpenSourceCodeModule,java.lang.String,org.openl.util.text.ILocation)|",
      "|java+method:///org/openl/rules/calc/SpreadsheetComponentsBuilder/getBindingContext()|",
      "|java+method:///org/openl/syntax/exception/SyntaxNodeExceptionUtils/createError(java.lang.String,org.openl.syntax.ISyntaxNode)|",
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/addError(org.openl.syntax.exception.SyntaxNodeException)|",
      "|java+method:///org/openl/rules/calc/SpreadsheetSymbols/toString()|",
      "|java+method:///org/openl/syntax/impl/IdentifierNode/getLocation()|"
    ],
    "affectedLib": "org.openl:org.openl.core:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/dtx/validator/ValidationAlgorithm/getTransformedLocalParams(org.openl.types.IParameterDeclaration%5B%5D)|",
    "called": "|java+constructor:///org/openl/types/impl/ParameterDeclaration/ParameterDeclaration(org.openl.types.IOpenClass,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/openl/types/impl/ParameterDeclaration/ParameterDeclaration(org.openl.types.IOpenClass,java.lang.String,int)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/openl/types/IParameterDeclaration/getDirection()|",
      "|java+method:///org/openl/rules/dtx/validator/IConditionTransformer/transformParameterType(org.openl.types.IParameterDeclaration)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/openl/types/IParameterDeclaration/getName()|",
      "|java+method:///org/openl/rules/dtx/validator/IDecisionTableValidatedObject/getTransformer()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/openl/types/impl/ParameterDeclaration/ParameterDeclaration(org.openl.types.IOpenClass,java.lang.String)|",
      "|java+method:///org/openl/rules/dtx/validator/IConditionTransformer/transformParameterType(org.openl.types.IParameterDeclaration)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/openl/types/IParameterDeclaration/getName()|",
      "|java+method:///org/openl/rules/dtx/validator/IDecisionTableValidatedObject/getTransformer()|"
    ],
    "affectedLib": "org.openl:org.openl.core:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/dt/DecisionTableLoader/loadTableStructure(org.openl.rules.lang.xls.syntax.TableSyntaxNode,org.openl.rules.dt.DecisionTable,org.openl.binding.IBindingContext)|",
    "called": "|java+method:///org/openl/syntax/exception/SyntaxNodeExceptionUtils/createError(java.lang.String,org.openl.syntax.ISyntaxNode)|",
    "v1Body": [
      "|java+method:///org/openl/rules/table/LogicalTableHelper/logicalTable(org.openl.rules.table.IGridTable)|",
      "|java+constructor:///org/openl/rules/dt/DecisionTableLookupConvertor/DecisionTableLookupConvertor()|",
      "|java+constructor:///org/openl/syntax/exception/SyntaxNodeException/SyntaxNodeException(java.lang.String,java.lang.Throwable,org.openl.syntax.ISyntaxNode)|",
      "|java+method:///org/openl/rules/table/ILogicalTable/transpose()|",
      "|java+method:///org/openl/rules/dt/DecisionTableLoader/loadRow(int,org.openl.rules.table.ILogicalTable,org.openl.binding.IBindingContext)|",
      "|java+method:///org/openl/rules/table/ILogicalTable/getHeight()|",
      "|java+method:///org/openl/rules/dt/DecisionTableHelper/looksLikeVertical(org.openl.rules.table.ILogicalTable)|",
      "|java+method:///org/openl/rules/dt/DecisionTableLoader/hasHConditions(org.openl.rules.table.ILogicalTable)|",
      "|java+method:///org/openl/rules/dt/DecisionTableLoader/putTableForBusinessView(org.openl.rules.lang.xls.syntax.TableSyntaxNode)|",
      "|java+method:///org/openl/rules/dt/DecisionTableLookupConvertor/convertTable(org.openl.rules.table.ILogicalTable)|",
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/getTableBody()|",
      "|java+method:///org/openl/rules/table/ILogicalTable/getWidth()|",
      "|java+method:///org/openl/rules/dt/DecisionTableLoader/preprocessSimpleDecisionTable(org.openl.rules.lang.xls.syntax.TableSyntaxNode,org.openl.rules.dt.DecisionTable,org.openl.rules.table.ILogicalTable)|"
    ],
    "v2Body": [
      "|java+method:///org/openl/rules/table/LogicalTableHelper/logicalTable(org.openl.rules.table.IGridTable)|",
      "|java+constructor:///org/openl/rules/dt/DecisionTableLookupConvertor/DecisionTableLookupConvertor()|",
      "|java+method:///org/openl/rules/table/ILogicalTable/transpose()|",
      "|java+method:///org/openl/rules/dt/DecisionTableLoader/loadRow(int,org.openl.rules.table.ILogicalTable,org.openl.binding.IBindingContext)|",
      "|java+method:///org/openl/rules/table/ILogicalTable/getHeight()|",
      "|java+method:///org/openl/rules/dt/DecisionTableHelper/looksLikeVertical(org.openl.rules.table.ILogicalTable)|",
      "|java+method:///org/openl/rules/dt/DecisionTableLoader/hasHConditions(org.openl.rules.table.ILogicalTable)|",
      "|java+method:///org/openl/rules/dt/DecisionTableLoader/putTableForBusinessView(org.openl.rules.lang.xls.syntax.TableSyntaxNode)|",
      "|java+method:///org/openl/rules/dt/DecisionTableLookupConvertor/convertTable(org.openl.rules.table.ILogicalTable)|",
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/getTableBody()|",
      "|java+method:///org/openl/rules/table/ILogicalTable/getWidth()|",
      "|java+method:///org/openl/rules/dt/DecisionTableLoader/preprocessSimpleDecisionTable(org.openl.rules.lang.xls.syntax.TableSyntaxNode,org.openl.rules.dt.DecisionTable,org.openl.rules.table.ILogicalTable)|",
      "|java+method:///org/openl/syntax/exception/SyntaxNodeExceptionUtils/createError(java.lang.String,org.openl.syntax.ISyntaxNode)|",
      "|java+method:///org/openl/syntax/exception/SyntaxNodeExceptionUtils/createError(java.lang.String,java.lang.Throwable,org.openl.syntax.ISyntaxNode)|"
    ],
    "affectedLib": "org.openl:org.openl.core:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/binding/RuleRowHelper/loadSingleParam(org.openl.types.IOpenClass,java.lang.String,java.lang.String,org.openl.rules.table.ILogicalTable,org.openl.rules.OpenlToolAdaptor)|",
    "called": "|java+method:///org/openl/syntax/exception/SyntaxNodeExceptionUtils/createError(java.lang.String,java.lang.Throwable,org.openl.util.text.ILocation,org.openl.source.IOpenSourceCodeModule)|",
    "v1Body": [
      "|java+constructor:///org/openl/rules/table/openl/GridCellSourceCodeModule/GridCellSourceCodeModule(org.openl.rules.table.IGridTable,org.openl.binding.IBindingContext)|",
      "|java+method:///org/openl/rules/table/IGridTable/getCell(int,int)|",
      "|java+method:///org/openl/rules/binding/RuleRowHelper/validateValue(java.lang.Object,org.openl.types.IOpenClass)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/openl/types/IOpenClass/getInstanceClass()|",
      "|java+method:///org/openl/rules/OpenlToolAdaptor/getBindingContext()|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/openl/rules/table/ICell/getNativeType()|",
      "|java+method:///org/openl/binding/IBindingContext/isExecutionMode()|",
      "|java+method:///org/openl/rules/binding/RuleRowHelper/loadSingleParam(org.openl.types.IOpenClass,java.lang.String,java.lang.String,org.openl.rules.table.ILogicalTable,org.openl.rules.OpenlToolAdaptor,java.lang.String,boolean)|",
      "|java+method:///org/openl/rules/table/ICell/hasNativeType()|",
      "|java+method:///org/openl/rules/table/ICell/getStringValue()|",
      "|java+method:///org/openl/rules/table/ILogicalTable/getSource()|",
      "|java+method:///org/openl/rules/binding/RuleRowHelper/setCellMetaInfo(org.openl.rules.table.ILogicalTable,java.lang.String,org.openl.types.IOpenClass,boolean)|",
      "|java+method:///org/openl/syntax/exception/SyntaxNodeExceptionUtils/createError(java.lang.String,java.lang.Throwable,org.openl.util.text.ILocation,org.openl.source.IOpenSourceCodeModule)|",
      "|java+method:///java/lang/String/intern()|",
      "|java+method:///org/openl/rules/binding/RuleRowHelper/loadNativeValue(org.openl.rules.table.ICell,org.openl.types.IOpenClass,org.openl.binding.IBindingContext,java.lang.String,java.lang.String,org.openl.rules.table.ILogicalTable)|"
    ],
    "v2Body": [
      "|java+constructor:///org/openl/rules/table/openl/GridCellSourceCodeModule/GridCellSourceCodeModule(org.openl.rules.table.IGridTable,org.openl.binding.IBindingContext)|",
      "|java+method:///org/openl/rules/table/IGridTable/getCell(int,int)|",
      "|java+method:///org/openl/rules/binding/RuleRowHelper/validateValue(java.lang.Object,org.openl.types.IOpenClass)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/openl/types/IOpenClass/getInstanceClass()|",
      "|java+method:///org/openl/rules/OpenlToolAdaptor/getBindingContext()|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/openl/rules/table/ICell/getNativeType()|",
      "|java+method:///org/openl/binding/IBindingContext/isExecutionMode()|",
      "|java+method:///org/openl/rules/binding/RuleRowHelper/loadSingleParam(org.openl.types.IOpenClass,java.lang.String,java.lang.String,org.openl.rules.table.ILogicalTable,org.openl.rules.OpenlToolAdaptor,java.lang.String,boolean)|",
      "|java+method:///org/openl/rules/table/ICell/getRegion()|",
      "|java+method:///org/openl/rules/table/ICell/hasNativeType()|",
      "|java+method:///org/openl/rules/table/ICell/getTopLeftCellFromRegion()|",
      "|java+method:///org/openl/rules/table/ICell/getStringValue()|",
      "|java+method:///org/openl/rules/table/ILogicalTable/getSource()|",
      "|java+method:///org/openl/rules/binding/RuleRowHelper/setCellMetaInfo(org.openl.rules.table.ILogicalTable,java.lang.String,org.openl.types.IOpenClass,boolean)|",
      "|java+method:///org/openl/syntax/exception/SyntaxNodeExceptionUtils/createError(java.lang.String,java.lang.Throwable,org.openl.util.text.ILocation,org.openl.source.IOpenSourceCodeModule)|",
      "|java+method:///java/lang/String/intern()|",
      "|java+method:///org/openl/rules/binding/RuleRowHelper/loadNativeValue(org.openl.rules.table.ICell,org.openl.types.IOpenClass,org.openl.binding.IBindingContext,java.lang.String,java.lang.String,org.openl.rules.table.ILogicalTable)|"
    ],
    "affectedLib": "org.openl:org.openl.core:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/dt/validator/ValidationAlgorithm/getTransformedLocalParams(org.openl.types.IParameterDeclaration%5B%5D)|",
    "called": "|java+constructor:///org/openl/types/impl/ParameterDeclaration/ParameterDeclaration(org.openl.types.IOpenClass,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/openl/types/impl/ParameterDeclaration/ParameterDeclaration(org.openl.types.IOpenClass,java.lang.String,int)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/openl/types/IParameterDeclaration/getDirection()|",
      "|java+method:///org/openl/rules/dt/validator/IConditionTransformer/transformParameterType(org.openl.types.IParameterDeclaration)|",
      "|java+method:///org/openl/rules/dt/validator/IDecisionTableValidatedObject/getTransformer()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/openl/types/IParameterDeclaration/getName()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/openl/types/impl/ParameterDeclaration/ParameterDeclaration(org.openl.types.IOpenClass,java.lang.String)|",
      "|java+method:///org/openl/rules/dt/validator/IConditionTransformer/transformParameterType(org.openl.types.IParameterDeclaration)|",
      "|java+method:///org/openl/rules/dt/validator/IDecisionTableValidatedObject/getTransformer()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/openl/types/IParameterDeclaration/getName()|"
    ],
    "affectedLib": "org.openl:org.openl.core:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/calc/SpreadsheetStructureBuilder/createAndPopulateRowOpenClass(int,java.lang.String)|",
    "called": "|java+constructor:///org/openl/types/impl/ConstOpenField/ConstOpenField(java.lang.String,java.lang.Object,org.openl.types.IOpenClass)|",
    "v1Body": [
      "|java+method:///org/openl/rules/calc/element/SpreadsheetCellField/createSpreadsheetCellField(org.openl.rules.calc.element.SpreadsheetStructureBuilderHolder,org.openl.types.IOpenMethodHeader,org.openl.types.IOpenClass,java.lang.String,org.openl.rules.calc.element.SpreadsheetCell)|",
      "|java+method:///org/openl/binding/IBindingContext/getOpenL()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/openl/rules/calc/SpreadsheetStructureBuilder/getSpreadsheetStructureBuilderHolder()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///org/openl/types/impl/ConstOpenField/ConstOpenField(java.lang.String,java.lang.Object,org.openl.types.IOpenClass)|",
      "|java+method:///org/openl/rules/calc/SpreadsheetHeaderDefinition/getFirstname()|",
      "|java+method:///org/openl/rules/calc/SpreadsheetHeaderDefinition/getVars()|",
      "|java+method:///org/openl/rules/calc/SpreadsheetComponentsBuilder/getRowHeaders()|",
      "|java+method:///org/openl/rules/calc/SpreadsheetStructureBuilder/createRowOrColumnOpenClass(java.lang.String,org.openl.OpenL)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/openl/rules/calc/SymbolicTypeDefinition/getName()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/openl/binding/impl/component/ComponentOpenClass/addField(org.openl.types.IOpenField)|",
      "|java+method:///org/openl/rules/calc/SpreadsheetComponentsBuilder/getColumnHeaders()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/openl/rules/calc/SpreadsheetComponentsBuilder/getBindingContext()|",
      "|java+method:///org/openl/syntax/impl/IdentifierNode/getIdentifier()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/String/intern()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///org/openl/types/impl/ConstOpenField/ConstOpenField(java.lang.String,java.lang.Object,org.openl.types.IOpenClass)|",
      "|java+method:///org/openl/rules/calc/SpreadsheetHeaderDefinition/getFirstname()|",
      "|java+method:///org/openl/rules/calc/SpreadsheetHeaderDefinition/getVars()|",
      "|java+method:///org/openl/rules/calc/SpreadsheetComponentsBuilder/getRowHeaders()|",
      "|java+method:///org/openl/rules/calc/SpreadsheetStructureBuilder/createRowOrColumnOpenClass(java.lang.String,org.openl.OpenL)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/openl/rules/calc/SymbolicTypeDefinition/getName()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/openl/binding/impl/component/ComponentOpenClass/addField(org.openl.types.IOpenField)|",
      "|java+method:///org/openl/rules/calc/SpreadsheetComponentsBuilder/getColumnHeaders()|",
      "|java+method:///org/openl/rules/calc/SpreadsheetStructureBuilder/createSpreadsheetCellField(org.openl.types.IOpenClass,org.openl.rules.calc.element.SpreadsheetCell,java.lang.String)|",
      "|java+method:///org/openl/binding/IBindingContext/getOpenL()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/openl/rules/calc/SpreadsheetComponentsBuilder/getBindingContext()|",
      "|java+method:///org/openl/syntax/impl/IdentifierNode/getIdentifier()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/String/intern()|"
    ],
    "affectedLib": "org.openl:org.openl.core:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/validation/properties/dimentional/ArrayParameterColumn/getCodeExpression()|",
    "called": "|java+method:///org/openl/message/OpenLMessagesUtils/addWarn(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/openl/rules/validation/properties/dimentional/ArrayParameterColumn/getMatchByDefaultCodeExpression(org.openl.rules.table.properties.expressions.match.MatchingExpression)|",
      "|java+method:///org/openl/rules/validation/properties/dimentional/ArrayParameterColumn/getLocalParameterName()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/openl/rules/validation/properties/dimentional/ArrayParameterColumn/getNumberOfLocalParameters()|",
      "|java+method:///org/openl/message/OpenLMessagesUtils/addWarn(java.lang.String)|",
      "|java+method:///org/openl/rules/validation/properties/dimentional/ArrayParameterColumn/getProperty()|",
      "|java+method:///org/openl/rules/validation/properties/dimentional/ArrayParameterColumn/getLocalParameterName(int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/openl/rules/table/properties/def/TablePropertyDefinition/getExpression()|",
      "|java+method:///org/openl/rules/table/properties/def/TablePropertyDefinition/getName()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/openl/rules/validation/properties/dimentional/ArrayParameterColumn/createCodeExpression(org.openl.rules.table.properties.expressions.match.MatchingExpression,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/openl/rules/validation/properties/dimentional/ArrayParameterColumn/getMatchByDefaultCodeExpression(org.openl.rules.table.properties.expressions.match.MatchingExpression)|",
      "|java+method:///org/openl/rules/validation/properties/dimentional/ArrayParameterColumn/getLocalParameterName()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/openl/rules/validation/properties/dimentional/ArrayParameterColumn/getNumberOfLocalParameters()|",
      "|java+method:///org/openl/message/OpenLMessagesUtils/addWarn(java.lang.String)|",
      "|java+method:///org/openl/rules/validation/properties/dimentional/ArrayParameterColumn/getProperty()|",
      "|java+method:///org/openl/rules/validation/properties/dimentional/ArrayParameterColumn/getLocalParameterName(int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/intern()|",
      "|java+method:///org/openl/rules/table/properties/def/TablePropertyDefinition/getExpression()|",
      "|java+method:///org/openl/rules/table/properties/def/TablePropertyDefinition/getName()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/openl/rules/validation/properties/dimentional/ArrayParameterColumn/createCodeExpression(org.openl.rules.table.properties.expressions.match.MatchingExpression,java.lang.String)|"
    ],
    "affectedLib": "org.openl:org.openl.core:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/types/OpenMethodDispatcher/useActiveOrNewerVersion(org.openl.types.IOpenMethod,org.openl.types.IOpenMethod,org.openl.types.impl.MethodKey)|",
    "called": "|java+constructor:///org/openl/binding/exception/DuplicatedMethodException/DuplicatedMethodException(java.lang.String,org.openl.types.IOpenMethod)|",
    "v1Body": [
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/openl/types/IOpenMethod/getName()|",
      "|java+constructor:///org/openl/binding/exception/DuplicatedMethodException/DuplicatedMethodException(java.lang.String,org.openl.types.IOpenMethod)|",
      "|java+method:///org/openl/rules/method/TableUriMethod/getTableUri()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/openl/rules/lang/xls/binding/TableVersionComparator/getInstance()|",
      "|java+method:///org/openl/rules/lang/xls/binding/TableVersionComparator/compare(org.openl.types.IOpenMethod,org.openl.types.IOpenMethod)|"
    ],
    "v2Body": [
      "|java+method:///org/openl/rules/types/ValidationMessages/getDuplicatedMethodMessage(org.openl.types.IOpenMethod,org.openl.types.IOpenMethod)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///org/openl/binding/exception/DuplicatedMethodException/DuplicatedMethodException(java.lang.String,org.openl.types.IOpenMethod)|",
      "|java+method:///org/openl/rules/method/TableUriMethod/getTableUri()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/openl/rules/lang/xls/binding/TableVersionComparator/getInstance()|",
      "|java+method:///org/openl/rules/lang/xls/binding/TableVersionComparator/compare(org.openl.types.IOpenMethod,org.openl.types.IOpenMethod)|"
    ],
    "affectedLib": "org.openl:org.openl.core:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/dt2/DecisionTableLoader/loadTableStructure(org.openl.rules.lang.xls.syntax.TableSyntaxNode,org.openl.rules.dt2.DecisionTable,org.openl.binding.IBindingContext)|",
    "called": "|java+method:///org/openl/syntax/exception/SyntaxNodeExceptionUtils/createError(java.lang.String,org.openl.syntax.ISyntaxNode)|",
    "v1Body": [
      "|java+method:///org/openl/rules/table/LogicalTableHelper/logicalTable(org.openl.rules.table.IGridTable)|",
      "|java+constructor:///org/openl/syntax/exception/SyntaxNodeException/SyntaxNodeException(java.lang.String,java.lang.Throwable,org.openl.syntax.ISyntaxNode)|",
      "|java+method:///org/openl/rules/table/ILogicalTable/transpose()|",
      "|java+method:///org/openl/rules/dt2/DecisionTableLoader/countVConditions(org.openl.rules.table.ILogicalTable)|",
      "|java+method:///org/openl/rules/dt2/DecisionTableLookupConvertor/convertTable(org.openl.rules.table.ILogicalTable)|",
      "|java+method:///org/openl/rules/dt2/DecisionTable/setDtInfo(org.openl.rules.dt2.DTInfo)|",
      "|java+constructor:///org/openl/rules/dt2/DTInfo/DTInfo(int,int)|",
      "|java+method:///org/openl/rules/dt2/DecisionTableLoader/countHConditions(org.openl.rules.table.ILogicalTable)|",
      "|java+method:///org/openl/rules/dt2/DecisionTableHelper/looksLikeVertical(org.openl.rules.table.ILogicalTable)|",
      "|java+constructor:///org/openl/rules/dt2/DecisionTableLookupConvertor/DecisionTableLookupConvertor()|",
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/getTableBody()|",
      "|java+method:///org/openl/rules/table/ILogicalTable/getWidth()|",
      "|java+method:///org/openl/rules/table/ILogicalTable/getHeight()|",
      "|java+method:///org/openl/rules/dt2/DecisionTableLoader/unmergeFirstRow(org.openl.rules.table.ILogicalTable)|",
      "|java+method:///org/openl/rules/dt2/DecisionTableLoader/loadRow(int,org.openl.rules.table.ILogicalTable,org.openl.binding.IBindingContext)|",
      "|java+method:///org/openl/rules/dt2/DecisionTableLoader/preprocessSimpleDecisionTable(org.openl.rules.lang.xls.syntax.TableSyntaxNode,org.openl.rules.dt2.DecisionTable,org.openl.rules.table.ILogicalTable)|",
      "|java+constructor:///org/openl/rules/dt2/DTInfo/DTInfo(int,int,org.openl.rules.dt2.DTScale)|",
      "|java+method:///org/openl/rules/dt2/DecisionTableLookupConvertor/getScale()|",
      "|java+method:///org/openl/rules/dt2/DecisionTableLoader/needToUnmergeFirstRow(org.openl.rules.table.ILogicalTable)|",
      "|java+method:///org/openl/rules/dt2/DecisionTableLoader/putTableForBusinessView(org.openl.rules.lang.xls.syntax.TableSyntaxNode)|"
    ],
    "v2Body": [
      "|java+method:///org/openl/rules/table/LogicalTableHelper/logicalTable(org.openl.rules.table.IGridTable)|",
      "|java+method:///org/openl/rules/table/ILogicalTable/transpose()|",
      "|java+method:///org/openl/rules/dt2/DecisionTableLoader/countVConditions(org.openl.rules.table.ILogicalTable)|",
      "|java+method:///org/openl/rules/dt2/DecisionTableLookupConvertor/convertTable(org.openl.rules.table.ILogicalTable)|",
      "|java+method:///org/openl/rules/dt2/DecisionTable/setDtInfo(org.openl.rules.dt2.DTInfo)|",
      "|java+constructor:///org/openl/rules/dt2/DTInfo/DTInfo(int,int)|",
      "|java+method:///org/openl/rules/dt2/DecisionTableLoader/countHConditions(org.openl.rules.table.ILogicalTable)|",
      "|java+method:///org/openl/rules/dt2/DecisionTableHelper/looksLikeVertical(org.openl.rules.table.ILogicalTable)|",
      "|java+constructor:///org/openl/rules/dt2/DecisionTableLookupConvertor/DecisionTableLookupConvertor()|",
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/getTableBody()|",
      "|java+method:///org/openl/rules/table/ILogicalTable/getWidth()|",
      "|java+method:///org/openl/rules/table/ILogicalTable/getHeight()|",
      "|java+method:///org/openl/rules/dt2/DecisionTableLoader/unmergeFirstRow(org.openl.rules.table.ILogicalTable)|",
      "|java+method:///org/openl/rules/dt2/DecisionTableLoader/loadRow(int,org.openl.rules.table.ILogicalTable,org.openl.binding.IBindingContext)|",
      "|java+method:///org/openl/rules/dt2/DecisionTableLoader/preprocessSimpleDecisionTable(org.openl.rules.lang.xls.syntax.TableSyntaxNode,org.openl.rules.dt2.DecisionTable,org.openl.rules.table.ILogicalTable)|",
      "|java+method:///org/openl/syntax/exception/SyntaxNodeExceptionUtils/createError(java.lang.String,org.openl.syntax.ISyntaxNode)|",
      "|java+method:///org/openl/syntax/exception/SyntaxNodeExceptionUtils/createError(java.lang.String,java.lang.Throwable,org.openl.syntax.ISyntaxNode)|",
      "|java+constructor:///org/openl/rules/dt2/DTInfo/DTInfo(int,int,org.openl.rules.dt2.DTScale)|",
      "|java+method:///org/openl/rules/dt2/DecisionTableLookupConvertor/getScale()|",
      "|java+method:///org/openl/rules/dt2/DecisionTableLoader/needToUnmergeFirstRow(org.openl.rules.table.ILogicalTable)|",
      "|java+method:///org/openl/rules/dt2/DecisionTableLoader/putTableForBusinessView(org.openl.rules.lang.xls.syntax.TableSyntaxNode)|"
    ],
    "affectedLib": "org.openl:org.openl.core:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/validation/RegexpPropertyValidator/validateTables(org.openl.OpenL,org.openl.rules.lang.xls.syntax.TableSyntaxNode%5B%5D,org.openl.types.IOpenClass)|",
    "called": "|java+method:///org/openl/syntax/exception/SyntaxNodeExceptionUtils/createError(java.lang.String,org.openl.syntax.ISyntaxNode)|",
    "v1Body": [
      "|java+constructor:///org/openl/syntax/exception/SyntaxNodeException/SyntaxNodeException(java.lang.String,java.lang.Throwable,org.openl.syntax.ISyntaxNode)|",
      "|java+method:///org/openl/rules/table/properties/ITableProperties/getPropertyValue(java.lang.String)|",
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/getTableProperties()|",
      "|java+method:///org/openl/validation/ValidationUtils/validationSuccess()|",
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/addError(org.openl.syntax.exception.SyntaxNodeException)|",
      "|java+constructor:///org/openl/message/OpenLErrorMessage/OpenLErrorMessage(org.openl.exception.OpenLException)|",
      "|java+method:///org/openl/rules/table/properties/def/TablePropertyDefinitionUtils/getPropertyDisplayName(java.lang.String)|",
      "|java+constructor:///org/openl/validation/ValidationResult/ValidationResult(org.openl.validation.ValidationStatus)|",
      "|java+method:///org/openl/rules/table/properties/ITableProperties/getPropertyLevelDefinedOn(java.lang.String)|",
      "|java+method:///java/lang/String/matches(java.lang.String)|",
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/getType()|",
      "|java+method:///org/openl/validation/ValidationUtils/addValidationMessage(org.openl.validation.ValidationResult,org.openl.message.OpenLMessage)|",
      "|java+method:///org/openl/rules/table/properties/inherit/PropertiesChecker/isPropertySuitableForTableType(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///org/openl/rules/table/properties/ITableProperties/getPropertyValue(java.lang.String)|",
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/getTableProperties()|",
      "|java+method:///org/openl/validation/ValidationUtils/validationSuccess()|",
      "|java+constructor:///org/openl/message/OpenLErrorMessage/OpenLErrorMessage(org.openl.exception.OpenLException)|",
      "|java+method:///org/openl/rules/table/properties/def/TablePropertyDefinitionUtils/getPropertyDisplayName(java.lang.String)|",
      "|java+constructor:///org/openl/validation/ValidationResult/ValidationResult(org.openl.validation.ValidationStatus)|",
      "|java+method:///org/openl/rules/table/properties/ITableProperties/getPropertyLevelDefinedOn(java.lang.String)|",
      "|java+method:///java/lang/String/matches(java.lang.String)|",
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/getType()|",
      "|java+method:///org/openl/validation/ValidationUtils/addValidationMessage(org.openl.validation.ValidationResult,org.openl.message.OpenLMessage)|",
      "|java+method:///org/openl/rules/table/properties/inherit/PropertiesChecker/isPropertySuitableForTableType(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/openl/syntax/exception/SyntaxNodeExceptionUtils/createError(java.lang.String,org.openl.syntax.ISyntaxNode)|",
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/addError(org.openl.syntax.exception.SyntaxNodeException)|"
    ],
    "affectedLib": "org.openl:org.openl.core:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/validation/properties/dimentional/DimensionPropertiesValidator/validateTables(org.openl.OpenL,org.openl.rules.lang.xls.syntax.TableSyntaxNode%5B%5D,org.openl.types.IOpenClass)|",
    "called": "|java+method:///org/openl/validation/ValidationUtils/validationSuccess()|",
    "v1Body": [
      "|java+method:///org/openl/validation/ValidationUtils/addValidationMessage(org.openl.validation.ValidationResult,org.openl.message.OpenLMessage)|",
      "|java+method:///org/openl/rules/validation/properties/dimentional/DimensionPropertiesValidator/isDimensionPropertiesDispatcherTable(org.openl.rules.lang.xls.syntax.TableSyntaxNode)|",
      "|java+method:///org/openl/validation/ValidationUtils/validationSuccess()|",
      "|java+method:///org/openl/rules/validation/properties/dimentional/DimensionPropertiesValidator/getDomainsForDimensionalProperties(java.util.List)|",
      "|java+method:///org/openl/types/IOpenClass/getMethods()|",
      "|java+method:///org/openl/rules/types/OpenMethodDispatcherHelper/extractMethods(java.util.List)|",
      "|java+constructor:///org/openl/validation/ValidationResult/ValidationResult(org.openl.validation.ValidationStatus)|"
    ],
    "v2Body": [
      "|java+method:///org/openl/validation/ValidationUtils/validationSuccess()|"
    ],
    "affectedLib": "org.openl:org.openl.core:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/validation/ActivePropertyValidator/validateTables(org.openl.OpenL,org.openl.rules.lang.xls.syntax.TableSyntaxNode%5B%5D,org.openl.types.IOpenClass)|",
    "called": "|java+method:///org/openl/syntax/exception/SyntaxNodeExceptionUtils/createError(java.lang.String,org.openl.syntax.ISyntaxNode)|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/openl/validation/ValidationUtils/validationSuccess()|",
      "|java+constructor:///org/openl/message/OpenLErrorMessage/OpenLErrorMessage(org.openl.exception.OpenLException)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/openl/rules/validation/ActivePropertyValidator/groupExecutableMethods(org.openl.rules.lang.xls.syntax.TableSyntaxNode%5B%5D)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///org/openl/message/OpenLWarnMessage/OpenLWarnMessage(java.lang.String,org.openl.syntax.ISyntaxNode)|",
      "|java+constructor:///org/openl/syntax/exception/SyntaxNodeException/SyntaxNodeException(java.lang.String,java.lang.Throwable,org.openl.syntax.ISyntaxNode)|",
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/getMember()|",
      "|java+method:///org/openl/validation/ValidationUtils/addValidationMessage(org.openl.validation.ValidationResult,org.openl.message.OpenLMessage)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/getTableProperties()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/addError(org.openl.syntax.exception.SyntaxNodeException)|",
      "|java+method:///org/openl/rules/validation/ActivePropertyValidator/isActive(org.openl.rules.lang.xls.syntax.TableSyntaxNode)|",
      "|java+constructor:///org/openl/validation/ValidationResult/ValidationResult(org.openl.validation.ValidationStatus)|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "v2Body": [
      "|java+constructor:///org/openl/message/OpenLWarnMessage/OpenLWarnMessage(java.lang.String,org.openl.syntax.ISyntaxNode)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/openl/validation/ValidationUtils/validationSuccess()|",
      "|java+constructor:///org/openl/message/OpenLErrorMessage/OpenLErrorMessage(org.openl.exception.OpenLException)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/openl/rules/validation/ActivePropertyValidator/groupExecutableMethods(org.openl.rules.lang.xls.syntax.TableSyntaxNode%5B%5D)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/getMember()|",
      "|java+method:///org/openl/validation/ValidationUtils/addValidationMessage(org.openl.validation.ValidationResult,org.openl.message.OpenLMessage)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/getTableProperties()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///org/openl/syntax/exception/SyntaxNodeExceptionUtils/createError(java.lang.String,org.openl.syntax.ISyntaxNode)|",
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/addError(org.openl.syntax.exception.SyntaxNodeException)|",
      "|java+method:///org/openl/rules/validation/ActivePropertyValidator/isActive(org.openl.rules.lang.xls.syntax.TableSyntaxNode)|",
      "|java+constructor:///org/openl/validation/ValidationResult/ValidationResult(org.openl.validation.ValidationStatus)|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "affectedLib": "org.openl:org.openl.core:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/testmethod/TestDescription/initExecutionParams()|",
    "called": "|java+method:///org/openl/types/impl/DynamicObject/getFieldValue(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/openl/types/IOpenMethod/getSignature()|",
      "|java+method:///org/openl/types/IMethodSignature/getNumberOfParameters()|",
      "|java+method:///org/openl/types/IMethodSignature/getParameterName(int)|",
      "|java+method:///org/openl/types/impl/DynamicObject/getFieldValue(java.lang.String)|",
      "|java+constructor:///org/openl/rules/testmethod/ParameterWithValueDeclaration/ParameterWithValueDeclaration(java.lang.String,java.lang.Object,org.openl.types.IOpenClass,int)|",
      "|java+method:///org/openl/types/IMethodSignature/getParameterType(int)|"
    ],
    "v2Body": [
      "|java+method:///org/openl/types/IOpenMethod/getSignature()|",
      "|java+method:///org/openl/types/IMethodSignature/getNumberOfParameters()|",
      "|java+method:///org/openl/types/IMethodSignature/getParameterName(int)|",
      "|java+method:///org/openl/types/impl/DynamicObject/getFieldValue(java.lang.String)|",
      "|java+constructor:///org/openl/rules/testmethod/ParameterWithValueDeclaration/ParameterWithValueDeclaration(java.lang.String,java.lang.Object,org.openl.types.IOpenClass)|",
      "|java+method:///org/openl/types/IMethodSignature/getParameterType(int)|"
    ],
    "affectedLib": "org.openl:org.openl.core:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/lang/xls/XlsBinder/processError(org.openl.syntax.exception.SyntaxNodeException,org.openl.rules.lang.xls.syntax.TableSyntaxNode,org.openl.rules.binding.RulesModuleBindingContext)|",
    "called": "|java+method:///org/openl/binding/impl/BindHelper/processError(org.openl.syntax.exception.SyntaxNodeException,org.openl.binding.IBindingContext)|",
    "v1Body": [
      "|java+method:///org/openl/binding/impl/BindHelper/processError(org.openl.syntax.exception.SyntaxNodeException,org.openl.binding.IBindingContext)|",
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/addError(org.openl.syntax.exception.SyntaxNodeException)|",
      "|java+method:///org/openl/syntax/exception/SyntaxNodeException/setTopLevelSyntaxNode(org.openl.syntax.ISyntaxNode)|"
    ],
    "v2Body": [
      "|java+method:///org/openl/binding/impl/BindHelper/processError(org.openl.syntax.exception.SyntaxNodeException,org.openl.binding.IBindingContext)|",
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/addError(org.openl.syntax.exception.SyntaxNodeException)|"
    ],
    "affectedLib": "org.openl:org.openl.core:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/table/properties/DimensionPropertiesMethodKey/hashCode()|",
    "called": "|java+method:///org/openl/types/impl/MethodKey/hashCode()|",
    "v1Body": [
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/commons/lang3/builder/HashCodeBuilder/append(java.lang.Object)|",
      "|java+constructor:///org/apache/commons/lang3/builder/HashCodeBuilder/HashCodeBuilder()|",
      "|java+method:///org/openl/rules/table/properties/PropertiesHelper/getMethodProperties(org.openl.types.IOpenMethod)|",
      "|java+method:///org/openl/rules/table/properties/def/TablePropertyDefinitionUtils/getDimensionalTablePropertiesNames()|",
      "|java+method:///org/apache/commons/lang3/builder/HashCodeBuilder/toHashCode()|",
      "|java+constructor:///org/openl/types/impl/MethodKey/MethodKey(org.openl.types.IOpenMethod)|"
    ],
    "v2Body": [
      "|java+method:///org/openl/types/impl/MethodKey/hashCode()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Object/hashCode()|",
      "|java+method:///org/openl/rules/table/properties/PropertiesHelper/getMethodProperties(org.openl.types.IOpenMethod)|",
      "|java+method:///org/openl/rules/table/properties/def/TablePropertyDefinitionUtils/getDimensionalTablePropertiesNames()|",
      "|java+constructor:///org/openl/types/impl/MethodKey/MethodKey(org.openl.types.IOpenMethod)|"
    ],
    "affectedLib": "org.openl:org.openl.core:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/testmethod/TestUtils/getUserMessagesAndErrors(java.lang.Object)|",
    "called": "|java+constructor:///org/openl/message/OpenLErrorMessage/OpenLErrorMessage(org.openl.exception.OpenLException)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/openl/syntax/exception/CompositeSyntaxNodeException/getErrors()|",
      "|java+method:///org/apache/commons/lang3/exception/ExceptionUtils/getRootCause(java.lang.Throwable)|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+method:///org/apache/commons/lang3/exception/ExceptionUtils/getRootCauseMessage(java.lang.Throwable)|",
      "|java+constructor:///org/openl/message/OpenLErrorMessage/OpenLErrorMessage(java.lang.String,java.lang.String)|",
      "|java+method:///org/openl/rules/testmethod/OpenLUserRuntimeException/getOriginalMessage()|",
      "|java+constructor:///org/openl/message/OpenLErrorMessage/OpenLErrorMessage(org.openl.exception.OpenLException)|",
      "|java+constructor:///org/openl/message/OpenLMessage/OpenLMessage(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/openl/syntax/exception/CompositeSyntaxNodeException/getErrors()|",
      "|java+method:///org/apache/commons/lang3/exception/ExceptionUtils/getRootCause(java.lang.Throwable)|",
      "|java+method:///org/apache/commons/lang3/exception/ExceptionUtils/getRootCauseMessage(java.lang.Throwable)|",
      "|java+constructor:///org/openl/message/OpenLErrorMessage/OpenLErrorMessage(java.lang.String)|",
      "|java+method:///org/openl/rules/testmethod/OpenLUserRuntimeException/getOriginalMessage()|",
      "|java+constructor:///org/openl/message/OpenLErrorMessage/OpenLErrorMessage(org.openl.exception.OpenLException)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+constructor:///org/openl/message/OpenLMessage/OpenLMessage(java.lang.String)|"
    ],
    "affectedLib": "org.openl:org.openl.core:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/tbasic/runtime/operations/DeclareIteratorOperation/execute(org.openl.rules.tbasic.runtime.TBasicContextHolderEnv,java.lang.Object)|",
    "called": "|java+method:///org/openl/types/impl/DelegatedDynamicObject/setFieldValue(java.lang.String,java.lang.Object)|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/openl/types/impl/DelegatedDynamicObject/setFieldValue(java.lang.String,java.lang.Object,boolean)|",
      "|java+method:///org/openl/rules/tbasic/runtime/operations/DeclareIteratorOperation/getIterator(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/openl/rules/tbasic/runtime/TBasicContextHolderEnv/getTbasicTarget()|",
      "|java+constructor:///org/openl/rules/tbasic/runtime/Result/Result(org.openl.rules.tbasic.runtime.ReturnType,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+method:///org/openl/types/impl/DelegatedDynamicObject/setFieldValue(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/openl/rules/tbasic/runtime/operations/DeclareIteratorOperation/getIterator(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/openl/rules/tbasic/runtime/TBasicContextHolderEnv/getTbasicTarget()|",
      "|java+constructor:///org/openl/rules/tbasic/runtime/Result/Result(org.openl.rules.tbasic.runtime.ReturnType,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "affectedLib": "org.openl:org.openl.core:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/dt2/validator/ValidationAlgorithm/getTransformedLocalParams(org.openl.types.IParameterDeclaration%5B%5D)|",
    "called": "|java+constructor:///org/openl/types/impl/ParameterDeclaration/ParameterDeclaration(org.openl.types.IOpenClass,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/openl/types/impl/ParameterDeclaration/ParameterDeclaration(org.openl.types.IOpenClass,java.lang.String,int)|",
      "|java+method:///org/openl/rules/dt2/validator/IConditionTransformer/transformParameterType(org.openl.types.IParameterDeclaration)|",
      "|java+method:///org/openl/types/IParameterDeclaration/getDirection()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/openl/types/IParameterDeclaration/getName()|",
      "|java+method:///org/openl/rules/dt2/validator/IDecisionTableValidatedObject/getTransformer()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|"
    ],
    "v2Body": [
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/openl/types/IParameterDeclaration/getName()|",
      "|java+method:///org/openl/rules/dt2/validator/IDecisionTableValidatedObject/getTransformer()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/openl/types/impl/ParameterDeclaration/ParameterDeclaration(org.openl.types.IOpenClass,java.lang.String)|",
      "|java+method:///org/openl/rules/dt2/validator/IConditionTransformer/transformParameterType(org.openl.types.IParameterDeclaration)|"
    ],
    "affectedLib": "org.openl:org.openl.core:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/validation/properties/dimentional/TableSyntaxNodeDispatcherBuilder/build()|",
    "called": "|java+method:///org/openl/message/OpenLMessagesUtils/addError(org.openl.exception.OpenLCompilationException)|",
    "v1Body": [
      "|java+method:///org/openl/rules/validation/properties/dimentional/TableSyntaxNodeDispatcherBuilder/initDecisionTableOpenlBuilder(org.openl.rules.lang.xls.syntax.TableSyntaxNode)|",
      "|java+method:///org/openl/rules/validation/properties/dimentional/Builder/build()|",
      "|java+method:///org/openl/rules/validation/properties/dimentional/TableSyntaxNodeDispatcherBuilder/loadCreatedTable(org.openl.rules.dt.DecisionTable,org.openl.rules.lang.xls.syntax.TableSyntaxNode)|",
      "|java+method:///org/openl/rules/table/xls/XlsSheetGridModel/getTables()|",
      "|java+method:///org/openl/rules/table/xls/XlsSheetGridModel/getSheetSource()|",
      "|java+constructor:///org/openl/rules/validation/properties/dimentional/TableSyntaxNodeBuilder/TableSyntaxNodeBuilder(java.lang.String,org.openl.rules.lang.xls.XlsSheetSourceCodeModule,org.openl.rules.table.IGridTable)|",
      "|java+method:///org/openl/rules/validation/properties/dimentional/TableSyntaxNodeDispatcherBuilder/build()|",
      "|java+method:///org/openl/rules/binding/RulesModuleBindingContext/isExecutionMode()|",
      "|java+method:///org/openl/rules/lang/xls/XlsNodeTypes/toString()|",
      "|java+method:///org/openl/rules/validation/properties/dimentional/TableSyntaxNodeDispatcherBuilder/needToBuild()|",
      "|java+method:///org/openl/rules/validation/properties/dimentional/TableSyntaxNodeDispatcherBuilder/removeDebugInformation(org.openl.rules.dt.DecisionTable,org.openl.rules.lang.xls.syntax.TableSyntaxNode)|",
      "|java+method:///org/openl/rules/validation/properties/dimentional/TableSyntaxNodeDispatcherBuilder/initDecisionTableSourceBuilder()|"
    ],
    "v2Body": [
      "|java+method:///org/openl/rules/validation/properties/dimentional/TableSyntaxNodeDispatcherBuilder/initDecisionTableOpenlBuilder(org.openl.rules.lang.xls.syntax.TableSyntaxNode)|",
      "|java+method:///org/openl/rules/validation/properties/dimentional/Builder/build()|",
      "|java+method:///org/openl/rules/validation/properties/dimentional/TableSyntaxNodeDispatcherBuilder/loadCreatedTable(org.openl.rules.dt.DecisionTable,org.openl.rules.lang.xls.syntax.TableSyntaxNode)|",
      "|java+method:///org/openl/rules/table/xls/XlsSheetGridModel/getTables()|",
      "|java+method:///org/openl/rules/table/xls/XlsSheetGridModel/getSheetSource()|",
      "|java+method:///org/openl/rules/validation/properties/dimentional/TableSyntaxNodeDispatcherBuilder/build()|",
      "|java+method:///org/openl/rules/binding/RulesModuleBindingContext/isExecutionMode()|",
      "|java+method:///org/openl/rules/lang/xls/XlsHelper/createTableSyntaxNode(org.openl.rules.table.IGridTable,org.openl.rules.lang.xls.XlsSheetSourceCodeModule)|",
      "|java+method:///org/openl/rules/validation/properties/dimentional/TableSyntaxNodeDispatcherBuilder/removeDebugInformation(org.openl.rules.dt.DecisionTable,org.openl.rules.lang.xls.syntax.TableSyntaxNode)|",
      "|java+method:///org/openl/rules/validation/properties/dimentional/TableSyntaxNodeDispatcherBuilder/initDecisionTableSourceBuilder()|",
      "|java+method:///org/openl/message/OpenLMessagesUtils/addError(org.openl.exception.OpenLCompilationException)|",
      "|java+method:///org/openl/rules/validation/properties/dimentional/TableSyntaxNodeDispatcherBuilder/needToBuild()|"
    ],
    "affectedLib": "org.openl:org.openl.core:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/lang/xls/XlsLoader/preprocessTable(org.openl.rules.table.IGridTable,org.openl.rules.lang.xls.XlsSheetSourceCodeModule,org.openl.rules.lang.xls.TablePartProcessor)|",
    "called": "|java+method:///org/openl/message/OpenLMessagesUtils/addError(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/openl/rules/table/openl/GridCellSourceCodeModule/GridCellSourceCodeModule(org.openl.rules.table.IGridTable)|",
      "|java+method:///org/openl/rules/lang/xls/XlsLoader/addError(org.openl.syntax.exception.SyntaxNodeException)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/openl/syntax/impl/IdentifierNode/getIdentifier()|",
      "|java+method:///org/openl/rules/lang/xls/XlsLoader/preprocessEnvironmentTable(org.openl.rules.lang.xls.syntax.TableSyntaxNode,org.openl.rules.lang.xls.XlsSheetSourceCodeModule)|",
      "|java+method:///org/openl/rules/indexer/HeaderNodeFactory/getHeaderNode(java.lang.String,org.openl.rules.table.openl.GridCellSourceCodeModule,org.openl.syntax.impl.IdentifierNode)|",
      "|java+method:///org/openl/syntax/exception/SyntaxNodeExceptionUtils/createError(java.lang.Throwable,org.openl.syntax.ISyntaxNode)|",
      "|java+method:///org/openl/rules/lang/xls/XlsNodeTypes/toString()|",
      "|java+constructor:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/TableSyntaxNode(java.lang.String,org.openl.rules.table.syntax.GridLocation,org.openl.rules.lang.xls.XlsSheetSourceCodeModule,org.openl.rules.table.IGridTable,org.openl.rules.lang.xls.syntax.HeaderSyntaxNode)|",
      "|java+method:///org/openl/rules/lang/xls/TablePartProcessor/register(org.openl.rules.table.IGridTable,org.openl.rules.lang.xls.XlsSheetSourceCodeModule)|",
      "|java+method:///org/openl/syntax/exception/SyntaxNodeException/getMessage()|",
      "|java+method:///org/openl/rules/lang/xls/XlsLoader/addNode(org.openl.syntax.ISyntaxNode)|",
      "|java+method:///org/openl/syntax/impl/Tokenizer/firstToken(org.openl.source.IOpenSourceCodeModule,java.lang.String)|",
      "|java+constructor:///org/openl/rules/table/syntax/GridLocation/GridLocation(org.openl.rules.table.IGridTable)|",
      "|java+method:///org/openl/message/OpenLMessagesUtils/addError(java.lang.String)|",
      "|java+method:///org/openl/rules/lang/xls/XlsLoader/getTableHeaders()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/addError(org.openl.syntax.exception.SyntaxNodeException)|"
    ],
    "v2Body": [
      "|java+method:///org/openl/rules/lang/xls/TablePartProcessor/register(org.openl.rules.table.IGridTable,org.openl.rules.lang.xls.XlsSheetSourceCodeModule)|",
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/getType()|",
      "|java+method:///org/openl/syntax/exception/SyntaxNodeException/getMessage()|",
      "|java+method:///org/openl/message/OpenLMessagesUtils/addError(java.lang.String)|",
      "|java+method:///org/openl/rules/lang/xls/XlsLoader/addError(org.openl.syntax.exception.SyntaxNodeException)|",
      "|java+method:///org/openl/rules/lang/xls/XlsLoader/preprocessEnvironmentTable(org.openl.rules.lang.xls.syntax.TableSyntaxNode,org.openl.rules.lang.xls.XlsSheetSourceCodeModule)|",
      "|java+method:///org/openl/rules/lang/xls/XlsHelper/createTableSyntaxNode(org.openl.rules.table.IGridTable,org.openl.rules.lang.xls.XlsSheetSourceCodeModule)|",
      "|java+method:///org/openl/syntax/exception/SyntaxNodeExceptionUtils/createError(java.lang.Throwable,org.openl.syntax.ISyntaxNode)|",
      "|java+method:///org/openl/rules/lang/xls/XlsNodeTypes/toString()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/addError(org.openl.syntax.exception.SyntaxNodeException)|"
    ],
    "affectedLib": "org.openl:org.openl.core:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/dt/validator/ValidationAlgorithm/getTransformedSignatureParams(org.openl.types.IParameterDeclaration%5B%5D,org.openl.rules.dt.validator.DecisionTableAnalyzer)|",
    "called": "|java+constructor:///org/openl/types/impl/ParameterDeclaration/ParameterDeclaration(org.openl.types.IOpenClass,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/openl/types/impl/ParameterDeclaration/ParameterDeclaration(org.openl.types.IOpenClass,java.lang.String,int)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/openl/types/IParameterDeclaration/getDirection()|",
      "|java+method:///org/openl/types/IParameterDeclaration/getType()|",
      "|java+method:///org/openl/rules/dt/validator/DecisionTableAnalyzer/transformSignatureType(org.openl.types.IParameterDeclaration,org.openl.rules.dt.validator.IDecisionTableValidatedObject)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/openl/types/IParameterDeclaration/getName()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/openl/types/impl/ParameterDeclaration/ParameterDeclaration(org.openl.types.IOpenClass,java.lang.String)|",
      "|java+method:///org/openl/types/IParameterDeclaration/getType()|",
      "|java+method:///org/openl/rules/dt/validator/DecisionTableAnalyzer/transformSignatureType(org.openl.types.IParameterDeclaration,org.openl.rules.dt.validator.IDecisionTableValidatedObject)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/openl/types/IParameterDeclaration/getName()|"
    ],
    "affectedLib": "org.openl:org.openl.core:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/validation/UniquePropertyValueValidator/getMessage(java.lang.String,org.openl.message.Severity,org.openl.rules.lang.xls.syntax.TableSyntaxNode)|",
    "called": "|java+method:///org/openl/syntax/exception/SyntaxNodeExceptionUtils/createError(java.lang.String,org.openl.syntax.ISyntaxNode)|",
    "v1Body": [
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/addError(org.openl.syntax.exception.SyntaxNodeException)|",
      "|java+constructor:///org/openl/message/OpenLErrorMessage/OpenLErrorMessage(org.openl.exception.OpenLException)|",
      "|java+method:///org/openl/message/Severity/equals(java.lang.Object)|",
      "|java+constructor:///org/openl/message/OpenLWarnMessage/OpenLWarnMessage(java.lang.String,org.openl.syntax.ISyntaxNode)|",
      "|java+constructor:///org/openl/syntax/exception/SyntaxNodeException/SyntaxNodeException(java.lang.String,java.lang.Throwable,org.openl.syntax.ISyntaxNode)|"
    ],
    "v2Body": [
      "|java+constructor:///org/openl/message/OpenLWarnMessage/OpenLWarnMessage(java.lang.String,org.openl.syntax.ISyntaxNode)|",
      "|java+constructor:///org/openl/message/OpenLErrorMessage/OpenLErrorMessage(org.openl.exception.OpenLException)|",
      "|java+method:///org/openl/message/Severity/equals(java.lang.Object)|",
      "|java+method:///org/openl/syntax/exception/SyntaxNodeExceptionUtils/createError(java.lang.String,org.openl.syntax.ISyntaxNode)|",
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/addError(org.openl.syntax.exception.SyntaxNodeException)|"
    ],
    "affectedLib": "org.openl:org.openl.core:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/lang/xls/XlsLoader/preprocessWorkbook(org.openl.source.IOpenSourceCodeModule)|",
    "called": "|java+method:///org/openl/message/OpenLMessagesUtils/addError(org.openl.exception.OpenLCompilationException)|",
    "v1Body": [
      "|java+method:///org/openl/rules/lang/xls/XlsLoader/getAllGridTables(org.openl.rules.lang.xls.XlsSheetSourceCodeModule)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/openl/rules/lang/xls/TablePart/getTable()|",
      "|java+method:///org/openl/rules/lang/xls/load/WorkbookLoader/getNumberOfSheets()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/openl/rules/lang/xls/XlsWorkbookSourceCodeModule/getWorkbookLoader()|",
      "|java+method:///org/openl/message/OpenLMessagesUtils/addError(org.openl.exception.OpenLCompilationException)|",
      "|java+method:///java/util/HashSet/contains(java.lang.Object)|",
      "|java+method:///org/openl/rules/lang/xls/XlsLoader/preprocessTable(org.openl.rules.table.IGridTable,org.openl.rules.lang.xls.XlsSheetSourceCodeModule,org.openl.rules.lang.xls.TablePartProcessor)|",
      "|java+method:///org/openl/source/IOpenSourceCodeModule/getUri(int)|",
      "|java+constructor:///org/openl/rules/lang/xls/XlsWorkbookSourceCodeModule/XlsWorkbookSourceCodeModule(org.openl.source.IOpenSourceCodeModule)|",
      "|java+method:///org/openl/rules/lang/xls/TablePartProcessor/mergeAllNodes()|",
      "|java+constructor:///org/openl/rules/lang/xls/XlsSheetSourceCodeModule/XlsSheetSourceCodeModule(int,org.openl.rules.lang.xls.XlsWorkbookSourceCodeModule)|",
      "|java+constructor:///org/openl/rules/lang/xls/TablePartProcessor/TablePartProcessor()|",
      "|java+constructor:///org/openl/rules/lang/xls/syntax/WorksheetSyntaxNode/WorksheetSyntaxNode(org.openl.rules.lang.xls.syntax.TableSyntaxNode%5B%5D,org.openl.rules.lang.xls.XlsSheetSourceCodeModule)|",
      "|java+method:///java/util/HashSet/add(java.lang.Object)|",
      "|java+method:///org/openl/rules/lang/xls/TablePart/getSource()|",
      "|java+constructor:///org/openl/rules/lang/xls/syntax/WorkbookSyntaxNode/WorkbookSyntaxNode(org.openl.rules.lang.xls.syntax.WorksheetSyntaxNode%5B%5D,org.openl.rules.lang.xls.syntax.TableSyntaxNode%5B%5D,org.openl.rules.lang.xls.XlsWorkbookSourceCodeModule)|"
    ],
    "v2Body": [
      "|java+method:///org/openl/rules/lang/xls/TablePart/getTable()|",
      "|java+method:///org/openl/rules/lang/xls/load/WorkbookLoader/getNumberOfSheets()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/openl/rules/lang/xls/XlsLoader/createWorksheetSyntaxNode(org.openl.rules.lang.xls.XlsSheetSourceCodeModule,org.openl.rules.lang.xls.TablePartProcessor)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/openl/rules/lang/xls/XlsWorkbookSourceCodeModule/getWorkbookLoader()|",
      "|java+method:///org/openl/message/OpenLMessagesUtils/addError(org.openl.exception.OpenLCompilationException)|",
      "|java+method:///java/util/HashSet/contains(java.lang.Object)|",
      "|java+method:///org/openl/rules/lang/xls/XlsLoader/preprocessTable(org.openl.rules.table.IGridTable,org.openl.rules.lang.xls.XlsSheetSourceCodeModule,org.openl.rules.lang.xls.TablePartProcessor)|",
      "|java+method:///org/openl/source/IOpenSourceCodeModule/getUri(int)|",
      "|java+constructor:///org/openl/rules/lang/xls/XlsWorkbookSourceCodeModule/XlsWorkbookSourceCodeModule(org.openl.source.IOpenSourceCodeModule)|",
      "|java+method:///org/openl/rules/lang/xls/TablePartProcessor/mergeAllNodes()|",
      "|java+constructor:///org/openl/rules/lang/xls/XlsSheetSourceCodeModule/XlsSheetSourceCodeModule(int,org.openl.rules.lang.xls.XlsWorkbookSourceCodeModule)|",
      "|java+constructor:///org/openl/rules/lang/xls/TablePartProcessor/TablePartProcessor()|",
      "|java+method:///java/util/HashSet/add(java.lang.Object)|",
      "|java+method:///org/openl/rules/lang/xls/TablePart/getSource()|",
      "|java+constructor:///org/openl/rules/lang/xls/syntax/WorkbookSyntaxNode/WorkbookSyntaxNode(org.openl.rules.lang.xls.syntax.WorksheetSyntaxNode%5B%5D,org.openl.rules.lang.xls.syntax.TableSyntaxNode%5B%5D,org.openl.rules.lang.xls.XlsWorkbookSourceCodeModule)|"
    ],
    "affectedLib": "org.openl:org.openl.core:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/lang/xls/XlsBinder/bindInternal(org.openl.rules.lang.xls.syntax.XlsModuleSyntaxNode,org.openl.rules.lang.xls.binding.XlsModuleOpenClass,org.openl.rules.lang.xls.syntax.TableSyntaxNode%5B%5D,org.openl.OpenL,org.openl.rules.binding.RulesModuleBindingContext)|",
    "called": "|java+constructor:///org/openl/binding/impl/module/ModuleNode/ModuleNode(org.openl.syntax.ISyntaxNode,org.openl.types.IOpenClass)|",
    "v1Body": [
      "|java+method:///org/openl/rules/lang/xls/XlsBinder/finilizeBind(org.openl.binding.IMemberBoundNode,org.openl.rules.lang.xls.syntax.TableSyntaxNode,org.openl.rules.binding.RulesModuleBindingContext)|",
      "|java+method:///org/openl/rules/binding/RulesModuleBindingContext/getModule()|",
      "|java+constructor:///org/openl/binding/impl/module/ModuleNode/ModuleNode(org.openl.syntax.ISyntaxNode,org.openl.types.IOpenClass)|",
      "|java+method:///org/openl/rules/lang/xls/XlsBinder/beginBind(org.openl.rules.lang.xls.syntax.TableSyntaxNode,org.openl.rules.lang.xls.binding.XlsModuleOpenClass,org.openl.OpenL,org.openl.rules.binding.RulesModuleBindingContext)|",
      "|java+method:///org/openl/rules/lang/xls/XlsBinder/removeDebugInformation(org.openl.binding.IMemberBoundNode%5B%5D,org.openl.rules.lang.xls.syntax.TableSyntaxNode%5B%5D,org.openl.rules.binding.RulesModuleBindingContext)|",
      "|java+method:///org/openl/syntax/exception/SyntaxNodeExceptionUtils/createError(java.lang.Throwable,org.openl.syntax.ISyntaxNode)|",
      "|java+method:///org/openl/rules/lang/xls/XlsBinder/processError(org.openl.syntax.exception.SyntaxNodeException,org.openl.rules.lang.xls.syntax.TableSyntaxNode,org.openl.rules.binding.RulesModuleBindingContext)|",
      "|java+method:///org/openl/rules/binding/RulesModuleBindingContext/isExecutionMode()|",
      "|java+method:///org/openl/binding/IMemberBoundNode/addTo(org.openl.binding.impl.module.ModuleOpenClass)|"
    ],
    "v2Body": [
      "|java+method:///org/openl/rules/lang/xls/XlsBinder/finilizeBind(org.openl.binding.IMemberBoundNode,org.openl.rules.lang.xls.syntax.TableSyntaxNode,org.openl.rules.binding.RulesModuleBindingContext)|",
      "|java+method:///org/openl/rules/binding/RulesModuleBindingContext/getModule()|",
      "|java+method:///org/openl/rules/lang/xls/syntax/TableSyntaxNode/getType()|",
      "|java+method:///org/openl/rules/lang/xls/XlsBinder/isExecutableTableSyntaxNode(org.openl.rules.lang.xls.syntax.TableSyntaxNode)|",
      "|java+constructor:///org/openl/binding/impl/module/ModuleNode/ModuleNode(org.openl.syntax.ISyntaxNode,org.openl.types.IOpenClass)|",
      "|java+method:///org/openl/rules/lang/xls/XlsBinder/beginBind(org.openl.rules.lang.xls.syntax.TableSyntaxNode,org.openl.rules.lang.xls.binding.XlsModuleOpenClass,org.openl.OpenL,org.openl.rules.binding.RulesModuleBindingContext)|",
      "|java+method:///org/openl/rules/lang/xls/XlsBinder/removeDebugInformation(org.openl.binding.IMemberBoundNode%5B%5D,org.openl.rules.lang.xls.syntax.TableSyntaxNode%5B%5D,org.openl.rules.binding.RulesModuleBindingContext)|",
      "|java+constructor:///org/openl/rules/lang/xls/PrebindOpenMethod/PrebindOpenMethod(org.openl.types.IOpenMethodHeader,org.openl.rules.lang.xls.syntax.TableSyntaxNode)|",
      "|java+method:///org/openl/syntax/exception/SyntaxNodeExceptionUtils/createError(java.lang.Throwable,org.openl.syntax.ISyntaxNode)|",
      "|java+method:///org/openl/rules/lang/xls/XlsBinder/processError(org.openl.syntax.exception.SyntaxNodeException,org.openl.rules.lang.xls.syntax.TableSyntaxNode,org.openl.rules.binding.RulesModuleBindingContext)|",
      "|java+method:///org/openl/rules/binding/RulesModuleBindingContext/clearPrebindMethods()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/openl/rules/lang/xls/binding/AExecutableNodeBinder/createHeader(org.openl.rules.lang.xls.syntax.TableSyntaxNode,org.openl.OpenL,org.openl.binding.IBindingContext)|",
      "|java+method:///org/openl/rules/binding/RulesModuleBindingContext/addPrebindMethod(org.openl.rules.lang.xls.PrebindOpenMethod)|",
      "|java+method:///org/openl/rules/lang/xls/XlsBinder/getBinderFactory()|",
      "|java+method:///org/openl/rules/binding/RulesModuleBindingContext/isExecutionMode()|",
      "|java+method:///org/openl/binding/IMemberBoundNode/addTo(org.openl.binding.impl.module.ModuleOpenClass)|"
    ],
    "affectedLib": "org.openl:org.openl.core:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/tbasic/AlgorithmBuilder/bindMetaInfo(org.openl.rules.table.IGridTable,int,int)|",
    "called": "|java+constructor:///org/openl/domain/EnumDomain/EnumDomain(java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+constructor:///org/openl/rules/lang/xls/types/CellMetaInfo/CellMetaInfo(org.openl.rules.lang.xls.types.CellMetaInfo$Type,java.lang.String,org.openl.types.IOpenClass,boolean)|",
      "|java+method:///org/openl/rules/table/IGridTable/getRegion()|",
      "|java+method:///org/openl/rules/table/IWritableGrid/setCellMetaInfo(int,int,org.openl.rules.lang.xls.types.CellMetaInfo)|",
      "|java+method:///org/openl/rules/table/IGridRegion$Tool/getAbsoluteColumn(org.openl.rules.table.IGridRegion,int)|",
      "|java+method:///org/openl/rules/table/IGridTable/getGrid()|",
      "|java+method:///java/util/Set/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/openl/rules/table/IGridRegion$Tool/getAbsoluteRow(org.openl.rules.table.IGridRegion,int)|",
      "|java+method:///java/util/Set/size()|",
      "|java+constructor:///org/openl/domain/EnumDomain/EnumDomain(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/openl/types/impl/DomainOpenClass/DomainOpenClass(java.lang.String,org.openl.types.IOpenClass,org.openl.domain.IDomain,org.openl.meta.IMetaInfo)|"
    ],
    "v2Body": [
      "|java+constructor:///org/openl/rules/lang/xls/types/CellMetaInfo/CellMetaInfo(org.openl.rules.lang.xls.types.CellMetaInfo$Type,java.lang.String,org.openl.types.IOpenClass,boolean)|",
      "|java+method:///org/openl/rules/table/IGridTable/getRegion()|",
      "|java+method:///org/openl/rules/table/IWritableGrid/setCellMetaInfo(int,int,org.openl.rules.lang.xls.types.CellMetaInfo)|",
      "|java+method:///org/openl/rules/table/IGridRegion$Tool/getAbsoluteColumn(org.openl.rules.table.IGridRegion,int)|",
      "|java+method:///org/openl/rules/table/IGridTable/getGrid()|",
      "|java+method:///org/openl/rules/table/IGridRegion$Tool/getAbsoluteRow(org.openl.rules.table.IGridRegion,int)|",
      "|java+constructor:///org/openl/domain/EnumDomain/EnumDomain(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/openl/types/impl/DomainOpenClass/DomainOpenClass(java.lang.String,org.openl.types.IOpenClass,org.openl.domain.IDomain,org.openl.meta.IMetaInfo)|"
    ],
    "affectedLib": "org.openl:org.openl.commons:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/helpers/RulesUtils/round(double,int)|",
    "called": "|java+method:///org/openl/util/math/MathUtils/round(double,int,int)|",
    "v1Body": [
      "|java+method:///org/apache/commons/math/util/MathUtils/round(double,int)|"
    ],
    "v2Body": [
      "|java+method:///org/openl/util/math/MathUtils/round(double,int,int)|"
    ],
    "affectedLib": "org.openl:org.openl.commons:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/lang/xls/XlsWorkbookSourceCodeModule$DeferredCreateFileOutputStream/throwExceptionIfNotWritable(java.lang.String)|",
    "called": "|java+method:///org/openl/util/IOUtils/closeQuietly(java.io.Closeable)|",
    "v1Body": [
      "|java+constructor:///java/io/FileOutputStream/FileOutputStream(java.lang.String,boolean)|",
      "|java+method:///org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)|"
    ],
    "v2Body": [
      "|java+method:///org/openl/util/IOUtils/closeQuietly(java.io.Closeable)|",
      "|java+constructor:///java/io/FileOutputStream/FileOutputStream(java.lang.String,boolean)|"
    ],
    "affectedLib": "org.openl:org.openl.commons:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/helpers/RulesUtils/round(float,int)|",
    "called": "|java+method:///org/openl/util/math/MathUtils/round(float,int,int)|",
    "v1Body": [
      "|java+method:///org/apache/commons/math/util/MathUtils/round(float,int)|"
    ],
    "v2Body": [
      "|java+method:///org/openl/util/math/MathUtils/round(float,int,int)|"
    ],
    "affectedLib": "org.openl:org.openl.commons:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/helpers/RulesUtils/round(float,int,int)|",
    "called": "|java+method:///org/openl/util/math/MathUtils/round(float,int,int)|",
    "v1Body": [
      "|java+method:///org/apache/commons/math/util/MathUtils/round(float,int,int)|"
    ],
    "v2Body": [
      "|java+method:///org/openl/util/math/MathUtils/round(float,int,int)|"
    ],
    "affectedLib": "org.openl:org.openl.commons:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/datatype/gen/bean/writers/GettersWriter/generateGetter(org.objectweb.asm.ClassWriter,java.util.Map$Entry)|",
    "called": "|java+method:///org/openl/util/StringTool/getGetterName(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/objectweb/asm/MethodVisitor/visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/objectweb/asm/MethodVisitor/visitVarInsn(int,int)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///java/lang/String/toLowerCase()|",
      "|java+method:///org/objectweb/asm/ClassWriter/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///org/objectweb/asm/MethodVisitor/visitInsn(int)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/objectweb/asm/AnnotationVisitor/visit(java.lang.String,java.lang.Object)|",
      "|java+method:///org/objectweb/asm/AnnotationVisitor/visitEnd()|",
      "|java+method:///java/lang/Character/isUpperCase(char)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/objectweb/asm/Type/getDescriptor(java.lang.Class)|",
      "|java+method:///java/lang/String/charAt(int)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/openl/rules/datatype/gen/bean/writers/GettersWriter/getBeanNameWithPackage()|",
      "|java+method:///org/openl/rules/datatype/gen/ByteCodeGeneratorHelper/getConstantForReturn(org.openl.rules.datatype.gen.FieldDescription)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/uncapitalize(java.lang.String)|",
      "|java+method:///org/openl/util/StringTool/getGetterName(java.lang.String)|",
      "|java+method:///org/objectweb/asm/MethodVisitor/visitMaxs(int,int)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/capitalize(java.lang.String)|",
      "|java+method:///org/openl/rules/datatype/gen/FieldDescription/getType()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/openl/rules/datatype/gen/ByteCodeGeneratorHelper/getJavaType(org.openl.rules.datatype.gen.FieldDescription)|",
      "|java+method:///org/objectweb/asm/MethodVisitor/visitAnnotation(java.lang.String,boolean)|"
    ],
    "v2Body": [
      "|java+method:///org/objectweb/asm/MethodVisitor/visitVarInsn(int,int)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///java/lang/String/toLowerCase()|",
      "|java+method:///org/objectweb/asm/ClassWriter/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///org/objectweb/asm/MethodVisitor/visitInsn(int)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/objectweb/asm/AnnotationVisitor/visit(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Character/isUpperCase(char)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/objectweb/asm/Type/getDescriptor(java.lang.Class)|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/objectweb/asm/MethodVisitor/visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/charAt(int)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/openl/rules/datatype/gen/bean/writers/GettersWriter/getBeanNameWithPackage()|",
      "|java+method:///org/openl/rules/datatype/gen/ByteCodeGeneratorHelper/getConstantForReturn(org.openl.rules.datatype.gen.FieldDescription)|",
      "|java+method:///org/openl/rules/datatype/gen/FieldDescription/getDefaultValueAsString()|",
      "|java+method:///org/apache/commons/lang3/StringUtils/uncapitalize(java.lang.String)|",
      "|java+method:///org/openl/util/StringTool/getGetterName(java.lang.String)|",
      "|java+method:///org/objectweb/asm/AnnotationVisitor/visitEnd()|",
      "|java+method:///org/openl/rules/datatype/gen/FieldDescription/hasDefaultValue()|",
      "|java+method:///org/objectweb/asm/MethodVisitor/visitMaxs(int,int)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/capitalize(java.lang.String)|",
      "|java+method:///org/openl/rules/datatype/gen/FieldDescription/getType()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/openl/rules/datatype/gen/ByteCodeGeneratorHelper/getJavaType(org.openl.rules.datatype.gen.FieldDescription)|",
      "|java+method:///org/objectweb/asm/MethodVisitor/visitAnnotation(java.lang.String,boolean)|"
    ],
    "affectedLib": "org.openl:org.openl.commons:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/testmethod/TestDescription/runTest(java.lang.Object,org.openl.vm.IRuntimeEnv,long)|",
    "called": "|java+method:///org/openl/util/Log/error(java.lang.Object,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/openl/types/IOpenMethod/invoke(java.lang.Object,java.lang.Object%5B%5D,org.openl.vm.IRuntimeEnv)|",
      "|java+method:///org/openl/vm/IRuntimeEnv/getContext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/openl/util/Log/error(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/openl/rules/testmethod/TestDescription/getRuntimeContext()|",
      "|java+method:///org/openl/vm/IRuntimeEnv/setContext(org.openl.runtime.IRuntimeContext)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/openl/rules/testmethod/TestDescription/getArguments()|",
      "|java+constructor:///org/openl/rules/testmethod/TestUnit/TestUnit(org.openl.rules.testmethod.TestDescription,java.lang.Object,java.lang.Throwable)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/openl/rules/testmethod/TestDescription/runTest(java.lang.Object,org.openl.vm.IRuntimeEnv,long)|"
    ],
    "v2Body": [
      "|java+method:///org/openl/types/IOpenMethod/invoke(java.lang.Object,java.lang.Object%5B%5D,org.openl.vm.IRuntimeEnv)|",
      "|java+method:///org/openl/vm/IRuntimeEnv/getContext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/openl/util/Log/error(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/openl/rules/testmethod/TestDescription/getRuntimeContext()|",
      "|java+method:///org/openl/vm/IRuntimeEnv/setContext(org.openl.runtime.IRuntimeContext)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/openl/rules/testmethod/TestDescription/getArguments()|",
      "|java+constructor:///org/openl/rules/testmethod/TestUnit/TestUnit(org.openl.rules.testmethod.TestDescription,java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/openl/rules/testmethod/TestDescription/runTest(java.lang.Object,org.openl.vm.IRuntimeEnv,long)|"
    ],
    "affectedLib": "org.openl:org.openl.commons:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/helpers/RulesUtils/round(double,int,int)|",
    "called": "|java+method:///org/openl/util/math/MathUtils/round(double,int,int)|",
    "v1Body": [
      "|java+method:///org/apache/commons/math/util/MathUtils/round(double,int,int)|"
    ],
    "v2Body": [
      "|java+method:///org/openl/util/math/MathUtils/round(double,int,int)|"
    ],
    "affectedLib": "org.openl:org.openl.commons:5.16.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.openl.rules:org.openl.rules:5.15.4",
    "coordinatesV2": "org.openl.rules:org.openl.rules:5.16.0",
    "caller": "|java+method:///org/openl/rules/table/xls/XlsSheetGridModel/getCellWriter(java.lang.Object)|",
    "called": "|java+method:///org/openl/util/EnumUtils/isEnum(java.lang.Object)|",
    "v1Body": [
      "|java+method:///java/lang/Class/isArray()|",
      "|java+method:///org/openl/util/EnumUtils/isEnumArray(java.lang.Object)|",
      "|java+method:///java/lang/String/valueOf(java.lang.Object)|",
      "|java+method:///org/openl/util/EnumUtils/isEnum(java.lang.Object)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/lang/Object/getClass()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Class/isArray()|",
      "|java+method:///org/openl/util/EnumUtils/isEnumArray(java.lang.Object)|",
      "|java+method:///java/lang/String/valueOf(java.lang.Object)|",
      "|java+method:///org/openl/util/EnumUtils/isEnum(java.lang.Object)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/openl/rules/table/xls/XlsSheetGridModel/getCellWriters()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/lang/Object/getClass()|"
    ],
    "affectedLib": "org.openl:org.openl.commons:5.16.0",
    "change": "UPDATED"
  }
]