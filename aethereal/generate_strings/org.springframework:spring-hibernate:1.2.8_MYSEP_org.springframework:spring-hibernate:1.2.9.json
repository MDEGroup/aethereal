[
  {
    "coordinatesV1": "org.springframework:spring-hibernate:1.2.8",
    "coordinatesV2": "org.springframework:spring-hibernate:1.2.9",
    "caller": "|java+method:///org/springframework/orm/hibernate/HibernateTemplate/execute(org.springframework.orm.hibernate.HibernateCallback,boolean)|",
    "called": "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
    "v1Body": [
      "|java+method:///net/sf/hibernate/Session/setFlushMode(net.sf.hibernate.FlushMode)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTemplate/convertHibernateAccessException(net.sf.hibernate.HibernateException)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTemplate/flushIfNecessary(net.sf.hibernate.Session,boolean)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateCallback/doInHibernate(net.sf.hibernate.Session)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTemplate/createSessionProxy(net.sf.hibernate.Session)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTemplate/convertJdbcAccessException(java.sql.SQLException)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTemplate/applyFlushMode(net.sf.hibernate.Session,boolean)|",
      "|java+method:///org/springframework/orm/hibernate/SessionFactoryUtils/isSessionTransactional(net.sf.hibernate.Session,net.sf.hibernate.SessionFactory)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTemplate/getSessionFactory()|",
      "|java+method:///org/springframework/orm/hibernate/SessionFactoryUtils/releaseSession(net.sf.hibernate.Session,net.sf.hibernate.SessionFactory)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTemplate/getSession()|"
    ],
    "v2Body": [
      "|java+method:///net/sf/hibernate/Session/setFlushMode(net.sf.hibernate.FlushMode)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTemplate/convertHibernateAccessException(net.sf.hibernate.HibernateException)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTemplate/flushIfNecessary(net.sf.hibernate.Session,boolean)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateCallback/doInHibernate(net.sf.hibernate.Session)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTemplate/createSessionProxy(net.sf.hibernate.Session)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTemplate/convertJdbcAccessException(java.sql.SQLException)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTemplate/applyFlushMode(net.sf.hibernate.Session,boolean)|",
      "|java+method:///org/springframework/orm/hibernate/SessionFactoryUtils/isSessionTransactional(net.sf.hibernate.Session,net.sf.hibernate.SessionFactory)|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTemplate/getSessionFactory()|",
      "|java+method:///org/springframework/orm/hibernate/SessionFactoryUtils/releaseSession(net.sf.hibernate.Session,net.sf.hibernate.SessionFactory)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTemplate/getSession()|"
    ],
    "affectedLib": "org.springframework:spring-core:1.2.9",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework:spring-hibernate:1.2.8",
    "coordinatesV2": "org.springframework:spring-hibernate:1.2.9",
    "caller": "|java+method:///org/springframework/orm/hibernate/SessionFactoryUtils/initDeferredClose(net.sf.hibernate.SessionFactory)|",
    "called": "|java+method:///org/springframework/core/CollectionFactory/createLinkedSetIfPossible(int)|",
    "v1Body": [
      "|java+method:///java/lang/ThreadLocal/set(java.lang.Object)|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/lang/ThreadLocal/get()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/ThreadLocal/set(java.lang.Object)|",
      "|java+method:///org/springframework/core/CollectionFactory/createLinkedSetIfPossible(int)|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/lang/ThreadLocal/get()|"
    ],
    "affectedLib": "org.springframework:spring-core:1.2.9",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework:spring-hibernate:1.2.8",
    "coordinatesV2": "org.springframework:spring-hibernate:1.2.9",
    "caller": "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/initDeferredClose(org.hibernate.SessionFactory)|",
    "called": "|java+method:///org/springframework/core/CollectionFactory/createLinkedSetIfPossible(int)|",
    "v1Body": [
      "|java+method:///java/lang/ThreadLocal/set(java.lang.Object)|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/lang/ThreadLocal/get()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/ThreadLocal/set(java.lang.Object)|",
      "|java+method:///org/springframework/core/CollectionFactory/createLinkedSetIfPossible(int)|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/lang/ThreadLocal/get()|"
    ],
    "affectedLib": "org.springframework:spring-core:1.2.9",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework:spring-hibernate:1.2.8",
    "coordinatesV2": "org.springframework:spring-hibernate:1.2.9",
    "caller": "|java+method:///org/springframework/orm/hibernate3/HibernateTemplate/execute(org.springframework.orm.hibernate3.HibernateCallback,boolean)|",
    "called": "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/orm/hibernate3/HibernateTemplate/convertHibernateAccessException(org.hibernate.HibernateException)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTemplate/getSessionFactory()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTemplate/createSessionProxy(org.hibernate.Session)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTemplate/disableFilters(org.hibernate.Session)|",
      "|java+method:///org/hibernate/Session/setFlushMode(org.hibernate.FlushMode)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTemplate/flushIfNecessary(org.hibernate.Session,boolean)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateCallback/doInHibernate(org.hibernate.Session)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/isSessionTransactional(org.hibernate.Session,org.hibernate.SessionFactory)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTemplate/convertJdbcAccessException(java.sql.SQLException)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTemplate/getSession()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTemplate/applyFlushMode(org.hibernate.Session,boolean)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTemplate/enableFilters(org.hibernate.Session)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/releaseSession(org.hibernate.Session,org.hibernate.SessionFactory)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/orm/hibernate3/HibernateTemplate/convertHibernateAccessException(org.hibernate.HibernateException)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTemplate/getSessionFactory()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTemplate/createSessionProxy(org.hibernate.Session)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTemplate/disableFilters(org.hibernate.Session)|",
      "|java+method:///org/hibernate/Session/setFlushMode(org.hibernate.FlushMode)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTemplate/flushIfNecessary(org.hibernate.Session,boolean)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateCallback/doInHibernate(org.hibernate.Session)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/isSessionTransactional(org.hibernate.Session,org.hibernate.SessionFactory)|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTemplate/convertJdbcAccessException(java.sql.SQLException)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTemplate/getSession()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTemplate/applyFlushMode(org.hibernate.Session,boolean)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTemplate/enableFilters(org.hibernate.Session)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/releaseSession(org.hibernate.Session,org.hibernate.SessionFactory)|"
    ],
    "affectedLib": "org.springframework:spring-core:1.2.9",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework:spring-hibernate:1.2.8",
    "coordinatesV2": "org.springframework:spring-hibernate:1.2.9",
    "caller": "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)|",
    "called": "|java+method:///org/springframework/jdbc/datasource/DataSourceUtils/prepareConnectionForTransaction(java.sql.Connection,org.springframework.transaction.TransactionDefinition)|",
    "v1Body": [
      "|java+method:///net/sf/hibernate/Session/setFlushMode(net.sf.hibernate.FlushMode)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/setSynchronizedWithTransaction(boolean)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///net/sf/hibernate/Session/beginTransaction()|",
      "|java+method:///net/sf/hibernate/SessionFactory/openSession()|",
      "|java+method:///net/sf/hibernate/SessionFactory/openSession(net.sf.hibernate.Interceptor)|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/setTransaction(net.sf.hibernate.Transaction)|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/setTimeoutInSeconds(int)|",
      "|java+method:///java/lang/StringBuffer/append(java.lang.String)|",
      "|java+method:///org/springframework/jdbc/datasource/ConnectionHolder/setTimeoutInSeconds(int)|",
      "|java+method:///org/springframework/orm/hibernate/SessionFactoryUtils/releaseSession(net.sf.hibernate.Session,net.sf.hibernate.SessionFactory)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager$HibernateTransactionObject/setPreviousIsolationLevel(java.lang.Integer)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager$HibernateTransactionObject/setConnectionHolder(org.springframework.jdbc.datasource.ConnectionHolder)|",
      "|java+method:///java/lang/StringBuffer/append(java.lang.Object)|",
      "|java+method:///net/sf/hibernate/Session/getFlushMode()|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager/getSessionFactory()|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/getSession()|",
      "|java+method:///java/lang/StringBuffer/toString()|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/hasResource(java.lang.Object)|",
      "|java+constructor:///org/springframework/transaction/IllegalTransactionStateException/IllegalTransactionStateException(java.lang.String)|",
      "|java+constructor:///org/springframework/transaction/CannotCreateTransactionException/CannotCreateTransactionException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///org/springframework/jdbc/datasource/ConnectionHolder/ConnectionHolder(java.sql.Connection)|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/bindResource(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/springframework/jdbc/datasource/DataSourceUtils/prepareConnectionForTransaction(java.sql.Connection,org.springframework.transaction.TransactionDefinition)|",
      "|java+method:///net/sf/hibernate/Session/connection()|",
      "|java+constructor:///org/springframework/orm/hibernate/SessionHolder/SessionHolder(net.sf.hibernate.Session)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager$HibernateTransactionObject/setSessionHolder(org.springframework.orm.hibernate.SessionHolder,boolean)|",
      "|java+method:///org/springframework/transaction/TransactionDefinition/getTimeout()|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager/getDataSource()|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager$HibernateTransactionObject/isNewSessionHolder()|",
      "|java+method:///org/springframework/transaction/TransactionDefinition/isReadOnly()|",
      "|java+constructor:///java/lang/StringBuffer/StringBuffer()|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager$HibernateTransactionObject/getSessionHolder()|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/setPreviousFlushMode(net.sf.hibernate.FlushMode)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager/getEntityInterceptor()|"
    ],
    "v2Body": [
      "|java+method:///net/sf/hibernate/Session/setFlushMode(net.sf.hibernate.FlushMode)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/setSynchronizedWithTransaction(boolean)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/springframework/jdbc/datasource/ConnectionHolder/isSynchronizedWithTransaction()|",
      "|java+method:///net/sf/hibernate/Session/beginTransaction()|",
      "|java+method:///net/sf/hibernate/SessionFactory/openSession()|",
      "|java+method:///net/sf/hibernate/SessionFactory/openSession(net.sf.hibernate.Interceptor)|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/setTransaction(net.sf.hibernate.Transaction)|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/setTimeoutInSeconds(int)|",
      "|java+method:///java/lang/StringBuffer/append(java.lang.String)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager$HibernateTransactionObject/getConnectionHolder()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/springframework/jdbc/datasource/ConnectionHolder/setTimeoutInSeconds(int)|",
      "|java+method:///org/springframework/orm/hibernate/SessionFactoryUtils/releaseSession(net.sf.hibernate.Session,net.sf.hibernate.SessionFactory)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager$HibernateTransactionObject/hasConnectionHolder()|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager$HibernateTransactionObject/setPreviousIsolationLevel(java.lang.Integer)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager$HibernateTransactionObject/setConnectionHolder(org.springframework.jdbc.datasource.ConnectionHolder)|",
      "|java+method:///java/lang/StringBuffer/append(java.lang.Object)|",
      "|java+method:///net/sf/hibernate/Session/getFlushMode()|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager/getSessionFactory()|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/getSession()|",
      "|java+method:///java/lang/StringBuffer/toString()|",
      "|java+constructor:///org/springframework/transaction/IllegalTransactionStateException/IllegalTransactionStateException(java.lang.String)|",
      "|java+constructor:///org/springframework/transaction/CannotCreateTransactionException/CannotCreateTransactionException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///org/springframework/jdbc/datasource/ConnectionHolder/ConnectionHolder(java.sql.Connection)|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/bindResource(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/springframework/jdbc/datasource/DataSourceUtils/prepareConnectionForTransaction(java.sql.Connection,org.springframework.transaction.TransactionDefinition)|",
      "|java+method:///net/sf/hibernate/Session/connection()|",
      "|java+constructor:///org/springframework/orm/hibernate/SessionHolder/SessionHolder(net.sf.hibernate.Session)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager$HibernateTransactionObject/setSessionHolder(org.springframework.orm.hibernate.SessionHolder,boolean)|",
      "|java+method:///org/springframework/transaction/TransactionDefinition/getTimeout()|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager/getDataSource()|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager$HibernateTransactionObject/isNewSessionHolder()|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/isSynchronizedWithTransaction()|",
      "|java+method:///org/springframework/transaction/TransactionDefinition/isReadOnly()|",
      "|java+constructor:///java/lang/StringBuffer/StringBuffer()|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager$HibernateTransactionObject/getSessionHolder()|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/setPreviousFlushMode(net.sf.hibernate.FlushMode)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager/getEntityInterceptor()|"
    ],
    "affectedLib": "org.springframework:spring-jdbc:1.2.9",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework:spring-hibernate:1.2.8",
    "coordinatesV2": "org.springframework:spring-hibernate:1.2.9",
    "caller": "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)|",
    "called": "|java+method:///org/springframework/jdbc/datasource/DataSourceUtils/prepareConnectionForTransaction(java.sql.Connection,org.springframework.transaction.TransactionDefinition)|",
    "v1Body": [
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/setConnectionHolder(org.springframework.jdbc.datasource.ConnectionHolder)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/hibernate/Session/setFlushMode(org.hibernate.FlushMode)|",
      "|java+method:///org/springframework/jdbc/datasource/ConnectionHolder/setTimeoutInSeconds(int)|",
      "|java+method:///java/lang/StringBuffer/append(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/setTimeoutInSeconds(int)|",
      "|java+method:///org/hibernate/SessionFactory/openSession(org.hibernate.Interceptor)|",
      "|java+method:///org/hibernate/Session/connection()|",
      "|java+method:///org/springframework/jdbc/datasource/DataSourceUtils/prepareConnectionForTransaction(java.sql.Connection,org.springframework.transaction.TransactionDefinition)|",
      "|java+method:///java/lang/StringBuffer/append(java.lang.String)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/toString(org.hibernate.Session)|",
      "|java+method:///org/springframework/transaction/TransactionDefinition/getTimeout()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/setSessionHolder(org.springframework.orm.hibernate3.SessionHolder,boolean)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/isSameConnectionForEntireSession(org.hibernate.Session)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/releaseSession(org.hibernate.Session,org.hibernate.SessionFactory)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/getDataSource()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/isNewSessionHolder()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/getSessionHolder()|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/setTransaction(org.hibernate.Transaction)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/getSession()|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/hibernate/Session/getFlushMode()|",
      "|java+constructor:///org/springframework/orm/hibernate3/SessionHolder/SessionHolder(org.hibernate.Session)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/setPreviousFlushMode(org.hibernate.FlushMode)|",
      "|java+method:///org/hibernate/Session/beginTransaction()|",
      "|java+method:///org/springframework/transaction/TransactionDefinition/getIsolationLevel()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/setPreviousIsolationLevel(java.lang.Integer)|",
      "|java+method:///java/lang/StringBuffer/toString()|",
      "|java+constructor:///org/springframework/transaction/InvalidIsolationLevelException/InvalidIsolationLevelException(java.lang.String)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/setSynchronizedWithTransaction(boolean)|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/hasResource(java.lang.Object)|",
      "|java+method:///org/hibernate/SessionFactory/openSession()|",
      "|java+constructor:///org/springframework/transaction/IllegalTransactionStateException/IllegalTransactionStateException(java.lang.String)|",
      "|java+constructor:///org/springframework/transaction/CannotCreateTransactionException/CannotCreateTransactionException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/getEntityInterceptor()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/getSessionFactory()|",
      "|java+constructor:///org/springframework/jdbc/datasource/ConnectionHolder/ConnectionHolder(java.sql.Connection)|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/bindResource(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuffer/StringBuffer()|",
      "|java+method:///org/springframework/transaction/TransactionDefinition/isReadOnly()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/setConnectionHolder(org.springframework.jdbc.datasource.ConnectionHolder)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/hibernate/Session/setFlushMode(org.hibernate.FlushMode)|",
      "|java+method:///org/springframework/jdbc/datasource/ConnectionHolder/setTimeoutInSeconds(int)|",
      "|java+method:///java/lang/StringBuffer/append(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/setTimeoutInSeconds(int)|",
      "|java+method:///org/hibernate/SessionFactory/openSession(org.hibernate.Interceptor)|",
      "|java+method:///org/hibernate/Session/connection()|",
      "|java+method:///org/springframework/jdbc/datasource/DataSourceUtils/prepareConnectionForTransaction(java.sql.Connection,org.springframework.transaction.TransactionDefinition)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/toString(org.hibernate.Session)|",
      "|java+method:///org/springframework/transaction/TransactionDefinition/getTimeout()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/isSameConnectionForEntireSession(org.hibernate.Session)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/releaseSession(org.hibernate.Session,org.hibernate.SessionFactory)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/getDataSource()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/getSessionHolder()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/isNewSessionHolder()|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/isSynchronizedWithTransaction()|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/setTransaction(org.hibernate.Transaction)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/getSession()|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/hibernate/Session/getFlushMode()|",
      "|java+constructor:///org/springframework/orm/hibernate3/SessionHolder/SessionHolder(org.hibernate.Session)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/setPreviousFlushMode(org.hibernate.FlushMode)|",
      "|java+method:///org/springframework/jdbc/datasource/ConnectionHolder/isSynchronizedWithTransaction()|",
      "|java+method:///org/hibernate/Session/beginTransaction()|",
      "|java+method:///org/springframework/transaction/TransactionDefinition/getIsolationLevel()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/setPreviousIsolationLevel(java.lang.Integer)|",
      "|java+method:///java/lang/StringBuffer/toString()|",
      "|java+constructor:///org/springframework/transaction/InvalidIsolationLevelException/InvalidIsolationLevelException(java.lang.String)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/setSynchronizedWithTransaction(boolean)|",
      "|java+method:///org/hibernate/SessionFactory/openSession()|",
      "|java+constructor:///org/springframework/transaction/IllegalTransactionStateException/IllegalTransactionStateException(java.lang.String)|",
      "|java+constructor:///org/springframework/transaction/CannotCreateTransactionException/CannotCreateTransactionException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/getEntityInterceptor()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/getSessionFactory()|",
      "|java+constructor:///org/springframework/jdbc/datasource/ConnectionHolder/ConnectionHolder(java.sql.Connection)|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/bindResource(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/getConnectionHolder()|",
      "|java+method:///java/lang/StringBuffer/append(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuffer/StringBuffer()|",
      "|java+method:///org/springframework/transaction/TransactionDefinition/isReadOnly()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/setSessionHolder(org.springframework.orm.hibernate3.SessionHolder,boolean)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/hasConnectionHolder()|"
    ],
    "affectedLib": "org.springframework:spring-jdbc:1.2.9",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework:spring-hibernate:1.2.8",
    "coordinatesV2": "org.springframework:spring-hibernate:1.2.9",
    "caller": "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)|",
    "called": "|java+method:///org/springframework/jdbc/datasource/DataSourceUtils/resetConnectionAfterTransaction(java.sql.Connection,java.lang.Integer)|",
    "v1Body": [
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/getPreviousFlushMode()|",
      "|java+method:///org/hibernate/Session/setFlushMode(org.hibernate.FlushMode)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/springframework/jdbc/datasource/DataSourceUtils/resetConnectionAfterTransaction(java.sql.Connection,java.lang.Integer)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/getSessionFactory()|",
      "|java+method:///org/hibernate/Session/connection()|",
      "|java+method:///java/lang/StringBuffer/append(java.lang.String)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/toString(org.hibernate.Session)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/isSameConnectionForEntireSession(org.hibernate.Session)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/releaseSession(org.hibernate.Session,org.hibernate.SessionFactory)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/getDataSource()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/isNewSessionHolder()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/getSessionHolder()|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/unbindResource(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/getSession()|",
      "|java+method:///java/lang/StringBuffer/toString()|",
      "|java+method:///org/hibernate/Session/reconnect()|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/clear()|",
      "|java+method:///org/hibernate/Session/isConnected()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/getPreviousIsolationLevel()|",
      "|java+constructor:///java/lang/StringBuffer/StringBuffer()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/getPreviousFlushMode()|",
      "|java+method:///org/hibernate/Session/setFlushMode(org.hibernate.FlushMode)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///java/lang/StringBuffer/toString()|",
      "|java+method:///org/springframework/jdbc/datasource/DataSourceUtils/resetConnectionAfterTransaction(java.sql.Connection,java.lang.Integer)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/getSessionFactory()|",
      "|java+method:///org/hibernate/Session/connection()|",
      "|java+method:///java/lang/StringBuffer/append(java.lang.String)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/toString(org.hibernate.Session)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/isSameConnectionForEntireSession(org.hibernate.Session)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/releaseSession(org.hibernate.Session,org.hibernate.SessionFactory)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/getDataSource()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/isNewSessionHolder()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/getSessionHolder()|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/unbindResource(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/getSession()|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/clear()|",
      "|java+method:///org/hibernate/Session/isConnected()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/getPreviousIsolationLevel()|",
      "|java+constructor:///java/lang/StringBuffer/StringBuffer()|"
    ],
    "affectedLib": "org.springframework:spring-jdbc:1.2.9",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework:spring-hibernate:1.2.8",
    "coordinatesV2": "org.springframework:spring-hibernate:1.2.9",
    "caller": "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/getJtaSynchronizedSession(org.springframework.orm.hibernate3.SessionHolder,org.hibernate.SessionFactory,org.springframework.jdbc.support.SQLExceptionTranslator)|",
    "called": "|java+constructor:///org/springframework/dao/DataAccessResourceFailureException/DataAccessResourceFailureException(java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/getJtaTransactionManager(org.hibernate.SessionFactory,org.hibernate.Session)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+constructor:///org/springframework/orm/hibernate3/SessionFactoryUtils$JtaSessionSynchronization/SessionFactoryUtils$JtaSessionSynchronization(org.springframework.orm.hibernate3.SessionFactoryUtils$SpringSessionSynchronization,javax.transaction.TransactionManager)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/hibernate/Session/setFlushMode(org.hibernate.FlushMode)|",
      "|java+constructor:///org/springframework/orm/hibernate3/SessionFactoryUtils$SpringSessionSynchronization/SessionFactoryUtils$SpringSessionSynchronization(org.springframework.orm.hibernate3.SessionHolder,org.hibernate.SessionFactory,org.springframework.jdbc.support.SQLExceptionTranslator,boolean)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/getValidatedSession()|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/getAnySession()|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/setPreviousFlushMode(org.hibernate.FlushMode)|",
      "|java+method:///javax/transaction/Transaction/registerSynchronization(javax.transaction.Synchronization)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/setSynchronizedWithTransaction(boolean)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/getValidatedSession(java.lang.Object)|",
      "|java+method:///javax/transaction/TransactionManager/getTransaction()|",
      "|java+constructor:///org/springframework/dao/DataAccessResourceFailureException/DataAccessResourceFailureException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/isSynchronizedWithTransaction()|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/addSession(java.lang.Object,org.hibernate.Session)|",
      "|java+method:///org/hibernate/Session/getFlushMode()|",
      "|java+method:///javax/transaction/TransactionManager/getStatus()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/getJtaTransactionManager(org.hibernate.SessionFactory,org.hibernate.Session)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+constructor:///org/springframework/orm/hibernate3/SessionFactoryUtils$JtaSessionSynchronization/SessionFactoryUtils$JtaSessionSynchronization(org.springframework.orm.hibernate3.SessionFactoryUtils$SpringSessionSynchronization,javax.transaction.TransactionManager)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/hibernate/Session/setFlushMode(org.hibernate.FlushMode)|",
      "|java+constructor:///org/springframework/orm/hibernate3/SessionFactoryUtils$SpringSessionSynchronization/SessionFactoryUtils$SpringSessionSynchronization(org.springframework.orm.hibernate3.SessionHolder,org.hibernate.SessionFactory,org.springframework.jdbc.support.SQLExceptionTranslator,boolean)|",
      "|java+method:///javax/transaction/Transaction/getStatus()|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/getValidatedSession()|",
      "|java+method:///org/hibernate/Session/getFlushMode()|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/getAnySession()|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/setPreviousFlushMode(org.hibernate.FlushMode)|",
      "|java+method:///javax/transaction/Transaction/registerSynchronization(javax.transaction.Synchronization)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/setSynchronizedWithTransaction(boolean)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/getValidatedSession(java.lang.Object)|",
      "|java+method:///javax/transaction/TransactionManager/getTransaction()|",
      "|java+constructor:///org/springframework/dao/DataAccessResourceFailureException/DataAccessResourceFailureException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/isSynchronizedWithTransaction()|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/addSession(java.lang.Object,org.hibernate.Session)|"
    ],
    "affectedLib": "org.springframework:spring-dao:1.2.9",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework:spring-hibernate:1.2.8",
    "coordinatesV2": "org.springframework:spring-hibernate:1.2.9",
    "caller": "|java+method:///org/springframework/orm/hibernate/support/OpenSessionInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)|",
    "called": "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/unbindResource(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/springframework/orm/hibernate/SessionFactoryUtils/initDeferredClose(net.sf.hibernate.SessionFactory)|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/unbindResource(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate/SessionFactoryUtils/processDeferredClose(net.sf.hibernate.SessionFactory)|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/hasResource(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate/support/OpenSessionInViewFilter/isSingleSession()|",
      "|java+method:///org/springframework/orm/hibernate/SessionFactoryUtils/isDeferredCloseActive(net.sf.hibernate.SessionFactory)|",
      "|java+method:///org/springframework/orm/hibernate/support/OpenSessionInViewFilter/lookupSessionFactory(javax.servlet.http.HttpServletRequest)|",
      "|java+constructor:///org/springframework/orm/hibernate/SessionHolder/SessionHolder(net.sf.hibernate.Session)|",
      "|java+method:///javax/servlet/FilterChain/doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate/support/OpenSessionInViewFilter/closeSession(net.sf.hibernate.Session,net.sf.hibernate.SessionFactory)|",
      "|java+method:///org/springframework/orm/hibernate/support/OpenSessionInViewFilter/getSession(net.sf.hibernate.SessionFactory)|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/bindResource(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/orm/hibernate/SessionFactoryUtils/initDeferredClose(net.sf.hibernate.SessionFactory)|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/unbindResource(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate/SessionFactoryUtils/processDeferredClose(net.sf.hibernate.SessionFactory)|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/hasResource(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate/support/OpenSessionInViewFilter/isSingleSession()|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/bindResource(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate/SessionFactoryUtils/isDeferredCloseActive(net.sf.hibernate.SessionFactory)|",
      "|java+method:///org/springframework/orm/hibernate/support/OpenSessionInViewFilter/lookupSessionFactory(javax.servlet.http.HttpServletRequest)|",
      "|java+constructor:///org/springframework/orm/hibernate/SessionHolder/SessionHolder(net.sf.hibernate.Session)|",
      "|java+method:///javax/servlet/FilterChain/doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate/support/OpenSessionInViewFilter/closeSession(net.sf.hibernate.Session,net.sf.hibernate.SessionFactory)|",
      "|java+method:///org/springframework/orm/hibernate/support/OpenSessionInViewFilter/getSession(net.sf.hibernate.SessionFactory)|"
    ],
    "affectedLib": "org.springframework:spring-dao:1.2.9",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework:spring-hibernate:1.2.8",
    "coordinatesV2": "org.springframework:spring-hibernate:1.2.9",
    "caller": "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/doSuspend(java.lang.Object)|",
    "called": "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/unbindResource(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/getDataSource()|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/unbindResource(java.lang.Object)|",
      "|java+constructor:///org/springframework/orm/hibernate3/HibernateTransactionManager$SuspendedResourcesHolder/HibernateTransactionManager$SuspendedResourcesHolder(org.springframework.orm.hibernate3.SessionHolder,org.springframework.jdbc.datasource.ConnectionHolder,org.springframework.orm.hibernate3.HibernateTransactionManager$1)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/getSessionFactory()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/setSessionHolder(org.springframework.orm.hibernate3.SessionHolder,boolean)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/setConnectionHolder(org.springframework.jdbc.datasource.ConnectionHolder)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/getDataSource()|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/unbindResource(java.lang.Object)|",
      "|java+constructor:///org/springframework/orm/hibernate3/HibernateTransactionManager$SuspendedResourcesHolder/HibernateTransactionManager$SuspendedResourcesHolder(org.springframework.orm.hibernate3.SessionHolder,org.springframework.jdbc.datasource.ConnectionHolder,org.springframework.orm.hibernate3.HibernateTransactionManager$1)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/getSessionFactory()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/setSessionHolder(org.springframework.orm.hibernate3.SessionHolder,boolean)|"
    ],
    "affectedLib": "org.springframework:spring-dao:1.2.9",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework:spring-hibernate:1.2.8",
    "coordinatesV2": "org.springframework:spring-hibernate:1.2.9",
    "caller": "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager/doSuspend(java.lang.Object)|",
    "called": "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/unbindResource(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/unbindResource(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager/getSessionFactory()|",
      "|java+constructor:///org/springframework/orm/hibernate/HibernateTransactionManager$SuspendedResourcesHolder/HibernateTransactionManager$SuspendedResourcesHolder(org.springframework.orm.hibernate.SessionHolder,org.springframework.jdbc.datasource.ConnectionHolder,org.springframework.orm.hibernate.HibernateTransactionManager$1)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager$HibernateTransactionObject/setSessionHolder(org.springframework.orm.hibernate.SessionHolder,boolean)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager/getDataSource()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager/getSessionFactory()|",
      "|java+constructor:///org/springframework/orm/hibernate/HibernateTransactionManager$SuspendedResourcesHolder/HibernateTransactionManager$SuspendedResourcesHolder(org.springframework.orm.hibernate.SessionHolder,org.springframework.jdbc.datasource.ConnectionHolder,org.springframework.orm.hibernate.HibernateTransactionManager$1)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager$HibernateTransactionObject/setSessionHolder(org.springframework.orm.hibernate.SessionHolder,boolean)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager/getDataSource()|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/unbindResource(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager$HibernateTransactionObject/setConnectionHolder(org.springframework.jdbc.datasource.ConnectionHolder)|"
    ],
    "affectedLib": "org.springframework:spring-dao:1.2.9",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework:spring-hibernate:1.2.8",
    "coordinatesV2": "org.springframework:spring-hibernate:1.2.9",
    "caller": "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)|",
    "called": "|java+constructor:///org/springframework/transaction/CannotCreateTransactionException/CannotCreateTransactionException(java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///net/sf/hibernate/Session/setFlushMode(net.sf.hibernate.FlushMode)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/setSynchronizedWithTransaction(boolean)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///net/sf/hibernate/Session/beginTransaction()|",
      "|java+method:///net/sf/hibernate/SessionFactory/openSession()|",
      "|java+method:///net/sf/hibernate/SessionFactory/openSession(net.sf.hibernate.Interceptor)|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/setTransaction(net.sf.hibernate.Transaction)|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/setTimeoutInSeconds(int)|",
      "|java+method:///java/lang/StringBuffer/append(java.lang.String)|",
      "|java+method:///org/springframework/jdbc/datasource/ConnectionHolder/setTimeoutInSeconds(int)|",
      "|java+method:///org/springframework/orm/hibernate/SessionFactoryUtils/releaseSession(net.sf.hibernate.Session,net.sf.hibernate.SessionFactory)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager$HibernateTransactionObject/setPreviousIsolationLevel(java.lang.Integer)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager$HibernateTransactionObject/setConnectionHolder(org.springframework.jdbc.datasource.ConnectionHolder)|",
      "|java+method:///java/lang/StringBuffer/append(java.lang.Object)|",
      "|java+method:///net/sf/hibernate/Session/getFlushMode()|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager/getSessionFactory()|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/getSession()|",
      "|java+method:///java/lang/StringBuffer/toString()|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/hasResource(java.lang.Object)|",
      "|java+constructor:///org/springframework/transaction/IllegalTransactionStateException/IllegalTransactionStateException(java.lang.String)|",
      "|java+constructor:///org/springframework/transaction/CannotCreateTransactionException/CannotCreateTransactionException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///org/springframework/jdbc/datasource/ConnectionHolder/ConnectionHolder(java.sql.Connection)|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/bindResource(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/springframework/jdbc/datasource/DataSourceUtils/prepareConnectionForTransaction(java.sql.Connection,org.springframework.transaction.TransactionDefinition)|",
      "|java+method:///net/sf/hibernate/Session/connection()|",
      "|java+constructor:///org/springframework/orm/hibernate/SessionHolder/SessionHolder(net.sf.hibernate.Session)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager$HibernateTransactionObject/setSessionHolder(org.springframework.orm.hibernate.SessionHolder,boolean)|",
      "|java+method:///org/springframework/transaction/TransactionDefinition/getTimeout()|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager/getDataSource()|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager$HibernateTransactionObject/isNewSessionHolder()|",
      "|java+method:///org/springframework/transaction/TransactionDefinition/isReadOnly()|",
      "|java+constructor:///java/lang/StringBuffer/StringBuffer()|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager$HibernateTransactionObject/getSessionHolder()|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/setPreviousFlushMode(net.sf.hibernate.FlushMode)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager/getEntityInterceptor()|"
    ],
    "v2Body": [
      "|java+method:///net/sf/hibernate/Session/setFlushMode(net.sf.hibernate.FlushMode)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/setSynchronizedWithTransaction(boolean)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/springframework/jdbc/datasource/ConnectionHolder/isSynchronizedWithTransaction()|",
      "|java+method:///net/sf/hibernate/Session/beginTransaction()|",
      "|java+method:///net/sf/hibernate/SessionFactory/openSession()|",
      "|java+method:///net/sf/hibernate/SessionFactory/openSession(net.sf.hibernate.Interceptor)|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/setTransaction(net.sf.hibernate.Transaction)|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/setTimeoutInSeconds(int)|",
      "|java+method:///java/lang/StringBuffer/append(java.lang.String)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager$HibernateTransactionObject/getConnectionHolder()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/springframework/jdbc/datasource/ConnectionHolder/setTimeoutInSeconds(int)|",
      "|java+method:///org/springframework/orm/hibernate/SessionFactoryUtils/releaseSession(net.sf.hibernate.Session,net.sf.hibernate.SessionFactory)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager$HibernateTransactionObject/hasConnectionHolder()|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager$HibernateTransactionObject/setPreviousIsolationLevel(java.lang.Integer)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager$HibernateTransactionObject/setConnectionHolder(org.springframework.jdbc.datasource.ConnectionHolder)|",
      "|java+method:///java/lang/StringBuffer/append(java.lang.Object)|",
      "|java+method:///net/sf/hibernate/Session/getFlushMode()|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager/getSessionFactory()|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/getSession()|",
      "|java+method:///java/lang/StringBuffer/toString()|",
      "|java+constructor:///org/springframework/transaction/IllegalTransactionStateException/IllegalTransactionStateException(java.lang.String)|",
      "|java+constructor:///org/springframework/transaction/CannotCreateTransactionException/CannotCreateTransactionException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///org/springframework/jdbc/datasource/ConnectionHolder/ConnectionHolder(java.sql.Connection)|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/bindResource(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/springframework/jdbc/datasource/DataSourceUtils/prepareConnectionForTransaction(java.sql.Connection,org.springframework.transaction.TransactionDefinition)|",
      "|java+method:///net/sf/hibernate/Session/connection()|",
      "|java+constructor:///org/springframework/orm/hibernate/SessionHolder/SessionHolder(net.sf.hibernate.Session)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager$HibernateTransactionObject/setSessionHolder(org.springframework.orm.hibernate.SessionHolder,boolean)|",
      "|java+method:///org/springframework/transaction/TransactionDefinition/getTimeout()|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager/getDataSource()|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager$HibernateTransactionObject/isNewSessionHolder()|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/isSynchronizedWithTransaction()|",
      "|java+method:///org/springframework/transaction/TransactionDefinition/isReadOnly()|",
      "|java+constructor:///java/lang/StringBuffer/StringBuffer()|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager$HibernateTransactionObject/getSessionHolder()|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/setPreviousFlushMode(net.sf.hibernate.FlushMode)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager/getEntityInterceptor()|"
    ],
    "affectedLib": "org.springframework:spring-dao:1.2.9",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework:spring-hibernate:1.2.8",
    "coordinatesV2": "org.springframework:spring-hibernate:1.2.9",
    "caller": "|java+method:///org/springframework/orm/hibernate/SessionFactoryUtils$JtaSessionSynchronization/beforeCompletion()|",
    "called": "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/isCurrentTransactionReadOnly()|",
    "v1Body": [
      "|java+method:///org/springframework/orm/hibernate/SessionFactoryUtils$SpringSessionSynchronization/beforeCommit(boolean)|",
      "|java+method:///org/springframework/orm/hibernate/SessionFactoryUtils/access$000()|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/isCurrentTransactionReadOnly()|",
      "|java+method:///javax/transaction/TransactionManager/setRollbackOnly()|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/springframework/orm/hibernate/SessionFactoryUtils$SpringSessionSynchronization/beforeCompletion()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/orm/hibernate/SessionFactoryUtils$SpringSessionSynchronization/beforeCommit(boolean)|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/isCurrentTransactionReadOnly()|",
      "|java+method:///org/springframework/orm/hibernate/SessionFactoryUtils$JtaSessionSynchronization/setRollbackOnlyIfPossible()|",
      "|java+method:///org/springframework/orm/hibernate/SessionFactoryUtils$SpringSessionSynchronization/beforeCompletion()|"
    ],
    "affectedLib": "org.springframework:spring-dao:1.2.9",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework:spring-hibernate:1.2.8",
    "coordinatesV2": "org.springframework:spring-hibernate:1.2.9",
    "caller": "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)|",
    "called": "|java+constructor:///org/springframework/transaction/CannotCreateTransactionException/CannotCreateTransactionException(java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/setConnectionHolder(org.springframework.jdbc.datasource.ConnectionHolder)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/hibernate/Session/setFlushMode(org.hibernate.FlushMode)|",
      "|java+method:///org/springframework/jdbc/datasource/ConnectionHolder/setTimeoutInSeconds(int)|",
      "|java+method:///java/lang/StringBuffer/append(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/setTimeoutInSeconds(int)|",
      "|java+method:///org/hibernate/SessionFactory/openSession(org.hibernate.Interceptor)|",
      "|java+method:///org/hibernate/Session/connection()|",
      "|java+method:///org/springframework/jdbc/datasource/DataSourceUtils/prepareConnectionForTransaction(java.sql.Connection,org.springframework.transaction.TransactionDefinition)|",
      "|java+method:///java/lang/StringBuffer/append(java.lang.String)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/toString(org.hibernate.Session)|",
      "|java+method:///org/springframework/transaction/TransactionDefinition/getTimeout()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/setSessionHolder(org.springframework.orm.hibernate3.SessionHolder,boolean)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/isSameConnectionForEntireSession(org.hibernate.Session)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/releaseSession(org.hibernate.Session,org.hibernate.SessionFactory)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/getDataSource()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/isNewSessionHolder()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/getSessionHolder()|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/setTransaction(org.hibernate.Transaction)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/getSession()|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/hibernate/Session/getFlushMode()|",
      "|java+constructor:///org/springframework/orm/hibernate3/SessionHolder/SessionHolder(org.hibernate.Session)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/setPreviousFlushMode(org.hibernate.FlushMode)|",
      "|java+method:///org/hibernate/Session/beginTransaction()|",
      "|java+method:///org/springframework/transaction/TransactionDefinition/getIsolationLevel()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/setPreviousIsolationLevel(java.lang.Integer)|",
      "|java+method:///java/lang/StringBuffer/toString()|",
      "|java+constructor:///org/springframework/transaction/InvalidIsolationLevelException/InvalidIsolationLevelException(java.lang.String)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/setSynchronizedWithTransaction(boolean)|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/hasResource(java.lang.Object)|",
      "|java+method:///org/hibernate/SessionFactory/openSession()|",
      "|java+constructor:///org/springframework/transaction/IllegalTransactionStateException/IllegalTransactionStateException(java.lang.String)|",
      "|java+constructor:///org/springframework/transaction/CannotCreateTransactionException/CannotCreateTransactionException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/getEntityInterceptor()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/getSessionFactory()|",
      "|java+constructor:///org/springframework/jdbc/datasource/ConnectionHolder/ConnectionHolder(java.sql.Connection)|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/bindResource(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuffer/StringBuffer()|",
      "|java+method:///org/springframework/transaction/TransactionDefinition/isReadOnly()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/setConnectionHolder(org.springframework.jdbc.datasource.ConnectionHolder)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/hibernate/Session/setFlushMode(org.hibernate.FlushMode)|",
      "|java+method:///org/springframework/jdbc/datasource/ConnectionHolder/setTimeoutInSeconds(int)|",
      "|java+method:///java/lang/StringBuffer/append(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/setTimeoutInSeconds(int)|",
      "|java+method:///org/hibernate/SessionFactory/openSession(org.hibernate.Interceptor)|",
      "|java+method:///org/hibernate/Session/connection()|",
      "|java+method:///org/springframework/jdbc/datasource/DataSourceUtils/prepareConnectionForTransaction(java.sql.Connection,org.springframework.transaction.TransactionDefinition)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/toString(org.hibernate.Session)|",
      "|java+method:///org/springframework/transaction/TransactionDefinition/getTimeout()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/isSameConnectionForEntireSession(org.hibernate.Session)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/releaseSession(org.hibernate.Session,org.hibernate.SessionFactory)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/getDataSource()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/getSessionHolder()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/isNewSessionHolder()|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/isSynchronizedWithTransaction()|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/setTransaction(org.hibernate.Transaction)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/getSession()|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/hibernate/Session/getFlushMode()|",
      "|java+constructor:///org/springframework/orm/hibernate3/SessionHolder/SessionHolder(org.hibernate.Session)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/setPreviousFlushMode(org.hibernate.FlushMode)|",
      "|java+method:///org/springframework/jdbc/datasource/ConnectionHolder/isSynchronizedWithTransaction()|",
      "|java+method:///org/hibernate/Session/beginTransaction()|",
      "|java+method:///org/springframework/transaction/TransactionDefinition/getIsolationLevel()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/setPreviousIsolationLevel(java.lang.Integer)|",
      "|java+method:///java/lang/StringBuffer/toString()|",
      "|java+constructor:///org/springframework/transaction/InvalidIsolationLevelException/InvalidIsolationLevelException(java.lang.String)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/setSynchronizedWithTransaction(boolean)|",
      "|java+method:///org/hibernate/SessionFactory/openSession()|",
      "|java+constructor:///org/springframework/transaction/IllegalTransactionStateException/IllegalTransactionStateException(java.lang.String)|",
      "|java+constructor:///org/springframework/transaction/CannotCreateTransactionException/CannotCreateTransactionException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/getEntityInterceptor()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/getSessionFactory()|",
      "|java+constructor:///org/springframework/jdbc/datasource/ConnectionHolder/ConnectionHolder(java.sql.Connection)|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/bindResource(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/getConnectionHolder()|",
      "|java+method:///java/lang/StringBuffer/append(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuffer/StringBuffer()|",
      "|java+method:///org/springframework/transaction/TransactionDefinition/isReadOnly()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/setSessionHolder(org.springframework.orm.hibernate3.SessionHolder,boolean)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/hasConnectionHolder()|"
    ],
    "affectedLib": "org.springframework:spring-dao:1.2.9",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework:spring-hibernate:1.2.8",
    "coordinatesV2": "org.springframework:spring-hibernate:1.2.9",
    "caller": "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/doGetTransaction()|",
    "called": "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/getResource(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/setConnectionHolder(org.springframework.jdbc.datasource.ConnectionHolder)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+constructor:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/HibernateTransactionManager$HibernateTransactionObject(org.springframework.orm.hibernate3.HibernateTransactionManager$1)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/getDataSource()|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/getSession()|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/getResource(java.lang.Object)|",
      "|java+method:///java/lang/StringBuffer/toString()|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/hasResource(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/isNestedTransactionAllowed()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/getSessionFactory()|",
      "|java+method:///java/lang/StringBuffer/append(java.lang.String)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/toString(org.hibernate.Session)|",
      "|java+constructor:///java/lang/StringBuffer/StringBuffer()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/setSessionHolder(org.springframework.orm.hibernate3.SessionHolder,boolean)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/setSavepointAllowed(boolean)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/setConnectionHolder(org.springframework.jdbc.datasource.ConnectionHolder)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+constructor:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/HibernateTransactionManager$HibernateTransactionObject(org.springframework.orm.hibernate3.HibernateTransactionManager$1)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/getDataSource()|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/getSession()|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/getResource(java.lang.Object)|",
      "|java+method:///java/lang/StringBuffer/toString()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/isNestedTransactionAllowed()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/getSessionFactory()|",
      "|java+method:///java/lang/StringBuffer/append(java.lang.String)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/toString(org.hibernate.Session)|",
      "|java+constructor:///java/lang/StringBuffer/StringBuffer()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/setSessionHolder(org.springframework.orm.hibernate3.SessionHolder,boolean)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/setSavepointAllowed(boolean)|"
    ],
    "affectedLib": "org.springframework:spring-dao:1.2.9",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework:spring-hibernate:1.2.8",
    "coordinatesV2": "org.springframework:spring-hibernate:1.2.9",
    "caller": "|java+constructor:///org/springframework/orm/hibernate/SessionFactoryUtils$SpringSessionSynchronization/SessionFactoryUtils$SpringSessionSynchronization(org.springframework.orm.hibernate.SessionHolder,net.sf.hibernate.SessionFactory,org.springframework.jdbc.support.SQLExceptionTranslator,boolean)|",
    "called": "|java+constructor:///org/springframework/dao/DataAccessResourceFailureException/DataAccessResourceFailureException(java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/getAnySession()|",
      "|java+method:///org/springframework/orm/hibernate/SessionFactoryUtils/getJtaTransactionManager(net.sf.hibernate.SessionFactory,net.sf.hibernate.Session)|",
      "|java+constructor:///org/springframework/dao/DataAccessResourceFailureException/DataAccessResourceFailureException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///javax/transaction/TransactionManager/getStatus()|",
      "|java+method:///javax/transaction/TransactionManager/getTransaction()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/getAnySession()|",
      "|java+method:///org/springframework/orm/hibernate/SessionFactoryUtils/getJtaTransactionManager(net.sf.hibernate.SessionFactory,net.sf.hibernate.Session)|",
      "|java+constructor:///org/springframework/dao/DataAccessResourceFailureException/DataAccessResourceFailureException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///javax/transaction/TransactionManager/getTransaction()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "org.springframework:spring-dao:1.2.9",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework:spring-hibernate:1.2.8",
    "coordinatesV2": "org.springframework:spring-hibernate:1.2.9",
    "caller": "|java+method:///org/springframework/orm/hibernate3/support/OpenSessionInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)|",
    "called": "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/unbindResource(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/springframework/orm/hibernate3/support/OpenSessionInViewFilter/lookupSessionFactory(javax.servlet.http.HttpServletRequest)|",
      "|java+method:///org/springframework/orm/hibernate3/support/OpenSessionInViewFilter/closeSession(org.hibernate.Session,org.hibernate.SessionFactory)|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/unbindResource(java.lang.Object)|",
      "|java+constructor:///org/springframework/orm/hibernate3/SessionHolder/SessionHolder(org.hibernate.Session)|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/hasResource(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate3/support/OpenSessionInViewFilter/isSingleSession()|",
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/processDeferredClose(org.hibernate.SessionFactory)|",
      "|java+method:///javax/servlet/FilterChain/doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/isDeferredCloseActive(org.hibernate.SessionFactory)|",
      "|java+method:///org/springframework/orm/hibernate3/support/OpenSessionInViewFilter/getSession(org.hibernate.SessionFactory)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/initDeferredClose(org.hibernate.SessionFactory)|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/bindResource(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/orm/hibernate3/support/OpenSessionInViewFilter/lookupSessionFactory(javax.servlet.http.HttpServletRequest)|",
      "|java+method:///org/springframework/orm/hibernate3/support/OpenSessionInViewFilter/closeSession(org.hibernate.Session,org.hibernate.SessionFactory)|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/unbindResource(java.lang.Object)|",
      "|java+constructor:///org/springframework/orm/hibernate3/SessionHolder/SessionHolder(org.hibernate.Session)|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/hasResource(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate3/support/OpenSessionInViewFilter/isSingleSession()|",
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/processDeferredClose(org.hibernate.SessionFactory)|",
      "|java+method:///javax/servlet/FilterChain/doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/isDeferredCloseActive(org.hibernate.SessionFactory)|",
      "|java+method:///org/springframework/orm/hibernate3/support/OpenSessionInViewFilter/getSession(org.hibernate.SessionFactory)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/initDeferredClose(org.hibernate.SessionFactory)|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/bindResource(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.springframework:spring-dao:1.2.9",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework:spring-hibernate:1.2.8",
    "coordinatesV2": "org.springframework:spring-hibernate:1.2.9",
    "caller": "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils$JtaSessionSynchronization/beforeCompletion()|",
    "called": "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/isCurrentTransactionReadOnly()|",
    "v1Body": [
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils$SpringSessionSynchronization/beforeCompletion()|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/isCurrentTransactionReadOnly()|",
      "|java+method:///javax/transaction/TransactionManager/setRollbackOnly()|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils$SpringSessionSynchronization/beforeCommit(boolean)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/access$000()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils$JtaSessionSynchronization/setRollbackOnlyIfPossible()|",
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils$SpringSessionSynchronization/beforeCompletion()|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/isCurrentTransactionReadOnly()|",
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils$SpringSessionSynchronization/beforeCommit(boolean)|"
    ],
    "affectedLib": "org.springframework:spring-dao:1.2.9",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework:spring-hibernate:1.2.8",
    "coordinatesV2": "org.springframework:spring-hibernate:1.2.9",
    "caller": "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager/doGetTransaction()|",
    "called": "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/getResource(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager$HibernateTransactionObject/setSavepointAllowed(boolean)|",
      "|java+constructor:///org/springframework/orm/hibernate/HibernateTransactionManager$HibernateTransactionObject/HibernateTransactionManager$HibernateTransactionObject(org.springframework.orm.hibernate.HibernateTransactionManager$1)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager$HibernateTransactionObject/setConnectionHolder(org.springframework.jdbc.datasource.ConnectionHolder)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/getResource(java.lang.Object)|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/hasResource(java.lang.Object)|",
      "|java+method:///java/lang/StringBuffer/append(java.lang.String)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager$HibernateTransactionObject/setSessionHolder(org.springframework.orm.hibernate.SessionHolder,boolean)|",
      "|java+method:///java/lang/StringBuffer/append(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager/getSessionFactory()|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/getSession()|",
      "|java+method:///java/lang/StringBuffer/toString()|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager/getDataSource()|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager/isNestedTransactionAllowed()|",
      "|java+constructor:///java/lang/StringBuffer/StringBuffer()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager$HibernateTransactionObject/setSavepointAllowed(boolean)|",
      "|java+constructor:///org/springframework/orm/hibernate/HibernateTransactionManager$HibernateTransactionObject/HibernateTransactionManager$HibernateTransactionObject(org.springframework.orm.hibernate.HibernateTransactionManager$1)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager$HibernateTransactionObject/setConnectionHolder(org.springframework.jdbc.datasource.ConnectionHolder)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/getResource(java.lang.Object)|",
      "|java+method:///java/lang/StringBuffer/append(java.lang.String)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager$HibernateTransactionObject/setSessionHolder(org.springframework.orm.hibernate.SessionHolder,boolean)|",
      "|java+method:///java/lang/StringBuffer/append(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager/getSessionFactory()|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/getSession()|",
      "|java+method:///java/lang/StringBuffer/toString()|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager/getDataSource()|",
      "|java+method:///org/springframework/orm/hibernate/HibernateTransactionManager/isNestedTransactionAllowed()|",
      "|java+constructor:///java/lang/StringBuffer/StringBuffer()|"
    ],
    "affectedLib": "org.springframework:spring-dao:1.2.9",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework:spring-hibernate:1.2.8",
    "coordinatesV2": "org.springframework:spring-hibernate:1.2.9",
    "caller": "|java+method:///org/springframework/orm/hibernate/SessionFactoryUtils/registerJtaSynchronization(net.sf.hibernate.Session,net.sf.hibernate.SessionFactory,org.springframework.jdbc.support.SQLExceptionTranslator,org.springframework.orm.hibernate.SessionHolder)|",
    "called": "|java+constructor:///org/springframework/dao/DataAccessResourceFailureException/DataAccessResourceFailureException(java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate/SessionFactoryUtils/getJtaTransactionManager(net.sf.hibernate.SessionFactory,net.sf.hibernate.Session)|",
      "|java+constructor:///org/springframework/dao/DataAccessResourceFailureException/DataAccessResourceFailureException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/setSynchronizedWithTransaction(boolean)|",
      "|java+method:///javax/transaction/TransactionManager/getStatus()|",
      "|java+constructor:///org/springframework/orm/hibernate/SessionFactoryUtils$SpringSessionSynchronization/SessionFactoryUtils$SpringSessionSynchronization(org.springframework.orm.hibernate.SessionHolder,net.sf.hibernate.SessionFactory,org.springframework.jdbc.support.SQLExceptionTranslator,boolean)|",
      "|java+method:///javax/transaction/Transaction/registerSynchronization(javax.transaction.Synchronization)|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/addSession(java.lang.Object,net.sf.hibernate.Session)|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/bindResource(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/springframework/orm/hibernate/SessionFactoryUtils$JtaSessionSynchronization/SessionFactoryUtils$JtaSessionSynchronization(org.springframework.orm.hibernate.SessionFactoryUtils$SpringSessionSynchronization,javax.transaction.TransactionManager)|",
      "|java+method:///javax/transaction/TransactionManager/getTransaction()|",
      "|java+constructor:///org/springframework/orm/hibernate/SessionHolder/SessionHolder(java.lang.Object,net.sf.hibernate.Session)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate/SessionFactoryUtils/getJtaTransactionManager(net.sf.hibernate.SessionFactory,net.sf.hibernate.Session)|",
      "|java+constructor:///org/springframework/dao/DataAccessResourceFailureException/DataAccessResourceFailureException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///javax/transaction/Transaction/getStatus()|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/setSynchronizedWithTransaction(boolean)|",
      "|java+constructor:///org/springframework/orm/hibernate/SessionFactoryUtils$SpringSessionSynchronization/SessionFactoryUtils$SpringSessionSynchronization(org.springframework.orm.hibernate.SessionHolder,net.sf.hibernate.SessionFactory,org.springframework.jdbc.support.SQLExceptionTranslator,boolean)|",
      "|java+method:///javax/transaction/Transaction/registerSynchronization(javax.transaction.Synchronization)|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/addSession(java.lang.Object,net.sf.hibernate.Session)|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/bindResource(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/springframework/orm/hibernate/SessionFactoryUtils$JtaSessionSynchronization/SessionFactoryUtils$JtaSessionSynchronization(org.springframework.orm.hibernate.SessionFactoryUtils$SpringSessionSynchronization,javax.transaction.TransactionManager)|",
      "|java+method:///javax/transaction/TransactionManager/getTransaction()|",
      "|java+constructor:///org/springframework/orm/hibernate/SessionHolder/SessionHolder(java.lang.Object,net.sf.hibernate.Session)|"
    ],
    "affectedLib": "org.springframework:spring-dao:1.2.9",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework:spring-hibernate:1.2.8",
    "coordinatesV2": "org.springframework:spring-hibernate:1.2.9",
    "caller": "|java+method:///org/springframework/orm/hibernate/SessionFactoryUtils/getJtaSynchronizedSession(org.springframework.orm.hibernate.SessionHolder,net.sf.hibernate.SessionFactory,org.springframework.jdbc.support.SQLExceptionTranslator)|",
    "called": "|java+constructor:///org/springframework/dao/DataAccessResourceFailureException/DataAccessResourceFailureException(java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///net/sf/hibernate/Session/setFlushMode(net.sf.hibernate.FlushMode)|",
      "|java+method:///org/springframework/orm/hibernate/SessionFactoryUtils/getJtaTransactionManager(net.sf.hibernate.SessionFactory,net.sf.hibernate.Session)|",
      "|java+constructor:///org/springframework/dao/DataAccessResourceFailureException/DataAccessResourceFailureException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/setSynchronizedWithTransaction(boolean)|",
      "|java+method:///javax/transaction/TransactionManager/getStatus()|",
      "|java+method:///net/sf/hibernate/Session/getFlushMode()|",
      "|java+constructor:///org/springframework/orm/hibernate/SessionFactoryUtils$SpringSessionSynchronization/SessionFactoryUtils$SpringSessionSynchronization(org.springframework.orm.hibernate.SessionHolder,net.sf.hibernate.SessionFactory,org.springframework.jdbc.support.SQLExceptionTranslator,boolean)|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/getValidatedSession(java.lang.Object)|",
      "|java+method:///javax/transaction/Transaction/registerSynchronization(javax.transaction.Synchronization)|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/addSession(java.lang.Object,net.sf.hibernate.Session)|",
      "|java+constructor:///org/springframework/orm/hibernate/SessionFactoryUtils$JtaSessionSynchronization/SessionFactoryUtils$JtaSessionSynchronization(org.springframework.orm.hibernate.SessionFactoryUtils$SpringSessionSynchronization,javax.transaction.TransactionManager)|",
      "|java+method:///javax/transaction/TransactionManager/getTransaction()|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/isSynchronizedWithTransaction()|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/setPreviousFlushMode(net.sf.hibernate.FlushMode)|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/getValidatedSession()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/getAnySession()|"
    ],
    "v2Body": [
      "|java+method:///net/sf/hibernate/Session/setFlushMode(net.sf.hibernate.FlushMode)|",
      "|java+method:///org/springframework/orm/hibernate/SessionFactoryUtils/getJtaTransactionManager(net.sf.hibernate.SessionFactory,net.sf.hibernate.Session)|",
      "|java+constructor:///org/springframework/dao/DataAccessResourceFailureException/DataAccessResourceFailureException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///javax/transaction/Transaction/getStatus()|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/setSynchronizedWithTransaction(boolean)|",
      "|java+method:///net/sf/hibernate/Session/getFlushMode()|",
      "|java+constructor:///org/springframework/orm/hibernate/SessionFactoryUtils$SpringSessionSynchronization/SessionFactoryUtils$SpringSessionSynchronization(org.springframework.orm.hibernate.SessionHolder,net.sf.hibernate.SessionFactory,org.springframework.jdbc.support.SQLExceptionTranslator,boolean)|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/getValidatedSession(java.lang.Object)|",
      "|java+method:///javax/transaction/Transaction/registerSynchronization(javax.transaction.Synchronization)|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/addSession(java.lang.Object,net.sf.hibernate.Session)|",
      "|java+constructor:///org/springframework/orm/hibernate/SessionFactoryUtils$JtaSessionSynchronization/SessionFactoryUtils$JtaSessionSynchronization(org.springframework.orm.hibernate.SessionFactoryUtils$SpringSessionSynchronization,javax.transaction.TransactionManager)|",
      "|java+method:///javax/transaction/TransactionManager/getTransaction()|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/isSynchronizedWithTransaction()|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/setPreviousFlushMode(net.sf.hibernate.FlushMode)|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/getValidatedSession()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate/SessionHolder/getAnySession()|"
    ],
    "affectedLib": "org.springframework:spring-dao:1.2.9",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework:spring-hibernate:1.2.8",
    "coordinatesV2": "org.springframework:spring-hibernate:1.2.9",
    "caller": "|java+constructor:///org/springframework/orm/hibernate3/SessionFactoryUtils$SpringSessionSynchronization/SessionFactoryUtils$SpringSessionSynchronization(org.springframework.orm.hibernate3.SessionHolder,org.hibernate.SessionFactory,org.springframework.jdbc.support.SQLExceptionTranslator,boolean)|",
    "called": "|java+constructor:///org/springframework/dao/DataAccessResourceFailureException/DataAccessResourceFailureException(java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/getJtaTransactionManager(org.hibernate.SessionFactory,org.hibernate.Session)|",
      "|java+constructor:///org/springframework/dao/DataAccessResourceFailureException/DataAccessResourceFailureException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///javax/transaction/TransactionManager/getStatus()|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/getAnySession()|",
      "|java+method:///javax/transaction/TransactionManager/getTransaction()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/getJtaTransactionManager(org.hibernate.SessionFactory,org.hibernate.Session)|",
      "|java+constructor:///org/springframework/dao/DataAccessResourceFailureException/DataAccessResourceFailureException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/getAnySession()|",
      "|java+method:///javax/transaction/TransactionManager/getTransaction()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "org.springframework:spring-dao:1.2.9",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework:spring-hibernate:1.2.8",
    "coordinatesV2": "org.springframework:spring-hibernate:1.2.9",
    "caller": "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/registerJtaSynchronization(org.hibernate.Session,org.hibernate.SessionFactory,org.springframework.jdbc.support.SQLExceptionTranslator,org.springframework.orm.hibernate3.SessionHolder)|",
    "called": "|java+constructor:///org/springframework/dao/DataAccessResourceFailureException/DataAccessResourceFailureException(java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/getJtaTransactionManager(org.hibernate.SessionFactory,org.hibernate.Session)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+constructor:///org/springframework/orm/hibernate3/SessionFactoryUtils$JtaSessionSynchronization/SessionFactoryUtils$JtaSessionSynchronization(org.springframework.orm.hibernate3.SessionFactoryUtils$SpringSessionSynchronization,javax.transaction.TransactionManager)|",
      "|java+constructor:///org/springframework/orm/hibernate3/SessionFactoryUtils$SpringSessionSynchronization/SessionFactoryUtils$SpringSessionSynchronization(org.springframework.orm.hibernate3.SessionHolder,org.hibernate.SessionFactory,org.springframework.jdbc.support.SQLExceptionTranslator,boolean)|",
      "|java+method:///javax/transaction/TransactionManager/getStatus()|",
      "|java+method:///javax/transaction/Transaction/registerSynchronization(javax.transaction.Synchronization)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/setSynchronizedWithTransaction(boolean)|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/bindResource(java.lang.Object,java.lang.Object)|",
      "|java+method:///javax/transaction/TransactionManager/getTransaction()|",
      "|java+constructor:///org/springframework/orm/hibernate3/SessionHolder/SessionHolder(java.lang.Object,org.hibernate.Session)|",
      "|java+constructor:///org/springframework/dao/DataAccessResourceFailureException/DataAccessResourceFailureException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/addSession(java.lang.Object,org.hibernate.Session)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/getJtaTransactionManager(org.hibernate.SessionFactory,org.hibernate.Session)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+constructor:///org/springframework/orm/hibernate3/SessionFactoryUtils$JtaSessionSynchronization/SessionFactoryUtils$JtaSessionSynchronization(org.springframework.orm.hibernate3.SessionFactoryUtils$SpringSessionSynchronization,javax.transaction.TransactionManager)|",
      "|java+constructor:///org/springframework/orm/hibernate3/SessionFactoryUtils$SpringSessionSynchronization/SessionFactoryUtils$SpringSessionSynchronization(org.springframework.orm.hibernate3.SessionHolder,org.hibernate.SessionFactory,org.springframework.jdbc.support.SQLExceptionTranslator,boolean)|",
      "|java+method:///javax/transaction/Transaction/getStatus()|",
      "|java+method:///javax/transaction/Transaction/registerSynchronization(javax.transaction.Synchronization)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/setSynchronizedWithTransaction(boolean)|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/bindResource(java.lang.Object,java.lang.Object)|",
      "|java+method:///javax/transaction/TransactionManager/getTransaction()|",
      "|java+constructor:///org/springframework/orm/hibernate3/SessionHolder/SessionHolder(java.lang.Object,org.hibernate.Session)|",
      "|java+constructor:///org/springframework/dao/DataAccessResourceFailureException/DataAccessResourceFailureException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/addSession(java.lang.Object,org.hibernate.Session)|"
    ],
    "affectedLib": "org.springframework:spring-dao:1.2.9",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework:spring-hibernate:1.2.8",
    "coordinatesV2": "org.springframework:spring-hibernate:1.2.9",
    "caller": "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)|",
    "called": "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/unbindResource(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/getPreviousFlushMode()|",
      "|java+method:///org/hibernate/Session/setFlushMode(org.hibernate.FlushMode)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/springframework/jdbc/datasource/DataSourceUtils/resetConnectionAfterTransaction(java.sql.Connection,java.lang.Integer)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/getSessionFactory()|",
      "|java+method:///org/hibernate/Session/connection()|",
      "|java+method:///java/lang/StringBuffer/append(java.lang.String)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/toString(org.hibernate.Session)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/isSameConnectionForEntireSession(org.hibernate.Session)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/releaseSession(org.hibernate.Session,org.hibernate.SessionFactory)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/getDataSource()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/isNewSessionHolder()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/getSessionHolder()|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/unbindResource(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/getSession()|",
      "|java+method:///java/lang/StringBuffer/toString()|",
      "|java+method:///org/hibernate/Session/reconnect()|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/clear()|",
      "|java+method:///org/hibernate/Session/isConnected()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/getPreviousIsolationLevel()|",
      "|java+constructor:///java/lang/StringBuffer/StringBuffer()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/getPreviousFlushMode()|",
      "|java+method:///org/hibernate/Session/setFlushMode(org.hibernate.FlushMode)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///java/lang/StringBuffer/toString()|",
      "|java+method:///org/springframework/jdbc/datasource/DataSourceUtils/resetConnectionAfterTransaction(java.sql.Connection,java.lang.Integer)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/getSessionFactory()|",
      "|java+method:///org/hibernate/Session/connection()|",
      "|java+method:///java/lang/StringBuffer/append(java.lang.String)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/toString(org.hibernate.Session)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/isSameConnectionForEntireSession(org.hibernate.Session)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionFactoryUtils/releaseSession(org.hibernate.Session,org.hibernate.SessionFactory)|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager/getDataSource()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/isNewSessionHolder()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/getSessionHolder()|",
      "|java+method:///org/springframework/transaction/support/TransactionSynchronizationManager/unbindResource(java.lang.Object)|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/getSession()|",
      "|java+method:///org/springframework/orm/hibernate3/SessionHolder/clear()|",
      "|java+method:///org/hibernate/Session/isConnected()|",
      "|java+method:///org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject/getPreviousIsolationLevel()|",
      "|java+constructor:///java/lang/StringBuffer/StringBuffer()|"
    ],
    "affectedLib": "org.springframework:spring-dao:1.2.9",
    "change": "ADDED"
  }
]