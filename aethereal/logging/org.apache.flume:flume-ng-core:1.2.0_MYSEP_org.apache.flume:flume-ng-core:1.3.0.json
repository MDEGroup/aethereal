[
  {
    "coordinatesV1": "org.apache.flume:flume-ng-core:1.3.0",
    "coordinatesV2": "org.apache.flume:flume-ng-core:1.2.0",
    "caller": "|java+initializer:///org/apache/flume/channel/MemoryChannel/MemoryChannel$initializer|",
    "called": "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+method:///java/lang/Integer/valueOf(int)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+method:///java/lang/Runtime/maxMemory()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/Runtime/getRuntime()|",
      "|java+method:///java/lang/Long/valueOf(long)|"
    ],
    "affectedLib": "org.slf4j:slf4j-api:1.7.2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.apache.flume:flume-ng-core:1.3.0",
    "coordinatesV2": "org.apache.flume:flume-ng-core:1.2.0",
    "caller": "|java+initializer:///org/apache/flume/tools/VersionInfo/VersionInfo$initializer|",
    "called": "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+method:///java/lang/Class/getPackage()|",
      "|java+method:///java/lang/Package/getAnnotation(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Class/getPackage()|",
      "|java+method:///java/lang/Package/getAnnotation(java.lang.Class)|"
    ],
    "affectedLib": "org.slf4j:slf4j-api:1.7.2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.apache.flume:flume-ng-core:1.2.0",
    "coordinatesV2": "org.apache.flume:flume-ng-core:1.3.0",
    "caller": "|java+method:///org/apache/flume/source/AvroSource/start()|",
    "called": "|java+constructor:///org/jboss/netty/channel/socket/nio/NioServerSocketChannelFactory/NioServerSocketChannelFactory(java.util.concurrent.Executor,java.util.concurrent.Executor)|",
    "v1Body": [
      "|java+method:///org/apache/flume/source/AbstractSource/start()|",
      "|java+constructor:///java/net/InetSocketAddress/InetSocketAddress(java.lang.String,int)|",
      "|java+method:///org/apache/avro/ipc/Server/start()|",
      "|java+constructor:///org/apache/avro/ipc/NettyServer/NettyServer(org.apache.avro.ipc.Responder,java.net.InetSocketAddress)|",
      "|java+constructor:///org/jboss/netty/channel/socket/nio/NioServerSocketChannelFactory/NioServerSocketChannelFactory(java.util.concurrent.Executor,java.util.concurrent.Executor)|",
      "|java+constructor:///org/apache/avro/ipc/specific/SpecificResponder/SpecificResponder(java.lang.Class,java.lang.Object)|",
      "|java+constructor:///org/apache/avro/ipc/NettyServer/NettyServer(org.apache.avro.ipc.Responder,java.net.InetSocketAddress,org.jboss.netty.channel.ChannelFactory)|",
      "|java+method:///java/util/concurrent/Executors/newCachedThreadPool()|",
      "|java+method:///org/apache/flume/instrumentation/SourceCounter/start()|",
      "|java+method:///org/apache/flume/source/AvroSource/getName()|",
      "|java+method:///java/util/concurrent/Executors/newFixedThreadPool(int)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/flume/source/AbstractSource/start()|",
      "|java+constructor:///java/net/InetSocketAddress/InetSocketAddress(java.lang.String,int)|",
      "|java+method:///org/apache/avro/ipc/Server/start()|",
      "|java+method:///java/util/concurrent/Executors/newSingleThreadScheduledExecutor()|",
      "|java+constructor:///org/apache/avro/ipc/NettyServer/NettyServer(org.apache.avro.ipc.Responder,java.net.InetSocketAddress)|",
      "|java+constructor:///org/jboss/netty/channel/socket/nio/NioServerSocketChannelFactory/NioServerSocketChannelFactory(java.util.concurrent.Executor,java.util.concurrent.Executor)|",
      "|java+constructor:///org/apache/avro/ipc/specific/SpecificResponder/SpecificResponder(java.lang.Class,java.lang.Object)|",
      "|java+constructor:///org/apache/avro/ipc/NettyServer/NettyServer(org.apache.avro.ipc.Responder,java.net.InetSocketAddress,org.jboss.netty.channel.ChannelFactory)|",
      "|java+constructor:///org/apache/flume/source/AvroSource$1/AvroSource$1(org.apache.flume.source.AvroSource,org.apache.avro.ipc.NettyServer)|",
      "|java+method:///org/apache/flume/instrumentation/SourceCounter/start()|",
      "|java+method:///org/apache/flume/source/AvroSource/getName()|",
      "|java+method:///java/util/concurrent/Executors/newFixedThreadPool(int)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/concurrent/Executors/newCachedThreadPool()|",
      "|java+method:///java/util/concurrent/ScheduledExecutorService/scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)|"
    ],
    "affectedLib": "io.netty:netty:3.4.0.Final",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.flume:flume-ng-core:1.2.0",
    "coordinatesV2": "org.apache.flume:flume-ng-core:1.3.0",
    "caller": "|java+method:///org/apache/flume/source/AvroSource/start()|",
    "called": "|java+constructor:///org/apache/avro/ipc/specific/SpecificResponder/SpecificResponder(java.lang.Class,java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/apache/flume/source/AbstractSource/start()|",
      "|java+constructor:///java/net/InetSocketAddress/InetSocketAddress(java.lang.String,int)|",
      "|java+method:///org/apache/avro/ipc/Server/start()|",
      "|java+constructor:///org/apache/avro/ipc/NettyServer/NettyServer(org.apache.avro.ipc.Responder,java.net.InetSocketAddress)|",
      "|java+constructor:///org/jboss/netty/channel/socket/nio/NioServerSocketChannelFactory/NioServerSocketChannelFactory(java.util.concurrent.Executor,java.util.concurrent.Executor)|",
      "|java+constructor:///org/apache/avro/ipc/specific/SpecificResponder/SpecificResponder(java.lang.Class,java.lang.Object)|",
      "|java+constructor:///org/apache/avro/ipc/NettyServer/NettyServer(org.apache.avro.ipc.Responder,java.net.InetSocketAddress,org.jboss.netty.channel.ChannelFactory)|",
      "|java+method:///java/util/concurrent/Executors/newCachedThreadPool()|",
      "|java+method:///org/apache/flume/instrumentation/SourceCounter/start()|",
      "|java+method:///org/apache/flume/source/AvroSource/getName()|",
      "|java+method:///java/util/concurrent/Executors/newFixedThreadPool(int)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/flume/source/AbstractSource/start()|",
      "|java+constructor:///java/net/InetSocketAddress/InetSocketAddress(java.lang.String,int)|",
      "|java+method:///org/apache/avro/ipc/Server/start()|",
      "|java+method:///java/util/concurrent/Executors/newSingleThreadScheduledExecutor()|",
      "|java+constructor:///org/apache/avro/ipc/NettyServer/NettyServer(org.apache.avro.ipc.Responder,java.net.InetSocketAddress)|",
      "|java+constructor:///org/jboss/netty/channel/socket/nio/NioServerSocketChannelFactory/NioServerSocketChannelFactory(java.util.concurrent.Executor,java.util.concurrent.Executor)|",
      "|java+constructor:///org/apache/avro/ipc/specific/SpecificResponder/SpecificResponder(java.lang.Class,java.lang.Object)|",
      "|java+constructor:///org/apache/avro/ipc/NettyServer/NettyServer(org.apache.avro.ipc.Responder,java.net.InetSocketAddress,org.jboss.netty.channel.ChannelFactory)|",
      "|java+constructor:///org/apache/flume/source/AvroSource$1/AvroSource$1(org.apache.flume.source.AvroSource,org.apache.avro.ipc.NettyServer)|",
      "|java+method:///org/apache/flume/instrumentation/SourceCounter/start()|",
      "|java+method:///org/apache/flume/source/AvroSource/getName()|",
      "|java+method:///java/util/concurrent/Executors/newFixedThreadPool(int)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/concurrent/Executors/newCachedThreadPool()|",
      "|java+method:///java/util/concurrent/ScheduledExecutorService/scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)|"
    ],
    "affectedLib": "org.apache.avro:avro-ipc:1.7.2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.flume:flume-ng-core:1.2.0",
    "coordinatesV2": "org.apache.flume:flume-ng-core:1.3.0",
    "caller": "|java+method:///org/apache/flume/channel/ChannelProcessor/configureInterceptors(org.apache.flume.Context)|",
    "called": "|java+method:///org/apache/flume/Context/getString(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/flume/interceptor/InterceptorChain/setInterceptors(java.util.List)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+constructor:///org/apache/flume/Context/Context(java.util.Map)|",
      "|java+method:///org/apache/flume/interceptor/InterceptorBuilderFactory/newInstance(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/google/common/collect/Lists/newLinkedList()|",
      "|java+method:///org/apache/flume/Context/getString(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/flume/interceptor/Interceptor$Builder/build()|",
      "|java+constructor:///org/apache/flume/FlumeException/FlumeException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///org/apache/flume/interceptor/InterceptorBuilderFactory/InterceptorBuilderFactory()|",
      "|java+method:///org/apache/flume/Context/getSubProperties(java.lang.String)|",
      "|java+method:///org/apache/flume/interceptor/Interceptor$Builder/configure(org.apache.flume.Context)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/flume/Context/getString(java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/flume/interceptor/InterceptorChain/setInterceptors(java.util.List)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+constructor:///org/apache/flume/Context/Context(java.util.Map)|",
      "|java+method:///org/apache/flume/interceptor/InterceptorBuilderFactory/newInstance(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/google/common/collect/Lists/newLinkedList()|",
      "|java+method:///org/apache/flume/Context/getString(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/flume/FlumeException/FlumeException(java.lang.String)|",
      "|java+method:///org/apache/flume/interceptor/Interceptor$Builder/build()|",
      "|java+constructor:///org/apache/flume/FlumeException/FlumeException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///org/apache/flume/interceptor/InterceptorBuilderFactory/InterceptorBuilderFactory()|",
      "|java+method:///org/apache/flume/Context/getSubProperties(java.lang.String)|",
      "|java+method:///org/apache/flume/interceptor/Interceptor$Builder/configure(org.apache.flume.Context)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/flume/Context/getString(java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "org.apache.flume:flume-ng-configuration:1.3.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.flume:flume-ng-core:1.2.0",
    "coordinatesV2": "org.apache.flume:flume-ng-core:1.3.0",
    "caller": "|java+method:///org/apache/flume/source/NetcatSource/configure(org.apache.flume.Context)|",
    "called": "|java+method:///org/apache/flume/Context/getString(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/flume/conf/Configurables/ensureRequiredNonNull(org.apache.flume.Context,java.lang.String%5B%5D)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/flume/Context/getInteger(java.lang.String)|",
      "|java+method:///org/apache/flume/Context/getString(java.lang.String)|",
      "|java+method:///org/apache/flume/Context/getInteger(java.lang.String,java.lang.Integer)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/flume/conf/Configurables/ensureRequiredNonNull(org.apache.flume.Context,java.lang.String%5B%5D)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/flume/Context/getInteger(java.lang.String)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/apache/flume/Context/getString(java.lang.String)|",
      "|java+method:///org/apache/flume/Context/getInteger(java.lang.String,java.lang.Integer)|",
      "|java+method:///org/apache/flume/Context/getBoolean(java.lang.String,java.lang.Boolean)|"
    ],
    "affectedLib": "org.apache.flume:flume-ng-configuration:1.3.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.flume:flume-ng-core:1.2.0",
    "coordinatesV2": "org.apache.flume:flume-ng-core:1.3.0",
    "caller": "|java+method:///org/apache/flume/source/ExecSource/configure(org.apache.flume.Context)|",
    "called": "|java+method:///org/apache/flume/Context/getLong(java.lang.String,java.lang.Long)|",
    "v1Body": [
      "|java+method:///org/apache/flume/Context/getLong(java.lang.String,java.lang.Long)|",
      "|java+method:///com/google/common/base/Preconditions/checkState(boolean,java.lang.Object)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/apache/flume/Context/getBoolean(java.lang.String,java.lang.Boolean)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/apache/flume/Context/getString(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/flume/Context/getLong(java.lang.String,java.lang.Long)|",
      "|java+method:///com/google/common/base/Preconditions/checkState(boolean,java.lang.Object)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/apache/flume/Context/getString(java.lang.String)|",
      "|java+method:///org/apache/flume/Context/getInteger(java.lang.String,java.lang.Integer)|",
      "|java+method:///org/apache/flume/Context/getBoolean(java.lang.String,java.lang.Boolean)|"
    ],
    "affectedLib": "org.apache.flume:flume-ng-configuration:1.3.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.flume:flume-ng-core:1.2.0",
    "coordinatesV2": "org.apache.flume:flume-ng-core:1.3.0",
    "caller": "|java+method:///org/apache/flume/sink/NullSink/configure(org.apache.flume.Context)|",
    "called": "|java+method:///org/apache/flume/Context/getInteger(java.lang.String,java.lang.Integer)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/flume/sink/NullSink/getName()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/flume/Context/getInteger(java.lang.String,java.lang.Integer)|",
      "|java+method:///java/lang/String/valueOf(int)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/flume/sink/NullSink/getName()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/flume/Context/getInteger(java.lang.String,java.lang.Integer)|",
      "|java+method:///java/lang/String/valueOf(int)|"
    ],
    "affectedLib": "org.apache.flume:flume-ng-configuration:1.3.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.flume:flume-ng-core:1.2.0",
    "coordinatesV2": "org.apache.flume:flume-ng-core:1.3.0",
    "caller": "|java+method:///org/apache/flume/sink/RollingFileSink/configure(org.apache.flume.Context)|",
    "called": "|java+method:///org/apache/flume/Context/getString(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+constructor:///org/apache/flume/Context/Context(java.util.Map)|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/flume/Context/getString(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/flume/Context/getString(java.lang.String)|",
      "|java+method:///org/apache/flume/Context/getSubProperties(java.lang.String)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/flume/instrumentation/SinkCounter/SinkCounter(java.lang.String)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/flume/sink/RollingFileSink/getName()|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+constructor:///org/apache/flume/Context/Context(java.util.Map)|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/flume/Context/getString(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/flume/Context/getString(java.lang.String)|",
      "|java+method:///org/apache/flume/Context/getInteger(java.lang.String,java.lang.Integer)|",
      "|java+method:///org/apache/flume/Context/getSubProperties(java.lang.String)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.flume:flume-ng-configuration:1.3.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.flume:flume-ng-core:1.2.0",
    "coordinatesV2": "org.apache.flume:flume-ng-core:1.3.0",
    "caller": "|java+method:///org/apache/flume/channel/MultiplexingChannelSelector/configure(org.apache.flume.Context)|",
    "called": "|java+method:///org/apache/flume/Context/getString(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/flume/channel/MultiplexingChannelSelector/getChannelListFromNames(java.lang.String,java.util.Map)|",
      "|java+constructor:///org/apache/flume/FlumeException/FlumeException(java.lang.String)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/flume/Channel/getName()|",
      "|java+method:///org/apache/flume/Context/getSubProperties(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/flume/Context/getString(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/flume/Context/getString(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/flume/channel/MultiplexingChannelSelector/getAllChannels()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/Map/keySet()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/flume/channel/MultiplexingChannelSelector/getChannelListFromNames(java.lang.String,java.util.Map)|",
      "|java+constructor:///org/apache/flume/FlumeException/FlumeException(java.lang.String)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/flume/Channel/getName()|",
      "|java+method:///org/apache/flume/Context/getSubProperties(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/flume/Context/getString(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/List/contains(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/flume/channel/MultiplexingChannelSelector/getAllChannels()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///java/util/List/remove(java.lang.Object)|",
      "|java+method:///org/apache/flume/Context/getString(java.lang.String)|"
    ],
    "affectedLib": "org.apache.flume:flume-ng-configuration:1.3.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.flume:flume-ng-core:1.2.0",
    "coordinatesV2": "org.apache.flume:flume-ng-core:1.3.0",
    "caller": "|java+method:///org/apache/flume/sink/LoadBalancingSinkProcessor/configure(org.apache.flume.Context)|",
    "called": "|java+constructor:///org/apache/flume/Context/Context(java.util.Map)|",
    "v1Body": [
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///com/google/common/base/Preconditions/checkState(boolean,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/flume/Context/getSubProperties(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/flume/Context/getString(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+constructor:///org/apache/flume/Context/Context(java.util.Map)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+constructor:///org/apache/flume/sink/LoadBalancingSinkProcessor$RoundRobinSinkSelector/LoadBalancingSinkProcessor$RoundRobinSinkSelector(org.apache.flume.sink.LoadBalancingSinkProcessor$1)|",
      "|java+method:///org/apache/flume/sink/LoadBalancingSinkProcessor/getSinks()|",
      "|java+method:///org/apache/flume/sink/LoadBalancingSinkProcessor$SinkSelector/configure(org.apache.flume.Context)|",
      "|java+constructor:///org/apache/flume/FlumeException/FlumeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/flume/sink/LoadBalancingSinkProcessor$SinkSelector/setSinks(java.util.List)|",
      "|java+constructor:///org/apache/flume/sink/LoadBalancingSinkProcessor$RandomOrderSinkSelector/LoadBalancingSinkProcessor$RandomOrderSinkSelector(org.apache.flume.sink.LoadBalancingSinkProcessor$1)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///com/google/common/base/Preconditions/checkState(boolean,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/flume/sink/LoadBalancingSinkProcessor$RoundRobinSinkSelector/LoadBalancingSinkProcessor$RoundRobinSinkSelector(boolean)|",
      "|java+method:///org/apache/flume/sink/LoadBalancingSinkProcessor/getSinks()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/flume/Context/getSubProperties(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/apache/flume/Context/getString(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/flume/sink/LoadBalancingSinkProcessor$RandomOrderSinkSelector/LoadBalancingSinkProcessor$RandomOrderSinkSelector(boolean)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/flume/sink/LoadBalancingSinkProcessor$SinkSelector/setSinks(java.util.List)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+constructor:///org/apache/flume/Context/Context(java.util.Map)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///org/apache/flume/sink/LoadBalancingSinkProcessor$SinkSelector/configure(org.apache.flume.Context)|",
      "|java+constructor:///org/apache/flume/FlumeException/FlumeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/flume/Context/getBoolean(java.lang.String,java.lang.Boolean)|"
    ],
    "affectedLib": "org.apache.flume:flume-ng-configuration:1.3.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.flume:flume-ng-core:1.2.0",
    "coordinatesV2": "org.apache.flume:flume-ng-core:1.3.0",
    "caller": "|java+method:///org/apache/flume/channel/PseudoTxnMemoryChannel/configure(org.apache.flume.Context)|",
    "called": "|java+method:///org/apache/flume/Context/getInteger(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///java/util/concurrent/ArrayBlockingQueue/ArrayBlockingQueue(int)|",
      "|java+method:///org/apache/flume/Context/getInteger(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///org/apache/flume/instrumentation/ChannelCounter/ChannelCounter(java.lang.String)|",
      "|java+constructor:///java/util/concurrent/ArrayBlockingQueue/ArrayBlockingQueue(int)|",
      "|java+method:///org/apache/flume/channel/PseudoTxnMemoryChannel/getName()|",
      "|java+method:///org/apache/flume/Context/getInteger(java.lang.String)|"
    ],
    "affectedLib": "org.apache.flume:flume-ng-configuration:1.3.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.flume:flume-ng-core:1.2.0",
    "coordinatesV2": "org.apache.flume:flume-ng-core:1.3.0",
    "caller": "|java+method:///org/apache/flume/channel/MemoryChannel/configure(org.apache.flume.Context)|",
    "called": "|java+method:///org/apache/flume/Context/getLong(java.lang.String,java.lang.Long)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/flume/channel/MemoryChannel/getName()|",
      "|java+constructor:///java/util/concurrent/LinkedBlockingDeque/LinkedBlockingDeque(int)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/flume/channel/MemoryChannel/resizeQueue(int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/flume/Context/getString(java.lang.String)|",
      "|java+constructor:///java/util/concurrent/Semaphore/Semaphore(int)|",
      "|java+method:///com/google/common/base/Preconditions/checkState(boolean)|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///java/lang/Thread/interrupt()|",
      "|java+constructor:///org/apache/flume/instrumentation/ChannelCounter/ChannelCounter(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/flume/channel/MemoryChannel/getName()|",
      "|java+constructor:///java/util/concurrent/LinkedBlockingDeque/LinkedBlockingDeque(int)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/apache/flume/channel/MemoryChannel/resizeQueue(int)|",
      "|java+method:///java/util/concurrent/Semaphore/release(int)|",
      "|java+method:///org/apache/flume/Context/getInteger(java.lang.String,java.lang.Integer)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/flume/Context/getLong(java.lang.String,java.lang.Long)|",
      "|java+constructor:///java/util/concurrent/Semaphore/Semaphore(int)|",
      "|java+method:///com/google/common/base/Preconditions/checkState(boolean)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///java/util/concurrent/Semaphore/tryAcquire(int,long,java.util.concurrent.TimeUnit)|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///java/lang/Thread/interrupt()|",
      "|java+constructor:///org/apache/flume/instrumentation/ChannelCounter/ChannelCounter(java.lang.String)|"
    ],
    "affectedLib": "org.apache.flume:flume-ng-configuration:1.3.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.flume:flume-ng-core:1.2.0",
    "coordinatesV2": "org.apache.flume:flume-ng-core:1.3.0",
    "caller": "|java+method:///org/apache/flume/source/StressSource/configure(org.apache.flume.Context)|",
    "called": "|java+method:///org/apache/flume/Context/getLong(java.lang.String,java.lang.Long)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/util/Arrays/fill(byte%5B%5D,byte)|",
      "|java+method:///org/apache/flume/event/EventBuilder/withBody(byte%5B%5D)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/flume/Context/getInteger(java.lang.String,java.lang.Integer)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/flume/Context/getInteger(java.lang.String,java.lang.Integer)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/flume/Context/getLong(java.lang.String,java.lang.Long)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/apache/flume/source/StressSource/prepEventData(int)|"
    ],
    "affectedLib": "org.apache.flume:flume-ng-configuration:1.3.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.flume:flume-ng-core:1.2.0",
    "coordinatesV2": "org.apache.flume:flume-ng-core:1.3.0",
    "caller": "|java+method:///org/apache/flume/source/NetcatSource$NetcatSocketHandler/processEvents(java.nio.CharBuffer,java.io.Writer)|",
    "called": "|java+method:///org/apache/flume/event/EventBuilder/withBody(byte%5B%5D)|",
    "v1Body": [
      "|java+method:///java/nio/CharBuffer/position(int)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/nio/CharBuffer/limit()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/nio/ByteBuffer/get(byte%5B%5D)|",
      "|java+method:///java/nio/charset/Charset/encode(java.nio.CharBuffer)|",
      "|java+method:///org/apache/flume/Source/getChannelProcessor()|",
      "|java+method:///org/apache/flume/ChannelException/getMessage()|",
      "|java+method:///java/nio/CharBuffer/limit(int)|",
      "|java+method:///org/apache/flume/CounterGroup/incrementAndGet(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/flume/event/EventBuilder/withBody(byte%5B%5D)|",
      "|java+method:///java/nio/ByteBuffer/remaining()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/nio/CharBuffer/position()|",
      "|java+method:///java/io/Writer/write(java.lang.String)|",
      "|java+method:///java/nio/CharBuffer/get(int)|",
      "|java+method:///org/apache/flume/source/NetcatSource/access$500()|",
      "|java+method:///java/io/Writer/flush()|",
      "|java+method:///org/apache/flume/channel/ChannelProcessor/processEvent(org.apache.flume.Event)|"
    ],
    "v2Body": [
      "|java+method:///java/nio/CharBuffer/position(int)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/nio/CharBuffer/limit()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/nio/ByteBuffer/get(byte%5B%5D)|",
      "|java+method:///java/nio/charset/Charset/encode(java.nio.CharBuffer)|",
      "|java+method:///org/apache/flume/Source/getChannelProcessor()|",
      "|java+method:///org/apache/flume/ChannelException/getMessage()|",
      "|java+method:///java/nio/CharBuffer/limit(int)|",
      "|java+method:///java/nio/CharBuffer/get(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/flume/event/EventBuilder/withBody(byte%5B%5D)|",
      "|java+method:///java/nio/ByteBuffer/remaining()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/nio/CharBuffer/position()|",
      "|java+method:///java/io/Writer/write(java.lang.String)|",
      "|java+method:///org/apache/flume/CounterGroup/incrementAndGet(java.lang.String)|",
      "|java+method:///org/apache/flume/source/NetcatSource/access$600()|",
      "|java+method:///java/io/Writer/flush()|",
      "|java+method:///org/apache/flume/channel/ChannelProcessor/processEvent(org.apache.flume.Event)|"
    ],
    "affectedLib": "org.apache.flume:flume-ng-sdk:1.3.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.flume:flume-ng-core:1.2.0",
    "coordinatesV2": "org.apache.flume:flume-ng-core:1.3.0",
    "caller": "|java+method:///org/apache/flume/channel/ChannelProcessor/configureInterceptors(org.apache.flume.Context)|",
    "called": "|java+constructor:///org/apache/flume/FlumeException/FlumeException(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/flume/interceptor/InterceptorChain/setInterceptors(java.util.List)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+constructor:///org/apache/flume/Context/Context(java.util.Map)|",
      "|java+method:///org/apache/flume/interceptor/InterceptorBuilderFactory/newInstance(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/google/common/collect/Lists/newLinkedList()|",
      "|java+method:///org/apache/flume/Context/getString(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/flume/interceptor/Interceptor$Builder/build()|",
      "|java+constructor:///org/apache/flume/FlumeException/FlumeException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///org/apache/flume/interceptor/InterceptorBuilderFactory/InterceptorBuilderFactory()|",
      "|java+method:///org/apache/flume/Context/getSubProperties(java.lang.String)|",
      "|java+method:///org/apache/flume/interceptor/Interceptor$Builder/configure(org.apache.flume.Context)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/flume/Context/getString(java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/flume/interceptor/InterceptorChain/setInterceptors(java.util.List)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+constructor:///org/apache/flume/Context/Context(java.util.Map)|",
      "|java+method:///org/apache/flume/interceptor/InterceptorBuilderFactory/newInstance(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/google/common/collect/Lists/newLinkedList()|",
      "|java+method:///org/apache/flume/Context/getString(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/flume/FlumeException/FlumeException(java.lang.String)|",
      "|java+method:///org/apache/flume/interceptor/Interceptor$Builder/build()|",
      "|java+constructor:///org/apache/flume/FlumeException/FlumeException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///org/apache/flume/interceptor/InterceptorBuilderFactory/InterceptorBuilderFactory()|",
      "|java+method:///org/apache/flume/Context/getSubProperties(java.lang.String)|",
      "|java+method:///org/apache/flume/interceptor/Interceptor$Builder/configure(org.apache.flume.Context)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/flume/Context/getString(java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "org.apache.flume:flume-ng-sdk:1.3.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.flume:flume-ng-core:1.2.0",
    "coordinatesV2": "org.apache.flume:flume-ng-core:1.3.0",
    "caller": "|java+method:///org/apache/flume/sink/RollingFileSink/process()|",
    "called": "|java+constructor:///org/apache/flume/EventDeliveryException/EventDeliveryException(java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/apache/flume/Transaction/commit()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/flume/formatter/output/PathManager/getCurrentFile()|",
      "|java+method:///java/io/OutputStream/flush()|",
      "|java+method:///org/apache/flume/Channel/getTransaction()|",
      "|java+method:///org/apache/flume/Transaction/rollback()|",
      "|java+method:///org/apache/flume/serialization/EventSerializer/afterCreate()|",
      "|java+method:///org/apache/flume/serialization/EventSerializer/beforeClose()|",
      "|java+constructor:///java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/flume/serialization/EventSerializer/write(org.apache.flume.Event)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/OutputStream/close()|",
      "|java+method:///org/apache/flume/sink/RollingFileSink/getChannel()|",
      "|java+method:///org/apache/flume/Transaction/close()|",
      "|java+method:///org/apache/flume/serialization/EventSerializerFactory/getInstance(java.lang.String,org.apache.flume.Context,java.io.OutputStream)|",
      "|java+method:///org/apache/flume/formatter/output/PathManager/rotate()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+constructor:///org/apache/flume/EventDeliveryException/EventDeliveryException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/flume/Channel/take()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/flume/Transaction/begin()|",
      "|java+method:///org/apache/flume/serialization/EventSerializer/flush()|",
      "|java+constructor:///java/io/FileOutputStream/FileOutputStream(java.io.File)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/flume/Transaction/commit()|",
      "|java+method:///org/apache/flume/instrumentation/SinkCounter/incrementEventDrainAttemptCount()|",
      "|java+method:///org/apache/flume/instrumentation/SinkCounter/incrementConnectionFailedCount()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/flume/instrumentation/SinkCounter/incrementConnectionCreatedCount()|",
      "|java+method:///org/apache/flume/formatter/output/PathManager/getCurrentFile()|",
      "|java+method:///java/io/OutputStream/flush()|",
      "|java+method:///org/apache/flume/Channel/getTransaction()|",
      "|java+method:///org/apache/flume/Transaction/rollback()|",
      "|java+method:///org/apache/flume/serialization/EventSerializer/afterCreate()|",
      "|java+method:///org/apache/flume/serialization/EventSerializer/beforeClose()|",
      "|java+method:///org/apache/flume/instrumentation/SinkCounter/incrementConnectionClosedCount()|",
      "|java+constructor:///java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/flume/serialization/EventSerializer/write(org.apache.flume.Event)|",
      "|java+method:///java/io/OutputStream/close()|",
      "|java+method:///org/apache/flume/sink/RollingFileSink/getChannel()|",
      "|java+method:///org/apache/flume/Transaction/close()|",
      "|java+method:///org/apache/flume/serialization/EventSerializerFactory/getInstance(java.lang.String,org.apache.flume.Context,java.io.OutputStream)|",
      "|java+method:///org/apache/flume/formatter/output/PathManager/rotate()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+constructor:///org/apache/flume/EventDeliveryException/EventDeliveryException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/flume/Channel/take()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/flume/Transaction/begin()|",
      "|java+method:///org/apache/flume/serialization/EventSerializer/flush()|",
      "|java+constructor:///java/io/FileOutputStream/FileOutputStream(java.io.File)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/flume/instrumentation/SinkCounter/addToEventDrainSuccessCount(long)|"
    ],
    "affectedLib": "org.apache.flume:flume-ng-sdk:1.3.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.flume:flume-ng-core:1.2.0",
    "coordinatesV2": "org.apache.flume:flume-ng-core:1.3.0",
    "caller": "|java+method:///org/apache/flume/serialization/EventSerializerFactory/getInstance(java.lang.String,org.apache.flume.Context,java.io.OutputStream)|",
    "called": "|java+constructor:///org/apache/flume/FlumeException/FlumeException(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/flume/serialization/EventSerializer$Builder/build(org.apache.flume.Context,java.io.OutputStream)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/flume/serialization/EventSerializerType/valueOf(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///java/lang/String/toUpperCase()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/flume/serialization/EventSerializerType/getBuilderClass()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/flume/serialization/EventSerializer$Builder/build(org.apache.flume.Context,java.io.OutputStream)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/flume/serialization/EventSerializerType/valueOf(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///java/lang/String/toUpperCase()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/flume/serialization/EventSerializerType/getBuilderClass()|",
      "|java+constructor:///org/apache/flume/FlumeException/FlumeException(java.lang.String)|",
      "|java+constructor:///org/apache/flume/FlumeException/FlumeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///org/apache/flume/FlumeException/FlumeException(java.lang.Throwable)|",
      "|java+method:///com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.flume:flume-ng-sdk:1.3.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.flume:flume-ng-core:1.2.0",
    "coordinatesV2": "org.apache.flume:flume-ng-core:1.3.0",
    "caller": "|java+method:///org/apache/flume/source/ExecSource$ExecRunnable/run()|",
    "called": "|java+method:///org/apache/flume/event/EventBuilder/withBody(byte%5B%5D)|",
    "v1Body": [
      "|java+method:///java/lang/Process/getErrorStream()|",
      "|java+method:///java/io/BufferedReader/close()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/flume/event/EventBuilder/withBody(byte%5B%5D)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/flume/source/ExecSource$StderrReader/start()|",
      "|java+method:///org/apache/flume/source/ExecSource/access$000()|",
      "|java+method:///java/lang/String/getBytes()|",
      "|java+method:///java/lang/Process/getInputStream()|",
      "|java+method:///java/lang/Process/destroy()|",
      "|java+method:///java/lang/Thread/sleep(long)|",
      "|java+method:///org/apache/flume/source/ExecSource$StderrReader/setDaemon(boolean)|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///java/lang/Thread/interrupt()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/ProcessBuilder/start()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///java/io/InputStreamReader/InputStreamReader(java.io.InputStream)|",
      "|java+constructor:///java/io/BufferedReader/BufferedReader(java.io.Reader)|",
      "|java+method:///org/apache/flume/CounterGroup/incrementAndGet(java.lang.String)|",
      "|java+method:///java/io/BufferedReader/readLine()|",
      "|java+constructor:///java/lang/ProcessBuilder/ProcessBuilder(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/flume/source/ExecSource$StderrReader/setName(java.lang.String)|",
      "|java+method:///java/lang/Process/waitFor()|",
      "|java+constructor:///org/apache/flume/source/ExecSource$StderrReader/ExecSource$StderrReader(java.io.BufferedReader,boolean)|",
      "|java+method:///org/apache/flume/channel/ChannelProcessor/processEvent(org.apache.flume.Event)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/String/valueOf(int)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Process/getErrorStream()|",
      "|java+method:///java/io/BufferedReader/close()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/flume/event/EventBuilder/withBody(byte%5B%5D)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/flume/source/ExecSource/access$000()|",
      "|java+method:///java/lang/String/getBytes()|",
      "|java+method:///org/apache/flume/source/ExecSource$StderrReader/setName(java.lang.String)|",
      "|java+constructor:///org/apache/flume/source/ExecSource$StderrReader/ExecSource$StderrReader(java.io.BufferedReader,boolean)|",
      "|java+method:///java/lang/Process/getInputStream()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/Thread/sleep(long)|",
      "|java+method:///org/apache/flume/source/ExecSource$StderrReader/setDaemon(boolean)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///java/lang/Thread/interrupt()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/ProcessBuilder/start()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///java/io/InputStreamReader/InputStreamReader(java.io.InputStream)|",
      "|java+method:///java/util/List/clear()|",
      "|java+method:///org/apache/flume/source/ExecSource$StderrReader/start()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///java/io/BufferedReader/BufferedReader(java.io.Reader)|",
      "|java+method:///org/apache/flume/CounterGroup/incrementAndGet(java.lang.String)|",
      "|java+method:///java/io/BufferedReader/readLine()|",
      "|java+constructor:///java/lang/ProcessBuilder/ProcessBuilder(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/flume/source/ExecSource$ExecRunnable/kill()|",
      "|java+method:///org/apache/flume/channel/ChannelProcessor/processEventBatch(java.util.List)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/String/valueOf(int)|"
    ],
    "affectedLib": "org.apache.flume:flume-ng-sdk:1.3.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.flume:flume-ng-core:1.2.0",
    "coordinatesV2": "org.apache.flume:flume-ng-core:1.3.0",
    "caller": "|java+method:///org/apache/flume/source/NetcatSource/start()|",
    "called": "|java+constructor:///org/apache/flume/FlumeException/FlumeException(java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/apache/flume/source/NetcatSource$AcceptHandler/access$102(org.apache.flume.source.NetcatSource$AcceptHandler,java.util.concurrent.ExecutorService)|",
      "|java+constructor:///java/net/InetSocketAddress/InetSocketAddress(java.lang.String,int)|",
      "|java+method:///java/nio/channels/ServerSocketChannel/socket()|",
      "|java+method:///org/apache/flume/source/NetcatSource$AcceptHandler/access$402(org.apache.flume.source.NetcatSource$AcceptHandler,java.nio.channels.ServerSocketChannel)|",
      "|java+constructor:///org/apache/flume/source/NetcatSource$AcceptHandler/NetcatSource$AcceptHandler(int)|",
      "|java+method:///org/apache/flume/source/NetcatSource$AcceptHandler/access$202(org.apache.flume.source.NetcatSource$AcceptHandler,java.util.concurrent.atomic.AtomicBoolean)|",
      "|java+method:///com/google/common/util/concurrent/ThreadFactoryBuilder/setNameFormat(java.lang.String)|",
      "|java+method:///org/apache/flume/source/NetcatSource$AcceptHandler/access$302(org.apache.flume.source.NetcatSource$AcceptHandler,org.apache.flume.EventDrivenSource)|",
      "|java+method:///java/util/concurrent/Executors/newCachedThreadPool(java.util.concurrent.ThreadFactory)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/flume/CounterGroup/incrementAndGet(java.lang.String)|",
      "|java+method:///org/apache/flume/source/NetcatSource$AcceptHandler/access$002(org.apache.flume.source.NetcatSource$AcceptHandler,org.apache.flume.CounterGroup)|",
      "|java+method:///com/google/common/util/concurrent/ThreadFactoryBuilder/build()|",
      "|java+method:///java/nio/channels/ServerSocketChannel/open()|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/set(boolean)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/flume/source/AbstractSource/start()|",
      "|java+method:///java/lang/Thread/start()|",
      "|java+constructor:///com/google/common/util/concurrent/ThreadFactoryBuilder/ThreadFactoryBuilder()|",
      "|java+constructor:///java/lang/Thread/Thread(java.lang.Runnable)|",
      "|java+method:///java/net/ServerSocket/bind(java.net.SocketAddress)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/net/ServerSocket/setReuseAddress(boolean)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/flume/source/NetcatSource$AcceptHandler/access$102(org.apache.flume.source.NetcatSource$AcceptHandler,java.util.concurrent.ExecutorService)|",
      "|java+constructor:///java/net/InetSocketAddress/InetSocketAddress(java.lang.String,int)|",
      "|java+method:///java/nio/channels/ServerSocketChannel/socket()|",
      "|java+method:///org/apache/flume/source/NetcatSource$AcceptHandler/access$202(org.apache.flume.source.NetcatSource$AcceptHandler,java.util.concurrent.atomic.AtomicBoolean)|",
      "|java+method:///com/google/common/util/concurrent/ThreadFactoryBuilder/setNameFormat(java.lang.String)|",
      "|java+method:///java/util/concurrent/Executors/newCachedThreadPool(java.util.concurrent.ThreadFactory)|",
      "|java+method:///org/apache/flume/source/NetcatSource$AcceptHandler/access$302(org.apache.flume.source.NetcatSource$AcceptHandler,boolean)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///org/apache/flume/FlumeException/FlumeException(java.lang.Throwable)|",
      "|java+method:///org/apache/flume/CounterGroup/incrementAndGet(java.lang.String)|",
      "|java+method:///org/apache/flume/source/NetcatSource$AcceptHandler/access$002(org.apache.flume.source.NetcatSource$AcceptHandler,org.apache.flume.CounterGroup)|",
      "|java+method:///com/google/common/util/concurrent/ThreadFactoryBuilder/build()|",
      "|java+method:///java/nio/channels/ServerSocketChannel/open()|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/set(boolean)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/flume/source/AbstractSource/start()|",
      "|java+method:///org/apache/flume/source/NetcatSource$AcceptHandler/access$502(org.apache.flume.source.NetcatSource$AcceptHandler,java.nio.channels.ServerSocketChannel)|",
      "|java+constructor:///org/apache/flume/source/NetcatSource$AcceptHandler/NetcatSource$AcceptHandler(int)|",
      "|java+method:///java/lang/Thread/start()|",
      "|java+constructor:///com/google/common/util/concurrent/ThreadFactoryBuilder/ThreadFactoryBuilder()|",
      "|java+constructor:///java/lang/Thread/Thread(java.lang.Runnable)|",
      "|java+method:///java/net/ServerSocket/bind(java.net.SocketAddress)|",
      "|java+method:///org/apache/flume/source/NetcatSource$AcceptHandler/access$402(org.apache.flume.source.NetcatSource$AcceptHandler,org.apache.flume.EventDrivenSource)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/net/ServerSocket/setReuseAddress(boolean)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.flume:flume-ng-sdk:1.3.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.flume:flume-ng-core:1.2.0",
    "coordinatesV2": "org.apache.flume:flume-ng-core:1.3.0",
    "caller": "|java+method:///org/apache/flume/channel/MultiplexingChannelSelector/configure(org.apache.flume.Context)|",
    "called": "|java+constructor:///org/apache/flume/FlumeException/FlumeException(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/flume/channel/MultiplexingChannelSelector/getChannelListFromNames(java.lang.String,java.util.Map)|",
      "|java+constructor:///org/apache/flume/FlumeException/FlumeException(java.lang.String)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/flume/Channel/getName()|",
      "|java+method:///org/apache/flume/Context/getSubProperties(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/flume/Context/getString(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/flume/Context/getString(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/flume/channel/MultiplexingChannelSelector/getAllChannels()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/Map/keySet()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/flume/channel/MultiplexingChannelSelector/getChannelListFromNames(java.lang.String,java.util.Map)|",
      "|java+constructor:///org/apache/flume/FlumeException/FlumeException(java.lang.String)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/flume/Channel/getName()|",
      "|java+method:///org/apache/flume/Context/getSubProperties(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/flume/Context/getString(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/List/contains(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/flume/channel/MultiplexingChannelSelector/getAllChannels()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///java/util/List/remove(java.lang.Object)|",
      "|java+method:///org/apache/flume/Context/getString(java.lang.String)|"
    ],
    "affectedLib": "org.apache.flume:flume-ng-sdk:1.3.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.flume:flume-ng-core:1.2.0",
    "coordinatesV2": "org.apache.flume:flume-ng-core:1.3.0",
    "caller": "|java+method:///org/apache/flume/sink/LoadBalancingSinkProcessor/configure(org.apache.flume.Context)|",
    "called": "|java+constructor:///org/apache/flume/FlumeException/FlumeException(java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///com/google/common/base/Preconditions/checkState(boolean,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/flume/Context/getSubProperties(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/flume/Context/getString(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+constructor:///org/apache/flume/Context/Context(java.util.Map)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+constructor:///org/apache/flume/sink/LoadBalancingSinkProcessor$RoundRobinSinkSelector/LoadBalancingSinkProcessor$RoundRobinSinkSelector(org.apache.flume.sink.LoadBalancingSinkProcessor$1)|",
      "|java+method:///org/apache/flume/sink/LoadBalancingSinkProcessor/getSinks()|",
      "|java+method:///org/apache/flume/sink/LoadBalancingSinkProcessor$SinkSelector/configure(org.apache.flume.Context)|",
      "|java+constructor:///org/apache/flume/FlumeException/FlumeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/flume/sink/LoadBalancingSinkProcessor$SinkSelector/setSinks(java.util.List)|",
      "|java+constructor:///org/apache/flume/sink/LoadBalancingSinkProcessor$RandomOrderSinkSelector/LoadBalancingSinkProcessor$RandomOrderSinkSelector(org.apache.flume.sink.LoadBalancingSinkProcessor$1)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///com/google/common/base/Preconditions/checkState(boolean,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/flume/sink/LoadBalancingSinkProcessor$RoundRobinSinkSelector/LoadBalancingSinkProcessor$RoundRobinSinkSelector(boolean)|",
      "|java+method:///org/apache/flume/sink/LoadBalancingSinkProcessor/getSinks()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/flume/Context/getSubProperties(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/apache/flume/Context/getString(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/flume/sink/LoadBalancingSinkProcessor$RandomOrderSinkSelector/LoadBalancingSinkProcessor$RandomOrderSinkSelector(boolean)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/flume/sink/LoadBalancingSinkProcessor$SinkSelector/setSinks(java.util.List)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+constructor:///org/apache/flume/Context/Context(java.util.Map)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///org/apache/flume/sink/LoadBalancingSinkProcessor$SinkSelector/configure(org.apache.flume.Context)|",
      "|java+constructor:///org/apache/flume/FlumeException/FlumeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/flume/Context/getBoolean(java.lang.String,java.lang.Boolean)|"
    ],
    "affectedLib": "org.apache.flume:flume-ng-sdk:1.3.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.flume:flume-ng-core:1.2.0",
    "coordinatesV2": "org.apache.flume:flume-ng-core:1.3.0",
    "caller": "|java+method:///org/apache/flume/source/SequenceGeneratorSource/process()|",
    "called": "|java+method:///org/apache/flume/event/EventBuilder/withBody(byte%5B%5D)|",
    "v1Body": [
      "|java+method:///org/apache/flume/source/SequenceGeneratorSource/getChannelProcessor()|",
      "|java+method:///org/apache/flume/event/EventBuilder/withBody(byte%5B%5D)|",
      "|java+method:///org/apache/flume/CounterGroup/incrementAndGet(java.lang.String)|",
      "|java+method:///java/lang/String/getBytes()|",
      "|java+method:///java/lang/String/valueOf(long)|",
      "|java+method:///org/apache/flume/channel/ChannelProcessor/processEvent(org.apache.flume.Event)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/flume/source/SequenceGeneratorSource/getChannelProcessor()|",
      "|java+method:///org/apache/flume/event/EventBuilder/withBody(byte%5B%5D)|",
      "|java+method:///java/util/List/clear()|",
      "|java+method:///java/util/List/add(int,java.lang.Object)|",
      "|java+method:///java/lang/String/getBytes()|",
      "|java+method:///java/lang/String/valueOf(long)|",
      "|java+method:///org/apache/flume/channel/ChannelProcessor/processEvent(org.apache.flume.Event)|",
      "|java+method:///org/apache/flume/CounterGroup/incrementAndGet(java.lang.String)|",
      "|java+method:///org/apache/flume/channel/ChannelProcessor/processEventBatch(java.util.List)|"
    ],
    "affectedLib": "org.apache.flume:flume-ng-sdk:1.3.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.flume:flume-ng-core:1.2.0",
    "coordinatesV2": "org.apache.flume:flume-ng-core:1.3.0",
    "caller": "|java+method:///org/apache/flume/client/avro/AvroCLIClient/run()|",
    "called": "|java+method:///org/apache/flume/api/RpcClientFactory/getDefaultInstance(java.lang.String,java.lang.Integer,java.lang.Integer)|",
    "v1Body": [
      "|java+method:///java/io/BufferedReader/close()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/apache/flume/api/RpcClient/appendBatch(java.util.List)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/flume/client/avro/AvroCLIClient/setHeaders(org.apache.flume.Event)|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///org/apache/flume/api/RpcClient/getBatchSize()|",
      "|java+constructor:///java/io/InputStreamReader/InputStreamReader(java.io.InputStream)|",
      "|java+method:///java/util/List/clear()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///org/apache/flume/Event/getBody()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/flume/api/RpcClient/close()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///java/io/BufferedReader/BufferedReader(java.io.Reader)|",
      "|java+method:///java/io/BufferedReader/readLine()|",
      "|java+method:///org/apache/flume/api/RpcClientFactory/getDefaultInstance(java.lang.String,java.lang.Integer,java.lang.Integer)|",
      "|java+method:///java/nio/charset/Charset/forName(java.lang.String)|",
      "|java+method:///org/apache/flume/event/EventBuilder/withBody(java.lang.String,java.nio.charset.Charset)|",
      "|java+constructor:///java/io/FileReader/FileReader(java.io.File)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/apache/flume/api/RpcClient/appendBatch(java.util.List)|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+constructor:///java/io/InputStreamReader/InputStreamReader(java.io.InputStream)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/flume/client/avro/SpoolingFileLineReader/SpoolingFileLineReader(java.io.File,java.lang.String,int,int)|",
      "|java+method:///org/apache/flume/Event/getBody()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/flume/api/RpcClient/close()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/flume/client/avro/AvroCLIClient/setHeaders(org.apache.flume.Event)|",
      "|java+method:///org/apache/flume/client/avro/LineReader/close()|",
      "|java+method:///org/apache/flume/api/RpcClient/getBatchSize()|",
      "|java+method:///org/apache/flume/client/avro/LineReader/readLines(int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/google/common/collect/Lists/newLinkedList()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+constructor:///org/apache/flume/client/avro/BufferedLineReader/BufferedLineReader(java.io.Reader)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/flume/api/RpcClientFactory/getDefaultInstance(java.lang.String,java.lang.Integer,java.lang.Integer)|",
      "|java+method:///org/apache/flume/event/EventBuilder/withBody(java.lang.String,java.nio.charset.Charset)|",
      "|java+constructor:///java/io/FileReader/FileReader(java.io.File)|"
    ],
    "affectedLib": "org.apache.flume:flume-ng-sdk:1.3.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.flume:flume-ng-core:1.2.0",
    "coordinatesV2": "org.apache.flume:flume-ng-core:1.3.0",
    "caller": "|java+method:///org/apache/flume/sink/NullSink/process()|",
    "called": "|java+constructor:///org/apache/flume/EventDeliveryException/EventDeliveryException(java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/apache/flume/sink/NullSink/getChannel()|",
      "|java+method:///org/apache/flume/CounterGroup/addAndGet(java.lang.String,java.lang.Long)|",
      "|java+method:///org/apache/flume/Transaction/commit()|",
      "|java+method:///org/apache/flume/Transaction/close()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/flume/Channel/getTransaction()|",
      "|java+method:///org/apache/flume/Transaction/rollback()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/flume/CounterGroup/incrementAndGet(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Math/min(int,int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/flume/EventDeliveryException/EventDeliveryException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/flume/Channel/take()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/flume/Transaction/begin()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/flume/sink/NullSink/getChannel()|",
      "|java+method:///org/apache/flume/CounterGroup/addAndGet(java.lang.String,java.lang.Long)|",
      "|java+method:///org/apache/flume/Transaction/commit()|",
      "|java+method:///org/apache/flume/Transaction/close()|",
      "|java+method:///org/apache/flume/sink/NullSink/getName()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/flume/Channel/getTransaction()|",
      "|java+method:///org/apache/flume/Transaction/rollback()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/flume/CounterGroup/incrementAndGet(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Math/min(int,int)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/flume/EventDeliveryException/EventDeliveryException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/flume/Channel/take()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/flume/Transaction/begin()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/flume/CounterGroup/get(java.lang.String)|"
    ],
    "affectedLib": "org.apache.flume:flume-ng-sdk:1.3.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.flume:flume-ng-core:1.2.0",
    "coordinatesV2": "org.apache.flume:flume-ng-core:1.3.0",
    "caller": "|java+method:///org/apache/flume/sink/LoadBalancingSinkProcessor/process()|",
    "called": "|java+constructor:///org/apache/flume/EventDeliveryException/EventDeliveryException(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/flume/sink/LoadBalancingSinkProcessor$SinkSelector/createSinkIterator()|",
      "|java+constructor:///org/apache/flume/EventDeliveryException/EventDeliveryException(java.lang.String)|",
      "|java+method:///org/apache/flume/Sink/process()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/flume/sink/LoadBalancingSinkProcessor$SinkSelector/informSinkFailed(org.apache.flume.Sink)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/flume/sink/LoadBalancingSinkProcessor$SinkSelector/createSinkIterator()|",
      "|java+constructor:///org/apache/flume/EventDeliveryException/EventDeliveryException(java.lang.String)|",
      "|java+method:///org/apache/flume/Sink/process()|"
    ],
    "affectedLib": "org.apache.flume:flume-ng-sdk:1.3.0",
    "change": "UPDATED"
  }
]