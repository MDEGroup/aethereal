[
  {
    "coordinatesV1": "io.druid:druid-api:0.10.0",
    "coordinatesV2": "io.druid:druid-api:0.9.2",
    "caller": "|java+method:///io/druid/guice/LifecycleModule$2/start()|",
    "called": "|java+method:///com/metamx/common/lifecycle/Lifecycle/start()|",
    "v1Body": [
      "|java+method:///com/metamx/common/lifecycle/Lifecycle/start()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/druid/guice/KeyHolder/getKey()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///com/google/inject/Injector/getInstance(com.google.inject.Key)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/druid/guice/KeyHolder/getKey()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///com/google/inject/Injector/getInstance(com.google.inject.Key)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/druid/java/util/common/lifecycle/Lifecycle/start()|"
    ],
    "affectedLib": "com.metamx:java-util:0.27.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.10.0",
    "coordinatesV2": "io.druid:druid-api:0.9.2",
    "caller": "|java+method:///io/druid/timeline/DataSegmentUtils/parse(java.lang.String,java.lang.String)|",
    "called": "|java+method:///com/metamx/common/logger/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///org/joda/time/DateTime/getMillis()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///org/joda/time/format/ISODateTimeFormat/dateTime()|",
      "|java+method:///org/joda/time/format/DateTimeFormatter/parseDateTime(java.lang.String)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+constructor:///io/druid/timeline/DataSegmentUtils$SegmentIdentifierParts/DataSegmentUtils$SegmentIdentifierParts(java.lang.String,org.joda.time.Interval,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/metamx/common/logger/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/timeline/DataSegmentUtils/join(java.lang.Object%5B%5D,java.lang.String,int,int)|",
      "|java+constructor:///org/joda/time/Interval/Interval(long,long)|",
      "|java+method:///java/lang/String/substring(int)|"
    ],
    "v2Body": [
      "|java+method:///org/joda/time/DateTime/getMillis()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///org/joda/time/format/ISODateTimeFormat/dateTime()|",
      "|java+method:///org/joda/time/format/DateTimeFormatter/parseDateTime(java.lang.String)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///io/druid/timeline/DataSegmentUtils/join(java.lang.Object%5B%5D,java.lang.String,int,int)|",
      "|java+method:///io/druid/java/util/common/logger/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+constructor:///io/druid/timeline/DataSegmentUtils$SegmentIdentifierParts/DataSegmentUtils$SegmentIdentifierParts(java.lang.String,org.joda.time.Interval,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///org/joda/time/Interval/Interval(long,long)|",
      "|java+method:///java/lang/String/substring(int)|"
    ],
    "affectedLib": "com.metamx:java-util:0.27.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.10.0",
    "coordinatesV2": "io.druid:druid-api:0.9.2",
    "caller": "|java+method:///io/druid/data/input/impl/JSONParseSpec/makeParser()|",
    "called": "|java+constructor:///com/metamx/common/parsers/JSONPathParser/JSONPathParser(java.util.List,boolean,com.fasterxml.jackson.databind.ObjectMapper)|",
    "v1Body": [
      "|java+method:///io/druid/data/input/impl/JSONPathSpec/isUseFieldDiscovery()|",
      "|java+method:///io/druid/data/input/impl/JSONParseSpec/convertFieldSpecs(java.util.List)|",
      "|java+constructor:///com/metamx/common/parsers/JSONPathParser/JSONPathParser(java.util.List,boolean,com.fasterxml.jackson.databind.ObjectMapper)|",
      "|java+method:///io/druid/data/input/impl/JSONPathSpec/getFields()|"
    ],
    "v2Body": [
      "|java+method:///io/druid/data/input/impl/JSONPathSpec/isUseFieldDiscovery()|",
      "|java+method:///io/druid/data/input/impl/JSONParseSpec/convertFieldSpecs(java.util.List)|",
      "|java+constructor:///io/druid/java/util/common/parsers/JSONPathParser/JSONPathParser(java.util.List,boolean,com.fasterxml.jackson.databind.ObjectMapper)|",
      "|java+method:///io/druid/data/input/impl/JSONPathSpec/getFields()|"
    ],
    "affectedLib": "com.metamx:java-util:0.27.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.10.0",
    "coordinatesV2": "io.druid:druid-api:0.9.2",
    "caller": "|java+method:///io/druid/timeline/DataSegmentUtils/withInterval(java.lang.String,java.lang.String,org.joda.time.Interval)|",
    "called": "|java+method:///com/metamx/common/logger/Logger/warn(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///io/druid/timeline/DataSegmentUtils$SegmentIdentifierParts/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/metamx/common/logger/Logger/warn(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/timeline/DataSegmentUtils/parse(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/druid/timeline/DataSegmentUtils$SegmentIdentifierParts/withInterval(org.joda.time.Interval)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/timeline/DataSegmentUtils$SegmentIdentifierParts/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/druid/timeline/DataSegmentUtils$SegmentIdentifierParts/withInterval(org.joda.time.Interval)|",
      "|java+method:///io/druid/timeline/DataSegmentUtils/parse(java.lang.String,java.lang.String)|",
      "|java+method:///io/druid/java/util/common/logger/Logger/warn(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "com.metamx:java-util:0.27.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.10.0",
    "coordinatesV2": "io.druid:druid-api:0.9.2",
    "caller": "|java+method:///io/druid/utils/CompressionUtils/unzip(java.io.InputStream,java.io.File)|",
    "called": "|java+method:///com/metamx/common/CompressionUtils/unzip(java.io.InputStream,java.io.File)|",
    "v1Body": [
      "|java+method:///com/metamx/common/CompressionUtils/unzip(java.io.InputStream,java.io.File)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/java/util/common/CompressionUtils/unzip(java.io.InputStream,java.io.File)|"
    ],
    "affectedLib": "com.metamx:java-util:0.27.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.10.0",
    "coordinatesV2": "io.druid:druid-api:0.9.2",
    "caller": "|java+method:///io/druid/data/input/impl/CSVParseSpec/makeParser()|",
    "called": "|java+constructor:///com/metamx/common/parsers/CSVParser/CSVParser(com.google.common.base.Optional,java.lang.Iterable)|",
    "v1Body": [
      "|java+constructor:///com/metamx/common/parsers/CSVParser/CSVParser(com.google.common.base.Optional,java.lang.Iterable)|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/java/util/common/parsers/CSVParser/CSVParser(com.google.common.base.Optional,java.lang.Iterable)|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|"
    ],
    "affectedLib": "com.metamx:java-util:0.27.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.10.0",
    "coordinatesV2": "io.druid:druid-api:0.9.2",
    "caller": "|java+method:///io/druid/utils/CompressionUtils/zip(java.io.File,java.io.File)|",
    "called": "|java+method:///com/metamx/common/CompressionUtils/zip(java.io.File,java.io.File)|",
    "v1Body": [
      "|java+method:///com/metamx/common/CompressionUtils/zip(java.io.File,java.io.File)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/java/util/common/CompressionUtils/zip(java.io.File,java.io.File)|"
    ],
    "affectedLib": "com.metamx:java-util:0.27.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.10.0",
    "coordinatesV2": "io.druid:druid-api:0.9.2",
    "caller": "|java+method:///io/druid/utils/CompressionUtils/unzip(java.io.File,java.io.File)|",
    "called": "|java+method:///com/metamx/common/CompressionUtils/unzip(java.io.File,java.io.File)|",
    "v1Body": [
      "|java+method:///com/metamx/common/CompressionUtils/unzip(java.io.File,java.io.File)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/java/util/common/CompressionUtils/unzip(java.io.File,java.io.File)|"
    ],
    "affectedLib": "com.metamx:java-util:0.27.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.10.0",
    "coordinatesV2": "io.druid:druid-api:0.9.2",
    "caller": "|java+initializer:///io/druid/guice/JsonConfigurator/JsonConfigurator$initializer|",
    "called": "|java+constructor:///com/metamx/common/logger/Logger/Logger(java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///com/metamx/common/logger/Logger/Logger(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/java/util/common/logger/Logger/Logger(java.lang.Class)|"
    ],
    "affectedLib": "com.metamx:java-util:0.27.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.10.0",
    "coordinatesV2": "io.druid:druid-api:0.9.2",
    "caller": "|java+initializer:///io/druid/guice/LifecycleScope/LifecycleScope$initializer|",
    "called": "|java+constructor:///com/metamx/common/logger/Logger/Logger(java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///com/metamx/common/logger/Logger/Logger(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/java/util/common/logger/Logger/Logger(java.lang.Class)|"
    ],
    "affectedLib": "com.metamx:java-util:0.27.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.10.0",
    "coordinatesV2": "io.druid:druid-api:0.9.2",
    "caller": "|java+initializer:///io/druid/timeline/DataSegmentUtils/DataSegmentUtils$initializer|",
    "called": "|java+constructor:///com/metamx/common/logger/Logger/Logger(java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///com/metamx/common/logger/Logger/Logger(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/java/util/common/logger/Logger/Logger(java.lang.Class)|"
    ],
    "affectedLib": "com.metamx:java-util:0.27.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.10.0",
    "coordinatesV2": "io.druid:druid-api:0.9.2",
    "caller": "|java+method:///io/druid/data/input/impl/DelimitedParseSpec/makeParser()|",
    "called": "|java+constructor:///com/metamx/common/parsers/DelimitedParser/DelimitedParser(com.google.common.base.Optional,com.google.common.base.Optional)|",
    "v1Body": [
      "|java+method:///com/metamx/common/parsers/Parser/setFieldNames(java.lang.Iterable)|",
      "|java+constructor:///com/metamx/common/parsers/DelimitedParser/DelimitedParser(com.google.common.base.Optional,com.google.common.base.Optional)|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/java/util/common/parsers/DelimitedParser/DelimitedParser(com.google.common.base.Optional,com.google.common.base.Optional)|",
      "|java+method:///io/druid/java/util/common/parsers/Parser/setFieldNames(java.lang.Iterable)|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|"
    ],
    "affectedLib": "com.metamx:java-util:0.27.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.10.0",
    "coordinatesV2": "io.druid:druid-api:0.9.2",
    "caller": "|java+method:///io/druid/data/input/impl/StringInputRowParser/buildStringKeyMap(java.nio.ByteBuffer)|",
    "called": "|java+constructor:///com/metamx/common/parsers/ParseException/ParseException(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///java/nio/CharBuffer/remaining()|",
      "|java+method:///java/nio/charset/CharsetDecoder/onMalformedInput(java.nio.charset.CodingErrorAction)|",
      "|java+method:///java/nio/charset/Charset/newDecoder()|",
      "|java+method:///java/nio/CharBuffer/allocate(int)|",
      "|java+method:///java/nio/ByteBuffer/remaining()|",
      "|java+constructor:///com/metamx/common/parsers/ParseException/ParseException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/nio/CharBuffer/toString()|",
      "|java+method:///java/nio/charset/CoderResult/isUnderflow()|",
      "|java+method:///io/druid/data/input/impl/StringInputRowParser/parseString(java.lang.String)|",
      "|java+method:///java/nio/charset/CharsetDecoder/onUnmappableCharacter(java.nio.charset.CodingErrorAction)|",
      "|java+method:///java/nio/charset/CharsetDecoder/decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)|",
      "|java+method:///java/nio/CharBuffer/flip()|",
      "|java+method:///java/nio/CharBuffer/clear()|"
    ],
    "v2Body": [
      "|java+method:///java/nio/CharBuffer/remaining()|",
      "|java+method:///java/nio/charset/CharsetDecoder/onMalformedInput(java.nio.charset.CodingErrorAction)|",
      "|java+method:///java/nio/charset/Charset/newDecoder()|",
      "|java+method:///java/nio/ByteBuffer/remaining()|",
      "|java+method:///java/nio/CharBuffer/toString()|",
      "|java+method:///java/nio/charset/CoderResult/isUnderflow()|",
      "|java+method:///io/druid/data/input/impl/StringInputRowParser/parseString(java.lang.String)|",
      "|java+method:///java/nio/charset/CharsetDecoder/onUnmappableCharacter(java.nio.charset.CodingErrorAction)|",
      "|java+constructor:///io/druid/java/util/common/parsers/ParseException/ParseException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/nio/CharBuffer/allocate(int)|",
      "|java+method:///java/nio/charset/CharsetDecoder/decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)|",
      "|java+method:///java/nio/CharBuffer/flip()|",
      "|java+method:///java/nio/CharBuffer/clear()|"
    ],
    "affectedLib": "com.metamx:java-util:0.27.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.10.0",
    "coordinatesV2": "io.druid:druid-api:0.9.2",
    "caller": "|java+initializer:///io/druid/data/input/MapBasedRow/MapBasedRow$initializer|",
    "called": "|java+constructor:///com/metamx/common/logger/Logger/Logger(java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///io/druid/data/input/MapBasedRow$1/MapBasedRow$1()|",
      "|java+method:///java/util/regex/Pattern/compile(java.lang.String)|",
      "|java+constructor:///com/metamx/common/logger/Logger/Logger(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/data/input/MapBasedRow$1/MapBasedRow$1()|",
      "|java+method:///java/util/regex/Pattern/compile(java.lang.String)|",
      "|java+constructor:///io/druid/java/util/common/logger/Logger/Logger(java.lang.Class)|"
    ],
    "affectedLib": "com.metamx:java-util:0.27.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.10.0",
    "coordinatesV2": "io.druid:druid-api:0.9.2",
    "caller": "|java+initializer:///io/druid/utils/CompressionUtils/CompressionUtils$initializer|",
    "called": "|java+constructor:///com/metamx/common/logger/Logger/Logger(java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///com/metamx/common/logger/Logger/Logger(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/java/util/common/logger/Logger/Logger(java.lang.Class)|"
    ],
    "affectedLib": "com.metamx:java-util:0.27.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.10.0",
    "coordinatesV2": "io.druid:druid-api:0.9.2",
    "caller": "|java+method:///io/druid/data/input/MapBasedRow/getFloatMetric(java.lang.String)|",
    "called": "|java+constructor:///com/metamx/common/parsers/ParseException/ParseException(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///java/lang/Number/floatValue()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Float/valueOf(java.lang.String)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+constructor:///com/metamx/common/parsers/ParseException/ParseException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///com/metamx/common/parsers/ParseException/ParseException(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Float/floatValue()|",
      "|java+method:///java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Number/floatValue()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Float/valueOf(java.lang.String)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+constructor:///io/druid/java/util/common/parsers/ParseException/ParseException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/java/util/common/parsers/ParseException/ParseException(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Float/floatValue()|",
      "|java+method:///java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)|"
    ],
    "affectedLib": "com.metamx:java-util:0.27.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.10.0",
    "coordinatesV2": "io.druid:druid-api:0.9.2",
    "caller": "|java+constructor:///io/druid/guice/LifecycleModule$2/LifecycleModule$2(io.druid.guice.LifecycleModule,java.util.Set,com.google.inject.Injector)|",
    "called": "|java+constructor:///com/metamx/common/lifecycle/Lifecycle/Lifecycle()|",
    "v1Body": [
      "|java+constructor:///com/metamx/common/lifecycle/Lifecycle/Lifecycle()|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/java/util/common/lifecycle/Lifecycle/Lifecycle()|"
    ],
    "affectedLib": "com.metamx:java-util:0.27.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.10.0",
    "coordinatesV2": "io.druid:druid-api:0.9.2",
    "caller": "|java+method:///io/druid/data/input/impl/MapInputRowParser/parse(java.util.Map)|",
    "called": "|java+constructor:///com/metamx/common/parsers/ParseException/ParseException(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///io/druid/data/input/impl/TimestampSpec/extractTimestamp(java.util.Map)|",
      "|java+method:///org/joda/time/DateTime/getMillis()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Iterable)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+constructor:///java/lang/NullPointerException/NullPointerException(java.lang.String)|",
      "|java+method:///io/druid/data/input/impl/DimensionsSpec/getDimensionExclusions()|",
      "|java+method:///io/druid/data/input/impl/ParseSpec/getDimensionsSpec()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/druid/data/input/impl/DimensionsSpec/hasCustomDimensions()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/druid/data/input/impl/DimensionsSpec/getDimensionNames()|",
      "|java+method:///io/druid/data/input/impl/ParseSpec/getTimestampSpec()|",
      "|java+method:///java/lang/String/substring(int,int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///com/metamx/common/parsers/ParseException/ParseException(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/data/input/MapBasedInputRow/MapBasedInputRow(long,java.util.List,java.util.Map)|",
      "|java+method:///com/google/common/collect/Sets/difference(java.util.Set,java.util.Set)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/data/input/impl/TimestampSpec/extractTimestamp(java.util.Map)|",
      "|java+method:///org/joda/time/DateTime/getMillis()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Iterable)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/java/util/common/parsers/ParseException/ParseException(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///java/lang/NullPointerException/NullPointerException(java.lang.String)|",
      "|java+method:///io/druid/data/input/impl/DimensionsSpec/getDimensionExclusions()|",
      "|java+method:///io/druid/data/input/impl/ParseSpec/getDimensionsSpec()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/druid/data/input/impl/DimensionsSpec/hasCustomDimensions()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/druid/data/input/impl/DimensionsSpec/getDimensionNames()|",
      "|java+method:///io/druid/data/input/impl/ParseSpec/getTimestampSpec()|",
      "|java+method:///java/lang/String/substring(int,int)|",
      "|java+constructor:///io/druid/data/input/MapBasedInputRow/MapBasedInputRow(long,java.util.List,java.util.Map)|",
      "|java+method:///com/google/common/collect/Sets/difference(java.util.Set,java.util.Set)|"
    ],
    "affectedLib": "com.metamx:java-util:0.27.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.10.0",
    "coordinatesV2": "io.druid:druid-api:0.9.2",
    "caller": "|java+method:///io/druid/data/input/impl/RegexParseSpec/makeParser()|",
    "called": "|java+constructor:///com/metamx/common/parsers/RegexParser/RegexParser(java.lang.String,com.google.common.base.Optional)|",
    "v1Body": [
      "|java+constructor:///com/metamx/common/parsers/RegexParser/RegexParser(java.lang.String,com.google.common.base.Optional,java.lang.Iterable)|",
      "|java+constructor:///com/metamx/common/parsers/RegexParser/RegexParser(java.lang.String,com.google.common.base.Optional)|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/java/util/common/parsers/RegexParser/RegexParser(java.lang.String,com.google.common.base.Optional,java.lang.Iterable)|",
      "|java+constructor:///io/druid/java/util/common/parsers/RegexParser/RegexParser(java.lang.String,com.google.common.base.Optional)|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|"
    ],
    "affectedLib": "com.metamx:java-util:0.27.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.10.0",
    "coordinatesV2": "io.druid:druid-api:0.9.2",
    "caller": "|java+constructor:///io/druid/tasklogs/NoopTaskLogs/NoopTaskLogs()|",
    "called": "|java+constructor:///com/metamx/common/logger/Logger/Logger(java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///com/metamx/common/logger/Logger/Logger(java.lang.Class)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/java/util/common/logger/Logger/Logger(java.lang.Class)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "com.metamx:java-util:0.27.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.10.0",
    "coordinatesV2": "io.druid:druid-api:0.9.2",
    "caller": "|java+method:///io/druid/data/input/MapBasedRow/getLongMetric(java.lang.String)|",
    "called": "|java+constructor:///com/metamx/common/parsers/ParseException/ParseException(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///java/lang/Double/longValue()|",
      "|java+method:///java/util/regex/Matcher/matches()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///java/lang/Double/valueOf(java.lang.String)|",
      "|java+method:///java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///java/lang/Number/longValue()|",
      "|java+method:///java/lang/Long/valueOf(java.lang.String)|",
      "|java+constructor:///com/metamx/common/parsers/ParseException/ParseException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///com/metamx/common/parsers/ParseException/ParseException(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Double/longValue()|",
      "|java+method:///java/util/regex/Matcher/matches()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///java/lang/Double/valueOf(java.lang.String)|",
      "|java+method:///java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///java/lang/Number/longValue()|",
      "|java+method:///java/lang/Long/valueOf(java.lang.String)|",
      "|java+constructor:///io/druid/java/util/common/parsers/ParseException/ParseException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/java/util/common/parsers/ParseException/ParseException(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "com.metamx:java-util:0.27.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.10.0",
    "coordinatesV2": "io.druid:druid-api:0.9.2",
    "caller": "|java+method:///io/druid/utils/CompressionUtils/gunzip(java.io.File,java.io.File)|",
    "called": "|java+method:///com/metamx/common/CompressionUtils/gunzip(java.io.File,java.io.File)|",
    "v1Body": [
      "|java+method:///java/io/File/getName()|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///com/metamx/common/CompressionUtils/getGzBaseName(java.lang.String)|",
      "|java+method:///com/metamx/common/CompressionUtils/gunzip(java.io.File,java.io.File)|",
      "|java+method:///com/metamx/common/logger/Logger/error(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/io/File/delete()|"
    ],
    "v2Body": [
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///io/druid/java/util/common/CompressionUtils/gunzip(java.io.File,java.io.File)|",
      "|java+method:///io/druid/java/util/common/logger/Logger/error(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/io/File/delete()|",
      "|java+method:///io/druid/java/util/common/CompressionUtils/getGzBaseName(java.lang.String)|",
      "|java+method:///java/io/File/getName()|"
    ],
    "affectedLib": "com.metamx:java-util:0.27.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.10.0",
    "coordinatesV2": "io.druid:druid-api:0.9.2",
    "caller": "|java+method:///io/druid/data/input/impl/JSONParseSpec/convertFieldSpecs(java.util.List)|",
    "called": "|java+constructor:///com/metamx/common/parsers/JSONPathParser$FieldSpec/JSONPathParser$FieldSpec(com.metamx.common.parsers.JSONPathParser$FieldType,java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///io/druid/data/input/impl/JSONPathFieldSpec/getExpr()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///com/metamx/common/parsers/JSONPathParser$FieldSpec/JSONPathParser$FieldSpec(com.metamx.common.parsers.JSONPathParser$FieldType,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/druid/data/input/impl/JSONPathFieldType/ordinal()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/druid/data/input/impl/JSONPathFieldSpec/getType()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///io/druid/data/input/impl/JSONPathFieldSpec/getName()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///io/druid/data/input/impl/JSONPathFieldSpec/getExpr()|",
      "|java+constructor:///io/druid/java/util/common/parsers/JSONPathParser$FieldSpec/JSONPathParser$FieldSpec(io.druid.java.util.common.parsers.JSONPathParser$FieldType,java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/druid/data/input/impl/JSONPathFieldType/ordinal()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/druid/data/input/impl/JSONPathFieldSpec/getType()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///io/druid/data/input/impl/JSONPathFieldSpec/getName()|"
    ],
    "affectedLib": "com.metamx:java-util:0.27.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.10.0",
    "coordinatesV2": "io.druid:druid-api:0.9.2",
    "caller": "|java+method:///io/druid/data/input/impl/DimensionsSpec/verify(java.util.List)|",
    "called": "|java+method:///com/metamx/common/parsers/ParserUtils/validateFields(java.lang.Iterable)|",
    "v1Body": [
      "|java+method:///com/google/common/collect/Lists/transform(java.util.List,com.google.common.base.Function)|",
      "|java+method:///com/google/common/collect/Sets$SetView/isEmpty()|",
      "|java+method:///com/google/common/collect/Sets/newHashSet(java.lang.Iterable)|",
      "|java+method:///io/druid/data/input/impl/DimensionsSpec/getDimensionNames()|",
      "|java+method:///com/google/common/collect/Sets/intersection(java.util.Set,java.util.Set)|",
      "|java+method:///com/metamx/common/parsers/ParserUtils/validateFields(java.lang.Iterable)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///com/google/common/collect/Iterables/concat(java.lang.Iterable,java.lang.Iterable)|",
      "|java+constructor:///io/druid/data/input/impl/DimensionsSpec$4/DimensionsSpec$4(io.druid.data.input.impl.DimensionsSpec)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Lists/transform(java.util.List,com.google.common.base.Function)|",
      "|java+method:///com/google/common/collect/Sets$SetView/isEmpty()|",
      "|java+method:///com/google/common/collect/Sets/newHashSet(java.lang.Iterable)|",
      "|java+method:///io/druid/data/input/impl/DimensionsSpec/getDimensionNames()|",
      "|java+method:///io/druid/java/util/common/parsers/ParserUtils/validateFields(java.lang.Iterable)|",
      "|java+method:///com/google/common/collect/Sets/intersection(java.util.Set,java.util.Set)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///com/google/common/collect/Iterables/concat(java.lang.Iterable,java.lang.Iterable)|",
      "|java+constructor:///io/druid/data/input/impl/DimensionsSpec$4/DimensionsSpec$4(io.druid.data.input.impl.DimensionsSpec)|"
    ],
    "affectedLib": "com.metamx:java-util:0.27.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.10.0",
    "coordinatesV2": "io.druid:druid-api:0.9.2",
    "caller": "|java+method:///io/druid/data/input/impl/JavaScriptParseSpec/makeParser()|",
    "called": "|java+constructor:///com/metamx/common/parsers/JavaScriptParser/JavaScriptParser(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///com/metamx/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/js/JavaScriptConfig/isDisabled()|",
      "|java+constructor:///com/metamx/common/parsers/JavaScriptParser/JavaScriptParser(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/js/JavaScriptConfig/isEnabled()|",
      "|java+constructor:///io/druid/java/util/common/parsers/JavaScriptParser/JavaScriptParser(java.lang.String)|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "com.metamx:java-util:0.27.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.10.0",
    "coordinatesV2": "io.druid:druid-api:0.9.2",
    "caller": "|java+method:///io/druid/data/input/impl/JSONLowercaseParseSpec/makeParser()|",
    "called": "|java+constructor:///com/metamx/common/parsers/JSONToLowerParser/JSONToLowerParser(com.fasterxml.jackson.databind.ObjectMapper,java.lang.Iterable,java.lang.Iterable)|",
    "v1Body": [
      "|java+constructor:///com/metamx/common/parsers/JSONToLowerParser/JSONToLowerParser(com.fasterxml.jackson.databind.ObjectMapper,java.lang.Iterable,java.lang.Iterable)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/java/util/common/parsers/JSONToLowerParser/JSONToLowerParser(com.fasterxml.jackson.databind.ObjectMapper,java.lang.Iterable,java.lang.Iterable)|"
    ],
    "affectedLib": "com.metamx:java-util:0.27.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.10.0",
    "coordinatesV2": "io.druid:druid-api:0.9.2",
    "caller": "|java+method:///io/druid/utils/CompressionUtils/zip(java.io.File,java.io.OutputStream)|",
    "called": "|java+method:///com/metamx/common/CompressionUtils/zip(java.io.File,java.io.OutputStream)|",
    "v1Body": [
      "|java+method:///com/metamx/common/CompressionUtils/zip(java.io.File,java.io.OutputStream)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/java/util/common/CompressionUtils/zip(java.io.File,java.io.OutputStream)|"
    ],
    "affectedLib": "com.metamx:java-util:0.27.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.10.0",
    "coordinatesV2": "io.druid:druid-api:0.9.2",
    "caller": "|java+method:///io/druid/data/input/Rows/toCaseInsensitiveInputRow(io.druid.data.input.Row,java.util.List)|",
    "called": "|java+constructor:///com/metamx/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+constructor:///com/metamx/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/TreeMap/putAll(java.util.Map)|",
      "|java+constructor:///io/druid/data/input/MapBasedInputRow/MapBasedInputRow(org.joda.time.DateTime,java.util.List,java.util.Map)|",
      "|java+method:///io/druid/data/input/MapBasedRow/getTimestamp()|",
      "|java+method:///com/google/common/collect/Maps/newTreeMap(java.util.Comparator)|",
      "|java+method:///io/druid/data/input/MapBasedRow/getEvent()|"
    ],
    "v2Body": [
      "|java+method:///java/util/TreeMap/putAll(java.util.Map)|",
      "|java+constructor:///io/druid/data/input/MapBasedInputRow/MapBasedInputRow(org.joda.time.DateTime,java.util.List,java.util.Map)|",
      "|java+method:///io/druid/data/input/MapBasedRow/getTimestamp()|",
      "|java+method:///com/google/common/collect/Maps/newTreeMap(java.util.Comparator)|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/data/input/MapBasedRow/getEvent()|"
    ],
    "affectedLib": "com.metamx:java-util:0.27.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.10.0",
    "coordinatesV2": "io.druid:druid-api:0.9.2",
    "caller": "|java+method:///io/druid/guice/LifecycleScope$1/get()|",
    "called": "|java+method:///com/metamx/common/logger/Logger/warn(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///com/google/inject/Provider/get()|",
      "|java+method:///io/druid/guice/LifecycleScope/access$300()|",
      "|java+method:///io/druid/guice/LifecycleScope/access$200(io.druid.guice.LifecycleScope)|",
      "|java+method:///io/druid/guice/LifecycleScope/access$100(io.druid.guice.LifecycleScope)|",
      "|java+method:///io/druid/guice/LifecycleScope/access$000(io.druid.guice.LifecycleScope)|",
      "|java+method:///com/metamx/common/lifecycle/Lifecycle/addMaybeStartManagedInstance(java.lang.Object,com.metamx.common.lifecycle.Lifecycle$Stage)|",
      "|java+method:///com/metamx/common/logger/Logger/warn(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/add(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///com/google/inject/Provider/get()|",
      "|java+method:///io/druid/guice/LifecycleScope/access$300()|",
      "|java+method:///io/druid/guice/LifecycleScope/access$200(io.druid.guice.LifecycleScope)|",
      "|java+method:///io/druid/guice/LifecycleScope/access$100(io.druid.guice.LifecycleScope)|",
      "|java+method:///io/druid/guice/LifecycleScope/access$000(io.druid.guice.LifecycleScope)|",
      "|java+method:///io/druid/java/util/common/lifecycle/Lifecycle/addMaybeStartManagedInstance(java.lang.Object,io.druid.java.util.common.lifecycle.Lifecycle$Stage)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///io/druid/java/util/common/logger/Logger/warn(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "com.metamx:java-util:0.27.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.10.0",
    "coordinatesV2": "io.druid:druid-api:0.9.2",
    "caller": "|java+constructor:///io/druid/data/input/impl/TimestampSpec/TimestampSpec(java.lang.String,java.lang.String,org.joda.time.DateTime)|",
    "called": "|java+method:///com/metamx/common/parsers/TimestampParser/createObjectTimestampParser(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/metamx/common/parsers/TimestampParser/createObjectTimestampParser(java.lang.String)|",
      "|java+constructor:///io/druid/data/input/impl/TimestampSpec$ParseCtx/TimestampSpec$ParseCtx(io.druid.data.input.impl.TimestampSpec$1)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///io/druid/java/util/common/parsers/TimestampParser/createObjectTimestampParser(java.lang.String)|",
      "|java+constructor:///io/druid/data/input/impl/TimestampSpec$ParseCtx/TimestampSpec$ParseCtx(io.druid.data.input.impl.TimestampSpec$1)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "com.metamx:java-util:0.27.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.10.0",
    "coordinatesV2": "io.druid:druid-api:0.9.2",
    "caller": "|java+method:///io/druid/tasklogs/NoopTaskLogs/pushTaskLog(java.lang.String,java.io.File)|",
    "called": "|java+method:///com/metamx/common/logger/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///com/metamx/common/logger/Logger/info(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/java/util/common/logger/Logger/info(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "com.metamx:java-util:0.27.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.10.0",
    "coordinatesV2": "io.druid:druid-api:0.9.2",
    "caller": "|java+method:///io/druid/guice/JsonConfigurator/configurate(java.util.Properties,java.lang.String,java.lang.Class)|",
    "called": "|java+method:///com/metamx/common/logger/Logger/info(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///java/util/Properties/stringPropertyNames()|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)|",
      "|java+method:///java/lang/Class/getDeclaredField(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///javax/validation/ConstraintViolation/getMessage()|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/lang/reflect/Field/getAnnotation(java.lang.Class)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///javax/validation/ConstraintViolation/getPropertyPath()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(java.lang.String,java.lang.Class)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/lang/IllegalArgumentException/getMessage()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsString(java.lang.Object)|",
      "|java+method:///io/druid/guice/JsonConfigurator/verifyClazzIsConfigurable(java.lang.Class)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///com/metamx/common/logger/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/metamx/common/logger/Logger/info(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/fasterxml/jackson/annotation/JsonProperty/value()|",
      "|java+method:///javax/validation/ConstraintViolation/getRootBeanClass()|",
      "|java+method:///javax/validation/Path$Node/getName()|",
      "|java+method:///javax/validation/Path/iterator()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+constructor:///com/google/inject/ProvisionException/ProvisionException(java.lang.Iterable)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///com/google/inject/ProvisionException/ProvisionException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///javax/validation/Path$Node/getKind()|",
      "|java+constructor:///io/druid/guice/JsonConfigurator$1/JsonConfigurator$1(io.druid.guice.JsonConfigurator,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///javax/validation/Validator/validate(java.lang.Object,java.lang.Class%5B%5D)|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Properties/stringPropertyNames()|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)|",
      "|java+method:///java/lang/Class/getDeclaredField(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsString(java.lang.Object)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///javax/validation/ConstraintViolation/getMessage()|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///io/druid/guice/JsonConfigurator/verifyClazzIsConfigurable(com.fasterxml.jackson.databind.ObjectMapper,java.lang.Class)|",
      "|java+method:///java/lang/reflect/Field/getAnnotation(java.lang.Class)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///javax/validation/ConstraintViolation/getPropertyPath()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(java.lang.String,java.lang.Class)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/lang/IllegalArgumentException/getMessage()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/fasterxml/jackson/annotation/JsonProperty/value()|",
      "|java+method:///javax/validation/ConstraintViolation/getRootBeanClass()|",
      "|java+method:///javax/validation/Path$Node/getName()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/druid/java/util/common/logger/Logger/info(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/java/util/common/logger/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///javax/validation/Path/iterator()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+constructor:///com/google/inject/ProvisionException/ProvisionException(java.lang.Iterable)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///com/google/inject/ProvisionException/ProvisionException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///javax/validation/Path$Node/getKind()|",
      "|java+constructor:///io/druid/guice/JsonConfigurator$1/JsonConfigurator$1(io.druid.guice.JsonConfigurator,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///javax/validation/Validator/validate(java.lang.Object,java.lang.Class%5B%5D)|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|"
    ],
    "affectedLib": "com.metamx:java-util:0.27.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.9.2",
    "coordinatesV2": "io.druid:druid-api:0.10.0",
    "caller": "|java+method:///io/druid/guice/LifecycleModule$2/start()|",
    "called": "|java+method:///io/druid/java/util/common/lifecycle/Lifecycle/start()|",
    "v1Body": [
      "|java+method:///com/metamx/common/lifecycle/Lifecycle/start()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/druid/guice/KeyHolder/getKey()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///com/google/inject/Injector/getInstance(com.google.inject.Key)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/druid/guice/KeyHolder/getKey()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///com/google/inject/Injector/getInstance(com.google.inject.Key)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/druid/java/util/common/lifecycle/Lifecycle/start()|"
    ],
    "affectedLib": "io.druid:java-util:0.10.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.9.2",
    "coordinatesV2": "io.druid:druid-api:0.10.0",
    "caller": "|java+method:///io/druid/data/input/impl/JSONParseSpec/makeParser()|",
    "called": "|java+constructor:///io/druid/java/util/common/parsers/JSONPathParser/JSONPathParser(java.util.List,boolean,com.fasterxml.jackson.databind.ObjectMapper)|",
    "v1Body": [
      "|java+method:///io/druid/data/input/impl/JSONPathSpec/isUseFieldDiscovery()|",
      "|java+method:///io/druid/data/input/impl/JSONParseSpec/convertFieldSpecs(java.util.List)|",
      "|java+constructor:///com/metamx/common/parsers/JSONPathParser/JSONPathParser(java.util.List,boolean,com.fasterxml.jackson.databind.ObjectMapper)|",
      "|java+method:///io/druid/data/input/impl/JSONPathSpec/getFields()|"
    ],
    "v2Body": [
      "|java+method:///io/druid/data/input/impl/JSONPathSpec/isUseFieldDiscovery()|",
      "|java+method:///io/druid/data/input/impl/JSONParseSpec/convertFieldSpecs(java.util.List)|",
      "|java+constructor:///io/druid/java/util/common/parsers/JSONPathParser/JSONPathParser(java.util.List,boolean,com.fasterxml.jackson.databind.ObjectMapper)|",
      "|java+method:///io/druid/data/input/impl/JSONPathSpec/getFields()|"
    ],
    "affectedLib": "io.druid:java-util:0.10.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.9.2",
    "coordinatesV2": "io.druid:druid-api:0.10.0",
    "caller": "|java+method:///io/druid/timeline/DataSegmentUtils/parse(java.lang.String,java.lang.String)|",
    "called": "|java+method:///io/druid/java/util/common/logger/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///org/joda/time/DateTime/getMillis()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///org/joda/time/format/ISODateTimeFormat/dateTime()|",
      "|java+method:///org/joda/time/format/DateTimeFormatter/parseDateTime(java.lang.String)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+constructor:///io/druid/timeline/DataSegmentUtils$SegmentIdentifierParts/DataSegmentUtils$SegmentIdentifierParts(java.lang.String,org.joda.time.Interval,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/metamx/common/logger/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/timeline/DataSegmentUtils/join(java.lang.Object%5B%5D,java.lang.String,int,int)|",
      "|java+constructor:///org/joda/time/Interval/Interval(long,long)|",
      "|java+method:///java/lang/String/substring(int)|"
    ],
    "v2Body": [
      "|java+method:///org/joda/time/DateTime/getMillis()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///org/joda/time/format/ISODateTimeFormat/dateTime()|",
      "|java+method:///org/joda/time/format/DateTimeFormatter/parseDateTime(java.lang.String)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///io/druid/timeline/DataSegmentUtils/join(java.lang.Object%5B%5D,java.lang.String,int,int)|",
      "|java+method:///io/druid/java/util/common/logger/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+constructor:///io/druid/timeline/DataSegmentUtils$SegmentIdentifierParts/DataSegmentUtils$SegmentIdentifierParts(java.lang.String,org.joda.time.Interval,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///org/joda/time/Interval/Interval(long,long)|",
      "|java+method:///java/lang/String/substring(int)|"
    ],
    "affectedLib": "io.druid:java-util:0.10.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.9.2",
    "coordinatesV2": "io.druid:druid-api:0.10.0",
    "caller": "|java+method:///io/druid/timeline/DataSegmentUtils/withInterval(java.lang.String,java.lang.String,org.joda.time.Interval)|",
    "called": "|java+method:///io/druid/java/util/common/logger/Logger/warn(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///io/druid/timeline/DataSegmentUtils$SegmentIdentifierParts/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/metamx/common/logger/Logger/warn(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/timeline/DataSegmentUtils/parse(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/druid/timeline/DataSegmentUtils$SegmentIdentifierParts/withInterval(org.joda.time.Interval)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/timeline/DataSegmentUtils$SegmentIdentifierParts/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/druid/timeline/DataSegmentUtils$SegmentIdentifierParts/withInterval(org.joda.time.Interval)|",
      "|java+method:///io/druid/timeline/DataSegmentUtils/parse(java.lang.String,java.lang.String)|",
      "|java+method:///io/druid/java/util/common/logger/Logger/warn(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "io.druid:java-util:0.10.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.9.2",
    "coordinatesV2": "io.druid:druid-api:0.10.0",
    "caller": "|java+method:///io/druid/utils/CompressionUtils/unzip(java.io.InputStream,java.io.File)|",
    "called": "|java+method:///io/druid/java/util/common/CompressionUtils/unzip(java.io.InputStream,java.io.File)|",
    "v1Body": [
      "|java+method:///com/metamx/common/CompressionUtils/unzip(java.io.InputStream,java.io.File)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/java/util/common/CompressionUtils/unzip(java.io.InputStream,java.io.File)|"
    ],
    "affectedLib": "io.druid:java-util:0.10.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.9.2",
    "coordinatesV2": "io.druid:druid-api:0.10.0",
    "caller": "|java+method:///io/druid/utils/CompressionUtils/zip(java.io.File,java.io.File)|",
    "called": "|java+method:///io/druid/java/util/common/CompressionUtils/zip(java.io.File,java.io.File)|",
    "v1Body": [
      "|java+method:///com/metamx/common/CompressionUtils/zip(java.io.File,java.io.File)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/java/util/common/CompressionUtils/zip(java.io.File,java.io.File)|"
    ],
    "affectedLib": "io.druid:java-util:0.10.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.9.2",
    "coordinatesV2": "io.druid:druid-api:0.10.0",
    "caller": "|java+method:///io/druid/data/input/impl/CSVParseSpec/makeParser()|",
    "called": "|java+constructor:///io/druid/java/util/common/parsers/CSVParser/CSVParser(com.google.common.base.Optional,java.lang.Iterable)|",
    "v1Body": [
      "|java+constructor:///com/metamx/common/parsers/CSVParser/CSVParser(com.google.common.base.Optional,java.lang.Iterable)|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/java/util/common/parsers/CSVParser/CSVParser(com.google.common.base.Optional,java.lang.Iterable)|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|"
    ],
    "affectedLib": "io.druid:java-util:0.10.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.9.2",
    "coordinatesV2": "io.druid:druid-api:0.10.0",
    "caller": "|java+method:///io/druid/utils/CompressionUtils/unzip(java.io.File,java.io.File)|",
    "called": "|java+method:///io/druid/java/util/common/CompressionUtils/unzip(java.io.File,java.io.File)|",
    "v1Body": [
      "|java+method:///com/metamx/common/CompressionUtils/unzip(java.io.File,java.io.File)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/java/util/common/CompressionUtils/unzip(java.io.File,java.io.File)|"
    ],
    "affectedLib": "io.druid:java-util:0.10.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.9.2",
    "coordinatesV2": "io.druid:druid-api:0.10.0",
    "caller": "|java+initializer:///io/druid/guice/JsonConfigurator/JsonConfigurator$initializer|",
    "called": "|java+constructor:///io/druid/java/util/common/logger/Logger/Logger(java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///com/metamx/common/logger/Logger/Logger(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/java/util/common/logger/Logger/Logger(java.lang.Class)|"
    ],
    "affectedLib": "io.druid:java-util:0.10.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.9.2",
    "coordinatesV2": "io.druid:druid-api:0.10.0",
    "caller": "|java+initializer:///io/druid/guice/LifecycleScope/LifecycleScope$initializer|",
    "called": "|java+constructor:///io/druid/java/util/common/logger/Logger/Logger(java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///com/metamx/common/logger/Logger/Logger(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/java/util/common/logger/Logger/Logger(java.lang.Class)|"
    ],
    "affectedLib": "io.druid:java-util:0.10.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.9.2",
    "coordinatesV2": "io.druid:druid-api:0.10.0",
    "caller": "|java+initializer:///io/druid/timeline/DataSegmentUtils/DataSegmentUtils$initializer|",
    "called": "|java+constructor:///io/druid/java/util/common/logger/Logger/Logger(java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///com/metamx/common/logger/Logger/Logger(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/java/util/common/logger/Logger/Logger(java.lang.Class)|"
    ],
    "affectedLib": "io.druid:java-util:0.10.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.9.2",
    "coordinatesV2": "io.druid:druid-api:0.10.0",
    "caller": "|java+method:///io/druid/data/input/impl/DelimitedParseSpec/makeParser()|",
    "called": "|java+constructor:///io/druid/java/util/common/parsers/DelimitedParser/DelimitedParser(com.google.common.base.Optional,com.google.common.base.Optional)|",
    "v1Body": [
      "|java+method:///com/metamx/common/parsers/Parser/setFieldNames(java.lang.Iterable)|",
      "|java+constructor:///com/metamx/common/parsers/DelimitedParser/DelimitedParser(com.google.common.base.Optional,com.google.common.base.Optional)|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/java/util/common/parsers/DelimitedParser/DelimitedParser(com.google.common.base.Optional,com.google.common.base.Optional)|",
      "|java+method:///io/druid/java/util/common/parsers/Parser/setFieldNames(java.lang.Iterable)|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|"
    ],
    "affectedLib": "io.druid:java-util:0.10.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.9.2",
    "coordinatesV2": "io.druid:druid-api:0.10.0",
    "caller": "|java+method:///io/druid/data/input/impl/StringInputRowParser/buildStringKeyMap(java.nio.ByteBuffer)|",
    "called": "|java+constructor:///io/druid/java/util/common/parsers/ParseException/ParseException(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///java/nio/CharBuffer/remaining()|",
      "|java+method:///java/nio/charset/CharsetDecoder/onMalformedInput(java.nio.charset.CodingErrorAction)|",
      "|java+method:///java/nio/charset/Charset/newDecoder()|",
      "|java+method:///java/nio/CharBuffer/allocate(int)|",
      "|java+method:///java/nio/ByteBuffer/remaining()|",
      "|java+constructor:///com/metamx/common/parsers/ParseException/ParseException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/nio/CharBuffer/toString()|",
      "|java+method:///java/nio/charset/CoderResult/isUnderflow()|",
      "|java+method:///io/druid/data/input/impl/StringInputRowParser/parseString(java.lang.String)|",
      "|java+method:///java/nio/charset/CharsetDecoder/onUnmappableCharacter(java.nio.charset.CodingErrorAction)|",
      "|java+method:///java/nio/charset/CharsetDecoder/decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)|",
      "|java+method:///java/nio/CharBuffer/flip()|",
      "|java+method:///java/nio/CharBuffer/clear()|"
    ],
    "v2Body": [
      "|java+method:///java/nio/CharBuffer/remaining()|",
      "|java+method:///java/nio/charset/CharsetDecoder/onMalformedInput(java.nio.charset.CodingErrorAction)|",
      "|java+method:///java/nio/charset/Charset/newDecoder()|",
      "|java+method:///java/nio/ByteBuffer/remaining()|",
      "|java+method:///java/nio/CharBuffer/toString()|",
      "|java+method:///java/nio/charset/CoderResult/isUnderflow()|",
      "|java+method:///io/druid/data/input/impl/StringInputRowParser/parseString(java.lang.String)|",
      "|java+method:///java/nio/charset/CharsetDecoder/onUnmappableCharacter(java.nio.charset.CodingErrorAction)|",
      "|java+constructor:///io/druid/java/util/common/parsers/ParseException/ParseException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/nio/CharBuffer/allocate(int)|",
      "|java+method:///java/nio/charset/CharsetDecoder/decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)|",
      "|java+method:///java/nio/CharBuffer/flip()|",
      "|java+method:///java/nio/CharBuffer/clear()|"
    ],
    "affectedLib": "io.druid:java-util:0.10.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.9.2",
    "coordinatesV2": "io.druid:druid-api:0.10.0",
    "caller": "|java+initializer:///io/druid/data/input/MapBasedRow/MapBasedRow$initializer|",
    "called": "|java+constructor:///io/druid/java/util/common/logger/Logger/Logger(java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///io/druid/data/input/MapBasedRow$1/MapBasedRow$1()|",
      "|java+method:///java/util/regex/Pattern/compile(java.lang.String)|",
      "|java+constructor:///com/metamx/common/logger/Logger/Logger(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/data/input/MapBasedRow$1/MapBasedRow$1()|",
      "|java+method:///java/util/regex/Pattern/compile(java.lang.String)|",
      "|java+constructor:///io/druid/java/util/common/logger/Logger/Logger(java.lang.Class)|"
    ],
    "affectedLib": "io.druid:java-util:0.10.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.9.2",
    "coordinatesV2": "io.druid:druid-api:0.10.0",
    "caller": "|java+initializer:///io/druid/utils/CompressionUtils/CompressionUtils$initializer|",
    "called": "|java+constructor:///io/druid/java/util/common/logger/Logger/Logger(java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///com/metamx/common/logger/Logger/Logger(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/java/util/common/logger/Logger/Logger(java.lang.Class)|"
    ],
    "affectedLib": "io.druid:java-util:0.10.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.9.2",
    "coordinatesV2": "io.druid:druid-api:0.10.0",
    "caller": "|java+method:///io/druid/data/input/MapBasedRow/getFloatMetric(java.lang.String)|",
    "called": "|java+constructor:///io/druid/java/util/common/parsers/ParseException/ParseException(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///java/lang/Number/floatValue()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Float/valueOf(java.lang.String)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+constructor:///com/metamx/common/parsers/ParseException/ParseException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///com/metamx/common/parsers/ParseException/ParseException(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Float/floatValue()|",
      "|java+method:///java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Number/floatValue()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Float/valueOf(java.lang.String)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+constructor:///io/druid/java/util/common/parsers/ParseException/ParseException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/java/util/common/parsers/ParseException/ParseException(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Float/floatValue()|",
      "|java+method:///java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)|"
    ],
    "affectedLib": "io.druid:java-util:0.10.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.9.2",
    "coordinatesV2": "io.druid:druid-api:0.10.0",
    "caller": "|java+constructor:///io/druid/guice/LifecycleModule$2/LifecycleModule$2(io.druid.guice.LifecycleModule,java.util.Set,com.google.inject.Injector)|",
    "called": "|java+constructor:///io/druid/java/util/common/lifecycle/Lifecycle/Lifecycle()|",
    "v1Body": [
      "|java+constructor:///com/metamx/common/lifecycle/Lifecycle/Lifecycle()|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/java/util/common/lifecycle/Lifecycle/Lifecycle()|"
    ],
    "affectedLib": "io.druid:java-util:0.10.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.9.2",
    "coordinatesV2": "io.druid:druid-api:0.10.0",
    "caller": "|java+method:///io/druid/data/input/impl/MapInputRowParser/parse(java.util.Map)|",
    "called": "|java+constructor:///io/druid/java/util/common/parsers/ParseException/ParseException(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///io/druid/data/input/impl/TimestampSpec/extractTimestamp(java.util.Map)|",
      "|java+method:///org/joda/time/DateTime/getMillis()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Iterable)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+constructor:///java/lang/NullPointerException/NullPointerException(java.lang.String)|",
      "|java+method:///io/druid/data/input/impl/DimensionsSpec/getDimensionExclusions()|",
      "|java+method:///io/druid/data/input/impl/ParseSpec/getDimensionsSpec()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/druid/data/input/impl/DimensionsSpec/hasCustomDimensions()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/druid/data/input/impl/DimensionsSpec/getDimensionNames()|",
      "|java+method:///io/druid/data/input/impl/ParseSpec/getTimestampSpec()|",
      "|java+method:///java/lang/String/substring(int,int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///com/metamx/common/parsers/ParseException/ParseException(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/data/input/MapBasedInputRow/MapBasedInputRow(long,java.util.List,java.util.Map)|",
      "|java+method:///com/google/common/collect/Sets/difference(java.util.Set,java.util.Set)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/data/input/impl/TimestampSpec/extractTimestamp(java.util.Map)|",
      "|java+method:///org/joda/time/DateTime/getMillis()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Iterable)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/java/util/common/parsers/ParseException/ParseException(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///java/lang/NullPointerException/NullPointerException(java.lang.String)|",
      "|java+method:///io/druid/data/input/impl/DimensionsSpec/getDimensionExclusions()|",
      "|java+method:///io/druid/data/input/impl/ParseSpec/getDimensionsSpec()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/druid/data/input/impl/DimensionsSpec/hasCustomDimensions()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/druid/data/input/impl/DimensionsSpec/getDimensionNames()|",
      "|java+method:///io/druid/data/input/impl/ParseSpec/getTimestampSpec()|",
      "|java+method:///java/lang/String/substring(int,int)|",
      "|java+constructor:///io/druid/data/input/MapBasedInputRow/MapBasedInputRow(long,java.util.List,java.util.Map)|",
      "|java+method:///com/google/common/collect/Sets/difference(java.util.Set,java.util.Set)|"
    ],
    "affectedLib": "io.druid:java-util:0.10.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.9.2",
    "coordinatesV2": "io.druid:druid-api:0.10.0",
    "caller": "|java+method:///io/druid/data/input/impl/RegexParseSpec/makeParser()|",
    "called": "|java+constructor:///io/druid/java/util/common/parsers/RegexParser/RegexParser(java.lang.String,com.google.common.base.Optional,java.lang.Iterable)|",
    "v1Body": [
      "|java+constructor:///com/metamx/common/parsers/RegexParser/RegexParser(java.lang.String,com.google.common.base.Optional,java.lang.Iterable)|",
      "|java+constructor:///com/metamx/common/parsers/RegexParser/RegexParser(java.lang.String,com.google.common.base.Optional)|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/java/util/common/parsers/RegexParser/RegexParser(java.lang.String,com.google.common.base.Optional,java.lang.Iterable)|",
      "|java+constructor:///io/druid/java/util/common/parsers/RegexParser/RegexParser(java.lang.String,com.google.common.base.Optional)|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|"
    ],
    "affectedLib": "io.druid:java-util:0.10.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.9.2",
    "coordinatesV2": "io.druid:druid-api:0.10.0",
    "caller": "|java+constructor:///io/druid/tasklogs/NoopTaskLogs/NoopTaskLogs()|",
    "called": "|java+constructor:///io/druid/java/util/common/logger/Logger/Logger(java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///com/metamx/common/logger/Logger/Logger(java.lang.Class)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/java/util/common/logger/Logger/Logger(java.lang.Class)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "io.druid:java-util:0.10.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.9.2",
    "coordinatesV2": "io.druid:druid-api:0.10.0",
    "caller": "|java+method:///io/druid/data/input/MapBasedRow/getLongMetric(java.lang.String)|",
    "called": "|java+constructor:///io/druid/java/util/common/parsers/ParseException/ParseException(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///java/lang/Double/longValue()|",
      "|java+method:///java/util/regex/Matcher/matches()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///java/lang/Double/valueOf(java.lang.String)|",
      "|java+method:///java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///java/lang/Number/longValue()|",
      "|java+method:///java/lang/Long/valueOf(java.lang.String)|",
      "|java+constructor:///com/metamx/common/parsers/ParseException/ParseException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///com/metamx/common/parsers/ParseException/ParseException(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Double/longValue()|",
      "|java+method:///java/util/regex/Matcher/matches()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///java/lang/Double/valueOf(java.lang.String)|",
      "|java+method:///java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///java/lang/Number/longValue()|",
      "|java+method:///java/lang/Long/valueOf(java.lang.String)|",
      "|java+constructor:///io/druid/java/util/common/parsers/ParseException/ParseException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/java/util/common/parsers/ParseException/ParseException(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "io.druid:java-util:0.10.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.9.2",
    "coordinatesV2": "io.druid:druid-api:0.10.0",
    "caller": "|java+method:///io/druid/utils/CompressionUtils/gunzip(java.io.File,java.io.File)|",
    "called": "|java+method:///io/druid/java/util/common/CompressionUtils/getGzBaseName(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/io/File/getName()|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///com/metamx/common/CompressionUtils/getGzBaseName(java.lang.String)|",
      "|java+method:///com/metamx/common/CompressionUtils/gunzip(java.io.File,java.io.File)|",
      "|java+method:///com/metamx/common/logger/Logger/error(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/io/File/delete()|"
    ],
    "v2Body": [
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///io/druid/java/util/common/CompressionUtils/gunzip(java.io.File,java.io.File)|",
      "|java+method:///io/druid/java/util/common/logger/Logger/error(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/io/File/delete()|",
      "|java+method:///io/druid/java/util/common/CompressionUtils/getGzBaseName(java.lang.String)|",
      "|java+method:///java/io/File/getName()|"
    ],
    "affectedLib": "io.druid:java-util:0.10.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.9.2",
    "coordinatesV2": "io.druid:druid-api:0.10.0",
    "caller": "|java+method:///io/druid/data/input/impl/JSONParseSpec/convertFieldSpecs(java.util.List)|",
    "called": "|java+constructor:///io/druid/java/util/common/parsers/JSONPathParser$FieldSpec/JSONPathParser$FieldSpec(io.druid.java.util.common.parsers.JSONPathParser$FieldType,java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///io/druid/data/input/impl/JSONPathFieldSpec/getExpr()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///com/metamx/common/parsers/JSONPathParser$FieldSpec/JSONPathParser$FieldSpec(com.metamx.common.parsers.JSONPathParser$FieldType,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/druid/data/input/impl/JSONPathFieldType/ordinal()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/druid/data/input/impl/JSONPathFieldSpec/getType()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///io/druid/data/input/impl/JSONPathFieldSpec/getName()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///io/druid/data/input/impl/JSONPathFieldSpec/getExpr()|",
      "|java+constructor:///io/druid/java/util/common/parsers/JSONPathParser$FieldSpec/JSONPathParser$FieldSpec(io.druid.java.util.common.parsers.JSONPathParser$FieldType,java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/druid/data/input/impl/JSONPathFieldType/ordinal()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/druid/data/input/impl/JSONPathFieldSpec/getType()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///io/druid/data/input/impl/JSONPathFieldSpec/getName()|"
    ],
    "affectedLib": "io.druid:java-util:0.10.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.9.2",
    "coordinatesV2": "io.druid:druid-api:0.10.0",
    "caller": "|java+method:///io/druid/data/input/impl/DimensionsSpec/verify(java.util.List)|",
    "called": "|java+method:///io/druid/java/util/common/parsers/ParserUtils/validateFields(java.lang.Iterable)|",
    "v1Body": [
      "|java+method:///com/google/common/collect/Lists/transform(java.util.List,com.google.common.base.Function)|",
      "|java+method:///com/google/common/collect/Sets$SetView/isEmpty()|",
      "|java+method:///com/google/common/collect/Sets/newHashSet(java.lang.Iterable)|",
      "|java+method:///io/druid/data/input/impl/DimensionsSpec/getDimensionNames()|",
      "|java+method:///com/google/common/collect/Sets/intersection(java.util.Set,java.util.Set)|",
      "|java+method:///com/metamx/common/parsers/ParserUtils/validateFields(java.lang.Iterable)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///com/google/common/collect/Iterables/concat(java.lang.Iterable,java.lang.Iterable)|",
      "|java+constructor:///io/druid/data/input/impl/DimensionsSpec$4/DimensionsSpec$4(io.druid.data.input.impl.DimensionsSpec)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Lists/transform(java.util.List,com.google.common.base.Function)|",
      "|java+method:///com/google/common/collect/Sets$SetView/isEmpty()|",
      "|java+method:///com/google/common/collect/Sets/newHashSet(java.lang.Iterable)|",
      "|java+method:///io/druid/data/input/impl/DimensionsSpec/getDimensionNames()|",
      "|java+method:///io/druid/java/util/common/parsers/ParserUtils/validateFields(java.lang.Iterable)|",
      "|java+method:///com/google/common/collect/Sets/intersection(java.util.Set,java.util.Set)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///com/google/common/collect/Iterables/concat(java.lang.Iterable,java.lang.Iterable)|",
      "|java+constructor:///io/druid/data/input/impl/DimensionsSpec$4/DimensionsSpec$4(io.druid.data.input.impl.DimensionsSpec)|"
    ],
    "affectedLib": "io.druid:java-util:0.10.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.9.2",
    "coordinatesV2": "io.druid:druid-api:0.10.0",
    "caller": "|java+method:///io/druid/data/input/impl/JavaScriptParseSpec/makeParser()|",
    "called": "|java+constructor:///io/druid/java/util/common/parsers/JavaScriptParser/JavaScriptParser(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///com/metamx/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/js/JavaScriptConfig/isDisabled()|",
      "|java+constructor:///com/metamx/common/parsers/JavaScriptParser/JavaScriptParser(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/js/JavaScriptConfig/isEnabled()|",
      "|java+constructor:///io/druid/java/util/common/parsers/JavaScriptParser/JavaScriptParser(java.lang.String)|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "io.druid:java-util:0.10.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.9.2",
    "coordinatesV2": "io.druid:druid-api:0.10.0",
    "caller": "|java+method:///io/druid/data/input/impl/JSONLowercaseParseSpec/makeParser()|",
    "called": "|java+constructor:///io/druid/java/util/common/parsers/JSONToLowerParser/JSONToLowerParser(com.fasterxml.jackson.databind.ObjectMapper,java.lang.Iterable,java.lang.Iterable)|",
    "v1Body": [
      "|java+constructor:///com/metamx/common/parsers/JSONToLowerParser/JSONToLowerParser(com.fasterxml.jackson.databind.ObjectMapper,java.lang.Iterable,java.lang.Iterable)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/java/util/common/parsers/JSONToLowerParser/JSONToLowerParser(com.fasterxml.jackson.databind.ObjectMapper,java.lang.Iterable,java.lang.Iterable)|"
    ],
    "affectedLib": "io.druid:java-util:0.10.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.9.2",
    "coordinatesV2": "io.druid:druid-api:0.10.0",
    "caller": "|java+method:///io/druid/utils/CompressionUtils/zip(java.io.File,java.io.OutputStream)|",
    "called": "|java+method:///io/druid/java/util/common/CompressionUtils/zip(java.io.File,java.io.OutputStream)|",
    "v1Body": [
      "|java+method:///com/metamx/common/CompressionUtils/zip(java.io.File,java.io.OutputStream)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/java/util/common/CompressionUtils/zip(java.io.File,java.io.OutputStream)|"
    ],
    "affectedLib": "io.druid:java-util:0.10.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.9.2",
    "coordinatesV2": "io.druid:druid-api:0.10.0",
    "caller": "|java+method:///io/druid/guice/LifecycleScope$1/get()|",
    "called": "|java+method:///io/druid/java/util/common/lifecycle/Lifecycle/addMaybeStartManagedInstance(java.lang.Object,io.druid.java.util.common.lifecycle.Lifecycle$Stage)|",
    "v1Body": [
      "|java+method:///com/google/inject/Provider/get()|",
      "|java+method:///io/druid/guice/LifecycleScope/access$300()|",
      "|java+method:///io/druid/guice/LifecycleScope/access$200(io.druid.guice.LifecycleScope)|",
      "|java+method:///io/druid/guice/LifecycleScope/access$100(io.druid.guice.LifecycleScope)|",
      "|java+method:///io/druid/guice/LifecycleScope/access$000(io.druid.guice.LifecycleScope)|",
      "|java+method:///com/metamx/common/lifecycle/Lifecycle/addMaybeStartManagedInstance(java.lang.Object,com.metamx.common.lifecycle.Lifecycle$Stage)|",
      "|java+method:///com/metamx/common/logger/Logger/warn(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/add(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///com/google/inject/Provider/get()|",
      "|java+method:///io/druid/guice/LifecycleScope/access$300()|",
      "|java+method:///io/druid/guice/LifecycleScope/access$200(io.druid.guice.LifecycleScope)|",
      "|java+method:///io/druid/guice/LifecycleScope/access$100(io.druid.guice.LifecycleScope)|",
      "|java+method:///io/druid/guice/LifecycleScope/access$000(io.druid.guice.LifecycleScope)|",
      "|java+method:///io/druid/java/util/common/lifecycle/Lifecycle/addMaybeStartManagedInstance(java.lang.Object,io.druid.java.util.common.lifecycle.Lifecycle$Stage)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///io/druid/java/util/common/logger/Logger/warn(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "io.druid:java-util:0.10.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.9.2",
    "coordinatesV2": "io.druid:druid-api:0.10.0",
    "caller": "|java+method:///io/druid/data/input/Rows/toCaseInsensitiveInputRow(io.druid.data.input.Row,java.util.List)|",
    "called": "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+constructor:///com/metamx/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/TreeMap/putAll(java.util.Map)|",
      "|java+constructor:///io/druid/data/input/MapBasedInputRow/MapBasedInputRow(org.joda.time.DateTime,java.util.List,java.util.Map)|",
      "|java+method:///io/druid/data/input/MapBasedRow/getTimestamp()|",
      "|java+method:///com/google/common/collect/Maps/newTreeMap(java.util.Comparator)|",
      "|java+method:///io/druid/data/input/MapBasedRow/getEvent()|"
    ],
    "v2Body": [
      "|java+method:///java/util/TreeMap/putAll(java.util.Map)|",
      "|java+constructor:///io/druid/data/input/MapBasedInputRow/MapBasedInputRow(org.joda.time.DateTime,java.util.List,java.util.Map)|",
      "|java+method:///io/druid/data/input/MapBasedRow/getTimestamp()|",
      "|java+method:///com/google/common/collect/Maps/newTreeMap(java.util.Comparator)|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/data/input/MapBasedRow/getEvent()|"
    ],
    "affectedLib": "io.druid:java-util:0.10.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.9.2",
    "coordinatesV2": "io.druid:druid-api:0.10.0",
    "caller": "|java+constructor:///io/druid/data/input/impl/TimestampSpec/TimestampSpec(java.lang.String,java.lang.String,org.joda.time.DateTime)|",
    "called": "|java+method:///io/druid/java/util/common/parsers/TimestampParser/createObjectTimestampParser(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/metamx/common/parsers/TimestampParser/createObjectTimestampParser(java.lang.String)|",
      "|java+constructor:///io/druid/data/input/impl/TimestampSpec$ParseCtx/TimestampSpec$ParseCtx(io.druid.data.input.impl.TimestampSpec$1)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///io/druid/java/util/common/parsers/TimestampParser/createObjectTimestampParser(java.lang.String)|",
      "|java+constructor:///io/druid/data/input/impl/TimestampSpec$ParseCtx/TimestampSpec$ParseCtx(io.druid.data.input.impl.TimestampSpec$1)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "io.druid:java-util:0.10.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.9.2",
    "coordinatesV2": "io.druid:druid-api:0.10.0",
    "caller": "|java+method:///io/druid/tasklogs/NoopTaskLogs/pushTaskLog(java.lang.String,java.io.File)|",
    "called": "|java+method:///io/druid/java/util/common/logger/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///com/metamx/common/logger/Logger/info(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/java/util/common/logger/Logger/info(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "io.druid:java-util:0.10.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-api:0.9.2",
    "coordinatesV2": "io.druid:druid-api:0.10.0",
    "caller": "|java+method:///io/druid/guice/JsonConfigurator/configurate(java.util.Properties,java.lang.String,java.lang.Class)|",
    "called": "|java+method:///io/druid/java/util/common/logger/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///java/util/Properties/stringPropertyNames()|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)|",
      "|java+method:///java/lang/Class/getDeclaredField(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///javax/validation/ConstraintViolation/getMessage()|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/lang/reflect/Field/getAnnotation(java.lang.Class)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///javax/validation/ConstraintViolation/getPropertyPath()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(java.lang.String,java.lang.Class)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/lang/IllegalArgumentException/getMessage()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsString(java.lang.Object)|",
      "|java+method:///io/druid/guice/JsonConfigurator/verifyClazzIsConfigurable(java.lang.Class)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///com/metamx/common/logger/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/metamx/common/logger/Logger/info(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/fasterxml/jackson/annotation/JsonProperty/value()|",
      "|java+method:///javax/validation/ConstraintViolation/getRootBeanClass()|",
      "|java+method:///javax/validation/Path$Node/getName()|",
      "|java+method:///javax/validation/Path/iterator()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+constructor:///com/google/inject/ProvisionException/ProvisionException(java.lang.Iterable)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///com/google/inject/ProvisionException/ProvisionException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///javax/validation/Path$Node/getKind()|",
      "|java+constructor:///io/druid/guice/JsonConfigurator$1/JsonConfigurator$1(io.druid.guice.JsonConfigurator,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///javax/validation/Validator/validate(java.lang.Object,java.lang.Class%5B%5D)|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Properties/stringPropertyNames()|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)|",
      "|java+method:///java/lang/Class/getDeclaredField(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsString(java.lang.Object)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///javax/validation/ConstraintViolation/getMessage()|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///io/druid/guice/JsonConfigurator/verifyClazzIsConfigurable(com.fasterxml.jackson.databind.ObjectMapper,java.lang.Class)|",
      "|java+method:///java/lang/reflect/Field/getAnnotation(java.lang.Class)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///javax/validation/ConstraintViolation/getPropertyPath()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(java.lang.String,java.lang.Class)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/lang/IllegalArgumentException/getMessage()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/fasterxml/jackson/annotation/JsonProperty/value()|",
      "|java+method:///javax/validation/ConstraintViolation/getRootBeanClass()|",
      "|java+method:///javax/validation/Path$Node/getName()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/druid/java/util/common/logger/Logger/info(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/java/util/common/logger/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///javax/validation/Path/iterator()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+constructor:///com/google/inject/ProvisionException/ProvisionException(java.lang.Iterable)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///com/google/inject/ProvisionException/ProvisionException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///javax/validation/Path$Node/getKind()|",
      "|java+constructor:///io/druid/guice/JsonConfigurator$1/JsonConfigurator$1(io.druid.guice.JsonConfigurator,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///javax/validation/Validator/validate(java.lang.Object,java.lang.Class%5B%5D)|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|"
    ],
    "affectedLib": "io.druid:java-util:0.10.0",
    "change": "ADDED"
  }
]