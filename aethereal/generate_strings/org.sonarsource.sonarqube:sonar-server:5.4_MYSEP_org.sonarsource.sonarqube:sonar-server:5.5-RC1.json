[
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.4",
    "caller": "|java+method:///org/sonar/server/computation/source/SymbolsLineReader/buildSymbolsPerLine(java.util.List)|",
    "called": "|java+method:///org/sonar/batch/protocol/output/BatchReport$Symbol/getDeclaration()|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Symbol/getReferenceList()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/common/collect/HashMultimap/create()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/server/computation/source/SymbolsLineReader/putForTextRange(com.google.common.collect.SetMultimap,org.sonar.batch.protocol.output.BatchReport$Symbol,org.sonar.batch.protocol.output.BatchReport$TextRange)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Symbol/getDeclaration()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/server/computation/source/SymbolsLineReader/putForTextRange(com.google.common.collect.SetMultimap,org.sonar.scanner.protocol.output.ScannerReport$Symbol,org.sonar.scanner.protocol.output.ScannerReport$TextRange)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Symbol/getDeclaration()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Symbol/getReferenceList()|",
      "|java+method:///com/google/common/collect/HashMultimap/create()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-batch-protocol:5.4",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.4",
    "caller": "|java+method:///org/sonar/server/computation/batch/BatchReportReaderImpl/readFileSource(int)|",
    "called": "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readFileSource(int)|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/commons/io/IOUtils/lineIterator(java.io.InputStream,java.nio.charset.Charset)|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readFileSource(int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/commons/io/FileUtils/openInputStream(java.io.File)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/sonar/server/computation/batch/BatchReportReaderImpl$CloseableLineIterator/BatchReportReaderImpl$CloseableLineIterator(org.apache.commons.io.LineIterator)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/commons/io/IOUtils/lineIterator(java.io.InputStream,java.nio.charset.Charset)|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readFileSource(int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/commons/io/FileUtils/openInputStream(java.io.File)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/sonar/server/computation/batch/BatchReportReaderImpl$CloseableLineIterator/BatchReportReaderImpl$CloseableLineIterator(org.apache.commons.io.LineIterator)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-batch-protocol:5.4",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.4",
    "caller": "|java+method:///org/sonar/server/computation/source/SymbolsLineReader/processSymbols(org.sonar.db.protobuf.DbFileSources$Line$Builder)|",
    "called": "|java+method:///org/sonar/batch/protocol/output/BatchReport$Symbol/getDeclaration()|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Symbol/getReferenceList()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Line$Builder/getSource()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Symbol/getDeclaration()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Line$Builder/setSymbols(java.lang.String)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Collections/sort(java.util.List,java.util.Comparator)|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Line$Builder/getLine()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/google/common/collect/SetMultimap/get(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/length()|",
      "|java+method:///org/sonar/server/computation/source/SymbolsLineReader/appendSymbol(java.lang.StringBuilder,org.sonar.batch.protocol.output.BatchReport$TextRange,int,int,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Symbol/getReferenceList()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Line$Builder/getSource()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/StringBuilder/length()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/sonar/server/computation/source/SymbolsLineReader/appendSymbol(java.lang.StringBuilder,org.sonar.scanner.protocol.output.ScannerReport$TextRange,int,int,java.lang.String)|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Line$Builder/setSymbols(java.lang.String)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Symbol/getDeclaration()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Collections/sort(java.util.List,java.util.Comparator)|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Line$Builder/getLine()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/google/common/collect/SetMultimap/get(java.lang.Object)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-batch-protocol:5.4",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.4",
    "caller": "|java+method:///org/sonar/server/computation/step/PersistTestsStep$TestDepthTraversalTypeAwareVisitor/loadCoverageDetails(int)|",
    "called": "|java+method:///org/sonar/batch/protocol/output/BatchReport$CoverageDetail/getTestName()|",
    "v1Body": [
      "|java+method:///org/sonar/server/computation/step/PersistTestsStep/access$400(org.sonar.server.computation.step.PersistTestsStep)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+method:///java/util/List/removeAll(java.util.Collection)|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readCoverageDetails(int)|",
      "|java+method:///com/google/common/collect/Table/get(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$CoverageDetail/getCoveredFileList()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$CoveredFile$Builder/setFileUuid(java.lang.String)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$CoverageDetail$CoveredFile/getFileRef()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$CoverageDetail/getTestName()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$CoveredFile$Builder/getCoveredLineList()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$CoveredFile$Builder/addAllCoveredLine(java.lang.Iterable)|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$CoveredFile/newBuilder()|",
      "|java+method:///com/google/common/collect/Table/put(java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///com/google/common/collect/HashBasedTable/create()|",
      "|java+method:///org/sonar/server/computation/step/PersistTestsStep$TestDepthTraversalTypeAwareVisitor/getUuid(int)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$CoverageDetail$CoveredFile/getCoveredLineList()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/computation/step/PersistTestsStep/access$400(org.sonar.server.computation.step.PersistTestsStep)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$CoverageDetail$CoveredFile/getCoveredLineList()|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readCoverageDetails(int)|",
      "|java+method:///com/google/common/collect/Table/get(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$CoverageDetail$CoveredFile/getFileRef()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$CoveredFile$Builder/setFileUuid(java.lang.String)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$CoverageDetail/getTestName()|",
      "|java+method:///java/util/List/removeAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$CoveredFile$Builder/getCoveredLineList()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$CoveredFile$Builder/addAllCoveredLine(java.lang.Iterable)|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$CoveredFile/newBuilder()|",
      "|java+method:///com/google/common/collect/Table/put(java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$CoverageDetail/getCoveredFileList()|",
      "|java+method:///com/google/common/collect/HashBasedTable/create()|",
      "|java+method:///org/sonar/server/computation/step/PersistTestsStep$TestDepthTraversalTypeAwareVisitor/getUuid(int)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-batch-protocol:5.4",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.4",
    "caller": "|java+constructor:///org/sonar/server/computation/batch/BatchReportReaderImpl/BatchReportReaderImpl(org.sonar.server.computation.batch.BatchReportDirectoryHolder)|",
    "called": "|java+constructor:///org/sonar/batch/protocol/output/BatchReportReader/BatchReportReader(java.io.File)|",
    "v1Body": [
      "|java+method:///org/sonar/server/computation/batch/BatchReportDirectoryHolder/getDirectory()|",
      "|java+constructor:///org/sonar/batch/protocol/output/BatchReportReader/BatchReportReader(java.io.File)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/computation/batch/BatchReportDirectoryHolder/getDirectory()|",
      "|java+constructor:///org/sonar/scanner/protocol/output/ScannerReportReader/ScannerReportReader(java.io.File)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-batch-protocol:5.4",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.4",
    "caller": "|java+method:///org/sonar/server/computation/step/PersistTestsStep$TestDepthTraversalTypeAwareVisitor/buildDbTests(int)|",
    "called": "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/getMsg()|",
    "v1Body": [
      "|java+method:///org/sonar/core/util/Uuids/create()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test/newBuilder()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/getName()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/hasMsg()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/getStacktrace()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/hasStacktrace()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/hasDurationInMs()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$TestStatus/valueOf(java.lang.String)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/getName()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setExecutionTimeMs(long)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/hasStatus()|",
      "|java+method:///org/sonar/server/computation/step/PersistTestsStep/access$400(org.sonar.server.computation.step.PersistTestsStep)|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readTests(int)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setStatus(org.sonar.db.protobuf.DbFileSources$Test$TestStatus)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/getDurationInMs()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/getMsg()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setName(java.lang.String)|",
      "|java+method:///com/google/common/collect/ArrayListMultimap/create()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setMsg(java.lang.String)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+method:///org/sonar/batch/protocol/Constants$TestStatus/name()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setUuid(java.lang.String)|",
      "|java+method:///com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setStacktrace(java.lang.String)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/getStatus()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Test/getDurationInMs()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test/newBuilder()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/getName()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setStacktrace(java.lang.String)|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setExecutionTimeMs(long)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Test/getStacktrace()|",
      "|java+method:///org/sonar/core/util/Uuids/create()|",
      "|java+method:///org/sonar/server/computation/step/PersistTestsStep/access$400(org.sonar.server.computation.step.PersistTestsStep)|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readTests(int)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setStatus(org.sonar.db.protobuf.DbFileSources$Test$TestStatus)|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setName(java.lang.String)|",
      "|java+method:///com/google/common/collect/ArrayListMultimap/create()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setMsg(java.lang.String)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Test$TestStatus/name()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Test/getName()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Test/getMsg()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Test/getStatus()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$TestStatus/valueOf(java.lang.String)|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setUuid(java.lang.String)|",
      "|java+method:///com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-batch-protocol:5.4",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.4",
    "caller": "|java+method:///org/sonar/server/computation/source/HighlightingLineReader/processHighlighting(java.util.Iterator,java.lang.StringBuilder,org.sonar.db.protobuf.DbFileSources$Line$Builder)|",
    "called": "|java+method:///org/sonar/batch/protocol/output/BatchReport$SyntaxHighlighting/getRange()|",
    "v1Body": [
      "|java+method:///java/util/Iterator/remove()|",
      "|java+method:///org/sonar/server/computation/source/RangeOffsetConverter/offsetToString(org.sonar.batch.protocol.output.BatchReport$TextRange,int,int)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$SyntaxHighlighting/getType()|",
      "|java+method:///org/sonar/server/computation/source/HighlightingLineReader/getCssClass(org.sonar.batch.protocol.Constants$HighlightingType)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$TextRange/getEndLine()|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$TextRange/getStartLine()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Line$Builder/getSource()|",
      "|java+method:///java/lang/StringBuilder/length()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$SyntaxHighlighting/getRange()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Line$Builder/getLine()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/remove()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$TextRange/getStartLine()|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$SyntaxHighlightingRule/getRange()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Line$Builder/getSource()|",
      "|java+method:///org/sonar/server/computation/source/RangeOffsetConverter/offsetToString(org.sonar.scanner.protocol.output.ScannerReport$TextRange,int,int)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$TextRange/getEndLine()|",
      "|java+method:///org/sonar/server/computation/source/HighlightingLineReader/getCssClass(org.sonar.scanner.protocol.output.ScannerReport$SyntaxHighlightingRule$HighlightingType)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Line$Builder/getLine()|",
      "|java+method:///java/lang/StringBuilder/length()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$SyntaxHighlightingRule/getType()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-batch-protocol:5.4",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.4",
    "caller": "|java+method:///org/sonar/server/computation/batch/BatchReportReaderImpl/readComponentSymbols(int)|",
    "called": "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readComponentSymbols(int)|",
    "v1Body": [
      "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readComponentSymbols(int)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readComponentSymbols(int)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-batch-protocol:5.4",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.4",
    "caller": "|java+method:///org/sonar/server/computation/batch/BatchReportReaderImpl/readActiveRules()|",
    "called": "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readActiveRules()|",
    "v1Body": [
      "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readActiveRules()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readActiveRules()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-batch-protocol:5.4",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.4",
    "caller": "|java+method:///org/sonar/server/batch/UsersAction/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/batch/protocol/input/BatchInput$User/newBuilder()|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/user/index/UserIndex/selectUsersForBatch(java.util.List)|",
      "|java+method:///org/sonar/server/user/UserSession/checkLoggedIn()|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/output()|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsStrings(java.lang.String)|",
      "|java+method:///java/io/OutputStream/close()|",
      "|java+method:///org/sonar/server/batch/UsersAction/handleUser(org.sonar.server.user.index.UserDoc,org.sonar.batch.protocol.input.BatchInput$User$Builder,java.io.OutputStream)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/setMediaType(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Response/stream()|",
      "|java+method:///org/sonar/batch/protocol/input/BatchInput$User/newBuilder()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/user/index/UserIndex/selectUsersForBatch(java.util.List)|",
      "|java+method:///org/sonar/server/user/UserSession/checkLoggedIn()|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/output()|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsStrings(java.lang.String)|",
      "|java+method:///java/io/OutputStream/close()|",
      "|java+method:///org/sonar/server/batch/UsersAction/handleUser(org.sonar.server.user.index.UserDoc,org.sonar.scanner.protocol.input.ScannerInput$User$Builder,java.io.OutputStream)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/setMediaType(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Response/stream()|",
      "|java+method:///org/sonar/scanner/protocol/input/ScannerInput$User/newBuilder()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-batch-protocol:5.4",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.4",
    "caller": "|java+method:///org/sonar/server/computation/step/ValidateProjectStep$ValidateProjectsVisitor/validateBatchKey(org.sonar.server.computation.component.Component)|",
    "called": "|java+method:///org/sonar/batch/protocol/output/BatchReport$Component/getKey()|",
    "v1Body": [
      "|java+method:///org/sonar/core/component/ComponentKeys/isValidModuleKey(java.lang.String)|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readComponent(int)|",
      "|java+method:///org/sonar/server/computation/step/ValidateProjectStep/access$300(org.sonar.server.computation.step.ValidateProjectStep)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getRef()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Component/getKey()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/core/component/ComponentKeys/isValidModuleKey(java.lang.String)|",
      "|java+method:///org/sonar/server/computation/step/ValidateProjectStep/access$300(org.sonar.server.computation.step.ValidateProjectStep)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getRef()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readComponent(int)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Component/getKey()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-batch-protocol:5.4",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.4",
    "caller": "|java+method:///org/sonar/server/computation/batch/BatchReportReaderImpl/readComponentSyntaxHighlighting(int)|",
    "called": "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readComponentSyntaxHighlighting(int)|",
    "v1Body": [
      "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readComponentSyntaxHighlighting(int)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readComponentSyntaxHighlighting(int)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-batch-protocol:5.4",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.4",
    "caller": "|java+method:///org/sonar/server/computation/batch/BatchReportReaderImpl/readMetadata()|",
    "called": "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readMetadata()|",
    "v1Body": [
      "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readMetadata()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readMetadata()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-batch-protocol:5.4",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.4",
    "caller": "|java+method:///org/sonar/server/computation/batch/BatchReportReaderImpl/readCpdTextBlocks(int)|",
    "called": "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readCpdTextBlocks(int)|",
    "v1Body": [
      "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readCpdTextBlocks(int)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readCpdTextBlocks(int)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-batch-protocol:5.4",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.4",
    "caller": "|java+method:///org/sonar/server/computation/source/HighlightingLineReader/getNextHighlightingMatchingLine(int)|",
    "called": "|java+method:///org/sonar/batch/protocol/output/BatchReport$SyntaxHighlighting/getRange()|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$SyntaxHighlighting/getRange()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$TextRange/getStartLine()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$TextRange/getStartLine()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$SyntaxHighlightingRule/getRange()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-batch-protocol:5.4",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.4",
    "caller": "|java+method:///org/sonar/server/computation/batch/BatchReportReaderImpl/readComponentCoverage(int)|",
    "called": "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readComponentCoverage(int)|",
    "v1Body": [
      "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readComponentCoverage(int)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readComponentCoverage(int)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-batch-protocol:5.4",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.4",
    "caller": "|java+method:///org/sonar/server/computation/step/PersistProjectLinksStep$ProjectLinkVisitor$1/apply(org.sonar.db.component.ComponentLinkDto)|",
    "called": "|java+method:///org/sonar/batch/protocol/output/BatchReport$ComponentLink/getType()|",
    "v1Body": [
      "|java+method:///org/sonar/db/component/ComponentLinkDto/getType()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/sonar/server/computation/step/PersistProjectLinksStep$ProjectLinkVisitor/access$300(org.sonar.server.computation.step.PersistProjectLinksStep$ProjectLinkVisitor,org.sonar.batch.protocol.Constants$ComponentLinkType)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$ComponentLink/getType()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$ComponentLink/getType()|",
      "|java+method:///org/sonar/server/computation/step/PersistProjectLinksStep$ProjectLinkVisitor/access$300(org.sonar.server.computation.step.PersistProjectLinksStep$ProjectLinkVisitor,org.sonar.scanner.protocol.output.ScannerReport$ComponentLink$ComponentLinkType)|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/getType()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-batch-protocol:5.4",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.4",
    "caller": "|java+method:///org/sonar/server/computation/batch/BatchReportReaderImpl/readComponent(int)|",
    "called": "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readComponent(int)|",
    "v1Body": [
      "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readComponent(int)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readComponent(int)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-batch-protocol:5.4",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.4",
    "caller": "|java+method:///org/sonar/server/computation/batch/BatchReportReaderImpl/readComponentIssues(int)|",
    "called": "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readComponentIssues(int)|",
    "v1Body": [
      "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readComponentIssues(int)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readComponentIssues(int)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-batch-protocol:5.4",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.4",
    "caller": "|java+method:///org/sonar/server/computation/batch/BatchReportReaderImpl/readComponentMeasures(int)|",
    "called": "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readComponentMeasures(int)|",
    "v1Body": [
      "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readComponentMeasures(int)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readComponentMeasures(int)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-batch-protocol:5.4",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.4",
    "caller": "|java+method:///org/sonar/server/computation/batch/BatchReportReaderImpl/readChangesets(int)|",
    "called": "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readChangesets(int)|",
    "v1Body": [
      "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readChangesets(int)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readChangesets(int)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-batch-protocol:5.4",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.4",
    "caller": "|java+method:///org/sonar/server/computation/batch/BatchReportReaderImpl/readTests(int)|",
    "called": "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readTests(int)|",
    "v1Body": [
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/emptyCloseableIterator()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readTests(int)|",
      "|java+constructor:///org/sonar/server/computation/batch/BatchReportReaderImpl$ParserCloseableIterator/BatchReportReaderImpl$ParserCloseableIterator(com.google.protobuf.Parser,java.io.FileInputStream)|",
      "|java+method:///org/apache/commons/io/FileUtils/openInputStream(java.io.File)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/parser()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Test/parser()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readTests(int)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/emptyCloseableIterator()|",
      "|java+constructor:///org/sonar/server/computation/batch/BatchReportReaderImpl$ParserCloseableIterator/BatchReportReaderImpl$ParserCloseableIterator(com.google.protobuf.Parser,java.io.FileInputStream)|",
      "|java+method:///org/apache/commons/io/FileUtils/openInputStream(java.io.File)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-batch-protocol:5.4",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.4",
    "caller": "|java+method:///org/sonar/server/computation/batch/BatchReportReaderImpl/readComponentDuplications(int)|",
    "called": "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readComponentDuplications(int)|",
    "v1Body": [
      "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readComponentDuplications(int)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readComponentDuplications(int)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-batch-protocol:5.4",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.4",
    "caller": "|java+method:///org/sonar/server/batch/IssuesAction/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/batch/protocol/input/BatchInput$ServerIssue/newBuilder()|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/batch/IssuesAction/handleIssue(org.sonar.server.issue.index.IssueDoc,org.sonar.batch.protocol.input.BatchInput$ServerIssue$Builder,java.util.Map,java.io.OutputStream)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/component/ComponentFinder/getByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/batch/protocol/input/BatchInput$ServerIssue/newBuilder()|",
      "|java+method:///org/sonar/server/batch/IssuesAction/keysByUUid(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/api/server/ws/Response/stream()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/output()|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/selectIssuesForBatch(org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/server/user/UserSession/checkComponentPermission(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/setMediaType(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/batch/IssuesAction/handleIssue(org.sonar.server.issue.index.IssueDoc,org.sonar.scanner.protocol.input.ScannerInput$ServerIssue$Builder,java.util.Map,java.io.OutputStream)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/component/ComponentFinder/getByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/scanner/protocol/input/ScannerInput$ServerIssue/newBuilder()|",
      "|java+method:///org/sonar/server/batch/IssuesAction/keysByUUid(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/api/server/ws/Response/stream()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/output()|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/selectIssuesForBatch(org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/server/user/UserSession/checkComponentPermission(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/setMediaType(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-batch-protocol:5.4",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.4",
    "caller": "|java+method:///org/sonar/server/computation/step/LoadReportAnalysisMetadataHolderStep/execute()|",
    "called": "|java+method:///org/sonar/batch/protocol/output/BatchReport$Metadata/getBranch()|",
    "v1Body": [
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Metadata/getRootComponentRef()|",
      "|java+method:///org/sonar/server/computation/analysis/MutableAnalysisMetadataHolder/setAnalysisDate(long)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Metadata/getCrossProjectDuplicationActivated()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Metadata/getBranch()|",
      "|java+method:///org/sonar/server/computation/step/LoadReportAnalysisMetadataHolderStep/checkProjectKeyConsistency(org.sonar.batch.protocol.output.BatchReport$Metadata)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Metadata/hasBranch()|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readMetadata()|",
      "|java+method:///org/sonar/server/computation/analysis/MutableAnalysisMetadataHolder/setCrossProjectDuplicationEnabled(boolean)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Metadata/hasCrossProjectDuplicationActivated()|",
      "|java+method:///org/sonar/server/computation/analysis/MutableAnalysisMetadataHolder/setRootComponentRef(int)|",
      "|java+method:///org/sonar/server/computation/analysis/MutableAnalysisMetadataHolder/setBranch(java.lang.String)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Metadata/getAnalysisDate()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/computation/analysis/MutableAnalysisMetadataHolder/setQProfilesByLanguage(java.util.Map)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Metadata/getBranch()|",
      "|java+method:///org/sonar/server/computation/analysis/MutableAnalysisMetadataHolder/setAnalysisDate(long)|",
      "|java+method:///org/sonar/server/computation/analysis/MutableAnalysisMetadataHolder/setRootComponentRef(int)|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readMetadata()|",
      "|java+method:///org/sonar/server/computation/analysis/MutableAnalysisMetadataHolder/setBranch(java.lang.String)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Metadata/getRootComponentRef()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Metadata/getQprofilesPerLanguage()|",
      "|java+method:///org/sonar/server/computation/analysis/MutableAnalysisMetadataHolder/setCrossProjectDuplicationEnabled(boolean)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Metadata/getCrossProjectDuplicationActivated()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Metadata/getAnalysisDate()|",
      "|java+method:///com/google/common/collect/Maps/transformValues(java.util.Map,com.google.common.base.Function)|",
      "|java+method:///org/sonar/server/computation/step/LoadReportAnalysisMetadataHolderStep/checkProjectKeyConsistency(org.sonar.scanner.protocol.output.ScannerReport$Metadata)|",
      "|java+method:///org/elasticsearch/common/lang3/StringUtils/isNotEmpty(java.lang.CharSequence)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-batch-protocol:5.4",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.4",
    "caller": "|java+method:///org/sonar/server/computation/scm/ReportScmInfo$LineIndexToChangeset/apply(java.lang.Integer)|",
    "called": "|java+method:///org/sonar/batch/protocol/output/BatchReport$Changesets/getChangesetIndexByLine(int)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Changesets/getChangeset(int)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/server/computation/scm/ReportScmInfo$LineIndexToChangeset/convert(org.sonar.batch.protocol.output.BatchReport$Changesets$Changeset,int)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Changesets/getChangesetIndexByLine(int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/server/computation/scm/ReportScmInfo$LineIndexToChangeset/convert(org.sonar.scanner.protocol.output.ScannerReport$Changesets$Changeset,int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Changesets/getChangesetIndexByLine(int)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Changesets/getChangeset(int)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-batch-protocol:5.4",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.4",
    "caller": "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/loadIssues()|",
    "called": "|java+method:///org/sonar/batch/protocol/output/BatchReport$Issue/getRuleRepository()|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory/access$300(org.sonar.server.computation.issue.TrackerRawInputFactory)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/isIssueOnUnsupportedCommonRule(org.sonar.batch.protocol.output.BatchReport$Issue)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/server/computation/issue/commonrule/CommonRuleEngine/process(org.sonar.server.computation.component.Component)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Issue/getRuleRepository()|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readComponentIssues(int)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory/access$200(org.sonar.server.computation.issue.TrackerRawInputFactory)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getRef()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/api/utils/log/Loggers/get(java.lang.Class)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/init(org.sonar.core.issue.DefaultIssue)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/getLineHashSequence()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Issue/getRuleKey()|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/toIssue(org.sonar.core.issue.tracking.LineHashSequence,org.sonar.batch.protocol.output.BatchReport$Issue)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/sonar/server/computation/issue/commonrule/CommonRuleEngine/process(org.sonar.server.computation.component.Component)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory/access$300(org.sonar.server.computation.issue.TrackerRawInputFactory)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readComponentIssues(int)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory/access$200(org.sonar.server.computation.issue.TrackerRawInputFactory)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getRef()|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/toIssue(org.sonar.core.issue.tracking.LineHashSequence,org.sonar.scanner.protocol.output.ScannerReport$Issue)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Issue/getRuleKey()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Issue/getRuleRepository()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/api/utils/log/Loggers/get(java.lang.Class)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/isIssueOnUnsupportedCommonRule(org.sonar.scanner.protocol.output.ScannerReport$Issue)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/init(org.sonar.core.issue.DefaultIssue)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/getLineHashSequence()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-batch-protocol:5.4",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.4",
    "caller": "|java+method:///org/sonar/server/batch/ProjectDataLoader/load(org.sonar.server.batch.ProjectDataQuery)|",
    "called": "|java+constructor:///org/sonar/batch/protocol/input/ProjectRepositories/ProjectRepositories()|",
    "v1Body": [
      "|java+method:///org/sonar/server/user/UserSession/hasComponentUuidPermission(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/db/component/ComponentDao/selectEnabledDescendantModules(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/getSettingsFromParents(org.sonar.db.component.ComponentDto,boolean,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/getProject(org.sonar.db.component.ComponentDto,org.sonar.db.DbSession)|",
      "|java+constructor:///org/sonar/server/batch/ProjectDataLoader$TreeModuleSettings/ProjectDataLoader$TreeModuleSettings(java.util.Map,java.util.Map,java.util.List,java.util.List,org.sonar.server.batch.ProjectDataLoader$1)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/addFileData(org.sonar.batch.protocol.input.ProjectRepositories,java.util.List,java.util.List)|",
      "|java+method:///org/sonar/batch/protocol/input/ProjectRepositories/setLastAnalysisDate(java.util.Date)|",
      "|java+method:///org/sonar/db/property/PropertiesDao/selectEnabledDescendantModuleProperties(java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/component/ComponentDto/uuid()|",
      "|java+method:///org/sonar/server/batch/ProjectDataQuery/getModuleKey()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/db/DbClient/componentDao()|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///org/sonar/server/batch/ProjectDataQuery/isIssuesMode()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/ws/WsUtils/checkFoundWithOptional(com.google.common.base.Optional,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///org/sonar/batch/protocol/input/ProjectRepositories/ProjectRepositories()|",
      "|java+method:///org/sonar/db/component/ComponentDto/getKey()|",
      "|java+method:///org/sonar/db/DbClient/propertiesDao()|",
      "|java+method:///org/sonar/db/component/ComponentDto/projectUuid()|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/searchFilesWithHashAndRevision(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/checkPermission(boolean,boolean,boolean)|",
      "|java+method:///org/sonar/db/component/ComponentDao/selectByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/addSettingsToChildrenModules(org.sonar.batch.protocol.input.ProjectRepositories,java.lang.String,java.util.Map,org.sonar.server.batch.ProjectDataLoader$TreeModuleSettings,boolean)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/addSettings(org.sonar.batch.protocol.input.ProjectRepositories,java.lang.String,java.util.Map)|",
      "|java+method:///org/sonar/db/component/ComponentDto/key()|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/moduleIdsByKey(java.util.List)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/moduleUuidsByKey(java.util.List)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/component/ComponentDto/getKey()|",
      "|java+method:///org/sonar/db/component/ComponentDao/selectEnabledDescendantModules(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/getSettingsFromParents(org.sonar.db.component.ComponentDto,boolean,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/getProject(org.sonar.db.component.ComponentDto,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/scanner/protocol/input/ProjectRepositories/setLastAnalysisDate(java.util.Date)|",
      "|java+constructor:///org/sonar/server/batch/ProjectDataLoader$TreeModuleSettings/ProjectDataLoader$TreeModuleSettings(java.util.Map,java.util.Map,java.util.List,java.util.List,org.sonar.server.batch.ProjectDataLoader$1)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/addSettingsToChildrenModules(org.sonar.scanner.protocol.input.ProjectRepositories,java.lang.String,java.util.Map,org.sonar.server.batch.ProjectDataLoader$TreeModuleSettings,boolean)|",
      "|java+method:///org/sonar/db/property/PropertiesDao/selectEnabledDescendantModuleProperties(java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/batch/ProjectDataQuery/getModuleKey()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/db/component/ComponentDto/key()|",
      "|java+method:///org/sonar/db/DbClient/componentDao()|",
      "|java+constructor:///org/sonar/scanner/protocol/input/ProjectRepositories/ProjectRepositories()|",
      "|java+method:///org/sonar/server/user/UserSession/hasComponentUuidPermission(java.lang.String,java.lang.String)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///org/sonar/server/batch/ProjectDataQuery/isIssuesMode()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/ws/WsUtils/checkFoundWithOptional(com.google.common.base.Optional,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/db/DbClient/propertiesDao()|",
      "|java+method:///org/sonar/db/component/ComponentDto/projectUuid()|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/searchFilesWithHashAndRevision(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/addFileData(org.sonar.scanner.protocol.input.ProjectRepositories,java.util.List,java.util.List)|",
      "|java+method:///org/sonar/db/component/ComponentDto/uuid()|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/addSettings(org.sonar.scanner.protocol.input.ProjectRepositories,java.lang.String,java.util.Map)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/checkPermission(boolean,boolean,boolean)|",
      "|java+method:///org/sonar/db/component/ComponentDao/selectByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/moduleIdsByKey(java.util.List)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/moduleUuidsByKey(java.util.List)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-batch-protocol:5.4",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.4",
    "caller": "|java+method:///org/sonar/server/computation/batch/BatchReportReaderImpl/readCoverageDetails(int)|",
    "called": "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readCoverageDetails(int)|",
    "v1Body": [
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/emptyCloseableIterator()|",
      "|java+constructor:///org/sonar/server/computation/batch/BatchReportReaderImpl$ParserCloseableIterator/BatchReportReaderImpl$ParserCloseableIterator(com.google.protobuf.Parser,java.io.FileInputStream)|",
      "|java+method:///org/apache/commons/io/FileUtils/openInputStream(java.io.File)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$CoverageDetail/parser()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readCoverageDetails(int)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$CoverageDetail/parser()|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+constructor:///org/sonar/server/computation/batch/BatchReportReaderImpl$ParserCloseableIterator/BatchReportReaderImpl$ParserCloseableIterator(com.google.protobuf.Parser,java.io.FileInputStream)|",
      "|java+method:///org/apache/commons/io/FileUtils/openInputStream(java.io.File)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readCoverageDetails(int)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/emptyCloseableIterator()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-batch-protocol:5.4",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.4",
    "caller": "|java+method:///org/sonar/server/batch/GlobalAction/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/batch/protocol/input/GlobalRepositories/toJson()|",
    "v1Body": [
      "|java+constructor:///org/sonar/batch/protocol/input/GlobalRepositories/GlobalRepositories()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/user/UserSession/hasPermission(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/setMediaType(java.lang.String)|",
      "|java+method:///org/sonar/batch/protocol/input/GlobalRepositories/toJson()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/output()|",
      "|java+method:///org/sonar/server/batch/GlobalAction/addMetrics(org.sonar.batch.protocol.input.GlobalRepositories,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/user/UserSession/isLoggedIn()|",
      "|java+method:///org/sonar/server/batch/GlobalAction/addSettings(org.sonar.batch.protocol.input.GlobalRepositories,boolean,boolean,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/api/server/ws/Response/stream()|",
      "|java+method:///org/apache/commons/io/IOUtils/write(java.lang.String,java.io.OutputStream)|",
      "|java+constructor:///org/sonar/server/exceptions/ForbiddenException/ForbiddenException(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/batch/GlobalAction/addSettings(org.sonar.scanner.protocol.input.GlobalRepositories,boolean,boolean,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/setMediaType(java.lang.String)|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/output()|",
      "|java+constructor:///org/sonar/scanner/protocol/input/GlobalRepositories/GlobalRepositories()|",
      "|java+method:///org/sonar/server/user/UserSession/isLoggedIn()|",
      "|java+method:///org/sonar/server/batch/GlobalAction/addMetrics(org.sonar.scanner.protocol.input.GlobalRepositories,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/user/UserSession/hasPermission(java.lang.String)|",
      "|java+method:///org/sonar/scanner/protocol/input/GlobalRepositories/toJson()|",
      "|java+method:///org/sonar/api/server/ws/Response/stream()|",
      "|java+method:///org/apache/commons/io/IOUtils/write(java.lang.String,java.io.OutputStream)|",
      "|java+constructor:///org/sonar/server/exceptions/ForbiddenException/ForbiddenException(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-batch-protocol:5.4",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.4",
    "caller": "|java+method:///org/sonar/server/computation/step/PersistProjectLinksStep$ProjectLinkVisitor/mergeLinks(org.sonar.db.DbSession,java.lang.String,java.util.List,java.util.List)|",
    "called": "|java+method:///org/sonar/batch/protocol/output/BatchReport$ComponentLink/getType()|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbClient/componentLinkDao()|",
      "|java+constructor:///org/sonar/db/component/ComponentLinkDto/ComponentLinkDto()|",
      "|java+method:///org/sonar/server/computation/step/PersistProjectLinksStep/access$200(org.sonar.server.computation.step.PersistProjectLinksStep)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$ComponentLink/getHref()|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/getType()|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/getId()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/db/component/ComponentLinkDao/insert(org.sonar.db.DbSession,org.sonar.db.component.ComponentLinkDto)|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/setType(java.lang.String)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///com/google/common/collect/Iterables/find(java.lang.Iterable,com.google.common.base.Predicate,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/component/ComponentLinkDao/update(org.sonar.db.DbSession,org.sonar.db.component.ComponentLinkDto)|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/setComponentUuid(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/server/computation/step/PersistProjectLinksStep/access$400(org.sonar.server.computation.step.PersistProjectLinksStep)|",
      "|java+method:///org/sonar/api/i18n/I18n/message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/setName(java.lang.String)|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/setHref(java.lang.String)|",
      "|java+method:///com/google/common/collect/Sets/newHashSet()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/computation/step/PersistProjectLinksStep$ProjectLinkVisitor/convertType(org.sonar.batch.protocol.Constants$ComponentLinkType)|",
      "|java+method:///org/sonar/db/component/ComponentLinkDao/delete(org.sonar.db.DbSession,long)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+constructor:///org/sonar/server/computation/step/PersistProjectLinksStep$ProjectLinkVisitor$1/PersistProjectLinksStep$ProjectLinkVisitor$1(org.sonar.server.computation.step.PersistProjectLinksStep$ProjectLinkVisitor,org.sonar.batch.protocol.output.BatchReport$ComponentLink)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/util/List/contains(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$ComponentLink/getType()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/componentLinkDao()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$ComponentLink/getType()|",
      "|java+constructor:///org/sonar/db/component/ComponentLinkDto/ComponentLinkDto()|",
      "|java+method:///org/sonar/server/computation/step/PersistProjectLinksStep/access$200(org.sonar.server.computation.step.PersistProjectLinksStep)|",
      "|java+constructor:///org/sonar/server/computation/step/PersistProjectLinksStep$ProjectLinkVisitor$1/PersistProjectLinksStep$ProjectLinkVisitor$1(org.sonar.server.computation.step.PersistProjectLinksStep$ProjectLinkVisitor,org.sonar.scanner.protocol.output.ScannerReport$ComponentLink)|",
      "|java+method:///org/sonar/db/component/ComponentLinkDao/delete(org.sonar.db.DbSession,long)|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/getType()|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/getId()|",
      "|java+method:///org/sonar/db/component/ComponentLinkDao/insert(org.sonar.db.DbSession,org.sonar.db.component.ComponentLinkDto)|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/setType(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///com/google/common/collect/Iterables/find(java.lang.Iterable,com.google.common.base.Predicate,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/component/ComponentLinkDao/update(org.sonar.db.DbSession,org.sonar.db.component.ComponentLinkDto)|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/setComponentUuid(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/server/computation/step/PersistProjectLinksStep/access$400(org.sonar.server.computation.step.PersistProjectLinksStep)|",
      "|java+method:///org/sonar/api/i18n/I18n/message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/setName(java.lang.String)|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/setHref(java.lang.String)|",
      "|java+method:///com/google/common/collect/Sets/newHashSet()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/sonar/server/computation/step/PersistProjectLinksStep$ProjectLinkVisitor/convertType(org.sonar.scanner.protocol.output.ScannerReport$ComponentLink$ComponentLinkType)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$ComponentLink/getHref()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/util/List/contains(java.lang.Object)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-batch-protocol:5.4",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.4",
    "caller": "|java+method:///org/sonar/server/computation/batch/BatchReportReaderImpl/readScannerLogs()|",
    "called": "|java+method:///org/sonar/batch/protocol/output/FileStructure/analysisLog()|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/batch/protocol/output/FileStructure/analysisLog()|",
      "|java+method:///java/io/File/exists()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/getFileStructure()|",
      "|java+method:///org/apache/commons/io/FileUtils/openInputStream(java.io.File)|",
      "|java+constructor:///java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.nio.charset.Charset)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/emptyCloseableIterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/sonar/core/util/LineReaderIterator/LineReaderIterator(java.io.Reader)|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/scanner/protocol/output/FileStructure/analysisLog()|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/commons/io/FileUtils/openInputStream(java.io.File)|",
      "|java+constructor:///java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.nio.charset.Charset)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/emptyCloseableIterator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/getFileStructure()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/sonar/core/util/LineReaderIterator/LineReaderIterator(java.io.Reader)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-batch-protocol:5.4",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.4",
    "caller": "|java+method:///org/sonar/server/computation/step/PersistCrossProjectDuplicationIndexStep$DuplicationVisitor/visitComponent(org.sonar.server.computation.component.Component)|",
    "called": "|java+method:///org/sonar/batch/protocol/output/BatchReport$CpdTextBlock/getHash()|",
    "v1Body": [
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setHash(java.lang.String)|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setIndexInFile(int)|",
      "|java+method:///org/sonar/server/computation/step/PersistCrossProjectDuplicationIndexStep/access$100(org.sonar.server.computation.step.PersistCrossProjectDuplicationIndexStep)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getRef()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+constructor:///org/sonar/db/duplication/DuplicationUnitDto/DuplicationUnitDto()|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readCpdTextBlocks(int)|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setProjectSnapshotId(long)|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setStartLine(int)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$CpdTextBlock/getEndLine()|",
      "|java+method:///org/sonar/server/computation/component/DbIdsRepository/getSnapshotId(org.sonar.server.computation.component.Component)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/server/computation/step/PersistCrossProjectDuplicationIndexStep/access$300(org.sonar.server.computation.step.PersistCrossProjectDuplicationIndexStep)|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setEndLine(int)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$CpdTextBlock/getStartLine()|",
      "|java+method:///org/sonar/db/DbClient/duplicationDao()|",
      "|java+method:///org/sonar/db/duplication/DuplicationDao/insert(org.sonar.db.DbSession,org.sonar.db.duplication.DuplicationUnitDto)|",
      "|java+method:///org/sonar/server/computation/step/PersistCrossProjectDuplicationIndexStep/access$200(org.sonar.server.computation.step.PersistCrossProjectDuplicationIndexStep)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$CpdTextBlock/getHash()|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setSnapshotId(long)|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setHash(java.lang.String)|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setStartLine(int)|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setIndexInFile(int)|",
      "|java+method:///org/sonar/server/computation/step/PersistCrossProjectDuplicationIndexStep/access$100(org.sonar.server.computation.step.PersistCrossProjectDuplicationIndexStep)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getRef()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+constructor:///org/sonar/db/duplication/DuplicationUnitDto/DuplicationUnitDto()|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readCpdTextBlocks(int)|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setProjectSnapshotId(long)|",
      "|java+method:///org/sonar/server/computation/component/DbIdsRepository/getSnapshotId(org.sonar.server.computation.component.Component)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/server/computation/step/PersistCrossProjectDuplicationIndexStep/access$300(org.sonar.server.computation.step.PersistCrossProjectDuplicationIndexStep)|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setEndLine(int)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$CpdTextBlock/getHash()|",
      "|java+method:///org/sonar/db/DbClient/duplicationDao()|",
      "|java+method:///org/sonar/db/duplication/DuplicationDao/insert(org.sonar.db.DbSession,org.sonar.db.duplication.DuplicationUnitDto)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$CpdTextBlock/getEndLine()|",
      "|java+method:///org/sonar/server/computation/step/PersistCrossProjectDuplicationIndexStep/access$200(org.sonar.server.computation.step.PersistCrossProjectDuplicationIndexStep)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$CpdTextBlock/getStartLine()|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setSnapshotId(long)|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-batch-protocol:5.4",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.4",
    "caller": "|java+method:///org/sonar/server/computation/measure/MeasureRepositoryImpl/loadBatchMeasuresForComponent(org.sonar.server.computation.component.Component)|",
    "called": "|java+method:///org/sonar/batch/protocol/output/BatchReport$Measure/getMetricKey()|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/server/computation/measure/BatchMeasureToMeasure/toMeasure(org.sonar.batch.protocol.output.BatchReport$Measure,org.sonar.server.computation.metric.Metric)|",
      "|java+method:///org/sonar/server/computation/metric/ReportMetricValidator/validate(java.lang.String)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|",
      "|java+method:///org/sonar/server/computation/metric/MetricRepository/getByKey(java.lang.String)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getRef()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readComponentMeasures(int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/sonar/server/computation/measure/MapBasedRawMeasureRepository/add(org.sonar.server.computation.component.Component,org.sonar.server.computation.metric.Metric,org.sonar.server.computation.measure.Measure,org.sonar.server.computation.measure.MapBasedRawMeasureRepository$OverridePolicy)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Measure/getMetricKey()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/server/computation/metric/ReportMetricValidator/validate(java.lang.String)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+method:///org/sonar/server/computation/measure/BatchMeasureToMeasure/toMeasure(org.sonar.scanner.protocol.output.ScannerReport$Measure,org.sonar.server.computation.metric.Metric)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Measure/getMetricKey()|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|",
      "|java+method:///org/sonar/server/computation/metric/MetricRepository/getByKey(java.lang.String)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getRef()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readComponentMeasures(int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/sonar/server/computation/measure/MapBasedRawMeasureRepository/add(org.sonar.server.computation.component.Component,org.sonar.server.computation.metric.Metric,org.sonar.server.computation.measure.Measure,org.sonar.server.computation.measure.MapBasedRawMeasureRepository$OverridePolicy)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-batch-protocol:5.4",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/source/SymbolsLineReader/buildSymbolsPerLine(java.util.List)|",
    "called": "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Symbol/getDeclaration()|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Symbol/getReferenceList()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/common/collect/HashMultimap/create()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/server/computation/source/SymbolsLineReader/putForTextRange(com.google.common.collect.SetMultimap,org.sonar.batch.protocol.output.BatchReport$Symbol,org.sonar.batch.protocol.output.BatchReport$TextRange)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Symbol/getDeclaration()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/server/computation/source/SymbolsLineReader/putForTextRange(com.google.common.collect.SetMultimap,org.sonar.scanner.protocol.output.ScannerReport$Symbol,org.sonar.scanner.protocol.output.ScannerReport$TextRange)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Symbol/getDeclaration()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Symbol/getReferenceList()|",
      "|java+method:///com/google/common/collect/HashMultimap/create()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-scanner-protocol:5.5-RC1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/batch/BatchReportReaderImpl/readFileSource(int)|",
    "called": "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readFileSource(int)|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/commons/io/IOUtils/lineIterator(java.io.InputStream,java.nio.charset.Charset)|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readFileSource(int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/commons/io/FileUtils/openInputStream(java.io.File)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/sonar/server/computation/batch/BatchReportReaderImpl$CloseableLineIterator/BatchReportReaderImpl$CloseableLineIterator(org.apache.commons.io.LineIterator)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/commons/io/IOUtils/lineIterator(java.io.InputStream,java.nio.charset.Charset)|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readFileSource(int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/commons/io/FileUtils/openInputStream(java.io.File)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/sonar/server/computation/batch/BatchReportReaderImpl$CloseableLineIterator/BatchReportReaderImpl$CloseableLineIterator(org.apache.commons.io.LineIterator)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-scanner-protocol:5.5-RC1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/source/SymbolsLineReader/processSymbols(org.sonar.db.protobuf.DbFileSources$Line$Builder)|",
    "called": "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Symbol/getDeclaration()|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Symbol/getReferenceList()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Line$Builder/getSource()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Symbol/getDeclaration()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Line$Builder/setSymbols(java.lang.String)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Collections/sort(java.util.List,java.util.Comparator)|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Line$Builder/getLine()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/google/common/collect/SetMultimap/get(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/length()|",
      "|java+method:///org/sonar/server/computation/source/SymbolsLineReader/appendSymbol(java.lang.StringBuilder,org.sonar.batch.protocol.output.BatchReport$TextRange,int,int,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Symbol/getReferenceList()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Line$Builder/getSource()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/StringBuilder/length()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/sonar/server/computation/source/SymbolsLineReader/appendSymbol(java.lang.StringBuilder,org.sonar.scanner.protocol.output.ScannerReport$TextRange,int,int,java.lang.String)|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Line$Builder/setSymbols(java.lang.String)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Symbol/getDeclaration()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Collections/sort(java.util.List,java.util.Comparator)|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Line$Builder/getLine()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/google/common/collect/SetMultimap/get(java.lang.Object)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-scanner-protocol:5.5-RC1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/step/PersistTestsStep$TestDepthTraversalTypeAwareVisitor/loadCoverageDetails(int)|",
    "called": "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$CoverageDetail/getTestName()|",
    "v1Body": [
      "|java+method:///org/sonar/server/computation/step/PersistTestsStep/access$400(org.sonar.server.computation.step.PersistTestsStep)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+method:///java/util/List/removeAll(java.util.Collection)|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readCoverageDetails(int)|",
      "|java+method:///com/google/common/collect/Table/get(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$CoverageDetail/getCoveredFileList()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$CoveredFile$Builder/setFileUuid(java.lang.String)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$CoverageDetail$CoveredFile/getFileRef()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$CoverageDetail/getTestName()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$CoveredFile$Builder/getCoveredLineList()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$CoveredFile$Builder/addAllCoveredLine(java.lang.Iterable)|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$CoveredFile/newBuilder()|",
      "|java+method:///com/google/common/collect/Table/put(java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///com/google/common/collect/HashBasedTable/create()|",
      "|java+method:///org/sonar/server/computation/step/PersistTestsStep$TestDepthTraversalTypeAwareVisitor/getUuid(int)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$CoverageDetail$CoveredFile/getCoveredLineList()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/computation/step/PersistTestsStep/access$400(org.sonar.server.computation.step.PersistTestsStep)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$CoverageDetail$CoveredFile/getCoveredLineList()|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readCoverageDetails(int)|",
      "|java+method:///com/google/common/collect/Table/get(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$CoverageDetail$CoveredFile/getFileRef()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$CoveredFile$Builder/setFileUuid(java.lang.String)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$CoverageDetail/getTestName()|",
      "|java+method:///java/util/List/removeAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$CoveredFile$Builder/getCoveredLineList()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$CoveredFile$Builder/addAllCoveredLine(java.lang.Iterable)|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$CoveredFile/newBuilder()|",
      "|java+method:///com/google/common/collect/Table/put(java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$CoverageDetail/getCoveredFileList()|",
      "|java+method:///com/google/common/collect/HashBasedTable/create()|",
      "|java+method:///org/sonar/server/computation/step/PersistTestsStep$TestDepthTraversalTypeAwareVisitor/getUuid(int)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-scanner-protocol:5.5-RC1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+constructor:///org/sonar/server/computation/batch/BatchReportReaderImpl/BatchReportReaderImpl(org.sonar.server.computation.batch.BatchReportDirectoryHolder)|",
    "called": "|java+constructor:///org/sonar/scanner/protocol/output/ScannerReportReader/ScannerReportReader(java.io.File)|",
    "v1Body": [
      "|java+method:///org/sonar/server/computation/batch/BatchReportDirectoryHolder/getDirectory()|",
      "|java+constructor:///org/sonar/batch/protocol/output/BatchReportReader/BatchReportReader(java.io.File)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/computation/batch/BatchReportDirectoryHolder/getDirectory()|",
      "|java+constructor:///org/sonar/scanner/protocol/output/ScannerReportReader/ScannerReportReader(java.io.File)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-scanner-protocol:5.5-RC1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/step/PersistTestsStep$TestDepthTraversalTypeAwareVisitor/buildDbTests(int)|",
    "called": "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Test/getStacktrace()|",
    "v1Body": [
      "|java+method:///org/sonar/core/util/Uuids/create()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test/newBuilder()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/getName()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/hasMsg()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/getStacktrace()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/hasStacktrace()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/hasDurationInMs()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$TestStatus/valueOf(java.lang.String)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/getName()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setExecutionTimeMs(long)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/hasStatus()|",
      "|java+method:///org/sonar/server/computation/step/PersistTestsStep/access$400(org.sonar.server.computation.step.PersistTestsStep)|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readTests(int)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setStatus(org.sonar.db.protobuf.DbFileSources$Test$TestStatus)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/getDurationInMs()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/getMsg()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setName(java.lang.String)|",
      "|java+method:///com/google/common/collect/ArrayListMultimap/create()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setMsg(java.lang.String)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+method:///org/sonar/batch/protocol/Constants$TestStatus/name()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setUuid(java.lang.String)|",
      "|java+method:///com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setStacktrace(java.lang.String)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/getStatus()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Test/getDurationInMs()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test/newBuilder()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/getName()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setStacktrace(java.lang.String)|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setExecutionTimeMs(long)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Test/getStacktrace()|",
      "|java+method:///org/sonar/core/util/Uuids/create()|",
      "|java+method:///org/sonar/server/computation/step/PersistTestsStep/access$400(org.sonar.server.computation.step.PersistTestsStep)|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readTests(int)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setStatus(org.sonar.db.protobuf.DbFileSources$Test$TestStatus)|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setName(java.lang.String)|",
      "|java+method:///com/google/common/collect/ArrayListMultimap/create()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setMsg(java.lang.String)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Test$TestStatus/name()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Test/getName()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Test/getMsg()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Test/getStatus()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$TestStatus/valueOf(java.lang.String)|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setUuid(java.lang.String)|",
      "|java+method:///com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-scanner-protocol:5.5-RC1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/source/HighlightingLineReader/processHighlighting(java.util.Iterator,java.lang.StringBuilder,org.sonar.db.protobuf.DbFileSources$Line$Builder)|",
    "called": "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$SyntaxHighlightingRule/getRange()|",
    "v1Body": [
      "|java+method:///java/util/Iterator/remove()|",
      "|java+method:///org/sonar/server/computation/source/RangeOffsetConverter/offsetToString(org.sonar.batch.protocol.output.BatchReport$TextRange,int,int)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$SyntaxHighlighting/getType()|",
      "|java+method:///org/sonar/server/computation/source/HighlightingLineReader/getCssClass(org.sonar.batch.protocol.Constants$HighlightingType)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$TextRange/getEndLine()|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$TextRange/getStartLine()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Line$Builder/getSource()|",
      "|java+method:///java/lang/StringBuilder/length()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$SyntaxHighlighting/getRange()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Line$Builder/getLine()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/remove()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$TextRange/getStartLine()|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$SyntaxHighlightingRule/getRange()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Line$Builder/getSource()|",
      "|java+method:///org/sonar/server/computation/source/RangeOffsetConverter/offsetToString(org.sonar.scanner.protocol.output.ScannerReport$TextRange,int,int)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$TextRange/getEndLine()|",
      "|java+method:///org/sonar/server/computation/source/HighlightingLineReader/getCssClass(org.sonar.scanner.protocol.output.ScannerReport$SyntaxHighlightingRule$HighlightingType)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Line$Builder/getLine()|",
      "|java+method:///java/lang/StringBuilder/length()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$SyntaxHighlightingRule/getType()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-scanner-protocol:5.5-RC1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/batch/BatchReportReaderImpl/readComponentSymbols(int)|",
    "called": "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readComponentSymbols(int)|",
    "v1Body": [
      "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readComponentSymbols(int)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readComponentSymbols(int)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-scanner-protocol:5.5-RC1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/batch/BatchReportReaderImpl/readActiveRules()|",
    "called": "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readActiveRules()|",
    "v1Body": [
      "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readActiveRules()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readActiveRules()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-scanner-protocol:5.5-RC1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/batch/UsersAction/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/scanner/protocol/input/ScannerInput$User/newBuilder()|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/user/index/UserIndex/selectUsersForBatch(java.util.List)|",
      "|java+method:///org/sonar/server/user/UserSession/checkLoggedIn()|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/output()|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsStrings(java.lang.String)|",
      "|java+method:///java/io/OutputStream/close()|",
      "|java+method:///org/sonar/server/batch/UsersAction/handleUser(org.sonar.server.user.index.UserDoc,org.sonar.batch.protocol.input.BatchInput$User$Builder,java.io.OutputStream)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/setMediaType(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Response/stream()|",
      "|java+method:///org/sonar/batch/protocol/input/BatchInput$User/newBuilder()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/user/index/UserIndex/selectUsersForBatch(java.util.List)|",
      "|java+method:///org/sonar/server/user/UserSession/checkLoggedIn()|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/output()|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsStrings(java.lang.String)|",
      "|java+method:///java/io/OutputStream/close()|",
      "|java+method:///org/sonar/server/batch/UsersAction/handleUser(org.sonar.server.user.index.UserDoc,org.sonar.scanner.protocol.input.ScannerInput$User$Builder,java.io.OutputStream)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/setMediaType(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Response/stream()|",
      "|java+method:///org/sonar/scanner/protocol/input/ScannerInput$User/newBuilder()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-scanner-protocol:5.5-RC1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/step/ValidateProjectStep$ValidateProjectsVisitor/validateBatchKey(org.sonar.server.computation.component.Component)|",
    "called": "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Component/getKey()|",
    "v1Body": [
      "|java+method:///org/sonar/core/component/ComponentKeys/isValidModuleKey(java.lang.String)|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readComponent(int)|",
      "|java+method:///org/sonar/server/computation/step/ValidateProjectStep/access$300(org.sonar.server.computation.step.ValidateProjectStep)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getRef()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Component/getKey()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/core/component/ComponentKeys/isValidModuleKey(java.lang.String)|",
      "|java+method:///org/sonar/server/computation/step/ValidateProjectStep/access$300(org.sonar.server.computation.step.ValidateProjectStep)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getRef()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readComponent(int)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Component/getKey()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-scanner-protocol:5.5-RC1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/batch/BatchReportReaderImpl/readComponentSyntaxHighlighting(int)|",
    "called": "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readComponentSyntaxHighlighting(int)|",
    "v1Body": [
      "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readComponentSyntaxHighlighting(int)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readComponentSyntaxHighlighting(int)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-scanner-protocol:5.5-RC1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/batch/BatchReportReaderImpl/readMetadata()|",
    "called": "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readMetadata()|",
    "v1Body": [
      "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readMetadata()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readMetadata()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-scanner-protocol:5.5-RC1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/batch/BatchReportReaderImpl/readCpdTextBlocks(int)|",
    "called": "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readCpdTextBlocks(int)|",
    "v1Body": [
      "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readCpdTextBlocks(int)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readCpdTextBlocks(int)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-scanner-protocol:5.5-RC1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/source/HighlightingLineReader/getNextHighlightingMatchingLine(int)|",
    "called": "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$SyntaxHighlightingRule/getRange()|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$SyntaxHighlighting/getRange()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$TextRange/getStartLine()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$TextRange/getStartLine()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$SyntaxHighlightingRule/getRange()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-scanner-protocol:5.5-RC1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/batch/BatchReportReaderImpl/readComponentCoverage(int)|",
    "called": "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readComponentCoverage(int)|",
    "v1Body": [
      "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readComponentCoverage(int)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readComponentCoverage(int)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-scanner-protocol:5.5-RC1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/step/PersistProjectLinksStep$ProjectLinkVisitor$1/apply(org.sonar.db.component.ComponentLinkDto)|",
    "called": "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$ComponentLink/getType()|",
    "v1Body": [
      "|java+method:///org/sonar/db/component/ComponentLinkDto/getType()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/sonar/server/computation/step/PersistProjectLinksStep$ProjectLinkVisitor/access$300(org.sonar.server.computation.step.PersistProjectLinksStep$ProjectLinkVisitor,org.sonar.batch.protocol.Constants$ComponentLinkType)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$ComponentLink/getType()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$ComponentLink/getType()|",
      "|java+method:///org/sonar/server/computation/step/PersistProjectLinksStep$ProjectLinkVisitor/access$300(org.sonar.server.computation.step.PersistProjectLinksStep$ProjectLinkVisitor,org.sonar.scanner.protocol.output.ScannerReport$ComponentLink$ComponentLinkType)|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/getType()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-scanner-protocol:5.5-RC1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/batch/BatchReportReaderImpl/readComponent(int)|",
    "called": "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readComponent(int)|",
    "v1Body": [
      "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readComponent(int)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readComponent(int)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-scanner-protocol:5.5-RC1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/batch/BatchReportReaderImpl/readComponentIssues(int)|",
    "called": "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readComponentIssues(int)|",
    "v1Body": [
      "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readComponentIssues(int)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readComponentIssues(int)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-scanner-protocol:5.5-RC1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/batch/BatchReportReaderImpl/readComponentMeasures(int)|",
    "called": "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readComponentMeasures(int)|",
    "v1Body": [
      "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readComponentMeasures(int)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readComponentMeasures(int)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-scanner-protocol:5.5-RC1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/batch/BatchReportReaderImpl/readChangesets(int)|",
    "called": "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readChangesets(int)|",
    "v1Body": [
      "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readChangesets(int)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readChangesets(int)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-scanner-protocol:5.5-RC1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/batch/BatchReportReaderImpl/readComponentDuplications(int)|",
    "called": "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readComponentDuplications(int)|",
    "v1Body": [
      "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readComponentDuplications(int)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readComponentDuplications(int)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-scanner-protocol:5.5-RC1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/batch/BatchReportReaderImpl/readTests(int)|",
    "called": "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readTests(int)|",
    "v1Body": [
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/emptyCloseableIterator()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readTests(int)|",
      "|java+constructor:///org/sonar/server/computation/batch/BatchReportReaderImpl$ParserCloseableIterator/BatchReportReaderImpl$ParserCloseableIterator(com.google.protobuf.Parser,java.io.FileInputStream)|",
      "|java+method:///org/apache/commons/io/FileUtils/openInputStream(java.io.File)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/parser()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Test/parser()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readTests(int)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/emptyCloseableIterator()|",
      "|java+constructor:///org/sonar/server/computation/batch/BatchReportReaderImpl$ParserCloseableIterator/BatchReportReaderImpl$ParserCloseableIterator(com.google.protobuf.Parser,java.io.FileInputStream)|",
      "|java+method:///org/apache/commons/io/FileUtils/openInputStream(java.io.File)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-scanner-protocol:5.5-RC1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/batch/IssuesAction/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/scanner/protocol/input/ScannerInput$ServerIssue/newBuilder()|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/batch/IssuesAction/handleIssue(org.sonar.server.issue.index.IssueDoc,org.sonar.batch.protocol.input.BatchInput$ServerIssue$Builder,java.util.Map,java.io.OutputStream)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/component/ComponentFinder/getByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/batch/protocol/input/BatchInput$ServerIssue/newBuilder()|",
      "|java+method:///org/sonar/server/batch/IssuesAction/keysByUUid(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/api/server/ws/Response/stream()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/output()|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/selectIssuesForBatch(org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/server/user/UserSession/checkComponentPermission(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/setMediaType(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/batch/IssuesAction/handleIssue(org.sonar.server.issue.index.IssueDoc,org.sonar.scanner.protocol.input.ScannerInput$ServerIssue$Builder,java.util.Map,java.io.OutputStream)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/component/ComponentFinder/getByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/scanner/protocol/input/ScannerInput$ServerIssue/newBuilder()|",
      "|java+method:///org/sonar/server/batch/IssuesAction/keysByUUid(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/api/server/ws/Response/stream()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/output()|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/selectIssuesForBatch(org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/server/user/UserSession/checkComponentPermission(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/setMediaType(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-scanner-protocol:5.5-RC1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/step/LoadReportAnalysisMetadataHolderStep/execute()|",
    "called": "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Metadata/getQprofilesPerLanguage()|",
    "v1Body": [
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Metadata/getRootComponentRef()|",
      "|java+method:///org/sonar/server/computation/analysis/MutableAnalysisMetadataHolder/setAnalysisDate(long)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Metadata/getCrossProjectDuplicationActivated()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Metadata/getBranch()|",
      "|java+method:///org/sonar/server/computation/step/LoadReportAnalysisMetadataHolderStep/checkProjectKeyConsistency(org.sonar.batch.protocol.output.BatchReport$Metadata)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Metadata/hasBranch()|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readMetadata()|",
      "|java+method:///org/sonar/server/computation/analysis/MutableAnalysisMetadataHolder/setCrossProjectDuplicationEnabled(boolean)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Metadata/hasCrossProjectDuplicationActivated()|",
      "|java+method:///org/sonar/server/computation/analysis/MutableAnalysisMetadataHolder/setRootComponentRef(int)|",
      "|java+method:///org/sonar/server/computation/analysis/MutableAnalysisMetadataHolder/setBranch(java.lang.String)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Metadata/getAnalysisDate()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/computation/analysis/MutableAnalysisMetadataHolder/setQProfilesByLanguage(java.util.Map)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Metadata/getBranch()|",
      "|java+method:///org/sonar/server/computation/analysis/MutableAnalysisMetadataHolder/setAnalysisDate(long)|",
      "|java+method:///org/sonar/server/computation/analysis/MutableAnalysisMetadataHolder/setRootComponentRef(int)|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readMetadata()|",
      "|java+method:///org/sonar/server/computation/analysis/MutableAnalysisMetadataHolder/setBranch(java.lang.String)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Metadata/getRootComponentRef()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Metadata/getQprofilesPerLanguage()|",
      "|java+method:///org/sonar/server/computation/analysis/MutableAnalysisMetadataHolder/setCrossProjectDuplicationEnabled(boolean)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Metadata/getCrossProjectDuplicationActivated()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Metadata/getAnalysisDate()|",
      "|java+method:///com/google/common/collect/Maps/transformValues(java.util.Map,com.google.common.base.Function)|",
      "|java+method:///org/sonar/server/computation/step/LoadReportAnalysisMetadataHolderStep/checkProjectKeyConsistency(org.sonar.scanner.protocol.output.ScannerReport$Metadata)|",
      "|java+method:///org/elasticsearch/common/lang3/StringUtils/isNotEmpty(java.lang.CharSequence)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-scanner-protocol:5.5-RC1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/scm/ReportScmInfo$LineIndexToChangeset/apply(java.lang.Integer)|",
    "called": "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Changesets/getChangesetIndexByLine(int)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Changesets/getChangeset(int)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/server/computation/scm/ReportScmInfo$LineIndexToChangeset/convert(org.sonar.batch.protocol.output.BatchReport$Changesets$Changeset,int)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Changesets/getChangesetIndexByLine(int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/server/computation/scm/ReportScmInfo$LineIndexToChangeset/convert(org.sonar.scanner.protocol.output.ScannerReport$Changesets$Changeset,int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Changesets/getChangesetIndexByLine(int)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Changesets/getChangeset(int)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-scanner-protocol:5.5-RC1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/loadIssues()|",
    "called": "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Issue/getRuleKey()|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory/access$300(org.sonar.server.computation.issue.TrackerRawInputFactory)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/isIssueOnUnsupportedCommonRule(org.sonar.batch.protocol.output.BatchReport$Issue)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/server/computation/issue/commonrule/CommonRuleEngine/process(org.sonar.server.computation.component.Component)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Issue/getRuleRepository()|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readComponentIssues(int)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory/access$200(org.sonar.server.computation.issue.TrackerRawInputFactory)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getRef()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/api/utils/log/Loggers/get(java.lang.Class)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/init(org.sonar.core.issue.DefaultIssue)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/getLineHashSequence()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Issue/getRuleKey()|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/toIssue(org.sonar.core.issue.tracking.LineHashSequence,org.sonar.batch.protocol.output.BatchReport$Issue)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/sonar/server/computation/issue/commonrule/CommonRuleEngine/process(org.sonar.server.computation.component.Component)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory/access$300(org.sonar.server.computation.issue.TrackerRawInputFactory)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readComponentIssues(int)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory/access$200(org.sonar.server.computation.issue.TrackerRawInputFactory)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getRef()|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/toIssue(org.sonar.core.issue.tracking.LineHashSequence,org.sonar.scanner.protocol.output.ScannerReport$Issue)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Issue/getRuleKey()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Issue/getRuleRepository()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/api/utils/log/Loggers/get(java.lang.Class)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/isIssueOnUnsupportedCommonRule(org.sonar.scanner.protocol.output.ScannerReport$Issue)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/init(org.sonar.core.issue.DefaultIssue)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/getLineHashSequence()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-scanner-protocol:5.5-RC1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/batch/ProjectDataLoader/load(org.sonar.server.batch.ProjectDataQuery)|",
    "called": "|java+constructor:///org/sonar/scanner/protocol/input/ProjectRepositories/ProjectRepositories()|",
    "v1Body": [
      "|java+method:///org/sonar/server/user/UserSession/hasComponentUuidPermission(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/db/component/ComponentDao/selectEnabledDescendantModules(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/getSettingsFromParents(org.sonar.db.component.ComponentDto,boolean,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/getProject(org.sonar.db.component.ComponentDto,org.sonar.db.DbSession)|",
      "|java+constructor:///org/sonar/server/batch/ProjectDataLoader$TreeModuleSettings/ProjectDataLoader$TreeModuleSettings(java.util.Map,java.util.Map,java.util.List,java.util.List,org.sonar.server.batch.ProjectDataLoader$1)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/addFileData(org.sonar.batch.protocol.input.ProjectRepositories,java.util.List,java.util.List)|",
      "|java+method:///org/sonar/batch/protocol/input/ProjectRepositories/setLastAnalysisDate(java.util.Date)|",
      "|java+method:///org/sonar/db/property/PropertiesDao/selectEnabledDescendantModuleProperties(java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/component/ComponentDto/uuid()|",
      "|java+method:///org/sonar/server/batch/ProjectDataQuery/getModuleKey()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/db/DbClient/componentDao()|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///org/sonar/server/batch/ProjectDataQuery/isIssuesMode()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/ws/WsUtils/checkFoundWithOptional(com.google.common.base.Optional,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///org/sonar/batch/protocol/input/ProjectRepositories/ProjectRepositories()|",
      "|java+method:///org/sonar/db/component/ComponentDto/getKey()|",
      "|java+method:///org/sonar/db/DbClient/propertiesDao()|",
      "|java+method:///org/sonar/db/component/ComponentDto/projectUuid()|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/searchFilesWithHashAndRevision(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/checkPermission(boolean,boolean,boolean)|",
      "|java+method:///org/sonar/db/component/ComponentDao/selectByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/addSettingsToChildrenModules(org.sonar.batch.protocol.input.ProjectRepositories,java.lang.String,java.util.Map,org.sonar.server.batch.ProjectDataLoader$TreeModuleSettings,boolean)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/addSettings(org.sonar.batch.protocol.input.ProjectRepositories,java.lang.String,java.util.Map)|",
      "|java+method:///org/sonar/db/component/ComponentDto/key()|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/moduleIdsByKey(java.util.List)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/moduleUuidsByKey(java.util.List)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/component/ComponentDto/getKey()|",
      "|java+method:///org/sonar/db/component/ComponentDao/selectEnabledDescendantModules(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/getSettingsFromParents(org.sonar.db.component.ComponentDto,boolean,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/getProject(org.sonar.db.component.ComponentDto,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/scanner/protocol/input/ProjectRepositories/setLastAnalysisDate(java.util.Date)|",
      "|java+constructor:///org/sonar/server/batch/ProjectDataLoader$TreeModuleSettings/ProjectDataLoader$TreeModuleSettings(java.util.Map,java.util.Map,java.util.List,java.util.List,org.sonar.server.batch.ProjectDataLoader$1)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/addSettingsToChildrenModules(org.sonar.scanner.protocol.input.ProjectRepositories,java.lang.String,java.util.Map,org.sonar.server.batch.ProjectDataLoader$TreeModuleSettings,boolean)|",
      "|java+method:///org/sonar/db/property/PropertiesDao/selectEnabledDescendantModuleProperties(java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/batch/ProjectDataQuery/getModuleKey()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/db/component/ComponentDto/key()|",
      "|java+method:///org/sonar/db/DbClient/componentDao()|",
      "|java+constructor:///org/sonar/scanner/protocol/input/ProjectRepositories/ProjectRepositories()|",
      "|java+method:///org/sonar/server/user/UserSession/hasComponentUuidPermission(java.lang.String,java.lang.String)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///org/sonar/server/batch/ProjectDataQuery/isIssuesMode()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/ws/WsUtils/checkFoundWithOptional(com.google.common.base.Optional,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/db/DbClient/propertiesDao()|",
      "|java+method:///org/sonar/db/component/ComponentDto/projectUuid()|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/searchFilesWithHashAndRevision(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/addFileData(org.sonar.scanner.protocol.input.ProjectRepositories,java.util.List,java.util.List)|",
      "|java+method:///org/sonar/db/component/ComponentDto/uuid()|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/addSettings(org.sonar.scanner.protocol.input.ProjectRepositories,java.lang.String,java.util.Map)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/checkPermission(boolean,boolean,boolean)|",
      "|java+method:///org/sonar/db/component/ComponentDao/selectByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/moduleIdsByKey(java.util.List)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/moduleUuidsByKey(java.util.List)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-scanner-protocol:5.5-RC1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/batch/BatchReportReaderImpl/readCoverageDetails(int)|",
    "called": "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readCoverageDetails(int)|",
    "v1Body": [
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/emptyCloseableIterator()|",
      "|java+constructor:///org/sonar/server/computation/batch/BatchReportReaderImpl$ParserCloseableIterator/BatchReportReaderImpl$ParserCloseableIterator(com.google.protobuf.Parser,java.io.FileInputStream)|",
      "|java+method:///org/apache/commons/io/FileUtils/openInputStream(java.io.File)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$CoverageDetail/parser()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/readCoverageDetails(int)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$CoverageDetail/parser()|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+constructor:///org/sonar/server/computation/batch/BatchReportReaderImpl$ParserCloseableIterator/BatchReportReaderImpl$ParserCloseableIterator(com.google.protobuf.Parser,java.io.FileInputStream)|",
      "|java+method:///org/apache/commons/io/FileUtils/openInputStream(java.io.File)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/readCoverageDetails(int)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/emptyCloseableIterator()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-scanner-protocol:5.5-RC1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/batch/GlobalAction/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/scanner/protocol/input/GlobalRepositories/toJson()|",
    "v1Body": [
      "|java+constructor:///org/sonar/batch/protocol/input/GlobalRepositories/GlobalRepositories()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/user/UserSession/hasPermission(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/setMediaType(java.lang.String)|",
      "|java+method:///org/sonar/batch/protocol/input/GlobalRepositories/toJson()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/output()|",
      "|java+method:///org/sonar/server/batch/GlobalAction/addMetrics(org.sonar.batch.protocol.input.GlobalRepositories,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/user/UserSession/isLoggedIn()|",
      "|java+method:///org/sonar/server/batch/GlobalAction/addSettings(org.sonar.batch.protocol.input.GlobalRepositories,boolean,boolean,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/api/server/ws/Response/stream()|",
      "|java+method:///org/apache/commons/io/IOUtils/write(java.lang.String,java.io.OutputStream)|",
      "|java+constructor:///org/sonar/server/exceptions/ForbiddenException/ForbiddenException(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/batch/GlobalAction/addSettings(org.sonar.scanner.protocol.input.GlobalRepositories,boolean,boolean,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/setMediaType(java.lang.String)|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/output()|",
      "|java+constructor:///org/sonar/scanner/protocol/input/GlobalRepositories/GlobalRepositories()|",
      "|java+method:///org/sonar/server/user/UserSession/isLoggedIn()|",
      "|java+method:///org/sonar/server/batch/GlobalAction/addMetrics(org.sonar.scanner.protocol.input.GlobalRepositories,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/user/UserSession/hasPermission(java.lang.String)|",
      "|java+method:///org/sonar/scanner/protocol/input/GlobalRepositories/toJson()|",
      "|java+method:///org/sonar/api/server/ws/Response/stream()|",
      "|java+method:///org/apache/commons/io/IOUtils/write(java.lang.String,java.io.OutputStream)|",
      "|java+constructor:///org/sonar/server/exceptions/ForbiddenException/ForbiddenException(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-scanner-protocol:5.5-RC1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/step/PersistProjectLinksStep$ProjectLinkVisitor/mergeLinks(org.sonar.db.DbSession,java.lang.String,java.util.List,java.util.List)|",
    "called": "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$ComponentLink/getType()|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbClient/componentLinkDao()|",
      "|java+constructor:///org/sonar/db/component/ComponentLinkDto/ComponentLinkDto()|",
      "|java+method:///org/sonar/server/computation/step/PersistProjectLinksStep/access$200(org.sonar.server.computation.step.PersistProjectLinksStep)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$ComponentLink/getHref()|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/getType()|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/getId()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/db/component/ComponentLinkDao/insert(org.sonar.db.DbSession,org.sonar.db.component.ComponentLinkDto)|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/setType(java.lang.String)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///com/google/common/collect/Iterables/find(java.lang.Iterable,com.google.common.base.Predicate,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/component/ComponentLinkDao/update(org.sonar.db.DbSession,org.sonar.db.component.ComponentLinkDto)|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/setComponentUuid(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/server/computation/step/PersistProjectLinksStep/access$400(org.sonar.server.computation.step.PersistProjectLinksStep)|",
      "|java+method:///org/sonar/api/i18n/I18n/message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/setName(java.lang.String)|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/setHref(java.lang.String)|",
      "|java+method:///com/google/common/collect/Sets/newHashSet()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/computation/step/PersistProjectLinksStep$ProjectLinkVisitor/convertType(org.sonar.batch.protocol.Constants$ComponentLinkType)|",
      "|java+method:///org/sonar/db/component/ComponentLinkDao/delete(org.sonar.db.DbSession,long)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+constructor:///org/sonar/server/computation/step/PersistProjectLinksStep$ProjectLinkVisitor$1/PersistProjectLinksStep$ProjectLinkVisitor$1(org.sonar.server.computation.step.PersistProjectLinksStep$ProjectLinkVisitor,org.sonar.batch.protocol.output.BatchReport$ComponentLink)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/util/List/contains(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$ComponentLink/getType()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/componentLinkDao()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$ComponentLink/getType()|",
      "|java+constructor:///org/sonar/db/component/ComponentLinkDto/ComponentLinkDto()|",
      "|java+method:///org/sonar/server/computation/step/PersistProjectLinksStep/access$200(org.sonar.server.computation.step.PersistProjectLinksStep)|",
      "|java+constructor:///org/sonar/server/computation/step/PersistProjectLinksStep$ProjectLinkVisitor$1/PersistProjectLinksStep$ProjectLinkVisitor$1(org.sonar.server.computation.step.PersistProjectLinksStep$ProjectLinkVisitor,org.sonar.scanner.protocol.output.ScannerReport$ComponentLink)|",
      "|java+method:///org/sonar/db/component/ComponentLinkDao/delete(org.sonar.db.DbSession,long)|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/getType()|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/getId()|",
      "|java+method:///org/sonar/db/component/ComponentLinkDao/insert(org.sonar.db.DbSession,org.sonar.db.component.ComponentLinkDto)|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/setType(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///com/google/common/collect/Iterables/find(java.lang.Iterable,com.google.common.base.Predicate,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/component/ComponentLinkDao/update(org.sonar.db.DbSession,org.sonar.db.component.ComponentLinkDto)|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/setComponentUuid(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/server/computation/step/PersistProjectLinksStep/access$400(org.sonar.server.computation.step.PersistProjectLinksStep)|",
      "|java+method:///org/sonar/api/i18n/I18n/message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/setName(java.lang.String)|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/setHref(java.lang.String)|",
      "|java+method:///com/google/common/collect/Sets/newHashSet()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/sonar/server/computation/step/PersistProjectLinksStep$ProjectLinkVisitor/convertType(org.sonar.scanner.protocol.output.ScannerReport$ComponentLink$ComponentLinkType)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$ComponentLink/getHref()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/util/List/contains(java.lang.Object)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-scanner-protocol:5.5-RC1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/batch/BatchReportReaderImpl/readScannerLogs()|",
    "called": "|java+method:///org/sonar/scanner/protocol/output/FileStructure/analysisLog()|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/batch/protocol/output/FileStructure/analysisLog()|",
      "|java+method:///java/io/File/exists()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/getFileStructure()|",
      "|java+method:///org/apache/commons/io/FileUtils/openInputStream(java.io.File)|",
      "|java+constructor:///java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.nio.charset.Charset)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/emptyCloseableIterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/sonar/core/util/LineReaderIterator/LineReaderIterator(java.io.Reader)|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/scanner/protocol/output/FileStructure/analysisLog()|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/commons/io/FileUtils/openInputStream(java.io.File)|",
      "|java+constructor:///java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.nio.charset.Charset)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/emptyCloseableIterator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/getFileStructure()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/sonar/core/util/LineReaderIterator/LineReaderIterator(java.io.Reader)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-scanner-protocol:5.5-RC1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/step/PersistCrossProjectDuplicationIndexStep$DuplicationVisitor/visitComponent(org.sonar.server.computation.component.Component)|",
    "called": "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$CpdTextBlock/getHash()|",
    "v1Body": [
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setHash(java.lang.String)|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setIndexInFile(int)|",
      "|java+method:///org/sonar/server/computation/step/PersistCrossProjectDuplicationIndexStep/access$100(org.sonar.server.computation.step.PersistCrossProjectDuplicationIndexStep)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getRef()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+constructor:///org/sonar/db/duplication/DuplicationUnitDto/DuplicationUnitDto()|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readCpdTextBlocks(int)|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setProjectSnapshotId(long)|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setStartLine(int)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$CpdTextBlock/getEndLine()|",
      "|java+method:///org/sonar/server/computation/component/DbIdsRepository/getSnapshotId(org.sonar.server.computation.component.Component)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/server/computation/step/PersistCrossProjectDuplicationIndexStep/access$300(org.sonar.server.computation.step.PersistCrossProjectDuplicationIndexStep)|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setEndLine(int)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$CpdTextBlock/getStartLine()|",
      "|java+method:///org/sonar/db/DbClient/duplicationDao()|",
      "|java+method:///org/sonar/db/duplication/DuplicationDao/insert(org.sonar.db.DbSession,org.sonar.db.duplication.DuplicationUnitDto)|",
      "|java+method:///org/sonar/server/computation/step/PersistCrossProjectDuplicationIndexStep/access$200(org.sonar.server.computation.step.PersistCrossProjectDuplicationIndexStep)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$CpdTextBlock/getHash()|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setSnapshotId(long)|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setHash(java.lang.String)|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setStartLine(int)|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setIndexInFile(int)|",
      "|java+method:///org/sonar/server/computation/step/PersistCrossProjectDuplicationIndexStep/access$100(org.sonar.server.computation.step.PersistCrossProjectDuplicationIndexStep)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getRef()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+constructor:///org/sonar/db/duplication/DuplicationUnitDto/DuplicationUnitDto()|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readCpdTextBlocks(int)|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setProjectSnapshotId(long)|",
      "|java+method:///org/sonar/server/computation/component/DbIdsRepository/getSnapshotId(org.sonar.server.computation.component.Component)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/server/computation/step/PersistCrossProjectDuplicationIndexStep/access$300(org.sonar.server.computation.step.PersistCrossProjectDuplicationIndexStep)|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setEndLine(int)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$CpdTextBlock/getHash()|",
      "|java+method:///org/sonar/db/DbClient/duplicationDao()|",
      "|java+method:///org/sonar/db/duplication/DuplicationDao/insert(org.sonar.db.DbSession,org.sonar.db.duplication.DuplicationUnitDto)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$CpdTextBlock/getEndLine()|",
      "|java+method:///org/sonar/server/computation/step/PersistCrossProjectDuplicationIndexStep/access$200(org.sonar.server.computation.step.PersistCrossProjectDuplicationIndexStep)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$CpdTextBlock/getStartLine()|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setSnapshotId(long)|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-scanner-protocol:5.5-RC1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/measure/MeasureRepositoryImpl/loadBatchMeasuresForComponent(org.sonar.server.computation.component.Component)|",
    "called": "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Measure/getMetricKey()|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/server/computation/measure/BatchMeasureToMeasure/toMeasure(org.sonar.batch.protocol.output.BatchReport$Measure,org.sonar.server.computation.metric.Metric)|",
      "|java+method:///org/sonar/server/computation/metric/ReportMetricValidator/validate(java.lang.String)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|",
      "|java+method:///org/sonar/server/computation/metric/MetricRepository/getByKey(java.lang.String)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getRef()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readComponentMeasures(int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/sonar/server/computation/measure/MapBasedRawMeasureRepository/add(org.sonar.server.computation.component.Component,org.sonar.server.computation.metric.Metric,org.sonar.server.computation.measure.Measure,org.sonar.server.computation.measure.MapBasedRawMeasureRepository$OverridePolicy)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Measure/getMetricKey()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/server/computation/metric/ReportMetricValidator/validate(java.lang.String)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+method:///org/sonar/server/computation/measure/BatchMeasureToMeasure/toMeasure(org.sonar.scanner.protocol.output.ScannerReport$Measure,org.sonar.server.computation.metric.Metric)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Measure/getMetricKey()|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|",
      "|java+method:///org/sonar/server/computation/metric/MetricRepository/getByKey(java.lang.String)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getRef()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readComponentMeasures(int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/sonar/server/computation/measure/MapBasedRawMeasureRepository/add(org.sonar.server.computation.component.Component,org.sonar.server.computation.metric.Metric,org.sonar.server.computation.measure.Measure,org.sonar.server.computation.measure.MapBasedRawMeasureRepository$OverridePolicy)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-scanner-protocol:5.5-RC1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/app/ServerProcessLogging/configureAppender(ch.qos.logback.classic.LoggerContext,org.sonar.process.Props)|",
    "called": "|java+method:///org/sonar/process/LogbackHelper/newConsoleAppender(ch.qos.logback.core.Context,java.lang.String,java.lang.String,ch.qos.logback.core.filter.Filter)|",
    "v1Body": [
      "|java+method:///org/sonar/process/LogbackHelper/newConsoleAppender(ch.qos.logback.core.Context,java.lang.String,java.lang.String,ch.qos.logback.core.filter.Filter)|",
      "|java+method:///org/sonar/server/computation/log/CeLogging/createAppenderConfiguration(ch.qos.logback.classic.LoggerContext,org.sonar.process.Props)|",
      "|java+method:///ch/qos/logback/classic/LoggerContext/getLogger(java.lang.String)|",
      "|java+constructor:///org/sonar/server/computation/log/CeLogDenyFilter/CeLogDenyFilter()|",
      "|java+method:///ch/qos/logback/classic/Logger/addAppender(ch.qos.logback.core.Appender)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/process/LogbackHelper/newConsoleAppender(ch.qos.logback.core.Context,java.lang.String,java.lang.String,ch.qos.logback.core.filter.Filter)|",
      "|java+method:///ch/qos/logback/classic/LoggerContext/getLogger(java.lang.String)|",
      "|java+method:///org/sonar/ce/log/CeLogging/createAppenderConfiguration(ch.qos.logback.classic.LoggerContext,org.sonar.process.Props)|",
      "|java+method:///java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)|",
      "|java+method:///ch/qos/logback/classic/Logger/addAppender(ch.qos.logback.core.Appender)|",
      "|java+constructor:///org/sonar/ce/log/CeLogDenyFilter/CeLogDenyFilter()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-process:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/app/WebServer/main(java.lang.String%5B%5D)|",
    "called": "|java+method:///org/sonar/process/ProcessEntryPoint/createForArguments(java.lang.String%5B%5D)|",
    "v1Body": [
      "|java+method:///org/sonar/server/app/ServerProcessLogging/configure(org.sonar.process.Props)|",
      "|java+method:///org/sonar/process/ProcessEntryPoint/createForArguments(java.lang.String%5B%5D)|",
      "|java+method:///org/sonar/process/ProcessEntryPoint/getProps()|",
      "|java+constructor:///org/sonar/server/app/ServerProcessLogging/ServerProcessLogging()|",
      "|java+constructor:///org/sonar/server/app/WebServer/WebServer(org.sonar.process.Props)|",
      "|java+method:///org/sonar/process/ProcessEntryPoint/launch(org.sonar.process.Monitored)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/app/ServerProcessLogging/configure(org.sonar.process.Props)|",
      "|java+method:///org/sonar/process/ProcessEntryPoint/getProps()|",
      "|java+method:///org/sonar/process/ProcessEntryPoint/createForArguments(java.lang.String%5B%5D)|",
      "|java+constructor:///org/sonar/server/app/ServerProcessLogging/ServerProcessLogging(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/sonar/server/app/WebServer/WebServer(org.sonar.process.Props)|",
      "|java+method:///org/sonar/process/ProcessEntryPoint/launch(org.sonar.process.Monitored)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-process:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/platform/monitoring/BaseMonitorMBean/stop()|",
    "called": "|java+method:///org/sonar/process/Jmx/unregister(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/platform/monitoring/BaseMonitorMBean/name()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///javax/management/MBeanServer/unregisterMBean(javax.management.ObjectName)|",
      "|java+method:///java/lang/management/ManagementFactory/getPlatformMBeanServer()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/server/platform/monitoring/BaseMonitorMBean/objectName()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/process/Jmx/unregister(java.lang.String)|",
      "|java+method:///org/sonar/server/platform/monitoring/BaseMonitorMBean/objectName()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-process:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/platform/ws/InfoAction/writeJson(org.sonar.api.utils.text.JsonWriter)|",
    "called": "|java+method:///org/sonar/process/systeminfo/protobuf/ProtobufSystemInfo$Section/getName()|",
    "v1Body": [
      "|java+method:///java/util/LinkedHashMap/entrySet()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/valueObject(java.lang.Object)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginObject()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/sonar/server/platform/monitoring/Monitor/attributes()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endObject()|",
      "|java+method:///org/sonar/server/platform/monitoring/Monitor/name()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/name(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///org/sonar/server/platform/monitoring/ProcessSystemInfoClient/connect(org.sonar.process.ProcessId)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/process/systeminfo/protobuf/ProtobufSystemInfo$Section/getName()|",
      "|java+method:///org/sonar/process/systeminfo/protobuf/ProtobufSystemInfo$SystemInfo/getSectionsList()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginObject()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/sonar/process/systeminfo/protobuf/ProtobufSystemInfo$Section/getAttributesList()|",
      "|java+method:///org/sonar/server/platform/monitoring/Monitor/attributes()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/sonar/server/platform/ws/InfoAction/writeAttribute(org.sonar.api.utils.text.JsonWriter,org.sonar.process.systeminfo.protobuf.ProtobufSystemInfo$Attribute)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endObject()|",
      "|java+method:///org/sonar/server/platform/monitoring/Monitor/name()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/name(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/valueObject(java.lang.Object)|",
      "|java+method:///java/util/Map/entrySet()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-process:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/platform/monitoring/BaseMonitorMBean/start()|",
    "called": "|java+method:///org/sonar/process/Jmx/register(java.lang.String,java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/sonar/server/platform/monitoring/BaseMonitorMBean/name()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///javax/management/MBeanServer/registerMBean(java.lang.Object,javax.management.ObjectName)|",
      "|java+method:///java/lang/management/ManagementFactory/getPlatformMBeanServer()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/server/platform/monitoring/BaseMonitorMBean/objectName()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/process/Jmx/register(java.lang.String,java.lang.Object)|",
      "|java+method:///org/sonar/server/platform/monitoring/BaseMonitorMBean/objectName()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-process:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/app/TomcatContexts/configure(org.apache.catalina.startup.Tomcat,org.sonar.process.Props)|",
    "called": "|java+method:///org/sonar/process/Props/nonNullValueAsFile(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/process/Props/rawProperties()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/app/TomcatContexts/configureRails(org.sonar.process.Props,org.apache.catalina.Context)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/app/TomcatContexts/webappDir(org.sonar.process.Props)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/sonar/process/Props/nonNullValueAsFile(java.lang.String)|",
      "|java+method:///org/sonar/server/app/TomcatContexts/addStaticDir(org.apache.catalina.startup.Tomcat,java.lang.String,java.io.File)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/apache/catalina/core/StandardContext/addParameter(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/server/app/TomcatContexts/addContext(org.apache.catalina.startup.Tomcat,java.lang.String,java.io.File)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/Properties/entrySet()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/process/Props/rawProperties()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/app/TomcatContexts/configureRails(org.sonar.process.Props,org.apache.catalina.Context)|",
      "|java+method:///org/sonar/server/app/TomcatContexts/getContextPath(org.sonar.process.Props)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/app/TomcatContexts/webappDir(org.sonar.process.Props)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/sonar/process/Props/nonNullValueAsFile(java.lang.String)|",
      "|java+method:///org/sonar/server/app/TomcatContexts/addStaticDir(org.apache.catalina.startup.Tomcat,java.lang.String,java.io.File)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/catalina/core/StandardContext/addParameter(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/server/app/TomcatContexts/addContext(org.apache.catalina.startup.Tomcat,java.lang.String,java.io.File)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/Properties/entrySet()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-process:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/CeModule/configureModule()|",
    "called": "|java+constructor:///org/sonar/process/systeminfo/ProcessStateSystemInfo/ProcessStateSystemInfo(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/computation/CeModule/add(java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/computation/CeModule/add(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/sonar/process/systeminfo/ProcessStateSystemInfo/ProcessStateSystemInfo(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-process:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/RegisterQualityProfiles/start()|",
    "called": "|java+method:///org/sonar/api/utils/log/Loggers/get(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/api/utils/log/Profiler/create(org.sonar.api.utils.log.Logger)|",
      "|java+method:///org/sonar/api/utils/log/Loggers/get(java.lang.Class)|",
      "|java+method:///org/sonar/api/utils/log/Profiler/startInfo(java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/sonar/server/qualityprofile/RegisterQualityProfiles/verifyLanguage(java.lang.String,java.util.List)|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/qualityprofile/RegisterQualityProfiles/registerProfilesForLanguage(org.sonar.db.DbSession,java.lang.String,java.util.List)|",
      "|java+method:///com/google/common/collect/ListMultimap/keySet()|",
      "|java+method:///org/sonar/server/qualityprofile/RegisterQualityProfiles/profilesByLanguage()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/common/collect/ListMultimap/get(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/sonar/api/utils/log/Profiler/stopDebug()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/utils/log/Profiler/create(org.sonar.api.utils.log.Logger)|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///org/sonar/api/utils/log/Profiler/startInfo(java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/sonar/server/qualityprofile/RegisterQualityProfiles/verifyLanguage(java.lang.String,java.util.List)|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/qualityprofile/RegisterQualityProfiles/registerProfilesForLanguage(org.sonar.db.DbSession,java.lang.String,java.util.List)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndexer/setEnabled(boolean)|",
      "|java+method:///com/google/common/collect/ListMultimap/keySet()|",
      "|java+method:///org/sonar/server/qualityprofile/RegisterQualityProfiles/profilesByLanguage()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/common/collect/ListMultimap/get(java.lang.Object)|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndexer/index(java.util.List)|",
      "|java+method:///org/sonar/api/utils/log/Loggers/get(java.lang.Class)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/sonar/api/utils/log/Profiler/stopDebug()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/index/IssueIndex/getCreatedAtFacet(org.sonar.server.issue.IssueQuery,java.util.Map,org.elasticsearch.index.query.QueryBuilder)|",
    "called": "|java+method:///org/sonar/api/utils/System2/getDefaultTimeZone()|",
    "v1Body": [
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramBuilder/interval(org.elasticsearch.search.aggregations.bucket.histogram.DateHistogram$Interval)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/addDebtAggregationIfNeeded(org.sonar.server.issue.IssueQuery,org.elasticsearch.search.aggregations.AggregationBuilder)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/getMinCreatedAt(java.util.Map,org.elasticsearch.index.query.QueryBuilder)|",
      "|java+method:///org/sonar/server/issue/IssueQuery/createdBefore()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramBuilder/postZone(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/System2/getDefaultTimeZone()|",
      "|java+method:///java/util/TimeZone/getID()|",
      "|java+constructor:///org/joda/time/Duration/Duration(long,long)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramBuilder/format(java.lang.String)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramBuilder/minDocCount(long)|",
      "|java+method:///org/sonar/server/issue/IssueQuery/createdAfter()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramBuilder/field(java.lang.String)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramBuilder/extendedBounds(java.lang.Long,java.lang.Long)|",
      "|java+method:///org/elasticsearch/search/aggregations/AggregationBuilders/dateHistogram(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///java/util/Date/getTime()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramBuilder/timeZone(java.lang.String)|",
      "|java+method:///org/joda/time/Duration/isShorterThan(org.joda.time.ReadableDuration)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramBuilder/interval(org.elasticsearch.search.aggregations.bucket.histogram.DateHistogram$Interval)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/getMinCreatedAt(java.util.Map,org.elasticsearch.index.query.QueryBuilder)|",
      "|java+method:///org/sonar/server/issue/IssueQuery/createdBefore()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramBuilder/postZone(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/addEffortAggregationIfNeeded(org.sonar.server.issue.IssueQuery,org.elasticsearch.search.aggregations.AggregationBuilder)|",
      "|java+method:///org/sonar/api/utils/System2/getDefaultTimeZone()|",
      "|java+method:///java/util/TimeZone/getID()|",
      "|java+constructor:///org/joda/time/Duration/Duration(long,long)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramBuilder/format(java.lang.String)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramBuilder/minDocCount(long)|",
      "|java+method:///org/sonar/server/issue/IssueQuery/createdAfter()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramBuilder/field(java.lang.String)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramBuilder/extendedBounds(java.lang.Long,java.lang.Long)|",
      "|java+method:///org/elasticsearch/search/aggregations/AggregationBuilders/dateHistogram(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///java/util/Date/getTime()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramBuilder/timeZone(java.lang.String)|",
      "|java+method:///org/joda/time/Duration/isShorterThan(org.joda.time.ReadableDuration)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/CommonRuleDefinitionsImpl/defineSkippedUnitTestRule(org.sonar.api.server.rule.RulesDefinition$NewRepository)|",
    "called": "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setSeverity(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/debtRemediationFunctions()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setEffortToFixDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/addTags(java.lang.String%5B%5D)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setDebtRemediationFunction(org.sonar.api.server.debt.DebtRemediationFunction)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$DebtRemediationFunctions/linear(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setDebtSubCharacteristic(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRepository/createRule(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setName(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setHtmlDescription(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/debtRemediationFunctions()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/addTags(java.lang.String%5B%5D)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setDebtRemediationFunction(org.sonar.api.server.debt.DebtRemediationFunction)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$DebtRemediationFunctions/linear(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setName(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setHtmlDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setGapDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRepository/createRule(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/ws/UpdateAction/define(org.sonar.api.server.ws.WebService$NewController)|",
    "called": "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setExampleValue(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setExampleValue(java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setHandler(org.sonar.api.server.ws.RequestHandler)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setPossibleValues(java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setPost(boolean)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewController/createAction(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setRequired(boolean)|",
      "|java+method:///org/sonar/api/rule/RuleStatus/values()|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setSince(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setPossibleValues(java.util.Collection)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/createParam(java.lang.String)|",
      "|java+method:///org/sonar/api/server/debt/DebtRemediationFunction$Type/values()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setExampleValue(java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setHandler(org.sonar.api.server.ws.RequestHandler)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setPossibleValues(java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setPost(boolean)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setRequired(boolean)|",
      "|java+method:///org/sonar/api/rule/RuleStatus/values()|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setSince(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setSince(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setPossibleValues(java.util.Collection)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setDeprecatedSince(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewController/createAction(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/createParam(java.lang.String)|",
      "|java+method:///org/sonar/api/server/debt/DebtRemediationFunction$Type/values()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileReset/resetLanguage(java.lang.String)|",
    "called": "|java+method:///org/sonar/api/rules/ActiveRule/getRuleKey()|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivation/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivation/setParameter(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/api/rules/Rule/ruleKey()|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getActiveRuleParams()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/getDefaultValue()|",
      "|java+method:///org/sonar/api/profiles/RulesProfile/getActiveRules()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/sonar/api/rules/ActiveRuleParam/getParamKey()|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/selectRuleParamsByRuleKey(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileReset/doReset(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto,java.util.Collection)|",
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/getOrCreate(org.sonar.db.DbSession,org.sonar.server.qualityprofile.QProfileName)|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getRule()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileReset/loadDefinitionsGroupedByName(java.lang.String)|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getSeverity()|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getRepositoryKey()|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+constructor:///org/sonar/server/qualityprofile/RuleActivation/RuleActivation(org.sonar.api.rule.RuleKey)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getRuleKey()|",
      "|java+method:///org/sonar/api/rules/RulePriority/name()|",
      "|java+method:///org/sonar/server/db/DbClient/deprecatedRuleDao()|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/getName()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/google/common/collect/ListMultimap/asMap()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/sonar/api/rules/ActiveRuleParam/getValue()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/rule/RuleDao/selectRuleParamsByRuleKey(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivation/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivation/setParameter(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/api/rules/Rule/ruleKey()|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getActiveRuleParams()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/getName()|",
      "|java+method:///org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/getDefaultValue()|",
      "|java+method:///org/sonar/api/profiles/RulesProfile/getActiveRules()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/sonar/api/rules/ActiveRuleParam/getParamKey()|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileReset/doReset(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto,java.util.Collection)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/getOrCreate(org.sonar.db.DbSession,org.sonar.server.qualityprofile.QProfileName)|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getRule()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileReset/loadDefinitionsGroupedByName(java.lang.String)|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getSeverity()|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getRepositoryKey()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+constructor:///org/sonar/server/qualityprofile/RuleActivation/RuleActivation(org.sonar.api.rule.RuleKey)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getRuleKey()|",
      "|java+method:///org/sonar/api/rules/RulePriority/name()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/google/common/collect/ListMultimap/asMap()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/sonar/api/rules/ActiveRuleParam/getValue()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/ws/WebServicesWs/defineResponseExample(org.sonar.api.server.ws.WebService$Context,org.sonar.api.server.ws.WebService$NewController)|",
    "called": "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setExampleValue(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setExampleValue(java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setHandler(org.sonar.api.server.ws.RequestHandler)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewController/createAction(java.lang.String)|",
      "|java+method:///java/lang/Class/getResource(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setRequired(boolean)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/createParam(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setSince(java.lang.String)|",
      "|java+constructor:///org/sonar/server/ws/WebServicesWs$2/WebServicesWs$2(org.sonar.server.ws.WebServicesWs,org.sonar.api.server.ws.WebService$Context)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setResponseExample(java.net.URL)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setDescription(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setExampleValue(java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setHandler(org.sonar.api.server.ws.RequestHandler)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewController/createAction(java.lang.String)|",
      "|java+method:///java/lang/Class/getResource(java.lang.String)|",
      "|java+constructor:///org/sonar/server/ws/WebServicesWs$2/WebServicesWs$2(org.sonar.api.server.ws.WebService$Context)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setRequired(boolean)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setSince(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/createParam(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setResponseExample(java.net.URL)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/ws/SearchAction/writeLanguageFields(org.sonarqube.ws.QualityProfiles$SearchWsResponse$QualityProfile$Builder,org.sonar.server.qualityprofile.QProfile)|",
    "called": "|java+method:///org/sonar/api/resources/Languages/get(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$QualityProfile$Builder/setLanguage(java.lang.String)|",
      "|java+method:///org/sonar/api/resources/Languages/get(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/ws/SearchAction/isNotNull(java.lang.Object)|",
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$QualityProfile$Builder/setLanguageName(java.lang.String)|",
      "|java+method:///org/sonar/api/resources/Language/getName()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfile/language()|"
    ],
    "v2Body": [
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$QualityProfile$Builder/setLanguage(java.lang.String)|",
      "|java+method:///org/sonar/api/resources/Languages/get(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$QualityProfile$Builder/setLanguageName(java.lang.String)|",
      "|java+method:///org/sonar/api/resources/Language/getName()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfile/language()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/batch/UsersAction/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsStrings(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/user/index/UserIndex/selectUsersForBatch(java.util.List)|",
      "|java+method:///org/sonar/server/user/UserSession/checkLoggedIn()|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/output()|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsStrings(java.lang.String)|",
      "|java+method:///java/io/OutputStream/close()|",
      "|java+method:///org/sonar/server/batch/UsersAction/handleUser(org.sonar.server.user.index.UserDoc,org.sonar.batch.protocol.input.BatchInput$User$Builder,java.io.OutputStream)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/setMediaType(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Response/stream()|",
      "|java+method:///org/sonar/batch/protocol/input/BatchInput$User/newBuilder()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/user/index/UserIndex/selectUsersForBatch(java.util.List)|",
      "|java+method:///org/sonar/server/user/UserSession/checkLoggedIn()|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/output()|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsStrings(java.lang.String)|",
      "|java+method:///java/io/OutputStream/close()|",
      "|java+method:///org/sonar/server/batch/UsersAction/handleUser(org.sonar.server.user.index.UserDoc,org.sonar.scanner.protocol.input.ScannerInput$User$Builder,java.io.OutputStream)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/setMediaType(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Response/stream()|",
      "|java+method:///org/sonar/scanner/protocol/input/ScannerInput$User/newBuilder()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/ws/WsUtils/writeProtobuf(com.google.protobuf.Message,org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/api/utils/text/JsonWriter/of(java.io.Writer)|",
    "v1Body": [
      "|java+method:///org/sonar/core/util/ProtobufJsonFormat/write(com.google.protobuf.Message,org.sonar.api.utils.text.JsonWriter)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/setMediaType(java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/io/OutputStreamWriter/close()|",
      "|java+method:///org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)|",
      "|java+method:///org/sonar/api/server/ws/Response/stream()|",
      "|java+constructor:///java/io/OutputStreamWriter/OutputStreamWriter(java.io.OutputStream)|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/output()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/of(java.io.Writer)|",
      "|java+method:///org/sonarqube/ws/MessageFormatter/print(com.google.protobuf.MessageOrBuilder)|",
      "|java+method:///org/sonar/api/utils/log/Logger/error(java.lang.String,java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/Request/getMediaType()|",
      "|java+method:///com/google/protobuf/Message/writeTo(java.io.OutputStream)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/core/util/ProtobufJsonFormat/write(com.google.protobuf.Message,org.sonar.api.utils.text.JsonWriter)|",
      "|java+constructor:///java/io/OutputStreamWriter/OutputStreamWriter(java.io.OutputStream,java.nio.charset.Charset)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/setMediaType(java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/io/OutputStreamWriter/close()|",
      "|java+method:///org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)|",
      "|java+method:///org/sonar/api/server/ws/Response/stream()|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/output()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/of(java.io.Writer)|",
      "|java+method:///org/sonarqube/ws/MessageFormatter/print(com.google.protobuf.MessageOrBuilder)|",
      "|java+method:///org/sonar/api/utils/log/Logger/error(java.lang.String,java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/Request/getMediaType()|",
      "|java+method:///com/google/protobuf/Message/writeTo(java.io.OutputStream)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/RegisterQualityProfiles/register(org.sonar.server.qualityprofile.QProfileName,java.util.Collection,org.sonar.db.DbSession)|",
    "called": "|java+method:///org/sonar/api/rules/ActiveRule/getRuleKey()|",
    "v1Body": [
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/activate(org.sonar.db.DbSession,org.sonar.server.qualityprofile.RuleActivation,org.sonar.server.qualityprofile.QProfileName)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivation/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/api/rules/ActiveRuleParam/getKey()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileName/getLanguage()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/qualityprofile/RegisterQualityProfiles/templateKey(org.sonar.server.qualityprofile.QProfileName)|",
      "|java+method:///org/sonar/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/api/profiles/RulesProfile/getActiveRules()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/sonar/api/rules/ActiveRuleParam/getValue()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByNameAndLanguage(java.lang.String,java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/DbClient/loadedTemplateDao()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/create(org.sonar.db.DbSession,org.sonar.server.qualityprofile.QProfileName)|",
      "|java+method:///org/sonar/db/loadedtemplate/LoadedTemplateDao/insert(org.sonar.db.loadedtemplate.LoadedTemplateDto,org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getSeverity()|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getRepositoryKey()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/delete(org.sonar.db.DbSession,java.lang.String,boolean)|",
      "|java+constructor:///org/sonar/server/qualityprofile/RuleActivation/RuleActivation(org.sonar.api.rule.RuleKey)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivation/setParameter(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/sonar/db/loadedtemplate/LoadedTemplateDto/LoadedTemplateDto(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getActiveRuleParams()|",
      "|java+method:///org/sonar/api/utils/log/Logger/info(java.lang.String)|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getRuleKey()|",
      "|java+method:///org/sonar/api/rules/RulePriority/name()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileName/getName()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/activate(org.sonar.db.DbSession,org.sonar.server.qualityprofile.RuleActivation,org.sonar.server.qualityprofile.QProfileName)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivation/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/api/rules/ActiveRuleParam/getKey()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileName/getLanguage()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/qualityprofile/RegisterQualityProfiles/templateKey(org.sonar.server.qualityprofile.QProfileName)|",
      "|java+method:///org/sonar/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/api/profiles/RulesProfile/getActiveRules()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/sonar/api/rules/ActiveRuleParam/getValue()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByNameAndLanguage(java.lang.String,java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/DbClient/loadedTemplateDao()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/create(org.sonar.db.DbSession,org.sonar.server.qualityprofile.QProfileName)|",
      "|java+method:///org/sonar/db/loadedtemplate/LoadedTemplateDao/insert(org.sonar.db.loadedtemplate.LoadedTemplateDto,org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getSeverity()|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getRepositoryKey()|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/delete(org.sonar.db.DbSession,java.lang.String,boolean)|",
      "|java+constructor:///org/sonar/server/qualityprofile/RuleActivation/RuleActivation(org.sonar.api.rule.RuleKey)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivation/setParameter(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/sonar/db/loadedtemplate/LoadedTemplateDto/LoadedTemplateDto(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getActiveRuleParams()|",
      "|java+method:///org/sonar/api/utils/log/Logger/info(java.lang.String)|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getRuleKey()|",
      "|java+method:///org/sonar/api/rules/RulePriority/name()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileName/getName()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/startup/ClearRulesOverloadedDebt/clearDebt(org.sonar.db.DbSession)|",
    "called": "|java+method:///org/sonar/api/utils/System2/now()|",
    "v1Body": [
      "|java+method:///org/sonar/server/rule/db/RuleDao/update(org.sonar.db.DbSession,org.sonar.db.Dto)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setRemediationCoefficient(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/api/utils/log/Logger/warn(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setSubCharacteristicId(java.lang.Integer)|",
      "|java+method:///org/sonar/server/db/DbClient/deprecatedRuleDao()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setRemediationFunction(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/selectAll(org.sonar.db.DbSession)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/server/startup/ClearRulesOverloadedDebt/isDebtOverridden(org.sonar.db.rule.RuleDto)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setRemediationOffset(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/utils/log/Logger/warn(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setUpdatedAt(long)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectAll(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setRemediationFunction(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDao/update(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setRemediationBaseEffort(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///org/sonar/server/startup/ClearRulesOverloadedDebt/isDebtOverridden(org.sonar.db.rule.RuleDto)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setRemediationGapMultiplier(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/user/ws/CreateAction/writeResponse(org.sonar.api.server.ws.Response,java.lang.String,boolean)|",
    "called": "|java+method:///org/sonar/api/utils/text/JsonWriter/close()|",
    "v1Body": [
      "|java+method:///org/sonar/server/user/index/UserIndex/getByLogin(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginObject()|",
      "|java+method:///org/sonar/server/user/ws/CreateAction/writeUser(org.sonar.api.utils.text.JsonWriter,org.sonar.server.user.index.UserDoc)|",
      "|java+method:///org/sonar/server/user/ws/CreateAction/writeReactivationMessage(org.sonar.api.utils.text.JsonWriter,java.lang.String)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/close()|",
      "|java+method:///org/sonar/api/server/ws/Response/newJsonWriter()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endObject()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/user/ws/CreateAction/writeUser(org.sonar.api.utils.text.JsonWriter,org.sonar.db.user.UserDto)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginObject()|",
      "|java+method:///org/sonar/server/user/ws/CreateAction/writeReactivationMessage(org.sonar.api.utils.text.JsonWriter,java.lang.String)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/close()|",
      "|java+method:///org/sonar/server/user/ws/CreateAction/loadUser(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Response/newJsonWriter()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endObject()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/measure/custom/ws/CreateAction/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/api/utils/text/JsonWriter/close()|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/setCreatedAt(long)|",
      "|java+method:///org/sonar/server/user/index/UserIndex/getByLogin(java.lang.String)|",
      "|java+method:///org/sonar/server/measure/custom/ws/CreateAction/checkIsProjectOrModule(org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDao/insert(org.sonar.db.DbSession,org.sonar.db.measure.custom.CustomMeasureDto)|",
      "|java+method:///org/sonar/db/metric/MetricDto/getId()|",
      "|java+method:///org/sonar/db/DbClient/customMeasureDao()|",
      "|java+method:///org/sonar/server/component/ComponentFinder/getByUuidOrKey(org.sonar.db.DbSession,java.lang.String,java.lang.String,org.sonar.server.component.ComponentFinder$ParamNames)|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/close()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/setUserLogin(java.lang.String)|",
      "|java+constructor:///org/sonar/db/measure/custom/CustomMeasureDto/CustomMeasureDto()|",
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+method:///org/sonar/server/measure/custom/ws/CreateAction/checkMeasureDoesNotExistAlready(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto,org.sonar.db.metric.MetricDto)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/sonar/server/measure/custom/ws/CustomMeasureValidator/checkPermissions(org.sonar.server.user.UserSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/server/measure/custom/ws/CreateAction/searchMetric(org.sonar.db.DbSession,org.sonar.api.server.ws.Request)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/setUpdatedAt(long)|",
      "|java+method:///org/sonar/db/component/ComponentDto/uuid()|",
      "|java+method:///org/sonar/server/measure/custom/ws/CustomMeasureJsonWriter/write(org.sonar.api.utils.text.JsonWriter,org.sonar.db.measure.custom.CustomMeasureDto,org.sonar.db.metric.MetricDto,org.sonar.db.component.ComponentDto,org.sonar.api.user.User,boolean,java.util.Collection)|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/setComponentUuid(java.lang.String)|",
      "|java+method:///org/sonar/server/user/index/UserDoc/login()|",
      "|java+method:///org/sonar/server/measure/custom/ws/CustomMeasureValidator/setMeasureValue(org.sonar.db.measure.custom.CustomMeasureDto,java.lang.String,org.sonar.db.metric.MetricDto)|",
      "|java+method:///org/sonar/api/server/ws/Response/newJsonWriter()|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/setMetricId(int)|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/setCreatedAt(long)|",
      "|java+method:///org/sonar/server/measure/custom/ws/CreateAction/checkIsProjectOrModule(org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/db/metric/MetricDto/getId()|",
      "|java+method:///org/sonar/db/DbClient/customMeasureDao()|",
      "|java+method:///org/sonar/server/component/ComponentFinder/getByUuidOrKey(org.sonar.db.DbSession,java.lang.String,java.lang.String,org.sonar.server.component.ComponentFinder$ParamNames)|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonar/db/user/UserDto/getLogin()|",
      "|java+method:///org/sonar/db/user/UserDao/selectOrFailByLogin(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/close()|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/setDescription(java.lang.String)|",
      "|java+constructor:///org/sonar/db/measure/custom/CustomMeasureDto/CustomMeasureDto()|",
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+method:///org/sonar/server/measure/custom/ws/CreateAction/checkMeasureDoesNotExistAlready(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto,org.sonar.db.metric.MetricDto)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/sonar/server/measure/custom/ws/CustomMeasureValidator/checkPermissions(org.sonar.server.user.UserSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/server/measure/custom/ws/CreateAction/searchMetric(org.sonar.db.DbSession,org.sonar.api.server.ws.Request)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDao/insert(org.sonar.db.DbSession,org.sonar.db.measure.custom.CustomMeasureDto)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/setUpdatedAt(long)|",
      "|java+method:///org/sonar/db/component/ComponentDto/uuid()|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/setComponentUuid(java.lang.String)|",
      "|java+method:///org/sonar/db/DbClient/userDao()|",
      "|java+method:///org/sonar/server/measure/custom/ws/CustomMeasureValidator/setMeasureValue(org.sonar.db.measure.custom.CustomMeasureDto,java.lang.String,org.sonar.db.metric.MetricDto)|",
      "|java+method:///org/sonar/api/server/ws/Response/newJsonWriter()|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/setMetricId(int)|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonar/server/measure/custom/ws/CustomMeasureJsonWriter/write(org.sonar.api.utils.text.JsonWriter,org.sonar.db.measure.custom.CustomMeasureDto,org.sonar.db.metric.MetricDto,org.sonar.db.component.ComponentDto,org.sonar.db.user.UserDto,boolean,java.util.Collection)|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/setUserLogin(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/ws/WebServicesWs$2/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/api/server/ws/WebService$Context/controller(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/api/server/ws/WebService$Context/controller(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$Controller/action(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/sonar/server/ws/WebServicesWs/access$000(org.sonar.server.ws.WebServicesWs,org.sonar.api.server.ws.WebService$Action,org.sonar.api.server.ws.Response)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/server/ws/WebService$Context/controller(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$Controller/action(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/server/ws/WebServicesWs/access$000(org.sonar.api.server.ws.WebService$Action,org.sonar.api.server.ws.Response)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/user/ws/GroupsAction/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/api/utils/text/JsonWriter/close()|",
    "v1Body": [
      "|java+method:///org/sonar/api/utils/Paging$Builder/andTotal(int)|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonar/db/user/UserDao/selectByLogin(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/db/user/GroupMembershipQuery$Builder/pageSize(java.lang.Integer)|",
      "|java+constructor:///org/sonar/server/exceptions/NotFoundException/NotFoundException(java.lang.String)|",
      "|java+method:///org/sonar/server/user/UserSession/checkPermission(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/db/user/GroupMembershipQuery$Builder/groupSearch(java.lang.String)|",
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/user/ws/GroupsAction/getMembership(java.lang.String)|",
      "|java+method:///org/sonar/db/user/GroupMembershipQuery/builder()|",
      "|java+method:///org/sonar/api/utils/Paging$Builder/withPageSize(int)|",
      "|java+method:///org/sonar/db/user/GroupMembershipQuery$Builder/login(java.lang.String)|",
      "|java+method:///org/sonar/server/db/DbClient/groupMembershipDao()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginObject()|",
      "|java+method:///org/sonar/api/utils/Paging/offset()|",
      "|java+method:///org/sonar/api/utils/Paging/forPageIndex(int)|",
      "|java+method:///org/sonar/db/user/UserDto/getId()|",
      "|java+method:///org/sonar/db/user/GroupMembershipQuery$Builder/membership(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsInt(java.lang.String)|",
      "|java+method:///org/sonar/db/user/GroupMembershipQuery$Builder/build()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/db/user/GroupMembershipDao/selectGroups(org.apache.ibatis.session.SqlSession,org.sonar.db.user.GroupMembershipQuery,java.lang.Long,int,int)|",
      "|java+method:///org/sonar/server/db/DbClient/userDao()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/close()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/sonar/server/user/UserSession/checkLoggedIn()|",
      "|java+method:///org/sonar/db/user/GroupMembershipQuery$Builder/pageIndex(java.lang.Integer)|",
      "|java+method:///org/sonar/api/server/ws/Response/newJsonWriter()|",
      "|java+method:///org/sonar/server/user/ws/GroupsAction/writeGroups(org.sonar.api.utils.text.JsonWriter,java.util.List)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endObject()|",
      "|java+method:///org/sonar/server/user/ws/GroupsAction/writePaging(org.sonar.api.utils.text.JsonWriter,org.sonar.api.utils.Paging)|",
      "|java+method:///org/sonar/db/user/GroupMembershipDao/countGroups(org.apache.ibatis.session.SqlSession,org.sonar.db.user.GroupMembershipQuery,java.lang.Long)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/utils/Paging$Builder/andTotal(int)|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonar/db/user/UserDao/selectByLogin(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/db/user/GroupMembershipQuery$Builder/pageSize(java.lang.Integer)|",
      "|java+constructor:///org/sonar/server/exceptions/NotFoundException/NotFoundException(java.lang.String)|",
      "|java+method:///org/sonar/server/user/UserSession/checkPermission(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/db/user/GroupMembershipQuery$Builder/groupSearch(java.lang.String)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/user/ws/GroupsAction/getMembership(java.lang.String)|",
      "|java+method:///org/sonar/db/user/GroupMembershipQuery$Builder/login(java.lang.String)|",
      "|java+method:///org/sonar/db/user/GroupMembershipQuery/builder()|",
      "|java+method:///org/sonar/db/DbClient/groupMembershipDao()|",
      "|java+method:///org/sonar/api/utils/Paging$Builder/withPageSize(int)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginObject()|",
      "|java+method:///org/sonar/api/utils/Paging/offset()|",
      "|java+method:///org/sonar/api/utils/Paging/forPageIndex(int)|",
      "|java+method:///org/sonar/db/user/UserDto/getId()|",
      "|java+method:///org/sonar/db/user/GroupMembershipQuery$Builder/membership(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsInt(java.lang.String)|",
      "|java+method:///org/sonar/db/user/GroupMembershipQuery$Builder/build()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/db/DbClient/userDao()|",
      "|java+method:///org/sonar/db/user/GroupMembershipDao/selectGroups(org.apache.ibatis.session.SqlSession,org.sonar.db.user.GroupMembershipQuery,java.lang.Long,int,int)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/close()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/sonar/server/user/UserSession/checkLoggedIn()|",
      "|java+method:///org/sonar/db/user/GroupMembershipQuery$Builder/pageIndex(java.lang.Integer)|",
      "|java+method:///org/sonar/api/server/ws/Response/newJsonWriter()|",
      "|java+method:///org/sonar/server/user/ws/GroupsAction/writeGroups(org.sonar.api.utils.text.JsonWriter,java.util.List)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endObject()|",
      "|java+method:///org/sonar/server/user/ws/GroupsAction/writePaging(org.sonar.api.utils.text.JsonWriter,org.sonar.api.utils.Paging)|",
      "|java+method:///org/sonar/db/user/GroupMembershipDao/countGroups(org.apache.ibatis.session.SqlSession,org.sonar.db.user.GroupMembershipQuery,java.lang.Long)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/CommonRuleDefinitionsImpl/defineBranchCoverageRule(org.sonar.api.server.rule.RulesDefinition$NewRepository)|",
    "called": "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setSeverity(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/debtRemediationFunctions()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setEffortToFixDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/createParam(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewParam/setType(org.sonar.api.server.rule.RuleParamType)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewParam/setName(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/addTags(java.lang.String%5B%5D)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewParam/setDefaultValue(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setDebtRemediationFunction(org.sonar.api.server.debt.DebtRemediationFunction)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$DebtRemediationFunctions/linear(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setDebtSubCharacteristic(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRepository/createRule(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setName(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setHtmlDescription(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/debtRemediationFunctions()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/createParam(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewParam/setType(org.sonar.api.server.rule.RuleParamType)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewParam/setName(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/addTags(java.lang.String%5B%5D)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewParam/setDefaultValue(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setDebtRemediationFunction(org.sonar.api.server.debt.DebtRemediationFunction)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$DebtRemediationFunctions/linear(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setName(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setHtmlDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setGapDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRepository/createRule(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/batch/ProjectAction/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsBoolean(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/batch/ProjectDataQuery/setIssuesMode(boolean)|",
      "|java+method:///org/sonar/server/batch/ProjectDataQuery/setProfileName(java.lang.String)|",
      "|java+method:///org/sonar/server/batch/ProjectAction/buildResponse(org.sonar.batch.protocol.input.ProjectRepositories)|",
      "|java+method:///org/sonar/server/ws/WsUtils/writeProtobuf(com.google.protobuf.Message,org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/load(org.sonar.server.batch.ProjectDataQuery)|",
      "|java+method:///org/sonar/server/batch/ProjectDataQuery/create()|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsBoolean(java.lang.String)|",
      "|java+method:///org/sonar/server/batch/ProjectDataQuery/setModuleKey(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/batch/ProjectDataQuery/setIssuesMode(boolean)|",
      "|java+method:///org/sonar/server/batch/ProjectDataQuery/setProfileName(java.lang.String)|",
      "|java+method:///org/sonar/server/ws/WsUtils/writeProtobuf(com.google.protobuf.Message,org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/load(org.sonar.server.batch.ProjectDataQuery)|",
      "|java+method:///org/sonar/server/batch/ProjectAction/buildResponse(org.sonar.scanner.protocol.input.ProjectRepositories)|",
      "|java+method:///org/sonar/server/batch/ProjectDataQuery/create()|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsBoolean(java.lang.String)|",
      "|java+method:///org/sonar/server/batch/ProjectDataQuery/setModuleKey(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/ws/CreateAction/define(org.sonar.api.server.ws.WebService$NewController)|",
    "called": "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setExampleValue(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setExampleValue(java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setHandler(org.sonar.api.server.ws.RequestHandler)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setBooleanPossibleValues()|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setDefaultValue(java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setPossibleValues(java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setPost(boolean)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewController/createAction(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setRequired(boolean)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/sonar/api/rule/RuleStatus/values()|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setSince(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/createParam(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setPossibleValues(java.util.Collection)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setExampleValue(java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setHandler(org.sonar.api.server.ws.RequestHandler)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setBooleanPossibleValues()|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setDefaultValue(java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setPossibleValues(java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setPost(boolean)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setRequired(boolean)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/sonar/api/rule/RuleStatus/values()|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setSince(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/createParam(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setPossibleValues(java.util.Collection)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setDeprecatedSince(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewController/createAction(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/step/ExtractReportStep/execute()|",
    "called": "|java+method:///org/sonar/api/utils/ZipUtils/unzip(java.io.File,java.io.File)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/io/FileUtils/byteCountToDisplaySize(long)|",
      "|java+method:///org/sonar/api/utils/TempFolder/newDir()|",
      "|java+method:///org/sonar/server/computation/queue/report/ReportFiles/fileForUuid(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/log/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/sonar/server/computation/batch/MutableBatchReportDirectoryHolder/setDirectory(java.io.File)|",
      "|java+method:///org/apache/commons/io/FileUtils/sizeOf(java.io.File)|",
      "|java+method:///org/sonar/server/computation/queue/CeTask/getUuid()|",
      "|java+method:///org/sonar/api/utils/ZipUtils/unzip(java.io.File,java.io.File)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/io/FileUtils/sizeOf(java.io.File)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/io/FileUtils/byteCountToDisplaySize(long)|",
      "|java+method:///org/sonar/api/utils/log/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/sonar/ce/queue/CeTask/getUuid()|",
      "|java+method:///org/sonar/server/computation/batch/MutableBatchReportDirectoryHolder/setDirectory(java.io.File)|",
      "|java+method:///org/sonar/ce/queue/report/ReportFiles/fileForUuid(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/TempFolder/newDir()|",
      "|java+method:///org/sonar/api/utils/ZipUtils/unzip(java.io.File,java.io.File)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/RegisterRules/mergeParams(org.sonar.api.server.rule.RulesDefinition$Rule,org.sonar.db.rule.RuleDto,org.sonar.db.DbSession)|",
    "called": "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/params()|",
    "v1Body": [
      "|java+method:///org/sonar/server/db/DbClient/activeRuleDao()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Param/type()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isEmpty(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/db/ActiveRuleDao/selectByRule(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto)|",
      "|java+method:///org/sonar/server/qualityprofile/db/ActiveRuleDao/deleteParamsByRuleParam(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto,java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleParamDto/createFor(org.sonar.db.rule.RuleParamDto)|",
      "|java+method:///org/sonar/server/qualityprofile/db/ActiveRuleDao/insertParam(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleDto,org.sonar.db.qualityprofile.ActiveRuleParamDto)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleParamDto/setValue(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/setName(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RuleParamType/toString()|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/deleteRuleParam(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto,org.sonar.db.rule.RuleParamDto)|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/setDefaultValue(java.lang.String)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/selectRuleParamsByRuleKey(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/params()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getKey()|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/setType(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Param/description()|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/insertRuleParam(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto,org.sonar.db.rule.RuleParamDto)|",
      "|java+method:///org/sonar/server/rule/RegisterRules/mergeParam(org.sonar.db.rule.RuleParamDto,org.sonar.api.server.rule.RulesDefinition$Param)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Param/key()|",
      "|java+method:///org/sonar/server/db/DbClient/deprecatedRuleDao()|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/getName()|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Param/defaultValue()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/createFor(org.sonar.db.rule.RuleDto)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/param(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/updateRuleParam(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto,org.sonar.db.rule.RuleParamDto)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectRuleParamsByRuleKey(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isEmpty(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleParamDto/createFor(org.sonar.db.rule.RuleParamDto)|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/getName()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/deleteParamsByRuleParam(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto,java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/setName(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RuleParamType/toString()|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/setDefaultValue(java.lang.String)|",
      "|java+method:///org/sonar/db/DbClient/activeRuleDao()|",
      "|java+method:///org/sonar/db/rule/RuleDao/updateRuleParam(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto,org.sonar.db.rule.RuleParamDto)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/getId()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Param/type()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/params()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getKey()|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/setType(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Param/description()|",
      "|java+method:///org/sonar/server/rule/RegisterRules/mergeParam(org.sonar.db.rule.RuleParamDto,org.sonar.api.server.rule.RulesDefinition$Param)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Param/key()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/db/rule/RuleDao/insertRuleParam(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto,org.sonar.db.rule.RuleParamDto)|",
      "|java+method:///org/sonar/db/rule/RuleDao/deleteRuleParam(org.sonar.db.DbSession,int)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/selectByRule(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleParamDto/setValue(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Param/defaultValue()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/createFor(org.sonar.db.rule.RuleDto)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/insertParam(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleDto,org.sonar.db.qualityprofile.ActiveRuleParamDto)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/param(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/measure/custom/ws/UpdateAction/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/api/utils/text/JsonWriter/close()|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/server/user/index/UserIndex/getByLogin(java.lang.String)|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/getComponentUuid()|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsInt(java.lang.String)|",
      "|java+method:///org/sonar/server/measure/custom/ws/UpdateAction/setDescription(org.sonar.db.measure.custom.CustomMeasureDto,java.lang.String)|",
      "|java+method:///org/sonar/db/DbClient/metricDao()|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDao/update(org.sonar.db.DbSession,org.sonar.db.measure.custom.CustomMeasureDto)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/close()|",
      "|java+method:///org/sonar/api/server/ws/Response/newJsonWriter()|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/setUserLogin(java.lang.String)|",
      "|java+method:///org/sonar/db/metric/MetricDao/selectOrFailById(org.sonar.db.DbSession,long)|",
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+method:///org/sonar/server/measure/custom/ws/UpdateAction/checkParameters(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/server/measure/custom/ws/CustomMeasureValidator/checkPermissions(org.sonar.server.user.UserSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDao/selectOrFail(org.sonar.db.DbSession,long)|",
      "|java+method:///org/sonar/db/DbClient/customMeasureDao()|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/getMetricId()|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/setUpdatedAt(long)|",
      "|java+method:///org/sonar/server/measure/custom/ws/CustomMeasureJsonWriter/write(org.sonar.api.utils.text.JsonWriter,org.sonar.db.measure.custom.CustomMeasureDto,org.sonar.db.metric.MetricDto,org.sonar.db.component.ComponentDto,org.sonar.api.user.User,boolean,java.util.Collection)|",
      "|java+method:///org/sonar/api/user/User/login()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/db/DbClient/componentDao()|",
      "|java+method:///org/sonar/db/component/ComponentDao/selectOrFailByUuid(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/measure/custom/ws/UpdateAction/setValue(org.sonar.db.measure.custom.CustomMeasureDto,java.lang.String,org.sonar.db.metric.MetricDto)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/getComponentUuid()|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsInt(java.lang.String)|",
      "|java+method:///org/sonar/server/measure/custom/ws/UpdateAction/setDescription(org.sonar.db.measure.custom.CustomMeasureDto,java.lang.String)|",
      "|java+method:///org/sonar/db/user/UserDao/selectOrFailByLogin(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/setUpdatedAt(long)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/close()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/api/server/ws/Response/newJsonWriter()|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///org/sonar/db/metric/MetricDao/selectOrFailById(org.sonar.db.DbSession,long)|",
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+method:///org/sonar/server/measure/custom/ws/UpdateAction/checkParameters(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/server/measure/custom/ws/CustomMeasureValidator/checkPermissions(org.sonar.server.user.UserSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDao/selectOrFail(org.sonar.db.DbSession,long)|",
      "|java+method:///org/sonar/db/DbClient/customMeasureDao()|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/getMetricId()|",
      "|java+method:///org/sonar/db/DbClient/metricDao()|",
      "|java+method:///org/sonar/db/user/UserDto/getLogin()|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDao/update(org.sonar.db.DbSession,org.sonar.db.measure.custom.CustomMeasureDto)|",
      "|java+method:///org/sonar/db/DbClient/userDao()|",
      "|java+method:///org/sonar/db/DbClient/componentDao()|",
      "|java+method:///org/sonar/db/component/ComponentDao/selectOrFailByUuid(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/measure/custom/ws/UpdateAction/setValue(org.sonar.db.measure.custom.CustomMeasureDto,java.lang.String,org.sonar.db.metric.MetricDto)|",
      "|java+method:///org/sonar/server/measure/custom/ws/CustomMeasureJsonWriter/write(org.sonar.api.utils.text.JsonWriter,org.sonar.db.measure.custom.CustomMeasureDto,org.sonar.db.metric.MetricDto,org.sonar.db.component.ComponentDto,org.sonar.db.user.UserDto,boolean,java.util.Collection)|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/setUserLogin(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/ws/ChangelogAction/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/api/utils/Paging$Builder/andTotal(int)|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/api/utils/Paging$Builder/withPageSize(int)|",
      "|java+method:///org/sonar/server/es/SearchOptions/getLimit()|",
      "|java+constructor:///org/sonar/server/qualityprofile/QProfileActivityQuery/QProfileActivityQuery()|",
      "|java+method:///org/sonar/server/search/Result/getTotal()|",
      "|java+constructor:///org/sonar/server/es/SearchOptions/SearchOptions()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/paramAsDateTime(java.lang.String)|",
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivityQuery/setSince(java.util.Date)|",
      "|java+method:///org/sonar/api/utils/Paging/forPageIndex(int)|",
      "|java+method:///org/sonar/server/qualityprofile/ws/QProfileIdentificationParamUtils/getProfileKeyFromParameters(org.sonar.api.server.ws.Request,org.sonar.server.qualityprofile.QProfileFactory,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/es/SearchOptions/setPage(int,int)|",
      "|java+method:///org/sonar/api/utils/Paging$Builder/andTotal(int)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivityQuery/setTo(java.util.Date)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsInt(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivityQuery/setQprofileKey(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/ws/ChangelogAction/writeResponse(org.sonar.api.utils.text.JsonWriter,org.sonar.server.search.Result,org.sonar.api.utils.Paging)|",
      "|java+constructor:///org/sonar/server/exceptions/NotFoundException/NotFoundException(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/ws/ChangelogAction/searchActivities(org.sonar.server.qualityprofile.QProfileActivityQuery,org.sonar.server.es.SearchOptions)|",
      "|java+method:///org/sonar/api/server/ws/Response/newJsonWriter()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/api/utils/Paging$Builder/withPageSize(int)|",
      "|java+method:///org/sonar/server/es/SearchOptions/getLimit()|",
      "|java+constructor:///org/sonar/server/qualityprofile/QProfileActivityQuery/QProfileActivityQuery()|",
      "|java+method:///org/sonar/server/search/Result/getTotal()|",
      "|java+constructor:///org/sonar/server/es/SearchOptions/SearchOptions()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/paramAsDateTime(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivityQuery/setSince(java.util.Date)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/api/utils/Paging/forPageIndex(int)|",
      "|java+method:///org/sonar/server/qualityprofile/ws/QProfileIdentificationParamUtils/getProfileKeyFromParameters(org.sonar.api.server.ws.Request,org.sonar.server.qualityprofile.QProfileFactory,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/es/SearchOptions/setPage(int,int)|",
      "|java+method:///org/sonar/api/utils/Paging$Builder/andTotal(int)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivityQuery/setTo(java.util.Date)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsInt(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivityQuery/setQprofileKey(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/ws/ChangelogAction/writeResponse(org.sonar.api.utils.text.JsonWriter,org.sonar.server.search.Result,org.sonar.api.utils.Paging)|",
      "|java+constructor:///org/sonar/server/exceptions/NotFoundException/NotFoundException(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/ws/ChangelogAction/searchActivities(org.sonar.server.qualityprofile.QProfileActivityQuery,org.sonar.server.es.SearchOptions)|",
      "|java+method:///org/sonar/api/server/ws/Response/newJsonWriter()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/user/ws/DeactivateAction/writeResponse(org.sonar.api.server.ws.Response,java.lang.String)|",
    "called": "|java+method:///org/sonar/api/utils/text/JsonWriter/close()|",
    "v1Body": [
      "|java+method:///org/sonar/server/user/index/UserIndex/getByLogin(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginObject()|",
      "|java+method:///org/sonar/server/user/ws/DeactivateAction/writeUser(org.sonar.api.utils.text.JsonWriter,org.sonar.server.user.index.UserDoc)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/close()|",
      "|java+method:///org/sonar/api/server/ws/Response/newJsonWriter()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endObject()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginObject()|",
      "|java+method:///org/sonar/server/user/ws/DeactivateAction/writeUser(org.sonar.api.utils.text.JsonWriter,java.lang.String)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/close()|",
      "|java+method:///org/sonar/api/server/ws/Response/newJsonWriter()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endObject()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/debt/DebtModelBackup/reset()|",
    "called": "|java+method:///org/sonar/api/server/rule/RulesDefinition$Context/repositories()|",
    "v1Body": [
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/selectEnabledAndNonManual(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/debt/DebtModelBackup/checkPermission()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Context/repositories()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/debt/DebtModelBackup/restoreCharacteristics(org.sonar.db.DbSession,org.sonar.server.debt.DebtModelXMLExporter$DebtModel,java.util.Date)|",
      "|java+method:///org/sonar/server/db/DbClient/deprecatedRuleDao()|",
      "|java+method:///org/sonar/server/debt/DebtModelBackup/resetRules(java.util.List,java.util.List,java.util.List,java.util.Date,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/rule/RuleDefinitionsLoader/load()|",
      "|java+constructor:///java/util/Date/Date(long)|",
      "|java+method:///org/sonar/server/debt/DebtModelBackup/loadModelFromPlugin(java.lang.String)|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Repository/rules()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/server/rule/index/RuleIndexer/index()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectEnabled(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/debt/DebtModelBackup/checkPermission()|",
      "|java+method:///org/sonar/server/rule/RuleDefinitionsLoader/load()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Context/repositories()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///org/sonar/server/debt/DebtModelBackup/resetRules(java.util.List,java.util.List,long,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Repository/rules()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/ws/SearchAction/define(org.sonar.api.server.ws.WebService$NewController)|",
    "called": "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setExampleValue(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setHandler(org.sonar.api.server.ws.RequestHandler)|",
      "|java+method:///org/sonar/server/rule/ws/SearchAction/possibleFacets()|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewController/createAction(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///org/sonar/server/rule/ws/SearchAction/doDefinition(org.sonar.api.server.ws.WebService$NewAction)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/createParam(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setExampleValue(java.lang.Object)|",
      "|java+method:///org/sonar/server/rule/ws/SearchAction/possibleFields()|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setPossibleValues(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/addPagingParams(int,int)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setExampleValue(java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setHandler(org.sonar.api.server.ws.RequestHandler)|",
      "|java+method:///org/sonar/server/rule/ws/SearchAction/possibleFacets()|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewController/createAction(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///org/sonar/server/rule/ws/SearchAction/doDefinition(org.sonar.api.server.ws.WebService$NewAction)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/createParam(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setPossibleValues(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/addPagingParams(int,int)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileExporters/wrap(org.sonar.db.qualityprofile.QualityProfileDto)|",
    "called": "|java+method:///org/sonar/api/rules/ActiveRule/setParameter(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleKey/ruleKey()|",
      "|java+method:///org/sonar/api/profiles/RulesProfile/activateRule(org.sonar.api.rules.Rule,org.sonar.api.rules.RulePriority)|",
      "|java+method:///org/sonar/api/rules/ActiveRule/setParameter(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/sonar/api/profiles/RulesProfile/RulesProfile(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/api/rules/RulePriority/valueOf(java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRule/severity()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getName()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRule/key()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRule/params()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileLoader/findActiveRulesByProfile(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getLanguage()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/api/rules/RuleFinder/findByKey(org.sonar.api.rule.RuleKey)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Lists/transform(java.util.List,com.google.common.base.Function)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/getSeverityString()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
      "|java+method:///org/sonar/api/profiles/RulesProfile/activateRule(org.sonar.api.rules.Rule,org.sonar.api.rules.RulePriority)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/selectParamsByActiveRuleIds(org.sonar.db.DbSession,java.util.List)|",
      "|java+method:///org/sonar/api/rules/ActiveRule/setParameter(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/sonar/api/profiles/RulesProfile/RulesProfile(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/api/rules/RulePriority/valueOf(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleParamDto/getKey()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getName()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/getKey()|",
      "|java+method:///com/google/common/collect/FluentIterable/index(com.google.common.base.Function)|",
      "|java+method:///org/sonar/db/DbClient/activeRuleDao()|",
      "|java+method:///com/google/common/collect/FluentIterable/from(java.lang.Iterable)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleKey/ruleKey()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/selectByProfileKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getLanguage()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/api/rules/RuleFinder/findByKey(org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleParamDto/getValue()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/getId()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/common/collect/ListMultimap/get(java.lang.Object)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+constructor:///org/sonar/server/notification/NotificationService/NotificationService(org.sonar.api.config.Settings,org.sonar.server.notification.DefaultNotificationManager,org.sonar.db.DbClient,org.sonar.server.notification.NotificationDispatcher%5B%5D)|",
    "called": "|java+method:///org/sonar/api/config/Settings/getLong(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/google/common/collect/ImmutableList/copyOf(java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/sonar/api/config/Settings/getLong(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/ImmutableList/copyOf(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Class/getSimpleName()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/sonar/api/config/Settings/getLong(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/CommonRuleDefinitionsImpl/defineFailedUnitTestRule(org.sonar.api.server.rule.RulesDefinition$NewRepository)|",
    "called": "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setSeverity(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/debtRemediationFunctions()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setEffortToFixDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/addTags(java.lang.String%5B%5D)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setDebtRemediationFunction(org.sonar.api.server.debt.DebtRemediationFunction)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$DebtRemediationFunctions/linear(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setDebtSubCharacteristic(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRepository/createRule(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setName(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setHtmlDescription(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/debtRemediationFunctions()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/addTags(java.lang.String%5B%5D)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setDebtRemediationFunction(org.sonar.api.server.debt.DebtRemediationFunction)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$DebtRemediationFunctions/linear(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setName(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setHtmlDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setGapDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRepository/createRule(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/RegisterRules/start()|",
    "called": "|java+method:///org/sonar/api/utils/log/Profiler/create(org.sonar.api.utils.log.Logger)|",
    "v1Body": [
      "|java+method:///org/sonar/server/rule/RegisterRules/getRepositories(org.sonar.api.server.rule.RulesDefinition$Context)|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/api/resources/Languages/get(java.lang.String)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/api/utils/log/Profiler/create(org.sonar.api.utils.log.Logger)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/rule/RegisterRules/registerRule(org.sonar.api.server.rule.RulesDefinition$Rule,java.util.Map,java.util.Map,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$ExtendedRepository/rules()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$ExtendedRepository/language()|",
      "|java+method:///org/sonar/api/utils/log/Profiler/startInfo(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/RuleDefinitionsLoader/load()|",
      "|java+method:///org/sonar/server/rule/RegisterRules/loadRules(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/rule/RegisterRules/loadCharacteristics(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/api/utils/log/Profiler/stopDebug()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/server/rule/RegisterRules/removeActiveRulesOnStillExistingRepositories(org.sonar.db.DbSession,java.util.Collection,org.sonar.api.server.rule.RulesDefinition$Context)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/rule/RegisterRules/processRemainingDbRules(java.util.Collection,org.sonar.db.DbSession)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/rule/RegisterRules/getRepositories(org.sonar.api.server.rule.RulesDefinition$Context)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/api/resources/Languages/get(java.lang.String)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/api/utils/log/Profiler/create(org.sonar.api.utils.log.Logger)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndexer/index(java.util.List)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$ExtendedRepository/rules()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$ExtendedRepository/language()|",
      "|java+method:///org/sonar/api/utils/log/Profiler/startInfo(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/RuleDefinitionsLoader/load()|",
      "|java+method:///org/sonar/server/rule/RegisterRules/loadRules(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/api/utils/log/Profiler/stopDebug()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/server/rule/RegisterRules/registerRule(org.sonar.api.server.rule.RulesDefinition$Rule,java.util.Map,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/es/BaseIndexer/index()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndexer/setEnabled(boolean)|",
      "|java+method:///org/sonar/server/rule/RegisterRules/processRemainingDbRules(java.util.Collection,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/rule/RegisterRules/removeActiveRulesOnStillExistingRepositories(org.sonar.db.DbSession,java.util.Collection,org.sonar.api.server.rule.RulesDefinition$Context)|",
      "|java+method:///org/sonar/server/rule/index/RuleIndexer/setEnabled(boolean)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/platform/monitoring/SystemMonitor/attributes()|",
    "called": "|java+method:///org/sonar/api/utils/DateUtils/formatDateTime(java.util.Date)|",
    "v1Body": [
      "|java+method:///java/lang/management/OperatingSystemMXBean/getSystemLoadAverage()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/platform/monitoring/SystemMonitor/runtime()|",
      "|java+method:///java/lang/management/ManagementFactory/getOperatingSystemMXBean()|",
      "|java+method:///java/lang/Runtime/freeMemory()|",
      "|java+method:///java/lang/management/MemoryMXBean/getHeapMemoryUsage()|",
      "|java+method:///org/sonar/api/utils/DateUtils/formatDateTime(java.util.Date)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/management/RuntimeMXBean/getLibraryPath()|",
      "|java+method:///org/sonar/server/platform/monitoring/SystemMonitor/classLoadingMXBean()|",
      "|java+method:///org/sonar/server/platform/monitoring/SystemMonitor/threadMXBean()|",
      "|java+method:///java/lang/management/RuntimeMXBean/getBootClassPath()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/management/RuntimeMXBean/getStartTime()|",
      "|java+method:///java/util/LinkedHashMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/server/platform/monitoring/SystemMonitor/runtimeMXBean()|",
      "|java+method:///java/lang/management/MemoryUsage/toString()|",
      "|java+method:///java/lang/management/ClassLoadingMXBean/getUnloadedClassCount()|",
      "|java+method:///java/lang/Runtime/totalMemory()|",
      "|java+method:///java/lang/management/ClassLoadingMXBean/getLoadedClassCount()|",
      "|java+constructor:///java/util/Date/Date(long)|",
      "|java+method:///java/lang/Runtime/maxMemory()|",
      "|java+method:///java/lang/management/RuntimeMXBean/getClassPath()|",
      "|java+method:///java/lang/management/ThreadMXBean/getDaemonThreadCount()|",
      "|java+method:///java/lang/Runtime/availableProcessors()|",
      "|java+method:///java/lang/management/RuntimeMXBean/getVmVendor()|",
      "|java+method:///java/lang/management/ThreadMXBean/getThreadCount()|",
      "|java+method:///java/lang/management/RuntimeMXBean/getVmVersion()|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///org/sonar/server/platform/monitoring/SystemMonitor/memoryMXBean()|",
      "|java+method:///java/lang/management/ClassLoadingMXBean/getTotalLoadedClassCount()|",
      "|java+method:///java/lang/management/ThreadMXBean/getPeakThreadCount()|",
      "|java+method:///org/sonar/server/platform/monitoring/SystemMonitor/formatMemory(long)|",
      "|java+constructor:///java/util/LinkedHashMap/LinkedHashMap()|",
      "|java+method:///java/lang/management/RuntimeMXBean/getVmName()|",
      "|java+method:///java/lang/management/MemoryMXBean/getNonHeapMemoryUsage()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/management/OperatingSystemMXBean/getSystemLoadAverage()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/platform/monitoring/SystemMonitor/runtime()|",
      "|java+method:///java/lang/management/ManagementFactory/getOperatingSystemMXBean()|",
      "|java+method:///java/lang/Runtime/freeMemory()|",
      "|java+method:///java/lang/management/MemoryMXBean/getHeapMemoryUsage()|",
      "|java+method:///org/sonar/api/utils/DateUtils/formatDateTime(java.util.Date)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/management/RuntimeMXBean/getLibraryPath()|",
      "|java+method:///org/sonar/server/platform/monitoring/SystemMonitor/classLoadingMXBean()|",
      "|java+method:///org/sonar/server/platform/monitoring/SystemMonitor/threadMXBean()|",
      "|java+method:///java/lang/management/RuntimeMXBean/getBootClassPath()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/management/RuntimeMXBean/getStartTime()|",
      "|java+method:///org/sonar/server/platform/monitoring/SystemMonitor/runtimeMXBean()|",
      "|java+method:///java/lang/management/MemoryUsage/toString()|",
      "|java+method:///java/lang/management/ClassLoadingMXBean/getUnloadedClassCount()|",
      "|java+method:///java/lang/Runtime/totalMemory()|",
      "|java+method:///java/lang/management/ClassLoadingMXBean/getLoadedClassCount()|",
      "|java+constructor:///java/util/Date/Date(long)|",
      "|java+method:///java/lang/Runtime/maxMemory()|",
      "|java+method:///java/lang/management/RuntimeMXBean/getClassPath()|",
      "|java+method:///java/lang/management/ThreadMXBean/getDaemonThreadCount()|",
      "|java+method:///java/lang/Runtime/availableProcessors()|",
      "|java+method:///java/lang/management/RuntimeMXBean/getVmVendor()|",
      "|java+method:///java/lang/management/ThreadMXBean/getThreadCount()|",
      "|java+method:///java/lang/management/RuntimeMXBean/getVmVersion()|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///org/sonar/server/platform/monitoring/SystemMonitor/memoryMXBean()|",
      "|java+method:///java/lang/management/ClassLoadingMXBean/getTotalLoadedClassCount()|",
      "|java+method:///java/lang/management/ThreadMXBean/getPeakThreadCount()|",
      "|java+method:///org/sonar/server/platform/monitoring/SystemMonitor/formatMemory(long)|",
      "|java+constructor:///java/util/LinkedHashMap/LinkedHashMap()|",
      "|java+method:///java/lang/management/RuntimeMXBean/getVmName()|",
      "|java+method:///java/lang/management/MemoryMXBean/getNonHeapMemoryUsage()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/ws/BulkRuleActivationActions/bulkActivate(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/rule/ws/SearchAction/createRuleQuery(org.sonar.server.rule.index.RuleQuery,org.sonar.api.server.ws.Request)|",
      "|java+method:///org/sonar/server/qualityprofile/ws/BulkRuleActivationActions/writeResponse(org.sonar.server.qualityprofile.BulkChangeResult,org.sonar.api.server.ws.Response)|",
      "|java+method:///org/sonar/server/rule/RuleService/newRuleQuery()|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileService/bulkActivate(org.sonar.server.rule.index.RuleQuery,java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/qualityprofile/ws/BulkRuleActivationActions/createRuleQuery(org.sonar.server.rule.index.RuleQuery,org.sonar.api.server.ws.Request)|",
      "|java+method:///org/sonar/server/qualityprofile/ws/BulkRuleActivationActions/writeResponse(org.sonar.server.qualityprofile.BulkChangeResult,org.sonar.api.server.ws.Response)|",
      "|java+method:///org/sonar/server/rule/RuleService/newRuleQuery()|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileService/bulkActivate(org.sonar.server.rule.index.RuleQuery,java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+initializer:///org/sonar/server/plugins/ServerPluginRepository/ServerPluginRepository$initializer|",
    "called": "|java+method:///org/sonar/api/utils/log/Loggers/get(java.lang.Class)|",
    "v1Body": [
      "|java+method:///com/google/common/base/Joiner/on(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/log/Loggers/get(java.lang.Class)|",
      "|java+method:///com/google/common/base/Joiner/skipNulls()|",
      "|java+method:///com/google/common/collect/ImmutableSet/of(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Joiner/on(java.lang.String)|",
      "|java+method:///com/google/common/collect/ImmutableSet/of(java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/api/utils/log/Loggers/get(java.lang.Class)|",
      "|java+method:///com/google/common/base/Joiner/skipNulls()|",
      "|java+method:///com/google/common/collect/ImmutableSet/of(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/ws/CreateAction/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsBoolean(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/rule/NewRule/createForCustomRule(java.lang.String,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsBoolean(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/ws/CreateAction/writeResponse(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/api/utils/KeyValueFormat/parse(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/rule/NewRule/setPreventReactivation(boolean)|",
      "|java+method:///org/sonar/server/rule/ReactivationException/ruleKey()|",
      "|java+method:///org/sonar/server/rule/ws/CreateAction/write409(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response,org.sonar.api.rule.RuleKey)|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/NewRule/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/api/rule/RuleStatus/valueOf(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/NewRule/setStatus(org.sonar.api.rule.RuleStatus)|",
      "|java+constructor:///org/sonar/server/exceptions/BadRequestException/BadRequestException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/NewRule/setMarkdownDescription(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/NewRule/setName(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/NewRule/setParameters(java.util.Map)|",
      "|java+method:///org/sonar/server/rule/NewRule/createForManualRule(java.lang.String)|",
      "|java+method:///org/sonar/api/rule/RuleKey/parse(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/RuleService/create(org.sonar.server.rule.NewRule)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/rule/NewCustomRule/setMarkdownDescription(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/NewCustomRule/setName(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsBoolean(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/KeyValueFormat/parse(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/NewCustomRule/createForCustomRule(java.lang.String,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonar/api/rule/RuleKey/parse(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/NewCustomRule/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/ReactivationException/ruleKey()|",
      "|java+method:///org/sonar/server/rule/ws/CreateAction/writeResponse(org.sonar.db.DbSession,org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/NewCustomRule/setParameters(java.util.Map)|",
      "|java+method:///org/sonar/server/rule/RuleCreator/create(org.sonar.server.rule.NewCustomRule)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/api/rule/RuleStatus/valueOf(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/NewCustomRule/setPreventReactivation(boolean)|",
      "|java+method:///org/sonar/server/rule/ws/CreateAction/write409(org.sonar.db.DbSession,org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/NewCustomRule/setStatus(org.sonar.api.rule.RuleStatus)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/ui/ws/ComponentNavigationAction/writeConfigPageAccess(org.sonar.api.utils.text.JsonWriter,boolean,org.sonar.db.component.ComponentDto)|",
    "called": "|java+method:///org/sonar/api/utils/text/JsonWriter/prop(java.lang.String,boolean)|",
    "v1Body": [
      "|java+method:///org/sonar/db/component/ComponentDto/qualifier()|",
      "|java+method:///org/sonar/server/ui/ws/ComponentNavigationAction/componentTypeHasProperty(org.sonar.db.component.ComponentDto,java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/sonar/db/component/ComponentDto/uuid()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/prop(java.lang.String,boolean)|",
      "|java+method:///org/sonar/server/computation/ws/ActivityAction/isAllowedOnComponentUuid(org.sonar.server.user.UserSession,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/component/ComponentDto/qualifier()|",
      "|java+method:///org/sonar/server/ui/ws/ComponentNavigationAction/componentTypeHasProperty(org.sonar.db.component.ComponentDto,java.lang.String)|",
      "|java+method:///org/sonar/server/ce/ws/ActivityAction/isAllowedOnComponentUuid(org.sonar.server.user.UserSession,java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/sonar/db/component/ComponentDto/uuid()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/prop(java.lang.String,boolean)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/CommonRuleDefinitionsImpl/defineDuplicatedBlocksRule(org.sonar.api.server.rule.RulesDefinition$NewRepository)|",
    "called": "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setSeverity(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/debtRemediationFunctions()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/addTags(java.lang.String%5B%5D)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setDebtRemediationFunction(org.sonar.api.server.debt.DebtRemediationFunction)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setDebtSubCharacteristic(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRepository/createRule(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setName(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setHtmlDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setEffortToFixDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$DebtRemediationFunctions/linearWithOffset(java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/debtRemediationFunctions()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$DebtRemediationFunctions/linearWithOffset(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/addTags(java.lang.String%5B%5D)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setDebtRemediationFunction(org.sonar.api.server.debt.DebtRemediationFunction)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setName(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setHtmlDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setGapDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRepository/createRule(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/issue/commonrule/CommonRule/processFile(org.sonar.server.computation.component.Component,java.lang.String)|",
    "called": "|java+method:///org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setMessage(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setLine(java.lang.Integer)|",
      "|java+method:///org/sonar/server/computation/issue/commonrule/CommonRule/doProcessFile(org.sonar.server.computation.component.Component,org.sonar.server.computation.qualityprofile.ActiveRule)|",
      "|java+method:///org/sonar/server/computation/qualityprofile/ActiveRulesHolder/get(org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/server/rule/CommonRuleKeys/commonRepositoryForLang(java.lang.String)|",
      "|java+constructor:///org/sonar/core/issue/DefaultIssue/DefaultIssue()|",
      "|java+method:///org/sonar/server/computation/issue/commonrule/CommonRule$CommonRuleIssue/access$000(org.sonar.server.computation.issue.commonrule.CommonRule$CommonRuleIssue)|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/sonar/server/computation/qualityprofile/ActiveRule/getSeverity()|",
      "|java+method:///org/sonar/server/computation/issue/commonrule/CommonRule$CommonRuleIssue/access$100(org.sonar.server.computation.issue.commonrule.CommonRule$CommonRuleIssue)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setEffortToFix(java.lang.Double)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setRuleKey(org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setChecksum(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setMessage(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setRuleKey(org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setGap(java.lang.Double)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setLine(java.lang.Integer)|",
      "|java+method:///org/sonar/server/computation/issue/commonrule/CommonRule/doProcessFile(org.sonar.server.computation.component.Component,org.sonar.server.computation.qualityprofile.ActiveRule)|",
      "|java+method:///org/sonar/server/computation/qualityprofile/ActiveRulesHolder/get(org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/server/rule/CommonRuleKeys/commonRepositoryForLang(java.lang.String)|",
      "|java+constructor:///org/sonar/core/issue/DefaultIssue/DefaultIssue()|",
      "|java+method:///org/sonar/server/computation/issue/commonrule/CommonRule$CommonRuleIssue/access$000(org.sonar.server.computation.issue.commonrule.CommonRule$CommonRuleIssue)|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/sonar/server/computation/qualityprofile/ActiveRule/getSeverity()|",
      "|java+method:///org/sonar/server/computation/issue/commonrule/CommonRule$CommonRuleIssue/access$100(org.sonar.server.computation.issue.commonrule.CommonRule$CommonRuleIssue)|",
      "|java+method:///org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setChecksum(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/debt/DebtModelBackup/restoreXmlModel(java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/sonar/api/utils/ValidationMessages/create()|",
    "v1Body": [
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/debt/DebtCharacteristicsXMLImporter/importXML(java.lang.String)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/IllegalArgumentException/getMessage()|",
      "|java+method:///org/sonar/server/debt/DebtModelBackup/rules(java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/debt/DebtModelBackup/restoreCharacteristics(org.sonar.db.DbSession,org.sonar.server.debt.DebtModelXMLExporter$DebtModel,java.util.Date)|",
      "|java+method:///org/sonar/server/debt/DebtModelBackup/checkPermission()|",
      "|java+constructor:///java/util/Date/Date(long)|",
      "|java+method:///org/sonar/api/utils/ValidationMessages/create()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///org/sonar/server/debt/DebtModelBackup/restoreRules(java.util.List,java.util.List,java.util.List,org.sonar.api.utils.ValidationMessages,java.util.Date,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/debt/DebtRulesXMLImporter/importXML(java.lang.String,org.sonar.api.utils.ValidationMessages)|",
      "|java+method:///org/sonar/api/utils/ValidationMessages/addErrorText(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/IllegalArgumentException/getMessage()|",
      "|java+method:///org/sonar/server/debt/DebtModelBackup/rules(java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/debt/DebtModelBackup/checkPermission()|",
      "|java+constructor:///java/util/Date/Date(long)|",
      "|java+method:///org/sonar/api/utils/ValidationMessages/create()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///org/sonar/server/rule/index/RuleIndexer/index()|",
      "|java+method:///org/sonar/server/debt/DebtModelBackup/restoreRules(java.util.List,java.util.List,org.sonar.api.utils.ValidationMessages,java.util.Date,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/debt/DebtRulesXMLImporter/importXML(java.lang.String,org.sonar.api.utils.ValidationMessages)|",
      "|java+method:///org/sonar/api/utils/ValidationMessages/addErrorText(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/index/IssueResultSetIterator/read(java.sql.ResultSet)|",
    "called": "|java+method:///org/sonar/api/rule/RuleKey/toString()|",
    "v1Body": [
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setAssignee(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueResultSetIterator/read(java.sql.ResultSet)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setTechnicalUpdateDate(java.util.Date)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setAttributes(java.lang.String)|",
      "|java+method:///org/sonar/db/DatabaseUtils/getInt(java.sql.ResultSet,int)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setDirectoryPath(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setProjectUuid(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setComponentUuid(java.lang.String)|",
      "|java+constructor:///java/util/Date/Date(long)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setModuleUuid(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setKey(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setRuleKey(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setMessage(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueResultSetIterator/extractDirPath(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setFuncUpdateDate(java.util.Date)|",
      "|java+method:///java/sql/ResultSet/getLong(int)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setStatus(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/filePath()|",
      "|java+method:///org/sonar/api/utils/DateUtils/longToDate(java.lang.Long)|",
      "|java+method:///com/google/common/base/Splitter/split(java.lang.CharSequence)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setManualSeverity(boolean)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setEffortToFix(java.lang.Double)|",
      "|java+method:///org/sonar/server/issue/index/IssueResultSetIterator/extractFilePath(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setLanguage(java.lang.String)|",
      "|java+method:///java/sql/ResultSet/getString(int)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setSeverity(java.lang.String)|",
      "|java+method:///com/google/common/collect/ImmutableList/copyOf(java.lang.Iterable)|",
      "|java+constructor:///org/sonar/server/issue/index/IssueDoc/IssueDoc(java.util.Map)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setTags(java.util.Collection)|",
      "|java+method:///java/sql/ResultSet/getBoolean(int)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setReporter(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setLine(java.lang.Integer)|",
      "|java+method:///org/sonar/db/DatabaseUtils/getDouble(java.sql.ResultSet,int)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setFilePath(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setFuncCloseDate(java.util.Date)|",
      "|java+method:///org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setChecksum(java.lang.String)|",
      "|java+method:///com/google/common/collect/Maps/newHashMapWithExpectedSize(int)|",
      "|java+method:///org/sonar/server/issue/index/IssueResultSetIterator/extractModule(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setDebt(java.lang.Long)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setAuthorLogin(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setFuncCreationDate(java.util.Date)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setActionPlanKey(java.lang.String)|",
      "|java+method:///org/sonar/api/rule/RuleKey/toString()|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setModuleUuidPath(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setResolution(java.lang.String)|",
      "|java+method:///org/sonar/db/DatabaseUtils/getLong(java.sql.ResultSet,int)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setAssignee(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueResultSetIterator/read(java.sql.ResultSet)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setTechnicalUpdateDate(java.util.Date)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setAttributes(java.lang.String)|",
      "|java+method:///org/sonar/db/DatabaseUtils/getInt(java.sql.ResultSet,int)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setDirectoryPath(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setProjectUuid(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setComponentUuid(java.lang.String)|",
      "|java+constructor:///java/util/Date/Date(long)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setModuleUuid(java.lang.String)|",
      "|java+method:///org/sonar/api/rule/RuleKey/toString()|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setRuleKey(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setMessage(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueResultSetIterator/extractDirPath(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setFuncUpdateDate(java.util.Date)|",
      "|java+method:///java/sql/ResultSet/getLong(int)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setStatus(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/filePath()|",
      "|java+method:///org/sonar/api/utils/DateUtils/longToDate(java.lang.Long)|",
      "|java+method:///com/google/common/base/Splitter/split(java.lang.CharSequence)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setManualSeverity(boolean)|",
      "|java+method:///org/sonar/server/issue/index/IssueResultSetIterator/extractFilePath(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setLanguage(java.lang.String)|",
      "|java+method:///org/sonar/api/rules/RuleType/valueOf(int)|",
      "|java+method:///java/sql/ResultSet/getInt(int)|",
      "|java+method:///java/sql/ResultSet/getString(int)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setSeverity(java.lang.String)|",
      "|java+method:///com/google/common/collect/ImmutableList/copyOf(java.lang.Iterable)|",
      "|java+constructor:///org/sonar/server/issue/index/IssueDoc/IssueDoc(java.util.Map)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setGap(java.lang.Double)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setTags(java.util.Collection)|",
      "|java+method:///java/sql/ResultSet/getBoolean(int)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setLine(java.lang.Integer)|",
      "|java+method:///org/sonar/db/DatabaseUtils/getDouble(java.sql.ResultSet,int)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setFilePath(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setEffort(java.lang.Long)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setFuncCloseDate(java.util.Date)|",
      "|java+method:///org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setChecksum(java.lang.String)|",
      "|java+method:///com/google/common/collect/Maps/newHashMapWithExpectedSize(int)|",
      "|java+method:///org/sonar/server/issue/index/IssueResultSetIterator/extractModule(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setAuthorLogin(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setFuncCreationDate(java.util.Date)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setType(org.sonar.api.rules.RuleType)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setKey(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setModuleUuidPath(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setResolution(java.lang.String)|",
      "|java+method:///org/sonar/db/DatabaseUtils/getLong(java.sql.ResultSet,int)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/index/RuleDoc/key()|",
    "called": "|java+method:///org/sonar/api/rule/RuleKey/parse(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/rule/index/RuleDoc/getField(java.lang.String)|",
      "|java+method:///org/sonar/api/rule/RuleKey/parse(java.lang.String)|",
      "|java+method:///org/sonar/server/search/IndexField/field()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/rule/index/RuleDoc/getField(java.lang.String)|",
      "|java+method:///org/sonar/api/rule/RuleKey/parse(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/batch/IssuesAction/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/batch/IssuesAction/handleIssue(org.sonar.server.issue.index.IssueDoc,org.sonar.batch.protocol.input.BatchInput$ServerIssue$Builder,java.util.Map,java.io.OutputStream)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/component/ComponentFinder/getByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/batch/protocol/input/BatchInput$ServerIssue/newBuilder()|",
      "|java+method:///org/sonar/server/batch/IssuesAction/keysByUUid(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/api/server/ws/Response/stream()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/output()|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/selectIssuesForBatch(org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/server/user/UserSession/checkComponentPermission(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/setMediaType(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/batch/IssuesAction/handleIssue(org.sonar.server.issue.index.IssueDoc,org.sonar.scanner.protocol.input.ScannerInput$ServerIssue$Builder,java.util.Map,java.io.OutputStream)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/component/ComponentFinder/getByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/scanner/protocol/input/ScannerInput$ServerIssue/newBuilder()|",
      "|java+method:///org/sonar/server/batch/IssuesAction/keysByUUid(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/api/server/ws/Response/stream()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/output()|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/selectIssuesForBatch(org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/server/user/UserSession/checkComponentPermission(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/setMediaType(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/measure/custom/ws/SearchAction/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/api/server/ws/Request/paramAsStrings(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/measure/custom/ws/CustomMeasureValidator/checkPermissions(org.sonar.server.user.UserSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/measure/custom/ws/SearchAction/countTotalOfCustomMeasures(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/api/server/ws/Request/paramAsStrings(java.lang.String)|",
      "|java+method:///org/sonar/server/es/SearchOptions/setPage(int,int)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsInt(java.lang.String)|",
      "|java+method:///org/sonar/server/component/ComponentFinder/getByUuidOrKey(org.sonar.db.DbSession,java.lang.String,java.lang.String,org.sonar.server.component.ComponentFinder$ParamNames)|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonar/server/measure/custom/ws/SearchAction/searchLastSnapshot(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/server/measure/custom/ws/SearchAction/usersByLogin(java.util.List)|",
      "|java+method:///org/sonar/server/measure/custom/ws/SearchAction/metricsById(org.sonar.db.DbSession,java.util.List)|",
      "|java+method:///org/sonar/server/measure/custom/ws/SearchAction/searchCustomMeasures(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto,org.sonar.server.es.SearchOptions)|",
      "|java+method:///org/sonar/server/measure/custom/ws/SearchAction/writeResponse(org.sonar.api.server.ws.Response,java.util.List,int,org.sonar.db.component.ComponentDto,java.util.Map,java.util.Map,java.lang.Long,org.sonar.server.es.SearchOptions,java.util.List)|",
      "|java+constructor:///org/sonar/server/es/SearchOptions/SearchOptions()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/measure/custom/ws/CustomMeasureValidator/checkPermissions(org.sonar.server.user.UserSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/measure/custom/ws/SearchAction/countTotalOfCustomMeasures(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/api/server/ws/Request/paramAsStrings(java.lang.String)|",
      "|java+method:///org/sonar/server/es/SearchOptions/setPage(int,int)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsInt(java.lang.String)|",
      "|java+method:///org/sonar/server/component/ComponentFinder/getByUuidOrKey(org.sonar.db.DbSession,java.lang.String,java.lang.String,org.sonar.server.component.ComponentFinder$ParamNames)|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonar/server/measure/custom/ws/SearchAction/searchLastSnapshot(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/server/measure/custom/ws/SearchAction/metricsById(org.sonar.db.DbSession,java.util.List)|",
      "|java+method:///org/sonar/server/measure/custom/ws/SearchAction/writeResponse(org.sonar.api.server.ws.Response,java.util.List,int,org.sonar.db.component.ComponentDto,java.util.Map,java.util.Map,java.lang.Long,org.sonar.server.es.SearchOptions,java.util.List)|",
      "|java+constructor:///org/sonar/server/es/SearchOptions/SearchOptions()|",
      "|java+method:///org/sonar/server/measure/custom/ws/SearchAction/searchCustomMeasures(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto,org.sonar.server.es.SearchOptions)|",
      "|java+method:///org/sonar/server/measure/custom/ws/SearchAction/usersByLogin(org.sonar.db.DbSession,java.util.List)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/platform/ws/RestartAction/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/api/config/Settings/getBoolean(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+constructor:///org/sonar/process/DefaultProcessCommands/DefaultProcessCommands(java.io.File,int,boolean)|",
      "|java+method:///org/sonar/process/ProcessCommands/close()|",
      "|java+method:///org/sonar/api/utils/log/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/sonar/api/utils/log/Logger/info(java.lang.String)|",
      "|java+method:///org/sonar/api/config/Settings/getBoolean(java.lang.String)|",
      "|java+method:///org/sonar/server/platform/Platform/restart()|",
      "|java+method:///org/sonar/server/platform/ws/RestartAction/nonNullAsInt(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Response/noContent()|",
      "|java+method:///org/sonar/server/user/UserSession/checkPermission(java.lang.String)|",
      "|java+method:///org/sonar/process/ProcessCommands/askForRestart()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/sonar/api/utils/log/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/sonar/server/platform/ws/RestartAction/nonNullValueAsFile(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+method:///org/sonar/api/utils/log/Logger/info(java.lang.String)|",
      "|java+method:///org/sonar/api/config/Settings/getBoolean(java.lang.String)|",
      "|java+method:///org/sonar/server/platform/Platform/restart()|",
      "|java+method:///org/sonar/api/server/ws/Response/noContent()|",
      "|java+method:///org/sonar/api/utils/log/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/sonar/server/app/ProcessCommandWrapper/requestSQRestart()|",
      "|java+method:///org/sonar/server/user/UserSession/checkPermission(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/loadIssues()|",
    "called": "|java+method:///org/sonar/api/utils/log/Loggers/get(java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory/access$300(org.sonar.server.computation.issue.TrackerRawInputFactory)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/isIssueOnUnsupportedCommonRule(org.sonar.batch.protocol.output.BatchReport$Issue)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/server/computation/issue/commonrule/CommonRuleEngine/process(org.sonar.server.computation.component.Component)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Issue/getRuleRepository()|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readComponentIssues(int)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory/access$200(org.sonar.server.computation.issue.TrackerRawInputFactory)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getRef()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/api/utils/log/Loggers/get(java.lang.Class)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/init(org.sonar.core.issue.DefaultIssue)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/getLineHashSequence()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Issue/getRuleKey()|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/toIssue(org.sonar.core.issue.tracking.LineHashSequence,org.sonar.batch.protocol.output.BatchReport$Issue)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/sonar/server/computation/issue/commonrule/CommonRuleEngine/process(org.sonar.server.computation.component.Component)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory/access$300(org.sonar.server.computation.issue.TrackerRawInputFactory)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readComponentIssues(int)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory/access$200(org.sonar.server.computation.issue.TrackerRawInputFactory)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getRef()|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/toIssue(org.sonar.core.issue.tracking.LineHashSequence,org.sonar.scanner.protocol.output.ScannerReport$Issue)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Issue/getRuleKey()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Issue/getRuleRepository()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/api/utils/log/Loggers/get(java.lang.Class)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/isIssueOnUnsupportedCommonRule(org.sonar.scanner.protocol.output.ScannerReport$Issue)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/init(org.sonar.core.issue.DefaultIssue)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/getLineHashSequence()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/ws/SearchAction/define(org.sonar.api.server.ws.WebService$NewController)|",
    "called": "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setExampleValue(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setExampleValue(java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setHandler(org.sonar.api.server.ws.RequestHandler)|",
      "|java+method:///org/sonar/server/issue/ws/SearchAction/addComponentRelatedParams(org.sonar.api.server.ws.WebService$NewAction)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setBooleanPossibleValues()|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setDefaultValue(java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setPossibleValues(java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewController/createAction(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/addPagingParams(int,int)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/addSortParams(java.util.Collection,java.lang.Object,boolean)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setSince(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/ws/SearchAdditionalField/possibleValues()|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/createParam(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setSince(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setPossibleValues(java.util.Collection)|",
      "|java+method:///com/google/common/io/Resources/getResource(java.lang.Class,java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setResponseExample(java.net.URL)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setDescription(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setExampleValue(java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setHandler(org.sonar.api.server.ws.RequestHandler)|",
      "|java+method:///org/sonar/server/issue/ws/SearchAction/addComponentRelatedParams(org.sonar.api.server.ws.WebService$NewAction)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setBooleanPossibleValues()|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setDefaultValue(java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setPossibleValues(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/addPagingParams(int,int)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setSince(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/ws/SearchAdditionalField/possibleValues()|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/createParam(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setSince(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setPossibleValues(java.util.Collection)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setDeprecatedSince(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewController/createAction(java.lang.String)|",
      "|java+method:///org/sonar/api/rules/RuleType/values()|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/addSortParams(java.util.Collection,java.lang.Object,boolean)|",
      "|java+method:///com/google/common/io/Resources/getResource(java.lang.Class,java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setResponseExample(java.net.URL)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setDescription(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/measure/ws/ComponentTreeDataLoader/paginateComponents(java.util.List,int,org.sonarqube.ws.client.measure.ComponentTreeWsRequest)|",
    "called": "|java+method:///org/sonar/api/utils/Paging$Builder/andTotal(int)|",
    "v1Body": [
      "|java+method:///com/google/common/collect/FluentIterable/from(java.lang.Iterable)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///com/google/common/collect/FluentIterable/limit(int)|",
      "|java+method:///org/sonar/api/utils/Paging$Builder/withPageSize(int)|",
      "|java+method:///org/sonar/api/utils/Paging/pageSize()|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getSort()|",
      "|java+method:///org/sonar/api/utils/Paging$Builder/andTotal(int)|",
      "|java+method:///com/google/common/collect/FluentIterable/toList()|",
      "|java+method:///java/util/List/contains(java.lang.Object)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getPage()|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getPageSize()|",
      "|java+method:///com/google/common/collect/FluentIterable/skip(int)|",
      "|java+method:///org/sonar/api/utils/Paging/offset()|",
      "|java+method:///org/sonar/api/utils/Paging/forPageIndex(int)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/FluentIterable/from(java.lang.Iterable)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///com/google/common/collect/FluentIterable/limit(int)|",
      "|java+method:///org/sonar/api/utils/Paging$Builder/withPageSize(int)|",
      "|java+method:///org/sonar/api/utils/Paging/pageSize()|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeDataLoader/isSortByMetric(org.sonarqube.ws.client.measure.ComponentTreeWsRequest)|",
      "|java+method:///org/sonar/api/utils/Paging$Builder/andTotal(int)|",
      "|java+method:///com/google/common/collect/FluentIterable/toList()|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getPage()|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getPageSize()|",
      "|java+method:///com/google/common/collect/FluentIterable/skip(int)|",
      "|java+method:///org/sonar/api/utils/Paging/offset()|",
      "|java+method:///org/sonar/api/utils/Paging/forPageIndex(int)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+constructor:///org/sonar/server/platform/ServerImpl/ServerImpl(org.sonar.api.config.Settings,java.lang.String,java.lang.String)|",
    "called": "|java+constructor:///org/sonar/api/platform/Server/Server()|",
    "v1Body": [
      "|java+constructor:///org/sonar/api/platform/Server/Server()|",
      "|java+constructor:///java/util/Date/Date()|"
    ],
    "v2Body": [
      "|java+constructor:///org/sonar/api/platform/Server/Server()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/ws/ShowAction/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/api/rule/RuleKey/parse(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/rule/RuleService/getByKey(org.sonar.api.rule.RuleKey)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/server/ws/WsUtils/writeProtobuf(com.google.protobuf.Message,org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/api/rule/RuleKey/parse(java.lang.String)|",
      "|java+constructor:///org/sonar/server/exceptions/NotFoundException/NotFoundException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/server/rule/ws/ShowAction/buildResponse(org.sonar.api.server.ws.Request,org.sonar.server.rule.Rule)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+method:///org/sonar/server/rule/ws/SearchAction$SearchResult/setRuleParameters(java.util.List)|",
      "|java+method:///org/sonar/server/rule/ws/SearchAction$SearchResult/setRules(java.util.List)|",
      "|java+method:///org/sonar/server/ws/WsUtils/writeProtobuf(com.google.protobuf.Message,org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
      "|java+method:///org/sonar/server/rule/ws/ShowAction/buildResponse(org.sonar.db.DbSession,org.sonar.api.server.ws.Request,org.sonar.server.rule.ws.SearchAction$SearchResult)|",
      "|java+method:///org/sonar/server/rule/ws/SearchAction$SearchResult/setTemplateRules(java.util.List)|",
      "|java+constructor:///org/sonar/server/rule/ws/SearchAction$SearchResult/SearchAction$SearchResult()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/api/rule/RuleKey/parse(java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/ws/WsUtils/checkFoundWithOptional(com.google.common.base.Optional,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getTemplateId()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectByKey(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/server/rule/ws/SearchAction$SearchResult/setTotal(java.lang.Long)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectRuleParamsByRuleIds(org.sonar.db.DbSession,java.util.List)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getId()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectById(long,org.sonar.db.DbSession)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/db/EmbeddedDatabaseFactory/start()|",
    "called": "|java+method:///org/sonar/api/config/Settings/getString(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/db/EmbeddedDatabase/start()|",
      "|java+method:///org/sonar/server/db/EmbeddedDatabaseFactory/getEmbeddedDatabase(org.sonar.api.config.Settings)|",
      "|java+method:///org/sonar/api/config/Settings/getString(java.lang.String)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/db/EmbeddedDatabase/start()|",
      "|java+method:///org/sonar/server/db/EmbeddedDatabaseFactory/getEmbeddedDatabase(org.sonar.api.config.Settings)|",
      "|java+method:///org/sonar/api/config/Settings/getString(java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringUtils/startsWith(java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/permission/ws/SearchProjectPermissionsAction/define(org.sonar.api.server.ws.WebService$NewController)|",
    "called": "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setExampleValue(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setHandler(org.sonar.api.server.ws.RequestHandler)|",
      "|java+method:///org/sonar/server/permission/ws/PermissionsWsParametersBuilder/createProjectParameters(org.sonar.api.server.ws.WebService$NewAction)|",
      "|java+method:///org/sonar/server/ws/WsParameterBuilder/createRootQualifierParameter(org.sonar.api.server.ws.WebService$NewAction,org.sonar.server.ws.WsParameterBuilder$QualifierParameterContext)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewController/createAction(java.lang.String)|",
      "|java+method:///java/lang/Class/getResource(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/addPagingParams(int)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/addSearchQuery(java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setSince(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setResponseExample(java.net.URL)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/server/ws/WsParameterBuilder$QualifierParameterContext/newQualifierParameterContext(org.sonar.server.user.UserSession,org.sonar.api.i18n.I18n,org.sonar.api.resources.ResourceTypes)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setSince(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setExampleValue(java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setHandler(org.sonar.api.server.ws.RequestHandler)|",
      "|java+method:///org/sonar/server/permission/ws/PermissionsWsParametersBuilder/createProjectParameters(org.sonar.api.server.ws.WebService$NewAction)|",
      "|java+method:///org/sonar/server/ws/WsParameterBuilder/createRootQualifierParameter(org.sonar.api.server.ws.WebService$NewAction,org.sonar.server.ws.WsParameterBuilder$QualifierParameterContext)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewController/createAction(java.lang.String)|",
      "|java+method:///java/lang/Class/getResource(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/addPagingParams(int)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setSince(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/createParam(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setResponseExample(java.net.URL)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/server/ws/WsParameterBuilder$QualifierParameterContext/newQualifierParameterContext(org.sonar.server.user.UserSession,org.sonar.api.i18n.I18n,org.sonar.api.resources.ResourceTypes)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setSince(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/RuleDeleter/delete(org.sonar.api.rule.RuleKey)|",
    "called": "|java+method:///org/sonar/api/utils/System2/now()|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/sonar/server/db/DbClient/deprecatedRuleDao()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/deactivate(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getRepositoryKey()|",
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/update(org.sonar.db.DbSession,org.sonar.db.Dto)|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/getByKey(org.sonar.db.DbSession,java.io.Serializable)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getTemplateId()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setStatus(org.sonar.api.rule.RuleStatus)|",
      "|java+method:///org/sonar/db/DbSession/commit()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+method:///org/sonar/server/rule/index/RuleIndexer/index()|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectOrFailByKey(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setUpdatedAt(long)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/deactivate(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto)|",
      "|java+method:///org/sonar/db/rule/RuleDao/update(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto)|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getTemplateId()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setStatus(org.sonar.api.rule.RuleStatus)|",
      "|java+method:///org/sonar/db/DbSession/commit()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/ws/UpdateAction/readDebt(org.sonar.api.server.ws.Request,org.sonar.server.rule.RuleUpdate)|",
    "called": "|java+constructor:///org/sonar/api/server/debt/internal/DefaultDebtRemediationFunction/DefaultDebtRemediationFunction(org.sonar.api.server.debt.DebtRemediationFunction$Type,java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/rule/RuleUpdate/setDebtRemediationFunction(org.sonar.api.server.debt.DebtRemediationFunction)|",
      "|java+method:///org/sonar/server/rule/RuleUpdate/setDebtSubCharacteristic(java.lang.String)|",
      "|java+constructor:///org/sonar/api/server/debt/internal/DefaultDebtRemediationFunction/DefaultDebtRemediationFunction(org.sonar.api.server.debt.DebtRemediationFunction$Type,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonar/api/server/debt/DebtRemediationFunction$Type/valueOf(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/rule/RuleUpdate/setDebtRemediationFunction(org.sonar.api.server.debt.DebtRemediationFunction)|",
      "|java+constructor:///org/sonar/api/server/debt/internal/DefaultDebtRemediationFunction/DefaultDebtRemediationFunction(org.sonar.api.server.debt.DebtRemediationFunction$Type,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringUtils/defaultIfEmpty(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/api/server/debt/DebtRemediationFunction$Type/valueOf(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/issue/RuleImpl/effectiveRemediationFunction(org.sonar.db.rule.RuleDto)|",
    "called": "|java+constructor:///org/sonar/api/server/debt/internal/DefaultDebtRemediationFunction/DefaultDebtRemediationFunction(org.sonar.api.server.debt.DebtRemediationFunction$Type,java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/db/rule/RuleDto/getRemediationOffset()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getDefaultRemediationOffset()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getRemediationFunction()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getDefaultRemediationFunction()|",
      "|java+constructor:///org/sonar/api/server/debt/internal/DefaultDebtRemediationFunction/DefaultDebtRemediationFunction(org.sonar.api.server.debt.DebtRemediationFunction$Type,java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getDefaultRemediationCoefficient()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getRemediationCoefficient()|",
      "|java+method:///org/sonar/api/server/debt/DebtRemediationFunction$Type/valueOf(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/rule/RuleDto/getRemediationFunction()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getDefaultRemediationFunction()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getRemediationBaseEffort()|",
      "|java+constructor:///org/sonar/api/server/debt/internal/DefaultDebtRemediationFunction/DefaultDebtRemediationFunction(org.sonar.api.server.debt.DebtRemediationFunction$Type,java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getDefaultRemediationBaseEffort()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getDefaultRemediationGapMultiplier()|",
      "|java+method:///org/sonar/api/server/debt/DebtRemediationFunction$Type/valueOf(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getRemediationGapMultiplier()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/CommonRuleDefinitionsImpl/defineLineCoverageRule(org.sonar.api.server.rule.RulesDefinition$NewRepository)|",
    "called": "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setSeverity(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/debtRemediationFunctions()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setEffortToFixDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/createParam(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewParam/setType(org.sonar.api.server.rule.RuleParamType)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewParam/setName(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/addTags(java.lang.String%5B%5D)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewParam/setDefaultValue(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setDebtRemediationFunction(org.sonar.api.server.debt.DebtRemediationFunction)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$DebtRemediationFunctions/linear(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setDebtSubCharacteristic(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRepository/createRule(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setName(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setHtmlDescription(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/debtRemediationFunctions()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/createParam(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewParam/setType(org.sonar.api.server.rule.RuleParamType)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewParam/setName(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/addTags(java.lang.String%5B%5D)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewParam/setDefaultValue(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setDebtRemediationFunction(org.sonar.api.server.debt.DebtRemediationFunction)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$DebtRemediationFunctions/linear(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setName(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setHtmlDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setGapDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRepository/createRule(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/ws/SearchAction/completeFacets(org.sonar.server.es.Facets,org.sonarqube.ws.client.issue.SearchWsRequest,org.sonar.api.server.ws.Request)|",
    "called": "|java+method:///org/sonar/api/server/ws/Request/paramAsStrings(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getAssignees()|",
      "|java+method:///org/sonar/server/es/Facets/get(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/LinkedHashMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/Request/paramAsStrings(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/ws/SearchAction/addMandatoryValuesToFacet(org.sonar.server.es.Facets,java.lang.String,java.lang.Iterable)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getReporters()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getLanguages()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/google/common/collect/Iterables/concat(java.lang.Iterable,java.lang.Iterable)|",
      "|java+method:///java/util/List/remove(java.lang.Object)|",
      "|java+method:///java/util/LinkedHashMap/containsKey(java.lang.Object)|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getTags()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getComponentUuids()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getActionPlans()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getFacets()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getRules()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getProjectUuids()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getAssignees()|",
      "|java+method:///org/sonar/server/es/Facets/get(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/LinkedHashMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/Request/paramAsStrings(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/ws/SearchAction/addMandatoryValuesToFacet(org.sonar.server.es.Facets,java.lang.String,java.lang.Iterable)|",
      "|java+method:///org/sonar/api/rules/RuleType/names()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getLanguages()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/google/common/collect/Iterables/concat(java.lang.Iterable,java.lang.Iterable)|",
      "|java+method:///java/util/List/remove(java.lang.Object)|",
      "|java+method:///java/util/LinkedHashMap/containsKey(java.lang.Object)|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getTags()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getComponentUuids()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getActionPlans()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getFacets()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getRules()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getProjectUuids()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/ws/SearchAction/doHandle(org.sonarqube.ws.client.issue.SearchWsRequest,org.sonar.api.server.ws.Request)|",
    "called": "|java+method:///org/sonar/api/utils/Paging$Builder/andTotal(int)|",
    "v1Body": [
      "|java+method:///org/sonar/server/issue/IssueService/search(org.sonar.server.issue.IssueQuery,org.sonar.server.es.SearchOptions)|",
      "|java+method:///org/sonar/api/utils/Paging$Builder/withPageSize(int)|",
      "|java+method:///org/sonar/server/es/SearchOptions/getLimit()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getPageSize()|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatSearch(java.util.Set,org.sonar.server.issue.ws.SearchResponseData,org.sonar.api.utils.Paging,org.sonar.server.es.Facets)|",
      "|java+method:///org/sonar/server/es/SearchResult/getDocs()|",
      "|java+method:///org/sonar/server/es/SearchResult/getFacets()|",
      "|java+constructor:///org/sonar/server/es/SearchOptions/SearchOptions()|",
      "|java+method:///com/google/common/collect/FluentIterable/toList()|",
      "|java+method:///org/sonar/server/issue/ws/SearchAction/collectRequestParams(org.sonar.server.issue.ws.SearchResponseLoader$Collector,org.sonarqube.ws.client.issue.SearchWsRequest)|",
      "|java+method:///org/sonar/server/es/SearchOptions/getPage()|",
      "|java+method:///org/sonar/server/issue/IssueQueryService/createFromRequest(org.sonarqube.ws.client.issue.SearchWsRequest)|",
      "|java+method:///com/google/common/collect/FluentIterable/from(java.lang.Iterable)|",
      "|java+method:///org/sonar/server/issue/ws/SearchAction/collectLoggedInUser(org.sonar.server.issue.ws.SearchResponseLoader$Collector)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///org/sonar/server/issue/ws/SearchResponseLoader$Collector/SearchResponseLoader$Collector(java.util.EnumSet,java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getPage()|",
      "|java+method:///com/google/common/collect/FluentIterable/transform(com.google.common.base.Function)|",
      "|java+method:///org/sonar/api/utils/Paging/forPageIndex(int)|",
      "|java+method:///org/sonar/server/es/SearchResult/getTotal()|",
      "|java+method:///org/sonar/server/es/SearchOptions/getFacets()|",
      "|java+method:///org/sonar/server/issue/ws/SearchAction/collectFacets(org.sonar.server.issue.ws.SearchResponseLoader$Collector,org.sonar.server.es.Facets)|",
      "|java+method:///org/sonar/server/es/SearchOptions/setPage(int,int)|",
      "|java+method:///org/sonar/api/utils/Paging$Builder/andTotal(int)|",
      "|java+method:///java/util/Collection/isEmpty()|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseLoader/load(org.sonar.server.issue.ws.SearchResponseLoader$Collector,org.sonar.server.es.Facets)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getFacets()|",
      "|java+method:///org/sonar/server/es/SearchOptions/addFacets(java.util.Collection)|",
      "|java+method:///org/sonar/server/issue/ws/SearchAction/completeFacets(org.sonar.server.es.Facets,org.sonarqube.ws.client.issue.SearchWsRequest,org.sonar.api.server.ws.Request)|",
      "|java+method:///org/sonar/server/issue/ws/SearchAdditionalField/getFromRequest(org.sonarqube.ws.client.issue.SearchWsRequest)|",
      "|java+method:///org/sonar/server/issue/ws/SearchAction/reorderFacets(org.sonar.server.es.Facets,java.util.Collection)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/utils/Paging$Builder/withPageSize(int)|",
      "|java+method:///org/sonar/server/es/SearchOptions/getLimit()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getPageSize()|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatSearch(java.util.Set,org.sonar.server.issue.ws.SearchResponseData,org.sonar.api.utils.Paging,org.sonar.server.es.Facets)|",
      "|java+method:///org/sonar/server/es/SearchResult/getDocs()|",
      "|java+method:///org/sonar/server/es/SearchResult/getFacets()|",
      "|java+constructor:///org/sonar/server/es/SearchOptions/SearchOptions()|",
      "|java+method:///com/google/common/collect/FluentIterable/toList()|",
      "|java+method:///org/sonar/server/issue/ws/SearchAction/collectRequestParams(org.sonar.server.issue.ws.SearchResponseLoader$Collector,org.sonarqube.ws.client.issue.SearchWsRequest)|",
      "|java+method:///org/sonar/server/issue/IssueQueryService/createFromRequest(org.sonarqube.ws.client.issue.SearchWsRequest)|",
      "|java+method:///com/google/common/collect/FluentIterable/from(java.lang.Iterable)|",
      "|java+method:///org/sonar/server/issue/ws/SearchAction/collectLoggedInUser(org.sonar.server.issue.ws.SearchResponseLoader$Collector)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///org/sonar/server/issue/ws/SearchResponseLoader$Collector/SearchResponseLoader$Collector(java.util.EnumSet,java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getPage()|",
      "|java+method:///com/google/common/collect/FluentIterable/transform(com.google.common.base.Function)|",
      "|java+method:///org/sonar/api/utils/Paging/forPageIndex(int)|",
      "|java+method:///org/sonar/server/es/SearchResult/getTotal()|",
      "|java+method:///org/sonar/server/es/SearchOptions/getFacets()|",
      "|java+method:///org/sonar/server/issue/ws/SearchAction/collectFacets(org.sonar.server.issue.ws.SearchResponseLoader$Collector,org.sonar.server.es.Facets)|",
      "|java+method:///org/sonar/server/es/SearchOptions/setPage(int,int)|",
      "|java+method:///org/sonar/api/utils/Paging$Builder/andTotal(int)|",
      "|java+method:///java/util/Collection/isEmpty()|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseLoader/load(org.sonar.server.issue.ws.SearchResponseLoader$Collector,org.sonar.server.es.Facets)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getFacets()|",
      "|java+method:///org/sonar/server/es/SearchOptions/addFacets(java.util.Collection)|",
      "|java+method:///org/sonar/server/issue/ws/SearchAction/completeFacets(org.sonar.server.es.Facets,org.sonarqube.ws.client.issue.SearchWsRequest,org.sonar.api.server.ws.Request)|",
      "|java+method:///org/sonar/server/issue/ws/SearchAdditionalField/getFromRequest(org.sonarqube.ws.client.issue.SearchWsRequest)|",
      "|java+method:///org/sonar/server/issue/ws/SearchAction/reorderFacets(org.sonar.server.es.Facets,java.util.Collection)|",
      "|java+method:///org/sonar/server/es/SearchOptions/getPage()|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/search(org.sonar.server.issue.IssueQuery,org.sonar.server.es.SearchOptions)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/qualitygate/EvaluationResultTextConverterImpl/getAlertLabel(org.sonar.server.computation.qualitygate.Condition,org.sonar.server.computation.measure.Measure$Level)|",
    "called": "|java+method:///org/sonar/api/utils/DateUtils/longToDate(java.lang.Long)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/sonar/server/computation/metric/Metric/getKey()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/sonar/server/computation/period/Period/getModeParameter()|",
      "|java+method:///org/sonar/server/computation/qualitygate/Condition/getMetric()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/core/timemachine/Periods/label(java.lang.String,java.lang.String,java.util.Date)|",
      "|java+method:///org/sonar/server/computation/period/Period/getMode()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/server/computation/period/Period/getSnapshotDate()|",
      "|java+method:///org/sonar/api/utils/DateUtils/longToDate(java.lang.Long)|",
      "|java+method:///org/sonar/server/computation/period/PeriodsHolder/getPeriod(int)|",
      "|java+method:///java/lang/String/toLowerCase()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/api/i18n/I18n/message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/computation/qualitygate/Condition/getPeriod()|",
      "|java+method:///org/sonar/server/computation/qualitygate/EvaluationResultTextConverterImpl/alertValue(org.sonar.server.computation.qualitygate.Condition,org.sonar.server.computation.measure.Measure$Level)|",
      "|java+method:///org/sonar/server/computation/qualitygate/Condition/getOperator()|",
      "|java+method:///org/sonar/server/computation/metric/Metric/getName()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/sonar/server/computation/metric/Metric/getKey()|",
      "|java+method:///org/sonar/server/computation/period/PeriodsHolder/getPeriod(int)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/sonar/server/computation/period/Period/getModeParameter()|",
      "|java+method:///org/sonar/server/computation/qualitygate/Condition/getMetric()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/core/timemachine/Periods/label(java.lang.String,java.lang.String,java.util.Date)|",
      "|java+method:///org/sonar/server/computation/period/Period/getMode()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/server/computation/period/Period/getSnapshotDate()|",
      "|java+method:///org/sonar/api/utils/DateUtils/longToDate(java.lang.Long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/api/i18n/I18n/message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/String/toLowerCase(java.util.Locale)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/server/computation/qualitygate/Condition/getPeriod()|",
      "|java+method:///org/sonar/server/computation/qualitygate/EvaluationResultTextConverterImpl/alertValue(org.sonar.server.computation.qualitygate.Condition,org.sonar.server.computation.measure.Measure$Level)|",
      "|java+method:///org/sonar/server/computation/qualitygate/Condition/getOperator()|",
      "|java+method:///org/sonar/server/computation/metric/Metric/getName()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/ws/CompareAction/writeRules(org.sonar.api.utils.text.JsonWriter,java.util.Map,java.util.Map)|",
    "called": "|java+method:///org/sonar/api/utils/text/JsonWriter/beginObject()|",
    "v1Body": [
      "|java+method:///org/sonar/api/utils/text/JsonWriter/prop(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endArray()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRule/severity()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/sonar/server/qualityprofile/ws/CompareAction/writeRule(org.sonar.api.utils.text.JsonWriter,org.sonar.api.rule.RuleKey,java.util.Map)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginArray()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginObject()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endObject()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/utils/text/JsonWriter/prop(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/getSeverityString()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endArray()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/sonar/server/qualityprofile/ws/CompareAction/writeRule(org.sonar.api.utils.text.JsonWriter,org.sonar.api.rule.RuleKey,java.util.Map)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginArray()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginObject()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endObject()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/user/ws/SearchAction/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/api/utils/text/JsonWriter/close()|",
    "v1Body": [
      "|java+method:///com/google/common/collect/Lists/transform(java.util.List,com.google.common.base.Function)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbClient/groupMembershipDao()|",
      "|java+method:///org/sonar/db/user/GroupMembershipDao/selectGroupsByLogins(org.sonar.db.DbSession,java.util.Collection)|",
      "|java+constructor:///org/sonar/server/user/ws/SearchAction$1/SearchAction$1(org.sonar.server.user.ws.SearchAction)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/DbClient/userTokenDao()|",
      "|java+method:///org/sonar/api/server/ws/Request/paramAsStrings(java.lang.String)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///org/sonar/server/es/SearchOptions/SearchOptions()|",
      "|java+method:///org/sonar/db/user/UserTokenDao/countTokensByLogins(org.sonar.db.DbSession,java.util.List)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/close()|",
      "|java+method:///org/sonar/server/user/ws/SearchAction/writeUsers(org.sonar.api.utils.text.JsonWriter,org.sonar.server.es.SearchResult,com.google.common.collect.Multimap,java.util.Map,java.util.List)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginObject()|",
      "|java+method:///org/sonar/server/es/SearchResult/getTotal()|",
      "|java+method:///com/google/common/collect/ArrayListMultimap/create()|",
      "|java+method:///org/sonar/server/es/SearchOptions/writeJson(org.sonar.api.utils.text.JsonWriter,long)|",
      "|java+method:///org/sonar/server/es/SearchOptions/setPage(int,int)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsInt(java.lang.String)|",
      "|java+method:///org/sonar/server/es/SearchResult/getDocs()|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonar/server/user/index/UserIndex/search(java.lang.String,org.sonar.server.es.SearchOptions)|",
      "|java+method:///org/sonar/api/server/ws/Response/newJsonWriter()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endObject()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Lists/transform(java.util.List,com.google.common.base.Function)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbClient/groupMembershipDao()|",
      "|java+method:///org/sonar/db/user/GroupMembershipDao/selectGroupsByLogins(org.sonar.db.DbSession,java.util.Collection)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/DbClient/userTokenDao()|",
      "|java+method:///org/sonar/server/user/ws/SearchAction/writeUsers(org.sonar.api.utils.text.JsonWriter,java.util.List,com.google.common.collect.Multimap,java.util.Map,java.util.List)|",
      "|java+constructor:///org/sonar/server/es/SearchOptions/SearchOptions()|",
      "|java+method:///org/sonar/db/user/UserTokenDao/countTokensByLogins(org.sonar.db.DbSession,java.util.List)|",
      "|java+method:///org/sonar/db/DbClient/userDao()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/close()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginObject()|",
      "|java+method:///org/sonar/server/es/SearchResult/getTotal()|",
      "|java+method:///org/sonar/api/server/ws/Request/paramAsStrings(java.lang.String)|",
      "|java+method:///org/sonar/db/user/UserDao/selectByOrderedLogins(org.sonar.db.DbSession,java.util.Collection)|",
      "|java+method:///org/sonar/server/es/SearchOptions/writeJson(org.sonar.api.utils.text.JsonWriter,long)|",
      "|java+method:///org/sonar/server/es/SearchOptions/setPage(int,int)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsInt(java.lang.String)|",
      "|java+method:///org/sonar/server/es/SearchResult/getDocs()|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonar/server/user/index/UserIndex/search(java.lang.String,org.sonar.server.es.SearchOptions)|",
      "|java+method:///org/sonar/api/server/ws/Response/newJsonWriter()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endObject()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/user/ws/CurrentAction/writeUserDetails(org.sonar.api.utils.text.JsonWriter,com.google.common.base.Optional,java.util.Collection)|",
    "called": "|java+method:///org/sonar/api/utils/text/JsonWriter/prop(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/api/utils/text/JsonWriter/prop(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/server/user/UserSession/getName()|",
      "|java+method:///org/sonar/server/user/ws/CurrentAction/writeGroups(org.sonar.api.utils.text.JsonWriter,java.util.Collection)|",
      "|java+method:///org/sonar/server/user/ws/CurrentAction/writeScmAccounts(org.sonar.api.utils.text.JsonWriter,com.google.common.base.Optional)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/prop(java.lang.String,boolean)|",
      "|java+method:///org/sonar/server/user/ws/CurrentAction/writePermissions(org.sonar.api.utils.text.JsonWriter,org.sonar.server.user.UserSession)|",
      "|java+method:///org/sonar/server/user/UserSession/isLoggedIn()|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///org/sonar/db/user/UserDto/getEmail()|",
      "|java+method:///com/google/common/base/Optional/get()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/utils/text/JsonWriter/prop(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/db/user/UserDto/getExternalIdentityProvider()|",
      "|java+method:///org/sonar/server/user/UserSession/getName()|",
      "|java+method:///org/sonar/server/user/ws/CurrentAction/writeGroups(org.sonar.api.utils.text.JsonWriter,java.util.Collection)|",
      "|java+method:///org/sonar/server/user/ws/CurrentAction/writePermissions(org.sonar.api.utils.text.JsonWriter,org.sonar.server.user.UserSession)|",
      "|java+method:///org/sonar/server/user/UserSession/isLoggedIn()|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///org/sonar/db/user/UserDto/getEmail()|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///org/sonar/server/user/ws/CurrentAction/writeScmAccounts(org.sonar.api.utils.text.JsonWriter,com.google.common.base.Optional)|",
      "|java+method:///org/sonar/db/user/UserDto/getExternalIdentity()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/prop(java.lang.String,boolean)|",
      "|java+method:///org/sonar/db/user/UserDto/isLocal()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/measure/ws/ComponentTreeAction/define(org.sonar.api.server.ws.WebService$NewController)|",
    "called": "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setExampleValue(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setExampleValue(java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setHandler(org.sonar.api.server.ws.RequestHandler)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/createSortParams(java.util.Collection,java.lang.Object,boolean)|",
      "|java+method:///org/sonar/server/measure/ws/MeasuresWsParametersBuilder/createMetricKeysParameter(org.sonar.api.server.ws.WebService$NewAction)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setDefaultValue(java.lang.Object)|",
      "|java+method:///org/sonar/server/measure/ws/MeasuresWsParametersBuilder/createAdditionalFieldsParameter(org.sonar.api.server.ws.WebService$NewAction)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/createParam(java.lang.String)|",
      "|java+method:///org/sonar/server/ws/WsParameterBuilder$QualifierParameterContext/newQualifierParameterContext(org.sonar.server.user.UserSession,org.sonar.api.i18n.I18n,org.sonar.api.resources.ResourceTypes)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setPossibleValues(java.util.Collection)|",
      "|java+method:///org/sonar/server/ws/WsParameterBuilder/createQualifiersParameter(org.sonar.api.server.ws.WebService$NewAction,org.sonar.server.ws.WsParameterBuilder$QualifierParameterContext)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewController/createAction(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/addPagingParams(int,int)|",
      "|java+method:///java/lang/Class/getResource(java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setSince(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setResponseExample(java.net.URL)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setDescription(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setExampleValue(java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setHandler(org.sonar.api.server.ws.RequestHandler)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/createSortParams(java.util.Collection,java.lang.Object,boolean)|",
      "|java+method:///org/sonar/server/measure/ws/MeasuresWsParametersBuilder/createMetricKeysParameter(org.sonar.api.server.ws.WebService$NewAction)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setDefaultValue(java.lang.Object)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/measure/ws/MeasuresWsParametersBuilder/createDeveloperParameters(org.sonar.api.server.ws.WebService$NewAction)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/createParam(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setPossibleValues(java.util.Collection)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setPossibleValues(java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/measure/ws/MeasuresWsParametersBuilder/createAdditionalFieldsParameter(org.sonar.api.server.ws.WebService$NewAction)|",
      "|java+method:///org/sonar/server/ws/WsParameterBuilder/createQualifiersParameter(org.sonar.api.server.ws.WebService$NewAction,org.sonar.server.ws.WsParameterBuilder$QualifierParameterContext)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewController/createAction(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/addPagingParams(int,int)|",
      "|java+method:///java/lang/Class/getResource(java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setSince(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setResponseExample(java.net.URL)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/server/ws/WsParameterBuilder$QualifierParameterContext/newQualifierParameterContext(org.sonar.server.user.UserSession,org.sonar.api.i18n.I18n,org.sonar.api.resources.ResourceTypes)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setSince(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/measure/ws/ComponentAction/toComponentWsRequest(org.sonar.api.server.ws.Request)|",
    "called": "|java+method:///org/sonar/api/server/ws/Request/paramAsStrings(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/api/server/ws/Request/paramAsStrings(java.lang.String)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentWsRequest/getMetricKeys()|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentWsRequest/setComponentKey(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentWsRequest/setComponentId(java.lang.String)|",
      "|java+method:///org/sonar/server/ws/WsUtils/checkRequest(boolean,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentWsRequest/setAdditionalFields(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentWsRequest/setMetricKeys(java.util.List)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsStrings(java.lang.String)|",
      "|java+constructor:///org/sonarqube/ws/client/measure/ComponentWsRequest/ComponentWsRequest()|"
    ],
    "v2Body": [
      "|java+method:///org/sonarqube/ws/client/measure/ComponentWsRequest/setDeveloperId(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentWsRequest/setDeveloperKey(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/paramAsStrings(java.lang.String)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentWsRequest/getMetricKeys()|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentWsRequest/setComponentKey(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentWsRequest/setComponentId(java.lang.String)|",
      "|java+method:///org/sonar/server/ws/WsUtils/checkRequest(boolean,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentWsRequest/setAdditionalFields(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentWsRequest/setMetricKeys(java.util.List)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsStrings(java.lang.String)|",
      "|java+constructor:///org/sonarqube/ws/client/measure/ComponentWsRequest/ComponentWsRequest()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/RuleActivator/doUpdate(org.sonar.server.qualityprofile.ActiveRuleChange,org.sonar.server.qualityprofile.RuleActivatorContext,org.sonar.db.DbSession)|",
    "called": "|java+method:///org/sonar/api/utils/System2/now()|",
    "v1Body": [
      "|java+method:///org/sonar/server/qualityprofile/db/ActiveRuleDao/updateParam(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleDto,org.sonar.db.qualityprofile.ActiveRuleParamDto)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/activeRule()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/getParameters()|",
      "|java+method:///org/sonar/server/qualityprofile/db/ActiveRuleDao/update(org.sonar.db.DbSession,org.sonar.db.Dto)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/activeRuleParamsAsMap()|",
      "|java+method:///org/sonar/server/qualityprofile/db/ActiveRuleDao/insertParam(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleDto,org.sonar.db.qualityprofile.ActiveRuleParamDto)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleParamDto/setValue(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRule$Inheritance/name()|",
      "|java+method:///org/sonar/server/db/DbClient/activeRuleDao()|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/getSeverity()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/qualityprofile/db/ActiveRuleDao/deleteParam(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleDto,org.sonar.db.qualityprofile.ActiveRuleParamDto)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/ruleParamsByKeys()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleParamDto/createFor(org.sonar.db.rule.RuleParamDto)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/setInheritance(java.lang.String)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/getInheritance()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/getParameters()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/deleteParam(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleDto,org.sonar.db.qualityprofile.ActiveRuleParamDto)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/activeRuleParamsAsMap()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleParamDto/setValue(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRule$Inheritance/name()|",
      "|java+method:///org/sonar/db/DbClient/activeRuleDao()|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/getSeverity()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/setUpdatedAt(long)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/activeRule()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/update(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleDto)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/updateParam(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleDto,org.sonar.db.qualityprofile.ActiveRuleParamDto)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/ruleParamsByKeys()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleParamDto/createFor(org.sonar.db.rule.RuleParamDto)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/setInheritance(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/insertParam(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleDto,org.sonar.db.qualityprofile.ActiveRuleParamDto)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/getInheritance()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/ws/AppAction/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/api/utils/text/JsonWriter/close()|",
    "v1Body": [
      "|java+method:///org/sonar/server/rule/ws/AppAction/addStatuses(org.sonar.api.utils.text.JsonWriter)|",
      "|java+method:///org/sonar/server/rule/ws/AppAction/addPermissions(org.sonar.api.utils.text.JsonWriter)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginObject()|",
      "|java+method:///org/sonar/server/rule/ws/AppAction/addLanguages(org.sonar.api.utils.text.JsonWriter)|",
      "|java+method:///org/sonar/server/rule/ws/AppAction/addCharacteristics(org.sonar.api.utils.text.JsonWriter)|",
      "|java+method:///org/sonar/server/rule/ws/AppAction/addRuleRepositories(org.sonar.api.utils.text.JsonWriter)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/close()|",
      "|java+method:///org/sonar/server/rule/ws/AppAction/addProfiles(org.sonar.api.utils.text.JsonWriter)|",
      "|java+method:///org/sonar/api/server/ws/Response/newJsonWriter()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endObject()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/rule/ws/AppAction/addStatuses(org.sonar.api.utils.text.JsonWriter)|",
      "|java+method:///org/sonar/server/rule/ws/AppAction/addPermissions(org.sonar.api.utils.text.JsonWriter)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginObject()|",
      "|java+method:///org/sonar/server/rule/ws/AppAction/addLanguages(org.sonar.api.utils.text.JsonWriter)|",
      "|java+method:///org/sonar/server/rule/ws/AppAction/addRuleRepositories(org.sonar.api.utils.text.JsonWriter)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/close()|",
      "|java+method:///org/sonar/server/rule/ws/AppAction/addProfiles(org.sonar.api.utils.text.JsonWriter)|",
      "|java+method:///org/sonar/api/server/ws/Response/newJsonWriter()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endObject()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/measure/ws/ComponentAction/define(org.sonar.api.server.ws.WebService$NewController)|",
    "called": "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setExampleValue(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setExampleValue(java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setHandler(org.sonar.api.server.ws.RequestHandler)|",
      "|java+method:///org/sonar/server/measure/ws/MeasuresWsParametersBuilder/createMetricKeysParameter(org.sonar.api.server.ws.WebService$NewAction)|",
      "|java+method:///org/sonar/server/measure/ws/MeasuresWsParametersBuilder/createAdditionalFieldsParameter(org.sonar.api.server.ws.WebService$NewAction)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewController/createAction(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Class/getResource(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setSince(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/createParam(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setResponseExample(java.net.URL)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setDescription(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setExampleValue(java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setHandler(org.sonar.api.server.ws.RequestHandler)|",
      "|java+method:///org/sonar/server/measure/ws/MeasuresWsParametersBuilder/createMetricKeysParameter(org.sonar.api.server.ws.WebService$NewAction)|",
      "|java+method:///org/sonar/server/measure/ws/MeasuresWsParametersBuilder/createAdditionalFieldsParameter(org.sonar.api.server.ws.WebService$NewAction)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewController/createAction(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Class/getResource(java.lang.String)|",
      "|java+method:///org/sonar/server/measure/ws/MeasuresWsParametersBuilder/createDeveloperParameters(org.sonar.api.server.ws.WebService$NewAction)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setSince(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/createParam(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setResponseExample(java.net.URL)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setDescription(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/ws/SearchAction/toSearchWsRequest(org.sonar.api.server.ws.Request)|",
    "called": "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsBoolean(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setProjectKeys(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setComponentKeys(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setReporters(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setFacetMode(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/paramAsStrings(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setRules(java.util.List)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsInt(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setLanguages(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setCreatedAfter(java.lang.String)|",
      "|java+constructor:///org/sonarqube/ws/client/issue/SearchWsRequest/SearchWsRequest()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setResolved(java.lang.Boolean)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setAsc(boolean)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setAuthors(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setComponentUuids(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setDirectories(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setSeverities(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setModuleUuids(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setFacets(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setAssigned(java.lang.Boolean)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setProjectUuids(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setPageSize(int)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setAdditionalFields(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setPage(int)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setStatuses(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setActionPlans(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setCreatedAt(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setCreatedInLast(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/paramAsBoolean(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setFileUuids(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setOnComponentOnly(java.lang.Boolean)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setCreatedBefore(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setComponentRoots(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setAssignees(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setComponents(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setPlanned(java.lang.Boolean)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setSort(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setResolutions(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setComponentRootUuids(java.util.List)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setTags(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setProjects(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setIssues(java.util.List)|"
    ],
    "v2Body": [
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setProjectKeys(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setFacetMode(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setCreatedAt(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/paramAsStrings(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setRules(java.util.List)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsInt(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setTypes(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setLanguages(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setCreatedAfter(java.lang.String)|",
      "|java+constructor:///org/sonarqube/ws/client/issue/SearchWsRequest/SearchWsRequest()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setResolved(java.lang.Boolean)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setAsc(boolean)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setComponents(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setAuthors(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setComponentUuids(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setDirectories(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setSeverities(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setModuleUuids(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setSinceLeakPeriod(java.lang.Boolean)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setFacets(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setAssigned(java.lang.Boolean)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setProjectUuids(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setPageSize(int)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setAdditionalFields(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setPage(int)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setStatuses(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setComponentKeys(java.util.List)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsBoolean(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setCreatedInLast(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/paramAsBoolean(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setFileUuids(java.util.List)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setOnComponentOnly(java.lang.Boolean)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setCreatedBefore(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setComponentRoots(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setAssignees(java.util.List)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setSort(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setResolutions(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setComponentRootUuids(java.util.List)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setTags(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setProjects(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setIssues(java.util.List)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/usergroups/ws/UserGroupUpdater/validateName(java.lang.String)|",
    "called": "|java+method:///org/sonar/api/user/UserGroupValidation/validateGroupName(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/usergroups/ws/UserGroupUpdater/checkNameLength(java.lang.String)|",
      "|java+method:///org/sonar/server/usergroups/ws/UserGroupUpdater/checkNameNotAnyone(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/user/UserGroupValidation/validateGroupName(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/platform/monitoring/SonarQubeMonitor/attributes()|",
    "called": "|java+method:///org/sonar/api/config/Settings/getString(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/platform/monitoring/SonarQubeMonitor/getExternalUserAuthentication()|",
      "|java+method:///org/sonar/server/platform/monitoring/SonarQubeMonitor/getAllowUsersToSignUp()|",
      "|java+method:///org/sonar/server/platform/monitoring/SonarQubeMonitor/getForceAuthentication()|",
      "|java+method:///java/util/LinkedHashMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/server/platform/monitoring/SonarQubeMonitor/getServerId()|",
      "|java+method:///org/sonar/server/platform/monitoring/SonarQubeMonitor/isOfficialDistribution()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/sonar/server/platform/monitoring/SonarQubeMonitor/getAutomaticUserCreation()|",
      "|java+method:///org/sonar/server/platform/monitoring/SonarQubeMonitor/getVersion()|",
      "|java+constructor:///java/util/LinkedHashMap/LinkedHashMap()|",
      "|java+method:///org/sonar/api/config/Settings/getString(java.lang.String)|",
      "|java+method:///org/sonar/server/platform/monitoring/SonarQubeMonitor/getLogLevel()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/platform/monitoring/SonarQubeMonitor/getExternalUserAuthentication()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/server/platform/monitoring/SonarQubeMonitor/getAllowUsersToSignUp()|",
      "|java+method:///org/sonar/server/platform/monitoring/SonarQubeMonitor/getForceAuthentication()|",
      "|java+method:///org/sonar/server/platform/monitoring/SonarQubeMonitor/getServerId()|",
      "|java+method:///org/sonar/server/platform/monitoring/SonarQubeMonitor/isOfficialDistribution()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/sonar/server/platform/monitoring/SonarQubeMonitor/getAutomaticUserCreation()|",
      "|java+method:///org/sonar/server/platform/monitoring/SonarQubeMonitor/getVersion()|",
      "|java+constructor:///java/util/LinkedHashMap/LinkedHashMap()|",
      "|java+method:///org/sonar/api/config/Settings/getString(java.lang.String)|",
      "|java+method:///org/sonar/server/platform/monitoring/SonarQubeMonitor/getLogLevel()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileExporters/importXml(org.sonar.db.qualityprofile.QualityProfileDto,java.lang.String,java.io.Reader,org.sonar.db.DbSession)|",
    "called": "|java+method:///org/sonar/api/utils/ValidationMessages/create()|",
    "v1Body": [
      "|java+constructor:///org/sonar/server/qualityprofile/QProfileResult/QProfileResult()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileExporters/processValidationMessages(org.sonar.api.utils.ValidationMessages,org.sonar.server.qualityprofile.QProfileResult)|",
      "|java+method:///org/sonar/api/utils/ValidationMessages/create()|",
      "|java+method:///org/sonar/api/profiles/ProfileImporter/importProfile(java.io.Reader,org.sonar.api.utils.ValidationMessages)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileExporters/importProfile(org.sonar.db.qualityprofile.QualityProfileDto,org.sonar.api.profiles.RulesProfile,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileExporters/getProfileImporter(java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///org/sonar/server/qualityprofile/QProfileResult/QProfileResult()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileResult/addChanges(java.util.List)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileExporters/processValidationMessages(org.sonar.api.utils.ValidationMessages,org.sonar.server.qualityprofile.QProfileResult)|",
      "|java+method:///org/sonar/api/utils/ValidationMessages/create()|",
      "|java+method:///org/sonar/api/profiles/ProfileImporter/importProfile(java.io.Reader,org.sonar.api.utils.ValidationMessages)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileExporters/importProfile(org.sonar.db.qualityprofile.QualityProfileDto,org.sonar.api.profiles.RulesProfile,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileExporters/getProfileImporter(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatIssue(org.sonarqube.ws.Issues$Issue$Builder,org.sonar.db.issue.IssueDto,org.sonar.server.issue.ws.SearchResponseData)|",
    "called": "|java+method:///org/sonar/api/rule/RuleKey/toString()|",
    "v1Body": [
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setAssignee(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getAssignee()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setUpdateDate(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setRule(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/addAllTags(java.lang.Iterable)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getComponentUuid()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setKey(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getKey()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getActionPlanKey()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setAuthor(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setCreationDate(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setMessage(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getRuleKey()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getModuleUuid()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/sonarqube/ws/Common$Severity/valueOf(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setSeverity(org.sonarqube.ws.Common$Severity)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getIssueCreationDate()|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseData/getComponentByUuid(java.lang.String)|",
      "|java+method:///org/sonar/db/component/ComponentDto/getKey()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getMessage()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getResolution()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setStatus(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setDebt(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getIssueCloseDate()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setLine(int)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getStatus()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setSubProject(java.lang.String)|",
      "|java+method:///org/sonar/db/component/ComponentDto/getId()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getDebt()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getIssueUpdateDate()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getLine()|",
      "|java+method:///org/sonar/api/utils/Duration/create(long)|",
      "|java+method:///org/sonar/api/utils/Durations/encode(org.sonar.api.utils.Duration)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///com/google/common/base/Strings/nullToEmpty(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getProjectUuid()|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/completeIssueLocations(org.sonar.db.issue.IssueDto,org.sonarqube.ws.Issues$Issue$Builder)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getTags()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setActionPlan(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setProject(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/DateUtils/formatDateTime(java.util.Date)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setReporter(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getSeverity()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setComponent(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getReporter()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setComponentId(long)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getAuthorLogin()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getComponentKey()|",
      "|java+method:///org/sonar/api/rule/RuleKey/toString()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setCloseDate(java.lang.String)|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setResolution(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setAssignee(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setType(org.sonarqube.ws.Common$RuleType)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getAssignee()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setUpdateDate(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setRule(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/DateUtils/formatDateTime(java.util.Date)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getComponentUuid()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getKey()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setAuthor(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setCreationDate(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setMessage(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getRuleKey()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getModuleUuid()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/sonarqube/ws/Common$Severity/valueOf(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setSeverity(org.sonarqube.ws.Common$Severity)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getIssueCreationDate()|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseData/getComponentByUuid(java.lang.String)|",
      "|java+method:///org/sonar/db/component/ComponentDto/getKey()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getMessage()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getEffort()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getResolution()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setStatus(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setDebt(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getIssueCloseDate()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setLine(int)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getStatus()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setSubProject(java.lang.String)|",
      "|java+method:///org/sonar/db/component/ComponentDto/getId()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getIssueUpdateDate()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getLine()|",
      "|java+method:///org/sonar/api/utils/Duration/create(long)|",
      "|java+method:///org/sonar/api/utils/Durations/encode(org.sonar.api.utils.Duration)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///com/google/common/base/Strings/nullToEmpty(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getProjectUuid()|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/completeIssueLocations(org.sonar.db.issue.IssueDto,org.sonarqube.ws.Issues$Issue$Builder)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getTags()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setProject(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getType()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/addAllTags(java.lang.Iterable)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getSeverity()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setComponent(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setKey(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Common$RuleType/valueOf(int)|",
      "|java+method:///org/sonar/db/component/ComponentDto/key()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setComponentId(long)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getAuthorLogin()|",
      "|java+method:///org/sonar/api/rule/RuleKey/toString()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setCloseDate(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setEffort(java.lang.String)|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setResolution(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/plugins/ServerExtensionInstaller/installExtensions(org.sonar.core.platform.ComponentContainer)|",
    "called": "|java+constructor:///org/sonar/api/Plugin$Context/Plugin$Context(org.sonar.api.SonarQubeVersion)|",
    "v1Body": [
      "|java+method:///org/sonar/core/platform/ComponentContainer/getComponentByKey(java.lang.Object)|",
      "|java+method:///org/sonar/api/SonarPlugin/getExtensions()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/sonar/core/platform/PluginRepository/getPluginInstance(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/sonar/server/plugins/ServerExtensionInstaller/installExtension(org.sonar.core.platform.ComponentContainer,org.sonar.core.platform.PluginInfo,java.lang.Object,boolean)|",
      "|java+method:///com/google/common/collect/ArrayListMultimap/create()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/plugins/ServerExtensionInstaller/installProvider(org.sonar.core.platform.ComponentContainer,org.sonar.core.platform.PluginInfo,org.sonar.api.ExtensionProvider)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///com/google/common/collect/ListMultimap/entries()|",
      "|java+method:///com/google/common/collect/ListMultimap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/core/platform/ComponentContainer/addExtension(org.sonar.core.platform.PluginInfo,java.lang.Object)|",
      "|java+method:///org/sonar/core/platform/PluginRepository/getPluginInfos()|",
      "|java+method:///org/sonar/core/platform/ComponentContainer/declareExtension(org.sonar.core.platform.PluginInfo,java.lang.Object)|",
      "|java+method:///org/sonar/core/platform/PluginInfo/getKey()|",
      "|java+method:///org/sonar/server/plugins/ServerExtensionInstaller/isExtensionProvider(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/core/platform/PluginInfo/getName()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/sonar/core/platform/PluginRepository/getPluginInstance(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/sonar/server/plugins/ServerExtensionInstaller/installExtension(org.sonar.core.platform.ComponentContainer,org.sonar.core.platform.PluginInfo,java.lang.Object,boolean)|",
      "|java+method:///com/google/common/collect/ArrayListMultimap/create()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///org/sonar/api/Plugin$Context/Plugin$Context(org.sonar.api.SonarQubeVersion)|",
      "|java+method:///org/sonar/server/plugins/ServerExtensionInstaller/installProvider(org.sonar.core.platform.ComponentContainer,org.sonar.core.platform.PluginInfo,org.sonar.api.ExtensionProvider)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///com/google/common/collect/ListMultimap/entries()|",
      "|java+method:///com/google/common/collect/ListMultimap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/api/Plugin$Context/getExtensions()|",
      "|java+method:///org/sonar/core/platform/ComponentContainer/getComponentByKey(java.lang.Object)|",
      "|java+method:///org/sonar/api/Plugin/define(org.sonar.api.Plugin$Context)|",
      "|java+method:///org/sonar/core/platform/ComponentContainer/addExtension(org.sonar.core.platform.PluginInfo,java.lang.Object)|",
      "|java+method:///org/sonar/core/platform/PluginRepository/getPluginInfos()|",
      "|java+method:///org/sonar/core/platform/ComponentContainer/declareExtension(org.sonar.core.platform.PluginInfo,java.lang.Object)|",
      "|java+method:///org/sonar/core/platform/PluginInfo/getKey()|",
      "|java+method:///org/sonar/server/plugins/ServerExtensionInstaller/isExtensionProvider(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/core/platform/PluginInfo/getName()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/ws/CompareAction/writeRule(org.sonar.api.utils.text.JsonWriter,org.sonar.api.rule.RuleKey,java.util.Map)|",
    "called": "|java+method:///org/sonar/api/rule/RuleKey/toString()|",
    "v1Body": [
      "|java+method:///org/sonar/api/utils/text/JsonWriter/prop(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/api/resources/Languages/get(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/RuleRepositories$Repository/getLanguage()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/server/rule/RuleRepositories/repository(java.lang.String)|",
      "|java+method:///org/sonar/api/rule/RuleKey/repository()|",
      "|java+method:///org/sonar/api/rule/RuleKey/toString()|",
      "|java+method:///org/sonar/server/rule/Rule/name()|",
      "|java+method:///org/sonar/api/resources/Language/getName()|",
      "|java+method:///org/sonar/server/rule/RuleRepositories$Repository/getName()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/utils/text/JsonWriter/prop(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/api/resources/Languages/get(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/RuleRepositories$Repository/getLanguage()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/server/rule/RuleRepositories/repository(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getName()|",
      "|java+method:///org/sonar/api/rule/RuleKey/repository()|",
      "|java+method:///org/sonar/api/rule/RuleKey/toString()|",
      "|java+method:///org/sonar/api/resources/Language/getName()|",
      "|java+method:///org/sonar/server/rule/RuleRepositories$Repository/getName()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/step/PersistSnapshotsStep$PersistSnapshotsPathAwareVisitor/createSnapshot(org.sonar.server.computation.component.Component,org.sonar.server.computation.component.PathAwareVisitor$Path,java.lang.String,java.lang.String,boolean)|",
    "called": "|java+method:///org/sonar/api/utils/System2/now()|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setComponentId(java.lang.Long)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setBuildDate(java.lang.Long)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/getId()|",
      "|java+method:///org/sonar/server/computation/component/MutableDbIdsRepository/getComponentId(org.sonar.server.computation.component.Component)|",
      "|java+method:///org/sonar/server/computation/component/PathAwareVisitor$Path/parent()|",
      "|java+method:///org/sonar/server/computation/component/PathAwareVisitor$Path/isRoot()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/sonar/server/computation/step/PersistSnapshotsStep$SnapshotDtoHolder/getSnapshotDto()|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setLast(java.lang.Boolean)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setCreatedAt(java.lang.Long)|",
      "|java+method:///org/sonar/server/computation/step/PersistSnapshotsStep/access$300(org.sonar.server.computation.step.PersistSnapshotsStep)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setRootId(java.lang.Long)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/getDepth()|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setScope(java.lang.String)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setStatus(java.lang.String)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/getRootId()|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setVersion(java.lang.String)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setParentId(java.lang.Long)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getVersion()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/getPath()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setRootProjectId(java.lang.Long)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setPath(java.lang.String)|",
      "|java+constructor:///org/sonar/db/component/SnapshotDto/SnapshotDto()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setQualifier(java.lang.String)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setDepth(java.lang.Integer)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setComponentId(java.lang.Long)|",
      "|java+method:///org/sonar/server/computation/step/PersistSnapshotsStep/access$200(org.sonar.server.computation.step.PersistSnapshotsStep)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setCreatedAt(java.lang.Long)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setBuildDate(java.lang.Long)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/getId()|",
      "|java+method:///org/sonar/server/computation/component/MutableDbIdsRepository/getComponentId(org.sonar.server.computation.component.Component)|",
      "|java+method:///org/sonar/server/computation/component/PathAwareVisitor$Path/parent()|",
      "|java+method:///org/sonar/server/computation/component/PathAwareVisitor$Path/isRoot()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/sonar/server/computation/step/PersistSnapshotsStep$SnapshotDtoHolder/getSnapshotDto()|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setLast(java.lang.Boolean)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setRootId(java.lang.Long)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/getDepth()|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setScope(java.lang.String)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setStatus(java.lang.String)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/getRootId()|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setVersion(java.lang.String)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setParentId(java.lang.Long)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getVersion()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/getPath()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setRootProjectId(java.lang.Long)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setPath(java.lang.String)|",
      "|java+constructor:///org/sonar/db/component/SnapshotDto/SnapshotDto()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setQualifier(java.lang.String)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setDepth(java.lang.Integer)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/ws/BulkRuleActivationActions/bulkDeactivate(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/qualityprofile/QProfileService/bulkDeactivate(org.sonar.server.rule.index.RuleQuery,java.lang.String)|",
      "|java+method:///org/sonar/server/rule/ws/SearchAction/createRuleQuery(org.sonar.server.rule.index.RuleQuery,org.sonar.api.server.ws.Request)|",
      "|java+method:///org/sonar/server/qualityprofile/ws/BulkRuleActivationActions/writeResponse(org.sonar.server.qualityprofile.BulkChangeResult,org.sonar.api.server.ws.Response)|",
      "|java+method:///org/sonar/server/rule/RuleService/newRuleQuery()|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/qualityprofile/QProfileService/bulkDeactivate(org.sonar.server.rule.index.RuleQuery,java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/ws/BulkRuleActivationActions/createRuleQuery(org.sonar.server.rule.index.RuleQuery,org.sonar.api.server.ws.Request)|",
      "|java+method:///org/sonar/server/qualityprofile/ws/BulkRuleActivationActions/writeResponse(org.sonar.server.qualityprofile.BulkChangeResult,org.sonar.api.server.ws.Response)|",
      "|java+method:///org/sonar/server/rule/RuleService/newRuleQuery()|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/measure/custom/ws/CustomMeasureJsonWriter/write(org.sonar.api.utils.text.JsonWriter,java.util.List,org.sonar.db.component.ComponentDto,java.util.Map,java.util.Map,java.lang.Long,java.util.Collection)|",
    "called": "|java+method:///org/sonar/api/utils/text/JsonWriter/endArray()|",
    "v1Body": [
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/getUserLogin()|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/getMetricId()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endArray()|",
      "|java+method:///org/sonar/server/measure/custom/ws/CustomMeasureJsonWriter/write(org.sonar.api.utils.text.JsonWriter,org.sonar.db.measure.custom.CustomMeasureDto,org.sonar.db.metric.MetricDto,org.sonar.db.component.ComponentDto,org.sonar.api.user.User,boolean,java.util.Collection)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/name(java.lang.String)|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/getUpdatedAt()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginArray()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Long/longValue()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/getUserLogin()|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/getMetricId()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endArray()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/name(java.lang.String)|",
      "|java+method:///org/sonar/server/measure/custom/ws/CustomMeasureJsonWriter/write(org.sonar.api.utils.text.JsonWriter,org.sonar.db.measure.custom.CustomMeasureDto,org.sonar.db.metric.MetricDto,org.sonar.db.component.ComponentDto,org.sonar.db.user.UserDto,boolean,java.util.Collection)|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/getUpdatedAt()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginArray()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Long/longValue()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/measure/ws/ComponentTreeAction/toComponentTreeWsRequest(org.sonar.api.server.ws.Request)|",
    "called": "|java+method:///org/sonar/api/server/ws/Request/paramAsBoolean(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getSort()|",
      "|java+method:///org/sonar/api/server/ws/Request/paramAsStrings(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsInt(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setAsc(boolean)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getMetricKeys()|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setPageSize(int)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getQuery()|",
      "|java+method:///org/sonar/server/ws/WsUtils/checkRequest(boolean,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setSort(java.util.List)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getPageSize()|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setMetricKeys(java.util.List)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setMetricSort(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsStrings(java.lang.String)|",
      "|java+constructor:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/ComponentTreeWsRequest()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setBaseComponentId(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setQuery(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setQualifiers(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setBaseComponentKey(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setStrategy(java.lang.String)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setPage(int)|",
      "|java+method:///org/sonar/api/server/ws/Request/paramAsBoolean(java.lang.String)|",
      "|java+method:///java/util/List/contains(java.lang.Object)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setAdditionalFields(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getMetricSort()|"
    ],
    "v2Body": [
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setDeveloperKey(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getSort()|",
      "|java+method:///org/sonar/api/server/ws/Request/paramAsStrings(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsInt(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setAsc(boolean)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getMetricKeys()|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setPageSize(int)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getQuery()|",
      "|java+method:///org/sonar/server/ws/WsUtils/checkRequest(boolean,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setMetricPeriodSort(java.lang.Integer)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setSort(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getMetricPeriodSort()|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getPageSize()|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setMetricKeys(java.util.List)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setDeveloperId(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setMetricSort(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsStrings(java.lang.String)|",
      "|java+constructor:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/ComponentTreeWsRequest()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setBaseComponentId(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setQuery(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setQualifiers(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setBaseComponentKey(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setStrategy(java.lang.String)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setPage(int)|",
      "|java+method:///org/sonar/api/server/ws/Request/paramAsBoolean(java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/sonar/api/server/ws/Request/paramAsInt(java.lang.String)|",
      "|java+method:///java/util/List/contains(java.lang.Object)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setAdditionalFields(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getMetricSort()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/ws/WebServicesWs/writeController(org.sonar.api.utils.text.JsonWriter,org.sonar.api.server.ws.WebService$Controller,boolean)|",
    "called": "|java+method:///org/sonar/api/server/ws/WebService$Controller/isInternal()|",
    "v1Body": [
      "|java+method:///org/sonar/api/utils/text/JsonWriter/prop(java.lang.String,java.lang.String)|",
      "|java+method:///com/google/common/collect/Ordering/onResultOf(com.google.common.base.Function)|",
      "|java+method:///org/sonar/api/server/ws/WebService$Controller/isInternal()|",
      "|java+method:///org/sonar/server/ws/WebServicesWs/writeAction(org.sonar.api.utils.text.JsonWriter,org.sonar.api.server.ws.WebService$Action,boolean)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginObject()|",
      "|java+method:///com/google/common/collect/Ordering/natural()|",
      "|java+method:///org/sonar/api/server/ws/WebService$Controller/since()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endArray()|",
      "|java+method:///org/sonar/api/server/ws/WebService$Controller/description()|",
      "|java+method:///org/sonar/api/server/ws/WebService$Controller/actions()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endObject()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/name(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$Controller/path()|",
      "|java+method:///com/google/common/collect/Ordering/sortedCopy(java.lang.Iterable)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginArray()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/sonar/server/ws/WebServicesWs$4/WebServicesWs$4(org.sonar.server.ws.WebServicesWs)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/utils/text/JsonWriter/prop(java.lang.String,java.lang.String)|",
      "|java+method:///com/google/common/collect/Ordering/onResultOf(com.google.common.base.Function)|",
      "|java+method:///org/sonar/api/server/ws/WebService$Controller/isInternal()|",
      "|java+method:///org/sonar/server/ws/WebServicesWs/writeAction(org.sonar.api.utils.text.JsonWriter,org.sonar.api.server.ws.WebService$Action,boolean)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginObject()|",
      "|java+method:///com/google/common/collect/Ordering/natural()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/sonar/server/ws/WebServicesWs$4/WebServicesWs$4()|",
      "|java+method:///org/sonar/api/server/ws/WebService$Controller/since()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endArray()|",
      "|java+method:///org/sonar/api/server/ws/WebService$Controller/description()|",
      "|java+method:///org/sonar/api/server/ws/WebService$Controller/actions()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endObject()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/name(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$Controller/path()|",
      "|java+method:///com/google/common/collect/Ordering/sortedCopy(java.lang.Iterable)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginArray()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileExporters/importProfile(org.sonar.db.qualityprofile.QualityProfileDto,org.sonar.api.profiles.RulesProfile,org.sonar.db.DbSession)|",
    "called": "|java+method:///org/sonar/api/profiles/RulesProfile/getActiveRules()|",
    "v1Body": [
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/activate(org.sonar.db.DbSession,org.sonar.server.qualityprofile.RuleActivation,org.sonar.db.qualityprofile.QualityProfileDto)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileExporters/toRuleActivation(org.sonar.api.rules.ActiveRule)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/profiles/RulesProfile/getActiveRules()|",
      "|java+method:///java/util/List/iterator()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/activate(org.sonar.db.DbSession,org.sonar.server.qualityprofile.RuleActivation,org.sonar.db.qualityprofile.QualityProfileDto)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileExporters/toRuleActivation(org.sonar.api.rules.ActiveRule)|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/profiles/RulesProfile/getActiveRules()|",
      "|java+method:///java/util/List/iterator()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/RubyRuleService/findByKey(java.lang.String)|",
    "called": "|java+method:///org/sonar/api/rule/RuleKey/parse(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/rule/RuleService/getByKey(org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/api/rule/RuleKey/parse(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+method:///com/google/common/base/Optional/orNull()|",
      "|java+method:///org/sonar/api/rule/RuleKey/parse(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectByKey(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/RegisterRules/createRuleDto(org.sonar.api.server.rule.RulesDefinition$Rule,org.sonar.db.DbSession)|",
    "called": "|java+method:///org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/db/rule/RuleDto/setEffortToFixDescription(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setSystemTags(java.util.Set)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setStatus(org.sonar.api.rule.RuleStatus)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/htmlDescription()|",
      "|java+method:///org/sonar/db/rule/RuleDto/createFor(org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/name()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/effortToFixDescription()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/insert(org.sonar.db.DbSession,org.sonar.db.Dto)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setConfigKey(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/internalKey()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/tags()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/template()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Repository/key()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setDescriptionFormat(org.sonar.db.rule.RuleDto$Format)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/markdownDescription()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setIsTemplate(boolean)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Repository/language()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/repository()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setLanguage(java.lang.String)|",
      "|java+method:///org/sonar/server/db/DbClient/deprecatedRuleDao()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/key()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/status()|",
      "|java+method:///org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setName(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/severity()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/rule/RuleDto/setSystemTags(java.util.Set)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setStatus(org.sonar.api.rule.RuleStatus)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/htmlDescription()|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+method:///org/sonar/db/rule/RuleDto/createFor(org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/name()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setUpdatedAt(long)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/key()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setConfigKey(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/internalKey()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setGapDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/tags()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setType(org.sonar.api.rules.RuleType)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Repository/key()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setDescriptionFormat(org.sonar.db.rule.RuleDto$Format)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/markdownDescription()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setIsTemplate(boolean)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/gapDescription()|",
      "|java+method:///org/sonar/api/rules/RuleType/valueOf(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDao/insert(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Repository/language()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/repository()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setLanguage(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/status()|",
      "|java+method:///org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setCreatedAt(long)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/template()|",
      "|java+method:///org/sonar/api/rules/RuleType/name()|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/type()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setName(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/severity()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/ws/WebServicesWs/writeAction(org.sonar.api.utils.text.JsonWriter,org.sonar.api.server.ws.WebService$Action,boolean)|",
    "called": "|java+method:///org/sonar/api/utils/text/JsonWriter/beginObject()|",
    "v1Body": [
      "|java+method:///org/sonar/api/utils/text/JsonWriter/prop(java.lang.String,java.lang.String)|",
      "|java+method:///com/google/common/collect/Ordering/sortedCopy(java.lang.Iterable)|",
      "|java+method:///com/google/common/collect/Ordering/onResultOf(com.google.common.base.Function)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginObject()|",
      "|java+method:///org/sonar/api/server/ws/WebService$Action/isInternal()|",
      "|java+method:///java/util/Collection/isEmpty()|",
      "|java+constructor:///org/sonar/server/ws/WebServicesWs$5/WebServicesWs$5(org.sonar.server.ws.WebServicesWs)|",
      "|java+method:///org/sonar/api/server/ws/WebService$Action/description()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/server/ws/WebService$Action/key()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endArray()|",
      "|java+method:///org/sonar/server/ws/WebServicesWs/writeParam(org.sonar.api.utils.text.JsonWriter,org.sonar.api.server.ws.WebService$Param)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/prop(java.lang.String,boolean)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginArray()|",
      "|java+method:///com/google/common/collect/Ordering/natural()|",
      "|java+method:///org/sonar/api/server/ws/WebService$Action/params()|",
      "|java+method:///org/sonar/api/server/ws/WebService$Action/since()|",
      "|java+method:///org/sonar/api/server/ws/WebService$Action/isPost()|",
      "|java+method:///org/sonar/api/server/ws/WebService$Action/deprecatedSince()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endObject()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/name(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$Action/responseExample()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/utils/text/JsonWriter/prop(java.lang.String,java.lang.String)|",
      "|java+method:///com/google/common/collect/Ordering/sortedCopy(java.lang.Iterable)|",
      "|java+method:///com/google/common/collect/Ordering/onResultOf(com.google.common.base.Function)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginObject()|",
      "|java+method:///org/sonar/api/server/ws/WebService$Action/isInternal()|",
      "|java+method:///java/util/Collection/isEmpty()|",
      "|java+method:///org/sonar/api/server/ws/WebService$Action/description()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/server/ws/WebService$Action/key()|",
      "|java+method:///org/sonar/server/ws/WebServicesWs/writeParam(org.sonar.api.utils.text.JsonWriter,org.sonar.api.server.ws.WebService$Param)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/prop(java.lang.String,boolean)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginArray()|",
      "|java+method:///com/google/common/collect/Ordering/natural()|",
      "|java+method:///org/sonar/api/server/ws/WebService$Action/params()|",
      "|java+method:///org/sonar/api/server/ws/WebService$Action/since()|",
      "|java+method:///org/sonar/api/server/ws/WebService$Action/isPost()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endArray()|",
      "|java+constructor:///org/sonar/server/ws/WebServicesWs$5/WebServicesWs$5()|",
      "|java+method:///org/sonar/api/server/ws/WebService$Action/deprecatedSince()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endObject()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/name(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$Action/responseExample()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/ws/SearchAction/defineRuleSearchParameters(org.sonar.api.server.ws.WebService$NewAction)|",
    "called": "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setExampleValue(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setExampleValue(java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setBooleanPossibleValues()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setDefaultValue(java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setPossibleValues(java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/sonar/api/rule/RuleStatus/values()|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/createParam(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRule$Inheritance/name()|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setPossibleValues(java.util.Collection)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/server/search/IndexField/field()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setExampleValue(java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setBooleanPossibleValues()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setDefaultValue(java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setPossibleValues(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/rules/RuleType/values()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/api/rule/RuleStatus/values()|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/createParam(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRule$Inheritance/name()|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setPossibleValues(java.util.Collection)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setSince(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndex/findByRule(org.sonar.api.rule.RuleKey)|",
    "called": "|java+method:///org/sonar/api/rule/RuleKey/toString()|",
    "v1Body": [
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/get()|",
      "|java+method:///org/elasticsearch/index/query/QueryBuilders/hasParentQuery(java.lang.String,org.elasticsearch.index.query.QueryBuilder)|",
      "|java+method:///org/elasticsearch/search/SearchHits/iterator()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setRouting(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndex/getIndexName()|",
      "|java+method:///org/elasticsearch/index/query/IdsQueryBuilder/addIds(java.lang.String%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndex/getClient()|",
      "|java+method:///org/elasticsearch/index/query/QueryBuilders/idsQuery(java.lang.String%5B%5D)|",
      "|java+method:///org/elasticsearch/action/search/SearchResponse/getHits()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/server/search/SearchClient/prepareSearch(java.lang.String%5B%5D)|",
      "|java+method:///org/sonar/api/rule/RuleKey/toString()|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setQuery(org.elasticsearch.index.query.QueryBuilder)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setSize(int)|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndex/getParentType()|",
      "|java+method:///org/elasticsearch/search/SearchHit/getSource()|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndex/toDoc(java.util.Map)|"
    ],
    "v2Body": [
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/get()|",
      "|java+method:///org/elasticsearch/index/query/QueryBuilders/hasParentQuery(java.lang.String,org.elasticsearch.index.query.QueryBuilder)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setSize(int)|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setRouting(java.lang.String)|",
      "|java+method:///org/elasticsearch/index/query/IdsQueryBuilder/addIds(java.lang.String%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndex/getClient()|",
      "|java+method:///org/elasticsearch/index/query/QueryBuilders/idsQuery(java.lang.String%5B%5D)|",
      "|java+method:///org/elasticsearch/action/search/SearchResponse/getHits()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/server/es/EsClient/prepareSearch(java.lang.String%5B%5D)|",
      "|java+method:///org/sonar/api/rule/RuleKey/repository()|",
      "|java+method:///org/sonar/api/rule/RuleKey/toString()|",
      "|java+method:///org/elasticsearch/search/SearchHit/getSource()|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setQuery(org.elasticsearch.index.query.QueryBuilder)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/elasticsearch/search/SearchHits/iterator()|",
      "|java+constructor:///org/sonar/server/qualityprofile/index/ActiveRuleDoc/ActiveRuleDoc(java.util.Map)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/ws/AppAction/addStatuses(org.sonar.api.utils.text.JsonWriter)|",
    "called": "|java+method:///org/sonar/api/utils/text/JsonWriter/beginObject()|",
    "v1Body": [
      "|java+method:///org/sonar/api/rule/RuleStatus/toString()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/prop(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/toLowerCase()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/api/rule/RuleStatus/values()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endObject()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginObject()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/api/i18n/I18n/message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/name(java.lang.String)|",
      "|java+method:///java/util/Locale/getDefault()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/rule/RuleStatus/toString()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/prop(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/toLowerCase(java.util.Locale)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/api/rule/RuleStatus/values()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endObject()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginObject()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/api/i18n/I18n/message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/name(java.lang.String)|",
      "|java+method:///java/util/Locale/getDefault()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/CommonRuleDefinitionsImpl/defineCommentDensityRule(org.sonar.api.server.rule.RulesDefinition$NewRepository)|",
    "called": "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setSeverity(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/debtRemediationFunctions()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setEffortToFixDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/createParam(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewParam/setType(org.sonar.api.server.rule.RuleParamType)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewParam/setName(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/addTags(java.lang.String%5B%5D)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewParam/setDefaultValue(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setDebtRemediationFunction(org.sonar.api.server.debt.DebtRemediationFunction)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$DebtRemediationFunctions/linear(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setDebtSubCharacteristic(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRepository/createRule(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setName(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setHtmlDescription(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/debtRemediationFunctions()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/createParam(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewParam/setType(org.sonar.api.server.rule.RuleParamType)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewParam/setName(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/addTags(java.lang.String%5B%5D)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewParam/setDefaultValue(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setDebtRemediationFunction(org.sonar.api.server.debt.DebtRemediationFunction)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$DebtRemediationFunctions/linear(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setName(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setHtmlDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRule/setGapDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$NewRepository/createRule(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/step/QualityGateEventsStep/notifyUsers(org.sonar.server.computation.component.Component,java.lang.String,org.sonar.server.computation.measure.QualityGateStatus,boolean)|",
    "called": "|java+method:///org/sonar/api/notifications/Notification/setDefaultMessage(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/computation/measure/QualityGateStatus/getStatus()|",
      "|java+method:///org/sonar/server/notification/NotificationManager/scheduleForSending(org.sonar.api.notifications.Notification)|",
      "|java+method:///org/sonar/server/computation/component/Component/getKey()|",
      "|java+method:///org/sonar/server/computation/measure/Measure$Level/toString()|",
      "|java+method:///org/sonar/server/computation/component/Component/getUuid()|",
      "|java+method:///org/sonar/api/notifications/Notification/setDefaultMessage(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/api/notifications/Notification/setFieldValue(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/server/computation/measure/QualityGateStatus/getText()|",
      "|java+method:///java/lang/Boolean/toString(boolean)|",
      "|java+constructor:///org/sonar/api/notifications/Notification/Notification(java.lang.String)|",
      "|java+method:///org/sonar/server/computation/component/Component/getName()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/computation/measure/QualityGateStatus/getStatus()|",
      "|java+method:///org/sonar/server/computation/component/Component/getKey()|",
      "|java+method:///org/sonar/server/computation/measure/Measure$Level/toString()|",
      "|java+method:///org/sonar/server/computation/component/Component/getUuid()|",
      "|java+method:///org/sonar/api/notifications/Notification/setDefaultMessage(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/notification/NotificationService/deliver(org.sonar.api.notifications.Notification)|",
      "|java+method:///org/sonar/api/notifications/Notification/setFieldValue(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/server/computation/measure/QualityGateStatus/getText()|",
      "|java+method:///java/lang/Boolean/toString(boolean)|",
      "|java+constructor:///org/sonar/api/notifications/Notification/Notification(java.lang.String)|",
      "|java+method:///org/sonar/server/computation/component/Component/getName()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/platform/ServerImpl/start()|",
    "called": "|java+method:///org/sonar/api/config/Settings/getString(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///com/google/common/base/Joiner/join(java.lang.Object,java.lang.Object,java.lang.Object%5B%5D)|",
      "|java+method:///java/io/File/isDirectory()|",
      "|java+method:///java/text/SimpleDateFormat/format(java.util.Date)|",
      "|java+method:///com/google/common/base/Joiner/on(java.lang.String)|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/sonar/server/platform/ServerImpl/read(java.lang.String)|",
      "|java+constructor:///java/io/File/File(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/server/platform/ServerImpl/readVersion(java.lang.String)|",
      "|java+method:///com/google/common/base/Joiner/skipNulls()|",
      "|java+method:///org/sonar/api/config/Settings/getString(java.lang.String)|",
      "|java+constructor:///java/text/SimpleDateFormat/SimpleDateFormat(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/log/Logger/info(java.lang.String,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///com/google/common/base/Joiner/join(java.lang.Object,java.lang.Object,java.lang.Object%5B%5D)|",
      "|java+method:///java/io/File/isDirectory()|",
      "|java+method:///java/text/SimpleDateFormat/format(java.util.Date)|",
      "|java+method:///com/google/common/base/Joiner/on(java.lang.String)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+constructor:///java/util/Date/Date(long)|",
      "|java+method:///org/apache/commons/lang/StringUtils/defaultIfBlank(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Long/valueOf(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/sonar/server/platform/ServerImpl/read(java.lang.String)|",
      "|java+constructor:///java/io/File/File(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/server/platform/ServerImpl/readVersion(java.lang.String)|",
      "|java+method:///com/google/common/base/Preconditions/checkState(boolean,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/google/common/base/Joiner/skipNulls()|",
      "|java+method:///org/sonar/api/config/Settings/getString(java.lang.String)|",
      "|java+constructor:///java/text/SimpleDateFormat/SimpleDateFormat(java.lang.String)|",
      "|java+method:///java/lang/String/replaceFirst(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/api/utils/log/Logger/info(java.lang.String,java.lang.Object)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/platform/ws/InfoAction/writeJson(org.sonar.api.utils.text.JsonWriter)|",
    "called": "|java+method:///org/sonar/api/utils/text/JsonWriter/valueObject(java.lang.Object)|",
    "v1Body": [
      "|java+method:///java/util/LinkedHashMap/entrySet()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/valueObject(java.lang.Object)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginObject()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/sonar/server/platform/monitoring/Monitor/attributes()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endObject()|",
      "|java+method:///org/sonar/server/platform/monitoring/Monitor/name()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/name(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///org/sonar/server/platform/monitoring/ProcessSystemInfoClient/connect(org.sonar.process.ProcessId)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/process/systeminfo/protobuf/ProtobufSystemInfo$Section/getName()|",
      "|java+method:///org/sonar/process/systeminfo/protobuf/ProtobufSystemInfo$SystemInfo/getSectionsList()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginObject()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/sonar/process/systeminfo/protobuf/ProtobufSystemInfo$Section/getAttributesList()|",
      "|java+method:///org/sonar/server/platform/monitoring/Monitor/attributes()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/sonar/server/platform/ws/InfoAction/writeAttribute(org.sonar.api.utils.text.JsonWriter,org.sonar.process.systeminfo.protobuf.ProtobufSystemInfo$Attribute)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endObject()|",
      "|java+method:///org/sonar/server/platform/monitoring/Monitor/name()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/name(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/valueObject(java.lang.Object)|",
      "|java+method:///java/util/Map/entrySet()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/RuleActivator/doInsert(org.sonar.server.qualityprofile.ActiveRuleChange,org.sonar.server.qualityprofile.RuleActivatorContext,org.sonar.db.DbSession)|",
    "called": "|java+method:///org/sonar/api/utils/System2/now()|",
    "v1Body": [
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/rule()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/getParameters()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/createFor(org.sonar.db.qualityprofile.QualityProfileDto,org.sonar.db.rule.RuleDto)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/qualityprofile/db/ActiveRuleDao/insertParam(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleDto,org.sonar.db.qualityprofile.ActiveRuleParamDto)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleParamDto/setValue(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/server/db/DbClient/activeRuleDao()|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/getSeverity()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/ruleParamsByKeys()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleParamDto/createFor(org.sonar.db.rule.RuleParamDto)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/profile()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/setInheritance(java.lang.String)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/getInheritance()|",
      "|java+method:///org/sonar/server/qualityprofile/db/ActiveRuleDao/insert(org.sonar.db.DbSession,org.sonar.db.Dto)|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRule$Inheritance/name()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/rule()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/setUpdatedAt(long)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/getParameters()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/createFor(org.sonar.db.qualityprofile.QualityProfileDto,org.sonar.db.rule.RuleDto)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/setCreatedAt(long)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleParamDto/setValue(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/insert(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleDto)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRule$Inheritance/name()|",
      "|java+method:///org/sonar/db/DbClient/activeRuleDao()|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/getSeverity()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/ruleParamsByKeys()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleParamDto/createFor(org.sonar.db.rule.RuleParamDto)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/profile()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/setInheritance(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/insertParam(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleDto,org.sonar.db.qualityprofile.ActiveRuleParamDto)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/getInheritance()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/RubyRuleService/updateRule(java.util.Map)|",
    "called": "|java+constructor:///org/sonar/api/server/debt/internal/DefaultDebtRemediationFunction/DefaultDebtRemediationFunction(org.sonar.api.server.debt.DebtRemediationFunction$Type,java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/rule/RuleUpdate/setDebtRemediationFunction(org.sonar.api.server.debt.DebtRemediationFunction)|",
      "|java+method:///org/sonar/server/rule/RuleUpdate/setDebtSubCharacteristic(java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///org/sonar/api/server/debt/internal/DefaultDebtRemediationFunction/DefaultDebtRemediationFunction(org.sonar.api.server.debt.DebtRemediationFunction$Type,java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/api/server/debt/DebtRemediationFunction$Type/valueOf(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/RuleUpdater/update(org.sonar.server.rule.RuleUpdate,org.sonar.server.user.UserSession)|",
      "|java+method:///org/sonar/server/rule/RuleUpdate/createForPluginRule(org.sonar.api.rule.RuleKey)|",
      "|java+method:///com/google/common/base/Strings/emptyToNull(java.lang.String)|",
      "|java+method:///org/sonar/api/rule/RuleKey/parse(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/rule/RuleUpdate/setDebtRemediationFunction(org.sonar.api.server.debt.DebtRemediationFunction)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///org/sonar/api/server/debt/internal/DefaultDebtRemediationFunction/DefaultDebtRemediationFunction(org.sonar.api.server.debt.DebtRemediationFunction$Type,java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/api/server/debt/DebtRemediationFunction$Type/valueOf(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/RuleUpdater/update(org.sonar.server.rule.RuleUpdate,org.sonar.server.user.UserSession)|",
      "|java+method:///org/sonar/server/rule/RuleUpdate/createForPluginRule(org.sonar.api.rule.RuleKey)|",
      "|java+method:///com/google/common/base/Strings/emptyToNull(java.lang.String)|",
      "|java+method:///org/sonar/api/rule/RuleKey/parse(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/platform/platformlevel/PlatformLevel1/configureLevel()|",
    "called": "|java+method:///org/sonar/api/internal/SonarQubeVersionFactory/create(org.sonar.api.utils.System2)|",
    "v1Body": [
      "|java+method:///org/sonar/core/config/CorePropertyDefinitions/all()|",
      "|java+method:///org/sonar/server/platform/platformlevel/PlatformLevel1/addAll(java.util.Collection)|",
      "|java+constructor:///org/sonar/server/platform/TempFolderProvider/TempFolderProvider()|",
      "|java+method:///org/sonar/server/platform/platformlevel/PlatformLevel1/addExtraRootComponents()|",
      "|java+method:///org/sonar/server/computation/property/CePropertyDefinitions/all()|",
      "|java+method:///org/sonar/server/platform/platformlevel/PlatformLevel1/add(java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/core/config/CorePropertyDefinitions/all()|",
      "|java+method:///org/sonar/server/platform/platformlevel/PlatformLevel1/addAll(java.util.Collection)|",
      "|java+constructor:///org/sonar/server/platform/TempFolderProvider/TempFolderProvider()|",
      "|java+method:///org/sonar/server/platform/platformlevel/PlatformLevel1/addExtraRootComponents()|",
      "|java+method:///org/sonar/ce/property/CePropertyDefinitions/all()|",
      "|java+method:///org/sonar/api/internal/SonarQubeVersionFactory/create(org.sonar.api.utils.System2)|",
      "|java+method:///org/sonar/server/platform/platformlevel/PlatformLevel1/add(java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/issue/DebtCalculator/calculate(org.sonar.core.issue.DefaultIssue)|",
    "called": "|java+method:///org/sonar/api/utils/Durations/decode(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/computation/issue/Rule/getRemediationFunction()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/effortToFix()|",
      "|java+method:///org/sonar/api/server/debt/DebtRemediationFunction$Type/usesCoefficient()|",
      "|java+method:///org/sonar/api/utils/Duration/multiply(int)|",
      "|java+method:///org/sonar/server/computation/issue/RuleRepository/getByKey(org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/api/utils/Duration/create(long)|",
      "|java+method:///org/sonar/api/server/debt/DebtRemediationFunction/offset()|",
      "|java+method:///org/sonar/api/server/debt/DebtRemediationFunction/type()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/ruleKey()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///java/lang/Number/intValue()|",
      "|java+method:///org/sonar/api/server/debt/DebtRemediationFunction/coefficient()|",
      "|java+method:///org/sonar/server/computation/issue/DebtCalculator/verifyEffortToFix(org.sonar.core.issue.DefaultIssue,org.sonar.api.server.debt.DebtRemediationFunction)|",
      "|java+method:///org/sonar/api/utils/Duration/add(org.sonar.api.utils.Duration)|",
      "|java+method:///org/sonar/server/computation/issue/Rule/getSubCharacteristicId()|",
      "|java+method:///org/sonar/api/server/debt/DebtRemediationFunction$Type/usesOffset()|",
      "|java+method:///org/sonar/api/utils/Durations/decode(java.lang.String)|",
      "|java+method:///com/google/common/base/Objects/firstNonNull(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/computation/issue/Rule/getRemediationFunction()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/effortToFix()|",
      "|java+method:///org/sonar/api/server/debt/DebtRemediationFunction$Type/usesBaseEffort()|",
      "|java+method:///org/sonar/server/computation/issue/RuleRepository/getByKey(org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/api/utils/Duration/create(long)|",
      "|java+method:///org/sonar/api/server/debt/DebtRemediationFunction/gapMultiplier()|",
      "|java+method:///org/sonar/api/server/debt/DebtRemediationFunction/type()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/ruleKey()|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/Duration/multiply(int)|",
      "|java+method:///org/sonar/api/server/debt/DebtRemediationFunction$Type/usesGapMultiplier()|",
      "|java+method:///java/lang/Number/intValue()|",
      "|java+method:///org/sonar/server/computation/issue/DebtCalculator/verifyEffortToFix(org.sonar.core.issue.DefaultIssue,org.sonar.api.server.debt.DebtRemediationFunction)|",
      "|java+method:///org/sonar/api/utils/Duration/add(org.sonar.api.utils.Duration)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/sonar/api/server/debt/DebtRemediationFunction/baseEffort()|",
      "|java+method:///org/sonar/api/utils/Durations/decode(java.lang.String)|",
      "|java+method:///com/google/common/base/Objects/firstNonNull(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/index/RuleDoc/templateKey()|",
    "called": "|java+method:///org/sonar/api/rule/RuleKey/parse(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/rule/index/RuleDoc/getNullableField(java.lang.String)|",
      "|java+method:///org/sonar/api/rule/RuleKey/parse(java.lang.String)|",
      "|java+method:///org/sonar/server/search/IndexField/field()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/rule/index/RuleDoc/getNullableField(java.lang.String)|",
      "|java+method:///org/sonar/api/rule/RuleKey/parse(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/ws/CompareAction/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/sonar/server/qualityprofile/ws/CompareAction$1/CompareAction$1(org.sonar.server.qualityprofile.ws.CompareAction)|",
      "|java+method:///org/sonar/server/rule/RuleService/getByKeys(java.util.Collection)|",
      "|java+method:///com/google/common/collect/Maps/uniqueIndex(java.lang.Iterable,com.google.common.base.Function)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileComparison$QProfileComparisonResult/collectRuleKeys()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileComparison/compare(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Response/newJsonWriter()|",
      "|java+method:///org/sonar/server/qualityprofile/ws/CompareAction/writeResult(org.sonar.api.utils.text.JsonWriter,org.sonar.server.qualityprofile.QProfileComparison$QProfileComparisonResult,java.util.Map)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///com/google/common/collect/Maps/uniqueIndex(java.lang.Iterable,com.google.common.base.Function)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileComparison$QProfileComparisonResult/collectRuleKeys()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileComparison/compare(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectByKeys(org.sonar.db.DbSession,java.util.List)|",
      "|java+method:///org/sonar/api/server/ws/Response/newJsonWriter()|",
      "|java+method:///org/sonar/server/qualityprofile/ws/CompareAction/writeResult(org.sonar.api.utils.text.JsonWriter,org.sonar.server.qualityprofile.QProfileComparison$QProfileComparisonResult,java.util.Map)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/RegisterRules/removeActiveRulesOnStillExistingRepositories(org.sonar.db.DbSession,java.util.Collection,org.sonar.api.server.rule.RulesDefinition$Context)|",
    "called": "|java+method:///org/sonar/api/server/rule/RulesDefinition$Context/repositories()|",
    "v1Body": [
      "|java+constructor:///org/sonar/server/rule/RegisterRules$1/RegisterRules$1(org.sonar.server.rule.RegisterRules)|",
      "|java+method:///com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Context/repositories()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/deactivate(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto)|",
      "|java+method:///java/util/List/contains(java.lang.Object)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getRepositoryKey()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Iterable)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/sonar/server/rule/RegisterRules$1/RegisterRules$1(org.sonar.server.rule.RegisterRules)|",
      "|java+method:///com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/deactivate(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto)|",
      "|java+method:///java/util/List/contains(java.lang.Object)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getRepositoryKey()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Iterable)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Context/repositories()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/RuleActivator/removeParent(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto)|",
    "called": "|java+method:///org/sonar/api/utils/System2/now()|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getParentKee()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/getInheritance()|",
      "|java+method:///org/sonar/server/qualityprofile/db/ActiveRuleDao/selectByProfileKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/db/ActiveRuleDao/update(org.sonar.db.DbSession,org.sonar.db.Dto)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/deactivate(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleKey,boolean)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/update(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto,org.sonar.db.qualityprofile.QualityProfileDto%5B%5D)|",
      "|java+method:///org/sonar/server/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/setParentKee(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/setInheritance(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/getKey()|",
      "|java+method:///org/sonar/server/db/DbClient/activeRuleDao()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/selectByProfileKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/setUpdatedAt(long)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getParentKee()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/getInheritance()|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/deactivate(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleKey,boolean)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/update(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto,org.sonar.db.qualityprofile.QualityProfileDto%5B%5D)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/setParentKee(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/setInheritance(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/getKey()|",
      "|java+method:///org/sonar/db/DbClient/activeRuleDao()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/createFor(org.sonar.server.qualityprofile.ActiveRuleChange$Type,org.sonar.db.qualityprofile.ActiveRuleKey)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/update(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleDto)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/setInheritance(org.sonar.server.qualityprofile.ActiveRule$Inheritance)|",
      "|java+method:///java/util/List/iterator()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/ws/IssuesWs/defineBulkChangeAction(org.sonar.api.server.ws.WebService$NewController)|",
    "called": "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setExampleValue(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setExampleValue(java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setHandler(org.sonar.api.server.ws.RequestHandler)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setDefaultValue(java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setPossibleValues(java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setPost(boolean)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewController/createAction(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setRequired(boolean)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setSince(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/createParam(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setPossibleValues(java.util.Collection)|",
      "|java+method:///org/sonar/api/server/ws/RailsHandler/addFormatParam(org.sonar.api.server.ws.WebService$NewAction)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setExampleValue(java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setHandler(org.sonar.api.server.ws.RequestHandler)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setDefaultValue(java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setPossibleValues(java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setPost(boolean)|",
      "|java+method:///org/sonar/api/rules/RuleType/names()|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setRequired(boolean)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setSince(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewAction/createParam(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setSince(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setPossibleValues(java.util.Collection)|",
      "|java+method:///org/sonar/api/server/ws/RailsHandler/addFormatParam(org.sonar.api.server.ws.WebService$NewAction)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewParam/setDeprecatedSince(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/WebService$NewController/createAction(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/user/ws/UpdateAction/writeResponse(org.sonar.api.server.ws.Response,java.lang.String)|",
    "called": "|java+method:///org/sonar/api/utils/text/JsonWriter/close()|",
    "v1Body": [
      "|java+method:///org/sonar/server/user/index/UserIndex/getByLogin(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginObject()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/close()|",
      "|java+method:///org/sonar/server/user/ws/UpdateAction/writeUser(org.sonar.api.utils.text.JsonWriter,org.sonar.server.user.index.UserDoc)|",
      "|java+method:///org/sonar/api/server/ws/Response/newJsonWriter()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endObject()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginObject()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/close()|",
      "|java+method:///org/sonar/server/user/ws/UpdateAction/writeUser(org.sonar.api.utils.text.JsonWriter,java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Response/newJsonWriter()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endObject()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/queue/PurgeCeActivities/onServerStart(org.sonar.api.platform.Server)|",
    "called": "|java+method:///org/sonar/api/utils/System2/now()|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Calendar/add(int,int)|",
      "|java+method:///java/util/Calendar/getTime()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/computation/log/CeLogging/deleteIfExists(org.sonar.server.computation.log.LogFileRef)|",
      "|java+method:///java/util/Calendar/getInstance()|",
      "|java+method:///java/util/Calendar/getTimeInMillis()|",
      "|java+method:///org/sonar/api/utils/log/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/sonar/db/ce/CeActivityDto/getUuid()|",
      "|java+method:///org/sonar/db/ce/CeActivityDao/deleteByUuid(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/ce/CeActivityDao/selectOlderThan(org.sonar.db.DbSession,long)|",
      "|java+method:///java/util/Calendar/setTimeInMillis(long)|",
      "|java+method:///org/sonar/server/computation/log/LogFileRef/from(org.sonar.db.ce.CeActivityDto)|",
      "|java+method:///org/sonar/db/DbClient/ceActivityDao()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Calendar/getTime()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/db/DbClient/ceActivityDao()|",
      "|java+method:///java/util/Calendar/getInstance()|",
      "|java+method:///java/util/Calendar/getTimeInMillis()|",
      "|java+method:///org/sonar/api/utils/log/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/sonar/db/ce/CeActivityDto/getUuid()|",
      "|java+method:///org/sonar/db/ce/CeActivityDao/deleteByUuid(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///org/sonar/ce/log/CeLogging/deleteIfExists(org.sonar.ce.log.LogFileRef)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/ce/CeActivityDao/selectOlderThan(org.sonar.db.DbSession,long)|",
      "|java+method:///java/util/Calendar/setTimeInMillis(long)|",
      "|java+method:///java/util/Calendar/add(int,int)|",
      "|java+method:///org/sonar/ce/log/LogFileRef/from(org.sonar.db.ce.CeActivityDto)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/app/EmbeddedTomcat/start()|",
    "called": "|java+method:///org/sonar/api/utils/log/Loggers/get(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/apache/catalina/startup/Tomcat/start()|",
      "|java+method:///org/apache/catalina/Host/setDeployOnStartup(boolean)|",
      "|java+constructor:///org/sonar/server/app/TomcatAccessLog/TomcatAccessLog()|",
      "|java+method:///org/sonar/server/app/TomcatAccessLog/configure(org.apache.catalina.startup.Tomcat,org.sonar.process.Props)|",
      "|java+method:///org/apache/catalina/Host/setCreateDirs(boolean)|",
      "|java+method:///org/apache/catalina/startup/Tomcat/setBaseDir(java.lang.String)|",
      "|java+constructor:///org/sonar/server/app/TomcatContexts/TomcatContexts()|",
      "|java+method:///org/apache/catalina/Host/setAppBase(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/log/Loggers/get(java.lang.Class)|",
      "|java+method:///org/sonar/server/app/EmbeddedTomcat/tomcatBasedir()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/sonar/server/app/TomcatContexts/configure(org.apache.catalina.startup.Tomcat,org.sonar.process.Props)|",
      "|java+method:///org/apache/catalina/startup/Tomcat/getHost()|",
      "|java+method:///org/sonar/server/app/TomcatConnectors/configure(org.apache.catalina.startup.Tomcat,org.sonar.process.Props)|",
      "|java+constructor:///org/apache/catalina/startup/Tomcat/Tomcat()|",
      "|java+method:///org/sonar/server/app/TomcatStartupLogs/log(org.apache.catalina.startup.Tomcat)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+constructor:///org/sonar/server/app/TomcatStartupLogs/TomcatStartupLogs(org.sonar.process.Props,org.sonar.api.utils.log.Logger)|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///java/lang/System/setProperty(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/catalina/Host/setAutoDeploy(boolean)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/catalina/startup/Tomcat/start()|",
      "|java+method:///org/apache/catalina/Host/setDeployOnStartup(boolean)|",
      "|java+constructor:///org/sonar/server/app/TomcatAccessLog/TomcatAccessLog()|",
      "|java+method:///org/sonar/server/app/TomcatAccessLog/configure(org.apache.catalina.startup.Tomcat,org.sonar.process.Props)|",
      "|java+method:///org/apache/catalina/Host/setCreateDirs(boolean)|",
      "|java+method:///org/apache/catalina/startup/Tomcat/setBaseDir(java.lang.String)|",
      "|java+constructor:///org/sonar/server/app/TomcatContexts/TomcatContexts()|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///org/apache/catalina/Host/setAppBase(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/log/Loggers/get(java.lang.Class)|",
      "|java+method:///org/sonar/server/app/EmbeddedTomcat/tomcatBasedir()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/sonar/server/app/TomcatContexts/configure(org.apache.catalina.startup.Tomcat,org.sonar.process.Props)|",
      "|java+method:///org/apache/catalina/startup/Tomcat/getHost()|",
      "|java+method:///org/sonar/server/app/TomcatConnectors/configure(org.apache.catalina.startup.Tomcat,org.sonar.process.Props)|",
      "|java+constructor:///org/sonar/server/app/TomcatStartupLogs/TomcatStartupLogs(org.sonar.api.utils.log.Logger)|",
      "|java+constructor:///org/apache/catalina/startup/Tomcat/Tomcat()|",
      "|java+method:///org/sonar/server/app/TomcatStartupLogs/log(org.apache.catalina.startup.Tomcat)|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///java/lang/System/setProperty(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/catalina/Host/setAutoDeploy(boolean)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-plugin-api:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/ws/SearchAction/toSearchWsRequest(org.sonar.api.server.ws.Request)|",
    "called": "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setAsc(boolean)|",
    "v1Body": [
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setProjectKeys(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setComponentKeys(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setReporters(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setFacetMode(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/paramAsStrings(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setRules(java.util.List)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsInt(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setLanguages(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setCreatedAfter(java.lang.String)|",
      "|java+constructor:///org/sonarqube/ws/client/issue/SearchWsRequest/SearchWsRequest()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setResolved(java.lang.Boolean)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setAsc(boolean)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setAuthors(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setComponentUuids(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setDirectories(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setSeverities(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setModuleUuids(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setFacets(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setAssigned(java.lang.Boolean)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setProjectUuids(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setPageSize(int)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setAdditionalFields(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setPage(int)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setStatuses(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setActionPlans(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setCreatedAt(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setCreatedInLast(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/paramAsBoolean(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setFileUuids(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setOnComponentOnly(java.lang.Boolean)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setCreatedBefore(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setComponentRoots(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setAssignees(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setComponents(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setPlanned(java.lang.Boolean)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setSort(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setResolutions(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setComponentRootUuids(java.util.List)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setTags(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setProjects(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setIssues(java.util.List)|"
    ],
    "v2Body": [
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setProjectKeys(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setFacetMode(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setCreatedAt(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/paramAsStrings(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setRules(java.util.List)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsInt(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setTypes(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setLanguages(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setCreatedAfter(java.lang.String)|",
      "|java+constructor:///org/sonarqube/ws/client/issue/SearchWsRequest/SearchWsRequest()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setResolved(java.lang.Boolean)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setAsc(boolean)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setComponents(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setAuthors(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setComponentUuids(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setDirectories(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setSeverities(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setModuleUuids(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setSinceLeakPeriod(java.lang.Boolean)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setFacets(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setAssigned(java.lang.Boolean)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setProjectUuids(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setPageSize(int)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setAdditionalFields(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setPage(int)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setStatuses(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setComponentKeys(java.util.List)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsBoolean(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setCreatedInLast(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/paramAsBoolean(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setFileUuids(java.util.List)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setOnComponentOnly(java.lang.Boolean)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setCreatedBefore(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setComponentRoots(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setAssignees(java.util.List)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setSort(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setResolutions(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setComponentRootUuids(java.util.List)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setTags(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setProjects(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/setIssues(java.util.List)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-ws:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatOperation(org.sonar.server.issue.ws.SearchResponseData)|",
    "called": "|java+method:///org/sonarqube/ws/Issues$Issue/newBuilder()|",
    "v1Body": [
      "|java+method:///org/sonarqube/ws/Issues$ActionPlans$Builder/getActionPlansList()|",
      "|java+method:///org/sonarqube/ws/Issues$Operation$Builder/addAllComponents(java.lang.Iterable)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatIssue(org.sonarqube.ws.Issues$Issue$Builder,org.sonar.db.issue.IssueDto,org.sonar.server.issue.ws.SearchResponseData)|",
      "|java+method:///org/sonarqube/ws/Issues$Operation$Builder/addAllUsers(java.lang.Iterable)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatIssueComments(org.sonar.server.issue.ws.SearchResponseData,org.sonarqube.ws.Issues$Issue$Builder,org.sonar.db.issue.IssueDto)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/sonarqube/ws/Issues$Operation$Builder/addAllRules(java.lang.Iterable)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatRules(org.sonar.server.issue.ws.SearchResponseData)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatIssueActions(org.sonar.server.issue.ws.SearchResponseData,org.sonarqube.ws.Issues$Issue$Builder,org.sonar.db.issue.IssueDto)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatIssueTransitions(org.sonar.server.issue.ws.SearchResponseData,org.sonarqube.ws.Issues$Issue$Builder,org.sonar.db.issue.IssueDto)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/build()|",
      "|java+method:///org/sonarqube/ws/Issues$Operation/newBuilder()|",
      "|java+method:///org/sonarqube/ws/Issues$Operation$Builder/setIssue(org.sonarqube.ws.Issues$Issue)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatUsers(org.sonar.server.issue.ws.SearchResponseData)|",
      "|java+method:///org/sonarqube/ws/Common$Rules$Builder/getRulesList()|",
      "|java+method:///org/sonarqube/ws/Common$Users$Builder/getUsersList()|",
      "|java+method:///org/sonarqube/ws/Issues$Operation$Builder/addAllActionPlans(java.lang.Iterable)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue/newBuilder()|",
      "|java+method:///org/sonarqube/ws/Issues$Operation$Builder/build()|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatActionPlans(org.sonar.server.issue.ws.SearchResponseData)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseData/getIssues()|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatComponents(org.sonar.server.issue.ws.SearchResponseData)|"
    ],
    "v2Body": [
      "|java+method:///org/sonarqube/ws/Issues$Operation$Builder/addAllComponents(java.lang.Iterable)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatIssue(org.sonarqube.ws.Issues$Issue$Builder,org.sonar.db.issue.IssueDto,org.sonar.server.issue.ws.SearchResponseData)|",
      "|java+method:///org/sonarqube/ws/Issues$Operation$Builder/addAllUsers(java.lang.Iterable)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatIssueComments(org.sonar.server.issue.ws.SearchResponseData,org.sonarqube.ws.Issues$Issue$Builder,org.sonar.db.issue.IssueDto)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/sonarqube/ws/Issues$Operation$Builder/addAllRules(java.lang.Iterable)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatRules(org.sonar.server.issue.ws.SearchResponseData)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatIssueActions(org.sonar.server.issue.ws.SearchResponseData,org.sonarqube.ws.Issues$Issue$Builder,org.sonar.db.issue.IssueDto)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatIssueTransitions(org.sonar.server.issue.ws.SearchResponseData,org.sonarqube.ws.Issues$Issue$Builder,org.sonar.db.issue.IssueDto)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/build()|",
      "|java+method:///org/sonarqube/ws/Issues$Operation/newBuilder()|",
      "|java+method:///org/sonarqube/ws/Issues$Operation$Builder/setIssue(org.sonarqube.ws.Issues$Issue)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatUsers(org.sonar.server.issue.ws.SearchResponseData)|",
      "|java+method:///org/sonarqube/ws/Common$Rules$Builder/getRulesList()|",
      "|java+method:///org/sonarqube/ws/Common$Users$Builder/getUsersList()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue/newBuilder()|",
      "|java+method:///org/sonarqube/ws/Issues$Operation$Builder/build()|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseData/getIssues()|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatComponents(org.sonar.server.issue.ws.SearchResponseData)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-ws:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatIssueTransitions(org.sonar.server.issue.ws.SearchResponseData,org.sonarqube.ws.Issues$Issue$Builder,org.sonar.db.issue.IssueDto)|",
    "called": "|java+method:///org/sonarqube/ws/Issues$Transitions$Builder/addTransitions(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/core/issue/workflow/Transition/key()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseData/getTransitionsForIssueKey(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Transitions/newBuilder()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonarqube/ws/Issues$Transitions$Builder/addTransitions(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getKey()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setTransitions(org.sonarqube.ws.Issues$Transitions$Builder)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/issue/workflow/Transition/key()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseData/getTransitionsForIssueKey(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Transitions/newBuilder()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonarqube/ws/Issues$Transitions$Builder/addTransitions(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getKey()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setTransitions(org.sonarqube.ws.Issues$Transitions$Builder)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-ws:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/ws/SearchAction/writeParentFields(org.sonarqube.ws.QualityProfiles$SearchWsResponse$QualityProfile$Builder,org.sonar.server.qualityprofile.QProfile,java.util.Map)|",
    "called": "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$QualityProfile$Builder/setParentName(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/qualityprofile/ws/SearchAction/isNotNull(java.lang.Object)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfile/parent()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfile/name()|",
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$QualityProfile$Builder/setParentKey(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$QualityProfile$Builder/setParentName(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfile/parent()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfile/name()|",
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$QualityProfile$Builder/setParentKey(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$QualityProfile$Builder/setParentName(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-ws:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatIssue(org.sonarqube.ws.Issues$Issue$Builder,org.sonar.db.issue.IssueDto,org.sonar.server.issue.ws.SearchResponseData)|",
    "called": "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setProject(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setAssignee(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getAssignee()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setUpdateDate(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setRule(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/addAllTags(java.lang.Iterable)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getComponentUuid()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setKey(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getKey()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getActionPlanKey()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setAuthor(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setCreationDate(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setMessage(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getRuleKey()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getModuleUuid()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/sonarqube/ws/Common$Severity/valueOf(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setSeverity(org.sonarqube.ws.Common$Severity)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getIssueCreationDate()|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseData/getComponentByUuid(java.lang.String)|",
      "|java+method:///org/sonar/db/component/ComponentDto/getKey()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getMessage()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getResolution()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setStatus(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setDebt(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getIssueCloseDate()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setLine(int)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getStatus()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setSubProject(java.lang.String)|",
      "|java+method:///org/sonar/db/component/ComponentDto/getId()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getDebt()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getIssueUpdateDate()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getLine()|",
      "|java+method:///org/sonar/api/utils/Duration/create(long)|",
      "|java+method:///org/sonar/api/utils/Durations/encode(org.sonar.api.utils.Duration)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///com/google/common/base/Strings/nullToEmpty(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getProjectUuid()|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/completeIssueLocations(org.sonar.db.issue.IssueDto,org.sonarqube.ws.Issues$Issue$Builder)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getTags()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setActionPlan(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setProject(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/DateUtils/formatDateTime(java.util.Date)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setReporter(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getSeverity()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setComponent(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getReporter()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setComponentId(long)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getAuthorLogin()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getComponentKey()|",
      "|java+method:///org/sonar/api/rule/RuleKey/toString()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setCloseDate(java.lang.String)|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setResolution(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setAssignee(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setType(org.sonarqube.ws.Common$RuleType)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getAssignee()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setUpdateDate(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setRule(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/DateUtils/formatDateTime(java.util.Date)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getComponentUuid()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getKey()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setAuthor(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setCreationDate(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setMessage(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getRuleKey()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getModuleUuid()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/sonarqube/ws/Common$Severity/valueOf(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setSeverity(org.sonarqube.ws.Common$Severity)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getIssueCreationDate()|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseData/getComponentByUuid(java.lang.String)|",
      "|java+method:///org/sonar/db/component/ComponentDto/getKey()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getMessage()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getEffort()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getResolution()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setStatus(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setDebt(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getIssueCloseDate()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setLine(int)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getStatus()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setSubProject(java.lang.String)|",
      "|java+method:///org/sonar/db/component/ComponentDto/getId()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getIssueUpdateDate()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getLine()|",
      "|java+method:///org/sonar/api/utils/Duration/create(long)|",
      "|java+method:///org/sonar/api/utils/Durations/encode(org.sonar.api.utils.Duration)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///com/google/common/base/Strings/nullToEmpty(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getProjectUuid()|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/completeIssueLocations(org.sonar.db.issue.IssueDto,org.sonarqube.ws.Issues$Issue$Builder)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getTags()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setProject(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getType()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/addAllTags(java.lang.Iterable)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getSeverity()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setComponent(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setKey(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Common$RuleType/valueOf(int)|",
      "|java+method:///org/sonar/db/component/ComponentDto/key()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setComponentId(long)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getAuthorLogin()|",
      "|java+method:///org/sonar/api/rule/RuleKey/toString()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setCloseDate(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setEffort(java.lang.String)|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setResolution(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-ws:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/ws/SearchAction/writeLanguageFields(org.sonarqube.ws.QualityProfiles$SearchWsResponse$QualityProfile$Builder,org.sonar.server.qualityprofile.QProfile)|",
    "called": "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$QualityProfile$Builder/setLanguageName(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$QualityProfile$Builder/setLanguage(java.lang.String)|",
      "|java+method:///org/sonar/api/resources/Languages/get(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/ws/SearchAction/isNotNull(java.lang.Object)|",
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$QualityProfile$Builder/setLanguageName(java.lang.String)|",
      "|java+method:///org/sonar/api/resources/Language/getName()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfile/language()|"
    ],
    "v2Body": [
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$QualityProfile$Builder/setLanguage(java.lang.String)|",
      "|java+method:///org/sonar/api/resources/Languages/get(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$QualityProfile$Builder/setLanguageName(java.lang.String)|",
      "|java+method:///org/sonar/api/resources/Language/getName()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfile/language()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-ws:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatSearch(java.util.Set,org.sonar.server.issue.ws.SearchResponseData,org.sonar.api.utils.Paging,org.sonar.server.es.Facets)|",
    "called": "|java+method:///org/sonarqube/ws/Issues$SearchWsResponse$Builder/setLanguages(org.sonarqube.ws.Issues$Languages$Builder)|",
    "v1Body": [
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatPaging(org.sonar.api.utils.Paging,org.sonarqube.ws.Issues$SearchWsResponse$Builder)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatDebtTotal(org.sonar.server.issue.ws.SearchResponseData,org.sonarqube.ws.Issues$SearchWsResponse$Builder)|",
      "|java+method:///org/sonarqube/ws/Issues$SearchWsResponse$Builder/setActionPlans(org.sonarqube.ws.Issues$ActionPlans$Builder)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatFacets(org.sonar.server.es.Facets,org.sonarqube.ws.Issues$SearchWsResponse$Builder)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatUsers(org.sonar.server.issue.ws.SearchResponseData)|",
      "|java+method:///org/sonarqube/ws/Issues$SearchWsResponse$Builder/setUsers(org.sonarqube.ws.Common$Users$Builder)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatLanguages()|",
      "|java+method:///org/sonarqube/ws/Issues$SearchWsResponse$Builder/addAllComponents(java.lang.Iterable)|",
      "|java+method:///org/sonarqube/ws/Issues$SearchWsResponse/newBuilder()|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatIssues(java.util.Set,org.sonar.server.issue.ws.SearchResponseData)|",
      "|java+method:///org/sonarqube/ws/Issues$SearchWsResponse$Builder/setRules(org.sonarqube.ws.Common$Rules$Builder)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatActionPlans(org.sonar.server.issue.ws.SearchResponseData)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatComponents(org.sonar.server.issue.ws.SearchResponseData)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatRules(org.sonar.server.issue.ws.SearchResponseData)|",
      "|java+method:///org/sonarqube/ws/Issues$SearchWsResponse$Builder/setLanguages(org.sonarqube.ws.Issues$Languages$Builder)|",
      "|java+method:///org/sonarqube/ws/Issues$SearchWsResponse$Builder/addAllIssues(java.lang.Iterable)|",
      "|java+method:///org/sonarqube/ws/Issues$SearchWsResponse$Builder/build()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatPaging(org.sonar.api.utils.Paging,org.sonarqube.ws.Issues$SearchWsResponse$Builder)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatFacets(org.sonar.server.es.Facets,org.sonarqube.ws.Issues$SearchWsResponse$Builder)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatUsers(org.sonar.server.issue.ws.SearchResponseData)|",
      "|java+method:///org/sonarqube/ws/Issues$SearchWsResponse$Builder/setUsers(org.sonarqube.ws.Common$Users$Builder)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatComponents(org.sonar.server.issue.ws.SearchResponseData)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatLanguages()|",
      "|java+method:///org/sonarqube/ws/Issues$SearchWsResponse$Builder/addAllComponents(java.lang.Iterable)|",
      "|java+method:///org/sonarqube/ws/Issues$SearchWsResponse/newBuilder()|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatEffortTotal(org.sonar.server.issue.ws.SearchResponseData,org.sonarqube.ws.Issues$SearchWsResponse$Builder)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatIssues(java.util.Set,org.sonar.server.issue.ws.SearchResponseData)|",
      "|java+method:///org/sonarqube/ws/Issues$SearchWsResponse$Builder/setRules(org.sonarqube.ws.Common$Rules$Builder)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatRules(org.sonar.server.issue.ws.SearchResponseData)|",
      "|java+method:///org/sonarqube/ws/Issues$SearchWsResponse$Builder/setLanguages(org.sonarqube.ws.Issues$Languages$Builder)|",
      "|java+method:///org/sonarqube/ws/Issues$SearchWsResponse$Builder/addAllIssues(java.lang.Iterable)|",
      "|java+method:///org/sonarqube/ws/Issues$SearchWsResponse$Builder/build()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-ws:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/measure/ws/ComponentTreeAction/toComponentTreeWsRequest(org.sonar.api.server.ws.Request)|",
    "called": "|java+constructor:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/ComponentTreeWsRequest()|",
    "v1Body": [
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getSort()|",
      "|java+method:///org/sonar/api/server/ws/Request/paramAsStrings(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsInt(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setAsc(boolean)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getMetricKeys()|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setPageSize(int)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getQuery()|",
      "|java+method:///org/sonar/server/ws/WsUtils/checkRequest(boolean,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setSort(java.util.List)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getPageSize()|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setMetricKeys(java.util.List)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setMetricSort(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsStrings(java.lang.String)|",
      "|java+constructor:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/ComponentTreeWsRequest()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setBaseComponentId(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setQuery(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setQualifiers(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setBaseComponentKey(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setStrategy(java.lang.String)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setPage(int)|",
      "|java+method:///org/sonar/api/server/ws/Request/paramAsBoolean(java.lang.String)|",
      "|java+method:///java/util/List/contains(java.lang.Object)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setAdditionalFields(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getMetricSort()|"
    ],
    "v2Body": [
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setDeveloperKey(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getSort()|",
      "|java+method:///org/sonar/api/server/ws/Request/paramAsStrings(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsInt(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setAsc(boolean)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getMetricKeys()|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setPageSize(int)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getQuery()|",
      "|java+method:///org/sonar/server/ws/WsUtils/checkRequest(boolean,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setMetricPeriodSort(java.lang.Integer)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setSort(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getMetricPeriodSort()|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getPageSize()|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setMetricKeys(java.util.List)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setDeveloperId(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setMetricSort(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsStrings(java.lang.String)|",
      "|java+constructor:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/ComponentTreeWsRequest()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setBaseComponentId(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setQuery(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setQualifiers(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setBaseComponentKey(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setStrategy(java.lang.String)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setPage(int)|",
      "|java+method:///org/sonar/api/server/ws/Request/paramAsBoolean(java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/sonar/api/server/ws/Request/paramAsInt(java.lang.String)|",
      "|java+method:///java/util/List/contains(java.lang.Object)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/setAdditionalFields(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getMetricSort()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-ws:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/measure/ws/ComponentAction/toComponentWsRequest(org.sonar.api.server.ws.Request)|",
    "called": "|java+constructor:///org/sonarqube/ws/client/measure/ComponentWsRequest/ComponentWsRequest()|",
    "v1Body": [
      "|java+method:///org/sonar/api/server/ws/Request/paramAsStrings(java.lang.String)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentWsRequest/getMetricKeys()|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentWsRequest/setComponentKey(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentWsRequest/setComponentId(java.lang.String)|",
      "|java+method:///org/sonar/server/ws/WsUtils/checkRequest(boolean,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentWsRequest/setAdditionalFields(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentWsRequest/setMetricKeys(java.util.List)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsStrings(java.lang.String)|",
      "|java+constructor:///org/sonarqube/ws/client/measure/ComponentWsRequest/ComponentWsRequest()|"
    ],
    "v2Body": [
      "|java+method:///org/sonarqube/ws/client/measure/ComponentWsRequest/setDeveloperId(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentWsRequest/setDeveloperKey(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/paramAsStrings(java.lang.String)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentWsRequest/getMetricKeys()|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentWsRequest/setComponentKey(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentWsRequest/setComponentId(java.lang.String)|",
      "|java+method:///org/sonar/server/ws/WsUtils/checkRequest(boolean,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentWsRequest/setAdditionalFields(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentWsRequest/setMetricKeys(java.util.List)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsStrings(java.lang.String)|",
      "|java+constructor:///org/sonarqube/ws/client/measure/ComponentWsRequest/ComponentWsRequest()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-ws:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/ws/WsUtils/writeProtobuf(com.google.protobuf.Message,org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonarqube/ws/MessageFormatter/print(com.google.protobuf.MessageOrBuilder)|",
    "v1Body": [
      "|java+method:///org/sonar/core/util/ProtobufJsonFormat/write(com.google.protobuf.Message,org.sonar.api.utils.text.JsonWriter)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/setMediaType(java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/io/OutputStreamWriter/close()|",
      "|java+method:///org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)|",
      "|java+method:///org/sonar/api/server/ws/Response/stream()|",
      "|java+constructor:///java/io/OutputStreamWriter/OutputStreamWriter(java.io.OutputStream)|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/output()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/of(java.io.Writer)|",
      "|java+method:///org/sonarqube/ws/MessageFormatter/print(com.google.protobuf.MessageOrBuilder)|",
      "|java+method:///org/sonar/api/utils/log/Logger/error(java.lang.String,java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/Request/getMediaType()|",
      "|java+method:///com/google/protobuf/Message/writeTo(java.io.OutputStream)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/core/util/ProtobufJsonFormat/write(com.google.protobuf.Message,org.sonar.api.utils.text.JsonWriter)|",
      "|java+constructor:///java/io/OutputStreamWriter/OutputStreamWriter(java.io.OutputStream,java.nio.charset.Charset)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/setMediaType(java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/io/OutputStreamWriter/close()|",
      "|java+method:///org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)|",
      "|java+method:///org/sonar/api/server/ws/Response/stream()|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/output()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/of(java.io.Writer)|",
      "|java+method:///org/sonarqube/ws/MessageFormatter/print(com.google.protobuf.MessageOrBuilder)|",
      "|java+method:///org/sonar/api/utils/log/Logger/error(java.lang.String,java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/Request/getMediaType()|",
      "|java+method:///com/google/protobuf/Message/writeTo(java.io.OutputStream)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-ws:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/ws/SearchAction/buildResponse(org.sonar.server.qualityprofile.ws.SearchData)|",
    "called": "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$QualityProfile$Builder/setName(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/qualityprofile/ws/SearchData/getProfiles()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfile/isInherited()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfile/isDefault()|",
      "|java+method:///org/sonar/server/qualityprofile/ws/SearchAction/isNotNull(java.lang.Object)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfile/name()|",
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$Builder/addProfiles(org.sonarqube.ws.QualityProfiles$SearchWsResponse$QualityProfile$Builder)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfile/key()|",
      "|java+method:///org/sonar/server/qualityprofile/ws/SearchAction/writeLanguageFields(org.sonarqube.ws.QualityProfiles$SearchWsResponse$QualityProfile$Builder,org.sonar.server.qualityprofile.QProfile)|",
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$QualityProfile$Builder/clear()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfile/getRulesUpdatedAt()|",
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$QualityProfile$Builder/setIsDefault(boolean)|",
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse/newBuilder()|",
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$QualityProfile$Builder/setKey(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$QualityProfile$Builder/setRulesUpdatedAt(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/qualityprofile/ws/SearchData/getActiveRuleCount(java.lang.String)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$QualityProfile$Builder/setIsInherited(boolean)|",
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$QualityProfile$Builder/setProjectCount(long)|",
      "|java+method:///org/sonar/server/qualityprofile/ws/SearchData/getProjectCount(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/common/collect/Maps/uniqueIndex(java.lang.Iterable,com.google.common.base.Function)|",
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$QualityProfile$Builder/setName(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/ws/SearchAction/writeParentFields(org.sonarqube.ws.QualityProfiles$SearchWsResponse$QualityProfile$Builder,org.sonar.server.qualityprofile.QProfile,java.util.Map)|",
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$Builder/build()|",
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$QualityProfile$Builder/setActiveRuleCount(long)|",
      "|java+constructor:///org/sonar/server/qualityprofile/ws/SearchAction$QProfileToKey/SearchAction$QProfileToKey(org.sonar.server.qualityprofile.ws.SearchAction$1)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$QualityProfile/newBuilder()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/qualityprofile/ws/SearchData/getProfiles()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfile/isInherited()|",
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$QualityProfile$Builder/setIsInherited(boolean)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfile/isDefault()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfile/name()|",
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$Builder/addProfiles(org.sonarqube.ws.QualityProfiles$SearchWsResponse$QualityProfile$Builder)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfile/key()|",
      "|java+method:///org/sonar/server/qualityprofile/ws/SearchAction/writeLanguageFields(org.sonarqube.ws.QualityProfiles$SearchWsResponse$QualityProfile$Builder,org.sonar.server.qualityprofile.QProfile)|",
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$QualityProfile$Builder/setActiveRuleCount(long)|",
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$QualityProfile$Builder/clear()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfile/getRulesUpdatedAt()|",
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$QualityProfile$Builder/setIsDefault(boolean)|",
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse/newBuilder()|",
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$QualityProfile$Builder/setKey(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$QualityProfile$Builder/setRulesUpdatedAt(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/qualityprofile/ws/SearchData/getActiveRuleCount(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$QualityProfile$Builder/setProjectCount(long)|",
      "|java+method:///org/sonar/server/qualityprofile/ws/SearchData/getProjectCount(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/common/collect/Maps/uniqueIndex(java.lang.Iterable,com.google.common.base.Function)|",
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$QualityProfile$Builder/setName(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/ws/SearchAction/writeParentFields(org.sonarqube.ws.QualityProfiles$SearchWsResponse$QualityProfile$Builder,org.sonar.server.qualityprofile.QProfile,java.util.Map)|",
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$Builder/build()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonarqube/ws/QualityProfiles$SearchWsResponse$QualityProfile/newBuilder()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-ws:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/ws/ListAction/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonarqube/ws/Rules$ListResponse$Builder/build()|",
    "v1Body": [
      "|java+method:///org/sonarqube/ws/Rules$ListResponse$Builder/build()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/setMediaType(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Rules$ListResponse/writeTo(java.io.OutputStream)|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/output()|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectEnabledAndNonManual(org.sonar.db.DbSession,org.apache.ibatis.session.ResultHandler)|",
      "|java+method:///org/sonarqube/ws/Rules$ListResponse/newBuilder()|",
      "|java+method:///org/sonarqube/ws/Rules$ListResponse$Rule/newBuilder()|",
      "|java+method:///org/sonar/api/server/ws/Response/stream()|",
      "|java+constructor:///org/sonar/server/rule/ws/ListAction$1/ListAction$1(org.sonar.server.rule.ws.ListAction,org.sonarqube.ws.Rules$ListResponse$Rule$Builder,org.sonarqube.ws.Rules$ListResponse$Builder)|"
    ],
    "v2Body": [
      "|java+method:///org/sonarqube/ws/Rules$ListResponse$Builder/build()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectEnabled(org.sonar.db.DbSession,org.apache.ibatis.session.ResultHandler)|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/setMediaType(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Rules$ListResponse/writeTo(java.io.OutputStream)|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/output()|",
      "|java+method:///org/sonarqube/ws/Rules$ListResponse/newBuilder()|",
      "|java+method:///org/sonarqube/ws/Rules$ListResponse$Rule/newBuilder()|",
      "|java+method:///org/sonar/api/server/ws/Response/stream()|",
      "|java+constructor:///org/sonar/server/rule/ws/ListAction$1/ListAction$1(org.sonar.server.rule.ws.ListAction,org.sonarqube.ws.Rules$ListResponse$Rule$Builder,org.sonarqube.ws.Rules$ListResponse$Builder)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-ws:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/batch/ProjectAction/buildFileDataByPath(java.util.Map)|",
    "called": "|java+method:///org/sonarqube/ws/WsBatch$WsProjectResponse$FileDataByPath$Builder/build()|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonarqube/ws/WsBatch$WsProjectResponse$FileDataByPath$Builder/build()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/batch/ProjectAction/toFileDataResponse(org.sonar.batch.protocol.input.FileData)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/sonarqube/ws/WsBatch$WsProjectResponse$FileDataByPath$Builder/getMutableFileDataByPath()|",
      "|java+method:///org/sonarqube/ws/WsBatch$WsProjectResponse$FileDataByPath/newBuilder()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/sonar/server/batch/ProjectAction/toFileDataResponse(org.sonar.scanner.protocol.input.FileData)|",
      "|java+method:///org/sonarqube/ws/WsBatch$WsProjectResponse$FileDataByPath$Builder/build()|",
      "|java+method:///org/sonarqube/ws/WsBatch$WsProjectResponse$FileDataByPath$Builder/getMutableFileDataByPath()|",
      "|java+method:///org/sonarqube/ws/WsBatch$WsProjectResponse$FileDataByPath/newBuilder()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-ws:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileService/searchActivities(org.sonar.server.qualityprofile.QProfileActivityQuery,org.sonar.server.es.SearchOptions)|",
    "called": "|java+method:///org/elasticsearch/action/search/SearchResponse/getHits()|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivity/getLogin()|",
      "|java+constructor:///org/sonar/server/search/Result/Result(org.elasticsearch.action.search.SearchResponse)|",
      "|java+method:///org/sonar/server/search/Result/getHits()|",
      "|java+method:///org/sonar/server/activity/index/ActivityIndex/doSearch(org.sonar.server.activity.index.ActivityQuery,org.sonar.server.es.SearchOptions)|",
      "|java+method:///org/sonar/server/db/DbClient/deprecatedRuleDao()|",
      "|java+method:///org/elasticsearch/search/SearchHit/getSource()|",
      "|java+method:///org/sonar/db/user/UserDao/selectActiveUserByLogin(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/getNullableByKey(org.sonar.db.DbSession,java.io.Serializable)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivity/authorName(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivity/ruleKey()|",
      "|java+method:///org/elasticsearch/action/search/SearchResponse/getHits()|",
      "|java+method:///org/elasticsearch/search/SearchHits/getHits()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivity/ruleName(java.lang.String)|",
      "|java+constructor:///org/sonar/server/qualityprofile/QProfileActivity/QProfileActivity(java.util.Map)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/server/db/DbClient/userDao()|",
      "|java+method:///org/sonar/db/user/UserDto/getName()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getName()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/user/UserDao/selectActiveUserByLogin(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+constructor:///org/sonar/server/search/Result/Result(org.elasticsearch.action.search.SearchResponse)|",
      "|java+method:///org/sonar/server/search/Result/getHits()|",
      "|java+method:///org/sonar/server/activity/index/ActivityIndex/doSearch(org.sonar.server.activity.index.ActivityQuery,org.sonar.server.es.SearchOptions)|",
      "|java+method:///org/elasticsearch/search/SearchHit/getSource()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivity/authorName(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivity/ruleKey()|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectByKey(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivity/getLogin()|",
      "|java+method:///org/elasticsearch/action/search/SearchResponse/getHits()|",
      "|java+method:///org/elasticsearch/search/SearchHits/getHits()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivity/ruleName(java.lang.String)|",
      "|java+constructor:///org/sonar/server/qualityprofile/QProfileActivity/QProfileActivity(java.util.Map)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/db/DbClient/userDao()|",
      "|java+method:///org/sonar/db/user/UserDto/getName()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getName()|"
    ],
    "affectedLib": "org.elasticsearch:elasticsearch:1.7.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/index/RuleIndex/setSorting(org.sonar.server.rule.index.RuleQuery,org.elasticsearch.action.search.SearchRequestBuilder)|",
    "called": "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/addSort(org.elasticsearch.search.sort.SortBuilder)|",
    "v1Body": [
      "|java+method:///org/sonar/server/search/IndexField/sortField()|",
      "|java+method:///org/sonar/server/rule/index/RuleQuery/isAscendingSort()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/sonar/server/rule/index/RuleQuery/getQueryText()|",
      "|java+method:///org/elasticsearch/search/sort/SortBuilders/fieldSort(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/index/RuleQuery/getSortField()|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/addSort(org.elasticsearch.search.sort.SortBuilder)|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/addSort(java.lang.String,org.elasticsearch.search.sort.SortOrder)|",
      "|java+method:///org/elasticsearch/search/sort/FieldSortBuilder/order(org.elasticsearch.search.sort.SortOrder)|",
      "|java+method:///org/elasticsearch/search/sort/SortBuilders/scoreSort()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/rule/index/RuleIndex/appendSortSuffixIfNeeded(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/index/RuleQuery/isAscendingSort()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotEmpty(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/index/RuleQuery/getQueryText()|",
      "|java+method:///org/elasticsearch/search/sort/SortBuilders/fieldSort(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/index/RuleQuery/getSortField()|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/addSort(org.elasticsearch.search.sort.SortBuilder)|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/addSort(java.lang.String,org.elasticsearch.search.sort.SortOrder)|",
      "|java+method:///org/elasticsearch/search/sort/FieldSortBuilder/order(org.elasticsearch.search.sort.SortOrder)|",
      "|java+method:///org/elasticsearch/search/sort/SortBuilders/scoreSort()|"
    ],
    "affectedLib": "org.elasticsearch:elasticsearch:1.7.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/index/RuleIndex/terms(java.lang.String,java.lang.String,int)|",
    "called": "|java+method:///org/elasticsearch/index/query/QueryBuilders/matchAllQuery()|",
    "v1Body": [
      "|java+method:///org/elasticsearch/search/aggregations/Aggregations/get(java.lang.String)|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setQuery(org.elasticsearch.index.query.QueryBuilder)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/TermsBuilder/minDocCount(long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/index/RuleIndex/getClient()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/TermsBuilder/field(java.lang.String)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/Terms$Bucket/getKey()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/TermsBuilder/size(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/get()|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/addAggregation(org.elasticsearch.search.aggregations.AbstractAggregationBuilder)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/elasticsearch/action/search/SearchResponse/getAggregations()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/Terms/getBuckets()|",
      "|java+method:///org/elasticsearch/search/aggregations/AggregationBuilders/terms(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/index/RuleIndex/getIndexName()|",
      "|java+method:///org/sonar/server/search/SearchClient/prepareSearch(java.lang.String%5B%5D)|",
      "|java+method:///org/elasticsearch/index/query/QueryBuilders/matchAllQuery()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/TermsBuilder/include(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/elasticsearch/search/aggregations/Aggregations/get(java.lang.String)|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setQuery(org.elasticsearch.index.query.QueryBuilder)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/TermsBuilder/minDocCount(long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/index/RuleIndex/getClient()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/TermsBuilder/field(java.lang.String)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/Terms$Bucket/getKey()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/elasticsearch/search/aggregations/AggregationBuilders/terms(java.lang.String)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/TermsBuilder/size(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/get()|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/addAggregation(org.elasticsearch.search.aggregations.AbstractAggregationBuilder)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/elasticsearch/action/search/SearchResponse/getAggregations()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/Terms/getBuckets()|",
      "|java+method:///org/sonar/server/es/EsClient/prepareSearch(java.lang.String%5B%5D)|",
      "|java+method:///org/elasticsearch/index/query/QueryBuilders/matchAllQuery()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/TermsBuilder/include(java.lang.String)|"
    ],
    "affectedLib": "org.elasticsearch:elasticsearch:1.7.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/index/IssueIndex/createFilters(org.sonar.server.issue.IssueQuery)|",
    "called": "|java+method:///org/elasticsearch/index/query/FilterBuilders/missingFilter(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/issue/IssueQuery/checkAuthorization()|",
      "|java+method:///org/apache/commons/lang/BooleanUtils/isFalse(java.lang.Boolean)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/createAuthorizationFilter(boolean,java.lang.String,java.util.Set)|",
      "|java+method:///org/sonar/server/issue/IssueQuery/userLogin()|",
      "|java+method:///org/sonar/server/issue/IssueQuery/resolved()|",
      "|java+method:///org/elasticsearch/index/query/FilterBuilders/existsFilter(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/IssueQuery/severities()|",
      "|java+method:///org/sonar/server/issue/IssueQuery/issueKeys()|",
      "|java+method:///org/elasticsearch/index/query/FilterBuilders/missingFilter(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/addDatesFilter(java.util.Map,org.sonar.server.issue.IssueQuery)|",
      "|java+method:///org/sonar/server/issue/IssueQuery/reporters()|",
      "|java+method:///org/sonar/server/issue/IssueQuery/actionPlans()|",
      "|java+method:///org/apache/commons/lang/BooleanUtils/isTrue(java.lang.Boolean)|",
      "|java+method:///org/sonar/server/issue/IssueQuery/assigned()|",
      "|java+method:///org/sonar/server/issue/IssueQuery/rules()|",
      "|java+method:///org/sonar/server/issue/IssueQuery/languages()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/server/issue/IssueQuery/tags()|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/addComponentRelatedFilters(org.sonar.server.issue.IssueQuery,java.util.Map)|",
      "|java+method:///org/sonar/server/issue/IssueQuery/assignees()|",
      "|java+method:///org/sonar/server/issue/IssueQuery/planned()|",
      "|java+method:///org/sonar/server/issue/IssueQuery/resolutions()|",
      "|java+method:///org/sonar/server/issue/IssueQuery/userGroups()|",
      "|java+method:///org/sonar/server/issue/IssueQuery/authors()|",
      "|java+method:///org/sonar/server/issue/IssueQuery/statuses()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/createTermsFilter(java.lang.String,java.util.Collection)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/lang/BooleanUtils/isFalse(java.lang.Boolean)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/createAuthorizationFilter(boolean,java.lang.String,java.util.Set)|",
      "|java+method:///org/sonar/server/issue/IssueQuery/userLogin()|",
      "|java+method:///org/sonar/server/issue/IssueQuery/resolved()|",
      "|java+method:///org/elasticsearch/index/query/FilterBuilders/existsFilter(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/IssueQuery/severities()|",
      "|java+method:///org/sonar/server/issue/IssueQuery/assignees()|",
      "|java+method:///org/sonar/server/issue/IssueQuery/issueKeys()|",
      "|java+method:///org/elasticsearch/index/query/FilterBuilders/missingFilter(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/addDatesFilter(java.util.Map,org.sonar.server.issue.IssueQuery)|",
      "|java+method:///org/apache/commons/lang/BooleanUtils/isTrue(java.lang.Boolean)|",
      "|java+method:///org/sonar/server/issue/IssueQuery/assigned()|",
      "|java+method:///org/sonar/server/issue/IssueQuery/rules()|",
      "|java+method:///org/sonar/server/issue/IssueQuery/types()|",
      "|java+method:///org/sonar/server/issue/IssueQuery/checkAuthorization()|",
      "|java+method:///org/sonar/server/issue/IssueQuery/languages()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/server/issue/IssueQuery/tags()|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/addComponentRelatedFilters(org.sonar.server.issue.IssueQuery,java.util.Map)|",
      "|java+method:///org/sonar/server/issue/IssueQuery/resolutions()|",
      "|java+method:///org/sonar/server/issue/IssueQuery/userGroups()|",
      "|java+method:///org/sonar/server/issue/IssueQuery/authors()|",
      "|java+method:///org/sonar/server/issue/IssueQuery/statuses()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/createTermsFilter(java.lang.String,java.util.Collection)|"
    ],
    "affectedLib": "org.elasticsearch:elasticsearch:1.7.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/ws/ChangelogAction/searchActivities(org.sonar.server.qualityprofile.QProfileActivityQuery,org.sonar.server.es.SearchOptions)|",
    "called": "|java+method:///org/elasticsearch/action/search/SearchResponse/getHits()|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivity/getLogin()|",
      "|java+constructor:///org/sonar/server/search/Result/Result(org.elasticsearch.action.search.SearchResponse)|",
      "|java+method:///org/sonar/server/search/Result/getHits()|",
      "|java+method:///org/sonar/server/activity/index/ActivityIndex/doSearch(org.sonar.server.activity.index.ActivityQuery,org.sonar.server.es.SearchOptions)|",
      "|java+method:///org/sonar/server/db/DbClient/deprecatedRuleDao()|",
      "|java+method:///org/elasticsearch/search/SearchHit/getSource()|",
      "|java+method:///org/sonar/db/user/UserDao/selectActiveUserByLogin(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/getNullableByKey(org.sonar.db.DbSession,java.io.Serializable)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivity/authorName(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivity/ruleKey()|",
      "|java+method:///org/elasticsearch/action/search/SearchResponse/getHits()|",
      "|java+method:///org/elasticsearch/search/SearchHits/getHits()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivity/ruleName(java.lang.String)|",
      "|java+constructor:///org/sonar/server/qualityprofile/QProfileActivity/QProfileActivity(java.util.Map)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/server/db/DbClient/userDao()|",
      "|java+method:///org/sonar/db/user/UserDto/getName()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getName()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/user/UserDao/selectActiveUserByLogin(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+constructor:///org/sonar/server/search/Result/Result(org.elasticsearch.action.search.SearchResponse)|",
      "|java+method:///org/sonar/server/search/Result/getHits()|",
      "|java+method:///org/sonar/server/activity/index/ActivityIndex/doSearch(org.sonar.server.activity.index.ActivityQuery,org.sonar.server.es.SearchOptions)|",
      "|java+method:///org/elasticsearch/search/SearchHit/getSource()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivity/authorName(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivity/ruleKey()|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectByKey(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivity/getLogin()|",
      "|java+method:///org/elasticsearch/action/search/SearchResponse/getHits()|",
      "|java+method:///org/elasticsearch/search/SearchHits/getHits()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivity/ruleName(java.lang.String)|",
      "|java+constructor:///org/sonar/server/qualityprofile/QProfileActivity/QProfileActivity(java.util.Map)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/db/DbClient/userDao()|",
      "|java+method:///org/sonar/db/user/UserDto/getName()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getName()|"
    ],
    "affectedLib": "org.elasticsearch:elasticsearch:1.7.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/index/IssueIndex/createResolutionFacet(org.sonar.server.issue.IssueQuery,java.util.Map,org.elasticsearch.index.query.QueryBuilder)|",
    "called": "|java+method:///org/elasticsearch/search/aggregations/AggregationBuilders/missing(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/addDebtAggregationIfNeeded(org.sonar.server.issue.IssueQuery,org.elasticsearch.search.aggregations.AggregationBuilder)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/missing/MissingBuilder/field(java.lang.String)|",
      "|java+method:///org/sonar/server/search/StickyFacetBuilder/getStickyFacetFilter(java.lang.String%5B%5D)|",
      "|java+method:///org/sonar/server/search/StickyFacetBuilder/addSelectedItemsToFacet(java.lang.String,java.lang.String,org.elasticsearch.search.aggregations.bucket.filter.FilterAggregationBuilder,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/remove(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/global/GlobalBuilder/subAggregation(org.elasticsearch.search.aggregations.AbstractAggregationBuilder)|",
      "|java+method:///org/elasticsearch/search/aggregations/AggregationBuilders/global(java.lang.String)|",
      "|java+method:///org/sonar/server/search/StickyFacetBuilder/buildTopFacetAggregation(java.lang.String,java.lang.String,org.elasticsearch.index.query.BoolFilterBuilder,int)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap(java.util.Map)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/filter/FilterAggregationBuilder/subAggregation(org.elasticsearch.search.aggregations.AbstractAggregationBuilder)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/newStickyFacetBuilder(org.sonar.server.issue.IssueQuery,java.util.Map,org.elasticsearch.index.query.QueryBuilder)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/elasticsearch/search/aggregations/AggregationBuilders/missing(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/missing/MissingBuilder/field(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/addEffortAggregationIfNeeded(org.sonar.server.issue.IssueQuery,org.elasticsearch.search.aggregations.AggregationBuilder)|",
      "|java+method:///org/sonar/server/search/StickyFacetBuilder/getStickyFacetFilter(java.lang.String%5B%5D)|",
      "|java+method:///org/sonar/server/search/StickyFacetBuilder/addSelectedItemsToFacet(java.lang.String,java.lang.String,org.elasticsearch.search.aggregations.bucket.filter.FilterAggregationBuilder,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/remove(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/global/GlobalBuilder/subAggregation(org.elasticsearch.search.aggregations.AbstractAggregationBuilder)|",
      "|java+method:///org/elasticsearch/search/aggregations/AggregationBuilders/global(java.lang.String)|",
      "|java+method:///org/sonar/server/search/StickyFacetBuilder/buildTopFacetAggregation(java.lang.String,java.lang.String,org.elasticsearch.index.query.BoolFilterBuilder,int)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap(java.util.Map)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/filter/FilterAggregationBuilder/subAggregation(org.elasticsearch.search.aggregations.AbstractAggregationBuilder)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/newStickyFacetBuilder(org.sonar.server.issue.IssueQuery,java.util.Map,org.elasticsearch.index.query.QueryBuilder)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/elasticsearch/search/aggregations/AggregationBuilders/missing(java.lang.String)|"
    ],
    "affectedLib": "org.elasticsearch:elasticsearch:1.7.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/index/IssueIndex/getCreatedAtFacet(org.sonar.server.issue.IssueQuery,java.util.Map,org.elasticsearch.index.query.QueryBuilder)|",
    "called": "|java+method:///org/elasticsearch/search/aggregations/AggregationBuilders/dateHistogram(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramBuilder/interval(org.elasticsearch.search.aggregations.bucket.histogram.DateHistogram$Interval)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/addDebtAggregationIfNeeded(org.sonar.server.issue.IssueQuery,org.elasticsearch.search.aggregations.AggregationBuilder)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/getMinCreatedAt(java.util.Map,org.elasticsearch.index.query.QueryBuilder)|",
      "|java+method:///org/sonar/server/issue/IssueQuery/createdBefore()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramBuilder/postZone(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/System2/getDefaultTimeZone()|",
      "|java+method:///java/util/TimeZone/getID()|",
      "|java+constructor:///org/joda/time/Duration/Duration(long,long)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramBuilder/format(java.lang.String)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramBuilder/minDocCount(long)|",
      "|java+method:///org/sonar/server/issue/IssueQuery/createdAfter()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramBuilder/field(java.lang.String)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramBuilder/extendedBounds(java.lang.Long,java.lang.Long)|",
      "|java+method:///org/elasticsearch/search/aggregations/AggregationBuilders/dateHistogram(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///java/util/Date/getTime()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramBuilder/timeZone(java.lang.String)|",
      "|java+method:///org/joda/time/Duration/isShorterThan(org.joda.time.ReadableDuration)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramBuilder/interval(org.elasticsearch.search.aggregations.bucket.histogram.DateHistogram$Interval)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/getMinCreatedAt(java.util.Map,org.elasticsearch.index.query.QueryBuilder)|",
      "|java+method:///org/sonar/server/issue/IssueQuery/createdBefore()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramBuilder/postZone(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/addEffortAggregationIfNeeded(org.sonar.server.issue.IssueQuery,org.elasticsearch.search.aggregations.AggregationBuilder)|",
      "|java+method:///org/sonar/api/utils/System2/getDefaultTimeZone()|",
      "|java+method:///java/util/TimeZone/getID()|",
      "|java+constructor:///org/joda/time/Duration/Duration(long,long)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramBuilder/format(java.lang.String)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramBuilder/minDocCount(long)|",
      "|java+method:///org/sonar/server/issue/IssueQuery/createdAfter()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramBuilder/field(java.lang.String)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramBuilder/extendedBounds(java.lang.Long,java.lang.Long)|",
      "|java+method:///org/elasticsearch/search/aggregations/AggregationBuilders/dateHistogram(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///java/util/Date/getTime()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramBuilder/timeZone(java.lang.String)|",
      "|java+method:///org/joda/time/Duration/isShorterThan(org.joda.time.ReadableDuration)|"
    ],
    "affectedLib": "org.elasticsearch:elasticsearch:1.7.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/index/IssueIndex/configureStickyFacets(org.sonar.server.issue.IssueQuery,org.sonar.server.es.SearchOptions,java.util.Map,org.elasticsearch.index.query.QueryBuilder,org.elasticsearch.action.search.SearchRequestBuilder)|",
    "called": "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/addAggregation(org.elasticsearch.search.aggregations.AbstractAggregationBuilder)|",
    "v1Body": [
      "|java+method:///org/sonar/server/issue/IssueQuery/facetMode()|",
      "|java+method:///org/sonar/server/issue/IssueQuery/languages()|",
      "|java+method:///org/sonar/server/issue/IssueQuery/fileUuids()|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/createAssigneesFacet(org.sonar.server.issue.IssueQuery,java.util.Map,org.elasticsearch.index.query.QueryBuilder)|",
      "|java+method:///java/util/Collection/toArray()|",
      "|java+method:///org/sonar/server/issue/IssueQuery/tags()|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/createResolutionFacet(org.sonar.server.issue.IssueQuery,java.util.Map,org.elasticsearch.index.query.QueryBuilder)|",
      "|java+method:///java/util/Collection/isEmpty()|",
      "|java+method:///org/sonar/server/issue/IssueQuery/authors()|",
      "|java+method:///org/sonar/server/issue/IssueQuery/moduleUuids()|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/createActionPlansFacet(org.sonar.server.issue.IssueQuery,java.util.Map,org.elasticsearch.index.query.QueryBuilder)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/addAssignedToMeFacetIfNeeded(org.elasticsearch.action.search.SearchRequestBuilder,org.sonar.server.es.SearchOptions,org.sonar.server.issue.IssueQuery,java.util.Map,org.elasticsearch.index.query.QueryBuilder)|",
      "|java+method:///org/sonar/server/search/StickyFacetBuilder/buildStickyFacet(java.lang.String,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Collection/contains(java.lang.Object)|",
      "|java+method:///org/sonar/server/issue/IssueQuery/rules()|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/addSimpleStickyFacetIfNeeded(org.sonar.server.es.SearchOptions,org.sonar.server.search.StickyFacetBuilder,org.elasticsearch.action.search.SearchRequestBuilder,java.lang.String,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/addAggregation(org.elasticsearch.search.aggregations.AbstractAggregationBuilder)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/newStickyFacetBuilder(org.sonar.server.issue.IssueQuery,java.util.Map,org.elasticsearch.index.query.QueryBuilder)|",
      "|java+method:///org/sonar/server/es/SearchOptions/getFacets()|",
      "|java+method:///org/sonar/server/issue/IssueQuery/projectUuids()|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/getCreatedAtFacet(org.sonar.server.issue.IssueQuery,java.util.Map,org.elasticsearch.index.query.QueryBuilder)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/sonar/server/issue/IssueQuery/directories()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/issue/index/IssueIndex/hasQueryEffortFacet(org.sonar.server.issue.IssueQuery)|",
      "|java+method:///org/sonar/server/issue/IssueQuery/languages()|",
      "|java+method:///org/sonar/server/issue/IssueQuery/fileUuids()|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/createAssigneesFacet(org.sonar.server.issue.IssueQuery,java.util.Map,org.elasticsearch.index.query.QueryBuilder)|",
      "|java+method:///java/util/Collection/toArray()|",
      "|java+method:///org/sonar/server/issue/IssueQuery/tags()|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/createResolutionFacet(org.sonar.server.issue.IssueQuery,java.util.Map,org.elasticsearch.index.query.QueryBuilder)|",
      "|java+method:///java/util/Collection/isEmpty()|",
      "|java+method:///org/sonar/server/issue/IssueQuery/authors()|",
      "|java+method:///org/sonar/server/issue/IssueQuery/directories()|",
      "|java+method:///org/sonar/server/issue/IssueQuery/moduleUuids()|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/addAssignedToMeFacetIfNeeded(org.elasticsearch.action.search.SearchRequestBuilder,org.sonar.server.es.SearchOptions,org.sonar.server.issue.IssueQuery,java.util.Map,org.elasticsearch.index.query.QueryBuilder)|",
      "|java+method:///org/sonar/server/search/StickyFacetBuilder/buildStickyFacet(java.lang.String,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Collection/contains(java.lang.Object)|",
      "|java+method:///org/sonar/server/issue/IssueQuery/rules()|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/addSimpleStickyFacetIfNeeded(org.sonar.server.es.SearchOptions,org.sonar.server.search.StickyFacetBuilder,org.elasticsearch.action.search.SearchRequestBuilder,java.lang.String,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/issue/IssueQuery/types()|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/addAggregation(org.elasticsearch.search.aggregations.AbstractAggregationBuilder)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/newStickyFacetBuilder(org.sonar.server.issue.IssueQuery,java.util.Map,org.elasticsearch.index.query.QueryBuilder)|",
      "|java+method:///org/sonar/server/es/SearchOptions/getFacets()|",
      "|java+method:///org/sonar/server/issue/IssueQuery/projectUuids()|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/getCreatedAtFacet(org.sonar.server.issue.IssueQuery,java.util.Map,org.elasticsearch.index.query.QueryBuilder)|"
    ],
    "affectedLib": "org.elasticsearch:elasticsearch:1.7.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/es/EsClient/prepareGet(java.lang.String,java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/elasticsearch/action/get/GetRequestBuilder/setId(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/search/SearchClient/nativeClient()|",
      "|java+method:///org/elasticsearch/action/get/GetRequestBuilder/setType(java.lang.String)|",
      "|java+method:///org/elasticsearch/action/get/GetRequestBuilder/setId(java.lang.String)|",
      "|java+method:///org/sonar/server/es/request/ProxyGetRequestBuilder/setIndex(java.lang.String)|",
      "|java+constructor:///org/sonar/server/es/request/ProxyGetRequestBuilder/ProxyGetRequestBuilder(org.elasticsearch.client.Client)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/es/EsClient/nativeClient()|",
      "|java+method:///org/elasticsearch/action/get/GetRequestBuilder/setType(java.lang.String)|",
      "|java+method:///org/elasticsearch/action/get/GetRequestBuilder/setId(java.lang.String)|",
      "|java+method:///org/sonar/server/es/request/ProxyGetRequestBuilder/setIndex(java.lang.String)|",
      "|java+constructor:///org/sonar/server/es/request/ProxyGetRequestBuilder/ProxyGetRequestBuilder(org.elasticsearch.client.Client)|"
    ],
    "affectedLib": "org.elasticsearch:elasticsearch:1.7.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/platform/monitoring/EsMonitor/nodeAttributes()|",
    "called": "|java+method:///org/elasticsearch/indices/NodeIndicesStats/getQueryCache()|",
    "v1Body": [
      "|java+method:///org/elasticsearch/action/admin/cluster/node/stats/NodeStats/getFs()|",
      "|java+method:///org/elasticsearch/cluster/node/DiscoveryNode/isMasterNode()|",
      "|java+method:///org/elasticsearch/action/admin/cluster/node/stats/NodeStats/getJvm()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/apache/commons/io/FileUtils/byteCountToDisplaySize(long)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/elasticsearch/action/admin/cluster/node/stats/NodeStats/getBreaker()|",
      "|java+method:///org/elasticsearch/indices/breaker/AllCircuitBreakerStats/getStats(org.elasticsearch.common.breaker.CircuitBreaker$Name)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/elasticsearch/index/store/StoreStats/getSizeInBytes()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/elasticsearch/action/admin/cluster/node/stats/NodeStats/getNode()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/elasticsearch/indices/breaker/CircuitBreakerStats/getEstimated()|",
      "|java+method:///org/elasticsearch/monitor/jvm/JvmStats/getThreads()|",
      "|java+method:///org/elasticsearch/indices/NodeIndicesStats/getFilterCache()|",
      "|java+method:///org/elasticsearch/index/cache/query/QueryCacheStats/getMemorySizeInBytes()|",
      "|java+method:///org/elasticsearch/action/admin/cluster/node/stats/NodesStatsRequestBuilder/get()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/elasticsearch/action/admin/cluster/node/stats/NodesStatsResponse/getNodesMap()|",
      "|java+method:///org/elasticsearch/monitor/jvm/JvmStats$Mem/getHeapUsedPrecent()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/sonar/server/platform/monitoring/EsMonitor/formatPercent(long)|",
      "|java+method:///org/elasticsearch/action/admin/cluster/node/stats/NodeStats/getIndices()|",
      "|java+method:///java/util/LinkedHashMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/elasticsearch/monitor/fs/FsStats$Info/getAvailable()|",
      "|java+method:///org/elasticsearch/monitor/jvm/JvmStats/getMem()|",
      "|java+method:///org/elasticsearch/monitor/process/ProcessStats/getOpenFileDescriptors()|",
      "|java+method:///org/elasticsearch/action/admin/cluster/node/stats/NodeStats/getProcess()|",
      "|java+method:///org/elasticsearch/index/cache/filter/FilterCacheStats/getMemorySizeInBytes()|",
      "|java+method:///org/elasticsearch/index/cache/id/IdCacheStats/getMemorySizeInBytes()|",
      "|java+method:///org/elasticsearch/cluster/node/DiscoveryNode/getAddress()|",
      "|java+method:///org/elasticsearch/action/admin/cluster/node/stats/NodesStatsRequestBuilder/all()|",
      "|java+method:///org/elasticsearch/indices/NodeIndicesStats/getStore()|",
      "|java+method:///org/elasticsearch/monitor/fs/FsStats/getTotal()|",
      "|java+method:///org/elasticsearch/monitor/jvm/JvmStats$Mem/getHeapUsed()|",
      "|java+method:///org/elasticsearch/index/fielddata/FieldDataStats/getMemorySizeInBytes()|",
      "|java+method:///org/elasticsearch/indices/breaker/CircuitBreakerStats/getLimit()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/elasticsearch/indices/NodeIndicesStats/getFieldData()|",
      "|java+method:///org/elasticsearch/indices/NodeIndicesStats/getQueryCache()|",
      "|java+method:///org/elasticsearch/monitor/jvm/JvmStats$Mem/getNonHeapUsed()|",
      "|java+method:///org/elasticsearch/common/unit/ByteSizeValue/bytes()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/elasticsearch/monitor/jvm/JvmStats$Threads/count()|",
      "|java+method:///org/elasticsearch/indices/NodeIndicesStats/getIdCache()|",
      "|java+constructor:///java/util/LinkedHashMap/LinkedHashMap()|",
      "|java+method:///org/sonar/server/es/EsClient/prepareNodesStats(java.lang.String%5B%5D)|",
      "|java+method:///org/elasticsearch/monitor/jvm/JvmStats$Mem/getHeapMax()|"
    ],
    "v2Body": [
      "|java+method:///org/elasticsearch/action/admin/cluster/node/stats/NodeStats/getFs()|",
      "|java+method:///org/elasticsearch/cluster/node/DiscoveryNode/isMasterNode()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/apache/commons/io/FileUtils/byteCountToDisplaySize(long)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/elasticsearch/monitor/jvm/JvmStats$Mem/getHeapUsedPrecent()|",
      "|java+method:///org/elasticsearch/action/admin/cluster/node/stats/NodeStats/getBreaker()|",
      "|java+method:///org/elasticsearch/indices/breaker/AllCircuitBreakerStats/getStats(org.elasticsearch.common.breaker.CircuitBreaker$Name)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/elasticsearch/index/store/StoreStats/getSizeInBytes()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/elasticsearch/action/admin/cluster/node/stats/NodeStats/getNode()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/elasticsearch/indices/breaker/CircuitBreakerStats/getEstimated()|",
      "|java+method:///org/elasticsearch/monitor/jvm/JvmStats/getThreads()|",
      "|java+method:///org/elasticsearch/indices/NodeIndicesStats/getFilterCache()|",
      "|java+method:///org/elasticsearch/index/cache/query/QueryCacheStats/getMemorySizeInBytes()|",
      "|java+method:///org/elasticsearch/cluster/node/DiscoveryNode/getName()|",
      "|java+method:///org/elasticsearch/action/admin/cluster/node/stats/NodeStats/getJvm()|",
      "|java+method:///org/elasticsearch/action/admin/cluster/node/stats/NodesStatsRequestBuilder/get()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/elasticsearch/action/admin/cluster/node/stats/NodesStatsResponse/getNodesMap()|",
      "|java+method:///org/sonar/server/platform/monitoring/EsMonitor/formatPercent(long)|",
      "|java+method:///org/elasticsearch/action/admin/cluster/node/stats/NodeStats/getIndices()|",
      "|java+method:///java/util/LinkedHashMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/elasticsearch/monitor/fs/FsStats$Info/getAvailable()|",
      "|java+method:///org/elasticsearch/monitor/jvm/JvmStats/getMem()|",
      "|java+method:///org/elasticsearch/monitor/process/ProcessStats/getOpenFileDescriptors()|",
      "|java+method:///org/elasticsearch/action/admin/cluster/node/stats/NodeStats/getProcess()|",
      "|java+method:///org/elasticsearch/index/cache/filter/FilterCacheStats/getMemorySizeInBytes()|",
      "|java+method:///org/elasticsearch/index/cache/id/IdCacheStats/getMemorySizeInBytes()|",
      "|java+method:///org/elasticsearch/cluster/node/DiscoveryNode/getAddress()|",
      "|java+method:///org/elasticsearch/action/admin/cluster/node/stats/NodesStatsRequestBuilder/all()|",
      "|java+method:///org/elasticsearch/indices/NodeIndicesStats/getStore()|",
      "|java+method:///org/elasticsearch/monitor/fs/FsStats/getTotal()|",
      "|java+method:///org/elasticsearch/monitor/jvm/JvmStats$Mem/getHeapUsed()|",
      "|java+method:///org/elasticsearch/index/fielddata/FieldDataStats/getMemorySizeInBytes()|",
      "|java+method:///org/elasticsearch/indices/breaker/CircuitBreakerStats/getLimit()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/elasticsearch/indices/NodeIndicesStats/getFieldData()|",
      "|java+method:///org/elasticsearch/indices/NodeIndicesStats/getQueryCache()|",
      "|java+method:///org/elasticsearch/monitor/jvm/JvmStats$Mem/getNonHeapUsed()|",
      "|java+method:///org/elasticsearch/common/unit/ByteSizeValue/bytes()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/elasticsearch/monitor/jvm/JvmStats$Threads/count()|",
      "|java+method:///org/elasticsearch/indices/NodeIndicesStats/getIdCache()|",
      "|java+constructor:///java/util/LinkedHashMap/LinkedHashMap()|",
      "|java+method:///org/sonar/server/es/EsClient/prepareNodesStats(java.lang.String%5B%5D)|",
      "|java+method:///org/elasticsearch/monitor/jvm/JvmStats$Mem/getHeapMax()|"
    ],
    "affectedLib": "org.elasticsearch:elasticsearch:1.7.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndex/findByProfile(java.lang.String)|",
    "called": "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setSize(int)|",
    "v1Body": [
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/get()|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setQuery(org.elasticsearch.index.query.QueryBuilder)|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setSearchType(org.elasticsearch.action.search.SearchType)|",
      "|java+method:///org/elasticsearch/index/query/BoolFilterBuilder/must(org.elasticsearch.index.query.FilterBuilder)|",
      "|java+method:///org/elasticsearch/common/unit/TimeValue/timeValueMinutes(long)|",
      "|java+method:///org/sonar/server/search/IndexDefinition/getIndexType()|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndex/getIndexName()|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndex/scroll(java.lang.String)|",
      "|java+method:///org/elasticsearch/index/query/QueryBuilders/filteredQuery(org.elasticsearch.index.query.QueryBuilder,org.elasticsearch.index.query.FilterBuilder)|",
      "|java+method:///org/elasticsearch/index/query/FilterBuilders/hasParentFilter(java.lang.String,org.elasticsearch.index.query.FilterBuilder)|",
      "|java+method:///org/elasticsearch/action/search/SearchResponse/getScrollId()|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setSize(int)|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndex/getParentType()|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setRouting(java.lang.String)|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setScroll(org.elasticsearch.common.unit.TimeValue)|",
      "|java+method:///org/elasticsearch/index/query/BoolFilterBuilder/mustNot(org.elasticsearch.index.query.FilterBuilder)|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndex/getClient()|",
      "|java+method:///org/sonar/server/search/SearchClient/prepareSearch(java.lang.String%5B%5D)|",
      "|java+method:///org/elasticsearch/index/query/QueryBuilders/matchAllQuery()|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setTypes(java.lang.String%5B%5D)|",
      "|java+method:///org/elasticsearch/index/query/FilterBuilders/termFilter(java.lang.String,java.lang.String)|",
      "|java+method:///org/elasticsearch/index/query/FilterBuilders/boolFilter()|",
      "|java+method:///org/sonar/api/rule/RuleStatus/name()|",
      "|java+method:///org/sonar/server/search/IndexField/field()|"
    ],
    "v2Body": [
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/get()|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setQuery(org.elasticsearch.index.query.QueryBuilder)|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setSearchType(org.elasticsearch.action.search.SearchType)|",
      "|java+method:///org/elasticsearch/index/query/BoolFilterBuilder/must(org.elasticsearch.index.query.FilterBuilder)|",
      "|java+method:///org/elasticsearch/common/unit/TimeValue/timeValueMinutes(long)|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setSize(int)|",
      "|java+method:///org/elasticsearch/index/query/QueryBuilders/filteredQuery(org.elasticsearch.index.query.QueryBuilder,org.elasticsearch.index.query.FilterBuilder)|",
      "|java+method:///org/elasticsearch/index/query/FilterBuilders/hasParentFilter(java.lang.String,org.elasticsearch.index.query.FilterBuilder)|",
      "|java+method:///org/elasticsearch/action/search/SearchResponse/getScrollId()|",
      "|java+method:///org/sonar/api/rule/RuleStatus/name()|",
      "|java+method:///org/sonar/server/es/EsUtils/scroll(org.sonar.server.es.EsClient,java.lang.String,com.google.common.base.Function)|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setScroll(org.elasticsearch.common.unit.TimeValue)|",
      "|java+method:///org/elasticsearch/index/query/BoolFilterBuilder/mustNot(org.elasticsearch.index.query.FilterBuilder)|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndex/getClient()|",
      "|java+method:///org/sonar/server/es/EsClient/prepareSearch(java.lang.String%5B%5D)|",
      "|java+method:///org/elasticsearch/index/query/QueryBuilders/matchAllQuery()|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setTypes(java.lang.String%5B%5D)|",
      "|java+method:///org/elasticsearch/index/query/FilterBuilders/termFilter(java.lang.String,java.lang.String)|",
      "|java+method:///org/elasticsearch/index/query/FilterBuilders/boolFilter()|"
    ],
    "affectedLib": "org.elasticsearch:elasticsearch:1.7.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/index/IssueIndex/createAssigneesFacet(org.sonar.server.issue.IssueQuery,java.util.Map,org.elasticsearch.index.query.QueryBuilder)|",
    "called": "|java+method:///org/elasticsearch/search/aggregations/AggregationBuilders/missing(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/util/Collection/toArray()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Collection/isEmpty()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/missing/MissingBuilder/field(java.lang.String)|",
      "|java+method:///org/sonar/server/search/StickyFacetBuilder/getStickyFacetFilter(java.lang.String%5B%5D)|",
      "|java+method:///org/sonar/server/search/StickyFacetBuilder/addSelectedItemsToFacet(java.lang.String,java.lang.String,org.elasticsearch.search.aggregations.bucket.filter.FilterAggregationBuilder,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/escapeValuesForFacetInclusion(java.util.Collection)|",
      "|java+method:///java/util/Map/remove(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/global/GlobalBuilder/subAggregation(org.elasticsearch.search.aggregations.AbstractAggregationBuilder)|",
      "|java+method:///org/elasticsearch/search/aggregations/AggregationBuilders/global(java.lang.String)|",
      "|java+method:///org/sonar/server/search/StickyFacetBuilder/buildTopFacetAggregation(java.lang.String,java.lang.String,org.elasticsearch.index.query.BoolFilterBuilder,int)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap(java.util.Map)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/filter/FilterAggregationBuilder/subAggregation(org.elasticsearch.search.aggregations.AbstractAggregationBuilder)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/newStickyFacetBuilder(org.sonar.server.issue.IssueQuery,java.util.Map,org.elasticsearch.index.query.QueryBuilder)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/addDebtAggregationIfNeeded(org.sonar.server.issue.IssueQuery,org.elasticsearch.search.aggregations.AggregationBuilder)|",
      "|java+method:///org/sonar/server/issue/IssueQuery/assignees()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/elasticsearch/search/aggregations/AggregationBuilders/missing(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Collection/toArray()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/IssueQuery/assignees()|",
      "|java+method:///java/util/Collection/isEmpty()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/missing/MissingBuilder/field(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/addEffortAggregationIfNeeded(org.sonar.server.issue.IssueQuery,org.elasticsearch.search.aggregations.AggregationBuilder)|",
      "|java+method:///org/sonar/server/search/StickyFacetBuilder/getStickyFacetFilter(java.lang.String%5B%5D)|",
      "|java+method:///org/sonar/server/search/StickyFacetBuilder/addSelectedItemsToFacet(java.lang.String,java.lang.String,org.elasticsearch.search.aggregations.bucket.filter.FilterAggregationBuilder,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/escapeValuesForFacetInclusion(java.util.Collection)|",
      "|java+method:///java/util/Map/remove(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/global/GlobalBuilder/subAggregation(org.elasticsearch.search.aggregations.AbstractAggregationBuilder)|",
      "|java+method:///org/elasticsearch/search/aggregations/AggregationBuilders/global(java.lang.String)|",
      "|java+method:///org/sonar/server/search/StickyFacetBuilder/buildTopFacetAggregation(java.lang.String,java.lang.String,org.elasticsearch.index.query.BoolFilterBuilder,int)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap(java.util.Map)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/filter/FilterAggregationBuilder/subAggregation(org.elasticsearch.search.aggregations.AbstractAggregationBuilder)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/newStickyFacetBuilder(org.sonar.server.issue.IssueQuery,java.util.Map,org.elasticsearch.index.query.QueryBuilder)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/elasticsearch/search/aggregations/AggregationBuilders/missing(java.lang.String)|"
    ],
    "affectedLib": "org.elasticsearch:elasticsearch:1.7.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndex/getStatsByProfileKeys(java.util.List)|",
    "called": "|java+method:///org/elasticsearch/search/aggregations/AggregationBuilders/count(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/elasticsearch/search/aggregations/Aggregations/get(java.lang.String)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/TermsBuilder/field(java.lang.String)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/Terms$Bucket/getKey()|",
      "|java+method:///org/elasticsearch/index/query/QueryBuilders/filteredQuery(org.elasticsearch.index.query.QueryBuilder,org.elasticsearch.index.query.FilterBuilder)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/Terms$Bucket/getAggregations()|",
      "|java+method:///org/elasticsearch/search/aggregations/AggregationBuilders/terms(java.lang.String)|",
      "|java+method:///org/elasticsearch/index/query/QueryBuilders/termsQuery(java.lang.String,java.util.Collection)|",
      "|java+method:///org/sonar/server/search/SearchClient/prepareSearch(java.lang.String%5B%5D)|",
      "|java+method:///org/elasticsearch/index/query/FilterBuilders/hasParentFilter(java.lang.String,org.elasticsearch.index.query.FilterBuilder)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/TermsBuilder/size(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/elasticsearch/search/aggregations/AggregationBuilders/count(java.lang.String)|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/get()|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/addAggregation(org.elasticsearch.search.aggregations.AbstractAggregationBuilder)|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setQuery(org.elasticsearch.index.query.QueryBuilder)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/elasticsearch/action/search/SearchResponse/getAggregations()|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setSize(int)|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndex/getParentType()|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndex/processAggregations(org.elasticsearch.search.aggregations.Aggregations)|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndex/getIndexName()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/Terms/getBuckets()|",
      "|java+method:///org/elasticsearch/index/query/BoolFilterBuilder/mustNot(org.elasticsearch.index.query.FilterBuilder)|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndex/getClient()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/TermsBuilder/subAggregation(org.elasticsearch.search.aggregations.AbstractAggregationBuilder)|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setTypes(java.lang.String%5B%5D)|",
      "|java+method:///org/elasticsearch/index/query/FilterBuilders/termFilter(java.lang.String,java.lang.String)|",
      "|java+method:///org/elasticsearch/index/query/FilterBuilders/boolFilter()|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndex/getIndexType()|",
      "|java+method:///org/sonar/api/rule/RuleStatus/name()|",
      "|java+method:///org/sonar/server/search/IndexField/field()|"
    ],
    "v2Body": [
      "|java+method:///org/elasticsearch/search/aggregations/Aggregations/get(java.lang.String)|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setSize(int)|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndex/processAggregations(org.elasticsearch.search.aggregations.Aggregations)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/TermsBuilder/field(java.lang.String)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/Terms$Bucket/getKey()|",
      "|java+method:///org/elasticsearch/index/query/QueryBuilders/filteredQuery(org.elasticsearch.index.query.QueryBuilder,org.elasticsearch.index.query.FilterBuilder)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/Terms$Bucket/getAggregations()|",
      "|java+method:///org/elasticsearch/search/aggregations/AggregationBuilders/terms(java.lang.String)|",
      "|java+method:///org/elasticsearch/index/query/QueryBuilders/termsQuery(java.lang.String,java.util.Collection)|",
      "|java+method:///org/sonar/server/es/EsClient/prepareSearch(java.lang.String%5B%5D)|",
      "|java+method:///org/elasticsearch/index/query/FilterBuilders/hasParentFilter(java.lang.String,org.elasticsearch.index.query.FilterBuilder)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/TermsBuilder/size(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/elasticsearch/search/aggregations/AggregationBuilders/count(java.lang.String)|",
      "|java+method:///org/sonar/api/rule/RuleStatus/name()|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/get()|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/addAggregation(org.elasticsearch.search.aggregations.AbstractAggregationBuilder)|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setQuery(org.elasticsearch.index.query.QueryBuilder)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/elasticsearch/action/search/SearchResponse/getAggregations()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/Terms/getBuckets()|",
      "|java+method:///org/elasticsearch/index/query/BoolFilterBuilder/mustNot(org.elasticsearch.index.query.FilterBuilder)|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndex/getClient()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/TermsBuilder/subAggregation(org.elasticsearch.search.aggregations.AbstractAggregationBuilder)|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setTypes(java.lang.String%5B%5D)|",
      "|java+method:///org/elasticsearch/index/query/FilterBuilders/termFilter(java.lang.String,java.lang.String)|",
      "|java+method:///org/elasticsearch/index/query/FilterBuilders/boolFilter()|"
    ],
    "affectedLib": "org.elasticsearch:elasticsearch:1.7.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndex/countAllByQualityProfileKey()|",
    "called": "|java+method:///org/elasticsearch/index/query/FilterBuilders/termFilter(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndex/countByField(org.sonar.server.search.IndexField,org.elasticsearch.index.query.FilterBuilder)|",
      "|java+method:///org/sonar/server/search/IndexDefinition/getIndexType()|",
      "|java+method:///org/elasticsearch/index/query/FilterBuilders/termFilter(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/server/search/IndexField/field()|",
      "|java+method:///org/elasticsearch/index/query/FilterBuilders/notFilter(org.elasticsearch.index.query.FilterBuilder)|",
      "|java+method:///org/elasticsearch/index/query/FilterBuilders/hasParentFilter(java.lang.String,org.elasticsearch.index.query.FilterBuilder)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndex/countByField(java.lang.String,org.elasticsearch.index.query.FilterBuilder)|",
      "|java+method:///org/elasticsearch/index/query/FilterBuilders/termFilter(java.lang.String,java.lang.String)|",
      "|java+method:///org/elasticsearch/index/query/FilterBuilders/notFilter(org.elasticsearch.index.query.FilterBuilder)|",
      "|java+method:///org/elasticsearch/index/query/FilterBuilders/hasParentFilter(java.lang.String,org.elasticsearch.index.query.FilterBuilder)|"
    ],
    "affectedLib": "org.elasticsearch:elasticsearch:1.7.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/es/EsClient/prepareIndex(java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/elasticsearch/action/index/IndexRequestBuilder/setType(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/elasticsearch/action/index/IndexRequestBuilder/setType(java.lang.String)|",
      "|java+method:///org/sonar/server/search/SearchClient/nativeClient()|",
      "|java+method:///org/sonar/server/es/request/ProxyIndexRequestBuilder/setIndex(java.lang.String)|",
      "|java+constructor:///org/sonar/server/es/request/ProxyIndexRequestBuilder/ProxyIndexRequestBuilder(org.elasticsearch.client.Client)|"
    ],
    "v2Body": [
      "|java+method:///org/elasticsearch/action/index/IndexRequestBuilder/setType(java.lang.String)|",
      "|java+method:///org/sonar/server/es/EsClient/nativeClient()|",
      "|java+method:///org/sonar/server/es/request/ProxyIndexRequestBuilder/setIndex(java.lang.String)|",
      "|java+constructor:///org/sonar/server/es/request/ProxyIndexRequestBuilder/ProxyIndexRequestBuilder(org.elasticsearch.client.Client)|"
    ],
    "affectedLib": "org.elasticsearch:elasticsearch:1.7.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndex/findByRule(org.sonar.api.rule.RuleKey)|",
    "called": "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setSize(int)|",
    "v1Body": [
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/get()|",
      "|java+method:///org/elasticsearch/index/query/QueryBuilders/hasParentQuery(java.lang.String,org.elasticsearch.index.query.QueryBuilder)|",
      "|java+method:///org/elasticsearch/search/SearchHits/iterator()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setRouting(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndex/getIndexName()|",
      "|java+method:///org/elasticsearch/index/query/IdsQueryBuilder/addIds(java.lang.String%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndex/getClient()|",
      "|java+method:///org/elasticsearch/index/query/QueryBuilders/idsQuery(java.lang.String%5B%5D)|",
      "|java+method:///org/elasticsearch/action/search/SearchResponse/getHits()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/server/search/SearchClient/prepareSearch(java.lang.String%5B%5D)|",
      "|java+method:///org/sonar/api/rule/RuleKey/toString()|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setQuery(org.elasticsearch.index.query.QueryBuilder)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setSize(int)|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndex/getParentType()|",
      "|java+method:///org/elasticsearch/search/SearchHit/getSource()|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndex/toDoc(java.util.Map)|"
    ],
    "v2Body": [
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/get()|",
      "|java+method:///org/elasticsearch/index/query/QueryBuilders/hasParentQuery(java.lang.String,org.elasticsearch.index.query.QueryBuilder)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setSize(int)|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setRouting(java.lang.String)|",
      "|java+method:///org/elasticsearch/index/query/IdsQueryBuilder/addIds(java.lang.String%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndex/getClient()|",
      "|java+method:///org/elasticsearch/index/query/QueryBuilders/idsQuery(java.lang.String%5B%5D)|",
      "|java+method:///org/elasticsearch/action/search/SearchResponse/getHits()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/server/es/EsClient/prepareSearch(java.lang.String%5B%5D)|",
      "|java+method:///org/sonar/api/rule/RuleKey/repository()|",
      "|java+method:///org/sonar/api/rule/RuleKey/toString()|",
      "|java+method:///org/elasticsearch/search/SearchHit/getSource()|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setQuery(org.elasticsearch.index.query.QueryBuilder)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/elasticsearch/search/SearchHits/iterator()|",
      "|java+constructor:///org/sonar/server/qualityprofile/index/ActiveRuleDoc/ActiveRuleDoc(java.util.Map)|"
    ],
    "affectedLib": "org.elasticsearch:elasticsearch:1.7.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/index/IssueIndex/listTags(org.sonar.server.issue.IssueQuery,java.lang.String,int)|",
    "called": "|java+method:///org/elasticsearch/index/query/QueryBuilders/matchAllQuery()|",
    "v1Body": [
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setQuery(org.elasticsearch.index.query.QueryBuilder)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/TermsBuilder/minDocCount(long)|",
      "|java+method:///org/sonar/server/search/IndexDefinition/getIndexType()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/sonar/server/es/EsUtils/termsKeys(org.elasticsearch.search.aggregations.bucket.terms.Terms)|",
      "|java+method:///org/elasticsearch/index/query/QueryBuilders/filteredQuery(org.elasticsearch.index.query.QueryBuilder,org.elasticsearch.index.query.FilterBuilder)|",
      "|java+method:///org/elasticsearch/search/aggregations/AggregationBuilders/terms(java.lang.String)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/TermsBuilder/size(int)|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setTypes(java.lang.String%5B%5D)|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/get()|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/addAggregation(org.elasticsearch.search.aggregations.AbstractAggregationBuilder)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/global/GlobalBuilder/subAggregation(org.elasticsearch.search.aggregations.AbstractAggregationBuilder)|",
      "|java+method:///org/elasticsearch/search/aggregations/Aggregations/get(java.lang.String)|",
      "|java+method:///org/elasticsearch/search/aggregations/AggregationBuilders/global(java.lang.String)|",
      "|java+method:///java/util/SortedSet/addAll(java.util.Collection)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Iterable)|",
      "|java+method:///org/elasticsearch/action/search/SearchResponse/getAggregations()|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/createBoolFilter(org.sonar.server.issue.IssueQuery)|",
      "|java+method:///java/util/List/subList(int,int)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/getClient()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/TermsBuilder/field(java.lang.String)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/global/Global/getAggregations()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/TermsBuilder/order(org.elasticsearch.search.aggregations.bucket.terms.Terms$Order)|",
      "|java+method:///org/sonar/server/es/EsClient/prepareSearch(java.lang.String%5B%5D)|",
      "|java+method:///org/elasticsearch/index/query/QueryBuilders/matchAllQuery()|",
      "|java+method:///com/google/common/collect/Sets/newTreeSet()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/TermsBuilder/include(java.lang.String)|",
      "|java+method:///org/sonar/server/search/IndexDefinition/getIndexName()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/Terms$Order/term(boolean)|",
      "|java+method:///org/sonar/server/search/IndexField/field()|"
    ],
    "v2Body": [
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setQuery(org.elasticsearch.index.query.QueryBuilder)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/TermsBuilder/minDocCount(long)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/sonar/server/es/EsUtils/termsKeys(org.elasticsearch.search.aggregations.bucket.terms.Terms)|",
      "|java+method:///org/elasticsearch/index/query/QueryBuilders/filteredQuery(org.elasticsearch.index.query.QueryBuilder,org.elasticsearch.index.query.FilterBuilder)|",
      "|java+method:///org/elasticsearch/search/aggregations/AggregationBuilders/terms(java.lang.String)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/TermsBuilder/size(int)|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/setTypes(java.lang.String%5B%5D)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/Terms$Order/term(boolean)|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/get()|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/addAggregation(org.elasticsearch.search.aggregations.AbstractAggregationBuilder)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/global/GlobalBuilder/subAggregation(org.elasticsearch.search.aggregations.AbstractAggregationBuilder)|",
      "|java+method:///org/elasticsearch/search/aggregations/Aggregations/get(java.lang.String)|",
      "|java+method:///org/elasticsearch/search/aggregations/AggregationBuilders/global(java.lang.String)|",
      "|java+method:///java/util/SortedSet/addAll(java.util.Collection)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Iterable)|",
      "|java+method:///org/elasticsearch/action/search/SearchResponse/getAggregations()|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/createBoolFilter(org.sonar.server.issue.IssueQuery)|",
      "|java+method:///java/util/List/subList(int,int)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/getClient()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/TermsBuilder/field(java.lang.String)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/global/Global/getAggregations()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/TermsBuilder/order(org.elasticsearch.search.aggregations.bucket.terms.Terms$Order)|",
      "|java+method:///org/sonar/server/es/EsClient/prepareSearch(java.lang.String%5B%5D)|",
      "|java+method:///org/elasticsearch/index/query/QueryBuilders/matchAllQuery()|",
      "|java+method:///com/google/common/collect/Sets/newTreeSet()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/TermsBuilder/include(java.lang.String)|"
    ],
    "affectedLib": "org.elasticsearch:elasticsearch:1.7.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/step/LoadReportAnalysisMetadataHolderStep/execute()|",
    "called": "|java+method:///org/elasticsearch/common/lang3/StringUtils/isNotEmpty(java.lang.CharSequence)|",
    "v1Body": [
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Metadata/getRootComponentRef()|",
      "|java+method:///org/sonar/server/computation/analysis/MutableAnalysisMetadataHolder/setAnalysisDate(long)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Metadata/getCrossProjectDuplicationActivated()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Metadata/getBranch()|",
      "|java+method:///org/sonar/server/computation/step/LoadReportAnalysisMetadataHolderStep/checkProjectKeyConsistency(org.sonar.batch.protocol.output.BatchReport$Metadata)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Metadata/hasBranch()|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readMetadata()|",
      "|java+method:///org/sonar/server/computation/analysis/MutableAnalysisMetadataHolder/setCrossProjectDuplicationEnabled(boolean)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Metadata/hasCrossProjectDuplicationActivated()|",
      "|java+method:///org/sonar/server/computation/analysis/MutableAnalysisMetadataHolder/setRootComponentRef(int)|",
      "|java+method:///org/sonar/server/computation/analysis/MutableAnalysisMetadataHolder/setBranch(java.lang.String)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Metadata/getAnalysisDate()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/computation/analysis/MutableAnalysisMetadataHolder/setQProfilesByLanguage(java.util.Map)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Metadata/getBranch()|",
      "|java+method:///org/sonar/server/computation/analysis/MutableAnalysisMetadataHolder/setAnalysisDate(long)|",
      "|java+method:///org/sonar/server/computation/analysis/MutableAnalysisMetadataHolder/setRootComponentRef(int)|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readMetadata()|",
      "|java+method:///org/sonar/server/computation/analysis/MutableAnalysisMetadataHolder/setBranch(java.lang.String)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Metadata/getRootComponentRef()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Metadata/getQprofilesPerLanguage()|",
      "|java+method:///org/sonar/server/computation/analysis/MutableAnalysisMetadataHolder/setCrossProjectDuplicationEnabled(boolean)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Metadata/getCrossProjectDuplicationActivated()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Metadata/getAnalysisDate()|",
      "|java+method:///com/google/common/collect/Maps/transformValues(java.util.Map,com.google.common.base.Function)|",
      "|java+method:///org/sonar/server/computation/step/LoadReportAnalysisMetadataHolderStep/checkProjectKeyConsistency(org.sonar.scanner.protocol.output.ScannerReport$Metadata)|",
      "|java+method:///org/elasticsearch/common/lang3/StringUtils/isNotEmpty(java.lang.CharSequence)|"
    ],
    "affectedLib": "org.elasticsearch:elasticsearch:1.7.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+constructor:///org/sonar/server/search/Result/Result(org.elasticsearch.action.search.SearchResponse)|",
    "called": "|java+method:///org/elasticsearch/action/search/SearchResponse/getHits()|",
    "v1Body": [
      "|java+constructor:///org/sonar/server/search/Result/Result(org.sonar.server.search.BaseIndex,org.elasticsearch.action.search.SearchResponse)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/elasticsearch/search/SearchHits/totalHits()|",
      "|java+constructor:///org/sonar/server/search/Facets/Facets(org.elasticsearch.action.search.SearchResponse)|",
      "|java+method:///org/elasticsearch/action/search/SearchResponse/getHits()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "org.elasticsearch:elasticsearch:1.7.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/index/IssueIndex/addAssignedToMeFacetIfNeeded(org.elasticsearch.action.search.SearchRequestBuilder,org.sonar.server.es.SearchOptions,org.sonar.server.issue.IssueQuery,java.util.Map,org.elasticsearch.index.query.QueryBuilder)|",
    "called": "|java+method:///org/elasticsearch/search/aggregations/AggregationBuilders/terms(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/commons/lang/StringUtils/isEmpty(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/addDebtAggregationIfNeeded(org.sonar.server.issue.IssueQuery,org.elasticsearch.search.aggregations.AggregationBuilder)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/TermsBuilder/field(java.lang.String)|",
      "|java+method:///org/elasticsearch/search/aggregations/AggregationBuilders/filter(java.lang.String)|",
      "|java+method:///java/util/Collection/contains(java.lang.Object)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/TermsBuilder/include(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/addAggregation(org.elasticsearch.search.aggregations.AbstractAggregationBuilder)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/global/GlobalBuilder/subAggregation(org.elasticsearch.search.aggregations.AbstractAggregationBuilder)|",
      "|java+method:///org/elasticsearch/search/aggregations/AggregationBuilders/global(java.lang.String)|",
      "|java+method:///org/sonar/server/es/SearchOptions/getFacets()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/filter/FilterAggregationBuilder/subAggregation(org.elasticsearch.search.aggregations.AbstractAggregationBuilder)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/newStickyFacetBuilder(org.sonar.server.issue.IssueQuery,java.util.Map,org.elasticsearch.index.query.QueryBuilder)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/filter/FilterAggregationBuilder/filter(org.elasticsearch.index.query.FilterBuilder)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/elasticsearch/search/aggregations/AggregationBuilders/terms(java.lang.String)|",
      "|java+method:///org/sonar/server/search/StickyFacetBuilder/getStickyFacetFilter(java.lang.String%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/lang/StringUtils/isEmpty(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/TermsBuilder/field(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/addEffortAggregationIfNeeded(org.sonar.server.issue.IssueQuery,org.elasticsearch.search.aggregations.AggregationBuilder)|",
      "|java+method:///org/elasticsearch/search/aggregations/AggregationBuilders/filter(java.lang.String)|",
      "|java+method:///java/util/Collection/contains(java.lang.Object)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/terms/TermsBuilder/include(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+method:///org/elasticsearch/action/search/SearchRequestBuilder/addAggregation(org.elasticsearch.search.aggregations.AbstractAggregationBuilder)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/global/GlobalBuilder/subAggregation(org.elasticsearch.search.aggregations.AbstractAggregationBuilder)|",
      "|java+method:///org/elasticsearch/search/aggregations/AggregationBuilders/global(java.lang.String)|",
      "|java+method:///org/sonar/server/es/SearchOptions/getFacets()|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/filter/FilterAggregationBuilder/subAggregation(org.elasticsearch.search.aggregations.AbstractAggregationBuilder)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/newStickyFacetBuilder(org.sonar.server.issue.IssueQuery,java.util.Map,org.elasticsearch.index.query.QueryBuilder)|",
      "|java+method:///org/elasticsearch/search/aggregations/bucket/filter/FilterAggregationBuilder/filter(org.elasticsearch.index.query.FilterBuilder)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/elasticsearch/search/aggregations/AggregationBuilders/terms(java.lang.String)|",
      "|java+method:///org/sonar/server/search/StickyFacetBuilder/getStickyFacetFilter(java.lang.String%5B%5D)|"
    ],
    "affectedLib": "org.elasticsearch:elasticsearch:1.7.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/es/EsClient/prepareDelete(java.lang.String,java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/elasticsearch/action/delete/DeleteRequestBuilder/setId(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/elasticsearch/action/delete/DeleteRequestBuilder/setId(java.lang.String)|",
      "|java+method:///org/sonar/server/search/SearchClient/nativeClient()|",
      "|java+constructor:///org/sonar/server/es/request/ProxyDeleteRequestBuilder/ProxyDeleteRequestBuilder(org.elasticsearch.client.Client,java.lang.String)|",
      "|java+method:///org/sonar/server/es/request/ProxyDeleteRequestBuilder/setType(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/elasticsearch/action/delete/DeleteRequestBuilder/setId(java.lang.String)|",
      "|java+method:///org/sonar/server/es/EsClient/nativeClient()|",
      "|java+constructor:///org/sonar/server/es/request/ProxyDeleteRequestBuilder/ProxyDeleteRequestBuilder(org.elasticsearch.client.Client,java.lang.String)|",
      "|java+method:///org/sonar/server/es/request/ProxyDeleteRequestBuilder/setType(java.lang.String)|"
    ],
    "affectedLib": "org.elasticsearch:elasticsearch:1.7.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/RegisterRules/processRemainingDbRules(java.util.Collection,org.sonar.db.DbSession)|",
    "called": "|java+method:///org/sonar/db/rule/RuleDao/selectById(long,org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///org/sonar/server/rule/db/RuleDao/selectTemplate(org.sonar.db.rule.RuleDto,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/rule/RegisterRules/updateCustomRuleFromTemplateRule(org.sonar.db.rule.RuleDto,org.sonar.db.rule.RuleDto)|",
      "|java+method:///org/sonar/server/db/DbClient/deprecatedRuleDao()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getStatus()|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/update(org.sonar.db.DbSession,org.sonar.db.Dto)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getTemplateId()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/rule/RegisterRules/removeRule(org.sonar.db.DbSession,java.util.List,org.sonar.db.rule.RuleDto)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getTemplateId()|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/rule/RegisterRules/updateCustomRuleFromTemplateRule(org.sonar.db.rule.RuleDto,org.sonar.db.rule.RuleDto)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+method:///org/sonar/server/rule/RegisterRules/removeRule(org.sonar.db.DbSession,java.util.List,org.sonar.db.rule.RuleDto)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/sonar/server/rule/RegisterRules/update(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto)|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectById(long,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getStatus()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/metric/DefaultMetricFinder/findAll(java.util.List)|",
    "called": "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
    "v1Body": [
      "|java+method:///com/google/common/collect/FluentIterable/from(java.lang.Iterable)|",
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/db/DbClient/metricDao()|",
      "|java+method:///com/google/common/collect/FluentIterable/toList()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///com/google/common/collect/FluentIterable/filter(com.google.common.base.Predicate)|",
      "|java+method:///org/sonar/db/metric/MetricDao/selectByKeys(org.sonar.db.DbSession,java.util.List)|",
      "|java+method:///com/google/common/collect/FluentIterable/transform(com.google.common.base.Function)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/FluentIterable/from(java.lang.Iterable)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbClient/metricDao()|",
      "|java+method:///com/google/common/collect/FluentIterable/toList()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///com/google/common/collect/FluentIterable/filter(com.google.common.base.Predicate)|",
      "|java+method:///org/sonar/db/metric/MetricDao/selectByKeys(org.sonar.db.DbSession,java.util.List)|",
      "|java+method:///com/google/common/collect/FluentIterable/transform(com.google.common.base.Function)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileProjectOperations/removeProject(java.lang.String,java.lang.String,org.sonar.server.user.UserSession)|",
    "called": "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
    "v1Body": [
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileProjectOperations/checkPermission(org.sonar.server.user.UserSession,java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/deleteProjectProfileAssociation(java.lang.String,java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/component/ComponentDto/uuid()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileProjectOperations/findNotNull(java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/db/component/ComponentDto/key()|",
      "|java+method:///org/sonar/server/db/DbClient/componentDao()|",
      "|java+method:///org/sonar/db/component/ComponentDao/selectOrFailByUuid(org.sonar.db.DbSession,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileProjectOperations/checkPermission(org.sonar.server.user.UserSession,java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/deleteProjectProfileAssociation(java.lang.String,java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/component/ComponentDto/uuid()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileProjectOperations/findNotNull(java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/db/component/ComponentDto/key()|",
      "|java+method:///org/sonar/db/DbClient/componentDao()|",
      "|java+method:///org/sonar/db/component/ComponentDao/selectOrFailByUuid(org.sonar.db.DbSession,java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatIssueTransitions(org.sonar.server.issue.ws.SearchResponseData,org.sonarqube.ws.Issues$Issue$Builder,org.sonar.db.issue.IssueDto)|",
    "called": "|java+method:///org/sonar/db/issue/IssueDto/getKey()|",
    "v1Body": [
      "|java+method:///org/sonar/core/issue/workflow/Transition/key()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseData/getTransitionsForIssueKey(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Transitions/newBuilder()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonarqube/ws/Issues$Transitions$Builder/addTransitions(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getKey()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setTransitions(org.sonarqube.ws.Issues$Transitions$Builder)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/issue/workflow/Transition/key()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseData/getTransitionsForIssueKey(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Transitions/newBuilder()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonarqube/ws/Issues$Transitions$Builder/addTransitions(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getKey()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setTransitions(org.sonarqube.ws.Issues$Transitions$Builder)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/IssueBulkChangeService/getByKeysForUpdate(java.util.List)|",
    "called": "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
    "v1Body": [
      "|java+method:///com/google/common/collect/Collections2/transform(java.util.Collection,com.google.common.base.Function)|",
      "|java+method:///org/sonar/db/issue/IssueDao/selectByKeys(org.sonar.db.DbSession,java.util.List)|",
      "|java+constructor:///org/sonar/server/es/SearchOptions/SearchOptions()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/server/issue/IssueService/search(org.sonar.server.issue.IssueQuery,org.sonar.server.es.SearchOptions)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Iterable)|",
      "|java+method:///org/sonar/server/issue/IssueQuery/builder(org.sonar.server.user.UserSession)|",
      "|java+constructor:///org/sonar/server/issue/IssueBulkChangeService$2/IssueBulkChangeService$2(org.sonar.server.issue.IssueBulkChangeService)|",
      "|java+constructor:///org/sonar/server/issue/IssueBulkChangeService$1/IssueBulkChangeService$1(org.sonar.server.issue.IssueBulkChangeService)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/build()|",
      "|java+method:///java/util/Collection/isEmpty()|",
      "|java+method:///org/sonar/server/es/SearchResult/getDocs()|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/issueKeys(java.util.Collection)|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+method:///org/sonar/db/DbClient/issueDao()|",
      "|java+method:///org/sonar/server/es/SearchOptions/setLimit(int)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///com/google/common/collect/Collections2/transform(java.util.Collection,com.google.common.base.Function)|",
      "|java+method:///org/sonar/db/issue/IssueDao/selectByKeys(org.sonar.db.DbSession,java.util.List)|",
      "|java+constructor:///org/sonar/server/es/SearchOptions/SearchOptions()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/search(org.sonar.server.issue.IssueQuery,org.sonar.server.es.SearchOptions)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Iterable)|",
      "|java+method:///org/sonar/server/issue/IssueQuery/builder(org.sonar.server.user.UserSession)|",
      "|java+constructor:///org/sonar/server/issue/IssueBulkChangeService$2/IssueBulkChangeService$2(org.sonar.server.issue.IssueBulkChangeService)|",
      "|java+constructor:///org/sonar/server/issue/IssueBulkChangeService$1/IssueBulkChangeService$1(org.sonar.server.issue.IssueBulkChangeService)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/build()|",
      "|java+method:///java/util/Collection/isEmpty()|",
      "|java+method:///org/sonar/server/es/SearchResult/getDocs()|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/issueKeys(java.util.Collection)|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+method:///org/sonar/db/DbClient/issueDao()|",
      "|java+method:///org/sonar/server/es/SearchOptions/setLimit(int)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/RegisterQualityProfiles/start()|",
    "called": "|java+method:///org/sonar/db/DbSession/close()|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/api/utils/log/Profiler/create(org.sonar.api.utils.log.Logger)|",
      "|java+method:///org/sonar/api/utils/log/Loggers/get(java.lang.Class)|",
      "|java+method:///org/sonar/api/utils/log/Profiler/startInfo(java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/sonar/server/qualityprofile/RegisterQualityProfiles/verifyLanguage(java.lang.String,java.util.List)|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/qualityprofile/RegisterQualityProfiles/registerProfilesForLanguage(org.sonar.db.DbSession,java.lang.String,java.util.List)|",
      "|java+method:///com/google/common/collect/ListMultimap/keySet()|",
      "|java+method:///org/sonar/server/qualityprofile/RegisterQualityProfiles/profilesByLanguage()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/common/collect/ListMultimap/get(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/sonar/api/utils/log/Profiler/stopDebug()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/utils/log/Profiler/create(org.sonar.api.utils.log.Logger)|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///org/sonar/api/utils/log/Profiler/startInfo(java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/sonar/server/qualityprofile/RegisterQualityProfiles/verifyLanguage(java.lang.String,java.util.List)|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/qualityprofile/RegisterQualityProfiles/registerProfilesForLanguage(org.sonar.db.DbSession,java.lang.String,java.util.List)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndexer/setEnabled(boolean)|",
      "|java+method:///com/google/common/collect/ListMultimap/keySet()|",
      "|java+method:///org/sonar/server/qualityprofile/RegisterQualityProfiles/profilesByLanguage()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/common/collect/ListMultimap/get(java.lang.Object)|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndexer/index(java.util.List)|",
      "|java+method:///org/sonar/api/utils/log/Loggers/get(java.lang.Class)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/sonar/api/utils/log/Profiler/stopDebug()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileReset/resetLanguage(java.lang.String)|",
    "called": "|java+method:///org/sonar/db/rule/RuleDao/selectRuleParamsByRuleKey(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivation/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivation/setParameter(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/api/rules/Rule/ruleKey()|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getActiveRuleParams()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/getDefaultValue()|",
      "|java+method:///org/sonar/api/profiles/RulesProfile/getActiveRules()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/sonar/api/rules/ActiveRuleParam/getParamKey()|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/selectRuleParamsByRuleKey(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileReset/doReset(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto,java.util.Collection)|",
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/getOrCreate(org.sonar.db.DbSession,org.sonar.server.qualityprofile.QProfileName)|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getRule()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileReset/loadDefinitionsGroupedByName(java.lang.String)|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getSeverity()|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getRepositoryKey()|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+constructor:///org/sonar/server/qualityprofile/RuleActivation/RuleActivation(org.sonar.api.rule.RuleKey)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getRuleKey()|",
      "|java+method:///org/sonar/api/rules/RulePriority/name()|",
      "|java+method:///org/sonar/server/db/DbClient/deprecatedRuleDao()|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/getName()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/google/common/collect/ListMultimap/asMap()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/sonar/api/rules/ActiveRuleParam/getValue()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/rule/RuleDao/selectRuleParamsByRuleKey(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivation/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivation/setParameter(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/api/rules/Rule/ruleKey()|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getActiveRuleParams()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/getName()|",
      "|java+method:///org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/getDefaultValue()|",
      "|java+method:///org/sonar/api/profiles/RulesProfile/getActiveRules()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/sonar/api/rules/ActiveRuleParam/getParamKey()|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileReset/doReset(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto,java.util.Collection)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/getOrCreate(org.sonar.db.DbSession,org.sonar.server.qualityprofile.QProfileName)|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getRule()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileReset/loadDefinitionsGroupedByName(java.lang.String)|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getSeverity()|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getRepositoryKey()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+constructor:///org/sonar/server/qualityprofile/RuleActivation/RuleActivation(org.sonar.api.rule.RuleKey)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getRuleKey()|",
      "|java+method:///org/sonar/api/rules/RulePriority/name()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/google/common/collect/ListMultimap/asMap()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/sonar/api/rules/ActiveRuleParam/getValue()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/DefaultRuleFinder/find(org.sonar.api.rules.RuleQuery)|",
    "called": "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///org/sonar/server/rule/DefaultRuleFinder/toRule(org.sonar.server.rule.Rule)|",
      "|java+method:///org/sonar/server/rule/index/RuleIndex/search(org.sonar.server.rule.index.RuleQuery,org.sonar.server.search.QueryContext)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/sonar/server/search/Result/getHits()|",
      "|java+constructor:///org/sonar/server/search/QueryContext/QueryContext(org.sonar.server.user.UserSession)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/sonar/server/rule/DefaultRuleFinder/toQuery(org.sonar.api.rules.RuleQuery)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/rule/RuleDao/selectRuleParamsByRuleKey(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getKey()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/sonar/server/rule/DefaultRuleFinder/toRule(org.sonar.db.rule.RuleDto,java.util.List)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectByQuery(org.sonar.db.DbSession,org.sonar.api.rules.RuleQuery)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/startup/ClearRulesOverloadedDebt/markAsExecuted(org.sonar.db.DbSession)|",
    "called": "|java+constructor:///org/sonar/db/loadedtemplate/LoadedTemplateDto/LoadedTemplateDto(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/sonar/db/loadedtemplate/LoadedTemplateDto/LoadedTemplateDto(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/server/db/DbClient/loadedTemplateDao()|",
      "|java+method:///org/sonar/db/loadedtemplate/LoadedTemplateDao/insert(org.sonar.db.loadedtemplate.LoadedTemplateDto,org.apache.ibatis.session.SqlSession)|"
    ],
    "v2Body": [
      "|java+constructor:///org/sonar/db/loadedtemplate/LoadedTemplateDto/LoadedTemplateDto(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/db/DbClient/loadedTemplateDao()|",
      "|java+method:///org/sonar/db/loadedtemplate/LoadedTemplateDao/insert(org.sonar.db.loadedtemplate.LoadedTemplateDto,org.apache.ibatis.session.SqlSession)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/step/PersistTestsStep$TestDepthTraversalTypeAwareVisitor/loadCoverageDetails(int)|",
    "called": "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$CoveredFile$Builder/setFileUuid(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/computation/step/PersistTestsStep/access$400(org.sonar.server.computation.step.PersistTestsStep)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+method:///java/util/List/removeAll(java.util.Collection)|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readCoverageDetails(int)|",
      "|java+method:///com/google/common/collect/Table/get(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$CoverageDetail/getCoveredFileList()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$CoveredFile$Builder/setFileUuid(java.lang.String)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$CoverageDetail$CoveredFile/getFileRef()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$CoverageDetail/getTestName()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$CoveredFile$Builder/getCoveredLineList()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$CoveredFile$Builder/addAllCoveredLine(java.lang.Iterable)|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$CoveredFile/newBuilder()|",
      "|java+method:///com/google/common/collect/Table/put(java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///com/google/common/collect/HashBasedTable/create()|",
      "|java+method:///org/sonar/server/computation/step/PersistTestsStep$TestDepthTraversalTypeAwareVisitor/getUuid(int)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$CoverageDetail$CoveredFile/getCoveredLineList()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/computation/step/PersistTestsStep/access$400(org.sonar.server.computation.step.PersistTestsStep)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$CoverageDetail$CoveredFile/getCoveredLineList()|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readCoverageDetails(int)|",
      "|java+method:///com/google/common/collect/Table/get(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$CoverageDetail$CoveredFile/getFileRef()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$CoveredFile$Builder/setFileUuid(java.lang.String)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$CoverageDetail/getTestName()|",
      "|java+method:///java/util/List/removeAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$CoveredFile$Builder/getCoveredLineList()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$CoveredFile$Builder/addAllCoveredLine(java.lang.Iterable)|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$CoveredFile/newBuilder()|",
      "|java+method:///com/google/common/collect/Table/put(java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$CoverageDetail/getCoveredFileList()|",
      "|java+method:///com/google/common/collect/HashBasedTable/create()|",
      "|java+method:///org/sonar/server/computation/step/PersistTestsStep$TestDepthTraversalTypeAwareVisitor/getUuid(int)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/step/PersistTestsStep$TestDepthTraversalTypeAwareVisitor/buildDbTests(int)|",
    "called": "|java+method:///org/sonar/db/protobuf/DbFileSources$Test/newBuilder()|",
    "v1Body": [
      "|java+method:///org/sonar/core/util/Uuids/create()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test/newBuilder()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/getName()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/hasMsg()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/getStacktrace()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/hasStacktrace()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/hasDurationInMs()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$TestStatus/valueOf(java.lang.String)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/getName()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setExecutionTimeMs(long)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/hasStatus()|",
      "|java+method:///org/sonar/server/computation/step/PersistTestsStep/access$400(org.sonar.server.computation.step.PersistTestsStep)|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readTests(int)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setStatus(org.sonar.db.protobuf.DbFileSources$Test$TestStatus)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/getDurationInMs()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/getMsg()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setName(java.lang.String)|",
      "|java+method:///com/google/common/collect/ArrayListMultimap/create()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setMsg(java.lang.String)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+method:///org/sonar/batch/protocol/Constants$TestStatus/name()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setUuid(java.lang.String)|",
      "|java+method:///com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setStacktrace(java.lang.String)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/getStatus()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Test/getDurationInMs()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test/newBuilder()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/getName()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setStacktrace(java.lang.String)|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setExecutionTimeMs(long)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Test/getStacktrace()|",
      "|java+method:///org/sonar/core/util/Uuids/create()|",
      "|java+method:///org/sonar/server/computation/step/PersistTestsStep/access$400(org.sonar.server.computation.step.PersistTestsStep)|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readTests(int)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setStatus(org.sonar.db.protobuf.DbFileSources$Test$TestStatus)|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setName(java.lang.String)|",
      "|java+method:///com/google/common/collect/ArrayListMultimap/create()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setMsg(java.lang.String)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Test$TestStatus/name()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Test/getName()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Test/getMsg()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Test/getStatus()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$TestStatus/valueOf(java.lang.String)|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setUuid(java.lang.String)|",
      "|java+method:///com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/user/UserUpdater/updateUserDto(org.sonar.db.DbSession,org.sonar.server.user.UpdateUser,org.sonar.db.user.UserDto)|",
    "called": "|java+method:///org/sonar/db/user/UserDto/setScmAccounts(java.util.List)|",
    "v1Body": [
      "|java+method:///org/sonar/db/user/UserDto/setCryptedPassword(java.lang.String)|",
      "|java+method:///org/sonar/db/user/UserDto/setScmAccounts(java.util.List)|",
      "|java+method:///org/sonar/db/user/UserDto/getEmail()|",
      "|java+method:///org/sonar/server/user/UserUpdater/validateEmailFormat(java.lang.String,java.util.List)|",
      "|java+method:///org/sonar/server/user/UpdateUser/isNameChanged()|",
      "|java+method:///org/sonar/server/user/UserUpdater/validateNameFormat(java.lang.String,java.util.List)|",
      "|java+method:///org/sonar/server/user/UpdateUser/name()|",
      "|java+method:///org/sonar/db/user/UserDto/setEmail(java.lang.String)|",
      "|java+method:///org/sonar/server/user/UpdateUser/login()|",
      "|java+method:///org/sonar/server/user/UserUpdater/sanitizeScmAccounts(java.util.List)|",
      "|java+method:///org/sonar/db/user/UserDto/setScmAccounts(java.lang.String)|",
      "|java+method:///org/sonar/server/user/UpdateUser/isPasswordChanged()|",
      "|java+method:///org/sonar/server/user/UserUpdater/validatePasswords(java.lang.String,java.util.List)|",
      "|java+method:///org/sonar/server/user/UpdateUser/isScmAccountsChanged()|",
      "|java+method:///org/sonar/server/user/UpdateUser/password()|",
      "|java+constructor:///org/sonar/server/exceptions/BadRequestException/BadRequestException(java.util.List)|",
      "|java+method:///org/sonar/server/user/UpdateUser/email()|",
      "|java+method:///org/sonar/db/user/UserDto/setSalt(java.lang.String)|",
      "|java+method:///org/sonar/server/user/UpdateUser/isEmailChanged()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/sonar/server/user/UserUpdater/validateScmAccounts(org.sonar.db.DbSession,java.util.List,java.lang.String,java.lang.String,org.sonar.db.user.UserDto,java.util.List)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/sonar/server/user/UpdateUser/scmAccounts()|",
      "|java+method:///org/sonar/server/user/UpdateUser/externalIdentity()|",
      "|java+method:///org/sonar/server/user/UserUpdater/setExternalIdentity(org.sonar.db.user.UserDto,org.sonar.server.user.ExternalIdentity)|",
      "|java+method:///org/sonar/db/user/UserDto/getLogin()|",
      "|java+method:///org/sonar/server/user/UserUpdater/setEncryptedPassWord(java.lang.String,org.sonar.db.user.UserDto)|",
      "|java+method:///org/sonar/server/user/UserUpdater/checkPasswordChangeAllowed(java.lang.String,java.util.List)|",
      "|java+method:///org/sonar/db/user/UserDto/setName(java.lang.String)|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/user/UserDto/setCryptedPassword(java.lang.String)|",
      "|java+method:///org/sonar/db/user/UserDto/setScmAccounts(java.util.List)|",
      "|java+method:///org/sonar/db/user/UserDto/getEmail()|",
      "|java+method:///org/sonar/server/user/UserUpdater/validateEmailFormat(java.lang.String,java.util.List)|",
      "|java+method:///org/sonar/server/user/UpdateUser/isNameChanged()|",
      "|java+method:///org/sonar/server/user/UpdateUser/name()|",
      "|java+method:///org/sonar/db/user/UserDto/setEmail(java.lang.String)|",
      "|java+method:///org/sonar/server/user/UserUpdater/sanitizeScmAccounts(java.util.List)|",
      "|java+method:///org/sonar/db/user/UserDto/setScmAccounts(java.lang.String)|",
      "|java+method:///org/sonar/db/user/UserDto/setName(java.lang.String)|",
      "|java+method:///org/sonar/server/user/UserUpdater/validatePasswords(java.lang.String,java.util.List)|",
      "|java+method:///org/sonar/server/user/UpdateUser/isScmAccountsChanged()|",
      "|java+method:///org/sonar/server/user/UpdateUser/password()|",
      "|java+constructor:///org/sonar/server/exceptions/BadRequestException/BadRequestException(java.util.List)|",
      "|java+method:///org/sonar/server/user/UpdateUser/email()|",
      "|java+method:///org/sonar/db/user/UserDto/setSalt(java.lang.String)|",
      "|java+method:///org/sonar/server/user/UpdateUser/isEmailChanged()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/sonar/server/user/UserUpdater/validateScmAccounts(org.sonar.db.DbSession,java.util.List,java.lang.String,java.lang.String,org.sonar.db.user.UserDto,java.util.List)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/sonar/server/user/UpdateUser/isExternalIdentityChanged()|",
      "|java+method:///org/sonar/server/user/UserUpdater/validateNameFormat(java.lang.String,java.util.List)|",
      "|java+method:///org/sonar/server/user/UpdateUser/scmAccounts()|",
      "|java+method:///org/sonar/server/user/UpdateUser/externalIdentity()|",
      "|java+method:///org/sonar/server/user/UserUpdater/checkPasswordChangeAllowed(org.sonar.db.user.UserDto,java.util.List)|",
      "|java+method:///org/sonar/server/user/UserUpdater/setExternalIdentity(org.sonar.db.user.UserDto,org.sonar.server.user.ExternalIdentity)|",
      "|java+method:///org/sonar/db/user/UserDto/getLogin()|",
      "|java+method:///org/sonar/server/user/UserUpdater/setEncryptedPassWord(java.lang.String,org.sonar.db.user.UserDto)|",
      "|java+method:///org/sonar/server/user/UpdateUser/isPasswordChanged()|",
      "|java+method:///org/sonar/server/user/UserUpdater/isNewExternalIdentityNotEqualsToSonaQube(org.sonar.server.user.UpdateUser)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/measure/ws/ComponentTreeDataLoader/searchMetrics(org.sonar.db.DbSession,org.sonarqube.ws.client.measure.ComponentTreeWsRequest)|",
    "called": "|java+method:///org/sonar/db/metric/MetricDao/selectByKeys(org.sonar.db.DbSession,java.util.List)|",
    "v1Body": [
      "|java+method:///org/sonar/db/metric/MetricDtoFunctions/toKey()|",
      "|java+method:///com/google/common/collect/Lists/transform(java.util.List,com.google.common.base.Function)|",
      "|java+method:///org/sonar/db/metric/MetricDao/selectByKeys(org.sonar.db.DbSession,java.util.List)|",
      "|java+method:///com/google/common/base/Joiner/on(java.lang.String)|",
      "|java+constructor:///java/util/LinkedHashSet/LinkedHashSet(java.util.Collection)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getMetricKeys()|",
      "|java+method:///org/sonar/db/DbClient/metricDao()|",
      "|java+method:///com/google/common/base/Joiner/join(java.lang.Iterable)|",
      "|java+method:///com/google/common/collect/Sets/difference(java.util.Set,java.util.Set)|",
      "|java+constructor:///org/sonar/server/exceptions/NotFoundException/NotFoundException(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/metric/MetricDtoFunctions/toKey()|",
      "|java+method:///com/google/common/collect/Lists/transform(java.util.List,com.google.common.base.Function)|",
      "|java+method:///org/sonar/db/metric/MetricDao/selectByKeys(org.sonar.db.DbSession,java.util.List)|",
      "|java+method:///com/google/common/base/Joiner/on(java.lang.String)|",
      "|java+constructor:///java/util/LinkedHashSet/LinkedHashSet(java.util.Collection)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getMetricKeys()|",
      "|java+method:///java/util/Objects/requireNonNull(java.lang.Object)|",
      "|java+method:///org/sonar/db/DbClient/metricDao()|",
      "|java+method:///com/google/common/base/Joiner/join(java.lang.Iterable)|",
      "|java+method:///com/google/common/collect/Sets/difference(java.util.Set,java.util.Set)|",
      "|java+constructor:///org/sonar/server/exceptions/NotFoundException/NotFoundException(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/measure/ws/ComponentTreeDataLoader/load(org.sonarqube.ws.client.measure.ComponentTreeWsRequest)|",
    "called": "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeDataLoader/searchComponents(org.sonar.db.DbSession,org.sonar.db.component.ComponentTreeQuery,org.sonarqube.ws.client.measure.ComponentTreeWsRequest)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/component/SnapshotDao/selectLastSnapshotByComponentId(org.sonar.db.DbSession,long)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeDataLoader/paginateComponents(java.util.List,int,org.sonarqube.ws.client.measure.ComponentTreeWsRequest)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeData$Builder/build()|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeDataLoader$ComponentDtosAndTotal/access$100(org.sonar.server.measure.ws.ComponentTreeDataLoader$ComponentDtosAndTotal)|",
      "|java+method:///org/sonar/server/component/ComponentFinder/getByUuidOrKey(org.sonar.db.DbSession,java.lang.String,java.lang.String,org.sonar.server.component.ComponentFinder$ParamNames)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getBaseComponentId()|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeDataLoader/searchMeasuresByComponentUuidAndMetric(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto,org.sonar.db.component.SnapshotDto,java.util.List,java.util.List,java.util.List)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeData$Builder/setBaseComponent(org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeDataLoader/searchReferenceComponentsById(org.sonar.db.DbSession,java.util.List)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeDataLoader/sortComponents(java.util.List,org.sonarqube.ws.client.measure.ComponentTreeWsRequest,java.util.List,com.google.common.collect.Table)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeData$Builder/setReferenceComponentsById(java.util.Map)|",
      "|java+method:///org/sonar/server/measure/ws/SnapshotDtoToWsPeriods/snapshotToWsPeriods(org.sonar.db.component.SnapshotDto)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeData/builder()|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeData$Builder/setComponentCount(int)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeDataLoader/toComponentTreeQuery(org.sonarqube.ws.client.measure.ComponentTreeWsRequest,org.sonar.db.component.SnapshotDto)|",
      "|java+method:///org/sonar/db/component/ComponentDto/getId()|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeDataLoader$ComponentDtosAndTotal/access$000(org.sonar.server.measure.ws.ComponentTreeDataLoader$ComponentDtosAndTotal)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeData$Builder/setPeriods(java.util.List)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeDataLoader/searchMetrics(org.sonar.db.DbSession,org.sonarqube.ws.client.measure.ComponentTreeWsRequest)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeData$Builder/setMetrics(java.util.List)|",
      "|java+method:///org/sonar/db/DbClient/snapshotDao()|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getBaseComponentKey()|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeDataLoader/checkPermissions(org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeData$Builder/setMeasuresByComponentUuidAndMetric(com.google.common.collect.Table)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeData$Builder/setComponentsFromDb(java.util.List)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeDataLoader/searchComponents(org.sonar.db.DbSession,org.sonar.db.component.ComponentTreeQuery,org.sonarqube.ws.client.measure.ComponentTreeWsRequest)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/component/SnapshotDao/selectLastSnapshotByComponentId(org.sonar.db.DbSession,long)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeDataLoader/paginateComponents(java.util.List,int,org.sonarqube.ws.client.measure.ComponentTreeWsRequest)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeData$Builder/build()|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeDataLoader$ComponentDtosAndTotal/access$100(org.sonar.server.measure.ws.ComponentTreeDataLoader$ComponentDtosAndTotal)|",
      "|java+method:///org/sonar/server/component/ComponentFinder/getByUuidOrKey(org.sonar.db.DbSession,java.lang.String,java.lang.String,org.sonar.server.component.ComponentFinder$ParamNames)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getBaseComponentId()|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeData$Builder/setBaseComponent(org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeDataLoader/searchReferenceComponentsById(org.sonar.db.DbSession,java.util.List)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeDataLoader/searchMeasuresByComponentUuidAndMetric(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto,org.sonar.db.component.SnapshotDto,java.util.List,java.util.List,java.util.List,java.lang.Long)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeDataLoader/sortComponents(java.util.List,org.sonarqube.ws.client.measure.ComponentTreeWsRequest,java.util.List,com.google.common.collect.Table)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeDataLoader/searchDeveloperId(org.sonar.db.DbSession,org.sonarqube.ws.client.measure.ComponentTreeWsRequest)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeData$Builder/setReferenceComponentsById(java.util.Map)|",
      "|java+method:///org/sonar/server/measure/ws/SnapshotDtoToWsPeriods/snapshotToWsPeriods(org.sonar.db.component.SnapshotDto)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeData/builder()|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeData$Builder/setComponentCount(int)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeDataLoader/toComponentTreeQuery(org.sonarqube.ws.client.measure.ComponentTreeWsRequest,org.sonar.db.component.SnapshotDto)|",
      "|java+method:///org/sonar/db/component/ComponentDto/getId()|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeDataLoader$ComponentDtosAndTotal/access$000(org.sonar.server.measure.ws.ComponentTreeDataLoader$ComponentDtosAndTotal)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeData$Builder/setPeriods(java.util.List)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeDataLoader/searchMetrics(org.sonar.db.DbSession,org.sonarqube.ws.client.measure.ComponentTreeWsRequest)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeData$Builder/setMetrics(java.util.List)|",
      "|java+method:///org/sonar/db/DbClient/snapshotDao()|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getBaseComponentKey()|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeDataLoader/checkPermissions(org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeData$Builder/setMeasuresByComponentUuidAndMetric(com.google.common.collect.Table)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeData$Builder/setComponentsFromDb(java.util.List)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileProjectOperations/findNotNull(java.lang.String,org.sonar.db.DbSession)|",
    "called": "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByKey(org.sonar.db.DbSession,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/qualityprofile/QProfileValidations/checkProfileIsNotNull(org.sonar.db.qualityprofile.QualityProfileDto)|",
      "|java+method:///org/sonar/server/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByKey(org.sonar.db.DbSession,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/qualityprofile/QProfileValidations/checkProfileIsNotNull(org.sonar.db.qualityprofile.QualityProfileDto)|",
      "|java+method:///org/sonar/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByKey(org.sonar.db.DbSession,java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/getDefault(org.sonar.db.DbSession,java.lang.String)|",
    "called": "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectDefaultProfile(org.sonar.db.DbSession,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectDefaultProfile(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/db/DbClient/qualityProfileDao()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectDefaultProfile(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/db/DbClient/qualityProfileDao()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/setDefault(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto)|",
    "called": "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/update(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto,org.sonar.db.qualityprofile.QualityProfileDto%5B%5D)|",
    "v1Body": [
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/setDefault(boolean)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectDefaultProfile(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getLanguage()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/update(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto,org.sonar.db.qualityprofile.QualityProfileDto%5B%5D)|",
      "|java+method:///org/sonar/server/db/DbClient/qualityProfileDao()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/setDefault(boolean)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectDefaultProfile(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getLanguage()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/update(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto,org.sonar.db.qualityprofile.QualityProfileDto%5B%5D)|",
      "|java+method:///org/sonar/db/DbClient/qualityProfileDao()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/DefaultRuleFinder/findByIds(java.util.Collection)|",
    "called": "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///org/sonar/server/rule/DefaultRuleFinder/toRule(org.sonar.server.rule.Rule)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Collection/isEmpty()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/server/rule/index/RuleIndex/getByIds(java.util.Collection)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+method:///org/sonar/server/rule/DefaultRuleFinder/convertToRuleApi(org.sonar.db.DbSession,java.util.List)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectByIds(org.sonar.db.DbSession,java.util.List)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Collection/isEmpty()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/permission/PermissionService/applyPermissionTemplate(org.sonar.server.permission.ApplyPermissionTemplateQuery)|",
    "called": "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/server/permission/PermissionService/indexProjectPermissions()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/permission/ApplyPermissionTemplateQuery/getComponentKeys()|",
      "|java+method:///org/sonar/db/permission/PermissionRepository/applyPermissionTemplate(org.sonar.db.DbSession,java.lang.String,long)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/sonar/server/component/ComponentFinder/getByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/permission/ApplyPermissionTemplateQuery/getTemplateUuid()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/server/permission/PermissionPrivilegeChecker/checkGlobalAdminUser(org.sonar.server.user.UserSession)|",
      "|java+method:///org/sonar/db/component/ComponentDto/getId()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/sonar/server/permission/PermissionPrivilegeChecker/checkProjectAdminUserByComponentKey(org.sonar.server.user.UserSession,java.lang.String)|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/permission/PermissionService/applyPermissionTemplate(org.sonar.db.DbSession,org.sonar.server.permission.ApplyPermissionTemplateQuery)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/RegisterQualityProfiles/register(org.sonar.server.qualityprofile.QProfileName,java.util.Collection,org.sonar.db.DbSession)|",
    "called": "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByNameAndLanguage(java.lang.String,java.lang.String,org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/activate(org.sonar.db.DbSession,org.sonar.server.qualityprofile.RuleActivation,org.sonar.server.qualityprofile.QProfileName)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivation/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/api/rules/ActiveRuleParam/getKey()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileName/getLanguage()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/qualityprofile/RegisterQualityProfiles/templateKey(org.sonar.server.qualityprofile.QProfileName)|",
      "|java+method:///org/sonar/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/api/profiles/RulesProfile/getActiveRules()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/sonar/api/rules/ActiveRuleParam/getValue()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByNameAndLanguage(java.lang.String,java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/DbClient/loadedTemplateDao()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/create(org.sonar.db.DbSession,org.sonar.server.qualityprofile.QProfileName)|",
      "|java+method:///org/sonar/db/loadedtemplate/LoadedTemplateDao/insert(org.sonar.db.loadedtemplate.LoadedTemplateDto,org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getSeverity()|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getRepositoryKey()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/delete(org.sonar.db.DbSession,java.lang.String,boolean)|",
      "|java+constructor:///org/sonar/server/qualityprofile/RuleActivation/RuleActivation(org.sonar.api.rule.RuleKey)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivation/setParameter(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/sonar/db/loadedtemplate/LoadedTemplateDto/LoadedTemplateDto(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getActiveRuleParams()|",
      "|java+method:///org/sonar/api/utils/log/Logger/info(java.lang.String)|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getRuleKey()|",
      "|java+method:///org/sonar/api/rules/RulePriority/name()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileName/getName()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/activate(org.sonar.db.DbSession,org.sonar.server.qualityprofile.RuleActivation,org.sonar.server.qualityprofile.QProfileName)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivation/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/api/rules/ActiveRuleParam/getKey()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileName/getLanguage()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/qualityprofile/RegisterQualityProfiles/templateKey(org.sonar.server.qualityprofile.QProfileName)|",
      "|java+method:///org/sonar/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/api/profiles/RulesProfile/getActiveRules()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/sonar/api/rules/ActiveRuleParam/getValue()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByNameAndLanguage(java.lang.String,java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/DbClient/loadedTemplateDao()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/create(org.sonar.db.DbSession,org.sonar.server.qualityprofile.QProfileName)|",
      "|java+method:///org/sonar/db/loadedtemplate/LoadedTemplateDao/insert(org.sonar.db.loadedtemplate.LoadedTemplateDto,org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getSeverity()|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getRepositoryKey()|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/delete(org.sonar.db.DbSession,java.lang.String,boolean)|",
      "|java+constructor:///org/sonar/server/qualityprofile/RuleActivation/RuleActivation(org.sonar.api.rule.RuleKey)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivation/setParameter(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/sonar/db/loadedtemplate/LoadedTemplateDto/LoadedTemplateDto(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getActiveRuleParams()|",
      "|java+method:///org/sonar/api/utils/log/Logger/info(java.lang.String)|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///org/sonar/api/rules/ActiveRule/getRuleKey()|",
      "|java+method:///org/sonar/api/rules/RulePriority/name()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileName/getName()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/RuleActivator/cascadeDeactivation(org.sonar.db.qualityprofile.ActiveRuleKey,org.sonar.db.DbSession,boolean,boolean)|",
    "called": "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
    "v1Body": [
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleKey/ruleKey()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/activeRule()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/persist(org.sonar.server.qualityprofile.ActiveRuleChange,org.sonar.server.qualityprofile.RuleActivatorContext,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContextFactory/create(java.lang.String,org.sonar.api.rule.RuleKey,org.sonar.db.DbSession)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/createFor(org.sonar.server.qualityprofile.ActiveRuleChange$Type,org.sonar.db.qualityprofile.ActiveRuleKey)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/getInheritance()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectChildren(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/updateProfileDate(org.sonar.db.DbSession,org.sonar.server.qualityprofile.RuleActivatorContext)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleKey/qProfile()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/sonar/server/exceptions/BadRequestException/BadRequestException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/cascadeDeactivation(org.sonar.db.qualityprofile.ActiveRuleKey,org.sonar.db.DbSession,boolean,boolean)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleKey/of(java.lang.String,org.sonar.api.rule.RuleKey)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleKey/ruleKey()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/activeRule()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/persist(org.sonar.server.qualityprofile.ActiveRuleChange,org.sonar.server.qualityprofile.RuleActivatorContext,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContextFactory/create(java.lang.String,org.sonar.api.rule.RuleKey,org.sonar.db.DbSession)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/createFor(org.sonar.server.qualityprofile.ActiveRuleChange$Type,org.sonar.db.qualityprofile.ActiveRuleKey)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/getInheritance()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectChildren(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/updateProfileDate(org.sonar.db.DbSession,org.sonar.server.qualityprofile.RuleActivatorContext)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleKey/qProfile()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/sonar/server/exceptions/BadRequestException/BadRequestException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/cascadeDeactivation(org.sonar.db.qualityprofile.ActiveRuleKey,org.sonar.db.DbSession,boolean,boolean)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleKey/of(java.lang.String,org.sonar.api.rule.RuleKey)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/measure/ws/ComponentTreeDataLoader/toComponentTreeQuery(org.sonarqube.ws.client.measure.ComponentTreeWsRequest,org.sonar.db.component.SnapshotDto)|",
    "called": "|java+method:///org/sonar/db/component/ComponentTreeQuery$Builder/setPageSize(int)|",
    "v1Body": [
      "|java+method:///org/sonar/db/component/ComponentTreeQuery$Builder/setBaseSnapshot(org.sonar.db.component.SnapshotDto)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Iterable)|",
      "|java+method:///org/sonar/db/component/ComponentTreeQuery$Builder/setPageSize(int)|",
      "|java+method:///org/sonar/db/component/ComponentTreeQuery$Builder/build()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/sonar/db/component/SnapshotDto/getQualifier()|",
      "|java+method:///org/sonar/db/component/ComponentTreeQuery$Builder/setNameOrKeyQuery(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getQuery()|",
      "|java+method:///java/util/List/contains(java.lang.Object)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getPage()|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getPageSize()|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getAsc()|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/sonar/db/component/ComponentTreeQuery/builder()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getSort()|",
      "|java+method:///org/sonar/db/component/ComponentTreeQuery$Builder/setPage(int)|",
      "|java+method:///org/sonar/db/component/ComponentTreeQuery$Builder/setQualifiers(java.util.Collection)|",
      "|java+method:///com/google/common/collect/Iterables/filter(java.lang.Iterable,com.google.common.base.Predicate)|",
      "|java+method:///org/sonar/db/component/ComponentTreeQuery$Builder/setAsc(boolean)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeDataLoader/childrenQualifiers(org.sonarqube.ws.client.measure.ComponentTreeWsRequest,java.lang.String)|",
      "|java+method:///org/sonar/db/component/ComponentTreeQuery$Builder/setSortFields(java.util.List)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/component/ComponentTreeQuery$Builder/setBaseSnapshot(org.sonar.db.component.SnapshotDto)|",
      "|java+method:///org/sonar/db/component/ComponentTreeQuery$Builder/setPageSize(int)|",
      "|java+method:///org/sonar/db/component/ComponentTreeQuery$Builder/build()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/sonar/db/component/SnapshotDto/getQualifier()|",
      "|java+method:///org/sonar/db/component/ComponentTreeQuery$Builder/setNameOrKeyQuery(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getQuery()|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getPage()|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getPageSize()|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getAsc()|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/sonar/db/component/ComponentTreeQuery/builder()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Iterable)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeDataLoader/isSortByMetric(org.sonarqube.ws.client.measure.ComponentTreeWsRequest)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getSort()|",
      "|java+method:///org/sonar/db/component/ComponentTreeQuery$Builder/setPage(int)|",
      "|java+method:///org/sonar/db/component/ComponentTreeQuery$Builder/setQualifiers(java.util.Collection)|",
      "|java+method:///com/google/common/collect/Iterables/filter(java.lang.Iterable,com.google.common.base.Predicate)|",
      "|java+method:///org/sonar/db/component/ComponentTreeQuery$Builder/setAsc(boolean)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentTreeDataLoader/childrenQualifiers(org.sonarqube.ws.client.measure.ComponentTreeWsRequest,java.lang.String)|",
      "|java+method:///org/sonar/db/component/ComponentTreeQuery$Builder/setSortFields(java.util.List)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/startup/ClearRulesOverloadedDebt/clearDebt(org.sonar.db.DbSession)|",
    "called": "|java+method:///org/sonar/db/rule/RuleDao/selectAll(org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///org/sonar/server/rule/db/RuleDao/update(org.sonar.db.DbSession,org.sonar.db.Dto)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setRemediationCoefficient(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/api/utils/log/Logger/warn(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setSubCharacteristicId(java.lang.Integer)|",
      "|java+method:///org/sonar/server/db/DbClient/deprecatedRuleDao()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setRemediationFunction(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/selectAll(org.sonar.db.DbSession)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/server/startup/ClearRulesOverloadedDebt/isDebtOverridden(org.sonar.db.rule.RuleDto)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setRemediationOffset(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/utils/log/Logger/warn(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setUpdatedAt(long)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectAll(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setRemediationFunction(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDao/update(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setRemediationBaseEffort(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///org/sonar/server/startup/ClearRulesOverloadedDebt/isDebtOverridden(org.sonar.db.rule.RuleDto)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setRemediationGapMultiplier(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/RuleActivator/setParent(java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/sonar/db/DbSession/close()|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/setParent(org.sonar.db.DbSession,java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/setParent(org.sonar.db.DbSession,java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndexer/index(java.util.List)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/RuleUpdater/updateParameters(org.sonar.db.DbSession,org.sonar.server.rule.RuleUpdate,org.sonar.server.rule.RuleUpdater$Context)|",
    "called": "|java+method:///org/sonar/db/rule/RuleDto/getKey()|",
    "v1Body": [
      "|java+method:///org/sonar/db/rule/RuleDto/getTemplateId()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getKey()|",
      "|java+method:///org/sonar/server/rule/RuleUpdater$Context/access$000(org.sonar.server.rule.RuleUpdater$Context)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/qualityprofile/db/ActiveRuleDao/selectByRule(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/db/DbClient/deprecatedRuleDao()|",
      "|java+method:///org/sonar/server/qualityprofile/db/ActiveRuleDao/selectParamsByActiveRuleKey(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleKey)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/server/rule/RuleUpdate/isCustomRule()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/getKey()|",
      "|java+method:///org/sonar/server/db/DbClient/activeRuleDao()|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/selectTemplate(org.sonar.db.rule.RuleDto,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/rule/RuleUpdater/deleteOrUpdateParameters(org.sonar.db.DbSession,org.sonar.server.rule.RuleUpdate,org.sonar.db.rule.RuleDto,java.util.List,com.google.common.collect.Multimap,com.google.common.collect.Multimap)|",
      "|java+method:///com/google/common/collect/ArrayListMultimap/create()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/sonar/server/rule/RuleUpdate/isChangeParameters()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/rule/RuleDto/getTemplateId()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getKey()|",
      "|java+method:///org/sonar/server/rule/RuleUpdater$Context/access$000(org.sonar.server.rule.RuleUpdater$Context)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/selectByRule(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/db/DbClient/activeRuleDao()|",
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/sonar/server/rule/RuleUpdater/deleteOrUpdateParameters(org.sonar.db.DbSession,org.sonar.server.rule.RuleUpdate,org.sonar.db.rule.RuleDto,java.util.List,com.google.common.collect.Multimap,com.google.common.collect.Multimap)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+method:///com/google/common/collect/ArrayListMultimap/create()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/sonar/server/rule/RuleUpdate/isChangeParameters()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/getId()|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectById(long,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/selectParamsByActiveRuleId(org.sonar.db.DbSession,java.lang.Integer)|",
      "|java+method:///org/sonar/server/rule/RuleUpdate/isCustomRule()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/queue/CeQueueInitializer/initCe()|",
    "called": "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/computation/taskprocessor/CeProcessingScheduler/startScheduling()|",
      "|java+method:///org/sonar/server/computation/queue/CeQueueInitializer/initJmxCounters(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/computation/queue/CeQueueCleaner/clean(org.sonar.db.DbSession)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/computation/taskprocessor/CeProcessingScheduler/startScheduling()|",
      "|java+method:///org/sonar/server/computation/queue/CeQueueCleaner/clean(org.sonar.db.DbSession)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/ws/SearchResponseLoader/load(org.sonar.server.issue.ws.SearchResponseLoader$Collector,org.sonar.server.es.Facets)|",
    "called": "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseLoader$Collector/collect(java.util.List)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseLoader/loadUsers(org.sonar.server.issue.ws.SearchResponseLoader$Collector,org.sonar.db.DbSession,org.sonar.server.issue.ws.SearchResponseData)|",
      "|java+constructor:///org/sonar/server/issue/ws/SearchResponseData/SearchResponseData(java.util.List)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseLoader/completeTotalDebtFromFacet(org.sonar.server.es.Facets,org.sonar.server.issue.ws.SearchResponseData)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseLoader/loadActionPlans(org.sonar.server.issue.ws.SearchResponseLoader$Collector,org.sonar.db.DbSession,org.sonar.server.issue.ws.SearchResponseData)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseData/getIssues()|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseLoader/loadRules(org.sonar.server.issue.ws.SearchResponseLoader$Collector,org.sonar.db.DbSession,org.sonar.server.issue.ws.SearchResponseData)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseLoader/loadComments(org.sonar.server.issue.ws.SearchResponseLoader$Collector,org.sonar.db.DbSession,org.sonar.server.issue.ws.SearchResponseData)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseLoader/loadComponents(org.sonar.server.issue.ws.SearchResponseLoader$Collector,org.sonar.db.DbSession,org.sonar.server.issue.ws.SearchResponseData)|",
      "|java+method:///org/sonar/db/issue/IssueDao/selectByOrderedKeys(org.sonar.db.DbSession,java.util.List)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseLoader$Collector/getIssueKeys()|",
      "|java+method:///org/sonar/db/DbClient/issueDao()|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseLoader/loadActionsAndTransitions(org.sonar.server.issue.ws.SearchResponseLoader$Collector,org.sonar.server.issue.ws.SearchResponseData)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseLoader$Collector/collect(java.util.List)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseLoader/loadUsers(org.sonar.server.issue.ws.SearchResponseLoader$Collector,org.sonar.db.DbSession,org.sonar.server.issue.ws.SearchResponseData)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseLoader/completeTotalEffortFromFacet(org.sonar.server.es.Facets,org.sonar.server.issue.ws.SearchResponseData)|",
      "|java+constructor:///org/sonar/server/issue/ws/SearchResponseData/SearchResponseData(java.util.List)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseData/getIssues()|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseLoader/loadRules(org.sonar.server.issue.ws.SearchResponseLoader$Collector,org.sonar.db.DbSession,org.sonar.server.issue.ws.SearchResponseData)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseLoader/loadComments(org.sonar.server.issue.ws.SearchResponseLoader$Collector,org.sonar.db.DbSession,org.sonar.server.issue.ws.SearchResponseData)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseLoader/loadComponents(org.sonar.server.issue.ws.SearchResponseLoader$Collector,org.sonar.db.DbSession,org.sonar.server.issue.ws.SearchResponseData)|",
      "|java+method:///org/sonar/db/issue/IssueDao/selectByOrderedKeys(org.sonar.db.DbSession,java.util.List)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseLoader$Collector/getIssueKeys()|",
      "|java+method:///org/sonar/db/DbClient/issueDao()|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseLoader/loadActionsAndTransitions(org.sonar.server.issue.ws.SearchResponseLoader$Collector,org.sonar.server.issue.ws.SearchResponseData)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileLoader/getAllProfileStats()|",
    "called": "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileLoader/findAll()|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndex/getStatsByProfileKeys(java.util.List)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/search/IndexClient/get(java.lang.Class)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileLoader/findAll()|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndex/getStatsByProfileKeys(java.util.List)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/RegisterRules/removeRule(org.sonar.db.DbSession,java.util.List,org.sonar.db.rule.RuleDto)|",
    "called": "|java+method:///org/sonar/db/rule/RuleDto/getKey()|",
    "v1Body": [
      "|java+method:///org/sonar/server/rule/db/RuleDao/update(org.sonar.db.DbSession,org.sonar.db.Dto)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setSystemTags(java.util.Set)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getKey()|",
      "|java+method:///java/util/Collections/emptySet()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/sonar/api/utils/log/Logger/info(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setTags(java.util.Set)|",
      "|java+method:///org/sonar/server/db/DbClient/deprecatedRuleDao()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setStatus(org.sonar.api.rule.RuleStatus)|",
      "|java+method:///org/sonar/db/DbSession/commit()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/rule/RuleDto/setSystemTags(java.util.Set)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getKey()|",
      "|java+method:///java/util/Collections/emptySet()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/sonar/api/utils/log/Logger/info(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setTags(java.util.Set)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/server/rule/RegisterRules/update(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setStatus(org.sonar.api.rule.RuleStatus)|",
      "|java+method:///org/sonar/db/DbSession/commit()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/RuleActivator/deactivate(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto)|",
    "called": "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/getKey()|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/sonar/server/qualityprofile/db/ActiveRuleDao/selectByRule(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto)|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/deactivate(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleKey,boolean)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/getKey()|",
      "|java+method:///org/sonar/server/db/DbClient/activeRuleDao()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/deactivate(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleKey,boolean)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/selectByRule(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/getKey()|",
      "|java+method:///org/sonar/db/DbClient/activeRuleDao()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/ws/SearchDataLoader/findProjectProfiles(org.sonarqube.ws.client.qualityprofile.SearchWsRequest)|",
    "called": "|java+method:///org/sonar/db/DbSession/close()|",
    "v1Body": [
      "|java+method:///org/sonar/api/resources/Language/getKey()|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonarqube/ws/client/qualityprofile/SearchWsRequest/getProjectKey()|",
      "|java+method:///org/sonar/api/resources/Languages/all()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/db/component/ComponentDto/key()|",
      "|java+method:///org/sonarqube/ws/client/qualityprofile/SearchWsRequest/getProfileName()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/sonar/server/qualityprofile/ws/SearchDataLoader/getProfile(org.sonar.db.DbSession,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/ws/SearchDataLoader/getProject(java.lang.String,org.sonar.db.DbSession)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/qualityprofile/ws/SearchDataLoader/lookupByProfileName(org.sonar.db.DbSession,java.util.Map,java.util.Set,java.lang.String)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///org/sonar/server/qualityprofile/ws/SearchDataLoader/lookupDefaults(org.sonar.db.DbSession,java.util.Map,java.util.Set)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonarqube/ws/client/qualityprofile/SearchWsRequest/getProjectKey()|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+constructor:///java/util/HashMap/HashMap(int)|",
      "|java+method:///org/sonar/server/qualityprofile/ws/SearchDataLoader/getLanguageKeys()|",
      "|java+method:///org/sonar/server/qualityprofile/ws/SearchDataLoader/lookupByModuleKey(org.sonar.db.DbSession,java.util.Map,java.util.Set,java.lang.String)|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonarqube/ws/client/qualityprofile/SearchWsRequest/getProfileName()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/measure/custom/ws/CreateAction/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/setCreatedAt(long)|",
      "|java+method:///org/sonar/server/user/index/UserIndex/getByLogin(java.lang.String)|",
      "|java+method:///org/sonar/server/measure/custom/ws/CreateAction/checkIsProjectOrModule(org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDao/insert(org.sonar.db.DbSession,org.sonar.db.measure.custom.CustomMeasureDto)|",
      "|java+method:///org/sonar/db/metric/MetricDto/getId()|",
      "|java+method:///org/sonar/db/DbClient/customMeasureDao()|",
      "|java+method:///org/sonar/server/component/ComponentFinder/getByUuidOrKey(org.sonar.db.DbSession,java.lang.String,java.lang.String,org.sonar.server.component.ComponentFinder$ParamNames)|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/close()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/setUserLogin(java.lang.String)|",
      "|java+constructor:///org/sonar/db/measure/custom/CustomMeasureDto/CustomMeasureDto()|",
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+method:///org/sonar/server/measure/custom/ws/CreateAction/checkMeasureDoesNotExistAlready(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto,org.sonar.db.metric.MetricDto)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/sonar/server/measure/custom/ws/CustomMeasureValidator/checkPermissions(org.sonar.server.user.UserSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/server/measure/custom/ws/CreateAction/searchMetric(org.sonar.db.DbSession,org.sonar.api.server.ws.Request)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/setUpdatedAt(long)|",
      "|java+method:///org/sonar/db/component/ComponentDto/uuid()|",
      "|java+method:///org/sonar/server/measure/custom/ws/CustomMeasureJsonWriter/write(org.sonar.api.utils.text.JsonWriter,org.sonar.db.measure.custom.CustomMeasureDto,org.sonar.db.metric.MetricDto,org.sonar.db.component.ComponentDto,org.sonar.api.user.User,boolean,java.util.Collection)|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/setComponentUuid(java.lang.String)|",
      "|java+method:///org/sonar/server/user/index/UserDoc/login()|",
      "|java+method:///org/sonar/server/measure/custom/ws/CustomMeasureValidator/setMeasureValue(org.sonar.db.measure.custom.CustomMeasureDto,java.lang.String,org.sonar.db.metric.MetricDto)|",
      "|java+method:///org/sonar/api/server/ws/Response/newJsonWriter()|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/setMetricId(int)|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/setCreatedAt(long)|",
      "|java+method:///org/sonar/server/measure/custom/ws/CreateAction/checkIsProjectOrModule(org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/db/metric/MetricDto/getId()|",
      "|java+method:///org/sonar/db/DbClient/customMeasureDao()|",
      "|java+method:///org/sonar/server/component/ComponentFinder/getByUuidOrKey(org.sonar.db.DbSession,java.lang.String,java.lang.String,org.sonar.server.component.ComponentFinder$ParamNames)|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonar/db/user/UserDto/getLogin()|",
      "|java+method:///org/sonar/db/user/UserDao/selectOrFailByLogin(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/close()|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/setDescription(java.lang.String)|",
      "|java+constructor:///org/sonar/db/measure/custom/CustomMeasureDto/CustomMeasureDto()|",
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+method:///org/sonar/server/measure/custom/ws/CreateAction/checkMeasureDoesNotExistAlready(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto,org.sonar.db.metric.MetricDto)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/sonar/server/measure/custom/ws/CustomMeasureValidator/checkPermissions(org.sonar.server.user.UserSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/server/measure/custom/ws/CreateAction/searchMetric(org.sonar.db.DbSession,org.sonar.api.server.ws.Request)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDao/insert(org.sonar.db.DbSession,org.sonar.db.measure.custom.CustomMeasureDto)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/setUpdatedAt(long)|",
      "|java+method:///org/sonar/db/component/ComponentDto/uuid()|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/setComponentUuid(java.lang.String)|",
      "|java+method:///org/sonar/db/DbClient/userDao()|",
      "|java+method:///org/sonar/server/measure/custom/ws/CustomMeasureValidator/setMeasureValue(org.sonar.db.measure.custom.CustomMeasureDto,java.lang.String,org.sonar.db.metric.MetricDto)|",
      "|java+method:///org/sonar/api/server/ws/Response/newJsonWriter()|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/setMetricId(int)|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonar/server/measure/custom/ws/CustomMeasureJsonWriter/write(org.sonar.api.utils.text.JsonWriter,org.sonar.db.measure.custom.CustomMeasureDto,org.sonar.db.metric.MetricDto,org.sonar.db.component.ComponentDto,org.sonar.db.user.UserDto,boolean,java.util.Collection)|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/setUserLogin(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/user/ws/GroupsAction/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/db/user/GroupMembershipQuery/builder()|",
    "v1Body": [
      "|java+method:///org/sonar/api/utils/Paging$Builder/andTotal(int)|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonar/db/user/UserDao/selectByLogin(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/db/user/GroupMembershipQuery$Builder/pageSize(java.lang.Integer)|",
      "|java+constructor:///org/sonar/server/exceptions/NotFoundException/NotFoundException(java.lang.String)|",
      "|java+method:///org/sonar/server/user/UserSession/checkPermission(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/db/user/GroupMembershipQuery$Builder/groupSearch(java.lang.String)|",
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/user/ws/GroupsAction/getMembership(java.lang.String)|",
      "|java+method:///org/sonar/db/user/GroupMembershipQuery/builder()|",
      "|java+method:///org/sonar/api/utils/Paging$Builder/withPageSize(int)|",
      "|java+method:///org/sonar/db/user/GroupMembershipQuery$Builder/login(java.lang.String)|",
      "|java+method:///org/sonar/server/db/DbClient/groupMembershipDao()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginObject()|",
      "|java+method:///org/sonar/api/utils/Paging/offset()|",
      "|java+method:///org/sonar/api/utils/Paging/forPageIndex(int)|",
      "|java+method:///org/sonar/db/user/UserDto/getId()|",
      "|java+method:///org/sonar/db/user/GroupMembershipQuery$Builder/membership(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsInt(java.lang.String)|",
      "|java+method:///org/sonar/db/user/GroupMembershipQuery$Builder/build()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/db/user/GroupMembershipDao/selectGroups(org.apache.ibatis.session.SqlSession,org.sonar.db.user.GroupMembershipQuery,java.lang.Long,int,int)|",
      "|java+method:///org/sonar/server/db/DbClient/userDao()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/close()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/sonar/server/user/UserSession/checkLoggedIn()|",
      "|java+method:///org/sonar/db/user/GroupMembershipQuery$Builder/pageIndex(java.lang.Integer)|",
      "|java+method:///org/sonar/api/server/ws/Response/newJsonWriter()|",
      "|java+method:///org/sonar/server/user/ws/GroupsAction/writeGroups(org.sonar.api.utils.text.JsonWriter,java.util.List)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endObject()|",
      "|java+method:///org/sonar/server/user/ws/GroupsAction/writePaging(org.sonar.api.utils.text.JsonWriter,org.sonar.api.utils.Paging)|",
      "|java+method:///org/sonar/db/user/GroupMembershipDao/countGroups(org.apache.ibatis.session.SqlSession,org.sonar.db.user.GroupMembershipQuery,java.lang.Long)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/utils/Paging$Builder/andTotal(int)|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonar/db/user/UserDao/selectByLogin(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/db/user/GroupMembershipQuery$Builder/pageSize(java.lang.Integer)|",
      "|java+constructor:///org/sonar/server/exceptions/NotFoundException/NotFoundException(java.lang.String)|",
      "|java+method:///org/sonar/server/user/UserSession/checkPermission(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/db/user/GroupMembershipQuery$Builder/groupSearch(java.lang.String)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/user/ws/GroupsAction/getMembership(java.lang.String)|",
      "|java+method:///org/sonar/db/user/GroupMembershipQuery$Builder/login(java.lang.String)|",
      "|java+method:///org/sonar/db/user/GroupMembershipQuery/builder()|",
      "|java+method:///org/sonar/db/DbClient/groupMembershipDao()|",
      "|java+method:///org/sonar/api/utils/Paging$Builder/withPageSize(int)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginObject()|",
      "|java+method:///org/sonar/api/utils/Paging/offset()|",
      "|java+method:///org/sonar/api/utils/Paging/forPageIndex(int)|",
      "|java+method:///org/sonar/db/user/UserDto/getId()|",
      "|java+method:///org/sonar/db/user/GroupMembershipQuery$Builder/membership(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsInt(java.lang.String)|",
      "|java+method:///org/sonar/db/user/GroupMembershipQuery$Builder/build()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/db/DbClient/userDao()|",
      "|java+method:///org/sonar/db/user/GroupMembershipDao/selectGroups(org.apache.ibatis.session.SqlSession,org.sonar.db.user.GroupMembershipQuery,java.lang.Long,int,int)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/close()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/sonar/server/user/UserSession/checkLoggedIn()|",
      "|java+method:///org/sonar/db/user/GroupMembershipQuery$Builder/pageIndex(java.lang.Integer)|",
      "|java+method:///org/sonar/api/server/ws/Response/newJsonWriter()|",
      "|java+method:///org/sonar/server/user/ws/GroupsAction/writeGroups(org.sonar.api.utils.text.JsonWriter,java.util.List)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endObject()|",
      "|java+method:///org/sonar/server/user/ws/GroupsAction/writePaging(org.sonar.api.utils.text.JsonWriter,org.sonar.api.utils.Paging)|",
      "|java+method:///org/sonar/db/user/GroupMembershipDao/countGroups(org.apache.ibatis.session.SqlSession,org.sonar.db.user.GroupMembershipQuery,java.lang.Long)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/measure/ws/ComponentTreeDataLoader/searchComponents(org.sonar.db.DbSession,org.sonar.db.component.ComponentTreeQuery,org.sonarqube.ws.client.measure.ComponentTreeWsRequest)|",
    "called": "|java+method:///org/sonar/db/component/ComponentDao/selectDirectChildren(org.sonar.db.DbSession,org.sonar.db.component.ComponentTreeQuery)|",
    "v1Body": [
      "|java+method:///java/lang/String/hashCode()|",
      "|java+method:///org/sonar/db/component/ComponentDao/selectDirectChildren(org.sonar.db.DbSession,org.sonar.db.component.ComponentTreeQuery)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/sonar/db/component/ComponentDao/selectAllChildren(org.sonar.db.DbSession,org.sonar.db.component.ComponentTreeQuery)|",
      "|java+method:///org/sonar/db/component/ComponentDao/countAllChildren(org.sonar.db.DbSession,org.sonar.db.component.ComponentTreeQuery)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///org/sonar/server/measure/ws/ComponentTreeDataLoader$ComponentDtosAndTotal/ComponentTreeDataLoader$ComponentDtosAndTotal(java.util.List,int,org.sonar.server.measure.ws.ComponentTreeDataLoader$1)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getStrategy()|",
      "|java+method:///org/sonar/db/DbClient/componentDao()|",
      "|java+method:///org/sonar/db/component/ComponentDao/countDirectChildren(org.sonar.db.DbSession,org.sonar.db.component.ComponentTreeQuery)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/String/hashCode()|",
      "|java+method:///org/sonar/db/component/ComponentDao/selectDirectChildren(org.sonar.db.DbSession,org.sonar.db.component.ComponentTreeQuery)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/sonar/db/component/ComponentTreeQuery/getQualifiers()|",
      "|java+method:///org/sonar/db/component/ComponentDao/selectAllChildren(org.sonar.db.DbSession,org.sonar.db.component.ComponentTreeQuery)|",
      "|java+method:///java/util/Collection/isEmpty()|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+method:///org/sonar/db/component/ComponentDao/countAllChildren(org.sonar.db.DbSession,org.sonar.db.component.ComponentTreeQuery)|",
      "|java+method:///java/util/Objects/requireNonNull(java.lang.Object)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///org/sonar/server/measure/ws/ComponentTreeDataLoader$ComponentDtosAndTotal/ComponentTreeDataLoader$ComponentDtosAndTotal(java.util.List,int,org.sonar.server.measure.ws.ComponentTreeDataLoader$1)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentTreeWsRequest/getStrategy()|",
      "|java+method:///org/sonar/db/DbClient/componentDao()|",
      "|java+method:///org/sonar/db/component/ComponentDao/countDirectChildren(org.sonar.db.DbSession,org.sonar.db.component.ComponentTreeQuery)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/RegisterRules/mergeParams(org.sonar.api.server.rule.RulesDefinition$Rule,org.sonar.db.rule.RuleDto,org.sonar.db.DbSession)|",
    "called": "|java+method:///org/sonar/db/rule/RuleDao/selectRuleParamsByRuleKey(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|",
    "v1Body": [
      "|java+method:///org/sonar/server/db/DbClient/activeRuleDao()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Param/type()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isEmpty(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/db/ActiveRuleDao/selectByRule(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto)|",
      "|java+method:///org/sonar/server/qualityprofile/db/ActiveRuleDao/deleteParamsByRuleParam(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto,java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleParamDto/createFor(org.sonar.db.rule.RuleParamDto)|",
      "|java+method:///org/sonar/server/qualityprofile/db/ActiveRuleDao/insertParam(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleDto,org.sonar.db.qualityprofile.ActiveRuleParamDto)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleParamDto/setValue(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/setName(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RuleParamType/toString()|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/deleteRuleParam(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto,org.sonar.db.rule.RuleParamDto)|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/setDefaultValue(java.lang.String)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/selectRuleParamsByRuleKey(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/params()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getKey()|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/setType(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Param/description()|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/insertRuleParam(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto,org.sonar.db.rule.RuleParamDto)|",
      "|java+method:///org/sonar/server/rule/RegisterRules/mergeParam(org.sonar.db.rule.RuleParamDto,org.sonar.api.server.rule.RulesDefinition$Param)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Param/key()|",
      "|java+method:///org/sonar/server/db/DbClient/deprecatedRuleDao()|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/getName()|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Param/defaultValue()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/createFor(org.sonar.db.rule.RuleDto)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/param(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/updateRuleParam(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto,org.sonar.db.rule.RuleParamDto)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectRuleParamsByRuleKey(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isEmpty(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleParamDto/createFor(org.sonar.db.rule.RuleParamDto)|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/getName()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/deleteParamsByRuleParam(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto,java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/setName(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RuleParamType/toString()|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/setDefaultValue(java.lang.String)|",
      "|java+method:///org/sonar/db/DbClient/activeRuleDao()|",
      "|java+method:///org/sonar/db/rule/RuleDao/updateRuleParam(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto,org.sonar.db.rule.RuleParamDto)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/getId()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Param/type()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/params()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getKey()|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/setType(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Param/description()|",
      "|java+method:///org/sonar/server/rule/RegisterRules/mergeParam(org.sonar.db.rule.RuleParamDto,org.sonar.api.server.rule.RulesDefinition$Param)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Param/key()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/db/rule/RuleDao/insertRuleParam(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto,org.sonar.db.rule.RuleParamDto)|",
      "|java+method:///org/sonar/db/rule/RuleDao/deleteRuleParam(org.sonar.db.DbSession,int)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/selectByRule(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleParamDto/setValue(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Param/defaultValue()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/createFor(org.sonar.db.rule.RuleDto)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/insertParam(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleDto,org.sonar.db.qualityprofile.ActiveRuleParamDto)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/param(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/measure/custom/ws/UpdateAction/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/server/user/index/UserIndex/getByLogin(java.lang.String)|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/getComponentUuid()|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsInt(java.lang.String)|",
      "|java+method:///org/sonar/server/measure/custom/ws/UpdateAction/setDescription(org.sonar.db.measure.custom.CustomMeasureDto,java.lang.String)|",
      "|java+method:///org/sonar/db/DbClient/metricDao()|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDao/update(org.sonar.db.DbSession,org.sonar.db.measure.custom.CustomMeasureDto)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/close()|",
      "|java+method:///org/sonar/api/server/ws/Response/newJsonWriter()|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/setUserLogin(java.lang.String)|",
      "|java+method:///org/sonar/db/metric/MetricDao/selectOrFailById(org.sonar.db.DbSession,long)|",
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+method:///org/sonar/server/measure/custom/ws/UpdateAction/checkParameters(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/server/measure/custom/ws/CustomMeasureValidator/checkPermissions(org.sonar.server.user.UserSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDao/selectOrFail(org.sonar.db.DbSession,long)|",
      "|java+method:///org/sonar/db/DbClient/customMeasureDao()|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/getMetricId()|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/setUpdatedAt(long)|",
      "|java+method:///org/sonar/server/measure/custom/ws/CustomMeasureJsonWriter/write(org.sonar.api.utils.text.JsonWriter,org.sonar.db.measure.custom.CustomMeasureDto,org.sonar.db.metric.MetricDto,org.sonar.db.component.ComponentDto,org.sonar.api.user.User,boolean,java.util.Collection)|",
      "|java+method:///org/sonar/api/user/User/login()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/db/DbClient/componentDao()|",
      "|java+method:///org/sonar/db/component/ComponentDao/selectOrFailByUuid(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/measure/custom/ws/UpdateAction/setValue(org.sonar.db.measure.custom.CustomMeasureDto,java.lang.String,org.sonar.db.metric.MetricDto)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/getComponentUuid()|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsInt(java.lang.String)|",
      "|java+method:///org/sonar/server/measure/custom/ws/UpdateAction/setDescription(org.sonar.db.measure.custom.CustomMeasureDto,java.lang.String)|",
      "|java+method:///org/sonar/db/user/UserDao/selectOrFailByLogin(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/setUpdatedAt(long)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/close()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/api/server/ws/Response/newJsonWriter()|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///org/sonar/db/metric/MetricDao/selectOrFailById(org.sonar.db.DbSession,long)|",
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+method:///org/sonar/server/measure/custom/ws/UpdateAction/checkParameters(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/server/measure/custom/ws/CustomMeasureValidator/checkPermissions(org.sonar.server.user.UserSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDao/selectOrFail(org.sonar.db.DbSession,long)|",
      "|java+method:///org/sonar/db/DbClient/customMeasureDao()|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/getMetricId()|",
      "|java+method:///org/sonar/db/DbClient/metricDao()|",
      "|java+method:///org/sonar/db/user/UserDto/getLogin()|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDao/update(org.sonar.db.DbSession,org.sonar.db.measure.custom.CustomMeasureDto)|",
      "|java+method:///org/sonar/db/DbClient/userDao()|",
      "|java+method:///org/sonar/db/DbClient/componentDao()|",
      "|java+method:///org/sonar/db/component/ComponentDao/selectOrFailByUuid(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/measure/custom/ws/UpdateAction/setValue(org.sonar.db.measure.custom.CustomMeasureDto,java.lang.String,org.sonar.db.metric.MetricDto)|",
      "|java+method:///org/sonar/server/measure/custom/ws/CustomMeasureJsonWriter/write(org.sonar.api.utils.text.JsonWriter,org.sonar.db.measure.custom.CustomMeasureDto,org.sonar.db.metric.MetricDto,org.sonar.db.component.ComponentDto,org.sonar.db.user.UserDto,boolean,java.util.Collection)|",
      "|java+method:///org/sonar/db/measure/custom/CustomMeasureDto/setUserLogin(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/ws/ChangelogAction/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/db/DbSession/close()|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/api/utils/Paging$Builder/withPageSize(int)|",
      "|java+method:///org/sonar/server/es/SearchOptions/getLimit()|",
      "|java+constructor:///org/sonar/server/qualityprofile/QProfileActivityQuery/QProfileActivityQuery()|",
      "|java+method:///org/sonar/server/search/Result/getTotal()|",
      "|java+constructor:///org/sonar/server/es/SearchOptions/SearchOptions()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/paramAsDateTime(java.lang.String)|",
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivityQuery/setSince(java.util.Date)|",
      "|java+method:///org/sonar/api/utils/Paging/forPageIndex(int)|",
      "|java+method:///org/sonar/server/qualityprofile/ws/QProfileIdentificationParamUtils/getProfileKeyFromParameters(org.sonar.api.server.ws.Request,org.sonar.server.qualityprofile.QProfileFactory,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/es/SearchOptions/setPage(int,int)|",
      "|java+method:///org/sonar/api/utils/Paging$Builder/andTotal(int)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivityQuery/setTo(java.util.Date)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsInt(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivityQuery/setQprofileKey(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/ws/ChangelogAction/writeResponse(org.sonar.api.utils.text.JsonWriter,org.sonar.server.search.Result,org.sonar.api.utils.Paging)|",
      "|java+constructor:///org/sonar/server/exceptions/NotFoundException/NotFoundException(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/ws/ChangelogAction/searchActivities(org.sonar.server.qualityprofile.QProfileActivityQuery,org.sonar.server.es.SearchOptions)|",
      "|java+method:///org/sonar/api/server/ws/Response/newJsonWriter()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/api/utils/Paging$Builder/withPageSize(int)|",
      "|java+method:///org/sonar/server/es/SearchOptions/getLimit()|",
      "|java+constructor:///org/sonar/server/qualityprofile/QProfileActivityQuery/QProfileActivityQuery()|",
      "|java+method:///org/sonar/server/search/Result/getTotal()|",
      "|java+constructor:///org/sonar/server/es/SearchOptions/SearchOptions()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/paramAsDateTime(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivityQuery/setSince(java.util.Date)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/api/utils/Paging/forPageIndex(int)|",
      "|java+method:///org/sonar/server/qualityprofile/ws/QProfileIdentificationParamUtils/getProfileKeyFromParameters(org.sonar.api.server.ws.Request,org.sonar.server.qualityprofile.QProfileFactory,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/es/SearchOptions/setPage(int,int)|",
      "|java+method:///org/sonar/api/utils/Paging$Builder/andTotal(int)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivityQuery/setTo(java.util.Date)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsInt(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivityQuery/setQprofileKey(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/ws/ChangelogAction/writeResponse(org.sonar.api.utils.text.JsonWriter,org.sonar.server.search.Result,org.sonar.api.utils.Paging)|",
      "|java+constructor:///org/sonar/server/exceptions/NotFoundException/NotFoundException(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/ws/ChangelogAction/searchActivities(org.sonar.server.qualityprofile.QProfileActivityQuery,org.sonar.server.es.SearchOptions)|",
      "|java+method:///org/sonar/api/server/ws/Response/newJsonWriter()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+constructor:///org/sonar/server/computation/issue/RuleImpl/RuleImpl(org.sonar.db.rule.RuleDto)|",
    "called": "|java+method:///org/sonar/db/rule/RuleDto/getKey()|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///com/google/common/collect/Sets/union(java.util.Set,java.util.Set)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getTags()|",
      "|java+method:///org/sonar/server/computation/issue/RuleImpl/effectiveRemediationFunction(org.sonar.db.rule.RuleDto)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getSystemTags()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getName()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getEffectiveSubCharacteristicId()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getStatus()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getKey()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getId()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///com/google/common/collect/Sets/union(java.util.Set,java.util.Set)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getTags()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getType()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getSystemTags()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getName()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getStatus()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getKey()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getId()|",
      "|java+method:///org/sonar/api/rules/RuleType/valueOf(int)|",
      "|java+method:///org/sonar/server/computation/issue/RuleImpl/effectiveRemediationFunction(org.sonar.db.rule.RuleDto)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/debt/DebtModelBackup/reset()|",
    "called": "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
    "v1Body": [
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/selectEnabledAndNonManual(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/debt/DebtModelBackup/checkPermission()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Context/repositories()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/debt/DebtModelBackup/restoreCharacteristics(org.sonar.db.DbSession,org.sonar.server.debt.DebtModelXMLExporter$DebtModel,java.util.Date)|",
      "|java+method:///org/sonar/server/db/DbClient/deprecatedRuleDao()|",
      "|java+method:///org/sonar/server/debt/DebtModelBackup/resetRules(java.util.List,java.util.List,java.util.List,java.util.Date,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/rule/RuleDefinitionsLoader/load()|",
      "|java+constructor:///java/util/Date/Date(long)|",
      "|java+method:///org/sonar/server/debt/DebtModelBackup/loadModelFromPlugin(java.lang.String)|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Repository/rules()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/server/rule/index/RuleIndexer/index()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectEnabled(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/debt/DebtModelBackup/checkPermission()|",
      "|java+method:///org/sonar/server/rule/RuleDefinitionsLoader/load()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Context/repositories()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///org/sonar/server/debt/DebtModelBackup/resetRules(java.util.List,java.util.List,long,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Repository/rules()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileExporters/wrap(org.sonar.db.qualityprofile.QualityProfileDto)|",
    "called": "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleKey/ruleKey()|",
      "|java+method:///org/sonar/api/profiles/RulesProfile/activateRule(org.sonar.api.rules.Rule,org.sonar.api.rules.RulePriority)|",
      "|java+method:///org/sonar/api/rules/ActiveRule/setParameter(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/sonar/api/profiles/RulesProfile/RulesProfile(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/api/rules/RulePriority/valueOf(java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRule/severity()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getName()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRule/key()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRule/params()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileLoader/findActiveRulesByProfile(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getLanguage()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/api/rules/RuleFinder/findByKey(org.sonar.api.rule.RuleKey)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Lists/transform(java.util.List,com.google.common.base.Function)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/getSeverityString()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
      "|java+method:///org/sonar/api/profiles/RulesProfile/activateRule(org.sonar.api.rules.Rule,org.sonar.api.rules.RulePriority)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/selectParamsByActiveRuleIds(org.sonar.db.DbSession,java.util.List)|",
      "|java+method:///org/sonar/api/rules/ActiveRule/setParameter(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/sonar/api/profiles/RulesProfile/RulesProfile(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/api/rules/RulePriority/valueOf(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleParamDto/getKey()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getName()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/getKey()|",
      "|java+method:///com/google/common/collect/FluentIterable/index(com.google.common.base.Function)|",
      "|java+method:///org/sonar/db/DbClient/activeRuleDao()|",
      "|java+method:///com/google/common/collect/FluentIterable/from(java.lang.Iterable)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleKey/ruleKey()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/selectByProfileKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getLanguage()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/api/rules/RuleFinder/findByKey(org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleParamDto/getValue()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/getId()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/common/collect/ListMultimap/get(java.lang.Object)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/IssueCommentService/addComment(java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/sonar/db/DbSession/close()|",
    "v1Body": [
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/core/issue/IssueChangeContext/createUser(java.util.Date,java.lang.String)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/issue/IssueCommentService/findComments(java.lang.String)|",
      "|java+constructor:///org/sonar/server/exceptions/BadRequestException/BadRequestException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+method:///org/sonar/core/issue/IssueUpdater/addComment(org.sonar.core.issue.DefaultIssue,java.lang.String,org.sonar.core.issue.IssueChangeContext)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/sonar/server/issue/IssueService/getByKeyForUpdate(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/issue/IssueCommentService/verifyLoggedIn(org.sonar.server.user.UserSession)|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/issue/IssueService/saveIssue(org.sonar.db.DbSession,org.sonar.core.issue.DefaultIssue,org.sonar.core.issue.IssueChangeContext,java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/toDefaultIssue()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/core/issue/IssueChangeContext/createUser(java.util.Date,java.lang.String)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/issue/IssueCommentService/findComments(java.lang.String)|",
      "|java+constructor:///org/sonar/server/exceptions/BadRequestException/BadRequestException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/sonar/server/issue/IssueUpdater/addComment(org.sonar.core.issue.DefaultIssue,java.lang.String,org.sonar.core.issue.IssueChangeContext)|",
      "|java+method:///org/sonar/server/issue/IssueService/getByKeyForUpdate(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/issue/IssueCommentService/verifyLoggedIn(org.sonar.server.user.UserSession)|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/issue/IssueService/saveIssue(org.sonar.db.DbSession,org.sonar.core.issue.DefaultIssue,org.sonar.core.issue.IssueChangeContext,java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/toDefaultIssue()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/IssueService/setTags(java.lang.String,java.util.Collection)|",
    "called": "|java+method:///org/sonar/db/DbSession/close()|",
    "v1Body": [
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/core/issue/IssueChangeContext/createUser(java.util.Date,java.lang.String)|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+method:///org/sonar/server/issue/IssueService/getByKeyForUpdate(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/issue/IssueService/verifyLoggedIn()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/issue/IssueService/saveIssue(org.sonar.db.DbSession,org.sonar.core.issue.DefaultIssue,org.sonar.core.issue.IssueChangeContext,java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/toDefaultIssue()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/tags()|",
      "|java+method:///org/sonar/core/issue/IssueUpdater/setTags(org.sonar.core.issue.DefaultIssue,java.util.Collection,org.sonar.core.issue.IssueChangeContext)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/core/issue/IssueChangeContext/createUser(java.util.Date,java.lang.String)|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+method:///org/sonar/server/issue/IssueUpdater/setTags(org.sonar.core.issue.DefaultIssue,java.util.Collection,org.sonar.core.issue.IssueChangeContext)|",
      "|java+method:///org/sonar/server/user/UserSession/checkLoggedIn()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/tags()|",
      "|java+method:///org/sonar/server/issue/IssueService/getByKeyForUpdate(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/issue/IssueService/saveIssue(org.sonar.db.DbSession,org.sonar.core.issue.DefaultIssue,org.sonar.core.issue.IssueChangeContext,java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/toDefaultIssue()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/RegisterRules/start()|",
    "called": "|java+method:///org/sonar/db/DbSession/close()|",
    "v1Body": [
      "|java+method:///org/sonar/server/rule/RegisterRules/getRepositories(org.sonar.api.server.rule.RulesDefinition$Context)|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/api/resources/Languages/get(java.lang.String)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/api/utils/log/Profiler/create(org.sonar.api.utils.log.Logger)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/rule/RegisterRules/registerRule(org.sonar.api.server.rule.RulesDefinition$Rule,java.util.Map,java.util.Map,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$ExtendedRepository/rules()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$ExtendedRepository/language()|",
      "|java+method:///org/sonar/api/utils/log/Profiler/startInfo(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/RuleDefinitionsLoader/load()|",
      "|java+method:///org/sonar/server/rule/RegisterRules/loadRules(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/rule/RegisterRules/loadCharacteristics(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/api/utils/log/Profiler/stopDebug()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/server/rule/RegisterRules/removeActiveRulesOnStillExistingRepositories(org.sonar.db.DbSession,java.util.Collection,org.sonar.api.server.rule.RulesDefinition$Context)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/rule/RegisterRules/processRemainingDbRules(java.util.Collection,org.sonar.db.DbSession)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/rule/RegisterRules/getRepositories(org.sonar.api.server.rule.RulesDefinition$Context)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/api/resources/Languages/get(java.lang.String)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/api/utils/log/Profiler/create(org.sonar.api.utils.log.Logger)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndexer/index(java.util.List)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$ExtendedRepository/rules()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$ExtendedRepository/language()|",
      "|java+method:///org/sonar/api/utils/log/Profiler/startInfo(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/RuleDefinitionsLoader/load()|",
      "|java+method:///org/sonar/server/rule/RegisterRules/loadRules(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/api/utils/log/Profiler/stopDebug()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/server/rule/RegisterRules/registerRule(org.sonar.api.server.rule.RulesDefinition$Rule,java.util.Map,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/es/BaseIndexer/index()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndexer/setEnabled(boolean)|",
      "|java+method:///org/sonar/server/rule/RegisterRules/processRemainingDbRules(java.util.Collection,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/rule/RegisterRules/removeActiveRulesOnStillExistingRepositories(org.sonar.db.DbSession,java.util.Collection,org.sonar.api.server.rule.RulesDefinition$Context)|",
      "|java+method:///org/sonar/server/rule/index/RuleIndexer/setEnabled(boolean)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/RegisterRules/loadRules(org.sonar.db.DbSession)|",
    "called": "|java+method:///org/sonar/db/rule/RuleDto/getKey()|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getKey()|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/selectByNonManual(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/db/DbClient/deprecatedRuleDao()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getKey()|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectAll(org.sonar.db.DbSession)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/RuleActivator/cascadeActivation(org.sonar.db.DbSession,org.sonar.server.qualityprofile.RuleActivation,java.lang.String)|",
    "called": "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
    "v1Body": [
      "|java+constructor:///org/sonar/server/qualityprofile/RuleActivation/RuleActivation(org.sonar.server.qualityprofile.RuleActivation)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivation/setCascade(boolean)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectChildren(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/activate(org.sonar.db.DbSession,org.sonar.server.qualityprofile.RuleActivation,java.lang.String)|",
      "|java+method:///org/sonar/server/db/DbClient/qualityProfileDao()|",
      "|java+method:///java/util/List/iterator()|"
    ],
    "v2Body": [
      "|java+constructor:///org/sonar/server/qualityprofile/RuleActivation/RuleActivation(org.sonar.server.qualityprofile.RuleActivation)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivation/setCascade(boolean)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectChildren(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/activate(org.sonar.db.DbSession,org.sonar.server.qualityprofile.RuleActivation,java.lang.String)|",
      "|java+method:///org/sonar/db/DbClient/qualityProfileDao()|",
      "|java+method:///java/util/List/iterator()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/verifyForActivation()|",
    "called": "|java+method:///org/sonar/db/rule/RuleDto/getKey()|",
    "v1Body": [
      "|java+method:///org/sonar/db/rule/RuleDto/isTemplate()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///org/sonar/server/exceptions/BadRequestException/BadRequestException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getLanguage()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getLanguage()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getKey()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/api/rule/RuleKey/isManual()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getStatus()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/rule/RuleDto/isTemplate()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///org/sonar/server/exceptions/BadRequestException/BadRequestException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getLanguage()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getLanguage()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getKey()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getStatus()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/ws/CreateAction/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///org/sonar/server/rule/NewRule/createForCustomRule(java.lang.String,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsBoolean(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/ws/CreateAction/writeResponse(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/api/utils/KeyValueFormat/parse(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/rule/NewRule/setPreventReactivation(boolean)|",
      "|java+method:///org/sonar/server/rule/ReactivationException/ruleKey()|",
      "|java+method:///org/sonar/server/rule/ws/CreateAction/write409(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response,org.sonar.api.rule.RuleKey)|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/NewRule/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/api/rule/RuleStatus/valueOf(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/NewRule/setStatus(org.sonar.api.rule.RuleStatus)|",
      "|java+constructor:///org/sonar/server/exceptions/BadRequestException/BadRequestException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/NewRule/setMarkdownDescription(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/NewRule/setName(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/NewRule/setParameters(java.util.Map)|",
      "|java+method:///org/sonar/server/rule/NewRule/createForManualRule(java.lang.String)|",
      "|java+method:///org/sonar/api/rule/RuleKey/parse(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/RuleService/create(org.sonar.server.rule.NewRule)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/rule/NewCustomRule/setMarkdownDescription(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/NewCustomRule/setName(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsBoolean(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/KeyValueFormat/parse(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/NewCustomRule/createForCustomRule(java.lang.String,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonar/api/rule/RuleKey/parse(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/NewCustomRule/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/ReactivationException/ruleKey()|",
      "|java+method:///org/sonar/server/rule/ws/CreateAction/writeResponse(org.sonar.db.DbSession,org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/NewCustomRule/setParameters(java.util.Map)|",
      "|java+method:///org/sonar/server/rule/RuleCreator/create(org.sonar.server.rule.NewCustomRule)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/api/rule/RuleStatus/valueOf(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/NewCustomRule/setPreventReactivation(boolean)|",
      "|java+method:///org/sonar/server/rule/ws/CreateAction/write409(org.sonar.db.DbSession,org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/NewCustomRule/setStatus(org.sonar.api.rule.RuleStatus)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/RegisterRules/mergeRule(org.sonar.api.server.rule.RulesDefinition$Rule,org.sonar.db.rule.RuleDto)|",
    "called": "|java+method:///org/sonar/db/rule/RuleDto/setType(org.sonar.api.rules.RuleType)|",
    "v1Body": [
      "|java+method:///org/apache/commons/lang/ObjectUtils/equals(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setIsTemplate(boolean)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setStatus(org.sonar.api.rule.RuleStatus)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getLanguage()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getConfigKey()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/name()|",
      "|java+method:///org/apache/commons/lang/StringUtils/equals(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Set/containsAll(java.util.Collection)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/status()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/internalKey()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getName()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/template()|",
      "|java+method:///org/sonar/db/rule/RuleDto/isTemplate()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setSystemTags(java.util.Set)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Repository/language()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/repository()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setLanguage(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/RegisterRules/mergeDescription(org.sonar.api.server.rule.RulesDefinition$Rule,org.sonar.db.rule.RuleDto)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setConfigKey(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getSystemTags()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/tags()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getSeverityString()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getStatus()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setName(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/severity()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/lang/ObjectUtils/equals(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setIsTemplate(boolean)|",
      "|java+method:///org/sonar/db/rule/RuleDto/isTemplate()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setStatus(org.sonar.api.rule.RuleStatus)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getLanguage()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getConfigKey()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getType()|",
      "|java+method:///org/sonar/api/rules/RuleType/valueOf(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/name()|",
      "|java+method:///org/apache/commons/lang/StringUtils/equals(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/status()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setConfigKey(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/internalKey()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getSeverityString()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Repository/language()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/repository()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setLanguage(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/RegisterRules/mergeDescription(org.sonar.api.server.rule.RulesDefinition$Rule,org.sonar.db.rule.RuleDto)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getName()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/type()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/template()|",
      "|java+method:///org/sonar/api/rules/RuleType/name()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setType(org.sonar.api.rules.RuleType)|",
      "|java+method:///org/sonar/api/rules/RuleType/getDbConstant()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getStatus()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setName(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/severity()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/RuleUpdater/deleteOrUpdateParameters(org.sonar.db.DbSession,org.sonar.server.rule.RuleUpdate,org.sonar.db.rule.RuleDto,java.util.List,com.google.common.collect.Multimap,com.google.common.collect.Multimap)|",
    "called": "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/updateParam(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleDto,org.sonar.db.qualityprofile.ActiveRuleParamDto)|",
    "v1Body": [
      "|java+method:///org/sonar/server/db/DbClient/activeRuleDao()|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/selectRuleParamsByRuleKey(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/server/qualityprofile/db/ActiveRuleDao/updateParam(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleDto,org.sonar.db.qualityprofile.ActiveRuleParamDto)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/qualityprofile/db/ActiveRuleDao/insertParam(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleDto,org.sonar.db.qualityprofile.ActiveRuleParamDto)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleParamDto/setValue(java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/updateRuleParam(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto,org.sonar.db.rule.RuleParamDto)|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/setDefaultValue(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/qualityprofile/db/ActiveRuleDao/deleteParam(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleDto,org.sonar.db.qualityprofile.ActiveRuleParamDto)|",
      "|java+method:///com/google/common/collect/Multimap/get(java.lang.Object)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/sonar/server/rule/RuleUpdate/parameter(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleParamDto/createFor(org.sonar.db.rule.RuleParamDto)|",
      "|java+method:///org/sonar/server/db/DbClient/deprecatedRuleDao()|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/getName()|",
      "|java+method:///com/google/common/base/Strings/emptyToNull(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleParamDto/getKey()|",
      "|java+method:///org/sonar/server/rule/RuleUpdate/getRuleKey()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/rule/RuleDao/selectRuleParamsByRuleKey(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/updateParam(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleDto,org.sonar.db.qualityprofile.ActiveRuleParamDto)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/deleteParam(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleDto,org.sonar.db.qualityprofile.ActiveRuleParamDto)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/getName()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleParamDto/setValue(java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/insertParam(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleDto,org.sonar.db.qualityprofile.ActiveRuleParamDto)|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/setDefaultValue(java.lang.String)|",
      "|java+method:///org/sonar/db/DbClient/activeRuleDao()|",
      "|java+method:///org/sonar/db/rule/RuleDao/updateRuleParam(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto,org.sonar.db.rule.RuleParamDto)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+method:///com/google/common/collect/Multimap/get(java.lang.Object)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/sonar/server/rule/RuleUpdate/parameter(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleParamDto/createFor(org.sonar.db.rule.RuleParamDto)|",
      "|java+method:///com/google/common/base/Strings/emptyToNull(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleParamDto/getKey()|",
      "|java+method:///org/sonar/server/rule/RuleUpdate/getRuleKey()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/rename(java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByNameAndLanguage(java.lang.String,java.lang.String,org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getLanguage()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/commons/lang/StringUtils/equals(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/sonar/server/exceptions/BadRequestException/BadRequestException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/update(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto,org.sonar.db.qualityprofile.QualityProfileDto%5B%5D)|",
      "|java+method:///org/sonar/server/exceptions/Verifications/check(boolean,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///org/sonar/server/exceptions/NotFoundException/NotFoundException(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByNameAndLanguage(java.lang.String,java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getName()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/setName(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getLanguage()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/commons/lang/StringUtils/equals(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/sonar/server/exceptions/BadRequestException/BadRequestException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/update(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto,org.sonar.db.qualityprofile.QualityProfileDto%5B%5D)|",
      "|java+method:///org/sonar/server/exceptions/Verifications/check(boolean,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///org/sonar/server/exceptions/NotFoundException/NotFoundException(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByNameAndLanguage(java.lang.String,java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getName()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/sonar/db/DbClient/qualityProfileDao()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/setName(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileService/delete(java.lang.String)|",
    "called": "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/delete(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileService/verifyAdminPermission()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndexer/index(java.util.List)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileService/verifyAdminPermission()|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/delete(org.sonar.db.DbSession,java.lang.String,boolean)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/step/PersistCrossProjectDuplicationIndexStep$DuplicationVisitor/visitComponent(org.sonar.server.computation.component.Component)|",
    "called": "|java+method:///org/sonar/db/duplication/DuplicationDao/insert(org.sonar.db.DbSession,org.sonar.db.duplication.DuplicationUnitDto)|",
    "v1Body": [
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setHash(java.lang.String)|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setIndexInFile(int)|",
      "|java+method:///org/sonar/server/computation/step/PersistCrossProjectDuplicationIndexStep/access$100(org.sonar.server.computation.step.PersistCrossProjectDuplicationIndexStep)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getRef()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+constructor:///org/sonar/db/duplication/DuplicationUnitDto/DuplicationUnitDto()|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readCpdTextBlocks(int)|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setProjectSnapshotId(long)|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setStartLine(int)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$CpdTextBlock/getEndLine()|",
      "|java+method:///org/sonar/server/computation/component/DbIdsRepository/getSnapshotId(org.sonar.server.computation.component.Component)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/server/computation/step/PersistCrossProjectDuplicationIndexStep/access$300(org.sonar.server.computation.step.PersistCrossProjectDuplicationIndexStep)|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setEndLine(int)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$CpdTextBlock/getStartLine()|",
      "|java+method:///org/sonar/db/DbClient/duplicationDao()|",
      "|java+method:///org/sonar/db/duplication/DuplicationDao/insert(org.sonar.db.DbSession,org.sonar.db.duplication.DuplicationUnitDto)|",
      "|java+method:///org/sonar/server/computation/step/PersistCrossProjectDuplicationIndexStep/access$200(org.sonar.server.computation.step.PersistCrossProjectDuplicationIndexStep)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$CpdTextBlock/getHash()|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setSnapshotId(long)|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setHash(java.lang.String)|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setStartLine(int)|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setIndexInFile(int)|",
      "|java+method:///org/sonar/server/computation/step/PersistCrossProjectDuplicationIndexStep/access$100(org.sonar.server.computation.step.PersistCrossProjectDuplicationIndexStep)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getRef()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+constructor:///org/sonar/db/duplication/DuplicationUnitDto/DuplicationUnitDto()|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readCpdTextBlocks(int)|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setProjectSnapshotId(long)|",
      "|java+method:///org/sonar/server/computation/component/DbIdsRepository/getSnapshotId(org.sonar.server.computation.component.Component)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/server/computation/step/PersistCrossProjectDuplicationIndexStep/access$300(org.sonar.server.computation.step.PersistCrossProjectDuplicationIndexStep)|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setEndLine(int)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$CpdTextBlock/getHash()|",
      "|java+method:///org/sonar/db/DbClient/duplicationDao()|",
      "|java+method:///org/sonar/db/duplication/DuplicationDao/insert(org.sonar.db.DbSession,org.sonar.db.duplication.DuplicationUnitDto)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$CpdTextBlock/getEndLine()|",
      "|java+method:///org/sonar/server/computation/step/PersistCrossProjectDuplicationIndexStep/access$200(org.sonar.server.computation.step.PersistCrossProjectDuplicationIndexStep)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$CpdTextBlock/getStartLine()|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setSnapshotId(long)|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileService/create(org.sonar.server.qualityprofile.QProfileName,java.util.Map)|",
    "called": "|java+method:///org/sonar/db/DbSession/close()|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/create(org.sonar.db.DbSession,org.sonar.server.qualityprofile.QProfileName)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileExporters/importXml(org.sonar.db.qualityprofile.QualityProfileDto,java.lang.String,java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileResult/setProfile(org.sonar.db.qualityprofile.QualityProfileDto)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileResult/add(org.sonar.server.qualityprofile.QProfileResult)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileService/verifyAdminPermission()|",
      "|java+constructor:///org/sonar/server/qualityprofile/QProfileResult/QProfileResult()|",
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/create(org.sonar.db.DbSession,org.sonar.server.qualityprofile.QProfileName)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileExporters/importXml(org.sonar.db.qualityprofile.QualityProfileDto,java.lang.String,java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileResult/setProfile(org.sonar.db.qualityprofile.QualityProfileDto)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileResult/add(org.sonar.server.qualityprofile.QProfileResult)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndexer/index(java.util.List)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileResult/getChanges()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileService/verifyAdminPermission()|",
      "|java+constructor:///org/sonar/server/qualityprofile/QProfileResult/QProfileResult()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContextFactory/initActiveRules(java.lang.String,org.sonar.api.rule.RuleKey,org.sonar.server.qualityprofile.RuleActivatorContext,org.sonar.db.DbSession,boolean)|",
    "called": "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/selectByKey(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleKey)|",
    "v1Body": [
      "|java+method:///org/sonar/server/db/DbClient/activeRuleDao()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/setParentActiveRuleParams(java.util.Collection)|",
      "|java+method:///org/sonar/server/qualityprofile/db/ActiveRuleDao/getNullableByKey(org.sonar.db.DbSession,java.io.Serializable)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/setParentActiveRule(org.sonar.db.qualityprofile.ActiveRuleDto)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleKey/of(java.lang.String,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/server/qualityprofile/db/ActiveRuleDao/selectParamsByActiveRuleKey(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleKey)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/setActiveRuleParams(java.util.Collection)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/setActiveRule(org.sonar.db.qualityprofile.ActiveRuleDto)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/setParentActiveRuleParams(java.util.Collection)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/getId()|",
      "|java+method:///com/google/common/base/Optional/orNull()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/setParentActiveRule(org.sonar.db.qualityprofile.ActiveRuleDto)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleKey/of(java.lang.String,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/selectByKey(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleKey)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/selectParamsByActiveRuleId(org.sonar.db.DbSession,java.lang.Integer)|",
      "|java+method:///org/sonar/db/DbClient/activeRuleDao()|",
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/setActiveRuleParams(java.util.Collection)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/setActiveRule(org.sonar.db.qualityprofile.ActiveRuleDto)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/create(org.sonar.db.DbSession,org.sonar.server.qualityprofile.QProfileName)|",
    "called": "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByNameAndLanguage(java.lang.String,java.lang.String,org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileName/getLanguage()|",
      "|java+constructor:///org/sonar/server/exceptions/BadRequestException/BadRequestException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByNameAndLanguage(java.lang.String,java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/doCreate(org.sonar.db.DbSession,org.sonar.server.qualityprofile.QProfileName)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileName/getName()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileName/getLanguage()|",
      "|java+constructor:///org/sonar/server/exceptions/BadRequestException/BadRequestException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByNameAndLanguage(java.lang.String,java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/doCreate(org.sonar.db.DbSession,org.sonar.server.qualityprofile.QProfileName)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileName/getName()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileBackuper/backup(java.lang.String,java.io.Writer)|",
    "called": "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndex/findByProfile(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileBackuper/writeXml(java.io.Writer,org.sonar.db.qualityprofile.QualityProfileDto,java.util.Iterator)|",
      "|java+method:///java/util/Collections/sort(java.util.List,java.util.Comparator)|",
      "|java+method:///org/sonar/server/search/IndexClient/get(java.lang.Class)|",
      "|java+method:///org/sonar/db/DbClient/qualityProfileDao()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectOrFailByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.util.Iterator)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/activeRuleDao()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/selectByProfileKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/DbClient/qualityProfileDao()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectOrFailByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///java/util/Collections/sort(java.util.List,java.util.Comparator)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileBackuper/writeXml(org.sonar.db.DbSession,java.io.Writer,org.sonar.db.qualityprofile.QualityProfileDto,java.util.Iterator)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/RuleActivator/updateProfileDate(org.sonar.db.DbSession,org.sonar.server.qualityprofile.RuleActivatorContext)|",
    "called": "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/update(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto,org.sonar.db.qualityprofile.QualityProfileDto%5B%5D)|",
    "v1Body": [
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/setRulesUpdatedAtAsDate(java.util.Date)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/getInitDate()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/update(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto,org.sonar.db.qualityprofile.QualityProfileDto%5B%5D)|",
      "|java+method:///org/sonar/server/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/profile()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/setRulesUpdatedAtAsDate(java.util.Date)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/getInitDate()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/update(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto,org.sonar.db.qualityprofile.QualityProfileDto%5B%5D)|",
      "|java+method:///org/sonar/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/profile()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/debt/DebtModelBackup/restoreXmlModel(java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
    "v1Body": [
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/debt/DebtCharacteristicsXMLImporter/importXML(java.lang.String)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/IllegalArgumentException/getMessage()|",
      "|java+method:///org/sonar/server/debt/DebtModelBackup/rules(java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/debt/DebtModelBackup/restoreCharacteristics(org.sonar.db.DbSession,org.sonar.server.debt.DebtModelXMLExporter$DebtModel,java.util.Date)|",
      "|java+method:///org/sonar/server/debt/DebtModelBackup/checkPermission()|",
      "|java+constructor:///java/util/Date/Date(long)|",
      "|java+method:///org/sonar/api/utils/ValidationMessages/create()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///org/sonar/server/debt/DebtModelBackup/restoreRules(java.util.List,java.util.List,java.util.List,org.sonar.api.utils.ValidationMessages,java.util.Date,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/debt/DebtRulesXMLImporter/importXML(java.lang.String,org.sonar.api.utils.ValidationMessages)|",
      "|java+method:///org/sonar/api/utils/ValidationMessages/addErrorText(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/IllegalArgumentException/getMessage()|",
      "|java+method:///org/sonar/server/debt/DebtModelBackup/rules(java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/debt/DebtModelBackup/checkPermission()|",
      "|java+constructor:///java/util/Date/Date(long)|",
      "|java+method:///org/sonar/api/utils/ValidationMessages/create()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///org/sonar/server/rule/index/RuleIndexer/index()|",
      "|java+method:///org/sonar/server/debt/DebtModelBackup/restoreRules(java.util.List,java.util.List,org.sonar.api.utils.ValidationMessages,java.util.Date,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/debt/DebtRulesXMLImporter/importXML(java.lang.String,org.sonar.api.utils.ValidationMessages)|",
      "|java+method:///org/sonar/api/utils/ValidationMessages/addErrorText(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/index/IssueResultSetIterator/read(java.sql.ResultSet)|",
    "called": "|java+method:///org/sonar/db/DatabaseUtils/getDouble(java.sql.ResultSet,int)|",
    "v1Body": [
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setAssignee(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueResultSetIterator/read(java.sql.ResultSet)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setTechnicalUpdateDate(java.util.Date)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setAttributes(java.lang.String)|",
      "|java+method:///org/sonar/db/DatabaseUtils/getInt(java.sql.ResultSet,int)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setDirectoryPath(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setProjectUuid(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setComponentUuid(java.lang.String)|",
      "|java+constructor:///java/util/Date/Date(long)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setModuleUuid(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setKey(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setRuleKey(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setMessage(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueResultSetIterator/extractDirPath(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setFuncUpdateDate(java.util.Date)|",
      "|java+method:///java/sql/ResultSet/getLong(int)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setStatus(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/filePath()|",
      "|java+method:///org/sonar/api/utils/DateUtils/longToDate(java.lang.Long)|",
      "|java+method:///com/google/common/base/Splitter/split(java.lang.CharSequence)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setManualSeverity(boolean)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setEffortToFix(java.lang.Double)|",
      "|java+method:///org/sonar/server/issue/index/IssueResultSetIterator/extractFilePath(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setLanguage(java.lang.String)|",
      "|java+method:///java/sql/ResultSet/getString(int)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setSeverity(java.lang.String)|",
      "|java+method:///com/google/common/collect/ImmutableList/copyOf(java.lang.Iterable)|",
      "|java+constructor:///org/sonar/server/issue/index/IssueDoc/IssueDoc(java.util.Map)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setTags(java.util.Collection)|",
      "|java+method:///java/sql/ResultSet/getBoolean(int)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setReporter(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setLine(java.lang.Integer)|",
      "|java+method:///org/sonar/db/DatabaseUtils/getDouble(java.sql.ResultSet,int)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setFilePath(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setFuncCloseDate(java.util.Date)|",
      "|java+method:///org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setChecksum(java.lang.String)|",
      "|java+method:///com/google/common/collect/Maps/newHashMapWithExpectedSize(int)|",
      "|java+method:///org/sonar/server/issue/index/IssueResultSetIterator/extractModule(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setDebt(java.lang.Long)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setAuthorLogin(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setFuncCreationDate(java.util.Date)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setActionPlanKey(java.lang.String)|",
      "|java+method:///org/sonar/api/rule/RuleKey/toString()|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setModuleUuidPath(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setResolution(java.lang.String)|",
      "|java+method:///org/sonar/db/DatabaseUtils/getLong(java.sql.ResultSet,int)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setAssignee(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueResultSetIterator/read(java.sql.ResultSet)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setTechnicalUpdateDate(java.util.Date)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setAttributes(java.lang.String)|",
      "|java+method:///org/sonar/db/DatabaseUtils/getInt(java.sql.ResultSet,int)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setDirectoryPath(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setProjectUuid(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setComponentUuid(java.lang.String)|",
      "|java+constructor:///java/util/Date/Date(long)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setModuleUuid(java.lang.String)|",
      "|java+method:///org/sonar/api/rule/RuleKey/toString()|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setRuleKey(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setMessage(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueResultSetIterator/extractDirPath(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setFuncUpdateDate(java.util.Date)|",
      "|java+method:///java/sql/ResultSet/getLong(int)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setStatus(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/filePath()|",
      "|java+method:///org/sonar/api/utils/DateUtils/longToDate(java.lang.Long)|",
      "|java+method:///com/google/common/base/Splitter/split(java.lang.CharSequence)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setManualSeverity(boolean)|",
      "|java+method:///org/sonar/server/issue/index/IssueResultSetIterator/extractFilePath(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setLanguage(java.lang.String)|",
      "|java+method:///org/sonar/api/rules/RuleType/valueOf(int)|",
      "|java+method:///java/sql/ResultSet/getInt(int)|",
      "|java+method:///java/sql/ResultSet/getString(int)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setSeverity(java.lang.String)|",
      "|java+method:///com/google/common/collect/ImmutableList/copyOf(java.lang.Iterable)|",
      "|java+constructor:///org/sonar/server/issue/index/IssueDoc/IssueDoc(java.util.Map)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setGap(java.lang.Double)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setTags(java.util.Collection)|",
      "|java+method:///java/sql/ResultSet/getBoolean(int)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setLine(java.lang.Integer)|",
      "|java+method:///org/sonar/db/DatabaseUtils/getDouble(java.sql.ResultSet,int)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setFilePath(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setEffort(java.lang.Long)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setFuncCloseDate(java.util.Date)|",
      "|java+method:///org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setChecksum(java.lang.String)|",
      "|java+method:///com/google/common/collect/Maps/newHashMapWithExpectedSize(int)|",
      "|java+method:///org/sonar/server/issue/index/IssueResultSetIterator/extractModule(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setAuthorLogin(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setFuncCreationDate(java.util.Date)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setType(org.sonar.api.rules.RuleType)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setKey(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setModuleUuidPath(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueDoc/setResolution(java.lang.String)|",
      "|java+method:///org/sonar/db/DatabaseUtils/getLong(java.sql.ResultSet,int)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileComparison/compare(java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+constructor:///org/sonar/server/qualityprofile/QProfileComparison$QProfileComparisonResult/QProfileComparison$QProfileComparisonResult()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileComparison/compare(java.lang.String,java.lang.String,org.sonar.db.DbSession,org.sonar.server.qualityprofile.QProfileComparison$QProfileComparisonResult)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+constructor:///org/sonar/server/qualityprofile/QProfileComparison$QProfileComparisonResult/QProfileComparison$QProfileComparisonResult()|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileComparison/compare(org.sonar.db.DbSession,java.lang.String,java.lang.String,org.sonar.server.qualityprofile.QProfileComparison$QProfileComparisonResult)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/RuleOperations/updateRule(org.sonar.server.rule.RuleOperations$RuleChange,org.sonar.server.user.UserSession)|",
    "called": "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
    "v1Body": [
      "|java+method:///org/sonar/server/rule/RuleOperations$RuleChange/debtRemediationFunction()|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/getNullableByKey(org.sonar.db.DbSession,java.io.Serializable)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/server/rule/RuleOperations$RuleChange/debtCharacteristicKey()|",
      "|java+method:///java/lang/IllegalArgumentException/getMessage()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/db/debt/CharacteristicDao/selectByKey(java.lang.String,org.apache.ibatis.session.SqlSession)|",
      "|java+constructor:///org/sonar/server/exceptions/BadRequestException/BadRequestException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/db/DbClient/deprecatedRuleDao()|",
      "|java+method:///org/sonar/server/db/DbClient/debtCharacteristicDao()|",
      "|java+method:///org/sonar/server/rule/RuleOperations$RuleChange/ruleKey()|",
      "|java+method:///org/sonar/server/rule/RuleOperations$RuleChange/debtRemediationOffset()|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/RuleOperations/checkPermission(org.sonar.server.user.UserSession)|",
      "|java+method:///org/sonar/server/rule/RuleOperations/updateRule(org.sonar.db.rule.RuleDto,org.sonar.db.debt.CharacteristicDto,java.lang.String,java.lang.String,java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/rule/RuleOperations$RuleChange/debtRemediationCoefficient()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+constructor:///org/sonar/server/exceptions/NotFoundException/NotFoundException(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/rule/RuleOperations/checkPermission(org.sonar.server.user.UserSession)|",
      "|java+method:///org/sonar/server/rule/RuleOperations$RuleChange/debtRemediationFunction()|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+method:///org/sonar/server/rule/index/RuleIndexer/index()|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectOrFailByKey(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|",
      "|java+method:///java/lang/IllegalArgumentException/getMessage()|",
      "|java+constructor:///org/sonar/server/exceptions/BadRequestException/BadRequestException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/rule/RuleOperations/updateRule(org.sonar.db.rule.RuleDto,java.lang.String,java.lang.String,java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/server/rule/RuleOperations$RuleChange/ruleKey()|",
      "|java+method:///org/sonar/server/rule/RuleOperations$RuleChange/debtRemediationOffset()|",
      "|java+method:///org/sonar/server/rule/RuleOperations$RuleChange/debtRemediationCoefficient()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/batch/IssuesAction/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/batch/IssuesAction/handleIssue(org.sonar.server.issue.index.IssueDoc,org.sonar.batch.protocol.input.BatchInput$ServerIssue$Builder,java.util.Map,java.io.OutputStream)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/component/ComponentFinder/getByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/batch/protocol/input/BatchInput$ServerIssue/newBuilder()|",
      "|java+method:///org/sonar/server/batch/IssuesAction/keysByUUid(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/api/server/ws/Response/stream()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/output()|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/selectIssuesForBatch(org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/server/user/UserSession/checkComponentPermission(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/setMediaType(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/batch/IssuesAction/handleIssue(org.sonar.server.issue.index.IssueDoc,org.sonar.scanner.protocol.input.ScannerInput$ServerIssue$Builder,java.util.Map,java.io.OutputStream)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/component/ComponentFinder/getByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/scanner/protocol/input/ScannerInput$ServerIssue/newBuilder()|",
      "|java+method:///org/sonar/server/batch/IssuesAction/keysByUUid(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/api/server/ws/Response/stream()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/output()|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/index/IssueIndex/selectIssuesForBatch(org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/server/user/UserSession/checkComponentPermission(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/setMediaType(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/measure/custom/ws/SearchAction/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
    "v1Body": [
      "|java+method:///org/sonar/server/measure/custom/ws/CustomMeasureValidator/checkPermissions(org.sonar.server.user.UserSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/measure/custom/ws/SearchAction/countTotalOfCustomMeasures(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/api/server/ws/Request/paramAsStrings(java.lang.String)|",
      "|java+method:///org/sonar/server/es/SearchOptions/setPage(int,int)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsInt(java.lang.String)|",
      "|java+method:///org/sonar/server/component/ComponentFinder/getByUuidOrKey(org.sonar.db.DbSession,java.lang.String,java.lang.String,org.sonar.server.component.ComponentFinder$ParamNames)|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonar/server/measure/custom/ws/SearchAction/searchLastSnapshot(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/server/measure/custom/ws/SearchAction/usersByLogin(java.util.List)|",
      "|java+method:///org/sonar/server/measure/custom/ws/SearchAction/metricsById(org.sonar.db.DbSession,java.util.List)|",
      "|java+method:///org/sonar/server/measure/custom/ws/SearchAction/searchCustomMeasures(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto,org.sonar.server.es.SearchOptions)|",
      "|java+method:///org/sonar/server/measure/custom/ws/SearchAction/writeResponse(org.sonar.api.server.ws.Response,java.util.List,int,org.sonar.db.component.ComponentDto,java.util.Map,java.util.Map,java.lang.Long,org.sonar.server.es.SearchOptions,java.util.List)|",
      "|java+constructor:///org/sonar/server/es/SearchOptions/SearchOptions()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/measure/custom/ws/CustomMeasureValidator/checkPermissions(org.sonar.server.user.UserSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/measure/custom/ws/SearchAction/countTotalOfCustomMeasures(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/api/server/ws/Request/paramAsStrings(java.lang.String)|",
      "|java+method:///org/sonar/server/es/SearchOptions/setPage(int,int)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsInt(java.lang.String)|",
      "|java+method:///org/sonar/server/component/ComponentFinder/getByUuidOrKey(org.sonar.db.DbSession,java.lang.String,java.lang.String,org.sonar.server.component.ComponentFinder$ParamNames)|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonar/server/measure/custom/ws/SearchAction/searchLastSnapshot(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/server/measure/custom/ws/SearchAction/metricsById(org.sonar.db.DbSession,java.util.List)|",
      "|java+method:///org/sonar/server/measure/custom/ws/SearchAction/writeResponse(org.sonar.api.server.ws.Response,java.util.List,int,org.sonar.db.component.ComponentDto,java.util.Map,java.util.Map,java.lang.Long,org.sonar.server.es.SearchOptions,java.util.List)|",
      "|java+constructor:///org/sonar/server/es/SearchOptions/SearchOptions()|",
      "|java+method:///org/sonar/server/measure/custom/ws/SearchAction/searchCustomMeasures(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto,org.sonar.server.es.SearchOptions)|",
      "|java+method:///org/sonar/server/measure/custom/ws/SearchAction/usersByLogin(org.sonar.db.DbSession,java.util.List)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/RuleUpdater/newContext(org.sonar.server.rule.RuleUpdate)|",
    "called": "|java+method:///org/sonar/db/DbSession/close()|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/db/debt/CharacteristicDto/isEnabled()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/RuleUpdater$Context/access$002(org.sonar.server.rule.RuleUpdater$Context,org.sonar.db.rule.RuleDto)|",
      "|java+method:///org/sonar/db/debt/CharacteristicDto/getParentId()|",
      "|java+method:///org/sonar/server/rule/RuleUpdater$Context/access$000(org.sonar.server.rule.RuleUpdater$Context)|",
      "|java+constructor:///org/sonar/server/rule/RuleUpdater$Context/RuleUpdater$Context(org.sonar.server.rule.RuleUpdater$1)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/sonar/server/db/DbClient/deprecatedRuleDao()|",
      "|java+method:///org/sonar/server/rule/RuleUpdate/getRuleKey()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/sonar/server/rule/RuleUpdate/getDebtSubCharacteristicKey()|",
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/getByKey(org.sonar.db.DbSession,java.io.Serializable)|",
      "|java+method:///org/sonar/db/debt/CharacteristicDao/selectByKey(java.lang.String,org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/server/rule/RuleUpdater$Context/access$202(org.sonar.server.rule.RuleUpdater$Context,org.sonar.db.debt.CharacteristicDto)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/server/db/DbClient/debtCharacteristicDao()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getStatus()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+method:///org/sonar/server/rule/RuleUpdater$Context/access$002(org.sonar.server.rule.RuleUpdater$Context,org.sonar.db.rule.RuleDto)|",
      "|java+method:///org/sonar/server/rule/RuleUpdater$Context/access$000(org.sonar.server.rule.RuleUpdater$Context)|",
      "|java+constructor:///org/sonar/server/rule/RuleUpdater$Context/RuleUpdater$Context(org.sonar.server.rule.RuleUpdater$1)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/server/rule/RuleUpdate/getRuleKey()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectOrFailByKey(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getStatus()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/source/HighlightingLineReader/processHighlighting(java.util.Iterator,java.lang.StringBuilder,org.sonar.db.protobuf.DbFileSources$Line$Builder)|",
    "called": "|java+method:///org/sonar/db/protobuf/DbFileSources$Line$Builder/getSource()|",
    "v1Body": [
      "|java+method:///java/util/Iterator/remove()|",
      "|java+method:///org/sonar/server/computation/source/RangeOffsetConverter/offsetToString(org.sonar.batch.protocol.output.BatchReport$TextRange,int,int)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$SyntaxHighlighting/getType()|",
      "|java+method:///org/sonar/server/computation/source/HighlightingLineReader/getCssClass(org.sonar.batch.protocol.Constants$HighlightingType)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$TextRange/getEndLine()|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$TextRange/getStartLine()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Line$Builder/getSource()|",
      "|java+method:///java/lang/StringBuilder/length()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$SyntaxHighlighting/getRange()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Line$Builder/getLine()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/remove()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$TextRange/getStartLine()|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$SyntaxHighlightingRule/getRange()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Line$Builder/getSource()|",
      "|java+method:///org/sonar/server/computation/source/RangeOffsetConverter/offsetToString(org.sonar.scanner.protocol.output.ScannerReport$TextRange,int,int)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$TextRange/getEndLine()|",
      "|java+method:///org/sonar/server/computation/source/HighlightingLineReader/getCssClass(org.sonar.scanner.protocol.output.ScannerReport$SyntaxHighlightingRule$HighlightingType)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Line$Builder/getLine()|",
      "|java+method:///java/lang/StringBuilder/length()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$SyntaxHighlightingRule/getType()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/delete(org.sonar.db.DbSession,java.lang.String,boolean)|",
    "called": "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectDescendants(org.sonar.db.DbSession,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/doDelete(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto)|",
      "|java+method:///com/google/common/collect/Lists/reverse(java.util.List)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectDescendants(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/checkNotDefault(org.sonar.db.qualityprofile.QualityProfileDto)|",
      "|java+method:///org/sonar/server/db/DbClient/qualityProfileDao()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectOrFailByKey(org.sonar.db.DbSession,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/doDelete(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///com/google/common/collect/Lists/reverse(java.util.List)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectDescendants(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/checkNotDefault(org.sonar.db.qualityprofile.QualityProfileDto)|",
      "|java+method:///org/sonar/db/DbClient/qualityProfileDao()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectOrFailByKey(org.sonar.db.DbSession,java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/ws/ShowAction/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///org/sonar/server/rule/RuleService/getByKey(org.sonar.api.rule.RuleKey)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/server/ws/WsUtils/writeProtobuf(com.google.protobuf.Message,org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/api/rule/RuleKey/parse(java.lang.String)|",
      "|java+constructor:///org/sonar/server/exceptions/NotFoundException/NotFoundException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/server/rule/ws/ShowAction/buildResponse(org.sonar.api.server.ws.Request,org.sonar.server.rule.Rule)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+method:///org/sonar/server/rule/ws/SearchAction$SearchResult/setRuleParameters(java.util.List)|",
      "|java+method:///org/sonar/server/rule/ws/SearchAction$SearchResult/setRules(java.util.List)|",
      "|java+method:///org/sonar/server/ws/WsUtils/writeProtobuf(com.google.protobuf.Message,org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
      "|java+method:///org/sonar/server/rule/ws/ShowAction/buildResponse(org.sonar.db.DbSession,org.sonar.api.server.ws.Request,org.sonar.server.rule.ws.SearchAction$SearchResult)|",
      "|java+method:///org/sonar/server/rule/ws/SearchAction$SearchResult/setTemplateRules(java.util.List)|",
      "|java+constructor:///org/sonar/server/rule/ws/SearchAction$SearchResult/SearchAction$SearchResult()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/api/rule/RuleKey/parse(java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/ws/WsUtils/checkFoundWithOptional(com.google.common.base.Optional,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getTemplateId()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectByKey(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/server/rule/ws/SearchAction$SearchResult/setTotal(java.lang.Long)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectRuleParamsByRuleIds(org.sonar.db.DbSession,java.util.List)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getId()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectById(long,org.sonar.db.DbSession)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/getByNameAndLanguage(org.sonar.db.DbSession,java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByNameAndLanguage(java.lang.String,java.lang.String,org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///org/sonar/server/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByNameAndLanguage(java.lang.String,java.lang.String,org.sonar.db.DbSession)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByNameAndLanguage(java.lang.String,java.lang.String,org.sonar.db.DbSession)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/getDefault(java.lang.String)|",
    "called": "|java+method:///org/sonar/db/DbSession/close()|",
    "v1Body": [
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/getDefault(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/getDefault(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/queue/CeQueueCleaner/verifyConsistency(org.sonar.db.DbSession)|",
    "called": "|java+method:///org/sonar/db/DbSession/commit()|",
    "v1Body": [
      "|java+method:///org/sonar/db/ce/CeQueueDao/resetAllToPendingStatus(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/ce/CeQueueDto/getTaskType()|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/DbClient/ceQueueDao()|",
      "|java+method:///org/sonar/server/computation/queue/report/ReportFiles/listUuids()|",
      "|java+method:///org/sonar/db/ce/CeQueueDao/selectAllInAscOrder(org.sonar.db.DbSession)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///org/sonar/db/ce/CeQueueDto/getUuid()|",
      "|java+method:///org/sonar/server/computation/queue/report/ReportFiles/deleteIfExists(java.lang.String)|",
      "|java+method:///org/sonar/server/computation/queue/CeQueueImpl/cancel(org.sonar.db.DbSession,org.sonar.db.ce.CeQueueDto)|",
      "|java+method:///org/sonar/server/computation/queue/report/ReportFiles/fileForUuid(java.lang.String)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/ce/CeQueueDao/resetAllToPendingStatus(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/computation/queue/InternalCeQueue/cancel(org.sonar.db.DbSession,org.sonar.db.ce.CeQueueDto)|",
      "|java+method:///org/sonar/db/DbClient/ceQueueDao()|",
      "|java+method:///org/sonar/db/ce/CeQueueDao/selectAllInAscOrder(org.sonar.db.DbSession)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///org/sonar/db/ce/CeQueueDto/getUuid()|",
      "|java+method:///org/sonar/db/ce/CeQueueDto/getTaskType()|",
      "|java+method:///org/sonar/ce/queue/report/ReportFiles/listUuids()|",
      "|java+method:///org/sonar/ce/queue/report/ReportFiles/fileForUuid(java.lang.String)|",
      "|java+method:///org/sonar/ce/queue/report/ReportFiles/deleteIfExists(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/RuleDeleter/delete(org.sonar.api.rule.RuleKey)|",
    "called": "|java+method:///org/sonar/db/DbSession/close()|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/sonar/server/db/DbClient/deprecatedRuleDao()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/deactivate(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getRepositoryKey()|",
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/update(org.sonar.db.DbSession,org.sonar.db.Dto)|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/getByKey(org.sonar.db.DbSession,java.io.Serializable)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getTemplateId()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setStatus(org.sonar.api.rule.RuleStatus)|",
      "|java+method:///org/sonar/db/DbSession/commit()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+method:///org/sonar/server/rule/index/RuleIndexer/index()|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectOrFailByKey(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setUpdatedAt(long)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/deactivate(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto)|",
      "|java+method:///org/sonar/db/rule/RuleDao/update(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto)|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getTemplateId()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setStatus(org.sonar.api.rule.RuleStatus)|",
      "|java+method:///org/sonar/db/DbSession/commit()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/DefaultRuleFinder/findByKeys(java.util.Collection)|",
    "called": "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///org/sonar/server/rule/DefaultRuleFinder/toRule(org.sonar.server.rule.Rule)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/rule/index/RuleIndex/getByKeys(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Collection/isEmpty()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+method:///org/sonar/server/rule/DefaultRuleFinder/convertToRuleApi(org.sonar.db.DbSession,java.util.List)|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectByKeys(org.sonar.db.DbSession,java.util.List)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Collection/isEmpty()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/DefaultRuleFinder/findByKey(org.sonar.api.rule.RuleKey)|",
    "called": "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///org/sonar/server/rule/index/RuleIndex/getNullableByKey(java.io.Serializable)|",
      "|java+method:///org/sonar/server/rule/DefaultRuleFinder/toRule(org.sonar.server.rule.Rule)|",
      "|java+method:///org/sonar/server/rule/Rule/status()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getKey()|",
      "|java+method:///org/sonar/server/rule/DefaultRuleFinder/toRule(org.sonar.db.rule.RuleDto,java.util.List)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getStatus()|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectRuleParamsByRuleKey(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectByKey(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/monitoring/CEQueueStatusImpl/getPendingCount()|",
    "called": "|java+method:///org/sonar/db/DbSession/close()|",
    "v1Body": [
      "|java+method:///java/util/concurrent/atomic/AtomicLong/get()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbClient/ceQueueDao()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/sonar/db/ce/CeQueueDao/countByStatus(org.sonar.db.DbSession,org.sonar.db.ce.CeQueueDto$Status)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileProjectOperations/addProject(java.lang.String,java.lang.String,org.sonar.server.user.UserSession)|",
    "called": "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
    "v1Body": [
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileProjectOperations/addProject(java.lang.String,java.lang.String,org.sonar.server.user.UserSession,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileProjectOperations/addProject(java.lang.String,java.lang.String,org.sonar.server.user.UserSession,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/qualitygate/EvaluationResultTextConverterImpl/getAlertLabel(org.sonar.server.computation.qualitygate.Condition,org.sonar.server.computation.measure.Measure$Level)|",
    "called": "|java+method:///org/sonar/core/timemachine/Periods/label(java.lang.String,java.lang.String,java.util.Date)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/sonar/server/computation/metric/Metric/getKey()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/sonar/server/computation/period/Period/getModeParameter()|",
      "|java+method:///org/sonar/server/computation/qualitygate/Condition/getMetric()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/core/timemachine/Periods/label(java.lang.String,java.lang.String,java.util.Date)|",
      "|java+method:///org/sonar/server/computation/period/Period/getMode()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/server/computation/period/Period/getSnapshotDate()|",
      "|java+method:///org/sonar/api/utils/DateUtils/longToDate(java.lang.Long)|",
      "|java+method:///org/sonar/server/computation/period/PeriodsHolder/getPeriod(int)|",
      "|java+method:///java/lang/String/toLowerCase()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/api/i18n/I18n/message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/computation/qualitygate/Condition/getPeriod()|",
      "|java+method:///org/sonar/server/computation/qualitygate/EvaluationResultTextConverterImpl/alertValue(org.sonar.server.computation.qualitygate.Condition,org.sonar.server.computation.measure.Measure$Level)|",
      "|java+method:///org/sonar/server/computation/qualitygate/Condition/getOperator()|",
      "|java+method:///org/sonar/server/computation/metric/Metric/getName()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/sonar/server/computation/metric/Metric/getKey()|",
      "|java+method:///org/sonar/server/computation/period/PeriodsHolder/getPeriod(int)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/sonar/server/computation/period/Period/getModeParameter()|",
      "|java+method:///org/sonar/server/computation/qualitygate/Condition/getMetric()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/core/timemachine/Periods/label(java.lang.String,java.lang.String,java.util.Date)|",
      "|java+method:///org/sonar/server/computation/period/Period/getMode()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/server/computation/period/Period/getSnapshotDate()|",
      "|java+method:///org/sonar/api/utils/DateUtils/longToDate(java.lang.Long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/api/i18n/I18n/message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/String/toLowerCase(java.util.Locale)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/server/computation/qualitygate/Condition/getPeriod()|",
      "|java+method:///org/sonar/server/computation/qualitygate/EvaluationResultTextConverterImpl/alertValue(org.sonar.server.computation.qualitygate.Condition,org.sonar.server.computation.measure.Measure$Level)|",
      "|java+method:///org/sonar/server/computation/qualitygate/Condition/getOperator()|",
      "|java+method:///org/sonar/server/computation/metric/Metric/getName()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/ws/CompareAction/writeRules(org.sonar.api.utils.text.JsonWriter,java.util.Map,java.util.Map)|",
    "called": "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/getSeverityString()|",
    "v1Body": [
      "|java+method:///org/sonar/api/utils/text/JsonWriter/prop(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endArray()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRule/severity()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/sonar/server/qualityprofile/ws/CompareAction/writeRule(org.sonar.api.utils.text.JsonWriter,org.sonar.api.rule.RuleKey,java.util.Map)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginArray()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginObject()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endObject()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/utils/text/JsonWriter/prop(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/getSeverityString()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endArray()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/sonar/server/qualityprofile/ws/CompareAction/writeRule(org.sonar.api.utils.text.JsonWriter,org.sonar.api.rule.RuleKey,java.util.Map)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginArray()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginObject()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endObject()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleDoc/parentKey()|",
    "called": "|java+method:///org/sonar/db/qualityprofile/ActiveRuleKey/parse(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleKey/parse(java.lang.String)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleDoc/getNullableField(java.lang.String)|",
      "|java+method:///org/sonar/server/search/IndexField/field()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleKey/parse(java.lang.String)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleDoc/getNullableField(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/IssueQueryService/createFromRequest(org.sonarqube.ws.client.issue.SearchWsRequest)|",
    "called": "|java+method:///org/sonar/db/DbSession/close()|",
    "v1Body": [
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/assignees(java.util.Collection)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getAssigned()|",
      "|java+method:///org/sonar/server/issue/IssueQueryService/buildAssignees(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getOnComponentOnly()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getDirectories()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getResolved()|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/actionPlans(java.util.Collection)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getFacetMode()|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/createdAfter(java.util.Date)|",
      "|java+method:///org/sonar/server/issue/IssueQueryService/parseAsDateTime(java.lang.String)|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/resolved(java.lang.Boolean)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getCreatedInLast()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getAssignees()|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/asc(java.lang.Boolean)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getPlanned()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getCreatedBefore()|",
      "|java+method:///org/sonar/server/issue/IssueQuery/builder(org.sonar.server.user.UserSession)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getResolutions()|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/resolutions(java.util.Collection)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getAuthors()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getCreatedAfter()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getModuleUuids()|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/createdAt(java.util.Date)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getComponentRoots()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getProjectKeys()|",
      "|java+method:///org/sonar/server/issue/IssueQueryService/stringsToRules(java.util.Collection)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/build()|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/assigned(java.lang.Boolean)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/issueKeys(java.util.Collection)|",
      "|java+method:///com/google/common/collect/Sets/newHashSet()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getComponents()|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/planned(java.lang.Boolean)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getAsc()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getComponentRootUuids()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getComponentKeys()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getTags()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getIssues()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getReporters()|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/sort(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getComponentUuids()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getSeverities()|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/reporters(java.util.Collection)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getActionPlans()|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/facetMode(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/tags(java.util.Collection)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/severities(java.util.Collection)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getSort()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getRules()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getProjectUuids()|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/rules(java.util.Collection)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/createdBefore(java.util.Date)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getStatuses()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getCreatedAt()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getLanguages()|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/statuses(java.util.Collection)|",
      "|java+method:///org/sonar/server/issue/IssueQueryService/addComponentParameters(org.sonar.server.issue.IssueQuery$Builder,org.sonar.db.DbSession,boolean,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getFileUuids()|",
      "|java+method:///org/sonar/server/issue/IssueQueryService/buildCreatedAfter(java.util.Date,java.lang.String)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/languages(java.util.Collection)|",
      "|java+method:///org/sonar/server/issue/IssueQueryService/mergeDeprecatedComponentParameters(org.sonar.db.DbSession,java.lang.Boolean,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Set)|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/assignees(java.util.Collection)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getAssigned()|",
      "|java+method:///org/sonar/server/issue/IssueQueryService/buildAssignees(java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getOnComponentOnly()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getDirectories()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getResolved()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getTypes()|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/createdAfter(java.util.Date)|",
      "|java+method:///org/sonar/server/issue/IssueQueryService/parseAsDateTime(java.lang.String)|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/resolved(java.lang.Boolean)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getAssignees()|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/asc(java.lang.Boolean)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getCreatedBefore()|",
      "|java+method:///org/sonar/server/issue/IssueQuery/builder(org.sonar.server.user.UserSession)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getResolutions()|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/resolutions(java.util.Collection)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getAuthors()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getModuleUuids()|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/createdAt(java.util.Date)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getComponentRoots()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getProjectKeys()|",
      "|java+method:///org/sonar/server/issue/IssueQueryService/stringsToRules(java.util.Collection)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/build()|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/assigned(java.lang.Boolean)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/issueKeys(java.util.Collection)|",
      "|java+method:///com/google/common/collect/Sets/newHashSet()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getComponents()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getAsc()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getComponentRootUuids()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getComponentKeys()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getTags()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getIssues()|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/sort(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getComponentUuids()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getSeverities()|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/facetMode(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/tags(java.util.Collection)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/severities(java.util.Collection)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getSort()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getRules()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getProjectUuids()|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/rules(java.util.Collection)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/createdBefore(java.util.Date)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getStatuses()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getFacetMode()|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/types(java.util.Collection)|",
      "|java+method:///org/sonar/server/issue/IssueQueryService/buildCreatedAfterFromRequest(org.sonar.db.DbSession,org.sonarqube.ws.client.issue.SearchWsRequest,java.util.Set,boolean)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getCreatedAt()|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getLanguages()|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/statuses(java.util.Collection)|",
      "|java+method:///org/sonar/server/issue/IssueQueryService/addComponentParameters(org.sonar.server.issue.IssueQuery$Builder,org.sonar.db.DbSession,boolean,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection)|",
      "|java+method:///org/sonarqube/ws/client/issue/SearchWsRequest/getFileUuids()|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/languages(java.util.Collection)|",
      "|java+method:///org/sonar/server/issue/IssueQueryService/mergeDeprecatedComponentParameters(org.sonar.db.DbSession,java.lang.Boolean,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Set)|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/getByNameAndLanguage(java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/sonar/db/DbSession/close()|",
    "v1Body": [
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/getByNameAndLanguage(org.sonar.db.DbSession,java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/getByNameAndLanguage(org.sonar.db.DbSession,java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/user/ws/SearchAction/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///com/google/common/collect/Lists/transform(java.util.List,com.google.common.base.Function)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbClient/groupMembershipDao()|",
      "|java+method:///org/sonar/db/user/GroupMembershipDao/selectGroupsByLogins(org.sonar.db.DbSession,java.util.Collection)|",
      "|java+constructor:///org/sonar/server/user/ws/SearchAction$1/SearchAction$1(org.sonar.server.user.ws.SearchAction)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/DbClient/userTokenDao()|",
      "|java+method:///org/sonar/api/server/ws/Request/paramAsStrings(java.lang.String)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///org/sonar/server/es/SearchOptions/SearchOptions()|",
      "|java+method:///org/sonar/db/user/UserTokenDao/countTokensByLogins(org.sonar.db.DbSession,java.util.List)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/close()|",
      "|java+method:///org/sonar/server/user/ws/SearchAction/writeUsers(org.sonar.api.utils.text.JsonWriter,org.sonar.server.es.SearchResult,com.google.common.collect.Multimap,java.util.Map,java.util.List)|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginObject()|",
      "|java+method:///org/sonar/server/es/SearchResult/getTotal()|",
      "|java+method:///com/google/common/collect/ArrayListMultimap/create()|",
      "|java+method:///org/sonar/server/es/SearchOptions/writeJson(org.sonar.api.utils.text.JsonWriter,long)|",
      "|java+method:///org/sonar/server/es/SearchOptions/setPage(int,int)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsInt(java.lang.String)|",
      "|java+method:///org/sonar/server/es/SearchResult/getDocs()|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonar/server/user/index/UserIndex/search(java.lang.String,org.sonar.server.es.SearchOptions)|",
      "|java+method:///org/sonar/api/server/ws/Response/newJsonWriter()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endObject()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Lists/transform(java.util.List,com.google.common.base.Function)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbClient/groupMembershipDao()|",
      "|java+method:///org/sonar/db/user/GroupMembershipDao/selectGroupsByLogins(org.sonar.db.DbSession,java.util.Collection)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/DbClient/userTokenDao()|",
      "|java+method:///org/sonar/server/user/ws/SearchAction/writeUsers(org.sonar.api.utils.text.JsonWriter,java.util.List,com.google.common.collect.Multimap,java.util.Map,java.util.List)|",
      "|java+constructor:///org/sonar/server/es/SearchOptions/SearchOptions()|",
      "|java+method:///org/sonar/db/user/UserTokenDao/countTokensByLogins(org.sonar.db.DbSession,java.util.List)|",
      "|java+method:///org/sonar/db/DbClient/userDao()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/close()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/beginObject()|",
      "|java+method:///org/sonar/server/es/SearchResult/getTotal()|",
      "|java+method:///org/sonar/api/server/ws/Request/paramAsStrings(java.lang.String)|",
      "|java+method:///org/sonar/db/user/UserDao/selectByOrderedLogins(org.sonar.db.DbSession,java.util.Collection)|",
      "|java+method:///org/sonar/server/es/SearchOptions/writeJson(org.sonar.api.utils.text.JsonWriter,long)|",
      "|java+method:///org/sonar/server/es/SearchOptions/setPage(int,int)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParamAsInt(java.lang.String)|",
      "|java+method:///org/sonar/server/es/SearchResult/getDocs()|",
      "|java+method:///org/sonar/api/server/ws/Request/param(java.lang.String)|",
      "|java+method:///org/sonar/server/user/index/UserIndex/search(java.lang.String,org.sonar.server.es.SearchOptions)|",
      "|java+method:///org/sonar/api/server/ws/Response/newJsonWriter()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/endObject()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileReset/reset(org.sonar.server.qualityprofile.QProfileName,java.util.Collection)|",
    "called": "|java+method:///org/sonar/db/DbSession/close()|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileReset/doReset(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto,java.util.Collection)|",
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/getOrCreate(org.sonar.db.DbSession,org.sonar.server.qualityprofile.QProfileName)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileReset/doReset(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto,java.util.Collection)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/getOrCreate(org.sonar.db.DbSession,org.sonar.server.qualityprofile.QProfileName)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/RuleActivator/doUpdate(org.sonar.server.qualityprofile.ActiveRuleChange,org.sonar.server.qualityprofile.RuleActivatorContext,org.sonar.db.DbSession)|",
    "called": "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/setSeverity(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/qualityprofile/db/ActiveRuleDao/updateParam(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleDto,org.sonar.db.qualityprofile.ActiveRuleParamDto)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/activeRule()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/getParameters()|",
      "|java+method:///org/sonar/server/qualityprofile/db/ActiveRuleDao/update(org.sonar.db.DbSession,org.sonar.db.Dto)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/activeRuleParamsAsMap()|",
      "|java+method:///org/sonar/server/qualityprofile/db/ActiveRuleDao/insertParam(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleDto,org.sonar.db.qualityprofile.ActiveRuleParamDto)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleParamDto/setValue(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRule$Inheritance/name()|",
      "|java+method:///org/sonar/server/db/DbClient/activeRuleDao()|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/getSeverity()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/qualityprofile/db/ActiveRuleDao/deleteParam(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleDto,org.sonar.db.qualityprofile.ActiveRuleParamDto)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/ruleParamsByKeys()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleParamDto/createFor(org.sonar.db.rule.RuleParamDto)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/setInheritance(java.lang.String)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/getInheritance()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/getParameters()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/deleteParam(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleDto,org.sonar.db.qualityprofile.ActiveRuleParamDto)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/activeRuleParamsAsMap()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleParamDto/setValue(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRule$Inheritance/name()|",
      "|java+method:///org/sonar/db/DbClient/activeRuleDao()|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/getSeverity()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/setUpdatedAt(long)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/activeRule()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/update(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleDto)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/updateParam(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleDto,org.sonar.db.qualityprofile.ActiveRuleParamDto)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/ruleParamsByKeys()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleParamDto/createFor(org.sonar.db.rule.RuleParamDto)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/setInheritance(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/insertParam(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleDto,org.sonar.db.qualityprofile.ActiveRuleParamDto)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/getInheritance()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/RuleActivator/setParent(org.sonar.db.DbSession,java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/selectByProfileKey(org.sonar.db.DbSession,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleKey/ruleKey()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/sonar/server/qualityprofile/RuleActivation/RuleActivation(org.sonar.api.rule.RuleKey)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/update(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto,org.sonar.db.qualityprofile.QualityProfileDto%5B%5D)|",
      "|java+method:///org/sonar/server/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/setParentKee(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectOrFailByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/getKey()|",
      "|java+method:///org/sonar/server/db/DbClient/activeRuleDao()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/isDescendant(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto,org.sonar.db.qualityprofile.QualityProfileDto)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getParentKee()|",
      "|java+method:///org/sonar/server/qualityprofile/db/ActiveRuleDao/selectByProfileKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/sonar/server/exceptions/BadRequestException/BadRequestException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/removeParent(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/activate(org.sonar.db.DbSession,org.sonar.server.qualityprofile.RuleActivation,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/selectByProfileKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/sonar/server/qualityprofile/RuleActivation/RuleActivation(org.sonar.api.rule.RuleKey)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/update(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto,org.sonar.db.qualityprofile.QualityProfileDto%5B%5D)|",
      "|java+method:///org/sonar/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/setParentKee(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectOrFailByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/getKey()|",
      "|java+method:///org/sonar/db/DbClient/activeRuleDao()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleKey/ruleKey()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/isDescendant(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto,org.sonar.db.qualityprofile.QualityProfileDto)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getParentKee()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/sonar/server/exceptions/BadRequestException/BadRequestException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/removeParent(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/activate(org.sonar.db.DbSession,org.sonar.server.qualityprofile.RuleActivation,java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/RuleActivator/bulkDeactivate(org.sonar.server.rule.index.RuleQuery,java.lang.String)|",
    "called": "|java+method:///org/sonar/db/DbSession/close()|",
    "v1Body": [
      "|java+method:///org/sonar/server/qualityprofile/BulkChangeResult/addChanges(java.util.Collection)|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/exceptions/BadRequestException/errors()|",
      "|java+method:///org/sonar/server/rule/index/RuleIndex/search(org.sonar.server.rule.index.RuleQuery,org.sonar.server.search.QueryContext)|",
      "|java+method:///org/sonar/server/search/Result/scroll()|",
      "|java+method:///org/sonar/server/search/QueryContext/setScroll(boolean)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/deactivate(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleKey)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/search/IndexClient/get(java.lang.Class)|",
      "|java+constructor:///org/sonar/server/search/QueryContext/QueryContext(org.sonar.server.user.UserSession)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleKey/of(java.lang.String,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/server/qualityprofile/BulkChangeResult/getErrors()|",
      "|java+method:///org/sonar/server/search/IndexField/field()|",
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+constructor:///org/sonar/server/qualityprofile/BulkChangeResult/BulkChangeResult()|",
      "|java+method:///org/sonar/server/rule/Rule/key()|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/server/qualityprofile/BulkChangeResult/incrementFailed()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/search/QueryContext/setFieldsToReturn(java.util.Collection)|",
      "|java+method:///org/sonar/server/qualityprofile/BulkChangeResult/incrementSucceeded()|",
      "|java+method:///org/sonar/server/exceptions/Errors/add(org.sonar.server.exceptions.Errors)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/qualityprofile/BulkChangeResult/addChanges(java.util.Collection)|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/server/exceptions/BadRequestException/errors()|",
      "|java+method:///org/sonar/server/qualityprofile/BulkChangeResult/getChanges()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/deactivate(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleKey)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleKey/of(java.lang.String,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/server/qualityprofile/BulkChangeResult/getErrors()|",
      "|java+constructor:///org/sonar/server/qualityprofile/BulkChangeResult/BulkChangeResult()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/qualityprofile/BulkChangeResult/incrementFailed()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/qualityprofile/BulkChangeResult/incrementSucceeded()|",
      "|java+method:///org/sonar/server/exceptions/Errors/add(org.sonar.server.exceptions.Errors)|",
      "|java+method:///org/sonar/server/rule/index/RuleIndex/searchAll(org.sonar.server.rule.index.RuleQuery)|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndexer/index(java.util.List)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/doDelete(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto)|",
    "called": "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/selectByProfileKey(org.sonar.db.DbSession,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/db/DbClient/activeRuleDao()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/deleteAllProjectProfileAssociation(java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/qualityprofile/db/ActiveRuleDao/deleteByProfileKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/delete(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto,org.sonar.db.qualityprofile.QualityProfileDto%5B%5D)|",
      "|java+method:///org/sonar/server/db/DbClient/qualityProfileDao()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/selectByProfileKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/delete(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleKey)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/getKey()|",
      "|java+method:///org/sonar/db/DbClient/activeRuleDao()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/createFor(org.sonar.server.qualityprofile.ActiveRuleChange$Type,org.sonar.db.qualityprofile.ActiveRuleKey)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/delete(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto,org.sonar.db.qualityprofile.QualityProfileDto%5B%5D)|",
      "|java+method:///org/sonar/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/deleteAllProjectProfileAssociation(java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///java/util/List/iterator()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/RuleActivator/isDescendant(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto,org.sonar.db.qualityprofile.QualityProfileDto)|",
    "called": "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByKey(org.sonar.db.DbSession,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getParentKee()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getName()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getParentKee()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getName()|",
      "|java+method:///org/sonar/db/DbClient/qualityProfileDao()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/IssueService/doTransition(java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/sonar/db/DbSession/close()|",
    "v1Body": [
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/core/issue/IssueChangeContext/createUser(java.util.Date,java.lang.String)|",
      "|java+method:///org/sonar/server/issue/IssueService/checkTransitionPermission(java.lang.String,org.sonar.server.user.UserSession,org.sonar.core.issue.DefaultIssue)|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+method:///org/sonar/server/issue/IssueService/getByKeyForUpdate(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/core/issue/workflow/IssueWorkflow/doTransition(org.sonar.core.issue.DefaultIssue,java.lang.String,org.sonar.core.issue.IssueChangeContext)|",
      "|java+method:///org/sonar/server/issue/IssueService/verifyLoggedIn()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/issue/IssueService/saveIssue(org.sonar.db.DbSession,org.sonar.core.issue.DefaultIssue,org.sonar.core.issue.IssueChangeContext,java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/toDefaultIssue()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/issue/workflow/IssueWorkflow/doTransition(org.sonar.core.issue.DefaultIssue,java.lang.String,org.sonar.core.issue.IssueChangeContext)|",
      "|java+method:///org/sonar/core/issue/IssueChangeContext/createUser(java.util.Date,java.lang.String)|",
      "|java+method:///org/sonar/server/issue/IssueService/checkTransitionPermission(java.lang.String,org.sonar.server.user.UserSession,org.sonar.core.issue.DefaultIssue)|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+method:///org/sonar/server/user/UserSession/checkLoggedIn()|",
      "|java+method:///org/sonar/server/issue/IssueService/getByKeyForUpdate(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/issue/IssueService/saveIssue(org.sonar.db.DbSession,org.sonar.core.issue.DefaultIssue,org.sonar.core.issue.IssueChangeContext,java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/toDefaultIssue()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/getOrCreate(org.sonar.db.DbSession,org.sonar.server.qualityprofile.QProfileName)|",
    "called": "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByNameAndLanguage(java.lang.String,java.lang.String,org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///org/sonar/server/qualityprofile/QProfileName/getLanguage()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByNameAndLanguage(java.lang.String,java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileName/getName()|",
      "|java+method:///org/sonar/server/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/doCreate(org.sonar.db.DbSession,org.sonar.server.qualityprofile.QProfileName)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/qualityprofile/QProfileName/getLanguage()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByNameAndLanguage(java.lang.String,java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileName/getName()|",
      "|java+method:///org/sonar/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/doCreate(org.sonar.db.DbSession,org.sonar.server.qualityprofile.QProfileName)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/debt/DebtModelBackup/rules(java.lang.String,org.sonar.db.DbSession)|",
    "called": "|java+method:///org/sonar/db/rule/RuleDao/selectEnabled(org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///com/google/common/collect/Iterables/filter(java.lang.Iterable,com.google.common.base.Predicate)|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/selectEnabledAndNonManual(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/db/DbClient/deprecatedRuleDao()|",
      "|java+constructor:///org/sonar/server/debt/DebtModelBackup$RuleDtoMatchLanguage/DebtModelBackup$RuleDtoMatchLanguage(java.lang.String)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Iterable)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Iterables/filter(java.lang.Iterable,com.google.common.base.Predicate)|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectEnabled(org.sonar.db.DbSession)|",
      "|java+constructor:///org/sonar/server/debt/DebtModelBackup$RuleDtoMatchLanguage/DebtModelBackup$RuleDtoMatchLanguage(java.lang.String)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Iterable)|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileReset/doReset(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto,java.util.Collection)|",
    "called": "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/selectByProfileKey(org.sonar.db.DbSession,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleKey/ruleKey()|",
      "|java+method:///org/sonar/server/exceptions/BadRequestException/errors()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/getInheritance()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/deactivate(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleKey)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/activate(org.sonar.db.DbSession,org.sonar.server.qualityprofile.RuleActivation,java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKee()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleKey/of(java.lang.String,org.sonar.api.rule.RuleKey)|",
      "|java+method:///java/util/Set/remove(java.lang.Object)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/getKey()|",
      "|java+method:///org/sonar/server/qualityprofile/BulkChangeResult/addChanges(java.util.Collection)|",
      "|java+method:///org/sonar/server/db/DbClient/activeRuleDao()|",
      "|java+method:///org/sonar/server/qualityprofile/BulkChangeResult/incrementFailed()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/sonar/server/qualityprofile/BulkChangeResult/BulkChangeResult(org.sonar.db.qualityprofile.QualityProfileDto)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getId()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
      "|java+method:///org/sonar/server/qualityprofile/db/ActiveRuleDao/selectByProfileKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///com/google/common/collect/Sets/newHashSet()|",
      "|java+method:///org/sonar/server/qualityprofile/BulkChangeResult/incrementSucceeded()|",
      "|java+method:///org/sonar/server/exceptions/Errors/add(org.sonar.server.exceptions.Errors)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivation/getRuleKey()|",
      "|java+method:///com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/sonar/server/qualityprofile/BulkChangeResult/getErrors()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/server/qualityprofile/BulkChangeResult/getChanges()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/getInheritance()|",
      "|java+method:///com/google/common/collect/Sets/newHashSet()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKee()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleKey/of(java.lang.String,org.sonar.api.rule.RuleKey)|",
      "|java+method:///java/util/Set/remove(java.lang.Object)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/getKey()|",
      "|java+method:///org/sonar/db/DbClient/activeRuleDao()|",
      "|java+method:///org/sonar/server/qualityprofile/BulkChangeResult/addChanges(java.util.Collection)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleKey/ruleKey()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/selectByProfileKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/exceptions/BadRequestException/errors()|",
      "|java+method:///org/sonar/server/qualityprofile/BulkChangeResult/incrementFailed()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/sonar/server/qualityprofile/BulkChangeResult/BulkChangeResult(org.sonar.db.qualityprofile.QualityProfileDto)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getId()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
      "|java+method:///org/sonar/server/qualityprofile/BulkChangeResult/incrementSucceeded()|",
      "|java+method:///org/sonar/server/exceptions/Errors/add(org.sonar.server.exceptions.Errors)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/deactivate(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleKey)|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/activate(org.sonar.db.DbSession,org.sonar.server.qualityprofile.RuleActivation,java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndexer/index(java.util.List)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivation/getRuleKey()|",
      "|java+method:///com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/sonar/server/qualityprofile/BulkChangeResult/getErrors()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/ws/ChangelogAction/searchActivities(org.sonar.server.qualityprofile.QProfileActivityQuery,org.sonar.server.es.SearchOptions)|",
    "called": "|java+method:///org/sonar/db/DbSession/close()|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivity/getLogin()|",
      "|java+constructor:///org/sonar/server/search/Result/Result(org.elasticsearch.action.search.SearchResponse)|",
      "|java+method:///org/sonar/server/search/Result/getHits()|",
      "|java+method:///org/sonar/server/activity/index/ActivityIndex/doSearch(org.sonar.server.activity.index.ActivityQuery,org.sonar.server.es.SearchOptions)|",
      "|java+method:///org/sonar/server/db/DbClient/deprecatedRuleDao()|",
      "|java+method:///org/elasticsearch/search/SearchHit/getSource()|",
      "|java+method:///org/sonar/db/user/UserDao/selectActiveUserByLogin(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/getNullableByKey(org.sonar.db.DbSession,java.io.Serializable)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivity/authorName(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivity/ruleKey()|",
      "|java+method:///org/elasticsearch/action/search/SearchResponse/getHits()|",
      "|java+method:///org/elasticsearch/search/SearchHits/getHits()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivity/ruleName(java.lang.String)|",
      "|java+constructor:///org/sonar/server/qualityprofile/QProfileActivity/QProfileActivity(java.util.Map)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/server/db/DbClient/userDao()|",
      "|java+method:///org/sonar/db/user/UserDto/getName()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getName()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/user/UserDao/selectActiveUserByLogin(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+constructor:///org/sonar/server/search/Result/Result(org.elasticsearch.action.search.SearchResponse)|",
      "|java+method:///org/sonar/server/search/Result/getHits()|",
      "|java+method:///org/sonar/server/activity/index/ActivityIndex/doSearch(org.sonar.server.activity.index.ActivityQuery,org.sonar.server.es.SearchOptions)|",
      "|java+method:///org/elasticsearch/search/SearchHit/getSource()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivity/authorName(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivity/ruleKey()|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectByKey(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivity/getLogin()|",
      "|java+method:///org/elasticsearch/action/search/SearchResponse/getHits()|",
      "|java+method:///org/elasticsearch/search/SearchHits/getHits()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivity/ruleName(java.lang.String)|",
      "|java+constructor:///org/sonar/server/qualityprofile/QProfileActivity/QProfileActivity(java.util.Map)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/db/DbClient/userDao()|",
      "|java+method:///org/sonar/db/user/UserDto/getName()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getName()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/doCreate(org.sonar.db.DbSession,org.sonar.server.qualityprofile.QProfileName)|",
    "called": "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/createFor(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/setRulesUpdatedAtAsDate(java.util.Date)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/insert(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto,org.sonar.db.qualityprofile.QualityProfileDto%5B%5D)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///org/sonar/server/exceptions/BadRequestException/BadRequestException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/core/util/Slug/slugify(java.lang.String)|",
      "|java+method:///org/sonar/server/db/DbClient/qualityProfileDao()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/apache/commons/lang/RandomStringUtils/randomNumeric(int)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isEmpty(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileName/getLanguage()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/setLanguage(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/setName(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/createFor(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileName/getName()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/setRulesUpdatedAtAsDate(java.util.Date)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/insert(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto,org.sonar.db.qualityprofile.QualityProfileDto%5B%5D)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///org/sonar/server/exceptions/BadRequestException/BadRequestException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/core/util/Slug/slugify(java.lang.String)|",
      "|java+method:///org/sonar/db/DbClient/qualityProfileDao()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/apache/commons/lang/RandomStringUtils/randomNumeric(int)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isEmpty(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileName/getLanguage()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/setLanguage(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/setName(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/createFor(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileName/getName()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/formatIssue(org.sonarqube.ws.Issues$Issue$Builder,org.sonar.db.issue.IssueDto,org.sonar.server.issue.ws.SearchResponseData)|",
    "called": "|java+method:///org/sonar/db/component/ComponentDto/getKey()|",
    "v1Body": [
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setAssignee(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getAssignee()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setUpdateDate(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setRule(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/addAllTags(java.lang.Iterable)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getComponentUuid()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setKey(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getKey()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getActionPlanKey()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setAuthor(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setCreationDate(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setMessage(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getRuleKey()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getModuleUuid()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/sonarqube/ws/Common$Severity/valueOf(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setSeverity(org.sonarqube.ws.Common$Severity)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getIssueCreationDate()|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseData/getComponentByUuid(java.lang.String)|",
      "|java+method:///org/sonar/db/component/ComponentDto/getKey()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getMessage()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getResolution()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setStatus(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setDebt(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getIssueCloseDate()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setLine(int)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getStatus()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setSubProject(java.lang.String)|",
      "|java+method:///org/sonar/db/component/ComponentDto/getId()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getDebt()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getIssueUpdateDate()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getLine()|",
      "|java+method:///org/sonar/api/utils/Duration/create(long)|",
      "|java+method:///org/sonar/api/utils/Durations/encode(org.sonar.api.utils.Duration)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///com/google/common/base/Strings/nullToEmpty(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getProjectUuid()|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/completeIssueLocations(org.sonar.db.issue.IssueDto,org.sonarqube.ws.Issues$Issue$Builder)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getTags()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setActionPlan(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setProject(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/DateUtils/formatDateTime(java.util.Date)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setReporter(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getSeverity()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setComponent(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getReporter()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setComponentId(long)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getAuthorLogin()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getComponentKey()|",
      "|java+method:///org/sonar/api/rule/RuleKey/toString()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setCloseDate(java.lang.String)|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setResolution(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setAssignee(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setType(org.sonarqube.ws.Common$RuleType)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getAssignee()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setUpdateDate(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setRule(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/DateUtils/formatDateTime(java.util.Date)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getComponentUuid()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getKey()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setAuthor(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setCreationDate(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setMessage(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getRuleKey()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getModuleUuid()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/sonarqube/ws/Common$Severity/valueOf(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setSeverity(org.sonarqube.ws.Common$Severity)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getIssueCreationDate()|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseData/getComponentByUuid(java.lang.String)|",
      "|java+method:///org/sonar/db/component/ComponentDto/getKey()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getMessage()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getEffort()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getResolution()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setStatus(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setDebt(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getIssueCloseDate()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setLine(int)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getStatus()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setSubProject(java.lang.String)|",
      "|java+method:///org/sonar/db/component/ComponentDto/getId()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getIssueUpdateDate()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getLine()|",
      "|java+method:///org/sonar/api/utils/Duration/create(long)|",
      "|java+method:///org/sonar/api/utils/Durations/encode(org.sonar.api.utils.Duration)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///com/google/common/base/Strings/nullToEmpty(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getProjectUuid()|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseFormat/completeIssueLocations(org.sonar.db.issue.IssueDto,org.sonarqube.ws.Issues$Issue$Builder)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getTags()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setProject(java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getType()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/addAllTags(java.lang.Iterable)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getSeverity()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setComponent(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setKey(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Common$RuleType/valueOf(int)|",
      "|java+method:///org/sonar/db/component/ComponentDto/key()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setComponentId(long)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getAuthorLogin()|",
      "|java+method:///org/sonar/api/rule/RuleKey/toString()|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setCloseDate(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setEffort(java.lang.String)|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Issues$Issue$Builder/setResolution(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/step/ComputeMeasureVariationsStep$VariationMeasuresVisitor/setVariationMeasures(org.sonar.server.computation.component.Component,java.util.List,int,org.sonar.server.computation.step.ComputeMeasureVariationsStep$MeasuresWithVariationRepository)|",
    "called": "|java+method:///org/sonar/db/measure/PastMeasureDto/getValue()|",
    "v1Body": [
      "|java+method:///com/google/common/collect/FluentIterable/from(java.lang.Iterable)|",
      "|java+method:///com/google/common/collect/SetMultimap/entries()|",
      "|java+method:///org/sonar/db/measure/PastMeasureDto/hasValue()|",
      "|java+method:///org/sonar/server/computation/measure/MeasureRepository/getRawMeasures(org.sonar.server.computation.component.Component)|",
      "|java+method:///com/google/common/collect/FluentIterable/iterator()|",
      "|java+constructor:///org/sonar/server/computation/measure/MeasureKey/MeasureKey(java.lang.String,java.lang.Integer,java.lang.Integer,org.sonar.server.computation.component.Developer)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/server/computation/step/ComputeMeasureVariationsStep/access$400(org.sonar.server.computation.step.ComputeMeasureVariationsStep)|",
      "|java+method:///org/sonar/server/computation/step/ComputeMeasureVariationsStep/access$500(org.sonar.server.computation.step.ComputeMeasureVariationsStep)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/common/collect/FluentIterable/uniqueIndex(com.google.common.base.Function)|",
      "|java+method:///org/sonar/server/computation/step/ComputeMeasureVariationsStep$VariationMeasuresVisitor/computeVariation(org.sonar.server.computation.measure.Measure,java.lang.Double)|",
      "|java+method:///org/sonar/server/computation/step/ComputeMeasureVariationsStep$MeasuresWithVariationRepository/add(org.sonar.server.computation.metric.Metric,org.sonar.server.computation.measure.Measure,int,double)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///com/google/common/collect/FluentIterable/filter(com.google.common.base.Predicate)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/measure/PastMeasureDto/getValue()|",
      "|java+method:///org/sonar/server/computation/measure/Measure/getCharacteristicId()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/sonar/server/computation/measure/Measure/getRuleId()|",
      "|java+method:///java/util/Map$Entry/getKey()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/FluentIterable/from(java.lang.Iterable)|",
      "|java+method:///com/google/common/collect/SetMultimap/entries()|",
      "|java+method:///org/sonar/db/measure/PastMeasureDto/hasValue()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/sonar/server/computation/measure/MeasureRepository/getRawMeasures(org.sonar.server.computation.component.Component)|",
      "|java+method:///com/google/common/collect/FluentIterable/iterator()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/server/computation/step/ComputeMeasureVariationsStep/access$400(org.sonar.server.computation.step.ComputeMeasureVariationsStep)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/common/collect/FluentIterable/uniqueIndex(com.google.common.base.Function)|",
      "|java+method:///org/sonar/server/computation/step/ComputeMeasureVariationsStep$VariationMeasuresVisitor/computeVariation(org.sonar.server.computation.measure.Measure,java.lang.Double)|",
      "|java+method:///org/sonar/server/computation/step/ComputeMeasureVariationsStep$MeasuresWithVariationRepository/add(org.sonar.server.computation.metric.Metric,org.sonar.server.computation.measure.Measure,int,double)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///com/google/common/collect/FluentIterable/filter(com.google.common.base.Predicate)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/measure/PastMeasureDto/getValue()|",
      "|java+method:///org/sonar/server/computation/step/ComputeMeasureVariationsStep/access$500(org.sonar.server.computation.step.ComputeMeasureVariationsStep)|",
      "|java+constructor:///org/sonar/server/computation/measure/MeasureKey/MeasureKey(java.lang.String,org.sonar.server.computation.component.Developer)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/IssueService/saveIssue(org.sonar.db.DbSession,org.sonar.core.issue.DefaultIssue,org.sonar.core.issue.IssueChangeContext,java.lang.String)|",
    "called": "|java+method:///org/sonar/db/component/ComponentDto/getKey()|",
    "v1Body": [
      "|java+method:///org/sonar/server/issue/IssueStorage/save(org.sonar.db.DbSession,org.sonar.core.issue.DefaultIssue)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/projectKey()|",
      "|java+method:///org/sonar/core/issue/IssueChangeContext/login()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/key()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/ruleKey()|",
      "|java+method:///org/sonar/db/component/ComponentDao/selectOrFailByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/db/DbClient/componentDao()|",
      "|java+method:///org/sonar/server/issue/IssueService/getNullableRuleByKey(org.sonar.api.rule.RuleKey)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+constructor:///org/sonar/server/issue/notification/IssueChangeNotification/IssueChangeNotification()|",
      "|java+method:///org/sonar/server/notification/NotificationManager/scheduleForSending(org.sonar.api.notifications.Notification)|",
      "|java+method:///org/sonar/db/component/ComponentDto/getKey()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/componentKey()|",
      "|java+method:///org/sonar/db/component/ComponentDto/name()|",
      "|java+method:///org/sonar/server/issue/notification/IssueChangeNotification/setComment(java.lang.String)|",
      "|java+method:///org/sonar/api/rules/Rule/getName()|",
      "|java+method:///org/sonar/server/issue/notification/IssueChangeNotification/setRuleName(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/notification/IssueChangeNotification/setProject(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/server/issue/notification/IssueChangeNotification/setChangeAuthorLogin(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/notification/IssueChangeNotification/setComponent(org.sonar.api.component.Component)|",
      "|java+method:///org/sonar/server/issue/notification/IssueChangeNotification/setIssue(org.sonar.core.issue.DefaultIssue)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///org/sonar/server/issue/IssueStorage/save(org.sonar.db.DbSession,org.sonar.core.issue.DefaultIssue)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/projectKey()|",
      "|java+method:///org/sonar/core/issue/IssueChangeContext/login()|",
      "|java+method:///org/sonar/server/issue/notification/IssueChangeNotification/setRuleName(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/getRuleKey()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/key()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getName()|",
      "|java+method:///org/sonar/db/component/ComponentDao/selectOrFailByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/db/DbClient/componentDao()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+constructor:///org/sonar/server/issue/notification/IssueChangeNotification/IssueChangeNotification()|",
      "|java+method:///org/sonar/server/notification/NotificationManager/scheduleForSending(org.sonar.api.notifications.Notification)|",
      "|java+method:///org/sonar/db/component/ComponentDto/getKey()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/componentKey()|",
      "|java+method:///org/sonar/server/issue/IssueService/getRuleByKey(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///org/sonar/db/component/ComponentDto/name()|",
      "|java+method:///org/sonar/server/issue/notification/IssueChangeNotification/setComment(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/notification/IssueChangeNotification/setProject(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/server/issue/notification/IssueChangeNotification/setChangeAuthorLogin(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/notification/IssueChangeNotification/setComponent(org.sonar.api.component.Component)|",
      "|java+method:///org/sonar/server/issue/notification/IssueChangeNotification/setIssue(org.sonar.core.issue.DefaultIssue)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/RuleCreator/loadRule(org.sonar.api.rule.RuleKey,org.sonar.db.DbSession)|",
    "called": "|java+method:///org/sonar/db/rule/RuleDao/selectByKey(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|",
    "v1Body": [
      "|java+method:///org/sonar/server/rule/db/RuleDao/getNullableByKey(org.sonar.db.DbSession,java.io.Serializable)|",
      "|java+method:///org/sonar/server/db/DbClient/deprecatedRuleDao()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectByKey(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/RuleUpdater/update(org.sonar.server.rule.RuleUpdate,org.sonar.server.user.UserSession)|",
    "called": "|java+method:///org/sonar/db/DbSession/close()|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/server/rule/RuleUpdater/apply(org.sonar.server.rule.RuleUpdate,org.sonar.server.rule.RuleUpdater$Context,org.sonar.server.user.UserSession)|",
      "|java+method:///org/sonar/server/rule/RuleUpdater/newContext(org.sonar.server.rule.RuleUpdate)|",
      "|java+method:///org/sonar/server/rule/RuleUpdater$Context/access$000(org.sonar.server.rule.RuleUpdater$Context)|",
      "|java+method:///org/sonar/server/rule/RuleUpdate/isEmpty()|",
      "|java+method:///org/sonar/server/db/DbClient/deprecatedRuleDao()|",
      "|java+method:///org/sonar/server/rule/RuleUpdater/updateParameters(org.sonar.db.DbSession,org.sonar.server.rule.RuleUpdate,org.sonar.server.rule.RuleUpdater$Context)|",
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/update(org.sonar.db.DbSession,org.sonar.db.Dto)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/rule/RuleUpdate/isEmpty()|",
      "|java+method:///org/sonar/server/rule/RuleUpdater/update(org.sonar.db.DbSession,org.sonar.server.rule.RuleUpdate,org.sonar.server.user.UserSession)|",
      "|java+method:///org/sonar/db/DbSession/close()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/IssueQueryService/createFromMap(java.util.Map)|",
    "called": "|java+method:///org/sonar/db/DbSession/close()|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/asc(java.lang.Boolean)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/assignees(java.util.Collection)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/resolutions(java.util.Collection)|",
      "|java+method:///org/sonar/server/issue/IssueQueryService/buildAssignees(java.util.List)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/createdAt(java.util.Date)|",
      "|java+method:///org/sonar/server/issue/IssueQueryService/toRules(java.lang.Object)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/planned(java.lang.Boolean)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/sort(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/reporters(java.util.Collection)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/actionPlans(java.util.Collection)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/severities(java.util.Collection)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/createdAfter(java.util.Date)|",
      "|java+method:///org/sonar/server/util/RubyUtils/toDate(java.lang.Object)|",
      "|java+method:///org/sonar/server/util/RubyUtils/toStrings(java.lang.Object)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/resolved(java.lang.Boolean)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/issue/IssueQuery/builder(org.sonar.server.user.UserSession)|",
      "|java+method:///org/sonar/server/util/RubyUtils/toBoolean(java.lang.Object)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/build()|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/assigned(java.lang.Boolean)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/issueKeys(java.util.Collection)|",
      "|java+method:///com/google/common/collect/Sets/newHashSet()|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/facetMode(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/tags(java.util.Collection)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/rules(java.util.Collection)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/createdBefore(java.util.Date)|",
      "|java+method:///org/apache/commons/lang/ObjectUtils/defaultIfNull(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/statuses(java.util.Collection)|",
      "|java+method:///org/sonar/server/issue/IssueQueryService/addComponentParameters(org.sonar.server.issue.IssueQuery$Builder,org.sonar.db.DbSession,boolean,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection)|",
      "|java+method:///org/sonar/server/issue/IssueQueryService/buildCreatedAfter(java.util.Date,java.lang.String)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/languages(java.util.Collection)|",
      "|java+method:///org/sonar/server/issue/IssueQueryService/mergeDeprecatedComponentParameters(org.sonar.db.DbSession,java.lang.Boolean,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Set)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/hideRules(java.lang.Boolean)|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/asc(java.lang.Boolean)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/assignees(java.util.Collection)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/resolutions(java.util.Collection)|",
      "|java+method:///org/sonar/server/issue/IssueQueryService/buildAssignees(java.util.List)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/createdAt(java.util.Date)|",
      "|java+method:///org/sonar/server/issue/IssueQueryService/toRules(java.lang.Object)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/sort(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/severities(java.util.Collection)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/types(java.util.Collection)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/languages(java.util.Collection)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/createdAfter(java.util.Date)|",
      "|java+method:///org/sonar/server/util/RubyUtils/toDate(java.lang.Object)|",
      "|java+method:///org/sonar/server/util/RubyUtils/toStrings(java.lang.Object)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/resolved(java.lang.Boolean)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/issue/IssueQuery/builder(org.sonar.server.user.UserSession)|",
      "|java+method:///org/sonar/server/util/RubyUtils/toBoolean(java.lang.Object)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/build()|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/assigned(java.lang.Boolean)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/issueKeys(java.util.Collection)|",
      "|java+method:///com/google/common/collect/Sets/newHashSet()|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/facetMode(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/tags(java.util.Collection)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/rules(java.util.Collection)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/createdBefore(java.util.Date)|",
      "|java+method:///org/sonar/server/issue/IssueQueryService/buildCreatedAfterFromDates(java.util.Date,java.lang.String)|",
      "|java+method:///org/apache/commons/lang/ObjectUtils/defaultIfNull(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/statuses(java.util.Collection)|",
      "|java+method:///org/sonar/server/issue/IssueQueryService/addComponentParameters(org.sonar.server.issue.IssueQuery$Builder,org.sonar.db.DbSession,boolean,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection)|",
      "|java+method:///org/sonar/server/issue/IssueQueryService/mergeDeprecatedComponentParameters(org.sonar.db.DbSession,java.lang.Boolean,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Set)|",
      "|java+method:///org/sonar/server/issue/IssueQuery$Builder/hideRules(java.lang.Boolean)|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileService/activate(java.lang.String,org.sonar.server.qualityprofile.RuleActivation)|",
    "called": "|java+method:///org/sonar/db/DbSession/close()|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/activate(org.sonar.db.DbSession,org.sonar.server.qualityprofile.RuleActivation,java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileService/verifyAdminPermission()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileService/verifyAdminPermission()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/activate(org.sonar.db.DbSession,org.sonar.server.qualityprofile.RuleActivation,java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndexer/index(java.util.List)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/permission/ws/SearchProjectPermissionsDataLoader/load(org.sonarqube.ws.client.permission.SearchProjectPermissionsWsRequest)|",
    "called": "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///org/sonar/server/permission/ws/SearchProjectPermissionsDataLoader/userCountByRootComponentIdAndPermission(org.sonar.db.DbSession,java.util.List)|",
      "|java+method:///org/sonar/server/permission/ws/SearchProjectPermissionsDataLoader/countRootComponents(org.sonar.db.DbSession,java.util.Collection,org.sonarqube.ws.client.permission.SearchProjectPermissionsWsRequest)|",
      "|java+method:///org/sonar/server/permission/ws/SearchProjectPermissionsDataLoader/qualifiers(java.lang.String)|",
      "|java+method:///org/sonar/server/permission/ws/SearchProjectPermissionsData$Builder/build()|",
      "|java+method:///org/sonar/server/permission/ws/SearchProjectPermissionsDataLoader/paging(org.sonarqube.ws.client.permission.SearchProjectPermissionsWsRequest,int)|",
      "|java+method:///org/sonarqube/ws/client/permission/SearchProjectPermissionsWsRequest/getQualifier()|",
      "|java+method:///org/sonar/server/permission/ws/SearchProjectPermissionsData/newBuilder()|",
      "|java+method:///org/sonar/server/permission/ws/SearchProjectPermissionsData$Builder/userCountByProjectIdAndPermission(com.google.common.collect.Table)|",
      "|java+method:///com/google/common/collect/Lists/transform(java.util.List,com.google.common.base.Function)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/permission/ws/SearchProjectPermissionsDataLoader/searchRootComponents(org.sonar.db.DbSession,org.sonarqube.ws.client.permission.SearchProjectPermissionsWsRequest,org.sonar.api.utils.Paging)|",
      "|java+method:///org/sonar/server/permission/ws/SearchProjectPermissionsData$Builder/rootComponents(java.util.List)|",
      "|java+method:///org/sonar/server/permission/ws/SearchProjectPermissionsData$Builder/paging(org.sonar.api.utils.Paging)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/permission/ws/SearchProjectPermissionsData$Builder/groupCountByProjectIdAndPermission(com.google.common.collect.Table)|",
      "|java+method:///org/sonar/server/permission/ws/SearchProjectPermissionsDataLoader/groupCountByRootComponentIdAndPermission(org.sonar.db.DbSession,java.util.List)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/permission/ws/SearchProjectPermissionsDataLoader/userCountByRootComponentIdAndPermission(org.sonar.db.DbSession,java.util.List)|",
      "|java+method:///org/sonar/server/permission/ws/SearchProjectPermissionsDataLoader/countRootComponents(org.sonar.db.DbSession,org.sonarqube.ws.client.permission.SearchProjectPermissionsWsRequest)|",
      "|java+method:///org/sonar/server/permission/ws/SearchProjectPermissionsData$Builder/build()|",
      "|java+method:///org/sonar/server/permission/ws/SearchProjectPermissionsDataLoader/paging(org.sonarqube.ws.client.permission.SearchProjectPermissionsWsRequest,int)|",
      "|java+method:///org/sonar/server/permission/ws/SearchProjectPermissionsData/newBuilder()|",
      "|java+method:///org/sonar/server/permission/ws/SearchProjectPermissionsData$Builder/userCountByProjectIdAndPermission(com.google.common.collect.Table)|",
      "|java+method:///com/google/common/collect/Lists/transform(java.util.List,com.google.common.base.Function)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/permission/ws/SearchProjectPermissionsDataLoader/searchRootComponents(org.sonar.db.DbSession,org.sonarqube.ws.client.permission.SearchProjectPermissionsWsRequest,org.sonar.api.utils.Paging)|",
      "|java+method:///org/sonar/server/permission/ws/SearchProjectPermissionsData$Builder/rootComponents(java.util.List)|",
      "|java+method:///org/sonar/server/permission/ws/SearchProjectPermissionsData$Builder/paging(org.sonar.api.utils.Paging)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/permission/ws/SearchProjectPermissionsData$Builder/groupCountByProjectIdAndPermission(com.google.common.collect.Table)|",
      "|java+method:///org/sonar/server/permission/ws/SearchProjectPermissionsDataLoader/groupCountByRootComponentIdAndPermission(org.sonar.db.DbSession,java.util.List)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/authentication/UserIdentityAuthenticator/register(org.sonar.api.server.authentication.UserIdentity,org.sonar.api.server.authentication.IdentityProvider)|",
    "called": "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///org/sonar/server/user/UpdateUser/setExternalIdentity(org.sonar.server.user.ExternalIdentity)|",
      "|java+method:///org/sonar/server/user/UpdateUser/setPassword(java.lang.String)|",
      "|java+method:///org/sonar/db/user/UserDto/getId()|",
      "|java+method:///org/sonar/server/user/NewUser/create()|",
      "|java+method:///org/sonar/api/server/authentication/UserIdentity/getName()|",
      "|java+method:///org/sonar/api/server/authentication/UserIdentity/getProviderLogin()|",
      "|java+method:///org/sonar/api/server/authentication/IdentityProvider/getKey()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/sonar/server/user/UpdateUser/setName(java.lang.String)|",
      "|java+method:///org/sonar/db/DbClient/userDao()|",
      "|java+constructor:///org/sonar/server/authentication/EmailAlreadyExistsException/EmailAlreadyExistsException(java.lang.String)|",
      "|java+method:///org/sonar/server/user/UpdateUser/setEmail(java.lang.String)|",
      "|java+method:///org/sonar/server/user/UpdateUser/create(java.lang.String)|",
      "|java+method:///org/sonar/server/user/NewUser/setEmail(java.lang.String)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/api/server/authentication/IdentityProvider/allowsUsersToSignUp()|",
      "|java+constructor:///org/sonar/server/user/ExternalIdentity/ExternalIdentity(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/sonar/server/authentication/NotAllowUserToSignUpException/NotAllowUserToSignUpException(org.sonar.api.server.authentication.IdentityProvider)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/user/UserUpdater/create(org.sonar.db.DbSession,org.sonar.server.user.NewUser)|",
      "|java+method:///org/sonar/server/user/NewUser/setLogin(java.lang.String)|",
      "|java+method:///org/sonar/db/user/UserDto/isActive()|",
      "|java+method:///org/sonar/api/server/authentication/UserIdentity/getEmail()|",
      "|java+method:///org/sonar/server/user/NewUser/setName(java.lang.String)|",
      "|java+method:///org/sonar/db/user/UserDto/getLogin()|",
      "|java+method:///org/sonar/db/user/UserDao/selectByLogin(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/db/user/UserDao/doesEmailExist(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/user/UserUpdater/update(org.sonar.db.DbSession,org.sonar.server.user.UpdateUser)|",
      "|java+method:///org/sonar/db/user/UserDao/selectOrFailByLogin(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/api/server/authentication/UserIdentity/getLogin()|",
      "|java+method:///org/sonar/server/user/NewUser/setExternalIdentity(org.sonar.server.user.ExternalIdentity)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/user/UserDto/getId()|",
      "|java+method:///org/sonar/db/user/UserDto/isActive()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/sonar/db/user/UserDao/selectByLogin(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/authentication/UserIdentityAuthenticator/registerNewUser(org.sonar.db.DbSession,org.sonar.api.server.authentication.UserIdentity,org.sonar.api.server.authentication.IdentityProvider)|",
      "|java+method:///org/sonar/api/server/authentication/UserIdentity/getLogin()|",
      "|java+method:///org/sonar/server/authentication/UserIdentityAuthenticator/registerExistingUser(org.sonar.db.DbSession,org.sonar.db.user.UserDto,org.sonar.api.server.authentication.UserIdentity,org.sonar.api.server.authentication.IdentityProvider)|",
      "|java+method:///org/sonar/db/DbClient/userDao()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/batch/GlobalAction/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
    "v1Body": [
      "|java+constructor:///org/sonar/batch/protocol/input/GlobalRepositories/GlobalRepositories()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/user/UserSession/hasPermission(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/setMediaType(java.lang.String)|",
      "|java+method:///org/sonar/batch/protocol/input/GlobalRepositories/toJson()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/output()|",
      "|java+method:///org/sonar/server/batch/GlobalAction/addMetrics(org.sonar.batch.protocol.input.GlobalRepositories,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/user/UserSession/isLoggedIn()|",
      "|java+method:///org/sonar/server/batch/GlobalAction/addSettings(org.sonar.batch.protocol.input.GlobalRepositories,boolean,boolean,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/api/server/ws/Response/stream()|",
      "|java+method:///org/apache/commons/io/IOUtils/write(java.lang.String,java.io.OutputStream)|",
      "|java+constructor:///org/sonar/server/exceptions/ForbiddenException/ForbiddenException(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/batch/GlobalAction/addSettings(org.sonar.scanner.protocol.input.GlobalRepositories,boolean,boolean,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/setMediaType(java.lang.String)|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/output()|",
      "|java+constructor:///org/sonar/scanner/protocol/input/GlobalRepositories/GlobalRepositories()|",
      "|java+method:///org/sonar/server/user/UserSession/isLoggedIn()|",
      "|java+method:///org/sonar/server/batch/GlobalAction/addMetrics(org.sonar.scanner.protocol.input.GlobalRepositories,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/user/UserSession/hasPermission(java.lang.String)|",
      "|java+method:///org/sonar/scanner/protocol/input/GlobalRepositories/toJson()|",
      "|java+method:///org/sonar/api/server/ws/Response/stream()|",
      "|java+method:///org/apache/commons/io/IOUtils/write(java.lang.String,java.io.OutputStream)|",
      "|java+constructor:///org/sonar/server/exceptions/ForbiddenException/ForbiddenException(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/notification/NewIssuesNotification/setStatistics(java.lang.String,org.sonar.server.issue.notification.NewIssuesStatistics$Stats)|",
    "called": "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
    "v1Body": [
      "|java+method:///org/sonar/server/issue/notification/NewIssuesNotification/setAssigneesStatistics(org.sonar.server.issue.notification.NewIssuesStatistics$Stats)|",
      "|java+method:///org/sonar/server/issue/notification/NewIssuesStatistics$Stats/countForMetric(org.sonar.server.issue.notification.NewIssuesStatistics$Metric)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/sonar/server/issue/notification/NewIssuesNotification/setSeverityStatistics(org.sonar.server.issue.notification.NewIssuesStatistics$Stats)|",
      "|java+method:///org/sonar/server/issue/notification/NewIssuesNotification/setRuleStatistics(org.sonar.server.issue.notification.NewIssuesStatistics$Stats)|",
      "|java+method:///org/sonar/server/issue/notification/NewIssuesNotification/setTagsStatistics(org.sonar.server.issue.notification.NewIssuesStatistics$Stats)|",
      "|java+method:///org/sonar/server/issue/notification/NewIssuesNotification/setComponentsStatistics(org.sonar.server.issue.notification.NewIssuesStatistics$Stats)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/server/issue/notification/NewIssuesNotification/setDefaultMessage(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/issue/notification/NewIssuesNotification/setComponentsStatistics(org.sonar.db.DbSession,org.sonar.server.issue.notification.NewIssuesStatistics$Stats)|",
      "|java+method:///org/sonar/server/issue/notification/NewIssuesNotification/setAssigneesStatistics(org.sonar.server.issue.notification.NewIssuesStatistics$Stats)|",
      "|java+method:///org/sonar/server/issue/notification/NewIssuesStatistics$Stats/countForMetric(org.sonar.server.issue.notification.NewIssuesStatistics$Metric)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/notification/NewIssuesNotification/setRuleStatistics(org.sonar.db.DbSession,org.sonar.server.issue.notification.NewIssuesStatistics$Stats)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/sonar/server/issue/notification/NewIssuesNotification/setSeverityStatistics(org.sonar.server.issue.notification.NewIssuesStatistics$Stats)|",
      "|java+method:///org/sonar/server/issue/notification/NewIssuesNotification/setTagsStatistics(org.sonar.server.issue.notification.NewIssuesStatistics$Stats)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/server/issue/notification/NewIssuesNotification/setDefaultMessage(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/RuleCreator/createCustomRuleParams(java.lang.String,org.sonar.db.rule.RuleDto,org.sonar.db.rule.RuleParamDto,org.sonar.db.DbSession)|",
    "called": "|java+method:///org/sonar/db/rule/RuleParamDto/setDescription(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/db/rule/RuleParamDto/getType()|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/setType(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/getDescription()|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/insertRuleParam(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto,org.sonar.db.rule.RuleParamDto)|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/setName(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/createFor(org.sonar.db.rule.RuleDto)|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/setDefaultValue(java.lang.String)|",
      "|java+method:///org/sonar/server/db/DbClient/deprecatedRuleDao()|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/getName()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/rule/RuleParamDto/getType()|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/setType(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/getDescription()|",
      "|java+method:///org/sonar/db/rule/RuleDao/insertRuleParam(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto,org.sonar.db.rule.RuleParamDto)|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/getName()|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/setName(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/createFor(org.sonar.db.rule.RuleDto)|",
      "|java+method:///org/sonar/db/rule/RuleParamDto/setDefaultValue(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/measure/ws/ComponentAction/doHandle(org.sonarqube.ws.client.measure.ComponentWsRequest)|",
    "called": "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///org/sonar/server/measure/ws/SnapshotDtoToWsPeriods/snapshotToWsPeriods(org.sonar.db.component.SnapshotDto)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/component/SnapshotDao/selectLastSnapshotByComponentId(org.sonar.db.DbSession,long)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentAction/searchMetrics(org.sonar.db.DbSession,org.sonarqube.ws.client.measure.ComponentWsRequest)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentWsRequest/getComponentId()|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentAction/searchMeasures(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto,org.sonar.db.component.SnapshotDto,java.util.List,java.util.List)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentWsRequest/getComponentKey()|",
      "|java+method:///org/sonar/db/component/ComponentDto/getId()|",
      "|java+method:///org/sonar/server/component/ComponentFinder/getByUuidOrKey(org.sonar.db.DbSession,java.lang.String,java.lang.String,org.sonar.server.component.ComponentFinder$ParamNames)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/sonar/server/measure/ws/ComponentAction/buildResponse(org.sonarqube.ws.client.measure.ComponentWsRequest,org.sonar.db.component.ComponentDto,com.google.common.base.Optional,java.util.List,java.util.List,java.util.List)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentAction/checkPermissions(org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentAction/getReferenceComponent(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/db/DbClient/snapshotDao()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/component/SnapshotDao/selectLastSnapshotByComponentId(org.sonar.db.DbSession,long)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentAction/searchMetrics(org.sonar.db.DbSession,org.sonarqube.ws.client.measure.ComponentWsRequest)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentWsRequest/getComponentId()|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonarqube/ws/client/measure/ComponentWsRequest/getComponentKey()|",
      "|java+method:///org/sonar/db/component/ComponentDto/getId()|",
      "|java+method:///org/sonar/server/component/ComponentFinder/getByUuidOrKey(org.sonar.db.DbSession,java.lang.String,java.lang.String,org.sonar.server.component.ComponentFinder$ParamNames)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/sonar/server/measure/ws/ComponentAction/buildResponse(org.sonarqube.ws.client.measure.ComponentWsRequest,org.sonar.db.component.ComponentDto,com.google.common.base.Optional,java.util.List,java.util.List,java.util.List)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentAction/checkPermissions(org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentAction/getReferenceComponent(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///org/sonar/db/DbClient/snapshotDao()|",
      "|java+method:///org/sonar/server/measure/ws/SnapshotDtoToWsPeriods/snapshotToWsPeriods(org.sonar.db.component.SnapshotDto)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentAction/searchMeasures(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto,org.sonar.db.component.SnapshotDto,java.util.List,java.util.List,java.lang.Long)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/measure/ws/ComponentAction/searchDeveloperId(org.sonar.db.DbSession,org.sonarqube.ws.client.measure.ComponentWsRequest)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/RuleActivator/bulkActivate(org.sonar.server.rule.index.RuleQuery,java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/sonar/db/DbSession/close()|",
    "v1Body": [
      "|java+method:///org/sonar/server/qualityprofile/BulkChangeResult/addChanges(java.util.Collection)|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/exceptions/BadRequestException/errors()|",
      "|java+constructor:///org/sonar/server/qualityprofile/RuleActivation/RuleActivation(org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/server/search/Result/scroll()|",
      "|java+method:///org/sonar/server/search/QueryContext/setScroll(boolean)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/activate(org.sonar.db.DbSession,org.sonar.server.qualityprofile.RuleActivation,java.lang.String)|",
      "|java+method:///org/sonar/server/search/IndexClient/get(java.lang.Class)|",
      "|java+constructor:///org/sonar/server/search/QueryContext/QueryContext(org.sonar.server.user.UserSession)|",
      "|java+method:///org/sonar/server/qualityprofile/BulkChangeResult/getErrors()|",
      "|java+method:///org/sonar/server/search/IndexField/field()|",
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+constructor:///org/sonar/server/qualityprofile/BulkChangeResult/BulkChangeResult()|",
      "|java+method:///org/sonar/server/rule/Rule/key()|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/server/qualityprofile/BulkChangeResult/incrementFailed()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/rule/index/RuleIndex/search(org.sonar.server.rule.index.RuleQuery,org.sonar.server.search.QueryContext)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivation/setSeverity(java.lang.String)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/search/QueryContext/setFieldsToReturn(java.util.Collection)|",
      "|java+method:///org/sonar/server/qualityprofile/BulkChangeResult/incrementSucceeded()|",
      "|java+method:///org/sonar/server/exceptions/Errors/add(org.sonar.server.exceptions.Errors)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/qualityprofile/BulkChangeResult/addChanges(java.util.Collection)|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/server/exceptions/BadRequestException/errors()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivation/setSeverity(java.lang.String)|",
      "|java+constructor:///org/sonar/server/qualityprofile/RuleActivation/RuleActivation(org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/server/qualityprofile/BulkChangeResult/getChanges()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/qualityprofile/BulkChangeResult/getErrors()|",
      "|java+constructor:///org/sonar/server/qualityprofile/BulkChangeResult/BulkChangeResult()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/qualityprofile/BulkChangeResult/incrementFailed()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/qualityprofile/BulkChangeResult/incrementSucceeded()|",
      "|java+method:///org/sonar/server/exceptions/Errors/add(org.sonar.server.exceptions.Errors)|",
      "|java+method:///org/sonar/server/rule/index/RuleIndex/searchAll(org.sonar.server.rule.index.RuleQuery)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/activate(org.sonar.db.DbSession,org.sonar.server.qualityprofile.RuleActivation,java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndexer/index(java.util.List)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/qualitygate/QualityGateServiceImpl/toQualityGate(org.sonar.db.qualitygate.QualityGateDto)|",
    "called": "|java+method:///org/sonar/db/qualitygate/QualityGateConditionDao/selectForQualityGate(long)|",
    "v1Body": [
      "|java+method:///com/google/common/collect/FluentIterable/from(java.lang.Iterable)|",
      "|java+method:///org/sonar/db/qualitygate/QualityGateDto/getName()|",
      "|java+constructor:///org/sonar/server/computation/qualitygate/QualityGate/QualityGate(java.lang.String,java.lang.Iterable)|",
      "|java+method:///com/google/common/collect/FluentIterable/transform(com.google.common.base.Function)|",
      "|java+method:///org/sonar/db/qualitygate/QualityGateConditionDao/selectForQualityGate(long)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/sonar/db/qualitygate/QualityGateDto/getId()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/FluentIterable/from(java.lang.Iterable)|",
      "|java+method:///org/sonar/db/qualitygate/QualityGateDto/getName()|",
      "|java+method:///com/google/common/collect/FluentIterable/transform(com.google.common.base.Function)|",
      "|java+constructor:///org/sonar/server/computation/qualitygate/QualityGate/QualityGate(long,java.lang.String,java.lang.Iterable)|",
      "|java+method:///org/sonar/db/qualitygate/QualityGateConditionDao/selectForQualityGate(long)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/sonar/db/qualitygate/QualityGateDto/getId()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/startup/ClearRulesOverloadedDebt/hasAlreadyBeenExecuted(org.sonar.db.DbSession)|",
    "called": "|java+method:///org/sonar/db/loadedtemplate/LoadedTemplateDao/countByTypeAndKey(java.lang.String,java.lang.String,org.apache.ibatis.session.SqlSession)|",
    "v1Body": [
      "|java+method:///org/sonar/server/db/DbClient/loadedTemplateDao()|",
      "|java+method:///org/sonar/db/loadedtemplate/LoadedTemplateDao/countByTypeAndKey(java.lang.String,java.lang.String,org.apache.ibatis.session.SqlSession)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/loadedTemplateDao()|",
      "|java+method:///org/sonar/db/loadedtemplate/LoadedTemplateDao/countByTypeAndKey(java.lang.String,java.lang.String,org.apache.ibatis.session.SqlSession)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/debt/DebtModelBackup/backupFromLanguage(java.lang.String)|",
    "called": "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
    "v1Body": [
      "|java+method:///org/sonar/db/debt/CharacteristicDto/getId()|",
      "|java+method:///org/sonar/server/debt/DebtModelBackup/toDebtCharacteristic(org.sonar.db.debt.CharacteristicDto)|",
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/debt/DebtModelBackup/toRuleDebt(org.sonar.db.rule.RuleDto,org.sonar.server.debt.DebtModelXMLExporter$DebtModel)|",
      "|java+method:///org/sonar/db/debt/CharacteristicDto/getParentId()|",
      "|java+constructor:///org/sonar/server/debt/DebtModelXMLExporter$DebtModel/DebtModelXMLExporter$DebtModel()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/sonar/server/db/DbClient/deprecatedRuleDao()|",
      "|java+method:///org/sonar/server/db/DbClient/debtCharacteristicDao()|",
      "|java+method:///org/sonar/server/debt/DebtModelBackup/checkPermission()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/server/debt/DebtModelXMLExporter$DebtModel/addRootCharacteristic(org.sonar.api.server.debt.DebtCharacteristic)|",
      "|java+method:///org/sonar/server/debt/DebtModelXMLExporter/export(org.sonar.server.debt.DebtModelXMLExporter$DebtModel,java.util.List)|",
      "|java+method:///org/sonar/db/debt/CharacteristicDao/selectEnabledCharacteristics(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getLanguage()|",
      "|java+method:///org/sonar/db/debt/CharacteristicDto/getKey()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/debt/DebtModelBackup/subCharacteristics(java.lang.Integer,java.util.List)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/selectEnabledAndNonManual(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/debt/DebtModelXMLExporter$DebtModel/addSubCharacteristic(org.sonar.api.server.debt.DebtCharacteristic,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getLanguage()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/debt/DebtModelBackup/checkPermission()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectEnabled(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/debt/DebtModelXMLExporter/export(java.util.List)|",
      "|java+method:///org/sonar/server/debt/DebtModelBackup/toRuleDebt(org.sonar.db.rule.RuleDto)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/step/PersistSnapshotsStep$PersistSnapshotsPathAwareVisitor/createSnapshot(org.sonar.server.computation.component.Component,org.sonar.server.computation.component.PathAwareVisitor$Path,java.lang.String,java.lang.String,boolean)|",
    "called": "|java+constructor:///org/sonar/db/component/SnapshotDto/SnapshotDto()|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setComponentId(java.lang.Long)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setBuildDate(java.lang.Long)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/getId()|",
      "|java+method:///org/sonar/server/computation/component/MutableDbIdsRepository/getComponentId(org.sonar.server.computation.component.Component)|",
      "|java+method:///org/sonar/server/computation/component/PathAwareVisitor$Path/parent()|",
      "|java+method:///org/sonar/server/computation/component/PathAwareVisitor$Path/isRoot()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/sonar/server/computation/step/PersistSnapshotsStep$SnapshotDtoHolder/getSnapshotDto()|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setLast(java.lang.Boolean)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setCreatedAt(java.lang.Long)|",
      "|java+method:///org/sonar/server/computation/step/PersistSnapshotsStep/access$300(org.sonar.server.computation.step.PersistSnapshotsStep)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setRootId(java.lang.Long)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/getDepth()|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setScope(java.lang.String)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setStatus(java.lang.String)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/getRootId()|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setVersion(java.lang.String)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setParentId(java.lang.Long)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getVersion()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/getPath()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setRootProjectId(java.lang.Long)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setPath(java.lang.String)|",
      "|java+constructor:///org/sonar/db/component/SnapshotDto/SnapshotDto()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setQualifier(java.lang.String)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setDepth(java.lang.Integer)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setComponentId(java.lang.Long)|",
      "|java+method:///org/sonar/server/computation/step/PersistSnapshotsStep/access$200(org.sonar.server.computation.step.PersistSnapshotsStep)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setCreatedAt(java.lang.Long)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setBuildDate(java.lang.Long)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/getId()|",
      "|java+method:///org/sonar/server/computation/component/MutableDbIdsRepository/getComponentId(org.sonar.server.computation.component.Component)|",
      "|java+method:///org/sonar/server/computation/component/PathAwareVisitor$Path/parent()|",
      "|java+method:///org/sonar/server/computation/component/PathAwareVisitor$Path/isRoot()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/sonar/server/computation/step/PersistSnapshotsStep$SnapshotDtoHolder/getSnapshotDto()|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setLast(java.lang.Boolean)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setRootId(java.lang.Long)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/getDepth()|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setScope(java.lang.String)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setStatus(java.lang.String)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/getRootId()|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setVersion(java.lang.String)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setParentId(java.lang.Long)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getVersion()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/getPath()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setRootProjectId(java.lang.Long)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setPath(java.lang.String)|",
      "|java+constructor:///org/sonar/db/component/SnapshotDto/SnapshotDto()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setQualifier(java.lang.String)|",
      "|java+method:///org/sonar/db/component/SnapshotDto/setDepth(java.lang.Integer)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/startup/ClearRulesOverloadedDebt/isSqalePluginInstalled(org.sonar.db.DbSession)|",
    "called": "|java+method:///org/sonar/db/property/PropertiesDao/selectGlobalProperty(org.sonar.db.DbSession,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/db/DbClient/propertiesDao()|",
      "|java+method:///org/sonar/db/property/PropertiesDao/selectGlobalProperty(org.sonar.db.DbSession,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/propertiesDao()|",
      "|java+method:///org/sonar/db/property/PropertiesDao/selectGlobalProperty(org.sonar.db.DbSession,java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/startup/ClearRulesOverloadedDebt/start()|",
    "called": "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/startup/ClearRulesOverloadedDebt/hasAlreadyBeenExecuted(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/startup/ClearRulesOverloadedDebt/clearDebt(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/startup/ClearRulesOverloadedDebt/markAsExecuted(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/startup/ClearRulesOverloadedDebt/isSqalePluginInstalled(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/DbSession/commit()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/startup/ClearRulesOverloadedDebt/hasAlreadyBeenExecuted(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/startup/ClearRulesOverloadedDebt/clearDebt(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/startup/ClearRulesOverloadedDebt/markAsExecuted(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/startup/ClearRulesOverloadedDebt/isSqalePluginInstalled(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/rule/index/RuleIndexer/index()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContextFactory/create(java.lang.String,org.sonar.api.rule.RuleKey,org.sonar.db.DbSession)|",
    "called": "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByKey(org.sonar.db.DbSession,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContextFactory/create(org.sonar.api.rule.RuleKey,org.sonar.db.DbSession,org.sonar.server.qualityprofile.RuleActivatorContext)|",
      "|java+constructor:///org/sonar/server/qualityprofile/RuleActivatorContext/RuleActivatorContext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/setProfile(org.sonar.db.qualityprofile.QualityProfileDto)|",
      "|java+constructor:///org/sonar/server/exceptions/BadRequestException/BadRequestException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/server/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContextFactory/create(org.sonar.api.rule.RuleKey,org.sonar.db.DbSession,org.sonar.server.qualityprofile.RuleActivatorContext)|",
      "|java+constructor:///org/sonar/server/qualityprofile/RuleActivatorContext/RuleActivatorContext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/setProfile(org.sonar.db.qualityprofile.QualityProfileDto)|",
      "|java+constructor:///org/sonar/server/exceptions/BadRequestException/BadRequestException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileProjectOperations/removeProject(java.lang.String,long,org.sonar.server.user.UserSession)|",
    "called": "|java+method:///org/sonar/db/component/ComponentDto/getKey()|",
    "v1Body": [
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileProjectOperations/checkPermission(org.sonar.server.user.UserSession,java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/deleteProjectProfileAssociation(java.lang.String,java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/component/ComponentDto/uuid()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/db/component/ComponentDto/key()|",
      "|java+method:///org/sonar/server/db/DbClient/componentDao()|",
      "|java+method:///org/sonar/db/component/ComponentDao/selectOrFailById(org.sonar.db.DbSession,long)|",
      "|java+method:///org/sonar/db/component/ComponentDto/getKey()|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/server/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByProjectAndLanguage(org.sonar.db.DbSession,java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileProjectOperations/checkPermission(org.sonar.server.user.UserSession,java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/deleteProjectProfileAssociation(java.lang.String,java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/component/ComponentDto/uuid()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/db/component/ComponentDto/key()|",
      "|java+method:///org/sonar/db/DbClient/componentDao()|",
      "|java+method:///org/sonar/db/component/ComponentDao/selectOrFailById(org.sonar.db.DbSession,long)|",
      "|java+method:///org/sonar/db/component/ComponentDto/getKey()|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByProjectAndLanguage(org.sonar.db.DbSession,java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/getByProjectAndLanguage(java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/sonar/db/DbSession/close()|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/getByProjectAndLanguage(org.sonar.db.DbSession,java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/getByProjectAndLanguage(org.sonar.db.DbSession,java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/ws/SearchAction/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///org/sonar/server/rule/ws/SearchAction/buildResponse(org.sonar.api.server.ws.Request,org.sonar.server.search.QueryContext,org.sonar.server.search.Result)|",
      "|java+method:///org/sonar/server/ws/WsUtils/writeProtobuf(com.google.protobuf.Message,org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
      "|java+method:///org/sonar/server/rule/ws/SearchAction/doSearch(org.sonar.server.rule.index.RuleQuery,org.sonar.server.search.QueryContext)|",
      "|java+method:///org/sonar/server/rule/ws/SearchAction/doQuery(org.sonar.api.server.ws.Request)|",
      "|java+method:///org/sonar/server/rule/ws/SearchAction/getQueryContext(org.sonar.api.server.ws.Request)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/rule/ws/SearchAction/doSearch(org.sonar.db.DbSession,org.sonar.server.rule.index.RuleQuery,org.sonar.server.es.SearchOptions)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/ws/WsUtils/writeProtobuf(com.google.protobuf.Message,org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
      "|java+method:///org/sonar/server/rule/ws/SearchAction/buildResponse(org.sonar.db.DbSession,org.sonarqube.ws.client.rule.SearchWsRequest,org.sonar.server.es.SearchOptions,org.sonar.server.rule.ws.SearchAction$SearchResult)|",
      "|java+method:///org/sonar/server/rule/ws/SearchAction/toSearchWsRequest(org.sonar.api.server.ws.Request)|",
      "|java+method:///org/sonar/server/rule/ws/SearchAction/doQuery(org.sonarqube.ws.client.rule.SearchWsRequest)|",
      "|java+method:///org/sonar/server/rule/ws/SearchAction/getQueryContext(org.sonarqube.ws.client.rule.SearchWsRequest)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/metric/DefaultMetricFinder/findById(int)|",
    "called": "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
    "v1Body": [
      "|java+method:///org/sonar/db/metric/MetricDao/selectById(org.sonar.db.DbSession,long)|",
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/metric/MetricDto/isEnabled()|",
      "|java+method:///org/sonar/server/db/DbClient/metricDao()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/server/metric/DefaultMetricFinder$ToMetric/apply(org.sonar.db.metric.MetricDto)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/metric/MetricDao/selectById(org.sonar.db.DbSession,long)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/metric/MetricDto/isEnabled()|",
      "|java+method:///org/sonar/db/DbClient/metricDao()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/server/metric/DefaultMetricFinder$ToMetric/apply(org.sonar.db.metric.MetricDto)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+constructor:///org/sonar/server/qualityprofile/index/ActiveRuleDoc/ActiveRuleDoc(java.util.Map)|",
    "called": "|java+method:///org/sonar/db/qualityprofile/ActiveRuleKey/parse(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/sonar/server/search/BaseDoc/BaseDoc(java.util.Map)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleKey/parse(java.lang.String)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///org/sonar/server/search/IndexField/field()|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleDoc/getField(java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///org/sonar/server/search/BaseDoc/BaseDoc(java.util.Map)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleKey/parse(java.lang.String)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleDoc/getField(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/setDefault(org.sonar.db.DbSession,java.lang.String)|",
    "called": "|java+method:///org/sonar/db/DbSession/commit()|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/setDefault(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/server/exceptions/Verifications/check(boolean,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/db/DbClient/qualityProfileDao()|",
      "|java+constructor:///org/sonar/server/exceptions/NotFoundException/NotFoundException(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/setDefault(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/server/exceptions/Verifications/check(boolean,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/db/DbClient/qualityProfileDao()|",
      "|java+constructor:///org/sonar/server/exceptions/NotFoundException/NotFoundException(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/metric/DefaultMetricFinder/findAll()|",
    "called": "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
    "v1Body": [
      "|java+method:///com/google/common/collect/FluentIterable/from(java.lang.Iterable)|",
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///com/google/common/collect/FluentIterable/transform(com.google.common.base.Function)|",
      "|java+method:///com/google/common/collect/FluentIterable/toList()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/db/metric/MetricDao/selectEnabled(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/db/DbClient/metricDao()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/FluentIterable/from(java.lang.Iterable)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///com/google/common/collect/FluentIterable/transform(com.google.common.base.Function)|",
      "|java+method:///com/google/common/collect/FluentIterable/toList()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/db/metric/MetricDao/selectEnabled(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/DbClient/metricDao()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/setDefault(java.lang.String)|",
    "called": "|java+method:///org/sonar/db/DbSession/close()|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/setDefault(org.sonar.db.DbSession,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/setDefault(org.sonar.db.DbSession,java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/RuleActivator/persist(org.sonar.server.qualityprofile.ActiveRuleChange,org.sonar.server.qualityprofile.RuleActivatorContext,org.sonar.db.DbSession)|",
    "called": "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/delete(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleKey)|",
    "v1Body": [
      "|java+method:///org/sonar/server/db/DbClient/activeRuleDao()|",
      "|java+method:///org/sonar/server/qualityprofile/db/ActiveRuleDao/deleteByKey(org.sonar.db.DbSession,java.io.Serializable)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/doInsert(org.sonar.server.qualityprofile.ActiveRuleChange,org.sonar.server.qualityprofile.RuleActivatorContext,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/getKey()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/doUpdate(org.sonar.server.qualityprofile.ActiveRuleChange,org.sonar.server.qualityprofile.RuleActivatorContext,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/getType()|",
      "|java+method:///org/sonar/server/activity/ActivityService/save(org.sonar.server.activity.Activity)|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/toActivity()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/activeRuleDao()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/delete(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleKey)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/doInsert(org.sonar.server.qualityprofile.ActiveRuleChange,org.sonar.server.qualityprofile.RuleActivatorContext,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/getKey()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/doUpdate(org.sonar.server.qualityprofile.ActiveRuleChange,org.sonar.server.qualityprofile.RuleActivatorContext,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/getType()|",
      "|java+method:///org/sonar/server/activity/ActivityService/save(org.sonar.server.activity.Activity)|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/toActivity()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/ws/UpdateAction/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///org/sonar/server/rule/ws/UpdateAction/readRequest(org.sonar.api.server.ws.Request)|",
      "|java+method:///org/sonar/server/ws/WsUtils/writeProtobuf(com.google.protobuf.Message,org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
      "|java+method:///org/sonar/server/rule/RuleUpdate/getRuleKey()|",
      "|java+method:///org/sonar/server/rule/RuleService/update(org.sonar.server.rule.RuleUpdate)|",
      "|java+method:///org/sonar/server/rule/ws/UpdateAction/buildResponse(org.sonar.api.rule.RuleKey)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/rule/RuleUpdater/update(org.sonar.db.DbSession,org.sonar.server.rule.RuleUpdate,org.sonar.server.user.UserSession)|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/rule/ws/UpdateAction/readRequest(org.sonar.db.DbSession,org.sonar.api.server.ws.Request)|",
      "|java+method:///org/sonar/server/rule/ws/UpdateAction/buildResponse(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/server/ws/WsUtils/writeProtobuf(com.google.protobuf.Message,org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
      "|java+method:///org/sonar/server/rule/RuleUpdate/getRuleKey()|",
      "|java+method:///org/sonar/server/rule/ws/UpdateAction/checkPermission()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/measure/MeasureRepositoryImpl/getBaseMeasure(org.sonar.server.computation.component.Component,org.sonar.server.computation.metric.Metric)|",
    "called": "|java+method:///org/sonar/db/measure/MeasureDao/selectByComponentKeyAndMetricKey(org.sonar.db.DbSession,java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///org/sonar/server/computation/component/Component/getKey()|",
      "|java+method:///org/sonar/server/computation/measure/Measure/getCharacteristicId()|",
      "|java+method:///org/sonar/server/computation/measure/Measure/getRuleId()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///org/sonar/server/computation/metric/Metric/getKey()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/computation/measure/MeasureDtoToMeasure/toMeasure(org.sonar.db.measure.MeasureDto,org.sonar.server.computation.metric.Metric)|",
      "|java+method:///java/util/Objects/requireNonNull(java.lang.Object)|",
      "|java+method:///org/sonar/db/DbClient/measureDao()|",
      "|java+method:///org/sonar/db/measure/MeasureDao/selectByComponentKeyAndMetricKey(org.sonar.db.DbSession,java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/computation/component/Component/getKey()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/sonar/server/computation/metric/Metric/getKey()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/computation/measure/MeasureDtoToMeasure/toMeasure(org.sonar.db.measure.MeasureDto,org.sonar.server.computation.metric.Metric)|",
      "|java+method:///java/util/Objects/requireNonNull(java.lang.Object)|",
      "|java+method:///org/sonar/db/DbClient/measureDao()|",
      "|java+method:///org/sonar/db/measure/MeasureDao/selectByComponentKeyAndMetricKey(org.sonar.db.DbSession,java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/ws/SearchDataLoader/findDefaultProfiles(org.sonarqube.ws.client.qualityprofile.SearchWsRequest)|",
    "called": "|java+method:///org/sonar/db/DbSession/close()|",
    "v1Body": [
      "|java+method:///org/sonar/api/resources/Language/getKey()|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/api/resources/Languages/all()|",
      "|java+method:///org/sonar/server/qualityprofile/ws/SearchDataLoader/getDefaultProfile(org.sonar.db.DbSession,java.lang.String,java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonarqube/ws/client/qualityprofile/SearchWsRequest/getProfileName()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/qualityprofile/ws/SearchDataLoader/lookupByProfileName(org.sonar.db.DbSession,java.util.Map,java.util.Set,java.lang.String)|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///org/sonar/server/qualityprofile/ws/SearchDataLoader/lookupDefaults(org.sonar.db.DbSession,java.util.Map,java.util.Set)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+constructor:///java/util/HashMap/HashMap(int)|",
      "|java+method:///org/sonar/server/qualityprofile/ws/SearchDataLoader/getLanguageKeys()|",
      "|java+method:///org/sonarqube/ws/client/qualityprofile/SearchWsRequest/getProfileName()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/RubyRuleService/findByKey(java.lang.String)|",
    "called": "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///org/sonar/server/rule/RuleService/getByKey(org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/api/rule/RuleKey/parse(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+method:///com/google/common/base/Optional/orNull()|",
      "|java+method:///org/sonar/api/rule/RuleKey/parse(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectByKey(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContextFactory/create(org.sonar.server.qualityprofile.QProfileName,org.sonar.api.rule.RuleKey,org.sonar.db.DbSession)|",
    "called": "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByNameAndLanguage(java.lang.String,java.lang.String,org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContextFactory/create(org.sonar.api.rule.RuleKey,org.sonar.db.DbSession,org.sonar.server.qualityprofile.RuleActivatorContext)|",
      "|java+constructor:///org/sonar/server/qualityprofile/RuleActivatorContext/RuleActivatorContext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileName/getLanguage()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/setProfile(org.sonar.db.qualityprofile.QualityProfileDto)|",
      "|java+constructor:///org/sonar/server/exceptions/BadRequestException/BadRequestException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/server/db/DbClient/qualityProfileDao()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByNameAndLanguage(java.lang.String,java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileName/getName()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContextFactory/create(org.sonar.api.rule.RuleKey,org.sonar.db.DbSession,org.sonar.server.qualityprofile.RuleActivatorContext)|",
      "|java+constructor:///org/sonar/server/qualityprofile/RuleActivatorContext/RuleActivatorContext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileName/getLanguage()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/setProfile(org.sonar.db.qualityprofile.QualityProfileDto)|",
      "|java+constructor:///org/sonar/server/exceptions/BadRequestException/BadRequestException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/db/DbClient/qualityProfileDao()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByNameAndLanguage(java.lang.String,java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileName/getName()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContextFactory/initRule(org.sonar.api.rule.RuleKey,org.sonar.server.qualityprofile.RuleActivatorContext,org.sonar.db.DbSession)|",
    "called": "|java+method:///org/sonar/db/rule/RuleDao/selectRuleParamsByRuleKey(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|",
    "v1Body": [
      "|java+method:///org/sonar/server/rule/db/RuleDao/selectRuleParamsByRuleKey(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/getNullableByKey(org.sonar.db.DbSession,java.io.Serializable)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/setRule(org.sonar.db.rule.RuleDto)|",
      "|java+constructor:///org/sonar/server/exceptions/BadRequestException/BadRequestException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/db/DbClient/deprecatedRuleDao()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/setRuleParams(java.util.Collection)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getKey()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectByKey(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/setRule(org.sonar.db.rule.RuleDto)|",
      "|java+constructor:///org/sonar/server/exceptions/BadRequestException/BadRequestException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/setRuleParams(java.util.Collection)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectRuleParamsByRuleKey(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getKey()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/DefaultRuleFinder/findById(int)|",
    "called": "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///org/sonar/server/rule/index/RuleIndex/getById(int)|",
      "|java+method:///org/sonar/server/rule/DefaultRuleFinder/toRule(org.sonar.server.rule.Rule)|",
      "|java+method:///org/sonar/server/rule/Rule/status()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getKey()|",
      "|java+method:///org/sonar/server/rule/DefaultRuleFinder/toRule(org.sonar.db.rule.RuleDto,java.util.List)|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectRuleParamsByRuleKey(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectById(long,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getStatus()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/IssueService/setSeverity(java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/sonar/db/DbSession/close()|",
    "v1Body": [
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/user/UserSession/checkComponentPermission(java.lang.String,java.lang.String)|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+method:///org/sonar/server/issue/IssueService/verifyLoggedIn()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/issue/IssueService/saveIssue(org.sonar.db.DbSession,org.sonar.core.issue.DefaultIssue,org.sonar.core.issue.IssueChangeContext,java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/toDefaultIssue()|",
      "|java+method:///org/sonar/core/issue/IssueChangeContext/createUser(java.util.Date,java.lang.String)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/projectKey()|",
      "|java+method:///org/sonar/server/issue/IssueService/getByKeyForUpdate(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/core/issue/IssueUpdater/setManualSeverity(org.sonar.core.issue.DefaultIssue,java.lang.String,org.sonar.core.issue.IssueChangeContext)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/user/UserSession/checkComponentUuidPermission(java.lang.String,java.lang.String)|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+method:///org/sonar/server/user/UserSession/checkLoggedIn()|",
      "|java+method:///org/sonar/server/issue/IssueUpdater/setManualSeverity(org.sonar.core.issue.DefaultIssue,java.lang.String,org.sonar.core.issue.IssueChangeContext)|",
      "|java+method:///org/sonar/server/issue/IssueService/getByKeyForUpdate(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/issue/IssueService/saveIssue(org.sonar.db.DbSession,org.sonar.core.issue.DefaultIssue,org.sonar.core.issue.IssueChangeContext,java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/toDefaultIssue()|",
      "|java+method:///org/sonar/core/issue/IssueChangeContext/createUser(java.util.Date,java.lang.String)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/projectUuid()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/IssueService/assign(java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/sonar/db/DbSession/close()|",
    "v1Body": [
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/core/issue/IssueUpdater/assign(org.sonar.core.issue.DefaultIssue,org.sonar.api.user.User,org.sonar.core.issue.IssueChangeContext)|",
      "|java+method:///org/sonar/api/user/UserFinder/findByLogin(java.lang.String)|",
      "|java+constructor:///org/sonar/server/exceptions/BadRequestException/BadRequestException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/server/issue/IssueService/getByKeyForUpdate(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/issue/IssueService/verifyLoggedIn()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/issue/IssueService/saveIssue(org.sonar.db.DbSession,org.sonar.core.issue.DefaultIssue,org.sonar.core.issue.IssueChangeContext,java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/toDefaultIssue()|",
      "|java+method:///org/sonar/core/issue/IssueChangeContext/createUser(java.util.Date,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/api/user/UserFinder/findByLogin(java.lang.String)|",
      "|java+constructor:///org/sonar/server/exceptions/BadRequestException/BadRequestException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/server/user/UserSession/checkLoggedIn()|",
      "|java+method:///org/sonar/server/issue/IssueService/getByKeyForUpdate(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+method:///org/sonar/server/issue/IssueUpdater/assign(org.sonar.core.issue.DefaultIssue,org.sonar.api.user.User,org.sonar.core.issue.IssueChangeContext)|",
      "|java+method:///org/sonar/server/issue/IssueService/saveIssue(org.sonar.db.DbSession,org.sonar.core.issue.DefaultIssue,org.sonar.core.issue.IssueChangeContext,java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/toDefaultIssue()|",
      "|java+method:///org/sonar/core/issue/IssueChangeContext/createUser(java.util.Date,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/step/PersistProjectLinksStep$ProjectLinkVisitor/mergeLinks(org.sonar.db.DbSession,java.lang.String,java.util.List,java.util.List)|",
    "called": "|java+method:///org/sonar/db/component/ComponentLinkDao/delete(org.sonar.db.DbSession,long)|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbClient/componentLinkDao()|",
      "|java+constructor:///org/sonar/db/component/ComponentLinkDto/ComponentLinkDto()|",
      "|java+method:///org/sonar/server/computation/step/PersistProjectLinksStep/access$200(org.sonar.server.computation.step.PersistProjectLinksStep)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$ComponentLink/getHref()|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/getType()|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/getId()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/db/component/ComponentLinkDao/insert(org.sonar.db.DbSession,org.sonar.db.component.ComponentLinkDto)|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/setType(java.lang.String)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///com/google/common/collect/Iterables/find(java.lang.Iterable,com.google.common.base.Predicate,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/component/ComponentLinkDao/update(org.sonar.db.DbSession,org.sonar.db.component.ComponentLinkDto)|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/setComponentUuid(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/server/computation/step/PersistProjectLinksStep/access$400(org.sonar.server.computation.step.PersistProjectLinksStep)|",
      "|java+method:///org/sonar/api/i18n/I18n/message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/setName(java.lang.String)|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/setHref(java.lang.String)|",
      "|java+method:///com/google/common/collect/Sets/newHashSet()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/computation/step/PersistProjectLinksStep$ProjectLinkVisitor/convertType(org.sonar.batch.protocol.Constants$ComponentLinkType)|",
      "|java+method:///org/sonar/db/component/ComponentLinkDao/delete(org.sonar.db.DbSession,long)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+constructor:///org/sonar/server/computation/step/PersistProjectLinksStep$ProjectLinkVisitor$1/PersistProjectLinksStep$ProjectLinkVisitor$1(org.sonar.server.computation.step.PersistProjectLinksStep$ProjectLinkVisitor,org.sonar.batch.protocol.output.BatchReport$ComponentLink)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/util/List/contains(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$ComponentLink/getType()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/componentLinkDao()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$ComponentLink/getType()|",
      "|java+constructor:///org/sonar/db/component/ComponentLinkDto/ComponentLinkDto()|",
      "|java+method:///org/sonar/server/computation/step/PersistProjectLinksStep/access$200(org.sonar.server.computation.step.PersistProjectLinksStep)|",
      "|java+constructor:///org/sonar/server/computation/step/PersistProjectLinksStep$ProjectLinkVisitor$1/PersistProjectLinksStep$ProjectLinkVisitor$1(org.sonar.server.computation.step.PersistProjectLinksStep$ProjectLinkVisitor,org.sonar.scanner.protocol.output.ScannerReport$ComponentLink)|",
      "|java+method:///org/sonar/db/component/ComponentLinkDao/delete(org.sonar.db.DbSession,long)|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/getType()|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/getId()|",
      "|java+method:///org/sonar/db/component/ComponentLinkDao/insert(org.sonar.db.DbSession,org.sonar.db.component.ComponentLinkDto)|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/setType(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///com/google/common/collect/Iterables/find(java.lang.Iterable,com.google.common.base.Predicate,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/component/ComponentLinkDao/update(org.sonar.db.DbSession,org.sonar.db.component.ComponentLinkDto)|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/setComponentUuid(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/server/computation/step/PersistProjectLinksStep/access$400(org.sonar.server.computation.step.PersistProjectLinksStep)|",
      "|java+method:///org/sonar/api/i18n/I18n/message(java.util.Locale,java.lang.String,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/setName(java.lang.String)|",
      "|java+method:///org/sonar/db/component/ComponentLinkDto/setHref(java.lang.String)|",
      "|java+method:///com/google/common/collect/Sets/newHashSet()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/sonar/server/computation/step/PersistProjectLinksStep$ProjectLinkVisitor/convertType(org.sonar.scanner.protocol.output.ScannerReport$ComponentLink$ComponentLinkType)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$ComponentLink/getHref()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/util/List/contains(java.lang.Object)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/RegisterRules/createRuleDto(org.sonar.api.server.rule.RulesDefinition$Rule,org.sonar.db.DbSession)|",
    "called": "|java+method:///org/sonar/db/rule/RuleDto/setType(org.sonar.api.rules.RuleType)|",
    "v1Body": [
      "|java+method:///org/sonar/db/rule/RuleDto/setEffortToFixDescription(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setSystemTags(java.util.Set)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setStatus(org.sonar.api.rule.RuleStatus)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/htmlDescription()|",
      "|java+method:///org/sonar/db/rule/RuleDto/createFor(org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/name()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/effortToFixDescription()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/insert(org.sonar.db.DbSession,org.sonar.db.Dto)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setConfigKey(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/internalKey()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/tags()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/template()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Repository/key()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setDescriptionFormat(org.sonar.db.rule.RuleDto$Format)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/markdownDescription()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setIsTemplate(boolean)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Repository/language()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/repository()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setLanguage(java.lang.String)|",
      "|java+method:///org/sonar/server/db/DbClient/deprecatedRuleDao()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/key()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/status()|",
      "|java+method:///org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setName(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/severity()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/rule/RuleDto/setSystemTags(java.util.Set)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setStatus(org.sonar.api.rule.RuleStatus)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/htmlDescription()|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+method:///org/sonar/db/rule/RuleDto/createFor(org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/name()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setUpdatedAt(long)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/key()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setConfigKey(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/internalKey()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setGapDescription(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/tags()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setType(org.sonar.api.rules.RuleType)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Repository/key()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setDescriptionFormat(org.sonar.db.rule.RuleDto$Format)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/markdownDescription()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setIsTemplate(boolean)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/gapDescription()|",
      "|java+method:///org/sonar/api/rules/RuleType/valueOf(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDao/insert(org.sonar.db.DbSession,org.sonar.db.rule.RuleDto)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Repository/language()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/repository()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setLanguage(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/status()|",
      "|java+method:///org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setCreatedAt(long)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/template()|",
      "|java+method:///org/sonar/api/rules/RuleType/name()|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/type()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setName(java.lang.String)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/severity()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/RuleActivator/deactivate(org.sonar.db.qualityprofile.ActiveRuleKey)|",
    "called": "|java+method:///org/sonar/db/DbSession/close()|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/deactivate(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleKey)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/deactivate(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleKey)|",
      "|java+method:///org/sonar/server/qualityprofile/index/ActiveRuleIndexer/index(java.util.List)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/source/SymbolsLineReader/processSymbols(org.sonar.db.protobuf.DbFileSources$Line$Builder)|",
    "called": "|java+method:///org/sonar/db/protobuf/DbFileSources$Line$Builder/setSymbols(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Symbol/getReferenceList()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Line$Builder/getSource()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Symbol/getDeclaration()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Line$Builder/setSymbols(java.lang.String)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Collections/sort(java.util.List,java.util.Comparator)|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Line$Builder/getLine()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/google/common/collect/SetMultimap/get(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/length()|",
      "|java+method:///org/sonar/server/computation/source/SymbolsLineReader/appendSymbol(java.lang.StringBuilder,org.sonar.batch.protocol.output.BatchReport$TextRange,int,int,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Symbol/getReferenceList()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Line$Builder/getSource()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/StringBuilder/length()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/sonar/server/computation/source/SymbolsLineReader/appendSymbol(java.lang.StringBuilder,org.sonar.scanner.protocol.output.ScannerReport$TextRange,int,int,java.lang.String)|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Line$Builder/setSymbols(java.lang.String)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Symbol/getDeclaration()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Collections/sort(java.util.List,java.util.Comparator)|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Line$Builder/getLine()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/google/common/collect/SetMultimap/get(java.lang.Object)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/DefaultRuleFinder/findAll(org.sonar.api.rules.RuleQuery)|",
    "called": "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///org/sonar/server/rule/DefaultRuleFinder/toRule(org.sonar.server.rule.Rule)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/rule/index/RuleIndex/search(org.sonar.server.rule.index.RuleQuery,org.sonar.server.search.QueryContext)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+constructor:///org/sonar/server/search/QueryContext/QueryContext(org.sonar.server.user.UserSession)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/search/Result/getHits()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/server/rule/DefaultRuleFinder/toQuery(org.sonar.api.rules.RuleQuery)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/rule/DefaultRuleFinder/convertToRuleApi(org.sonar.db.DbSession,java.util.List)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectByQuery(org.sonar.db.DbSession,org.sonar.api.rules.RuleQuery)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/batch/ProjectDataLoader/load(org.sonar.server.batch.ProjectDataQuery)|",
    "called": "|java+method:///org/sonar/db/component/ComponentDao/selectEnabledDescendantModules(org.sonar.db.DbSession,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/user/UserSession/hasComponentUuidPermission(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/db/component/ComponentDao/selectEnabledDescendantModules(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/getSettingsFromParents(org.sonar.db.component.ComponentDto,boolean,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/getProject(org.sonar.db.component.ComponentDto,org.sonar.db.DbSession)|",
      "|java+constructor:///org/sonar/server/batch/ProjectDataLoader$TreeModuleSettings/ProjectDataLoader$TreeModuleSettings(java.util.Map,java.util.Map,java.util.List,java.util.List,org.sonar.server.batch.ProjectDataLoader$1)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/addFileData(org.sonar.batch.protocol.input.ProjectRepositories,java.util.List,java.util.List)|",
      "|java+method:///org/sonar/batch/protocol/input/ProjectRepositories/setLastAnalysisDate(java.util.Date)|",
      "|java+method:///org/sonar/db/property/PropertiesDao/selectEnabledDescendantModuleProperties(java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/component/ComponentDto/uuid()|",
      "|java+method:///org/sonar/server/batch/ProjectDataQuery/getModuleKey()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/db/DbClient/componentDao()|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///org/sonar/server/batch/ProjectDataQuery/isIssuesMode()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/ws/WsUtils/checkFoundWithOptional(com.google.common.base.Optional,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///org/sonar/batch/protocol/input/ProjectRepositories/ProjectRepositories()|",
      "|java+method:///org/sonar/db/component/ComponentDto/getKey()|",
      "|java+method:///org/sonar/db/DbClient/propertiesDao()|",
      "|java+method:///org/sonar/db/component/ComponentDto/projectUuid()|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/searchFilesWithHashAndRevision(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/checkPermission(boolean,boolean,boolean)|",
      "|java+method:///org/sonar/db/component/ComponentDao/selectByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/addSettingsToChildrenModules(org.sonar.batch.protocol.input.ProjectRepositories,java.lang.String,java.util.Map,org.sonar.server.batch.ProjectDataLoader$TreeModuleSettings,boolean)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/addSettings(org.sonar.batch.protocol.input.ProjectRepositories,java.lang.String,java.util.Map)|",
      "|java+method:///org/sonar/db/component/ComponentDto/key()|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/moduleIdsByKey(java.util.List)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/moduleUuidsByKey(java.util.List)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/component/ComponentDto/getKey()|",
      "|java+method:///org/sonar/db/component/ComponentDao/selectEnabledDescendantModules(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/getSettingsFromParents(org.sonar.db.component.ComponentDto,boolean,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/getProject(org.sonar.db.component.ComponentDto,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/scanner/protocol/input/ProjectRepositories/setLastAnalysisDate(java.util.Date)|",
      "|java+constructor:///org/sonar/server/batch/ProjectDataLoader$TreeModuleSettings/ProjectDataLoader$TreeModuleSettings(java.util.Map,java.util.Map,java.util.List,java.util.List,org.sonar.server.batch.ProjectDataLoader$1)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/addSettingsToChildrenModules(org.sonar.scanner.protocol.input.ProjectRepositories,java.lang.String,java.util.Map,org.sonar.server.batch.ProjectDataLoader$TreeModuleSettings,boolean)|",
      "|java+method:///org/sonar/db/property/PropertiesDao/selectEnabledDescendantModuleProperties(java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/batch/ProjectDataQuery/getModuleKey()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/db/component/ComponentDto/key()|",
      "|java+method:///org/sonar/db/DbClient/componentDao()|",
      "|java+constructor:///org/sonar/scanner/protocol/input/ProjectRepositories/ProjectRepositories()|",
      "|java+method:///org/sonar/server/user/UserSession/hasComponentUuidPermission(java.lang.String,java.lang.String)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///org/sonar/server/batch/ProjectDataQuery/isIssuesMode()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/ws/WsUtils/checkFoundWithOptional(com.google.common.base.Optional,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/db/DbClient/propertiesDao()|",
      "|java+method:///org/sonar/db/component/ComponentDto/projectUuid()|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/searchFilesWithHashAndRevision(org.sonar.db.DbSession,org.sonar.db.component.ComponentDto)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/addFileData(org.sonar.scanner.protocol.input.ProjectRepositories,java.util.List,java.util.List)|",
      "|java+method:///org/sonar/db/component/ComponentDto/uuid()|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/addSettings(org.sonar.scanner.protocol.input.ProjectRepositories,java.lang.String,java.util.Map)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/checkPermission(boolean,boolean,boolean)|",
      "|java+method:///org/sonar/db/component/ComponentDao/selectByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/moduleIdsByKey(java.util.List)|",
      "|java+method:///org/sonar/server/batch/ProjectDataLoader/moduleUuidsByKey(java.util.List)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/RuleActivator/doInsert(org.sonar.server.qualityprofile.ActiveRuleChange,org.sonar.server.qualityprofile.RuleActivatorContext,org.sonar.db.DbSession)|",
    "called": "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/setSeverity(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/rule()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/getParameters()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/createFor(org.sonar.db.qualityprofile.QualityProfileDto,org.sonar.db.rule.RuleDto)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/qualityprofile/db/ActiveRuleDao/insertParam(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleDto,org.sonar.db.qualityprofile.ActiveRuleParamDto)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleParamDto/setValue(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/server/db/DbClient/activeRuleDao()|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/getSeverity()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/ruleParamsByKeys()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleParamDto/createFor(org.sonar.db.rule.RuleParamDto)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/profile()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/setInheritance(java.lang.String)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/getInheritance()|",
      "|java+method:///org/sonar/server/qualityprofile/db/ActiveRuleDao/insert(org.sonar.db.DbSession,org.sonar.db.Dto)|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRule$Inheritance/name()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/rule()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/setUpdatedAt(long)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/getParameters()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/createFor(org.sonar.db.qualityprofile.QualityProfileDto,org.sonar.db.rule.RuleDto)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/setCreatedAt(long)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleParamDto/setValue(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/insert(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleDto)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRule$Inheritance/name()|",
      "|java+method:///org/sonar/db/DbClient/activeRuleDao()|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/getSeverity()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/ruleParamsByKeys()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleParamDto/createFor(org.sonar.db.rule.RuleParamDto)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivatorContext/profile()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/setInheritance(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/insertParam(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleDto,org.sonar.db.qualityprofile.ActiveRuleParamDto)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/getInheritance()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileService/searchActivities(org.sonar.server.qualityprofile.QProfileActivityQuery,org.sonar.server.es.SearchOptions)|",
    "called": "|java+method:///org/sonar/db/DbSession/close()|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivity/getLogin()|",
      "|java+constructor:///org/sonar/server/search/Result/Result(org.elasticsearch.action.search.SearchResponse)|",
      "|java+method:///org/sonar/server/search/Result/getHits()|",
      "|java+method:///org/sonar/server/activity/index/ActivityIndex/doSearch(org.sonar.server.activity.index.ActivityQuery,org.sonar.server.es.SearchOptions)|",
      "|java+method:///org/sonar/server/db/DbClient/deprecatedRuleDao()|",
      "|java+method:///org/elasticsearch/search/SearchHit/getSource()|",
      "|java+method:///org/sonar/db/user/UserDao/selectActiveUserByLogin(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/rule/db/RuleDao/getNullableByKey(org.sonar.db.DbSession,java.io.Serializable)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivity/authorName(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivity/ruleKey()|",
      "|java+method:///org/elasticsearch/action/search/SearchResponse/getHits()|",
      "|java+method:///org/elasticsearch/search/SearchHits/getHits()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivity/ruleName(java.lang.String)|",
      "|java+constructor:///org/sonar/server/qualityprofile/QProfileActivity/QProfileActivity(java.util.Map)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/server/db/DbClient/userDao()|",
      "|java+method:///org/sonar/db/user/UserDto/getName()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getName()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/user/UserDao/selectActiveUserByLogin(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+constructor:///org/sonar/server/search/Result/Result(org.elasticsearch.action.search.SearchResponse)|",
      "|java+method:///org/sonar/server/search/Result/getHits()|",
      "|java+method:///org/sonar/server/activity/index/ActivityIndex/doSearch(org.sonar.server.activity.index.ActivityQuery,org.sonar.server.es.SearchOptions)|",
      "|java+method:///org/elasticsearch/search/SearchHit/getSource()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivity/authorName(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivity/ruleKey()|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectByKey(org.sonar.db.DbSession,org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivity/getLogin()|",
      "|java+method:///org/elasticsearch/action/search/SearchResponse/getHits()|",
      "|java+method:///org/elasticsearch/search/SearchHits/getHits()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileActivity/ruleName(java.lang.String)|",
      "|java+constructor:///org/sonar/server/qualityprofile/QProfileActivity/QProfileActivity(java.util.Map)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/db/DbClient/userDao()|",
      "|java+method:///org/sonar/db/user/UserDto/getName()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getName()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileProjectOperations/addProject(java.lang.String,java.lang.String,org.sonar.server.user.UserSession,org.sonar.db.DbSession)|",
    "called": "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/insertProjectProfileAssociation(java.lang.String,java.lang.String,org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileProjectOperations/checkPermission(org.sonar.server.user.UserSession,java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/updateProjectProfileAssociation(java.lang.String,java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/component/ComponentDto/uuid()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileProjectOperations/findNotNull(java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/component/ComponentDto/key()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getLanguage()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/insertProjectProfileAssociation(java.lang.String,java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByProjectAndLanguage(org.sonar.db.DbSession,java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/server/db/DbClient/componentDao()|",
      "|java+method:///org/sonar/db/component/ComponentDao/selectOrFailByUuid(org.sonar.db.DbSession,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileProjectOperations/checkPermission(org.sonar.server.user.UserSession,java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/updateProjectProfileAssociation(java.lang.String,java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/component/ComponentDto/uuid()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileProjectOperations/findNotNull(java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/component/ComponentDto/key()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getLanguage()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/insertProjectProfileAssociation(java.lang.String,java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByProjectAndLanguage(org.sonar.db.DbSession,java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/db/DbClient/componentDao()|",
      "|java+method:///org/sonar/db/component/ComponentDao/selectOrFailByUuid(org.sonar.db.DbSession,java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+constructor:///org/sonar/server/measure/ws/MetricDtoWithBestValue/MetricDtoWithBestValue(org.sonar.db.metric.MetricDto,java.util.List)|",
    "called": "|java+method:///org/sonar/db/measure/MeasureDto/setVariation(int,java.lang.Double)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/sonar/db/measure/MeasureDto/setVariation(int,java.lang.Double)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/sonar/db/measure/MeasureDto/setMetricKey(java.lang.String)|",
      "|java+constructor:///org/sonar/db/measure/MeasureDto/MeasureDto()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/String/toLowerCase()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/sonar/db/measure/MeasureDto/setValue(java.lang.Double)|",
      "|java+method:///org/sonar/db/metric/MetricDto/getKey()|",
      "|java+method:///org/sonar/db/metric/MetricDto/getId()|",
      "|java+method:///org/sonar/db/measure/MeasureDto/setMetricId(java.lang.Integer)|",
      "|java+method:///org/sonar/db/metric/MetricDto/getBestValue()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/sonar/db/measure/MeasureDto/setMetricKey(java.lang.String)|",
      "|java+constructor:///org/sonar/db/measure/MeasureDto/MeasureDto()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/sonar/db/measure/MeasureDto/setValue(java.lang.Double)|",
      "|java+method:///org/sonar/db/metric/MetricDto/getKey()|",
      "|java+method:///org/sonar/db/metric/MetricDto/getId()|",
      "|java+method:///org/sonar/db/measure/MeasureDto/setVariation(int,java.lang.Double)|",
      "|java+method:///java/lang/String/toLowerCase(java.util.Locale)|",
      "|java+method:///org/sonar/db/measure/MeasureDto/setMetricId(java.lang.Integer)|",
      "|java+method:///org/sonar/db/metric/MetricDto/getBestValue()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/permission/ws/SearchProjectPermissionsDataLoader/searchRootComponents(org.sonar.db.DbSession,org.sonarqube.ws.client.permission.SearchProjectPermissionsWsRequest,org.sonar.api.utils.Paging)|",
    "called": "|java+method:///org/sonar/db/component/ComponentDao/selectByQuery(org.sonar.db.DbSession,org.sonar.db.component.ComponentQuery,int,int)|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///org/sonar/server/permission/ws/PermissionDependenciesFinder/getRootComponentOrModule(org.sonar.db.DbSession,org.sonar.server.permission.ws.WsProjectRef)|",
      "|java+method:///org/sonar/server/permission/ws/SearchProjectPermissionsDataLoader/qualifiers(java.lang.String)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///org/sonar/server/permission/ws/WsProjectRef/newOptionalWsProjectRef(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/db/DbClient/componentDao()|",
      "|java+method:///org/sonarqube/ws/client/permission/SearchProjectPermissionsWsRequest/getQualifier()|",
      "|java+method:///org/sonar/api/utils/Paging/pageSize()|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///org/sonar/api/utils/Paging/offset()|",
      "|java+method:///org/sonarqube/ws/client/permission/SearchProjectPermissionsWsRequest/getProjectKey()|",
      "|java+method:///org/sonarqube/ws/client/permission/SearchProjectPermissionsWsRequest/getProjectId()|",
      "|java+method:///org/sonarqube/ws/client/permission/SearchProjectPermissionsWsRequest/getQuery()|",
      "|java+method:///org/sonar/db/component/ComponentDao/selectComponents(org.sonar.db.DbSession,java.util.Collection,int,int,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///org/sonar/server/permission/ws/PermissionDependenciesFinder/getRootComponentOrModule(org.sonar.db.DbSession,org.sonar.server.permission.ws.WsProjectRef)|",
      "|java+method:///org/sonar/server/permission/ws/SearchProjectPermissionsDataLoader/toDbQuery(org.sonarqube.ws.client.permission.SearchProjectPermissionsWsRequest)|",
      "|java+method:///org/sonar/db/component/ComponentDao/selectByQuery(org.sonar.db.DbSession,org.sonar.db.component.ComponentQuery,int,int)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///org/sonar/server/permission/ws/WsProjectRef/newOptionalWsProjectRef(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/db/DbClient/componentDao()|",
      "|java+method:///org/sonar/api/utils/Paging/pageSize()|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///org/sonar/api/utils/Paging/offset()|",
      "|java+method:///org/sonarqube/ws/client/permission/SearchProjectPermissionsWsRequest/getProjectKey()|",
      "|java+method:///org/sonarqube/ws/client/permission/SearchProjectPermissionsWsRequest/getProjectId()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/measure/MeasureToMeasureDto/toMeasureDto(org.sonar.server.computation.measure.Measure,org.sonar.server.computation.metric.Metric,org.sonar.server.computation.component.Component)|",
    "called": "|java+method:///org/sonar/db/measure/MeasureDto/setData(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/db/measure/MeasureDto/setData(java.lang.String)|",
      "|java+method:///org/sonar/db/measure/MeasureDto/setComponentId(java.lang.Long)|",
      "|java+constructor:///org/sonar/db/measure/MeasureDto/MeasureDto()|",
      "|java+method:///org/sonar/server/computation/component/DbIdsRepository/getSnapshotId(org.sonar.server.computation.component.Component)|",
      "|java+method:///org/sonar/db/measure/MeasureDto/setCharacteristicId(java.lang.Integer)|",
      "|java+method:///org/sonar/server/computation/metric/Metric/getId()|",
      "|java+method:///org/sonar/server/computation/measure/Measure/getDeveloper()|",
      "|java+method:///org/sonar/db/measure/MeasureDto/setDeveloperId(java.lang.Long)|",
      "|java+method:///org/sonar/server/computation/measure/Measure/getVariations()|",
      "|java+method:///org/sonar/db/measure/MeasureDto/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/server/computation/measure/Measure/hasVariations()|",
      "|java+method:///org/sonar/db/measure/MeasureDto/setMetricId(java.lang.Integer)|",
      "|java+method:///org/sonar/server/computation/measure/MeasureToMeasureDto/valueAsDouble(org.sonar.server.computation.measure.Measure)|",
      "|java+method:///org/sonar/server/computation/measure/Measure/hasQualityGateStatus()|",
      "|java+method:///org/sonar/server/computation/measure/Measure/getQualityGateStatus()|",
      "|java+method:///org/sonar/server/computation/measure/Measure/getDescription()|",
      "|java+method:///org/sonar/server/computation/measure/Measure/getCharacteristicId()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/sonar/db/measure/MeasureDto/setValue(java.lang.Double)|",
      "|java+method:///org/sonar/server/computation/measure/Measure/getRuleId()|",
      "|java+method:///org/sonar/server/computation/measure/MeasureToMeasureDto/setVariations(org.sonar.db.measure.MeasureDto,org.sonar.server.computation.measure.MeasureVariations)|",
      "|java+method:///org/sonar/server/computation/component/DbIdsRepository/getDeveloperId(org.sonar.server.computation.component.Developer)|",
      "|java+method:///org/sonar/server/computation/component/DbIdsRepository/getComponentId(org.sonar.server.computation.component.Component)|",
      "|java+method:///org/sonar/server/computation/measure/MeasureToMeasureDto/setAlert(org.sonar.db.measure.MeasureDto,org.sonar.server.computation.measure.QualityGateStatus)|",
      "|java+method:///org/sonar/db/measure/MeasureDto/setSnapshotId(java.lang.Long)|",
      "|java+method:///org/sonar/db/measure/MeasureDto/setRuleId(java.lang.Integer)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/sonar/server/computation/measure/MeasureToMeasureDto/data(org.sonar.server.computation.measure.Measure)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/measure/MeasureDto/setData(java.lang.String)|",
      "|java+method:///org/sonar/db/measure/MeasureDto/setComponentId(java.lang.Long)|",
      "|java+constructor:///org/sonar/db/measure/MeasureDto/MeasureDto()|",
      "|java+method:///org/sonar/server/computation/component/DbIdsRepository/getSnapshotId(org.sonar.server.computation.component.Component)|",
      "|java+method:///org/sonar/server/computation/measure/MeasureToMeasureDto/setVariations(org.sonar.db.measure.MeasureDto,org.sonar.server.computation.measure.MeasureVariations)|",
      "|java+method:///org/sonar/server/computation/metric/Metric/getId()|",
      "|java+method:///org/sonar/server/computation/measure/Measure/getDeveloper()|",
      "|java+method:///org/sonar/db/measure/MeasureDto/setDeveloperId(java.lang.Long)|",
      "|java+method:///org/sonar/server/computation/measure/Measure/getVariations()|",
      "|java+method:///org/sonar/db/measure/MeasureDto/setDescription(java.lang.String)|",
      "|java+method:///org/sonar/server/computation/measure/Measure/hasVariations()|",
      "|java+method:///org/sonar/db/measure/MeasureDto/setMetricId(java.lang.Integer)|",
      "|java+method:///org/sonar/server/computation/measure/MeasureToMeasureDto/valueAsDouble(org.sonar.server.computation.measure.Measure)|",
      "|java+method:///org/sonar/server/computation/measure/Measure/hasQualityGateStatus()|",
      "|java+method:///org/sonar/server/computation/measure/Measure/getQualityGateStatus()|",
      "|java+method:///org/sonar/server/computation/measure/Measure/getDescription()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/sonar/db/measure/MeasureDto/setValue(java.lang.Double)|",
      "|java+method:///org/sonar/server/computation/component/DbIdsRepository/getDeveloperId(org.sonar.server.computation.component.Developer)|",
      "|java+method:///org/sonar/server/computation/component/DbIdsRepository/getComponentId(org.sonar.server.computation.component.Component)|",
      "|java+method:///org/sonar/server/computation/measure/MeasureToMeasureDto/setAlert(org.sonar.db.measure.MeasureDto,org.sonar.server.computation.measure.QualityGateStatus)|",
      "|java+method:///org/sonar/db/measure/MeasureDto/setSnapshotId(java.lang.Long)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/sonar/server/computation/measure/MeasureToMeasureDto/data(org.sonar.server.computation.measure.Measure)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/RegisterRules/mergeTags(org.sonar.api.server.rule.RulesDefinition$Rule,org.sonar.db.rule.RuleDto)|",
    "called": "|java+method:///org/sonar/db/rule/RuleDto/getSystemTags()|",
    "v1Body": [
      "|java+method:///org/sonar/server/rule/RuleTagHelper/applyTags(org.sonar.db.rule.RuleDto,java.util.Set)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getTags()|",
      "|java+method:///java/util/Collections/emptySet()|",
      "|java+method:///com/google/common/collect/Sets/intersection(java.util.Set,java.util.Set)|",
      "|java+method:///java/util/Set/containsAll(java.util.Collection)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/status()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getSystemTags()|",
      "|java+method:///com/google/common/collect/ImmutableSet/copyOf(java.util.Collection)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/tags()|",
      "|java+method:///com/google/common/collect/Sets$SetView/isEmpty()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setSystemTags(java.util.Set)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/rule/RuleTagHelper/applyTags(org.sonar.db.rule.RuleDto,java.util.Set)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getTags()|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///java/util/Collections/emptySet()|",
      "|java+method:///com/google/common/collect/Sets/intersection(java.util.Set,java.util.Set)|",
      "|java+method:///java/util/Set/containsAll(java.util.Collection)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/status()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getSystemTags()|",
      "|java+method:///com/google/common/collect/ImmutableSet/copyOf(java.util.Collection)|",
      "|java+method:///org/sonar/api/server/rule/RulesDefinition$Rule/tags()|",
      "|java+method:///com/google/common/collect/Sets$SetView/isEmpty()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setSystemTags(java.util.Set)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileProjectOperations/removeAllProjects(java.lang.String,org.sonar.server.user.UserSession)|",
    "called": "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
    "v1Body": [
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileProjectOperations/checkPermission(org.sonar.server.user.UserSession)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileProjectOperations/findNotNull(java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/server/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/deleteAllProjectProfileAssociation(java.lang.String,org.sonar.db.DbSession)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileProjectOperations/checkPermission(org.sonar.server.user.UserSession)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileProjectOperations/findNotNull(java.lang.String,org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/deleteAllProjectProfileAssociation(java.lang.String,org.sonar.db.DbSession)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/ws/CompareAction/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+constructor:///org/sonar/server/qualityprofile/ws/CompareAction$1/CompareAction$1(org.sonar.server.qualityprofile.ws.CompareAction)|",
      "|java+method:///org/sonar/server/rule/RuleService/getByKeys(java.util.Collection)|",
      "|java+method:///com/google/common/collect/Maps/uniqueIndex(java.lang.Iterable,com.google.common.base.Function)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileComparison$QProfileComparisonResult/collectRuleKeys()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileComparison/compare(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Response/newJsonWriter()|",
      "|java+method:///org/sonar/server/qualityprofile/ws/CompareAction/writeResult(org.sonar.api.utils.text.JsonWriter,org.sonar.server.qualityprofile.QProfileComparison$QProfileComparisonResult,java.util.Map)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///com/google/common/collect/Maps/uniqueIndex(java.lang.Iterable,com.google.common.base.Function)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileComparison$QProfileComparisonResult/collectRuleKeys()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileComparison/compare(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/api/server/ws/Request/mandatoryParam(java.lang.String)|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectByKeys(org.sonar.db.DbSession,java.util.List)|",
      "|java+method:///org/sonar/api/server/ws/Response/newJsonWriter()|",
      "|java+method:///org/sonar/server/qualityprofile/ws/CompareAction/writeResult(org.sonar.api.utils.text.JsonWriter,org.sonar.server.qualityprofile.QProfileComparison$QProfileComparisonResult,java.util.Map)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/RuleActivator/removeParent(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto)|",
    "called": "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/selectByProfileKey(org.sonar.db.DbSession,java.lang.String)|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getParentKee()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/getInheritance()|",
      "|java+method:///org/sonar/server/qualityprofile/db/ActiveRuleDao/selectByProfileKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/db/ActiveRuleDao/update(org.sonar.db.DbSession,org.sonar.db.Dto)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/deactivate(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleKey,boolean)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/update(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto,org.sonar.db.qualityprofile.QualityProfileDto%5B%5D)|",
      "|java+method:///org/sonar/server/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/setParentKee(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/setInheritance(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/getKey()|",
      "|java+method:///org/sonar/server/db/DbClient/activeRuleDao()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/selectByProfileKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/setUpdatedAt(long)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getParentKee()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/getInheritance()|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/sonar/server/qualityprofile/RuleActivator/deactivate(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleKey,boolean)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/update(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto,org.sonar.db.qualityprofile.QualityProfileDto%5B%5D)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/setParentKee(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/setInheritance(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDto/getKey()|",
      "|java+method:///org/sonar/db/DbClient/activeRuleDao()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/createFor(org.sonar.server.qualityprofile.ActiveRuleChange$Type,org.sonar.db.qualityprofile.ActiveRuleKey)|",
      "|java+method:///org/sonar/db/qualityprofile/ActiveRuleDao/update(org.sonar.db.DbSession,org.sonar.db.qualityprofile.ActiveRuleDto)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
      "|java+method:///org/sonar/server/qualityprofile/ActiveRuleChange/setInheritance(org.sonar.server.qualityprofile.ActiveRule$Inheritance)|",
      "|java+method:///java/util/List/iterator()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/getByProjectAndLanguage(org.sonar.db.DbSession,java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByProjectAndLanguage(org.sonar.db.DbSession,java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByProjectAndLanguage(org.sonar.db.DbSession,java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/qualityProfileDao()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByProjectAndLanguage(org.sonar.db.DbSession,java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/ws/SearchResponseLoader$Collector/collect(java.util.List)|",
    "called": "|java+method:///org/sonar/db/issue/IssueDto/getRuleKey()|",
    "v1Body": [
      "|java+method:///org/sonar/db/issue/IssueDto/getRuleKey()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getAssignee()|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseLoader$Collector/collectComponentsFromIssueLocations(org.sonar.db.issue.IssueDto)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getProjectUuid()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getComponentUuid()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getReporter()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseLoader$Collector/add(org.sonar.server.issue.ws.SearchAdditionalField,java.lang.Object)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getActionPlanKey()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/issue/IssueDto/getRuleKey()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getAssignee()|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseLoader$Collector/collectComponentsFromIssueLocations(org.sonar.db.issue.IssueDto)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getProjectUuid()|",
      "|java+method:///org/sonar/db/issue/IssueDto/getComponentUuid()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///org/sonar/server/issue/ws/SearchResponseLoader$Collector/add(org.sonar.server.issue.ws.SearchAdditionalField,java.lang.Object)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/ws/ListAction/handle(org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///org/sonarqube/ws/Rules$ListResponse$Builder/build()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/setMediaType(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Rules$ListResponse/writeTo(java.io.OutputStream)|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/output()|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectEnabledAndNonManual(org.sonar.db.DbSession,org.apache.ibatis.session.ResultHandler)|",
      "|java+method:///org/sonarqube/ws/Rules$ListResponse/newBuilder()|",
      "|java+method:///org/sonarqube/ws/Rules$ListResponse$Rule/newBuilder()|",
      "|java+method:///org/sonar/api/server/ws/Response/stream()|",
      "|java+constructor:///org/sonar/server/rule/ws/ListAction$1/ListAction$1(org.sonar.server.rule.ws.ListAction,org.sonarqube.ws.Rules$ListResponse$Rule$Builder,org.sonarqube.ws.Rules$ListResponse$Builder)|"
    ],
    "v2Body": [
      "|java+method:///org/sonarqube/ws/Rules$ListResponse$Builder/build()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbClient/ruleDao()|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/rule/RuleDao/selectEnabled(org.sonar.db.DbSession,org.apache.ibatis.session.ResultHandler)|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/setMediaType(java.lang.String)|",
      "|java+method:///org/sonarqube/ws/Rules$ListResponse/writeTo(java.io.OutputStream)|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/output()|",
      "|java+method:///org/sonarqube/ws/Rules$ListResponse/newBuilder()|",
      "|java+method:///org/sonarqube/ws/Rules$ListResponse$Rule/newBuilder()|",
      "|java+method:///org/sonar/api/server/ws/Response/stream()|",
      "|java+constructor:///org/sonar/server/rule/ws/ListAction$1/ListAction$1(org.sonar.server.rule.ws.ListAction,org.sonarqube.ws.Rules$ListResponse$Rule$Builder,org.sonarqube.ws.Rules$ListResponse$Builder)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/queue/PurgeCeActivities/onServerStart(org.sonar.api.platform.Server)|",
    "called": "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Calendar/add(int,int)|",
      "|java+method:///java/util/Calendar/getTime()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/server/computation/log/CeLogging/deleteIfExists(org.sonar.server.computation.log.LogFileRef)|",
      "|java+method:///java/util/Calendar/getInstance()|",
      "|java+method:///java/util/Calendar/getTimeInMillis()|",
      "|java+method:///org/sonar/api/utils/log/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/sonar/db/ce/CeActivityDto/getUuid()|",
      "|java+method:///org/sonar/db/ce/CeActivityDao/deleteByUuid(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/ce/CeActivityDao/selectOlderThan(org.sonar.db.DbSession,long)|",
      "|java+method:///java/util/Calendar/setTimeInMillis(long)|",
      "|java+method:///org/sonar/server/computation/log/LogFileRef/from(org.sonar.db.ce.CeActivityDto)|",
      "|java+method:///org/sonar/db/DbClient/ceActivityDao()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Calendar/getTime()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/db/DbClient/ceActivityDao()|",
      "|java+method:///java/util/Calendar/getInstance()|",
      "|java+method:///java/util/Calendar/getTimeInMillis()|",
      "|java+method:///org/sonar/api/utils/log/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/sonar/db/ce/CeActivityDto/getUuid()|",
      "|java+method:///org/sonar/db/ce/CeActivityDao/deleteByUuid(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/utils/System2/now()|",
      "|java+method:///org/sonar/ce/log/CeLogging/deleteIfExists(org.sonar.ce.log.LogFileRef)|",
      "|java+method:///org/sonar/db/DbClient/closeSession(org.sonar.db.DbSession)|",
      "|java+method:///org/sonar/db/ce/CeActivityDao/selectOlderThan(org.sonar.db.DbSession,long)|",
      "|java+method:///java/util/Calendar/setTimeInMillis(long)|",
      "|java+method:///java/util/Calendar/add(int,int)|",
      "|java+method:///org/sonar/ce/log/LogFileRef/from(org.sonar.db.ce.CeActivityDto)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/rule/RegisterRules/updateCustomRuleFromTemplateRule(org.sonar.db.rule.RuleDto,org.sonar.db.rule.RuleDto)|",
    "called": "|java+method:///org/sonar/db/rule/RuleDto/getSeverityString()|",
    "v1Body": [
      "|java+method:///org/apache/commons/lang/ObjectUtils/equals(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getLanguage()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getConfigKey()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setDefaultRemediationOffset(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setLanguage(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setDefaultRemediationFunction(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setConfigKey(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getDefaultRemediationCoefficient()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getStatus()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getDefaultSubCharacteristicId()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setEffortToFixDescription(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getDefaultRemediationOffset()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setStatus(org.sonar.api.rule.RuleStatus)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getDefaultRemediationFunction()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setDefaultRemediationCoefficient(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setDefaultSubCharacteristicId(java.lang.Integer)|",
      "|java+method:///org/apache/commons/lang/StringUtils/equals(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getEffortToFixDescription()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getSeverityString()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/rule/RuleDto/setStatus(org.sonar.api.rule.RuleStatus)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getLanguage()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getConfigKey()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getDefaultRemediationFunction()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setDefaultRemediationGapMultiplier(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setLanguage(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setDefaultRemediationFunction(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getGapDescription()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setGapDescription(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getSeverityString()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getDefaultRemediationGapMultiplier()|",
      "|java+method:///org/sonar/db/rule/RuleDto/getStatus()|",
      "|java+method:///org/apache/commons/lang/StringUtils/equals(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/getDefaultRemediationBaseEffort()|",
      "|java+method:///org/sonar/db/rule/RuleDto/setConfigKey(java.lang.String)|",
      "|java+method:///org/sonar/db/rule/RuleDto/setDefaultRemediationBaseEffort(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/RegisterQualityProfiles/registerProfilesForLanguage(org.sonar.db.DbSession,java.lang.String,java.util.List)|",
    "called": "|java+method:///org/sonar/db/DbSession/commit()|",
    "v1Body": [
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/server/qualityprofile/RegisterQualityProfiles/shouldRegister(org.sonar.server.qualityprofile.QProfileName,org.sonar.db.DbSession)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/sonar/server/qualityprofile/RegisterQualityProfiles/setDefault(java.lang.String,java.util.List,org.sonar.db.DbSession)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/sonar/server/qualityprofile/BuiltInProfiles/put(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/RegisterQualityProfiles/profilesByName(java.util.List)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/sonar/server/qualityprofile/QProfileName/QProfileName(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/RegisterQualityProfiles/register(org.sonar.server.qualityprofile.QProfileName,java.util.Collection,org.sonar.db.DbSession)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/server/qualityprofile/RegisterQualityProfiles/shouldRegister(org.sonar.server.qualityprofile.QProfileName,org.sonar.db.DbSession)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/sonar/server/qualityprofile/RegisterQualityProfiles/setDefault(java.lang.String,java.util.List,org.sonar.db.DbSession)|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/sonar/server/qualityprofile/BuiltInProfiles/put(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/RegisterQualityProfiles/profilesByName(java.util.List)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/sonar/server/qualityprofile/QProfileName/QProfileName(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/RegisterQualityProfiles/register(org.sonar.server.qualityprofile.QProfileName,java.util.Collection,org.sonar.db.DbSession)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/metric/DefaultMetricFinder/findByKey(java.lang.String)|",
    "called": "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
    "v1Body": [
      "|java+method:///org/sonar/server/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/metric/MetricDto/isEnabled()|",
      "|java+method:///org/sonar/server/db/DbClient/metricDao()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/db/metric/MetricDao/selectByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/metric/DefaultMetricFinder$ToMetric/apply(org.sonar.db.metric.MetricDto)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/metric/MetricDto/isEnabled()|",
      "|java+method:///org/sonar/db/DbClient/metricDao()|",
      "|java+method:///org/sonar/db/MyBatis/closeQuietly(org.apache.ibatis.session.SqlSession)|",
      "|java+method:///org/sonar/db/metric/MetricDao/selectByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/metric/DefaultMetricFinder$ToMetric/apply(org.sonar.db.metric.MetricDto)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-db:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/IssueService/doTransition(java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/sonar/core/issue/IssueChangeContext/createUser(java.util.Date,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/core/issue/IssueChangeContext/createUser(java.util.Date,java.lang.String)|",
      "|java+method:///org/sonar/server/issue/IssueService/checkTransitionPermission(java.lang.String,org.sonar.server.user.UserSession,org.sonar.core.issue.DefaultIssue)|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+method:///org/sonar/server/issue/IssueService/getByKeyForUpdate(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/core/issue/workflow/IssueWorkflow/doTransition(org.sonar.core.issue.DefaultIssue,java.lang.String,org.sonar.core.issue.IssueChangeContext)|",
      "|java+method:///org/sonar/server/issue/IssueService/verifyLoggedIn()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/issue/IssueService/saveIssue(org.sonar.db.DbSession,org.sonar.core.issue.DefaultIssue,org.sonar.core.issue.IssueChangeContext,java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/toDefaultIssue()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/issue/workflow/IssueWorkflow/doTransition(org.sonar.core.issue.DefaultIssue,java.lang.String,org.sonar.core.issue.IssueChangeContext)|",
      "|java+method:///org/sonar/core/issue/IssueChangeContext/createUser(java.util.Date,java.lang.String)|",
      "|java+method:///org/sonar/server/issue/IssueService/checkTransitionPermission(java.lang.String,org.sonar.server.user.UserSession,org.sonar.core.issue.DefaultIssue)|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+method:///org/sonar/server/user/UserSession/checkLoggedIn()|",
      "|java+method:///org/sonar/server/issue/IssueService/getByKeyForUpdate(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/issue/IssueService/saveIssue(org.sonar.db.DbSession,org.sonar.core.issue.DefaultIssue,org.sonar.core.issue.IssueChangeContext,java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/toDefaultIssue()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-core:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/issue/IssueLifecycle/mergeExistingOpenIssue(org.sonar.core.issue.DefaultIssue,org.sonar.core.issue.DefaultIssue)|",
    "called": "|java+method:///org/sonar/core/issue/DefaultIssue/setSeverity(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/core/issue/DefaultIssue/setAssignee(java.lang.String)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/effortToFix()|",
      "|java+method:///org/sonar/server/computation/issue/DebtCalculator/calculate(org.sonar.core.issue.DefaultIssue)|",
      "|java+method:///org/sonar/core/issue/IssueUpdater/setPastLine(org.sonar.core.issue.DefaultIssue,java.lang.Integer)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/selectedAt()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/authorLogin()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setCloseDate(java.util.Date)|",
      "|java+method:///org/sonar/core/issue/IssueUpdater/setPastLocations(org.sonar.core.issue.DefaultIssue,java.lang.Object)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setStatus(java.lang.String)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/isOnDisabledRule()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setManualSeverity(boolean)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/manualSeverity()|",
      "|java+method:///org/sonar/core/issue/IssueUpdater/setPastSeverity(org.sonar.core.issue.DefaultIssue,java.lang.String,org.sonar.core.issue.IssueChangeContext)|",
      "|java+method:///org/sonar/core/issue/IssueUpdater/setPastMessage(org.sonar.core.issue.DefaultIssue,java.lang.String,org.sonar.core.issue.IssueChangeContext)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/getLocations()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/resolution()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/creationDate()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setDebt(org.sonar.api.utils.Duration)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/assignee()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setOnDisabledRule(boolean)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setTags(java.util.Collection)|",
      "|java+method:///org/sonar/core/issue/IssueUpdater/setPastEffortToFix(org.sonar.core.issue.DefaultIssue,java.lang.Double,org.sonar.core.issue.IssueChangeContext)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/getMessage()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/key()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/actionPlanKey()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/status()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setSelectedAt(java.lang.Long)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setCreationDate(java.util.Date)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/debt()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/updateDate()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/attributes()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setAuthorLogin(java.lang.String)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/closeDate()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setKey(java.lang.String)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/tags()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setActionPlanKey(java.lang.String)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setAttributes(java.util.Map)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setResolution(java.lang.String)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setNew(boolean)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/getLine()|",
      "|java+method:///org/sonar/core/issue/IssueUpdater/setPastTechnicalDebt(org.sonar.core.issue.DefaultIssue,org.sonar.api.utils.Duration,org.sonar.core.issue.IssueChangeContext)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setUpdateDate(java.util.Date)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/severity()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/computation/issue/DebtCalculator/calculate(org.sonar.core.issue.DefaultIssue)|",
      "|java+method:///org/sonar/server/issue/IssueUpdater/setPastSeverity(org.sonar.core.issue.DefaultIssue,java.lang.String,org.sonar.core.issue.IssueChangeContext)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setEffort(org.sonar.api.utils.Duration)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/creationDate()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/selectedAt()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/authorLogin()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setCreationDate(java.util.Date)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setCloseDate(java.util.Date)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/tags()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/type()|",
      "|java+method:///org/sonar/server/issue/IssueUpdater/setPastLocations(org.sonar.core.issue.DefaultIssue,java.lang.Object)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setAssignee(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/IssueUpdater/setPastEffort(org.sonar.core.issue.DefaultIssue,org.sonar.api.utils.Duration,org.sonar.core.issue.IssueChangeContext)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setStatus(java.lang.String)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/isOnDisabledRule()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setManualSeverity(boolean)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/manualSeverity()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/gap()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/getLocations()|",
      "|java+method:///org/sonar/server/issue/IssueUpdater/setPastMessage(org.sonar.core.issue.DefaultIssue,java.lang.String,org.sonar.core.issue.IssueChangeContext)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/effort()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/resolution()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/IssueUpdater/setPastLine(org.sonar.core.issue.DefaultIssue,java.lang.Integer)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/assignee()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setOnDisabledRule(boolean)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setTags(java.util.Collection)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/getMessage()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/key()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/status()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setSelectedAt(java.lang.Long)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/updateDate()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/attributes()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setAuthorLogin(java.lang.String)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setType(org.sonar.api.rules.RuleType)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/closeDate()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setKey(java.lang.String)|",
      "|java+method:///org/sonar/server/issue/IssueUpdater/setPastGap(org.sonar.core.issue.DefaultIssue,java.lang.Double,org.sonar.core.issue.IssueChangeContext)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setAttributes(java.util.Map)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setResolution(java.lang.String)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setNew(boolean)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/getLine()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setUpdateDate(java.util.Date)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/severity()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-core:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/IssueCommentService/addComment(java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/sonar/core/issue/IssueChangeContext/createUser(java.util.Date,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/core/issue/IssueChangeContext/createUser(java.util.Date,java.lang.String)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/issue/IssueCommentService/findComments(java.lang.String)|",
      "|java+constructor:///org/sonar/server/exceptions/BadRequestException/BadRequestException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+method:///org/sonar/core/issue/IssueUpdater/addComment(org.sonar.core.issue.DefaultIssue,java.lang.String,org.sonar.core.issue.IssueChangeContext)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/sonar/server/issue/IssueService/getByKeyForUpdate(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/issue/IssueCommentService/verifyLoggedIn(org.sonar.server.user.UserSession)|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/issue/IssueService/saveIssue(org.sonar.db.DbSession,org.sonar.core.issue.DefaultIssue,org.sonar.core.issue.IssueChangeContext,java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/toDefaultIssue()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/db/DbSession/commit()|",
      "|java+method:///org/sonar/core/issue/IssueChangeContext/createUser(java.util.Date,java.lang.String)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/issue/IssueCommentService/findComments(java.lang.String)|",
      "|java+constructor:///org/sonar/server/exceptions/BadRequestException/BadRequestException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/sonar/server/issue/IssueUpdater/addComment(org.sonar.core.issue.DefaultIssue,java.lang.String,org.sonar.core.issue.IssueChangeContext)|",
      "|java+method:///org/sonar/server/issue/IssueService/getByKeyForUpdate(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/issue/IssueCommentService/verifyLoggedIn(org.sonar.server.user.UserSession)|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/issue/IssueService/saveIssue(org.sonar.db.DbSession,org.sonar.core.issue.DefaultIssue,org.sonar.core.issue.IssueChangeContext,java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/toDefaultIssue()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-core:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/IssueService/setTags(java.lang.String,java.util.Collection)|",
    "called": "|java+method:///org/sonar/core/issue/DefaultIssue/tags()|",
    "v1Body": [
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/core/issue/IssueChangeContext/createUser(java.util.Date,java.lang.String)|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+method:///org/sonar/server/issue/IssueService/getByKeyForUpdate(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/issue/IssueService/verifyLoggedIn()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/issue/IssueService/saveIssue(org.sonar.db.DbSession,org.sonar.core.issue.DefaultIssue,org.sonar.core.issue.IssueChangeContext,java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/toDefaultIssue()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/tags()|",
      "|java+method:///org/sonar/core/issue/IssueUpdater/setTags(org.sonar.core.issue.DefaultIssue,java.util.Collection,org.sonar.core.issue.IssueChangeContext)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/core/issue/IssueChangeContext/createUser(java.util.Date,java.lang.String)|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+method:///org/sonar/server/issue/IssueUpdater/setTags(org.sonar.core.issue.DefaultIssue,java.util.Collection,org.sonar.core.issue.IssueChangeContext)|",
      "|java+method:///org/sonar/server/user/UserSession/checkLoggedIn()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/tags()|",
      "|java+method:///org/sonar/server/issue/IssueService/getByKeyForUpdate(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/issue/IssueService/saveIssue(org.sonar.db.DbSession,org.sonar.core.issue.DefaultIssue,org.sonar.core.issue.IssueChangeContext,java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/toDefaultIssue()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-core:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/step/ValidateProjectStep$ValidateProjectsVisitor/validateBatchKey(org.sonar.server.computation.component.Component)|",
    "called": "|java+method:///org/sonar/core/component/ComponentKeys/isValidModuleKey(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/core/component/ComponentKeys/isValidModuleKey(java.lang.String)|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readComponent(int)|",
      "|java+method:///org/sonar/server/computation/step/ValidateProjectStep/access$300(org.sonar.server.computation.step.ValidateProjectStep)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getRef()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Component/getKey()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/core/component/ComponentKeys/isValidModuleKey(java.lang.String)|",
      "|java+method:///org/sonar/server/computation/step/ValidateProjectStep/access$300(org.sonar.server.computation.step.ValidateProjectStep)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getRef()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readComponent(int)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Component/getKey()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-core:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/platform/platformlevel/PlatformLevel1/configureLevel()|",
    "called": "|java+method:///org/sonar/core/config/CorePropertyDefinitions/all()|",
    "v1Body": [
      "|java+method:///org/sonar/core/config/CorePropertyDefinitions/all()|",
      "|java+method:///org/sonar/server/platform/platformlevel/PlatformLevel1/addAll(java.util.Collection)|",
      "|java+constructor:///org/sonar/server/platform/TempFolderProvider/TempFolderProvider()|",
      "|java+method:///org/sonar/server/platform/platformlevel/PlatformLevel1/addExtraRootComponents()|",
      "|java+method:///org/sonar/server/computation/property/CePropertyDefinitions/all()|",
      "|java+method:///org/sonar/server/platform/platformlevel/PlatformLevel1/add(java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/core/config/CorePropertyDefinitions/all()|",
      "|java+method:///org/sonar/server/platform/platformlevel/PlatformLevel1/addAll(java.util.Collection)|",
      "|java+constructor:///org/sonar/server/platform/TempFolderProvider/TempFolderProvider()|",
      "|java+method:///org/sonar/server/platform/platformlevel/PlatformLevel1/addExtraRootComponents()|",
      "|java+method:///org/sonar/ce/property/CePropertyDefinitions/all()|",
      "|java+method:///org/sonar/api/internal/SonarQubeVersionFactory/create(org.sonar.api.utils.System2)|",
      "|java+method:///org/sonar/server/platform/platformlevel/PlatformLevel1/add(java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-core:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/issue/DebtCalculator/calculate(org.sonar.core.issue.DefaultIssue)|",
    "called": "|java+method:///org/sonar/core/issue/DefaultIssue/effortToFix()|",
    "v1Body": [
      "|java+method:///org/sonar/server/computation/issue/Rule/getRemediationFunction()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/effortToFix()|",
      "|java+method:///org/sonar/api/server/debt/DebtRemediationFunction$Type/usesCoefficient()|",
      "|java+method:///org/sonar/api/utils/Duration/multiply(int)|",
      "|java+method:///org/sonar/server/computation/issue/RuleRepository/getByKey(org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/api/utils/Duration/create(long)|",
      "|java+method:///org/sonar/api/server/debt/DebtRemediationFunction/offset()|",
      "|java+method:///org/sonar/api/server/debt/DebtRemediationFunction/type()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/ruleKey()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///java/lang/Number/intValue()|",
      "|java+method:///org/sonar/api/server/debt/DebtRemediationFunction/coefficient()|",
      "|java+method:///org/sonar/server/computation/issue/DebtCalculator/verifyEffortToFix(org.sonar.core.issue.DefaultIssue,org.sonar.api.server.debt.DebtRemediationFunction)|",
      "|java+method:///org/sonar/api/utils/Duration/add(org.sonar.api.utils.Duration)|",
      "|java+method:///org/sonar/server/computation/issue/Rule/getSubCharacteristicId()|",
      "|java+method:///org/sonar/api/server/debt/DebtRemediationFunction$Type/usesOffset()|",
      "|java+method:///org/sonar/api/utils/Durations/decode(java.lang.String)|",
      "|java+method:///com/google/common/base/Objects/firstNonNull(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/computation/issue/Rule/getRemediationFunction()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/effortToFix()|",
      "|java+method:///org/sonar/api/server/debt/DebtRemediationFunction$Type/usesBaseEffort()|",
      "|java+method:///org/sonar/server/computation/issue/RuleRepository/getByKey(org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/api/utils/Duration/create(long)|",
      "|java+method:///org/sonar/api/server/debt/DebtRemediationFunction/gapMultiplier()|",
      "|java+method:///org/sonar/api/server/debt/DebtRemediationFunction/type()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/ruleKey()|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/Duration/multiply(int)|",
      "|java+method:///org/sonar/api/server/debt/DebtRemediationFunction$Type/usesGapMultiplier()|",
      "|java+method:///java/lang/Number/intValue()|",
      "|java+method:///org/sonar/server/computation/issue/DebtCalculator/verifyEffortToFix(org.sonar.core.issue.DefaultIssue,org.sonar.api.server.debt.DebtRemediationFunction)|",
      "|java+method:///org/sonar/api/utils/Duration/add(org.sonar.api.utils.Duration)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/sonar/api/server/debt/DebtRemediationFunction/baseEffort()|",
      "|java+method:///org/sonar/api/utils/Durations/decode(java.lang.String)|",
      "|java+method:///com/google/common/base/Objects/firstNonNull(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-core:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/issue/UpdateConflictResolver/resolveEffortToFix(org.sonar.db.issue.IssueDto,org.sonar.core.issue.DefaultIssue)|",
    "called": "|java+method:///org/sonar/core/issue/DefaultIssue/setGap(java.lang.Double)|",
    "v1Body": [
      "|java+method:///org/sonar/core/issue/DefaultIssue/setEffortToFix(java.lang.Double)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getEffortToFix()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/core/issue/DefaultIssue/setGap(java.lang.Double)|",
      "|java+method:///org/sonar/db/issue/IssueDto/getGap()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-core:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/issue/IssueLifecycle/initNewOpenIssue(org.sonar.core.issue.DefaultIssue)|",
    "called": "|java+method:///org/sonar/core/issue/DefaultIssue/setStatus(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/core/util/Uuids/create()|",
      "|java+method:///org/sonar/core/issue/IssueChangeContext/date()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setStatus(java.lang.String)|",
      "|java+method:///org/sonar/server/computation/issue/DebtCalculator/calculate(org.sonar.core.issue.DefaultIssue)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setDebt(org.sonar.api.utils.Duration)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setCreationDate(java.util.Date)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setKey(java.lang.String)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setUpdateDate(java.util.Date)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/core/util/Uuids/create()|",
      "|java+method:///org/sonar/core/issue/IssueChangeContext/date()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setStatus(java.lang.String)|",
      "|java+method:///org/sonar/server/computation/issue/DebtCalculator/calculate(org.sonar.core.issue.DefaultIssue)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setEffort(org.sonar.api.utils.Duration)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setCreationDate(java.util.Date)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setKey(java.lang.String)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setUpdateDate(java.util.Date)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-core:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/qualityprofile/QProfileFactory/doCreate(org.sonar.db.DbSession,org.sonar.server.qualityprofile.QProfileName)|",
    "called": "|java+method:///org/sonar/core/util/Slug/slugify(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/setRulesUpdatedAtAsDate(java.util.Date)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/insert(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto,org.sonar.db.qualityprofile.QualityProfileDto%5B%5D)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///org/sonar/server/exceptions/BadRequestException/BadRequestException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/core/util/Slug/slugify(java.lang.String)|",
      "|java+method:///org/sonar/server/db/DbClient/qualityProfileDao()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/apache/commons/lang/RandomStringUtils/randomNumeric(int)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isEmpty(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileName/getLanguage()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/setLanguage(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/setName(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/createFor(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileName/getName()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/setRulesUpdatedAtAsDate(java.util.Date)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/insert(org.sonar.db.DbSession,org.sonar.db.qualityprofile.QualityProfileDto,org.sonar.db.qualityprofile.QualityProfileDto%5B%5D)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///org/sonar/server/exceptions/BadRequestException/BadRequestException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/core/util/Slug/slugify(java.lang.String)|",
      "|java+method:///org/sonar/db/DbClient/qualityProfileDao()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDao/selectByKey(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/apache/commons/lang/RandomStringUtils/randomNumeric(int)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isEmpty(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/getKey()|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileName/getLanguage()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/setLanguage(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/setName(java.lang.String)|",
      "|java+method:///org/sonar/db/qualityprofile/QualityProfileDto/createFor(java.lang.String)|",
      "|java+method:///org/sonar/server/qualityprofile/QProfileName/getName()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-core:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/IssueService/setSeverity(java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/sonar/core/issue/IssueChangeContext/createUser(java.util.Date,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/server/user/UserSession/checkComponentPermission(java.lang.String,java.lang.String)|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+method:///org/sonar/server/issue/IssueService/verifyLoggedIn()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/issue/IssueService/saveIssue(org.sonar.db.DbSession,org.sonar.core.issue.DefaultIssue,org.sonar.core.issue.IssueChangeContext,java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/toDefaultIssue()|",
      "|java+method:///org/sonar/core/issue/IssueChangeContext/createUser(java.util.Date,java.lang.String)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/projectKey()|",
      "|java+method:///org/sonar/server/issue/IssueService/getByKeyForUpdate(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/core/issue/IssueUpdater/setManualSeverity(org.sonar.core.issue.DefaultIssue,java.lang.String,org.sonar.core.issue.IssueChangeContext)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/user/UserSession/checkComponentUuidPermission(java.lang.String,java.lang.String)|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+method:///org/sonar/server/user/UserSession/checkLoggedIn()|",
      "|java+method:///org/sonar/server/issue/IssueUpdater/setManualSeverity(org.sonar.core.issue.DefaultIssue,java.lang.String,org.sonar.core.issue.IssueChangeContext)|",
      "|java+method:///org/sonar/server/issue/IssueService/getByKeyForUpdate(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/issue/IssueService/saveIssue(org.sonar.db.DbSession,org.sonar.core.issue.DefaultIssue,org.sonar.core.issue.IssueChangeContext,java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/toDefaultIssue()|",
      "|java+method:///org/sonar/core/issue/IssueChangeContext/createUser(java.util.Date,java.lang.String)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/projectUuid()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-core:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/issue/IssueService/assign(java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/sonar/core/issue/IssueChangeContext/createUser(java.util.Date,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/core/issue/IssueUpdater/assign(org.sonar.core.issue.DefaultIssue,org.sonar.api.user.User,org.sonar.core.issue.IssueChangeContext)|",
      "|java+method:///org/sonar/api/user/UserFinder/findByLogin(java.lang.String)|",
      "|java+constructor:///org/sonar/server/exceptions/BadRequestException/BadRequestException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/server/issue/IssueService/getByKeyForUpdate(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/issue/IssueService/verifyLoggedIn()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/server/issue/IssueService/saveIssue(org.sonar.db.DbSession,org.sonar.core.issue.DefaultIssue,org.sonar.core.issue.IssueChangeContext,java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/toDefaultIssue()|",
      "|java+method:///org/sonar/core/issue/IssueChangeContext/createUser(java.util.Date,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/DbSession/close()|",
      "|java+method:///org/sonar/db/DbClient/openSession(boolean)|",
      "|java+method:///org/sonar/api/user/UserFinder/findByLogin(java.lang.String)|",
      "|java+constructor:///org/sonar/server/exceptions/BadRequestException/BadRequestException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/server/user/UserSession/checkLoggedIn()|",
      "|java+method:///org/sonar/server/issue/IssueService/getByKeyForUpdate(org.sonar.db.DbSession,java.lang.String)|",
      "|java+method:///org/sonar/server/user/UserSession/getLogin()|",
      "|java+method:///org/sonar/server/issue/IssueUpdater/assign(org.sonar.core.issue.DefaultIssue,org.sonar.api.user.User,org.sonar.core.issue.IssueChangeContext)|",
      "|java+method:///org/sonar/server/issue/IssueService/saveIssue(org.sonar.db.DbSession,org.sonar.core.issue.DefaultIssue,org.sonar.core.issue.IssueChangeContext,java.lang.String)|",
      "|java+method:///org/sonar/db/issue/IssueDto/toDefaultIssue()|",
      "|java+method:///org/sonar/core/issue/IssueChangeContext/createUser(java.util.Date,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-core:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/plugins/ServerExtensionInstaller/installExtensions(org.sonar.core.platform.ComponentContainer)|",
    "called": "|java+method:///org/sonar/core/platform/ComponentContainer/getComponentByKey(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/sonar/core/platform/ComponentContainer/getComponentByKey(java.lang.Object)|",
      "|java+method:///org/sonar/api/SonarPlugin/getExtensions()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/sonar/core/platform/PluginRepository/getPluginInstance(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/sonar/server/plugins/ServerExtensionInstaller/installExtension(org.sonar.core.platform.ComponentContainer,org.sonar.core.platform.PluginInfo,java.lang.Object,boolean)|",
      "|java+method:///com/google/common/collect/ArrayListMultimap/create()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/plugins/ServerExtensionInstaller/installProvider(org.sonar.core.platform.ComponentContainer,org.sonar.core.platform.PluginInfo,org.sonar.api.ExtensionProvider)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///com/google/common/collect/ListMultimap/entries()|",
      "|java+method:///com/google/common/collect/ListMultimap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/core/platform/ComponentContainer/addExtension(org.sonar.core.platform.PluginInfo,java.lang.Object)|",
      "|java+method:///org/sonar/core/platform/PluginRepository/getPluginInfos()|",
      "|java+method:///org/sonar/core/platform/ComponentContainer/declareExtension(org.sonar.core.platform.PluginInfo,java.lang.Object)|",
      "|java+method:///org/sonar/core/platform/PluginInfo/getKey()|",
      "|java+method:///org/sonar/server/plugins/ServerExtensionInstaller/isExtensionProvider(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/core/platform/PluginInfo/getName()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/sonar/core/platform/PluginRepository/getPluginInstance(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/sonar/server/plugins/ServerExtensionInstaller/installExtension(org.sonar.core.platform.ComponentContainer,org.sonar.core.platform.PluginInfo,java.lang.Object,boolean)|",
      "|java+method:///com/google/common/collect/ArrayListMultimap/create()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///org/sonar/api/Plugin$Context/Plugin$Context(org.sonar.api.SonarQubeVersion)|",
      "|java+method:///org/sonar/server/plugins/ServerExtensionInstaller/installProvider(org.sonar.core.platform.ComponentContainer,org.sonar.core.platform.PluginInfo,org.sonar.api.ExtensionProvider)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///com/google/common/collect/ListMultimap/entries()|",
      "|java+method:///com/google/common/collect/ListMultimap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/api/Plugin$Context/getExtensions()|",
      "|java+method:///org/sonar/core/platform/ComponentContainer/getComponentByKey(java.lang.Object)|",
      "|java+method:///org/sonar/api/Plugin/define(org.sonar.api.Plugin$Context)|",
      "|java+method:///org/sonar/core/platform/ComponentContainer/addExtension(org.sonar.core.platform.PluginInfo,java.lang.Object)|",
      "|java+method:///org/sonar/core/platform/PluginRepository/getPluginInfos()|",
      "|java+method:///org/sonar/core/platform/ComponentContainer/declareExtension(org.sonar.core.platform.PluginInfo,java.lang.Object)|",
      "|java+method:///org/sonar/core/platform/PluginInfo/getKey()|",
      "|java+method:///org/sonar/server/plugins/ServerExtensionInstaller/isExtensionProvider(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/core/platform/PluginInfo/getName()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-core:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/step/LoadQualityProfilesStep/execute()|",
    "called": "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
    "v1Body": [
      "|java+method:///com/google/common/collect/FluentIterable/from(java.lang.Iterable)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readActiveRules()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+method:///com/google/common/collect/FluentIterable/toList()|",
      "|java+method:///com/google/common/collect/FluentIterable/filter(com.google.common.base.Predicate)|",
      "|java+method:///org/sonar/server/computation/qualityprofile/ActiveRulesHolderImpl/set(java.util.Collection)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/server/computation/step/LoadQualityProfilesStep/convert(org.sonar.batch.protocol.output.BatchReport$ActiveRule)|",
      "|java+constructor:///org/sonar/server/computation/step/LoadQualityProfilesStep$IsValid/LoadQualityProfilesStep$IsValid(org.sonar.server.computation.step.LoadQualityProfilesStep,org.sonar.server.computation.step.LoadQualityProfilesStep$1)|",
      "|java+method:///java/util/List/add(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/FluentIterable/from(java.lang.Iterable)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readActiveRules()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///com/google/common/collect/FluentIterable/toList()|",
      "|java+method:///org/sonar/server/computation/step/LoadQualityProfilesStep/convert(org.sonar.scanner.protocol.output.ScannerReport$ActiveRule)|",
      "|java+method:///com/google/common/collect/FluentIterable/filter(com.google.common.base.Predicate)|",
      "|java+method:///org/sonar/server/computation/qualityprofile/ActiveRulesHolderImpl/set(java.util.Collection)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+constructor:///org/sonar/server/computation/step/LoadQualityProfilesStep$IsValid/LoadQualityProfilesStep$IsValid(org.sonar.server.computation.step.LoadQualityProfilesStep,org.sonar.server.computation.step.LoadQualityProfilesStep$1)|",
      "|java+method:///java/util/List/add(java.lang.Object)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-core:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/batch/BatchReportReaderImpl/readScannerLogs()|",
    "called": "|java+constructor:///org/sonar/core/util/LineReaderIterator/LineReaderIterator(java.io.Reader)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/batch/protocol/output/FileStructure/analysisLog()|",
      "|java+method:///java/io/File/exists()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReportReader/getFileStructure()|",
      "|java+method:///org/apache/commons/io/FileUtils/openInputStream(java.io.File)|",
      "|java+constructor:///java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.nio.charset.Charset)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/emptyCloseableIterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/sonar/core/util/LineReaderIterator/LineReaderIterator(java.io.Reader)|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/scanner/protocol/output/FileStructure/analysisLog()|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/commons/io/FileUtils/openInputStream(java.io.File)|",
      "|java+constructor:///java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.nio.charset.Charset)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/emptyCloseableIterator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReportReader/getFileStructure()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/sonar/core/util/LineReaderIterator/LineReaderIterator(java.io.Reader)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-core:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/step/PersistCrossProjectDuplicationIndexStep$DuplicationVisitor/visitComponent(org.sonar.server.computation.component.Component)|",
    "called": "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
    "v1Body": [
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setHash(java.lang.String)|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setIndexInFile(int)|",
      "|java+method:///org/sonar/server/computation/step/PersistCrossProjectDuplicationIndexStep/access$100(org.sonar.server.computation.step.PersistCrossProjectDuplicationIndexStep)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getRef()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+constructor:///org/sonar/db/duplication/DuplicationUnitDto/DuplicationUnitDto()|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readCpdTextBlocks(int)|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setProjectSnapshotId(long)|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setStartLine(int)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$CpdTextBlock/getEndLine()|",
      "|java+method:///org/sonar/server/computation/component/DbIdsRepository/getSnapshotId(org.sonar.server.computation.component.Component)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/server/computation/step/PersistCrossProjectDuplicationIndexStep/access$300(org.sonar.server.computation.step.PersistCrossProjectDuplicationIndexStep)|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setEndLine(int)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$CpdTextBlock/getStartLine()|",
      "|java+method:///org/sonar/db/DbClient/duplicationDao()|",
      "|java+method:///org/sonar/db/duplication/DuplicationDao/insert(org.sonar.db.DbSession,org.sonar.db.duplication.DuplicationUnitDto)|",
      "|java+method:///org/sonar/server/computation/step/PersistCrossProjectDuplicationIndexStep/access$200(org.sonar.server.computation.step.PersistCrossProjectDuplicationIndexStep)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$CpdTextBlock/getHash()|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setSnapshotId(long)|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setHash(java.lang.String)|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setStartLine(int)|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setIndexInFile(int)|",
      "|java+method:///org/sonar/server/computation/step/PersistCrossProjectDuplicationIndexStep/access$100(org.sonar.server.computation.step.PersistCrossProjectDuplicationIndexStep)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getRef()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+constructor:///org/sonar/db/duplication/DuplicationUnitDto/DuplicationUnitDto()|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readCpdTextBlocks(int)|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setProjectSnapshotId(long)|",
      "|java+method:///org/sonar/server/computation/component/DbIdsRepository/getSnapshotId(org.sonar.server.computation.component.Component)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/server/computation/step/PersistCrossProjectDuplicationIndexStep/access$300(org.sonar.server.computation.step.PersistCrossProjectDuplicationIndexStep)|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setEndLine(int)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$CpdTextBlock/getHash()|",
      "|java+method:///org/sonar/db/DbClient/duplicationDao()|",
      "|java+method:///org/sonar/db/duplication/DuplicationDao/insert(org.sonar.db.DbSession,org.sonar.db.duplication.DuplicationUnitDto)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$CpdTextBlock/getEndLine()|",
      "|java+method:///org/sonar/server/computation/step/PersistCrossProjectDuplicationIndexStep/access$200(org.sonar.server.computation.step.PersistCrossProjectDuplicationIndexStep)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$CpdTextBlock/getStartLine()|",
      "|java+method:///org/sonar/db/duplication/DuplicationUnitDto/setSnapshotId(long)|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-core:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/step/PersistTestsStep$TestDepthTraversalTypeAwareVisitor/loadCoverageDetails(int)|",
    "called": "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
    "v1Body": [
      "|java+method:///org/sonar/server/computation/step/PersistTestsStep/access$400(org.sonar.server.computation.step.PersistTestsStep)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+method:///java/util/List/removeAll(java.util.Collection)|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readCoverageDetails(int)|",
      "|java+method:///com/google/common/collect/Table/get(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$CoverageDetail/getCoveredFileList()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$CoveredFile$Builder/setFileUuid(java.lang.String)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$CoverageDetail$CoveredFile/getFileRef()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$CoverageDetail/getTestName()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$CoveredFile$Builder/getCoveredLineList()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$CoveredFile$Builder/addAllCoveredLine(java.lang.Iterable)|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$CoveredFile/newBuilder()|",
      "|java+method:///com/google/common/collect/Table/put(java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///com/google/common/collect/HashBasedTable/create()|",
      "|java+method:///org/sonar/server/computation/step/PersistTestsStep$TestDepthTraversalTypeAwareVisitor/getUuid(int)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$CoverageDetail$CoveredFile/getCoveredLineList()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/computation/step/PersistTestsStep/access$400(org.sonar.server.computation.step.PersistTestsStep)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$CoverageDetail$CoveredFile/getCoveredLineList()|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readCoverageDetails(int)|",
      "|java+method:///com/google/common/collect/Table/get(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$CoverageDetail$CoveredFile/getFileRef()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$CoveredFile$Builder/setFileUuid(java.lang.String)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$CoverageDetail/getTestName()|",
      "|java+method:///java/util/List/removeAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$CoveredFile$Builder/getCoveredLineList()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$CoveredFile$Builder/addAllCoveredLine(java.lang.Iterable)|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$CoveredFile/newBuilder()|",
      "|java+method:///com/google/common/collect/Table/put(java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$CoverageDetail/getCoveredFileList()|",
      "|java+method:///com/google/common/collect/HashBasedTable/create()|",
      "|java+method:///org/sonar/server/computation/step/PersistTestsStep$TestDepthTraversalTypeAwareVisitor/getUuid(int)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-core:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+constructor:///org/sonar/server/computation/container/ComputeEngineContainerImpl/ComputeEngineContainerImpl(org.sonar.core.platform.ComponentContainer,org.sonar.core.platform.ContainerPopulator)|",
    "called": "|java+constructor:///org/sonar/core/platform/ComponentContainer/ComponentContainer(org.picocontainer.MutablePicoContainer,org.sonar.api.config.PropertyDefinitions)|",
    "v1Body": [
      "|java+method:///org/sonar/server/computation/container/ComputeEngineContainerImpl/createContainer(org.sonar.core.platform.ComponentContainer)|",
      "|java+method:///java/util/Objects/requireNonNull(java.lang.Object)|",
      "|java+method:///org/sonar/server/computation/container/ComputeEngineContainerImpl/startComponents()|",
      "|java+method:///org/sonar/server/computation/container/ComputeEngineContainerImpl/populateContainer(org.sonar.core.platform.ContainerPopulator)|",
      "|java+constructor:///org/sonar/core/platform/ComponentContainer/ComponentContainer(org.picocontainer.MutablePicoContainer)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/computation/container/ComputeEngineContainerImpl/createContainer(org.sonar.core.platform.ComponentContainer)|",
      "|java+constructor:///org/sonar/core/platform/ComponentContainer/ComponentContainer(org.picocontainer.MutablePicoContainer,org.sonar.api.config.PropertyDefinitions)|",
      "|java+method:///org/sonar/core/platform/ComponentContainer/getComponentByType(java.lang.Class)|",
      "|java+method:///java/util/Objects/requireNonNull(java.lang.Object)|",
      "|java+method:///org/sonar/server/computation/container/ComputeEngineContainerImpl/startComponents()|",
      "|java+method:///org/sonar/server/computation/container/ComputeEngineContainerImpl/populateContainer(org.sonar.core.platform.ContainerPopulator)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-core:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/step/PersistTestsStep$TestDepthTraversalTypeAwareVisitor/buildDbTests(int)|",
    "called": "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
    "v1Body": [
      "|java+method:///org/sonar/core/util/Uuids/create()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test/newBuilder()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/getName()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/hasMsg()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/getStacktrace()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/hasStacktrace()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/hasDurationInMs()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$TestStatus/valueOf(java.lang.String)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/getName()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setExecutionTimeMs(long)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/hasStatus()|",
      "|java+method:///org/sonar/server/computation/step/PersistTestsStep/access$400(org.sonar.server.computation.step.PersistTestsStep)|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readTests(int)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setStatus(org.sonar.db.protobuf.DbFileSources$Test$TestStatus)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/getDurationInMs()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/getMsg()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setName(java.lang.String)|",
      "|java+method:///com/google/common/collect/ArrayListMultimap/create()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setMsg(java.lang.String)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+method:///org/sonar/batch/protocol/Constants$TestStatus/name()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setUuid(java.lang.String)|",
      "|java+method:///com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setStacktrace(java.lang.String)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Test/getStatus()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Test/getDurationInMs()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test/newBuilder()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/getName()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setStacktrace(java.lang.String)|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setExecutionTimeMs(long)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Test/getStacktrace()|",
      "|java+method:///org/sonar/core/util/Uuids/create()|",
      "|java+method:///org/sonar/server/computation/step/PersistTestsStep/access$400(org.sonar.server.computation.step.PersistTestsStep)|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readTests(int)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setStatus(org.sonar.db.protobuf.DbFileSources$Test$TestStatus)|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setName(java.lang.String)|",
      "|java+method:///com/google/common/collect/ArrayListMultimap/create()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setMsg(java.lang.String)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Test$TestStatus/name()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Test/getName()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Test/getMsg()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Test/getStatus()|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$TestStatus/valueOf(java.lang.String)|",
      "|java+method:///org/sonar/db/protobuf/DbFileSources$Test$Builder/setUuid(java.lang.String)|",
      "|java+method:///com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-core:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/step/LoadDuplicationsFromReportStep$1/visitFile(org.sonar.server.computation.component.Component)|",
    "called": "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
    "v1Body": [
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readComponentDuplications(int)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getRef()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/server/computation/step/LoadDuplicationsFromReportStep/access$100(org.sonar.server.computation.step.LoadDuplicationsFromReportStep,org.sonar.server.computation.component.Component,org.sonar.batch.protocol.output.BatchReport$Duplication,int)|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|",
      "|java+method:///org/sonar/server/computation/step/LoadDuplicationsFromReportStep/access$000(org.sonar.server.computation.step.LoadDuplicationsFromReportStep)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readComponentDuplications(int)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getRef()|",
      "|java+method:///org/sonar/server/computation/step/LoadDuplicationsFromReportStep/access$100(org.sonar.server.computation.step.LoadDuplicationsFromReportStep,org.sonar.server.computation.component.Component,org.sonar.scanner.protocol.output.ScannerReport$Duplication,int)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|",
      "|java+method:///org/sonar/server/computation/step/LoadDuplicationsFromReportStep/access$000(org.sonar.server.computation.step.LoadDuplicationsFromReportStep)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-core:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/issue/commonrule/CommonRule/processFile(org.sonar.server.computation.component.Component,java.lang.String)|",
    "called": "|java+constructor:///org/sonar/core/issue/DefaultIssue/DefaultIssue()|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setMessage(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setLine(java.lang.Integer)|",
      "|java+method:///org/sonar/server/computation/issue/commonrule/CommonRule/doProcessFile(org.sonar.server.computation.component.Component,org.sonar.server.computation.qualityprofile.ActiveRule)|",
      "|java+method:///org/sonar/server/computation/qualityprofile/ActiveRulesHolder/get(org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/server/rule/CommonRuleKeys/commonRepositoryForLang(java.lang.String)|",
      "|java+constructor:///org/sonar/core/issue/DefaultIssue/DefaultIssue()|",
      "|java+method:///org/sonar/server/computation/issue/commonrule/CommonRule$CommonRuleIssue/access$000(org.sonar.server.computation.issue.commonrule.CommonRule$CommonRuleIssue)|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/sonar/server/computation/qualityprofile/ActiveRule/getSeverity()|",
      "|java+method:///org/sonar/server/computation/issue/commonrule/CommonRule$CommonRuleIssue/access$100(org.sonar.server.computation.issue.commonrule.CommonRule$CommonRuleIssue)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setEffortToFix(java.lang.Double)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setRuleKey(org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setChecksum(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setMessage(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setRuleKey(org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setSeverity(java.lang.String)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setGap(java.lang.Double)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setLine(java.lang.Integer)|",
      "|java+method:///org/sonar/server/computation/issue/commonrule/CommonRule/doProcessFile(org.sonar.server.computation.component.Component,org.sonar.server.computation.qualityprofile.ActiveRule)|",
      "|java+method:///org/sonar/server/computation/qualityprofile/ActiveRulesHolder/get(org.sonar.api.rule.RuleKey)|",
      "|java+method:///org/sonar/server/rule/CommonRuleKeys/commonRepositoryForLang(java.lang.String)|",
      "|java+constructor:///org/sonar/core/issue/DefaultIssue/DefaultIssue()|",
      "|java+method:///org/sonar/server/computation/issue/commonrule/CommonRule$CommonRuleIssue/access$000(org.sonar.server.computation.issue.commonrule.CommonRule$CommonRuleIssue)|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/sonar/server/computation/qualityprofile/ActiveRule/getSeverity()|",
      "|java+method:///org/sonar/server/computation/issue/commonrule/CommonRule$CommonRuleIssue/access$100(org.sonar.server.computation.issue.commonrule.CommonRule$CommonRuleIssue)|",
      "|java+method:///org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/core/issue/DefaultIssue/setChecksum(java.lang.String)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-core:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/step/ComputationStepExecutor/execute()|",
    "called": "|java+method:///org/sonar/core/util/logs/Profiler/create(org.sonar.api.utils.log.Logger)|",
    "v1Body": [
      "|java+method:///org/sonar/server/computation/step/ComputationStep/getDescription()|",
      "|java+method:///org/sonar/core/util/logs/Profiler/start()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///org/sonar/core/util/logs/Profiler/stopInfo(java.lang.String)|",
      "|java+method:///org/sonar/server/computation/step/ComputationSteps/instances()|",
      "|java+method:///org/sonar/server/computation/step/ComputationStep/execute()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/core/util/logs/Profiler/create(org.sonar.api.utils.log.Logger)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/core/util/logs/Profiler/create(org.sonar.api.utils.log.Logger)|",
      "|java+method:///org/sonar/server/computation/step/ComputationStepExecutor/executeSteps(org.sonar.core.util.logs.Profiler)|",
      "|java+method:///org/sonar/server/computation/step/ComputationStepExecutor$Listener/finished(boolean)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-core:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/ws/WsUtils/writeProtobuf(com.google.protobuf.Message,org.sonar.api.server.ws.Request,org.sonar.api.server.ws.Response)|",
    "called": "|java+method:///org/sonar/core/util/ProtobufJsonFormat/write(com.google.protobuf.Message,org.sonar.api.utils.text.JsonWriter)|",
    "v1Body": [
      "|java+method:///org/sonar/core/util/ProtobufJsonFormat/write(com.google.protobuf.Message,org.sonar.api.utils.text.JsonWriter)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/setMediaType(java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/io/OutputStreamWriter/close()|",
      "|java+method:///org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)|",
      "|java+method:///org/sonar/api/server/ws/Response/stream()|",
      "|java+constructor:///java/io/OutputStreamWriter/OutputStreamWriter(java.io.OutputStream)|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/output()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/of(java.io.Writer)|",
      "|java+method:///org/sonarqube/ws/MessageFormatter/print(com.google.protobuf.MessageOrBuilder)|",
      "|java+method:///org/sonar/api/utils/log/Logger/error(java.lang.String,java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/Request/getMediaType()|",
      "|java+method:///com/google/protobuf/Message/writeTo(java.io.OutputStream)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/core/util/ProtobufJsonFormat/write(com.google.protobuf.Message,org.sonar.api.utils.text.JsonWriter)|",
      "|java+constructor:///java/io/OutputStreamWriter/OutputStreamWriter(java.io.OutputStream,java.nio.charset.Charset)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/setMediaType(java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/io/OutputStreamWriter/close()|",
      "|java+method:///org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)|",
      "|java+method:///org/sonar/api/server/ws/Response/stream()|",
      "|java+method:///org/sonar/api/server/ws/Response$Stream/output()|",
      "|java+method:///org/sonar/api/utils/text/JsonWriter/of(java.io.Writer)|",
      "|java+method:///org/sonarqube/ws/MessageFormatter/print(com.google.protobuf.MessageOrBuilder)|",
      "|java+method:///org/sonar/api/utils/log/Logger/error(java.lang.String,java.lang.Object)|",
      "|java+method:///org/sonar/api/server/ws/Request/getMediaType()|",
      "|java+method:///com/google/protobuf/Message/writeTo(java.io.OutputStream)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-core:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/plugins/ServerPluginRepository/uninstall(java.lang.String)|",
    "called": "|java+method:///org/sonar/core/platform/PluginInfo/getNonNullJarFile()|",
    "v1Body": [
      "|java+method:///org/sonar/server/plugins/ServerPluginRepository/appendDependentPluginKeys(java.lang.String,java.util.Set)|",
      "|java+method:///java/io/File/getName()|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/core/platform/PluginInfo/getNonNullJarFile()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/api/utils/log/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/server/platform/DefaultServerFileSystem/getInstalledPluginsDir()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///org/sonar/server/plugins/ServerPluginRepository/uninstalledPluginsDir()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/io/FileUtils/moveFileToDirectory(java.io.File,java.io.File,boolean)|",
      "|java+method:///org/sonar/core/platform/PluginInfo/getKey()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/core/platform/PluginInfo/getName()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/server/plugins/ServerPluginRepository/appendDependentPluginKeys(java.lang.String,java.util.Set)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/core/platform/PluginInfo/getNonNullJarFile()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/api/utils/log/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/server/platform/DefaultServerFileSystem/getInstalledPluginsDir()|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/get()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///org/sonar/server/plugins/ServerPluginRepository/uninstalledPluginsDir()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/io/FileUtils/moveFileToDirectory(java.io.File,java.io.File,boolean)|",
      "|java+method:///com/google/common/base/Preconditions/checkState(boolean,java.lang.Object)|",
      "|java+method:///java/io/File/getName()|",
      "|java+method:///org/sonar/core/platform/PluginInfo/getKey()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/core/platform/PluginInfo/getName()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-core:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/loadIssues()|",
    "called": "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory/access$300(org.sonar.server.computation.issue.TrackerRawInputFactory)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/isIssueOnUnsupportedCommonRule(org.sonar.batch.protocol.output.BatchReport$Issue)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/server/computation/issue/commonrule/CommonRuleEngine/process(org.sonar.server.computation.component.Component)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Issue/getRuleRepository()|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readComponentIssues(int)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory/access$200(org.sonar.server.computation.issue.TrackerRawInputFactory)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getRef()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/api/utils/log/Loggers/get(java.lang.Class)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/init(org.sonar.core.issue.DefaultIssue)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/getLineHashSequence()|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Issue/getRuleKey()|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/toIssue(org.sonar.core.issue.tracking.LineHashSequence,org.sonar.batch.protocol.output.BatchReport$Issue)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/sonar/server/computation/issue/commonrule/CommonRuleEngine/process(org.sonar.server.computation.component.Component)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory/access$300(org.sonar.server.computation.issue.TrackerRawInputFactory)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readComponentIssues(int)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory/access$200(org.sonar.server.computation.issue.TrackerRawInputFactory)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getRef()|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/toIssue(org.sonar.core.issue.tracking.LineHashSequence,org.sonar.scanner.protocol.output.ScannerReport$Issue)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Issue/getRuleKey()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Issue/getRuleRepository()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/api/utils/log/Loggers/get(java.lang.Class)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/isIssueOnUnsupportedCommonRule(org.sonar.scanner.protocol.output.ScannerReport$Issue)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/init(org.sonar.core.issue.DefaultIssue)|",
      "|java+method:///org/sonar/server/computation/issue/TrackerRawInputFactory$RawLazyInput/getLineHashSequence()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-core:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/step/PersistFileSourcesStep$FileSourceVisitor/visitFile(org.sonar.server.computation.component.Component)|",
    "called": "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
    "v1Body": [
      "|java+constructor:///org/sonar/server/computation/step/PersistFileSourcesStep$LineReaders/PersistFileSourcesStep$LineReaders(org.sonar.server.computation.batch.BatchReportReader,org.sonar.server.computation.scm.ScmInfoRepository,org.sonar.server.computation.duplication.DuplicationRepository,org.sonar.server.computation.component.Component)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/sonar/server/computation/source/ComputeFileSourceData/compute()|",
      "|java+constructor:///org/sonar/server/computation/source/ComputeFileSourceData/ComputeFileSourceData(java.util.Iterator,java.util.List,int)|",
      "|java+method:///org/sonar/server/computation/step/PersistFileSourcesStep/access$300(org.sonar.server.computation.step.PersistFileSourcesStep)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Component/getLines()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/server/computation/step/PersistFileSourcesStep$LineReaders/close()|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|",
      "|java+method:///org/sonar/server/computation/step/PersistFileSourcesStep$FileSourceVisitor/persistSource(org.sonar.server.computation.source.ComputeFileSourceData$Data,java.lang.String,org.sonar.server.computation.scm.Changeset)|",
      "|java+method:///org/sonar/server/computation/source/SourceLinesRepository/readLines(org.sonar.server.computation.component.Component)|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readComponent(int)|",
      "|java+method:///org/sonar/server/computation/component/Component/getKey()|",
      "|java+method:///org/sonar/server/computation/step/PersistFileSourcesStep/access$200(org.sonar.server.computation.step.PersistFileSourcesStep)|",
      "|java+method:///org/sonar/server/computation/component/Component/getUuid()|",
      "|java+method:///org/sonar/server/computation/step/PersistFileSourcesStep$LineReaders/getLatestChange()|",
      "|java+method:///org/sonar/server/computation/step/PersistFileSourcesStep/access$400(org.sonar.server.computation.step.PersistFileSourcesStep)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getRef()|",
      "|java+method:///org/sonar/server/computation/step/PersistFileSourcesStep$LineReaders/readers()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/computation/step/PersistFileSourcesStep/access$500(org.sonar.server.computation.step.PersistFileSourcesStep)|"
    ],
    "v2Body": [
      "|java+constructor:///org/sonar/server/computation/step/PersistFileSourcesStep$LineReaders/PersistFileSourcesStep$LineReaders(org.sonar.server.computation.batch.BatchReportReader,org.sonar.server.computation.scm.ScmInfoRepository,org.sonar.server.computation.duplication.DuplicationRepository,org.sonar.server.computation.component.Component)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/sonar/server/computation/source/ComputeFileSourceData/compute()|",
      "|java+constructor:///org/sonar/server/computation/source/ComputeFileSourceData/ComputeFileSourceData(java.util.Iterator,java.util.List,int)|",
      "|java+method:///org/sonar/server/computation/step/PersistFileSourcesStep/access$300(org.sonar.server.computation.step.PersistFileSourcesStep)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/server/computation/step/PersistFileSourcesStep$LineReaders/close()|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|",
      "|java+method:///org/sonar/server/computation/step/PersistFileSourcesStep$FileSourceVisitor/persistSource(org.sonar.server.computation.source.ComputeFileSourceData$Data,java.lang.String,org.sonar.server.computation.scm.Changeset)|",
      "|java+method:///org/sonar/server/computation/source/SourceLinesRepository/readLines(org.sonar.server.computation.component.Component)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Component/getLines()|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readComponent(int)|",
      "|java+method:///org/sonar/server/computation/component/Component/getKey()|",
      "|java+method:///org/sonar/server/computation/step/PersistFileSourcesStep/access$200(org.sonar.server.computation.step.PersistFileSourcesStep)|",
      "|java+method:///org/sonar/server/computation/component/Component/getUuid()|",
      "|java+method:///org/sonar/server/computation/step/PersistFileSourcesStep$LineReaders/getLatestChange()|",
      "|java+method:///org/sonar/server/computation/step/PersistFileSourcesStep/access$400(org.sonar.server.computation.step.PersistFileSourcesStep)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getRef()|",
      "|java+method:///org/sonar/server/computation/step/PersistFileSourcesStep$LineReaders/readers()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/server/computation/step/PersistFileSourcesStep/access$500(org.sonar.server.computation.step.PersistFileSourcesStep)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-core:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/plugins/ServerPluginRepository/stop()|",
    "called": "|java+method:///org/sonar/core/platform/PluginLoader/unload(java.util.Collection)|",
    "v1Body": [
      "|java+method:///org/sonar/core/platform/PluginLoader/unload(java.util.Collection)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Map/clear()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/core/platform/PluginLoader/unload(java.util.Collection)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Map/clear()|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/set(boolean)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-core:5.5-RC1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-server:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-server:5.5-RC1",
    "caller": "|java+method:///org/sonar/server/computation/measure/MeasureRepositoryImpl/loadBatchMeasuresForComponent(org.sonar.server.computation.component.Component)|",
    "called": "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/server/computation/measure/BatchMeasureToMeasure/toMeasure(org.sonar.batch.protocol.output.BatchReport$Measure,org.sonar.server.computation.metric.Metric)|",
      "|java+method:///org/sonar/server/computation/metric/ReportMetricValidator/validate(java.lang.String)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|",
      "|java+method:///org/sonar/server/computation/metric/MetricRepository/getByKey(java.lang.String)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getRef()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readComponentMeasures(int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/sonar/server/computation/measure/MapBasedRawMeasureRepository/add(org.sonar.server.computation.component.Component,org.sonar.server.computation.metric.Metric,org.sonar.server.computation.measure.Measure,org.sonar.server.computation.measure.MapBasedRawMeasureRepository$OverridePolicy)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///org/sonar/batch/protocol/output/BatchReport$Measure/getMetricKey()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/hasNext()|",
      "|java+method:///org/sonar/server/computation/metric/ReportMetricValidator/validate(java.lang.String)|",
      "|java+method:///org/sonar/core/util/CloseableIterator/next()|",
      "|java+method:///org/sonar/server/computation/measure/BatchMeasureToMeasure/toMeasure(org.sonar.scanner.protocol.output.ScannerReport$Measure,org.sonar.server.computation.metric.Metric)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+method:///org/sonar/scanner/protocol/output/ScannerReport$Measure/getMetricKey()|",
      "|java+method:///org/sonar/server/computation/component/Component/getReportAttributes()|",
      "|java+method:///org/sonar/server/computation/metric/MetricRepository/getByKey(java.lang.String)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/sonar/server/computation/component/ReportAttributes/getRef()|",
      "|java+method:///org/sonar/core/util/CloseableIterator/close()|",
      "|java+method:///org/sonar/server/computation/batch/BatchReportReader/readComponentMeasures(int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/sonar/server/computation/measure/MapBasedRawMeasureRepository/add(org.sonar.server.computation.component.Component,org.sonar.server.computation.metric.Metric,org.sonar.server.computation.measure.Measure,org.sonar.server.computation.measure.MapBasedRawMeasureRepository$OverridePolicy)|"
    ],
    "affectedLib": "org.sonarsource.sonarqube:sonar-core:5.5-RC1",
    "change": "UPDATED"
  }
]