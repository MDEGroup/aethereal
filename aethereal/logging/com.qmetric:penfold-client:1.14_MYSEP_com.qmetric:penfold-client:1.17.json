[
  {
    "coordinatesV1": "com.qmetric:penfold-client:1.14",
    "coordinatesV2": "com.qmetric:penfold-client:1.17",
    "caller": "|java+method:///com/qmetric/penfold/client/app/TaskStoreServiceImpl/getTaskResource(com.qmetric.penfold.client.domain.model.TaskId)|",
    "called": "|java+constructor:///org/apache/http/client/methods/HttpGet/HttpGet(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/qmetric/hal/reader/HalReader/read(java.io.Reader)|",
      "|java+method:///com/qmetric/penfold/client/app/TaskStoreServiceImpl/checkResponseStatus(javax.ws.rs.core.Response,int)|",
      "|java+method:///javax/ws/rs/client/WebTarget/request(java.lang.String%5B%5D)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/io/StringReader/StringReader(java.lang.String)|",
      "|java+method:///javax/ws/rs/core/Response/readEntity(java.lang.Class)|",
      "|java+method:///javax/ws/rs/client/Invocation$Builder/get()|",
      "|java+method:///javax/ws/rs/client/Client/target(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/qmetric/hal/reader/HalReader/read(java.io.Reader)|",
      "|java+method:///org/apache/http/HttpResponse/getStatusLine()|",
      "|java+method:///org/apache/http/util/EntityUtils/consumeQuietly(org.apache.http.HttpEntity)|",
      "|java+method:///org/apache/http/client/HttpClient/execute(org.apache.http.client.methods.HttpUriRequest)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/http/util/EntityUtils/toString(org.apache.http.HttpEntity,java.nio.charset.Charset)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/io/StringReader/StringReader(java.lang.String)|",
      "|java+method:///com/qmetric/penfold/client/app/TaskStoreServiceImpl/checkResponseStatus(int,int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/http/HttpResponse/getEntity()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/http/StatusLine/getStatusCode()|",
      "|java+constructor:///org/apache/http/message/BasicHeader/BasicHeader(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/http/client/methods/HttpGet/HttpGet(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/http/client/methods/HttpGet/addHeader(org.apache.http.Header)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient:4.5",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.qmetric:penfold-client:1.14",
    "coordinatesV2": "com.qmetric:penfold-client:1.17",
    "caller": "|java+method:///com/qmetric/penfold/client/app/TaskStoreServiceImpl/create(com.qmetric.penfold.client.domain.model.NewTask)|",
    "called": "|java+constructor:///org/apache/http/client/methods/HttpPost/HttpPost(java.lang.String)|",
    "v1Body": [
      "|java+method:///javax/ws/rs/client/Invocation$Builder/post(javax.ws.rs.client.Entity)|",
      "|java+method:///com/qmetric/penfold/client/app/TaskStoreServiceImpl/contentTypeHeaderFor(com.qmetric.penfold.client.domain.model.CommandType)|",
      "|java+method:///com/qmetric/penfold/client/app/TaskStoreServiceImpl/checkResponseStatus(javax.ws.rs.core.Response,int)|",
      "|java+constructor:///com/qmetric/penfold/client/app/commands/CreateTaskCommand/CreateTaskCommand(com.qmetric.penfold.client.domain.model.NewTask)|",
      "|java+method:///javax/ws/rs/client/WebTarget/request(java.lang.String%5B%5D)|",
      "|java+method:///com/qmetric/penfold/client/app/TaskStoreServiceImpl/taskFromResponse(javax.ws.rs.core.Response)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///javax/ws/rs/client/Entity/entity(java.lang.Object,java.lang.String)|",
      "|java+method:///javax/ws/rs/client/Client/target(java.lang.String)|",
      "|java+method:///java/util/Optional/isPresent()|",
      "|java+method:///com/qmetric/penfold/client/app/TaskStoreServiceImpl/toJson(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/http/HttpResponse/getStatusLine()|",
      "|java+method:///org/apache/http/client/HttpClient/execute(org.apache.http.client.methods.HttpUriRequest)|",
      "|java+method:///com/qmetric/penfold/client/app/TaskStoreServiceImpl/taskFromResponse(org.apache.http.HttpResponse)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/http/client/methods/HttpPost/setEntity(org.apache.http.HttpEntity)|",
      "|java+method:///com/qmetric/penfold/client/app/TaskStoreServiceImpl/checkResponseStatus(int,int)|",
      "|java+constructor:///org/apache/http/entity/StringEntity/StringEntity(java.lang.String,java.nio.charset.Charset)|",
      "|java+method:///org/apache/http/StatusLine/getStatusCode()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///org/apache/http/client/methods/HttpPost/HttpPost(java.lang.String)|",
      "|java+method:///java/util/Optional/isPresent()|",
      "|java+method:///org/apache/http/HttpResponse/getEntity()|",
      "|java+method:///com/qmetric/penfold/client/app/TaskStoreServiceImpl/toJson(java.lang.Object)|",
      "|java+method:///com/qmetric/penfold/client/app/TaskStoreServiceImpl/contentTypeHeaderFor(com.qmetric.penfold.client.domain.model.CommandType)|",
      "|java+method:///org/apache/http/util/EntityUtils/consumeQuietly(org.apache.http.HttpEntity)|",
      "|java+constructor:///com/qmetric/penfold/client/app/commands/CreateTaskCommand/CreateTaskCommand(com.qmetric.penfold.client.domain.model.NewTask)|",
      "|java+method:///org/apache/http/client/methods/HttpPost/addHeader(java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient:4.5",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.qmetric:penfold-client:1.14",
    "coordinatesV2": "com.qmetric:penfold-client:1.17",
    "caller": "|java+method:///com/qmetric/penfold/client/app/support/PenfoldServerHealthCheck/check()|",
    "called": "|java+constructor:///org/apache/http/client/methods/HttpGet/HttpGet(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/codahale/metrics/health/HealthCheck$Result/unhealthy(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///javax/ws/rs/client/WebTarget/request(java.lang.String%5B%5D)|",
      "|java+method:///com/codahale/metrics/health/HealthCheck$Result/healthy(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///javax/ws/rs/core/Response/getStatus()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///javax/ws/rs/client/Invocation$Builder/get()|",
      "|java+method:///javax/ws/rs/client/Client/target(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/http/HttpResponse/getStatusLine()|",
      "|java+method:///org/apache/http/client/HttpClient/execute(org.apache.http.client.methods.HttpUriRequest)|",
      "|java+method:///com/codahale/metrics/health/HealthCheck$Result/unhealthy(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/codahale/metrics/health/HealthCheck$Result/healthy(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/http/StatusLine/getStatusCode()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///org/apache/http/client/methods/HttpGet/HttpGet(java.lang.String)|",
      "|java+method:///org/apache/http/HttpResponse/getEntity()|",
      "|java+method:///org/apache/http/client/methods/HttpGet/addHeader(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/http/util/EntityUtils/consumeQuietly(org.apache.http.HttpEntity)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient:4.5",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.qmetric:penfold-client:1.14",
    "coordinatesV2": "com.qmetric:penfold-client:1.17",
    "caller": "|java+method:///com/qmetric/penfold/client/app/TaskStoreServiceImpl/update(com.qmetric.penfold.client.domain.model.Task,java.lang.Object,com.qmetric.penfold.client.domain.model.CommandType)|",
    "called": "|java+constructor:///org/apache/http/client/methods/HttpPost/HttpPost(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///javax/ws/rs/client/Invocation$Builder/post(javax.ws.rs.client.Entity)|",
      "|java+method:///com/qmetric/penfold/client/app/TaskStoreServiceImpl/contentTypeHeaderFor(com.qmetric.penfold.client.domain.model.CommandType)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///com/qmetric/penfold/client/app/TaskStoreServiceImpl/taskFromResponse(javax.ws.rs.core.Response)|",
      "|java+method:///com/qmetric/hal/reader/HalResource/getLinkByRel(java.lang.String)|",
      "|java+method:///javax/ws/rs/client/Entity/entity(java.lang.Object,java.lang.String)|",
      "|java+method:///javax/ws/rs/core/Response/getStatus()|",
      "|java+method:///com/google/common/base/Preconditions/checkState(boolean,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///com/qmetric/penfold/client/domain/exceptions/ConflictException/ConflictException(java.lang.String)|",
      "|java+method:///com/theoryinpractise/halbuilder/api/Link/getHref()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///javax/ws/rs/client/Client/target(java.lang.String)|",
      "|java+method:///com/qmetric/penfold/client/app/TaskStoreServiceImpl/toJson(java.lang.Object)|",
      "|java+method:///com/qmetric/penfold/client/app/TaskStoreServiceImpl/getTaskResourceWithExpectedVersion(com.qmetric.penfold.client.domain.model.TaskId,java.lang.Integer)|",
      "|java+method:///javax/ws/rs/client/WebTarget/request(java.lang.String%5B%5D)|",
      "|java+method:///com/qmetric/penfold/client/domain/model/CommandType/name()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///org/apache/http/HttpResponse/getStatusLine()|",
      "|java+method:///org/apache/http/client/HttpClient/execute(org.apache.http.client.methods.HttpUriRequest)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///com/qmetric/penfold/client/app/TaskStoreServiceImpl/taskFromResponse(org.apache.http.HttpResponse)|",
      "|java+method:///org/apache/http/client/methods/HttpPost/addHeader(java.lang.String,java.lang.String)|",
      "|java+method:///com/qmetric/penfold/client/app/TaskStoreServiceImpl/getTaskResourceWithExpectedVersion(com.qmetric.penfold.client.domain.model.TaskId,java.lang.Integer)|",
      "|java+method:///com/qmetric/hal/reader/HalResource/getLinkByRel(java.lang.String)|",
      "|java+method:///org/apache/http/client/methods/HttpPost/setEntity(org.apache.http.HttpEntity)|",
      "|java+method:///com/qmetric/penfold/client/app/TaskStoreServiceImpl/checkResponseStatus(int,int)|",
      "|java+method:///com/theoryinpractise/halbuilder/api/Link/getHref()|",
      "|java+method:///org/apache/http/StatusLine/getStatusCode()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///org/apache/http/client/methods/HttpPost/HttpPost(java.lang.String)|",
      "|java+method:///org/apache/http/HttpResponse/getEntity()|",
      "|java+method:///com/qmetric/penfold/client/app/TaskStoreServiceImpl/toJson(java.lang.Object)|",
      "|java+method:///com/qmetric/penfold/client/app/TaskStoreServiceImpl/contentTypeHeaderFor(com.qmetric.penfold.client.domain.model.CommandType)|",
      "|java+method:///org/apache/http/util/EntityUtils/consumeQuietly(org.apache.http.HttpEntity)|",
      "|java+method:///com/qmetric/penfold/client/domain/model/CommandType/name()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///org/apache/http/entity/StringEntity/StringEntity(java.lang.String,java.nio.charset.Charset)|",
      "|java+constructor:///com/qmetric/penfold/client/domain/exceptions/ConflictException/ConflictException(java.lang.String)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient:4.5",
    "change": "ADDED"
  }
]