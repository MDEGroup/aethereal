[
  {
    "coordinatesV1": "com.linkedin.pegasus:r2-netty:3.1.2",
    "coordinatesV2": "com.linkedin.pegasus:r2-netty:11.0.0",
    "caller": "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/getClient(java.util.Map,javax.net.ssl.SSLContext,javax.net.ssl.SSLParameters)|",
    "called": "|java+constructor:///com/linkedin/r2/disruptor/DisruptFilter/DisruptFilter(java.util.concurrent.ScheduledExecutorService,java.util.concurrent.ExecutorService,int)|",
    "v1Body": [
      "|java+method:///com/linkedin/r2/filter/FilterChain/addLastRest(com.linkedin.r2.filter.message.rest.RestFilter)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/getRequestCompressionConfig(java.lang.String,com.linkedin.r2.filter.compression.EncodingType)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/chooseNewOverDefault(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/linkedin/r2/util/ConfigValueExtractor/buildList(java.lang.Object,java.lang.String)|",
      "|java+method:///java/util/Map/remove(java.lang.Object)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/getRawClient(java.util.Map,javax.net.ssl.SSLContext,javax.net.ssl.SSLParameters)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///com/linkedin/r2/filter/compression/ClientCompressionFilter/ClientCompressionFilter(com.linkedin.r2.filter.compression.EncodingType,com.linkedin.r2.filter.CompressionConfig,com.linkedin.r2.filter.compression.EncodingType%5B%5D,com.linkedin.r2.filter.CompressionConfig,java.util.List)|",
      "|java+constructor:///com/linkedin/r2/filter/transport/FilterChainClient/FilterChainClient(com.linkedin.r2.transport.common.bridge.client.TransportClient,com.linkedin.r2.filter.FilterChain)|",
      "|java+constructor:///com/linkedin/r2/transport/http/client/HttpClientFactory$FactoryClient/HttpClientFactory$FactoryClient(com.linkedin.r2.transport.http.client.HttpClientFactory,com.linkedin.r2.transport.common.bridge.client.TransportClient,com.linkedin.r2.transport.http.client.HttpClientFactory$1)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/getRequestContentEncoding(java.util.List)|",
      "|java+constructor:///com/linkedin/r2/filter/transport/ClientQueryTunnelFilter/ClientQueryTunnelFilter(int)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/buildAcceptEncodingSchemas(java.util.List)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/getIntValue(java.util.Map,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/linkedin/r2/filter/FilterChain/addLastRest(com.linkedin.r2.filter.message.rest.RestFilter)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+constructor:///com/linkedin/r2/filter/compression/ClientStreamCompressionFilter/ClientStreamCompressionFilter(com.linkedin.r2.filter.compression.streaming.StreamEncodingType,com.linkedin.r2.filter.CompressionConfig,com.linkedin.r2.filter.compression.streaming.StreamEncodingType%5B%5D,com.linkedin.r2.filter.CompressionConfig,java.util.List,java.util.concurrent.Executor)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/chooseNewOverDefault(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/linkedin/r2/util/ConfigValueExtractor/buildList(java.lang.Object,java.lang.String)|",
      "|java+constructor:///com/linkedin/r2/disruptor/DisruptFilter/DisruptFilter(java.util.concurrent.ScheduledExecutorService,java.util.concurrent.ExecutorService,int)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/getRawClient(java.util.Map,javax.net.ssl.SSLContext,javax.net.ssl.SSLParameters)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///com/linkedin/r2/filter/compression/ClientCompressionFilter/ClientCompressionFilter(com.linkedin.r2.filter.compression.EncodingType,com.linkedin.r2.filter.CompressionConfig,com.linkedin.r2.filter.compression.EncodingType%5B%5D,com.linkedin.r2.filter.CompressionConfig,java.util.List)|",
      "|java+constructor:///com/linkedin/r2/filter/transport/FilterChainClient/FilterChainClient(com.linkedin.r2.transport.common.bridge.client.TransportClient,com.linkedin.r2.filter.FilterChain)|",
      "|java+constructor:///com/linkedin/r2/transport/http/client/HttpClientFactory$FactoryClient/HttpClientFactory$FactoryClient(com.linkedin.r2.transport.http.client.HttpClientFactory,com.linkedin.r2.transport.common.bridge.client.TransportClient,com.linkedin.r2.transport.http.client.HttpClientFactory$1)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/getStreamRequestContentEncoding(java.util.List)|",
      "|java+constructor:///com/linkedin/r2/filter/transport/ClientQueryTunnelFilter/ClientQueryTunnelFilter(int)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///com/linkedin/r2/filter/FilterChain/addLast(com.linkedin.r2.filter.message.stream.StreamFilter)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/buildStreamAcceptEncodingSchemas(java.util.List)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/buildRestAcceptEncodingSchemaNames(java.util.List)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/getIntValue(java.util.Map,java.lang.String)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/getRestRequestContentEncoding(java.util.List)|",
      "|java+method:///java/util/Map/remove(java.lang.Object)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/getStreamRequestCompressionConfig(java.lang.String,com.linkedin.r2.filter.compression.streaming.StreamEncodingType)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/getRestRequestCompressionConfig(java.lang.String,com.linkedin.r2.filter.compression.EncodingType)|"
    ],
    "affectedLib": "com.linkedin.pegasus:r2-disruptor:11.0.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.linkedin.pegasus:r2-netty:3.1.2",
    "coordinatesV2": "com.linkedin.pegasus:r2-netty:11.0.0",
    "caller": "|java+method:///com/linkedin/r2/transport/http/client/ChannelPoolLifecycle$1/operationComplete(io.netty.channel.ChannelFuture)|",
    "called": "|java+constructor:///com/linkedin/r2/RetriableRequestException/RetriableRequestException(java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///com/linkedin/r2/transport/http/client/HttpNettyClient/toException(java.lang.Throwable)|",
      "|java+method:///io/netty/channel/ChannelFuture/isSuccess()|",
      "|java+method:///com/linkedin/r2/transport/http/client/ChannelPoolLifecycle/access$100(com.linkedin.r2.transport.http.client.ChannelPoolLifecycle)|",
      "|java+method:///com/linkedin/common/callback/Callback/onSuccess(java.lang.Object)|",
      "|java+method:///io/netty/channel/ChannelFuture/channel()|",
      "|java+method:///com/linkedin/common/callback/Callback/onError(java.lang.Throwable)|",
      "|java+method:///io/netty/channel/ChannelFuture/cause()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///com/linkedin/common/stats/LongTracking/addValue(long)|",
      "|java+method:///com/linkedin/r2/transport/http/client/ChannelPoolLifecycle/access$000(com.linkedin.r2.transport.http.client.ChannelPoolLifecycle)|",
      "|java+method:///io/netty/channel/group/ChannelGroup/add(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///com/linkedin/r2/transport/http/client/HttpNettyStreamClient/toException(java.lang.Throwable)|",
      "|java+method:///io/netty/channel/ChannelFuture/isSuccess()|",
      "|java+method:///com/linkedin/r2/transport/http/client/ChannelPoolLifecycle/access$100(com.linkedin.r2.transport.http.client.ChannelPoolLifecycle)|",
      "|java+method:///com/linkedin/r2/transport/http/client/ChannelPoolLifecycle/access$200(com.linkedin.r2.transport.http.client.ChannelPoolLifecycle)|",
      "|java+method:///io/netty/channel/ChannelFuture/channel()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///com/linkedin/common/callback/Callback/onError(java.lang.Throwable)|",
      "|java+method:///io/netty/channel/ChannelFuture/cause()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+constructor:///com/linkedin/r2/RetriableRequestException/RetriableRequestException(java.lang.Throwable)|",
      "|java+method:///com/linkedin/r2/transport/http/client/ChannelPoolLifecycle/access$000(com.linkedin.r2.transport.http.client.ChannelPoolLifecycle)|",
      "|java+method:///io/netty/channel/group/ChannelGroup/add(java.lang.Object)|",
      "|java+method:///com/linkedin/common/callback/Callback/onSuccess(java.lang.Object)|",
      "|java+method:///io/netty/channel/Channel/config()|",
      "|java+method:///io/netty/channel/ChannelConfig/setOption(io.netty.channel.ChannelOption,java.lang.Object)|",
      "|java+method:///com/linkedin/common/stats/LongTracking/addValue(long)|"
    ],
    "affectedLib": "com.linkedin.pegasus:r2-core:11.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.pegasus:r2-netty:3.1.2",
    "coordinatesV2": "com.linkedin.pegasus:r2-netty:11.0.0",
    "caller": "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/getClient(java.util.Map,javax.net.ssl.SSLContext,javax.net.ssl.SSLParameters)|",
    "called": "|java+method:///com/linkedin/r2/util/ConfigValueExtractor/buildList(java.lang.Object,java.lang.String)|",
    "v1Body": [
      "|java+method:///com/linkedin/r2/filter/FilterChain/addLastRest(com.linkedin.r2.filter.message.rest.RestFilter)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/getRequestCompressionConfig(java.lang.String,com.linkedin.r2.filter.compression.EncodingType)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/chooseNewOverDefault(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/linkedin/r2/util/ConfigValueExtractor/buildList(java.lang.Object,java.lang.String)|",
      "|java+method:///java/util/Map/remove(java.lang.Object)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/getRawClient(java.util.Map,javax.net.ssl.SSLContext,javax.net.ssl.SSLParameters)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///com/linkedin/r2/filter/compression/ClientCompressionFilter/ClientCompressionFilter(com.linkedin.r2.filter.compression.EncodingType,com.linkedin.r2.filter.CompressionConfig,com.linkedin.r2.filter.compression.EncodingType%5B%5D,com.linkedin.r2.filter.CompressionConfig,java.util.List)|",
      "|java+constructor:///com/linkedin/r2/filter/transport/FilterChainClient/FilterChainClient(com.linkedin.r2.transport.common.bridge.client.TransportClient,com.linkedin.r2.filter.FilterChain)|",
      "|java+constructor:///com/linkedin/r2/transport/http/client/HttpClientFactory$FactoryClient/HttpClientFactory$FactoryClient(com.linkedin.r2.transport.http.client.HttpClientFactory,com.linkedin.r2.transport.common.bridge.client.TransportClient,com.linkedin.r2.transport.http.client.HttpClientFactory$1)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/getRequestContentEncoding(java.util.List)|",
      "|java+constructor:///com/linkedin/r2/filter/transport/ClientQueryTunnelFilter/ClientQueryTunnelFilter(int)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/buildAcceptEncodingSchemas(java.util.List)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/getIntValue(java.util.Map,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/linkedin/r2/filter/FilterChain/addLastRest(com.linkedin.r2.filter.message.rest.RestFilter)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+constructor:///com/linkedin/r2/filter/compression/ClientStreamCompressionFilter/ClientStreamCompressionFilter(com.linkedin.r2.filter.compression.streaming.StreamEncodingType,com.linkedin.r2.filter.CompressionConfig,com.linkedin.r2.filter.compression.streaming.StreamEncodingType%5B%5D,com.linkedin.r2.filter.CompressionConfig,java.util.List,java.util.concurrent.Executor)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/chooseNewOverDefault(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/linkedin/r2/util/ConfigValueExtractor/buildList(java.lang.Object,java.lang.String)|",
      "|java+constructor:///com/linkedin/r2/disruptor/DisruptFilter/DisruptFilter(java.util.concurrent.ScheduledExecutorService,java.util.concurrent.ExecutorService,int)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/getRawClient(java.util.Map,javax.net.ssl.SSLContext,javax.net.ssl.SSLParameters)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///com/linkedin/r2/filter/compression/ClientCompressionFilter/ClientCompressionFilter(com.linkedin.r2.filter.compression.EncodingType,com.linkedin.r2.filter.CompressionConfig,com.linkedin.r2.filter.compression.EncodingType%5B%5D,com.linkedin.r2.filter.CompressionConfig,java.util.List)|",
      "|java+constructor:///com/linkedin/r2/filter/transport/FilterChainClient/FilterChainClient(com.linkedin.r2.transport.common.bridge.client.TransportClient,com.linkedin.r2.filter.FilterChain)|",
      "|java+constructor:///com/linkedin/r2/transport/http/client/HttpClientFactory$FactoryClient/HttpClientFactory$FactoryClient(com.linkedin.r2.transport.http.client.HttpClientFactory,com.linkedin.r2.transport.common.bridge.client.TransportClient,com.linkedin.r2.transport.http.client.HttpClientFactory$1)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/getStreamRequestContentEncoding(java.util.List)|",
      "|java+constructor:///com/linkedin/r2/filter/transport/ClientQueryTunnelFilter/ClientQueryTunnelFilter(int)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///com/linkedin/r2/filter/FilterChain/addLast(com.linkedin.r2.filter.message.stream.StreamFilter)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/buildStreamAcceptEncodingSchemas(java.util.List)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/buildRestAcceptEncodingSchemaNames(java.util.List)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/getIntValue(java.util.Map,java.lang.String)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/getRestRequestContentEncoding(java.util.List)|",
      "|java+method:///java/util/Map/remove(java.lang.Object)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/getStreamRequestCompressionConfig(java.lang.String,com.linkedin.r2.filter.compression.streaming.StreamEncodingType)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/getRestRequestCompressionConfig(java.lang.String,com.linkedin.r2.filter.compression.EncodingType)|"
    ],
    "affectedLib": "com.linkedin.pegasus:r2-core:11.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.pegasus:r2-netty:3.1.2",
    "coordinatesV2": "com.linkedin.pegasus:r2-netty:11.0.0",
    "caller": "|java+method:///com/linkedin/r2/transport/http/client/HttpNettyClient$ChannelPoolFactoryImpl/getPool(java.net.SocketAddress)|",
    "called": "|java+constructor:///com/linkedin/r2/transport/http/client/ExponentialBackOffRateLimiter/ExponentialBackOffRateLimiter(long,long,long,java.util.concurrent.ScheduledExecutorService,int)|",
    "v1Body": [
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpNettyClient/access$400(com.linkedin.r2.transport.http.client.HttpNettyClient)|",
      "|java+constructor:///com/linkedin/r2/transport/http/client/AsyncPoolImpl/AsyncPoolImpl(java.lang.String,com.linkedin.r2.transport.http.client.AsyncPool$Lifecycle,int,long,java.util.concurrent.ScheduledExecutorService,int,com.linkedin.r2.transport.http.client.AsyncPoolImpl$Strategy,int,com.linkedin.r2.transport.http.client.RateLimiter)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpNettyClient/access$1100(com.linkedin.r2.transport.http.client.HttpNettyClient)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpNettyClient/access$1000(com.linkedin.r2.transport.http.client.HttpNettyClient)|",
      "|java+method:///java/lang/Math/max(long,long)|",
      "|java+constructor:///com/linkedin/r2/transport/http/client/ExponentialBackOffRateLimiter/ExponentialBackOffRateLimiter(long,long,long,java.util.concurrent.ScheduledExecutorService,int)|",
      "|java+constructor:///com/linkedin/r2/transport/http/client/ChannelPoolLifecycle/ChannelPoolLifecycle(java.net.SocketAddress,io.netty.bootstrap.Bootstrap,io.netty.channel.group.ChannelGroup)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpNettyClient/access$300(com.linkedin.r2.transport.http.client.HttpNettyClient)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpNettyClient/access$400(com.linkedin.r2.transport.http.client.HttpNettyClient)|",
      "|java+constructor:///com/linkedin/r2/transport/http/client/AsyncPoolImpl/AsyncPoolImpl(java.lang.String,com.linkedin.r2.transport.http.client.AsyncPool$Lifecycle,int,long,java.util.concurrent.ScheduledExecutorService,int,com.linkedin.r2.transport.http.client.AsyncPoolImpl$Strategy,int,com.linkedin.r2.transport.http.client.RateLimiter)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpNettyClient/access$1100(com.linkedin.r2.transport.http.client.HttpNettyClient)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpNettyClient/access$1000(com.linkedin.r2.transport.http.client.HttpNettyClient)|",
      "|java+method:///java/lang/Math/max(long,long)|",
      "|java+constructor:///com/linkedin/r2/transport/http/client/ExponentialBackOffRateLimiter/ExponentialBackOffRateLimiter(long,long,long,java.util.concurrent.ScheduledExecutorService,int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///com/linkedin/r2/transport/http/client/ChannelPoolLifecycle/ChannelPoolLifecycle(java.net.SocketAddress,io.netty.bootstrap.Bootstrap,io.netty.channel.group.ChannelGroup,boolean)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpNettyClient/access$300(com.linkedin.r2.transport.http.client.HttpNettyClient)|"
    ],
    "affectedLib": "com.linkedin.pegasus:r2-core:11.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.pegasus:r2-netty:3.1.2",
    "coordinatesV2": "com.linkedin.pegasus:r2-netty:11.0.0",
    "caller": "|java+method:///com/linkedin/r2/transport/http/client/HttpNettyClient/writeRequest(com.linkedin.r2.message.rest.RestRequest,com.linkedin.r2.message.RequestContext,java.util.Map,com.linkedin.r2.transport.http.client.TimeoutTransportCallback)|",
    "called": "|java+method:///com/linkedin/r2/transport/http/client/TimeoutTransportCallback/addTimeoutTask(java.lang.Runnable)|",
    "v1Body": [
      "|java+method:///com/linkedin/r2/transport/http/client/ChannelPoolManager/getPoolForAddress(java.net.SocketAddress)|",
      "|java+constructor:///java/net/InetSocketAddress/InetSocketAddress(java.net.InetAddress,int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/linkedin/r2/transport/http/client/AsyncPool/get(com.linkedin.common.callback.Callback)|",
      "|java+constructor:///com/linkedin/r2/transport/http/client/HttpNettyClient$3/HttpNettyClient$3(com.linkedin.r2.transport.http.client.HttpNettyClient,com.linkedin.r2.util.Cancellable)|",
      "|java+method:///java/net/URI/getScheme()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/concurrent/atomic/AtomicReference/get()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///com/linkedin/r2/transport/common/WireAttributeHelper/toWireAttributes(java.util.Map)|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/build()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///com/linkedin/r2/transport/http/client/TimeoutTransportCallback/addTimeoutTask(java.lang.Runnable)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getURI()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/overwriteHeaders(java.util.Map)|",
      "|java+method:///java/net/URI/getPort()|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpNettyClient/errorResponse(com.linkedin.r2.transport.common.bridge.common.TransportCallback,java.lang.Throwable)|",
      "|java+constructor:///com/linkedin/r2/message/rest/RestRequestBuilder/RestRequestBuilder(com.linkedin.r2.message.rest.RestRequest)|",
      "|java+method:///java/net/URI/getHost()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+constructor:///com/linkedin/r2/transport/http/client/HttpNettyClient$2/HttpNettyClient$2(com.linkedin.r2.transport.http.client.HttpNettyClient,com.linkedin.r2.transport.http.client.AsyncPool,com.linkedin.r2.transport.http.client.TimeoutTransportCallback,com.linkedin.r2.message.rest.RestRequest)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/net/InetAddress/getByName(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/net/InetAddress/getHostAddress()|",
      "|java+method:///com/linkedin/r2/transport/http/client/ChannelPoolManager/getPoolForAddress(java.net.SocketAddress)|",
      "|java+constructor:///java/net/InetSocketAddress/InetSocketAddress(java.net.InetAddress,int)|",
      "|java+method:///com/linkedin/r2/transport/http/client/AsyncPool/get(com.linkedin.common.callback.Callback)|",
      "|java+constructor:///com/linkedin/r2/transport/http/client/HttpNettyClient$3/HttpNettyClient$3(com.linkedin.r2.transport.http.client.HttpNettyClient,com.linkedin.r2.util.Cancellable)|",
      "|java+method:///java/net/URI/getScheme()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/concurrent/atomic/AtomicReference/get()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///com/linkedin/r2/transport/common/WireAttributeHelper/toWireAttributes(java.util.Map)|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/build()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///com/linkedin/r2/transport/http/client/TimeoutTransportCallback/addTimeoutTask(java.lang.Runnable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/linkedin/r2/message/RequestContext/putLocalAttr(java.lang.String,java.lang.Object)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getURI()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/overwriteHeaders(java.util.Map)|",
      "|java+method:///java/net/URI/getPort()|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpNettyClient/errorResponse(com.linkedin.r2.transport.common.bridge.common.TransportCallback,java.lang.Throwable)|",
      "|java+constructor:///com/linkedin/r2/message/rest/RestRequestBuilder/RestRequestBuilder(com.linkedin.r2.message.rest.RestRequest)|",
      "|java+method:///java/net/URI/getHost()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+constructor:///com/linkedin/r2/transport/http/client/HttpNettyClient$2/HttpNettyClient$2(com.linkedin.r2.transport.http.client.HttpNettyClient,com.linkedin.r2.transport.http.client.AsyncPool,com.linkedin.r2.transport.http.client.TimeoutTransportCallback,com.linkedin.r2.message.rest.RestRequest)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/net/InetAddress/getByName(java.lang.String)|"
    ],
    "affectedLib": "com.linkedin.pegasus:r2-core:11.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.pegasus:r2-netty:3.1.2",
    "coordinatesV2": "com.linkedin.pegasus:r2-netty:11.0.0",
    "caller": "|java+method:///com/linkedin/r2/transport/http/server/RAPServerCodec$RAPRequestDecoder/decode(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpRequest,java.util.List)|",
    "called": "|java+constructor:///com/linkedin/r2/message/rest/RestRequestBuilder/RestRequestBuilder(java.net.URI)|",
    "v1Body": [
      "|java+method:///io/netty/handler/codec/DecoderResult/cause()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/getMethod()|",
      "|java+constructor:///io/netty/buffer/ByteBufInputStream/ByteBufInputStream(io.netty.buffer.ByteBuf)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/content()|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/iterator()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/setMethod(java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/setEntity(com.linkedin.data.ByteString)|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/build()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///java/net/URI/URI(java.lang.String)|",
      "|java+method:///com/linkedin/data/ByteString/read(java.io.InputStream,int)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/getDecoderResult()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/unsafeAddHeaderValue(java.lang.String,java.lang.String)|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/fireExceptionCaught(java.lang.Throwable)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/addCookie(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/DecoderResult/isFailure()|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/headers()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///io/netty/handler/codec/http/HttpMethod/name()|",
      "|java+method:///io/netty/buffer/ByteBuf/readableBytes()|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/getUri()|",
      "|java+constructor:///com/linkedin/r2/message/rest/RestRequestBuilder/RestRequestBuilder(java.net.URI)|"
    ],
    "v2Body": [
      "|java+method:///io/netty/handler/codec/DecoderResult/cause()|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/method()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+constructor:///io/netty/buffer/ByteBufInputStream/ByteBufInputStream(io.netty.buffer.ByteBuf)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/content()|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/iterator()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/setMethod(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/decoderResult()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/uri()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/setEntity(com.linkedin.data.ByteString)|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/build()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///java/net/URI/URI(java.lang.String)|",
      "|java+method:///com/linkedin/data/ByteString/read(java.io.InputStream,int)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/unsafeAddHeaderValue(java.lang.String,java.lang.String)|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/fireExceptionCaught(java.lang.Throwable)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/addCookie(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/DecoderResult/isFailure()|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/headers()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///io/netty/handler/codec/http/HttpMethod/name()|",
      "|java+method:///io/netty/buffer/ByteBuf/readableBytes()|",
      "|java+constructor:///com/linkedin/r2/message/rest/RestRequestBuilder/RestRequestBuilder(java.net.URI)|"
    ],
    "affectedLib": "com.linkedin.pegasus:r2-core:11.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.pegasus:r2-netty:3.1.2",
    "coordinatesV2": "com.linkedin.pegasus:r2-netty:11.0.0",
    "caller": "|java+method:///com/linkedin/r2/transport/http/client/RAPClientCodec$RAPResponseDecoder/decode(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpResponse,java.util.List)|",
    "called": "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/build()|",
    "v1Body": [
      "|java+method:///io/netty/handler/codec/DecoderResult/cause()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/unsafeAddHeaderValue(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///io/netty/handler/codec/http/FullHttpResponse/getDecoderResult()|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/iterator()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/fireExceptionCaught(java.lang.Throwable)|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/setEntity(com.linkedin.data.ByteString)|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/setStatus(int)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpResponse/headers()|",
      "|java+method:///io/netty/handler/codec/http/FullHttpResponse/getStatus()|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/addCookie(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/HttpResponseStatus/code()|",
      "|java+constructor:///io/netty/buffer/ByteBufInputStream/ByteBufInputStream(io.netty.buffer.ByteBuf)|",
      "|java+method:///com/linkedin/data/ByteString/read(java.io.InputStream,int)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpResponse/content()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///com/linkedin/r2/message/rest/RestResponseBuilder/RestResponseBuilder()|",
      "|java+method:///io/netty/handler/codec/DecoderResult/isFailure()|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/build()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///io/netty/buffer/ByteBuf/readableBytes()|"
    ],
    "v2Body": [
      "|java+method:///io/netty/handler/codec/DecoderResult/cause()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/unsafeAddHeaderValue(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/iterator()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/netty/handler/codec/http/FullHttpResponse/status()|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/fireExceptionCaught(java.lang.Throwable)|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/setEntity(com.linkedin.data.ByteString)|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/setStatus(int)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpResponse/headers()|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/addCookie(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/HttpResponseStatus/code()|",
      "|java+constructor:///io/netty/buffer/ByteBufInputStream/ByteBufInputStream(io.netty.buffer.ByteBuf)|",
      "|java+method:///com/linkedin/data/ByteString/read(java.io.InputStream,int)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpResponse/content()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///com/linkedin/r2/message/rest/RestResponseBuilder/RestResponseBuilder()|",
      "|java+method:///io/netty/handler/codec/http/FullHttpResponse/decoderResult()|",
      "|java+method:///io/netty/handler/codec/DecoderResult/isFailure()|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/build()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///io/netty/buffer/ByteBuf/readableBytes()|"
    ],
    "affectedLib": "com.linkedin.pegasus:r2-core:11.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.pegasus:r2-netty:3.1.2",
    "coordinatesV2": "com.linkedin.pegasus:r2-netty:11.0.0",
    "caller": "|java+method:///com/linkedin/r2/transport/http/client/ChannelPoolLifecycle$1/operationComplete(io.netty.channel.ChannelFuture)|",
    "called": "|java+method:///com/linkedin/common/stats/LongTracking/addValue(long)|",
    "v1Body": [
      "|java+method:///com/linkedin/r2/transport/http/client/HttpNettyClient/toException(java.lang.Throwable)|",
      "|java+method:///io/netty/channel/ChannelFuture/isSuccess()|",
      "|java+method:///com/linkedin/r2/transport/http/client/ChannelPoolLifecycle/access$100(com.linkedin.r2.transport.http.client.ChannelPoolLifecycle)|",
      "|java+method:///com/linkedin/common/callback/Callback/onSuccess(java.lang.Object)|",
      "|java+method:///io/netty/channel/ChannelFuture/channel()|",
      "|java+method:///com/linkedin/common/callback/Callback/onError(java.lang.Throwable)|",
      "|java+method:///io/netty/channel/ChannelFuture/cause()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///com/linkedin/common/stats/LongTracking/addValue(long)|",
      "|java+method:///com/linkedin/r2/transport/http/client/ChannelPoolLifecycle/access$000(com.linkedin.r2.transport.http.client.ChannelPoolLifecycle)|",
      "|java+method:///io/netty/channel/group/ChannelGroup/add(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///com/linkedin/r2/transport/http/client/HttpNettyStreamClient/toException(java.lang.Throwable)|",
      "|java+method:///io/netty/channel/ChannelFuture/isSuccess()|",
      "|java+method:///com/linkedin/r2/transport/http/client/ChannelPoolLifecycle/access$100(com.linkedin.r2.transport.http.client.ChannelPoolLifecycle)|",
      "|java+method:///com/linkedin/r2/transport/http/client/ChannelPoolLifecycle/access$200(com.linkedin.r2.transport.http.client.ChannelPoolLifecycle)|",
      "|java+method:///io/netty/channel/ChannelFuture/channel()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///com/linkedin/common/callback/Callback/onError(java.lang.Throwable)|",
      "|java+method:///io/netty/channel/ChannelFuture/cause()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+constructor:///com/linkedin/r2/RetriableRequestException/RetriableRequestException(java.lang.Throwable)|",
      "|java+method:///com/linkedin/r2/transport/http/client/ChannelPoolLifecycle/access$000(com.linkedin.r2.transport.http.client.ChannelPoolLifecycle)|",
      "|java+method:///io/netty/channel/group/ChannelGroup/add(java.lang.Object)|",
      "|java+method:///com/linkedin/common/callback/Callback/onSuccess(java.lang.Object)|",
      "|java+method:///io/netty/channel/Channel/config()|",
      "|java+method:///io/netty/channel/ChannelConfig/setOption(io.netty.channel.ChannelOption,java.lang.Object)|",
      "|java+method:///com/linkedin/common/stats/LongTracking/addValue(long)|"
    ],
    "affectedLib": "com.linkedin.pegasus:pegasus-common:11.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.pegasus:r2-netty:3.1.2",
    "coordinatesV2": "com.linkedin.pegasus:r2-netty:11.0.0",
    "caller": "|java+method:///com/linkedin/r2/transport/http/client/RAPClientCodec$RAPResponseDecoder/decode(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpResponse,java.util.List)|",
    "called": "|java+method:///com/linkedin/data/ByteString/read(java.io.InputStream,int)|",
    "v1Body": [
      "|java+method:///io/netty/handler/codec/DecoderResult/cause()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/unsafeAddHeaderValue(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///io/netty/handler/codec/http/FullHttpResponse/getDecoderResult()|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/iterator()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/fireExceptionCaught(java.lang.Throwable)|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/setEntity(com.linkedin.data.ByteString)|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/setStatus(int)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpResponse/headers()|",
      "|java+method:///io/netty/handler/codec/http/FullHttpResponse/getStatus()|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/addCookie(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/HttpResponseStatus/code()|",
      "|java+constructor:///io/netty/buffer/ByteBufInputStream/ByteBufInputStream(io.netty.buffer.ByteBuf)|",
      "|java+method:///com/linkedin/data/ByteString/read(java.io.InputStream,int)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpResponse/content()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///com/linkedin/r2/message/rest/RestResponseBuilder/RestResponseBuilder()|",
      "|java+method:///io/netty/handler/codec/DecoderResult/isFailure()|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/build()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///io/netty/buffer/ByteBuf/readableBytes()|"
    ],
    "v2Body": [
      "|java+method:///io/netty/handler/codec/DecoderResult/cause()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/unsafeAddHeaderValue(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/iterator()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/netty/handler/codec/http/FullHttpResponse/status()|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/fireExceptionCaught(java.lang.Throwable)|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/setEntity(com.linkedin.data.ByteString)|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/setStatus(int)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpResponse/headers()|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/addCookie(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/HttpResponseStatus/code()|",
      "|java+constructor:///io/netty/buffer/ByteBufInputStream/ByteBufInputStream(io.netty.buffer.ByteBuf)|",
      "|java+method:///com/linkedin/data/ByteString/read(java.io.InputStream,int)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpResponse/content()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///com/linkedin/r2/message/rest/RestResponseBuilder/RestResponseBuilder()|",
      "|java+method:///io/netty/handler/codec/http/FullHttpResponse/decoderResult()|",
      "|java+method:///io/netty/handler/codec/DecoderResult/isFailure()|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/build()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///io/netty/buffer/ByteBuf/readableBytes()|"
    ],
    "affectedLib": "com.linkedin.pegasus:data:11.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.pegasus:r2-netty:3.1.2",
    "coordinatesV2": "com.linkedin.pegasus:r2-netty:11.0.0",
    "caller": "|java+method:///com/linkedin/r2/transport/http/client/RAPClientCodec$RAPRequestEncoder/encode(io.netty.channel.ChannelHandlerContext,com.linkedin.r2.message.rest.RestRequest,java.util.List)|",
    "called": "|java+method:///com/linkedin/data/ByteString/asByteBuffer()|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getHeaders()|",
      "|java+constructor:///java/net/URL/URL(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/set(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///io/netty/buffer/Unpooled/wrappedBuffer(java.nio.ByteBuffer)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/set(java.lang.String,java.lang.Iterable)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/net/URL/getAuthority()|",
      "|java+method:///java/net/URI/toString()|",
      "|java+method:///com/linkedin/data/ByteString/asByteBuffer()|",
      "|java+method:///io/netty/handler/codec/http/HttpMethod/valueOf(java.lang.String)|",
      "|java+method:///java/net/URL/getFile()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getURI()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getCookies()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///io/netty/handler/codec/http/DefaultFullHttpRequest/DefaultFullHttpRequest(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpMethod,java.lang.String,io.netty.buffer.ByteBuf)|",
      "|java+method:///com/linkedin/data/ByteString/length()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getMethod()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getEntity()|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/headers()|",
      "|java+method:///java/lang/Integer/valueOf(int)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getHeaders()|",
      "|java+constructor:///java/net/URL/URL(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/set(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///io/netty/buffer/Unpooled/wrappedBuffer(java.nio.ByteBuffer)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/set(java.lang.String,java.lang.Iterable)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/net/URL/getAuthority()|",
      "|java+method:///java/net/URI/toString()|",
      "|java+method:///com/linkedin/data/ByteString/asByteBuffer()|",
      "|java+method:///io/netty/handler/codec/http/HttpMethod/valueOf(java.lang.String)|",
      "|java+method:///java/net/URL/getFile()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getURI()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getCookies()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///io/netty/handler/codec/http/DefaultFullHttpRequest/DefaultFullHttpRequest(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpMethod,java.lang.String,io.netty.buffer.ByteBuf)|",
      "|java+method:///com/linkedin/data/ByteString/length()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getMethod()|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/set(java.lang.CharSequence,java.lang.Object)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getEntity()|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/headers()|",
      "|java+method:///java/lang/Integer/valueOf(int)|"
    ],
    "affectedLib": "com.linkedin.pegasus:data:11.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.pegasus:r2-netty:3.1.2",
    "coordinatesV2": "com.linkedin.pegasus:r2-netty:11.0.0",
    "caller": "|java+method:///com/linkedin/r2/transport/http/server/RAPServerCodec$RAPResponseEncoder/encode(io.netty.channel.ChannelHandlerContext,com.linkedin.r2.message.rest.RestResponse,java.util.List)|",
    "called": "|java+method:///com/linkedin/data/ByteString/asByteBuffer()|",
    "v1Body": [
      "|java+method:///com/linkedin/r2/message/rest/RestResponse/getEntity()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///com/linkedin/data/ByteString/asByteBuffer()|",
      "|java+constructor:///io/netty/handler/codec/http/DefaultFullHttpResponse/DefaultFullHttpResponse(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.buffer.ByteBuf)|",
      "|java+method:///io/netty/handler/codec/http/HttpResponse/headers()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponse/getStatus()|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/set(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///io/netty/buffer/Unpooled/wrappedBuffer(java.nio.ByteBuffer)|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/set(java.lang.String,java.lang.Iterable)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponse/getCookies()|",
      "|java+method:///io/netty/handler/codec/http/HttpResponseStatus/valueOf(int)|",
      "|java+method:///com/linkedin/data/ByteString/length()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponse/getHeaders()|"
    ],
    "v2Body": [
      "|java+method:///com/linkedin/r2/message/rest/RestResponse/getEntity()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///com/linkedin/data/ByteString/asByteBuffer()|",
      "|java+constructor:///io/netty/handler/codec/http/DefaultFullHttpResponse/DefaultFullHttpResponse(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.buffer.ByteBuf)|",
      "|java+method:///io/netty/handler/codec/http/HttpResponse/headers()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponse/getStatus()|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/set(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///io/netty/buffer/Unpooled/wrappedBuffer(java.nio.ByteBuffer)|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/set(java.lang.String,java.lang.Iterable)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponse/getCookies()|",
      "|java+method:///io/netty/handler/codec/http/HttpResponseStatus/valueOf(int)|",
      "|java+method:///com/linkedin/data/ByteString/length()|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/set(java.lang.CharSequence,java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponse/getHeaders()|"
    ],
    "affectedLib": "com.linkedin.pegasus:data:11.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.pegasus:r2-netty:3.1.2",
    "coordinatesV2": "com.linkedin.pegasus:r2-netty:11.0.0",
    "caller": "|java+method:///com/linkedin/r2/transport/http/server/RAPServerCodec$RAPRequestDecoder/decode(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpRequest,java.util.List)|",
    "called": "|java+method:///com/linkedin/data/ByteString/read(java.io.InputStream,int)|",
    "v1Body": [
      "|java+method:///io/netty/handler/codec/DecoderResult/cause()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/getMethod()|",
      "|java+constructor:///io/netty/buffer/ByteBufInputStream/ByteBufInputStream(io.netty.buffer.ByteBuf)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/content()|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/iterator()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/setMethod(java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/setEntity(com.linkedin.data.ByteString)|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/build()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///java/net/URI/URI(java.lang.String)|",
      "|java+method:///com/linkedin/data/ByteString/read(java.io.InputStream,int)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/getDecoderResult()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/unsafeAddHeaderValue(java.lang.String,java.lang.String)|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/fireExceptionCaught(java.lang.Throwable)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/addCookie(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/DecoderResult/isFailure()|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/headers()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///io/netty/handler/codec/http/HttpMethod/name()|",
      "|java+method:///io/netty/buffer/ByteBuf/readableBytes()|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/getUri()|",
      "|java+constructor:///com/linkedin/r2/message/rest/RestRequestBuilder/RestRequestBuilder(java.net.URI)|"
    ],
    "v2Body": [
      "|java+method:///io/netty/handler/codec/DecoderResult/cause()|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/method()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+constructor:///io/netty/buffer/ByteBufInputStream/ByteBufInputStream(io.netty.buffer.ByteBuf)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/content()|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/iterator()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/setMethod(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/decoderResult()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/uri()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/setEntity(com.linkedin.data.ByteString)|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/build()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///java/net/URI/URI(java.lang.String)|",
      "|java+method:///com/linkedin/data/ByteString/read(java.io.InputStream,int)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/unsafeAddHeaderValue(java.lang.String,java.lang.String)|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/fireExceptionCaught(java.lang.Throwable)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/addCookie(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/DecoderResult/isFailure()|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/headers()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///io/netty/handler/codec/http/HttpMethod/name()|",
      "|java+method:///io/netty/buffer/ByteBuf/readableBytes()|",
      "|java+constructor:///com/linkedin/r2/message/rest/RestRequestBuilder/RestRequestBuilder(java.net.URI)|"
    ],
    "affectedLib": "com.linkedin.pegasus:data:11.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.pegasus:r2-netty:3.1.2",
    "coordinatesV2": "com.linkedin.pegasus:r2-netty:11.0.0",
    "caller": "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/getClient(java.util.Map,javax.net.ssl.SSLContext,javax.net.ssl.SSLParameters)|",
    "called": "|java+constructor:///com/linkedin/r2/filter/compression/ClientCompressionFilter/ClientCompressionFilter(com.linkedin.r2.filter.compression.EncodingType,com.linkedin.r2.filter.CompressionConfig,com.linkedin.r2.filter.compression.EncodingType%5B%5D,com.linkedin.r2.filter.CompressionConfig,java.util.List)|",
    "v1Body": [
      "|java+method:///com/linkedin/r2/filter/FilterChain/addLastRest(com.linkedin.r2.filter.message.rest.RestFilter)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/getRequestCompressionConfig(java.lang.String,com.linkedin.r2.filter.compression.EncodingType)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/chooseNewOverDefault(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/linkedin/r2/util/ConfigValueExtractor/buildList(java.lang.Object,java.lang.String)|",
      "|java+method:///java/util/Map/remove(java.lang.Object)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/getRawClient(java.util.Map,javax.net.ssl.SSLContext,javax.net.ssl.SSLParameters)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///com/linkedin/r2/filter/compression/ClientCompressionFilter/ClientCompressionFilter(com.linkedin.r2.filter.compression.EncodingType,com.linkedin.r2.filter.CompressionConfig,com.linkedin.r2.filter.compression.EncodingType%5B%5D,com.linkedin.r2.filter.CompressionConfig,java.util.List)|",
      "|java+constructor:///com/linkedin/r2/filter/transport/FilterChainClient/FilterChainClient(com.linkedin.r2.transport.common.bridge.client.TransportClient,com.linkedin.r2.filter.FilterChain)|",
      "|java+constructor:///com/linkedin/r2/transport/http/client/HttpClientFactory$FactoryClient/HttpClientFactory$FactoryClient(com.linkedin.r2.transport.http.client.HttpClientFactory,com.linkedin.r2.transport.common.bridge.client.TransportClient,com.linkedin.r2.transport.http.client.HttpClientFactory$1)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/getRequestContentEncoding(java.util.List)|",
      "|java+constructor:///com/linkedin/r2/filter/transport/ClientQueryTunnelFilter/ClientQueryTunnelFilter(int)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/buildAcceptEncodingSchemas(java.util.List)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/getIntValue(java.util.Map,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/linkedin/r2/filter/FilterChain/addLastRest(com.linkedin.r2.filter.message.rest.RestFilter)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+constructor:///com/linkedin/r2/filter/compression/ClientStreamCompressionFilter/ClientStreamCompressionFilter(com.linkedin.r2.filter.compression.streaming.StreamEncodingType,com.linkedin.r2.filter.CompressionConfig,com.linkedin.r2.filter.compression.streaming.StreamEncodingType%5B%5D,com.linkedin.r2.filter.CompressionConfig,java.util.List,java.util.concurrent.Executor)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/chooseNewOverDefault(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/linkedin/r2/util/ConfigValueExtractor/buildList(java.lang.Object,java.lang.String)|",
      "|java+constructor:///com/linkedin/r2/disruptor/DisruptFilter/DisruptFilter(java.util.concurrent.ScheduledExecutorService,java.util.concurrent.ExecutorService,int)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/getRawClient(java.util.Map,javax.net.ssl.SSLContext,javax.net.ssl.SSLParameters)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///com/linkedin/r2/filter/compression/ClientCompressionFilter/ClientCompressionFilter(com.linkedin.r2.filter.compression.EncodingType,com.linkedin.r2.filter.CompressionConfig,com.linkedin.r2.filter.compression.EncodingType%5B%5D,com.linkedin.r2.filter.CompressionConfig,java.util.List)|",
      "|java+constructor:///com/linkedin/r2/filter/transport/FilterChainClient/FilterChainClient(com.linkedin.r2.transport.common.bridge.client.TransportClient,com.linkedin.r2.filter.FilterChain)|",
      "|java+constructor:///com/linkedin/r2/transport/http/client/HttpClientFactory$FactoryClient/HttpClientFactory$FactoryClient(com.linkedin.r2.transport.http.client.HttpClientFactory,com.linkedin.r2.transport.common.bridge.client.TransportClient,com.linkedin.r2.transport.http.client.HttpClientFactory$1)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/getStreamRequestContentEncoding(java.util.List)|",
      "|java+constructor:///com/linkedin/r2/filter/transport/ClientQueryTunnelFilter/ClientQueryTunnelFilter(int)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///com/linkedin/r2/filter/FilterChain/addLast(com.linkedin.r2.filter.message.stream.StreamFilter)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/buildStreamAcceptEncodingSchemas(java.util.List)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/buildRestAcceptEncodingSchemaNames(java.util.List)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/getIntValue(java.util.Map,java.lang.String)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/getRestRequestContentEncoding(java.util.List)|",
      "|java+method:///java/util/Map/remove(java.lang.Object)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/getStreamRequestCompressionConfig(java.lang.String,com.linkedin.r2.filter.compression.streaming.StreamEncodingType)|",
      "|java+method:///com/linkedin/r2/transport/http/client/HttpClientFactory/getRestRequestCompressionConfig(java.lang.String,com.linkedin.r2.filter.compression.EncodingType)|"
    ],
    "affectedLib": "com.linkedin.pegasus:r2-filter-compression:11.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.pegasus:r2-netty:3.1.2",
    "coordinatesV2": "com.linkedin.pegasus:r2-netty:11.0.0",
    "caller": "|java+method:///com/linkedin/r2/transport/http/server/HttpNettyServer$1/initChannel(io.netty.channel.socket.nio.NioSocketChannel)|",
    "called": "|java+constructor:///io/netty/handler/codec/http/HttpResponseEncoder/HttpResponseEncoder()|",
    "v1Body": [
      "|java+constructor:///com/linkedin/r2/transport/http/server/HttpNettyServer$Handler/HttpNettyServer$Handler(com.linkedin.r2.transport.http.server.HttpNettyServer,com.linkedin.r2.transport.http.server.HttpNettyServer$1)|",
      "|java+constructor:///io/netty/handler/codec/http/HttpResponseEncoder/HttpResponseEncoder()|",
      "|java+constructor:///com/linkedin/r2/transport/http/server/RAPServerCodec/RAPServerCodec()|",
      "|java+method:///io/netty/channel/socket/nio/NioSocketChannel/pipeline()|",
      "|java+constructor:///io/netty/handler/codec/http/HttpRequestDecoder/HttpRequestDecoder()|",
      "|java+method:///io/netty/channel/ChannelPipeline/addLast(java.lang.String,io.netty.channel.ChannelHandler)|",
      "|java+constructor:///io/netty/handler/codec/http/HttpObjectAggregator/HttpObjectAggregator(int)|",
      "|java+method:///io/netty/channel/ChannelPipeline/addLast(io.netty.util.concurrent.EventExecutorGroup,java.lang.String,io.netty.channel.ChannelHandler)|",
      "|java+method:///com/linkedin/r2/transport/http/server/HttpNettyServer/access$000(com.linkedin.r2.transport.http.server.HttpNettyServer)|"
    ],
    "v2Body": [
      "|java+constructor:///com/linkedin/r2/transport/http/server/HttpNettyServer$StreamHandler/HttpNettyServer$StreamHandler(com.linkedin.r2.transport.http.server.HttpNettyServer,com.linkedin.r2.transport.http.server.HttpNettyServer$1)|",
      "|java+constructor:///io/netty/handler/codec/http/HttpResponseEncoder/HttpResponseEncoder()|",
      "|java+constructor:///com/linkedin/r2/transport/http/server/HttpNettyServer$RestHandler/HttpNettyServer$RestHandler(com.linkedin.r2.transport.http.server.HttpNettyServer,com.linkedin.r2.transport.http.server.HttpNettyServer$1)|",
      "|java+method:///com/linkedin/r2/transport/http/server/HttpNettyServer/access$100(com.linkedin.r2.transport.http.server.HttpNettyServer)|",
      "|java+constructor:///com/linkedin/r2/transport/http/server/RAPServerCodec/RAPServerCodec()|",
      "|java+method:///io/netty/channel/socket/nio/NioSocketChannel/pipeline()|",
      "|java+constructor:///io/netty/handler/codec/http/HttpRequestDecoder/HttpRequestDecoder()|",
      "|java+method:///io/netty/channel/ChannelPipeline/addLast(java.lang.String,io.netty.channel.ChannelHandler)|",
      "|java+constructor:///io/netty/handler/codec/http/HttpObjectAggregator/HttpObjectAggregator(int)|",
      "|java+method:///io/netty/channel/ChannelPipeline/addLast(io.netty.util.concurrent.EventExecutorGroup,java.lang.String,io.netty.channel.ChannelHandler)|",
      "|java+method:///com/linkedin/r2/transport/http/server/HttpNettyServer/access$000(com.linkedin.r2.transport.http.server.HttpNettyServer)|"
    ],
    "affectedLib": "io.netty:netty-all:4.1.4.Final",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.pegasus:r2-netty:3.1.2",
    "coordinatesV2": "com.linkedin.pegasus:r2-netty:11.0.0",
    "caller": "|java+method:///com/linkedin/r2/transport/http/server/RAPServerCodec$RAPResponseEncoder/encode(io.netty.channel.ChannelHandlerContext,com.linkedin.r2.message.rest.RestResponse,java.util.List)|",
    "called": "|java+method:///io/netty/handler/codec/http/HttpResponseStatus/valueOf(int)|",
    "v1Body": [
      "|java+method:///com/linkedin/r2/message/rest/RestResponse/getEntity()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///com/linkedin/data/ByteString/asByteBuffer()|",
      "|java+constructor:///io/netty/handler/codec/http/DefaultFullHttpResponse/DefaultFullHttpResponse(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.buffer.ByteBuf)|",
      "|java+method:///io/netty/handler/codec/http/HttpResponse/headers()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponse/getStatus()|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/set(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///io/netty/buffer/Unpooled/wrappedBuffer(java.nio.ByteBuffer)|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/set(java.lang.String,java.lang.Iterable)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponse/getCookies()|",
      "|java+method:///io/netty/handler/codec/http/HttpResponseStatus/valueOf(int)|",
      "|java+method:///com/linkedin/data/ByteString/length()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponse/getHeaders()|"
    ],
    "v2Body": [
      "|java+method:///com/linkedin/r2/message/rest/RestResponse/getEntity()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///com/linkedin/data/ByteString/asByteBuffer()|",
      "|java+constructor:///io/netty/handler/codec/http/DefaultFullHttpResponse/DefaultFullHttpResponse(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.buffer.ByteBuf)|",
      "|java+method:///io/netty/handler/codec/http/HttpResponse/headers()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponse/getStatus()|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/set(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///io/netty/buffer/Unpooled/wrappedBuffer(java.nio.ByteBuffer)|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/set(java.lang.String,java.lang.Iterable)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponse/getCookies()|",
      "|java+method:///io/netty/handler/codec/http/HttpResponseStatus/valueOf(int)|",
      "|java+method:///com/linkedin/data/ByteString/length()|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/set(java.lang.CharSequence,java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponse/getHeaders()|"
    ],
    "affectedLib": "io.netty:netty-all:4.1.4.Final",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.pegasus:r2-netty:3.1.2",
    "coordinatesV2": "com.linkedin.pegasus:r2-netty:11.0.0",
    "caller": "|java+method:///com/linkedin/r2/transport/http/client/RAPClientCodec$RAPRequestEncoder/encode(io.netty.channel.ChannelHandlerContext,com.linkedin.r2.message.rest.RestRequest,java.util.List)|",
    "called": "|java+method:///io/netty/handler/codec/http/HttpMethod/valueOf(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getHeaders()|",
      "|java+constructor:///java/net/URL/URL(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/set(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///io/netty/buffer/Unpooled/wrappedBuffer(java.nio.ByteBuffer)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/set(java.lang.String,java.lang.Iterable)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/net/URL/getAuthority()|",
      "|java+method:///java/net/URI/toString()|",
      "|java+method:///com/linkedin/data/ByteString/asByteBuffer()|",
      "|java+method:///io/netty/handler/codec/http/HttpMethod/valueOf(java.lang.String)|",
      "|java+method:///java/net/URL/getFile()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getURI()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getCookies()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///io/netty/handler/codec/http/DefaultFullHttpRequest/DefaultFullHttpRequest(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpMethod,java.lang.String,io.netty.buffer.ByteBuf)|",
      "|java+method:///com/linkedin/data/ByteString/length()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getMethod()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getEntity()|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/headers()|",
      "|java+method:///java/lang/Integer/valueOf(int)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getHeaders()|",
      "|java+constructor:///java/net/URL/URL(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/set(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///io/netty/buffer/Unpooled/wrappedBuffer(java.nio.ByteBuffer)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/set(java.lang.String,java.lang.Iterable)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/net/URL/getAuthority()|",
      "|java+method:///java/net/URI/toString()|",
      "|java+method:///com/linkedin/data/ByteString/asByteBuffer()|",
      "|java+method:///io/netty/handler/codec/http/HttpMethod/valueOf(java.lang.String)|",
      "|java+method:///java/net/URL/getFile()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getURI()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getCookies()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///io/netty/handler/codec/http/DefaultFullHttpRequest/DefaultFullHttpRequest(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpMethod,java.lang.String,io.netty.buffer.ByteBuf)|",
      "|java+method:///com/linkedin/data/ByteString/length()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getMethod()|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/set(java.lang.CharSequence,java.lang.Object)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getEntity()|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/headers()|",
      "|java+method:///java/lang/Integer/valueOf(int)|"
    ],
    "affectedLib": "io.netty:netty-all:4.1.4.Final",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.pegasus:r2-netty:3.1.2",
    "coordinatesV2": "com.linkedin.pegasus:r2-netty:11.0.0",
    "caller": "|java+method:///com/linkedin/r2/transport/http/server/RAPServerCodec$RAPRequestDecoder/decode(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpRequest,java.util.List)|",
    "called": "|java+method:///io/netty/handler/codec/http/HttpMethod/name()|",
    "v1Body": [
      "|java+method:///io/netty/handler/codec/DecoderResult/cause()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/getMethod()|",
      "|java+constructor:///io/netty/buffer/ByteBufInputStream/ByteBufInputStream(io.netty.buffer.ByteBuf)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/content()|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/iterator()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/setMethod(java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/setEntity(com.linkedin.data.ByteString)|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/build()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///java/net/URI/URI(java.lang.String)|",
      "|java+method:///com/linkedin/data/ByteString/read(java.io.InputStream,int)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/getDecoderResult()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/unsafeAddHeaderValue(java.lang.String,java.lang.String)|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/fireExceptionCaught(java.lang.Throwable)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/addCookie(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/DecoderResult/isFailure()|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/headers()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///io/netty/handler/codec/http/HttpMethod/name()|",
      "|java+method:///io/netty/buffer/ByteBuf/readableBytes()|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/getUri()|",
      "|java+constructor:///com/linkedin/r2/message/rest/RestRequestBuilder/RestRequestBuilder(java.net.URI)|"
    ],
    "v2Body": [
      "|java+method:///io/netty/handler/codec/DecoderResult/cause()|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/method()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+constructor:///io/netty/buffer/ByteBufInputStream/ByteBufInputStream(io.netty.buffer.ByteBuf)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/content()|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/iterator()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/setMethod(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/decoderResult()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/uri()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/setEntity(com.linkedin.data.ByteString)|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/build()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///java/net/URI/URI(java.lang.String)|",
      "|java+method:///com/linkedin/data/ByteString/read(java.io.InputStream,int)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/unsafeAddHeaderValue(java.lang.String,java.lang.String)|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/fireExceptionCaught(java.lang.Throwable)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/addCookie(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/DecoderResult/isFailure()|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/headers()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///io/netty/handler/codec/http/HttpMethod/name()|",
      "|java+method:///io/netty/buffer/ByteBuf/readableBytes()|",
      "|java+constructor:///com/linkedin/r2/message/rest/RestRequestBuilder/RestRequestBuilder(java.net.URI)|"
    ],
    "affectedLib": "io.netty:netty-all:4.1.4.Final",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.pegasus:r2-netty:3.1.2",
    "coordinatesV2": "com.linkedin.pegasus:r2-netty:11.0.0",
    "caller": "|java+method:///com/linkedin/r2/transport/http/client/RAPClientCodec$RAPResponseDecoder/decode(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpResponse,java.util.List)|",
    "called": "|java+method:///io/netty/handler/codec/DecoderResult/cause()|",
    "v1Body": [
      "|java+method:///io/netty/handler/codec/DecoderResult/cause()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/unsafeAddHeaderValue(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///io/netty/handler/codec/http/FullHttpResponse/getDecoderResult()|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/iterator()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/fireExceptionCaught(java.lang.Throwable)|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/setEntity(com.linkedin.data.ByteString)|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/setStatus(int)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpResponse/headers()|",
      "|java+method:///io/netty/handler/codec/http/FullHttpResponse/getStatus()|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/addCookie(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/HttpResponseStatus/code()|",
      "|java+constructor:///io/netty/buffer/ByteBufInputStream/ByteBufInputStream(io.netty.buffer.ByteBuf)|",
      "|java+method:///com/linkedin/data/ByteString/read(java.io.InputStream,int)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpResponse/content()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///com/linkedin/r2/message/rest/RestResponseBuilder/RestResponseBuilder()|",
      "|java+method:///io/netty/handler/codec/DecoderResult/isFailure()|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/build()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///io/netty/buffer/ByteBuf/readableBytes()|"
    ],
    "v2Body": [
      "|java+method:///io/netty/handler/codec/DecoderResult/cause()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/unsafeAddHeaderValue(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/iterator()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/netty/handler/codec/http/FullHttpResponse/status()|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/fireExceptionCaught(java.lang.Throwable)|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/setEntity(com.linkedin.data.ByteString)|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/setStatus(int)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpResponse/headers()|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/addCookie(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/HttpResponseStatus/code()|",
      "|java+constructor:///io/netty/buffer/ByteBufInputStream/ByteBufInputStream(io.netty.buffer.ByteBuf)|",
      "|java+method:///com/linkedin/data/ByteString/read(java.io.InputStream,int)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpResponse/content()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///com/linkedin/r2/message/rest/RestResponseBuilder/RestResponseBuilder()|",
      "|java+method:///io/netty/handler/codec/http/FullHttpResponse/decoderResult()|",
      "|java+method:///io/netty/handler/codec/DecoderResult/isFailure()|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/build()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///io/netty/buffer/ByteBuf/readableBytes()|"
    ],
    "affectedLib": "io.netty:netty-all:4.1.4.Final",
    "change": "UPDATED"
  }
]