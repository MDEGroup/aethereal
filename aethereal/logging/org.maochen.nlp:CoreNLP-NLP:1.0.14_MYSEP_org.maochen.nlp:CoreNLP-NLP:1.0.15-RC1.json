[
  {
    "coordinatesV1": "org.maochen.nlp:CoreNLP-NLP:1.0.14",
    "coordinatesV2": "org.maochen.nlp:CoreNLP-NLP:1.0.15-RC1",
    "caller": "|java+method:///org/maochen/nlp/app/chunker/ChunkerFeatureExtractor/extractFeat(org.maochen.nlp.ml.SequenceTuple)|",
    "called": "|java+constructor:///org/maochen/nlp/ml/vector/LabeledVector/LabeledVector(java.lang.String%5B%5D)|",
    "v1Body": [
      "|java+method:///java/util/stream/Stream/map(java.util.function.Function)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/stream/Stream/toArray(java.util.function.IntFunction)|",
      "|java+method:///java/util/stream/IntStream/range(int,int)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/stream/IntStream/mapToObj(java.util.function.IntFunction)|",
      "|java+method:///java/util/Set/stream()|",
      "|java+method:///java/util/stream/Stream/collect(java.util.stream.Collector)|",
      "|java+method:///java/util/stream/Collectors/toList()|",
      "|java+method:///java/util/List/stream()|",
      "|java+constructor:///org/maochen/nlp/ml/Tuple/Tuple(org.maochen.nlp.ml.vector.IVector)|",
      "|java+constructor:///org/maochen/nlp/ml/vector/LabeledVector/LabeledVector(java.lang.String%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///java/util/stream/Stream/map(java.util.function.Function)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/stream/Stream/collect(java.util.stream.Collector)|",
      "|java+method:///java/util/stream/Stream/toArray(java.util.function.IntFunction)|",
      "|java+method:///java/util/stream/IntStream/range(int,int)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/stream/IntStream/mapToObj(java.util.function.IntFunction)|",
      "|java+method:///java/util/stream/Collectors/toList()|",
      "|java+method:///java/util/List/stream()|",
      "|java+constructor:///org/maochen/nlp/ml/Tuple/Tuple(org.maochen.nlp.ml.vector.IVector)|",
      "|java+constructor:///org/maochen/nlp/ml/vector/LabeledVector/LabeledVector(java.lang.String%5B%5D)|"
    ],
    "affectedLib": "org.maochen.nlp:CoreNLP-DataStructure:1.0.15",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.maochen.nlp:CoreNLP-NLP:1.0.14",
    "coordinatesV2": "org.maochen.nlp:CoreNLP-NLP:1.0.15-RC1",
    "caller": "|java+method:///org/maochen/nlp/parser/stanford/nn/StanfordNNDepParser/parse(java.lang.String)|",
    "called": "|java+method:///org/maochen/nlp/parser/DTree/setOriginalSentence(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/maochen/nlp/parser/stanford/nn/StanfordNNDepParser/tagLemma(java.util.List)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///edu/stanford/nlp/trees/GrammaticalStructure/typedDependencies()|",
      "|java+method:///org/maochen/nlp/parser/stanford/nn/StanfordNNDepParser/tagDependencies(java.util.List)|",
      "|java+method:///org/maochen/nlp/parser/StanfordParserUtils/getDTreeFromCoreNLP(java.util.Collection,java.util.List)|",
      "|java+method:///org/maochen/nlp/parser/stanford/nn/StanfordNNDepParser/tagPOS(java.util.List)|",
      "|java+method:///org/maochen/nlp/parser/stanford/nn/StanfordNNDepParser/stanfordTokenize(java.lang.String)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/maochen/nlp/parser/stanford/nn/StanfordNNDepParser/tagNamedEntity(java.util.List)|",
      "|java+method:///org/maochen/nlp/parser/DTree/setOriginalSentence(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/maochen/nlp/parser/stanford/nn/StanfordNNDepParser/tagLemma(java.util.List)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///edu/stanford/nlp/trees/GrammaticalStructure/typedDependencies()|",
      "|java+method:///org/maochen/nlp/parser/stanford/nn/StanfordNNDepParser/tagDependencies(java.util.List)|",
      "|java+method:///org/maochen/nlp/parser/stanford/nn/StanfordNNDepParser/tagPOS(java.util.List)|",
      "|java+method:///org/maochen/nlp/parser/stanford/nn/StanfordNNDepParser/stanfordTokenize(java.lang.String)|",
      "|java+method:///org/maochen/nlp/parser/stanford/util/StanfordParserUtils/getDTreeFromCoreNLP(java.util.Collection,java.util.List)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/maochen/nlp/parser/stanford/nn/StanfordNNDepParser/tagNamedEntity(java.util.List)|",
      "|java+method:///org/maochen/nlp/parser/DTree/setOriginalSentence(java.lang.String)|"
    ],
    "affectedLib": "org.maochen.nlp:CoreNLP-DataStructure:1.0.15",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.maochen.nlp:CoreNLP-NLP:1.0.14",
    "coordinatesV2": "org.maochen.nlp:CoreNLP-NLP:1.0.15-RC1",
    "caller": "|java+method:///org/maochen/nlp/app/relationextract/QuestionRelationExtractor/extractNonPolar(org.maochen.nlp.parser.DTree,java.lang.String)|",
    "called": "|java+method:///org/maochen/nlp/commons/BinRelation/setRight(org.maochen.nlp.commons.Entity)|",
    "v1Body": [
      "|java+method:///org/maochen/nlp/commons/BinRelation/setRight(org.maochen.nlp.commons.Entity)|",
      "|java+method:///org/maochen/nlp/app/relationextract/QuestionRelationExtractor/extractRemaining(org.maochen.nlp.parser.DNode,org.maochen.nlp.parser.DNode,org.maochen.nlp.parser.DTree)|",
      "|java+method:///org/maochen/nlp/parser/DNode/getForm()|",
      "|java+method:///org/maochen/nlp/parser/DTree/stream()|",
      "|java+method:///org/maochen/nlp/commons/BinRelation/setRel(java.lang.String)|",
      "|java+method:///org/maochen/nlp/commons/BinRelation/setLeft(org.maochen.nlp.commons.Entity)|",
      "|java+method:///java/util/stream/Stream/filter(java.util.function.Predicate)|",
      "|java+method:///java/util/stream/Stream/findFirst()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///org/maochen/nlp/parser/DNode/getLemma()|",
      "|java+method:///org/maochen/nlp/app/relationextract/QuestionRelationExtractor/getWildcardEntity(org.maochen.nlp.parser.DNode,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/maochen/nlp/parser/DNode/getHead()|",
      "|java+method:///org/maochen/nlp/parser/DNode/getPOS()|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+constructor:///org/maochen/nlp/commons/BinRelation/BinRelation()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/maochen/nlp/app/relationextract/RelType/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Optional/orElse(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/maochen/nlp/commons/BinRelation/setRight(org.maochen.nlp.commons.Entity)|",
      "|java+method:///org/maochen/nlp/app/relationextract/QuestionRelationExtractor/extractRemaining(org.maochen.nlp.parser.DNode,org.maochen.nlp.parser.DNode,org.maochen.nlp.parser.DTree)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/maochen/nlp/parser/DTree/stream()|",
      "|java+method:///org/maochen/nlp/commons/BinRelation/setRel(java.lang.String)|",
      "|java+method:///org/maochen/nlp/commons/BinRelation/setLeft(org.maochen.nlp.commons.Entity)|",
      "|java+method:///java/util/stream/Stream/filter(java.util.function.Predicate)|",
      "|java+method:///java/util/stream/Stream/findFirst()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///org/maochen/nlp/parser/DNode/getLemma()|",
      "|java+method:///org/maochen/nlp/app/relationextract/QuestionRelationExtractor/getWildcardEntity(org.maochen.nlp.parser.DNode,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/maochen/nlp/parser/DNode/getHead()|",
      "|java+method:///org/maochen/nlp/parser/DNode/getPOS()|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+constructor:///org/maochen/nlp/commons/BinRelation/BinRelation()|",
      "|java+method:///org/maochen/nlp/parser/DNode/getForm()|",
      "|java+method:///org/maochen/nlp/app/relationextract/constant/RelType/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Optional/orElse(java.lang.Object)|"
    ],
    "affectedLib": "org.maochen.nlp:CoreNLP-DataStructure:1.0.15",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.maochen.nlp:CoreNLP-NLP:1.0.14",
    "coordinatesV2": "org.maochen.nlp:CoreNLP-NLP:1.0.15-RC1",
    "caller": "|java+method:///org/maochen/nlp/app/sentencetype/SentenceTypeTagger/predict(java.lang.String)|",
    "called": "|java+constructor:///org/maochen/nlp/ml/vector/LabeledVector/LabeledVector(double%5B%5D)|",
    "v1Body": [
      "|java+method:///org/maochen/nlp/app/sentencetype/SentenceTypeTagger/predict(org.maochen.nlp.parser.DTree)|",
      "|java+method:///org/maochen/nlp/parser/IParser/parse(java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///org/maochen/nlp/ml/vector/LabeledVector/LabeledVector(double%5B%5D)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///org/maochen/nlp/ml/classifier/maxent/MaxEntClassifier/predict(org.maochen.nlp.ml.Tuple)|",
      "|java+method:///java/lang/String/replaceAll(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/stream/Stream/mapToDouble(java.util.function.ToDoubleFunction)|",
      "|java+method:///java/util/stream/Stream/toArray(java.util.function.IntFunction)|",
      "|java+method:///java/util/stream/DoubleStream/toArray()|",
      "|java+method:///java/util/List/stream()|",
      "|java+constructor:///org/maochen/nlp/ml/Tuple/Tuple(org.maochen.nlp.ml.vector.IVector)|",
      "|java+method:///org/maochen/nlp/app/sentencetype/SentenceTypeFeatureExtractor/generateFeats(java.lang.String%5B%5D)|"
    ],
    "affectedLib": "org.maochen.nlp:CoreNLP-DataStructure:1.0.15",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.maochen.nlp:CoreNLP-NLP:1.0.14",
    "coordinatesV2": "org.maochen.nlp:CoreNLP-NLP:1.0.15-RC1",
    "caller": "|java+method:///org/maochen/nlp/app/relationextract/QuestionRelationExtractor/getWildcardEntity(org.maochen.nlp.parser.DNode,java.lang.String)|",
    "called": "|java+constructor:///org/maochen/nlp/commons/Entity/Entity(java.lang.Object)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/maochen/nlp/commons/Entity/Entity(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/maochen/nlp/commons/Entity/Entity(java.lang.Object)|",
      "|java+method:///org/maochen/nlp/app/relationextract/constant/EntityType/toString()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|"
    ],
    "affectedLib": "org.maochen.nlp:CoreNLP-DataStructure:1.0.15",
    "change": "UPDATED"
  }
]