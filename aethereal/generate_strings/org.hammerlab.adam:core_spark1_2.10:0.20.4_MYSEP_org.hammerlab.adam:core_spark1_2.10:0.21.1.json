[
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/mateOpt(org.bdgenomics.formats.avro.AlignmentRecord)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getMateAlignmentEnd()|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getMateContigName()|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/apply$default$4()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion$$anonfun$mateOpt$2/ReferenceRegion$$anonfun$mateOpt$2()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|",
      "|java+constructor:///java/lang/Exception/Exception(java.lang.String,java.lang.Throwable)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getMateMapped()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion$$anonfun$mateOpt$1/ReferenceRegion$$anonfun$mateOpt$1(org.bdgenomics.formats.avro.AlignmentRecord)|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(java.lang.String,long,long,org.bdgenomics.formats.avro.Strand)|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToLong(java.lang.Object)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getMateAlignmentStart()|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///scala/Predef$/Boolean2boolean(java.lang.Boolean)|",
      "|java+method:///scala/Option$/apply(java.lang.Object)|",
      "|java+method:///scala/Option/map(scala.Function1)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|"
    ],
    "v2Body": [
      "|java+method:///scala/runtime/BoxesRunTime/unboxToLong(java.lang.Object)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getMateAlignmentEnd()|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getMateContigName()|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/apply$default$4()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion$$anonfun$mateOpt$2/ReferenceRegion$$anonfun$mateOpt$2()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|",
      "|java+constructor:///java/lang/Exception/Exception(java.lang.String,java.lang.Throwable)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getMateMapped()|",
      "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getMateAlignmentStart()|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///scala/Predef$/Boolean2boolean(java.lang.Boolean)|",
      "|java+method:///scala/Option$/apply(java.lang.Object)|",
      "|java+method:///scala/Option/map(scala.Function1)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion$$anonfun$mateOpt$1/ReferenceRegion$$anonfun$mateOpt$1(org.bdgenomics.formats.avro.AlignmentRecord)|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(org.hammerlab.genomics.reference.ContigName,long,long,org.bdgenomics.formats.avro.Strand)|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/toHammerlabRegion(org.bdgenomics.adam.models.ReferenceRegion)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/Region$/apply(org.hammerlab.genomics.reference.ContigName,org.hammerlab.genomics.reference.package$Locus,org.hammerlab.genomics.reference.package$Locus)|",
    "v1Body": [
      "|java+constructor:///org/hammerlab/genomics/reference/package$Locus/package$Locus(long)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion/end()|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion/start()|",
      "|java+method:///org/hammerlab/genomics/reference/package$ContigName$/makeContigName(java.lang.String)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion/referenceName()|",
      "|java+method:///org/hammerlab/genomics/reference/Region$/apply(org.hammerlab.genomics.reference.package$ContigName,org.hammerlab.genomics.reference.package$Locus,org.hammerlab.genomics.reference.package$Locus)|"
    ],
    "v2Body": [
      "|java+constructor:///org/hammerlab/genomics/reference/package$Locus/package$Locus(long)|",
      "|java+method:///org/hammerlab/genomics/reference/Region$/apply(org.hammerlab.genomics.reference.ContigName,org.hammerlab.genomics.reference.package$Locus,org.hammerlab.genomics.reference.package$Locus)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion/referenceName()|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion/end()|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion/start()|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$loadIndexedBam$4/apply(org.bdgenomics.adam.models.ReferenceRegion)|",
    "called": "|java+constructor:///org/hammerlab/genomics/reference/package$Locus/package$Locus(long)|",
    "v1Body": [
      "|java+constructor:///org/hammerlab/genomics/reference/package$Locus/package$Locus(long)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion/referenceName()|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion/end()|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion/start()|",
      "|java+method:///org/hammerlab/genomics/reference/package$ContigName$/makeContigName(java.lang.String)|",
      "|java+method:///org/hammerlab/genomics/loci/parsing/LociRange$/apply(org.hammerlab.genomics.reference.package$ContigName,org.hammerlab.genomics.reference.package$Locus,org.hammerlab.genomics.reference.package$Locus)|"
    ],
    "v2Body": [
      "|java+constructor:///org/hammerlab/genomics/reference/package$Locus/package$Locus(long)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion/referenceName()|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion/end()|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion/start()|",
      "|java+method:///org/hammerlab/genomics/loci/parsing/LociRange$/apply(org.hammerlab.genomics.reference.ContigName,org.hammerlab.genomics.reference.package$Locus,org.hammerlab.genomics.reference.package$Locus)|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner$/unapply(org.bdgenomics.adam.rdd.GenomicRegionPartitioner)|",
    "called": "|java+constructor:///org/hammerlab/genomics/reference/package$ContigLengths/package$ContigLengths(scala.collection.immutable.Map)|",
    "v1Body": [
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner/start()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner/partitionSize()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner/seqLengths()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToBoolean(boolean)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+constructor:///scala/Tuple3/Tuple3(java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner/start()|",
      "|java+constructor:///org/hammerlab/genomics/reference/package$ContigLengths/package$ContigLengths(scala.collection.immutable.Map)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner/partitionSize()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner/seqLengths()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToBoolean(boolean)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+constructor:///scala/Tuple3/Tuple3(java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/all(java.lang.String,org.bdgenomics.formats.avro.Strand)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(java.lang.String,long,long,org.bdgenomics.formats.avro.Strand)|"
    ],
    "v2Body": [
      "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(org.hammerlab.genomics.reference.ContigName,long,long,org.bdgenomics.formats.avro.Strand)|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/unstranded(org.bdgenomics.formats.avro.Feature)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(java.lang.String,long,long,org.bdgenomics.formats.avro.Strand)|",
      "|java+method:///org/bdgenomics/formats/avro/Feature/getContigName()|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///org/bdgenomics/formats/avro/Feature/getEnd()|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/checkFeature(org.bdgenomics.formats.avro.Feature)|",
      "|java+method:///org/bdgenomics/formats/avro/Feature/getStart()|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/$lessinit$greater$default$4()|"
    ],
    "v2Body": [
      "|java+method:///org/bdgenomics/formats/avro/Feature/getContigName()|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///org/bdgenomics/formats/avro/Feature/getEnd()|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/checkFeature(org.bdgenomics.formats.avro.Feature)|",
      "|java+method:///org/bdgenomics/formats/avro/Feature/getStart()|",
      "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/$lessinit$greater$default$4()|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(org.hammerlab.genomics.reference.ContigName,long,long,org.bdgenomics.formats.avro.Strand)|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/models/Coverage$/apply(org.bdgenomics.formats.avro.Feature)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/bdgenomics/formats/avro/Feature/getContigName()|",
      "|java+method:///org/bdgenomics/formats/avro/Feature/getScore()|",
      "|java+method:///org/bdgenomics/formats/avro/Feature/getEnd()|",
      "|java+method:///org/bdgenomics/formats/avro/Feature/getStart()|",
      "|java+method:///scala/Predef$/Double2double(java.lang.Double)|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+constructor:///org/bdgenomics/adam/models/Coverage/Coverage(java.lang.String,long,long,double)|"
    ],
    "v2Body": [
      "|java+method:///org/bdgenomics/formats/avro/Feature/getContigName()|",
      "|java+method:///org/bdgenomics/formats/avro/Feature/getScore()|",
      "|java+constructor:///org/bdgenomics/adam/models/Coverage/Coverage(org.hammerlab.genomics.reference.ContigName,long,long,double)|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///org/bdgenomics/formats/avro/Feature/getEnd()|",
      "|java+method:///org/bdgenomics/formats/avro/Feature/getStart()|",
      "|java+method:///scala/Predef$/Double2double(java.lang.Double)|",
      "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/read/AlignmentRecordRDD$$anonfun$sortReadsByReferencePosition$1$$anonfun$apply$9/apply(org.bdgenomics.formats.avro.AlignmentRecord)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getReadName()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getReadMapped()|",
      "|java+method:///scala/Predef$/Boolean2boolean(java.lang.Boolean)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///org/bdgenomics/adam/models/ReferencePosition$/apply(java.lang.String,long)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///org/bdgenomics/adam/models/ReferencePosition$/apply(org.bdgenomics.formats.avro.AlignmentRecord)|"
    ],
    "v2Body": [
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getReadName()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getReadMapped()|",
      "|java+method:///scala/Predef$/Boolean2boolean(java.lang.Boolean)|",
      "|java+method:///org/bdgenomics/adam/models/ReferencePosition$/apply(org.hammerlab.genomics.reference.ContigName,long)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///org/bdgenomics/adam/models/ReferencePosition$/apply(org.bdgenomics.formats.avro.AlignmentRecord)|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner$/apply(int,org.bdgenomics.adam.models.SequenceDictionary)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/package$Locus$/unwrapLocus(org.hammerlab.genomics.reference.package$Locus)|",
    "v1Body": [
      "|java+method:///scala/runtime/BoxesRunTime/unboxToLong(java.lang.Object)|",
      "|java+method:///scala/collection/Iterable/sum(scala.math.Numeric)|",
      "|java+method:///scala/collection/immutable/Map/values()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner$/apply$default$3()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner$/extractLengthMap(org.bdgenomics.adam.models.SequenceDictionary)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner/GenomicRegionPartitioner(long,scala.collection.immutable.Map,boolean)|"
    ],
    "v2Body": [
      "|java+method:///scala/collection/Iterable/sum(scala.math.Numeric)|",
      "|java+method:///scala/collection/immutable/Map/values()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner$/apply$default$3()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner$/extractLengthMap(org.bdgenomics.adam.models.SequenceDictionary)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner/GenomicRegionPartitioner(long,scala.collection.immutable.Map,boolean)|",
      "|java+method:///org/hammerlab/genomics/reference/package$Locus$/unwrapLocus(org.hammerlab.genomics.reference.package$Locus)|",
      "|java+method:///org/hammerlab/genomics/reference/package$ContigLengths$/unwrapContigLengths(scala.collection.immutable.Map)|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/models/SequenceRecord/toADAMContig()|",
    "called": "|java+method:///org/hammerlab/genomics/reference/package$Locus/num()|",
    "v1Body": [
      "|java+method:///org/bdgenomics/formats/avro/Contig/newBuilder()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/name()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/url()|",
      "|java+method:///org/bdgenomics/formats/avro/Contig$Builder/setContigLength(java.lang.Long)|",
      "|java+method:///org/bdgenomics/formats/avro/Contig$Builder/build()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/species()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/md5()|",
      "|java+method:///org/bdgenomics/formats/avro/Contig$Builder/setContigName(java.lang.String)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/assembly()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/length()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/referenceIndex()|",
      "|java+method:///scala/Option/foreach(scala.Function1)|",
      "|java+constructor:///org/bdgenomics/adam/models/SequenceRecord$$anonfun$toADAMContig$3/SequenceRecord$$anonfun$toADAMContig$3(org.bdgenomics.adam.models.SequenceRecord,org.bdgenomics.formats.avro.Contig$Builder)|",
      "|java+constructor:///org/bdgenomics/adam/models/SequenceRecord$$anonfun$toADAMContig$4/SequenceRecord$$anonfun$toADAMContig$4(org.bdgenomics.adam.models.SequenceRecord,org.bdgenomics.formats.avro.Contig$Builder)|",
      "|java+constructor:///org/bdgenomics/adam/models/SequenceRecord$$anonfun$toADAMContig$5/SequenceRecord$$anonfun$toADAMContig$5(org.bdgenomics.adam.models.SequenceRecord,org.bdgenomics.formats.avro.Contig$Builder)|",
      "|java+constructor:///org/bdgenomics/adam/models/SequenceRecord$$anonfun$toADAMContig$1/SequenceRecord$$anonfun$toADAMContig$1(org.bdgenomics.adam.models.SequenceRecord,org.bdgenomics.formats.avro.Contig$Builder)|",
      "|java+constructor:///org/bdgenomics/adam/models/SequenceRecord$$anonfun$toADAMContig$2/SequenceRecord$$anonfun$toADAMContig$2(org.bdgenomics.adam.models.SequenceRecord,org.bdgenomics.formats.avro.Contig$Builder)|",
      "|java+method:///scala/Predef$/long2Long(long)|"
    ],
    "v2Body": [
      "|java+method:///org/bdgenomics/formats/avro/Contig/newBuilder()|",
      "|java+method:///org/hammerlab/genomics/reference/ContigName/name()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/name()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/url()|",
      "|java+method:///org/bdgenomics/formats/avro/Contig$Builder/setContigLength(java.lang.Long)|",
      "|java+method:///org/bdgenomics/formats/avro/Contig$Builder/build()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/species()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/md5()|",
      "|java+method:///org/bdgenomics/formats/avro/Contig$Builder/setContigName(java.lang.String)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/assembly()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/length()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/referenceIndex()|",
      "|java+method:///scala/Option/foreach(scala.Function1)|",
      "|java+constructor:///org/bdgenomics/adam/models/SequenceRecord$$anonfun$toADAMContig$3/SequenceRecord$$anonfun$toADAMContig$3(org.bdgenomics.adam.models.SequenceRecord,org.bdgenomics.formats.avro.Contig$Builder)|",
      "|java+constructor:///org/bdgenomics/adam/models/SequenceRecord$$anonfun$toADAMContig$4/SequenceRecord$$anonfun$toADAMContig$4(org.bdgenomics.adam.models.SequenceRecord,org.bdgenomics.formats.avro.Contig$Builder)|",
      "|java+constructor:///org/bdgenomics/adam/models/SequenceRecord$$anonfun$toADAMContig$5/SequenceRecord$$anonfun$toADAMContig$5(org.bdgenomics.adam.models.SequenceRecord,org.bdgenomics.formats.avro.Contig$Builder)|",
      "|java+constructor:///org/bdgenomics/adam/models/SequenceRecord$$anonfun$toADAMContig$1/SequenceRecord$$anonfun$toADAMContig$1(org.bdgenomics.adam.models.SequenceRecord,org.bdgenomics.formats.avro.Contig$Builder)|",
      "|java+constructor:///org/bdgenomics/adam/models/SequenceRecord$$anonfun$toADAMContig$2/SequenceRecord$$anonfun$toADAMContig$2(org.bdgenomics.adam.models.SequenceRecord,org.bdgenomics.formats.avro.Contig$Builder)|",
      "|java+method:///scala/Predef$/long2Long(long)|",
      "|java+method:///org/hammerlab/genomics/reference/package$Locus/num()|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/util/TwoBitFile/org$bdgenomics$adam$util$TwoBitFile$$readIndexEntry(int)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/ContigName$/apply(java.lang.String,org.hammerlab.genomics.reference.ContigName$Factory)|",
    "v1Body": [
      "|java+method:///java/nio/ByteBuffer/get(int)|",
      "|java+method:///java/nio/ByteBuffer/getInt(int)|",
      "|java+method:///scala/Predef$/any2ArrowAssoc(java.lang.Object)|",
      "|java+method:///scala/Predef$ArrowAssoc$/$minus$greater$extension(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/lang/String/String(byte%5B%5D,int,int,java.lang.String)|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///org/bdgenomics/adam/util/TwoBitFile/bytes()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///org/bdgenomics/adam/util/TwoBitFile$/NAME_SIZE_SIZE()|"
    ],
    "v2Body": [
      "|java+method:///java/nio/ByteBuffer/get(int)|",
      "|java+method:///java/nio/ByteBuffer/getInt(int)|",
      "|java+method:///scala/Predef$/any2ArrowAssoc(java.lang.Object)|",
      "|java+method:///scala/Predef$ArrowAssoc$/$minus$greater$extension(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/lang/String/String(byte%5B%5D,int,int,java.lang.String)|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///org/bdgenomics/adam/util/TwoBitFile/bytes()|",
      "|java+method:///org/hammerlab/genomics/reference/ContigName$/apply(java.lang.String,org.hammerlab.genomics.reference.ContigName$Factory)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///org/bdgenomics/adam/util/TwoBitFile$/NAME_SIZE_SIZE()|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+constructor:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/GenomicPositionPartitioner(int,scala.collection.immutable.Map)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/package$NumLoci$/apply(int)|",
    "v1Body": [
      "|java+method:///scala/collection/Iterable/toSeq()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///scala/collection/Seq/zip(scala.collection.GenIterable,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/log()|",
      "|java+method:///scala/collection/Seq/scan(java.lang.Object,scala.Function2,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToLong(java.lang.Object)|",
      "|java+method:///scala/Product$class/$init$(scala.Product)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/cumuls()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner$$anonfun$5/GenomicPositionPartitioner$$anonfun$5(org.bdgenomics.adam.rdd.GenomicPositionPartitioner)|",
      "|java+method:///scala/collection/immutable/Map$/apply(scala.collection.Seq)|",
      "|java+method:///org/bdgenomics/utils/misc/Logging$class/$init$(org.bdgenomics.utils.misc.Logging)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/totalLength()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner$$anonfun$6/GenomicPositionPartitioner$$anonfun$6(org.bdgenomics.adam.rdd.GenomicPositionPartitioner)|",
      "|java+method:///scala/Predef$/Map()|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/lengths()|",
      "|java+method:///scala/collection/immutable/Map/keys()|",
      "|java+constructor:///org/apache/spark/Partitioner/Partitioner()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner$$anonfun$1/GenomicPositionPartitioner$$anonfun$1(org.bdgenomics.adam.rdd.GenomicPositionPartitioner)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///scala/collection/immutable/Map/foreach(scala.Function1)|",
      "|java+method:///scala/collection/Seq/sortWith(scala.Function2)|",
      "|java+method:///scala/collection/Seq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///scala/collection/Seq/sum(scala.math.Numeric)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner$$anonfun$4/GenomicPositionPartitioner$$anonfun$4(org.bdgenomics.adam.rdd.GenomicPositionPartitioner)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/names()|",
      "|java+method:///scala/math/package$/min(long,long)|"
    ],
    "v2Body": [
      "|java+method:///scala/Predef$/Map()|",
      "|java+method:///scala/collection/immutable/Vector/sorted(scala.math.Ordering)|",
      "|java+method:///scala/math/Ordering$/ordered(scala.Function1)|",
      "|java+method:///scala/collection/Seq/zip(scala.collection.GenIterable,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///org/hammerlab/genomics/reference/package$NumLoci$/apply(int)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///org/hammerlab/genomics/reference/package$Locus$/unwrapLocus(org.hammerlab.genomics.reference.package$Locus)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner$$anonfun$2/GenomicPositionPartitioner$$anonfun$2(org.bdgenomics.adam.rdd.GenomicPositionPartitioner)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/log()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/cumuls()|",
      "|java+method:///scala/Product$class/$init$(scala.Product)|",
      "|java+method:///scala/collection/immutable/Map$/apply(scala.collection.Seq)|",
      "|java+method:///org/bdgenomics/utils/misc/Logging$class/$init$(org.bdgenomics.utils.misc.Logging)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/totalLength()|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/lengths()|",
      "|java+method:///scala/collection/Iterable/toVector()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///scala/collection/immutable/Map/keys()|",
      "|java+constructor:///org/apache/spark/Partitioner/Partitioner()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/hammerlab/genomics/reference/package$ContigLengths$/unwrapContigLengths(scala.collection.immutable.Map)|",
      "|java+method:///scala/collection/immutable/Map/foreach(scala.Function1)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner$$anonfun$3/GenomicPositionPartitioner$$anonfun$3(org.bdgenomics.adam.rdd.GenomicPositionPartitioner)|",
      "|java+method:///scala/collection/Seq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/Predef$/conforms()|",
      "|java+method:///scala/collection/Seq/scan(java.lang.Object,scala.Function2,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///scala/collection/Seq/sum(scala.math.Numeric)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner$$anonfun$4/GenomicPositionPartitioner$$anonfun$4(org.bdgenomics.adam.rdd.GenomicPositionPartitioner)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/names()|",
      "|java+method:///scala/math/package$/min(long,long)|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/feature/FeatureRDD$/org$bdgenomics$adam$rdd$feature$FeatureRDD$$getSequenceRecord(org.bdgenomics.formats.avro.Feature)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/package$NumLoci$/apply(long)|",
    "v1Body": [
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord$/apply$default$8()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord$/apply(java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,scala.Option)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord$/apply$default$3()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord$/apply$default$4()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord$/apply$default$5()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord$/apply$default$6()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord$/apply$default$7()|",
      "|java+method:///org/bdgenomics/formats/avro/Feature/getContigName()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord$/apply$default$9()|"
    ],
    "v2Body": [
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord$/apply$default$8()|",
      "|java+method:///org/hammerlab/genomics/reference/package$NumLoci$/apply(long)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord$/apply(org.hammerlab.genomics.reference.ContigName,org.hammerlab.genomics.reference.package$Locus,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,scala.Option)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord$/apply$default$3()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord$/apply$default$4()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord$/apply$default$6()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord$/apply$default$7()|",
      "|java+method:///org/bdgenomics/formats/avro/Feature/getContigName()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord$/apply$default$9()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord$/apply$default$5()|",
      "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rich/RichAlignmentRecord/org$bdgenomics$adam$rich$RichAlignmentRecord$$getReferenceContext(int,long,htsjdk.samtools.CigarElement,int)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/bdgenomics/adam/rich/RichAlignmentRecord/getReferenceBase$1(htsjdk.samtools.CigarElement,long,int)|",
      "|java+constructor:///org/bdgenomics/adam/rich/ReferenceSequenceContext/ReferenceSequenceContext(scala.Option,scala.Option,htsjdk.samtools.CigarElement,int)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getReadMapped()|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|",
      "|java+method:///org/bdgenomics/adam/models/ReferencePosition$/apply(java.lang.String,long)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getContigName()|",
      "|java+method:///org/bdgenomics/adam/rich/RichAlignmentRecord/record()|",
      "|java+method:///scala/Predef$/Boolean2boolean(java.lang.Boolean)|"
    ],
    "v2Body": [
      "|java+method:///org/bdgenomics/adam/rich/RichAlignmentRecord/getReferenceBase$1(htsjdk.samtools.CigarElement,long,int)|",
      "|java+constructor:///org/bdgenomics/adam/rich/ReferenceSequenceContext/ReferenceSequenceContext(scala.Option,scala.Option,htsjdk.samtools.CigarElement,int)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getReadMapped()|",
      "|java+method:///org/bdgenomics/adam/models/ReferencePosition$/apply(org.hammerlab.genomics.reference.ContigName,long)|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|",
      "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getContigName()|",
      "|java+method:///org/bdgenomics/adam/rich/RichAlignmentRecord/record()|",
      "|java+method:///scala/Predef$/Boolean2boolean(java.lang.Boolean)|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/GenomeBins/invert(int)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/package$Locus$/unwrapLocus(org.hammerlab.genomics.reference.package$Locus)|",
    "v1Body": [
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomeBins$$anonfun$3/GenomeBins$$anonfun$3(org.bdgenomics.adam.rdd.GenomeBins,int)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomeBins/contig2cumulParts()|",
      "|java+method:///scala/collection/Seq/apply(int)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/apply$default$4()|",
      "|java+method:///scala/collection/Seq/indexWhere(scala.Function1)|",
      "|java+method:///scala/collection/immutable/Map/apply(java.lang.Object)|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToInt(java.lang.Object)|",
      "|java+method:///scala/math/package$/min(long,long)|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(java.lang.String,long,long,org.bdgenomics.formats.avro.Strand)|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToLong(java.lang.Object)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomeBins/seqLengths()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomeBins/cumulParts()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomeBins/names()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomeBins/binSize()|"
    ],
    "v2Body": [
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomeBins$$anonfun$2/GenomeBins$$anonfun$2(org.bdgenomics.adam.rdd.GenomeBins,int)|",
      "|java+method:///scala/collection/Seq/apply(int)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/apply$default$4()|",
      "|java+method:///scala/collection/Seq/indexWhere(scala.Function1)|",
      "|java+method:///scala/collection/immutable/Map/apply(java.lang.Object)|",
      "|java+method:///org/hammerlab/genomics/reference/package$Locus$/unwrapLocus(org.hammerlab.genomics.reference.package$Locus)|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToInt(java.lang.Object)|",
      "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
      "|java+method:///org/hammerlab/genomics/reference/ContigName/name()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomeBins/contig2cumulParts()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomeBins/seqLengths()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomeBins/cumulParts()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomeBins/names()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomeBins/binSize()|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(org.hammerlab.genomics.reference.ContigName,long,long,org.bdgenomics.formats.avro.Strand)|",
      "|java+method:///scala/math/package$/min(long,long)|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/models/SequenceDictionary$$anonfun$contigLengths$1/apply(org.bdgenomics.adam.models.SequenceRecord)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/package$NumLoci$/apply(long)|",
    "v1Body": [
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/length()|",
      "|java+method:///org/hammerlab/genomics/reference/package$NumLoci$/apply(long)|"
    ],
    "v2Body": [
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/length()|",
      "|java+method:///org/hammerlab/genomics/reference/package$NumLoci$/apply(long)|",
      "|java+method:///org/hammerlab/genomics/reference/package$Locus$/unwrapLocus(org.hammerlab.genomics.reference.package$Locus)|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/models/ReferencePosition$/apply(org.bdgenomics.formats.avro.Variant)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/bdgenomics/formats/avro/Variant/getStart()|",
      "|java+method:///org/bdgenomics/formats/avro/Variant/getContigName()|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferencePosition/ReferencePosition(java.lang.String,long,org.bdgenomics.formats.avro.Strand)|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///org/bdgenomics/adam/models/ReferencePosition$/$lessinit$greater$default$3()|"
    ],
    "v2Body": [
      "|java+method:///org/bdgenomics/formats/avro/Variant/getStart()|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferencePosition/ReferencePosition(org.hammerlab.genomics.reference.ContigName,long,org.bdgenomics.formats.avro.Strand)|",
      "|java+method:///org/bdgenomics/formats/avro/Variant/getContigName()|",
      "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///org/bdgenomics/adam/models/ReferencePosition$/$lessinit$greater$default$3()|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/algorithms/consensus/ConsensusGeneratorFromKnowns/findConsensus(scala.collection.Iterable)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(java.lang.String,long,long,org.bdgenomics.formats.avro.Strand)|",
      "|java+method:///org/bdgenomics/adam/algorithms/consensus/ConsensusGeneratorFromKnowns/indelTable()|",
      "|java+method:///org/apache/spark/broadcast/Broadcast/value()|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///org/bdgenomics/adam/models/IndelTable/getIndelsInRegion(org.bdgenomics.adam.models.ReferenceRegion)|",
      "|java+method:///scala/math/Ordering$/ordered(scala.Function1)|",
      "|java+method:///org/bdgenomics/adam/rich/RichAlignmentRecord/record()|",
      "|java+method:///scala/collection/Iterable/head()|",
      "|java+method:///scala/collection/TraversableOnce/min(scala.math.Ordering)|",
      "|java+constructor:///org/bdgenomics/adam/algorithms/consensus/ConsensusGeneratorFromKnowns$$anonfun$1/ConsensusGeneratorFromKnowns$$anonfun$1(org.bdgenomics.adam.algorithms.consensus.ConsensusGeneratorFromKnowns)|",
      "|java+method:///scala/Predef$/conforms()|",
      "|java+method:///scala/collection/Iterable$/canBuildFrom()|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/apply$default$4()|",
      "|java+constructor:///org/bdgenomics/adam/algorithms/consensus/ConsensusGeneratorFromKnowns$$anonfun$2/ConsensusGeneratorFromKnowns$$anonfun$2(org.bdgenomics.adam.algorithms.consensus.ConsensusGeneratorFromKnowns)|",
      "|java+method:///scala/collection/Iterable/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/collection/TraversableOnce/max(scala.math.Ordering)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getContigName()|"
    ],
    "v2Body": [
      "|java+method:///org/bdgenomics/adam/algorithms/consensus/ConsensusGeneratorFromKnowns/indelTable()|",
      "|java+method:///scala/collection/Iterable$/empty()|",
      "|java+method:///org/apache/spark/broadcast/Broadcast/value()|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///scala/math/Ordering$/ordered(scala.Function1)|",
      "|java+method:///org/bdgenomics/adam/rich/RichAlignmentRecord/record()|",
      "|java+method:///scala/collection/Iterable/head()|",
      "|java+method:///scala/collection/TraversableOnce/min(scala.math.Ordering)|",
      "|java+method:///scala/package$/Iterable()|",
      "|java+constructor:///org/bdgenomics/adam/algorithms/consensus/ConsensusGeneratorFromKnowns$$anonfun$1/ConsensusGeneratorFromKnowns$$anonfun$1(org.bdgenomics.adam.algorithms.consensus.ConsensusGeneratorFromKnowns)|",
      "|java+method:///scala/collection/Iterable$/canBuildFrom()|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/apply$default$4()|",
      "|java+method:///org/bdgenomics/adam/models/IndelTable/getIndelsInRegion(org.bdgenomics.adam.models.ReferenceRegion)|",
      "|java+method:///scala/collection/Iterable/isEmpty()|",
      "|java+constructor:///org/bdgenomics/adam/algorithms/consensus/ConsensusGeneratorFromKnowns$$anonfun$2/ConsensusGeneratorFromKnowns$$anonfun$2(org.bdgenomics.adam.algorithms.consensus.ConsensusGeneratorFromKnowns)|",
      "|java+method:///scala/collection/Iterable/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
      "|java+method:///scala/Predef$/conforms()|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(org.hammerlab.genomics.reference.ContigName,long,long,org.bdgenomics.formats.avro.Strand)|",
      "|java+method:///scala/collection/TraversableOnce/max(scala.math.Ordering)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getContigName()|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/models/ReferencePosition$/apply(org.bdgenomics.formats.avro.Genotype)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/bdgenomics/formats/avro/Variant/getStart()|",
      "|java+method:///scala/Predef$/require(boolean,scala.Function0)|",
      "|java+method:///org/bdgenomics/formats/avro/Variant/getContigName()|",
      "|java+method:///scala/collection/Seq$/apply(scala.collection.Seq)|",
      "|java+method:///scala/collection/TraversableOnce/toSet()|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferencePosition/ReferencePosition(java.lang.String,long,org.bdgenomics.formats.avro.Strand)|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferencePosition$$anonfun$apply$3/ReferencePosition$$anonfun$apply$3(org.bdgenomics.formats.avro.Genotype)|",
      "|java+method:///org/bdgenomics/adam/models/ReferencePosition$/$lessinit$greater$default$3()|",
      "|java+method:///org/bdgenomics/formats/avro/Genotype/getContigName()|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferencePosition$$anonfun$apply$1/ReferencePosition$$anonfun$apply$1(org.bdgenomics.formats.avro.Genotype)|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/bdgenomics/formats/avro/Genotype/getStart()|",
      "|java+method:///scala/Option$/apply(java.lang.Object)|",
      "|java+method:///org/bdgenomics/formats/avro/Genotype/getVariant()|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferencePosition$$anonfun$apply$4/ReferencePosition$$anonfun$apply$4(org.bdgenomics.formats.avro.Genotype,scala.collection.immutable.Set)|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferencePosition$$anonfun$apply$2/ReferencePosition$$anonfun$apply$2(org.bdgenomics.formats.avro.Genotype,scala.collection.immutable.Set)|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferencePosition$$anonfun$2/ReferencePosition$$anonfun$2()|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferencePosition$$anonfun$1/ReferencePosition$$anonfun$1()|",
      "|java+method:///scala/collection/immutable/Set/nonEmpty()|",
      "|java+method:///scala/collection/immutable/Set/head()|",
      "|java+method:///scala/collection/immutable/Set/size()|",
      "|java+method:///scala/collection/GenTraversable/flatten(scala.Function1)|"
    ],
    "v2Body": [
      "|java+method:///org/bdgenomics/formats/avro/Variant/getStart()|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferencePosition/ReferencePosition(org.hammerlab.genomics.reference.ContigName,long,org.bdgenomics.formats.avro.Strand)|",
      "|java+method:///scala/Predef$/require(boolean,scala.Function0)|",
      "|java+method:///org/bdgenomics/formats/avro/Variant/getContigName()|",
      "|java+method:///scala/collection/Seq$/apply(scala.collection.Seq)|",
      "|java+method:///scala/collection/TraversableOnce/toSet()|",
      "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferencePosition$$anonfun$apply$3/ReferencePosition$$anonfun$apply$3(org.bdgenomics.formats.avro.Genotype)|",
      "|java+method:///org/bdgenomics/adam/models/ReferencePosition$/$lessinit$greater$default$3()|",
      "|java+method:///org/bdgenomics/formats/avro/Genotype/getContigName()|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferencePosition$$anonfun$apply$1/ReferencePosition$$anonfun$apply$1(org.bdgenomics.formats.avro.Genotype)|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/bdgenomics/formats/avro/Genotype/getStart()|",
      "|java+method:///scala/Option$/apply(java.lang.Object)|",
      "|java+method:///org/bdgenomics/formats/avro/Genotype/getVariant()|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferencePosition$$anonfun$apply$4/ReferencePosition$$anonfun$apply$4(org.bdgenomics.formats.avro.Genotype,scala.collection.immutable.Set)|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferencePosition$$anonfun$apply$2/ReferencePosition$$anonfun$apply$2(org.bdgenomics.formats.avro.Genotype,scala.collection.immutable.Set)|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferencePosition$$anonfun$2/ReferencePosition$$anonfun$2()|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferencePosition$$anonfun$1/ReferencePosition$$anonfun$1()|",
      "|java+method:///scala/collection/immutable/Set/nonEmpty()|",
      "|java+method:///scala/collection/immutable/Set/head()|",
      "|java+method:///scala/collection/immutable/Set/size()|",
      "|java+method:///scala/collection/GenTraversable/flatten(scala.Function1)|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/apply(org.bdgenomics.formats.avro.Variant)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(java.lang.String,long,long,org.bdgenomics.formats.avro.Strand)|",
      "|java+method:///org/bdgenomics/formats/avro/Variant/getStart()|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/apply$default$4()|",
      "|java+method:///org/bdgenomics/formats/avro/Variant/getContigName()|",
      "|java+method:///org/bdgenomics/formats/avro/Variant/getEnd()|"
    ],
    "v2Body": [
      "|java+method:///org/bdgenomics/formats/avro/Variant/getStart()|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/apply$default$4()|",
      "|java+method:///org/bdgenomics/formats/avro/Variant/getContigName()|",
      "|java+method:///org/bdgenomics/formats/avro/Variant/getEnd()|",
      "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(org.hammerlab.genomics.reference.ContigName,long,long,org.bdgenomics.formats.avro.Strand)|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/serialization/ADAMKryoRegistrator/registerClasses(com.esotericsoftware.kryo.Kryo)|",
    "called": "|java+constructor:///org/hammerlab/genomics/reference/Registrar/Registrar()|",
    "v1Body": [
      "|java+method:///com/esotericsoftware/kryo/Kryo/register(java.lang.Class)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/TargetSetSerializer/TargetSetSerializer()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/ZippedTargetSetSerializer/ZippedTargetSetSerializer()|",
      "|java+method:///org/hammerlab/genomics/loci/set/Registrar/registerClasses(com.esotericsoftware.kryo.Kryo)|",
      "|java+constructor:///org/bdgenomics/adam/serialization/AvroSerializer/AvroSerializer(scala.reflect.ClassTag)|",
      "|java+method:///com/esotericsoftware/kryo/Kryo/register(java.lang.Class,com.esotericsoftware.kryo.Serializer)|",
      "|java+method:///scala/collection/immutable/Map$/empty()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/SingleReadBucketSerializer/SingleReadBucketSerializer()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/IndelRealignmentTargetSerializer/IndelRealignmentTargetSerializer()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/ReferencePositionPairSerializer/ReferencePositionPairSerializer()|",
      "|java+constructor:///org/bdgenomics/utils/intervalarray/IntervalArraySerializer/IntervalArraySerializer(com.esotericsoftware.kryo.Kryo,scala.reflect.ClassTag,scala.reflect.ClassTag)|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///scala/Predef$/Map()|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferencePositionSerializer/ReferencePositionSerializer()|",
      "|java+constructor:///org/bdgenomics/adam/util/TwoBitFileSerializer/TwoBitFileSerializer()|",
      "|java+constructor:///org/hammerlab/genomics/loci/set/Registrar/Registrar()|"
    ],
    "v2Body": [
      "|java+method:///com/esotericsoftware/kryo/Kryo/register(java.lang.Class)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/variant/GenotypeArraySerializer/GenotypeArraySerializer()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/ZippedTargetSetSerializer/ZippedTargetSetSerializer()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/feature/FeatureArraySerializer/FeatureArraySerializer()|",
      "|java+method:///org/hammerlab/genomics/reference/Registrar/registerClasses(com.esotericsoftware.kryo.Kryo)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferencePositionSerializer/ReferencePositionSerializer(org.hammerlab.genomics.reference.ContigName$Factory)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/IndelRealignmentTargetSerializer/IndelRealignmentTargetSerializer()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/ReferencePositionPairSerializer/ReferencePositionPairSerializer()|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/variant/VariantArraySerializer/VariantArraySerializer()|",
      "|java+method:///scala/Predef$/Map()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/TargetSetSerializer/TargetSetSerializer()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/variant/VariantContextArraySerializer/VariantContextArraySerializer()|",
      "|java+constructor:///org/bdgenomics/adam/util/TwoBitFileSerializer/TwoBitFileSerializer()|",
      "|java+constructor:///org/hammerlab/genomics/loci/set/Registrar/Registrar()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/feature/CoverageArraySerializer/CoverageArraySerializer(com.esotericsoftware.kryo.Kryo)|",
      "|java+method:///org/hammerlab/genomics/loci/set/Registrar/registerClasses(com.esotericsoftware.kryo.Kryo)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/contig/NucleotideContigFragmentArraySerializer/NucleotideContigFragmentArraySerializer()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/fragment/FragmentArraySerializer/FragmentArraySerializer()|",
      "|java+constructor:///org/bdgenomics/adam/serialization/AvroSerializer/AvroSerializer(scala.reflect.ClassTag)|",
      "|java+method:///com/esotericsoftware/kryo/Kryo/register(java.lang.Class,com.esotericsoftware.kryo.Serializer)|",
      "|java+constructor:///org/bdgenomics/adam/models/VariantContextSerializer/VariantContextSerializer()|",
      "|java+constructor:///org/hammerlab/genomics/reference/Registrar/Registrar()|",
      "|java+method:///scala/collection/immutable/Map$/empty()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/AlignmentRecordArraySerializer/AlignmentRecordArraySerializer()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/SingleReadBucketSerializer/SingleReadBucketSerializer()|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/GenomicRDD$class/pipe(org.bdgenomics.adam.rdd.GenomicRDD,java.lang.String,scala.collection.Seq,scala.collection.immutable.Map,int,org.bdgenomics.adam.rdd.InFormatterCompanion,org.bdgenomics.adam.rdd.OutFormatter,scala.Function2,scala.reflect.ClassTag,scala.reflect.ClassTag)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/package$Locus$/unwrapLocus(org.hammerlab.genomics.reference.package$Locus)|",
    "v1Body": [
      "|java+method:///org/bdgenomics/adam/models/SequenceDictionary/records()|",
      "|java+method:///org/apache/spark/rdd/RDD/flatMap(scala.Function1,scala.reflect.ClassTag)|",
      "|java+method:///scala/math/Ordering$/Tuple2(scala.math.Ordering,scala.math.Ordering)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicRDD$$anonfun$4/GenomicRDD$$anonfun$4(org.bdgenomics.adam.rdd.GenomicRDD,org.bdgenomics.adam.rdd.GenomeBins,int)|",
      "|java+method:///scala/collection/immutable/Vector/size()|",
      "|java+method:///scala/collection/TraversableOnce/toMap(scala.Predef$$less$colon$less)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicRDD$$anonfun$pipe$2/GenomicRDD$$anonfun$pipe$2(org.bdgenomics.adam.rdd.GenomicRDD,org.bdgenomics.adam.rdd.GenomeBins,org.bdgenomics.adam.rdd.GenomicRDD,scala.reflect.ClassTag)|",
      "|java+method:///scala/collection/immutable/Seq$/canBuildFrom()|",
      "|java+method:///org/bdgenomics/adam/rdd/InFormatterCompanion/apply(org.bdgenomics.adam.rdd.GenomicRDD)|",
      "|java+method:///org/apache/spark/rdd/OrderedRDDFunctions/repartitionAndSortWithinPartitions(org.apache.spark.Partitioner)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicRDD$$anonfun$pipe$1/GenomicRDD$$anonfun$pipe$1(org.bdgenomics.adam.rdd.GenomicRDD)|",
      "|java+method:///org/apache/spark/rdd/RDD$/rddToPairRDDFunctions(org.apache.spark.rdd.RDD,scala.reflect.ClassTag,scala.reflect.ClassTag,scala.math.Ordering)|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToLong(java.lang.Object)|",
      "|java+method:///scala/collection/mutable/ArrayOps/size()|",
      "|java+method:///org/apache/spark/rdd/RDD/mapPartitions(scala.Function1,boolean,scala.reflect.ClassTag)|",
      "|java+method:///scala/collection/Iterable/sum(scala.math.Numeric)|",
      "|java+method:///org/apache/spark/rdd/PairRDDFunctions/values()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceDictionary/isEmpty()|",
      "|java+method:///org/apache/spark/rdd/RDD$/rddToOrderedRDDFunctions(org.apache.spark.rdd.RDD,scala.math.Ordering,scala.reflect.ClassTag,scala.reflect.ClassTag)|",
      "|java+method:///scala/collection/immutable/Map/values()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomeBins/numBins()|",
      "|java+method:///org/apache/spark/rdd/RDD/partitions()|",
      "|java+method:///org/apache/spark/rdd/RDD/context()|",
      "|java+method:///org/apache/spark/rdd/RDD/mapPartitions$default$2()|",
      "|java+method:///org/apache/spark/SparkContext/isLocal()|",
      "|java+method:///scala/collection/immutable/Seq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/collection/immutable/Vector/toSeq()|",
      "|java+method:///scala/collection/Seq/foreach(scala.Function1)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRDD/rdd()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRDD/sequences()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRDD/transform(scala.Function1)|",
      "|java+method:///scala/Function2/apply(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicRDD$$anonfun$3/GenomicRDD$$anonfun$3(org.bdgenomics.adam.rdd.GenomicRDD)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomeBins/GenomeBins(long,scala.collection.immutable.Map)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ManualRegionPartitioner/ManualRegionPartitioner(int)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/orderingForPositions()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicRDD$$anonfun$7/GenomicRDD$$anonfun$7(org.bdgenomics.adam.rdd.GenomicRDD,org.bdgenomics.adam.rdd.InFormatter,boolean,java.lang.String,scala.collection.Seq,scala.collection.immutable.Map,org.bdgenomics.adam.rdd.OutFormatter)|",
      "|java+method:///scala/Predef$/conforms()|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceDictionary/records()|",
      "|java+method:///org/apache/spark/rdd/RDD/flatMap(scala.Function1,scala.reflect.ClassTag)|",
      "|java+method:///scala/collection/Seq/foreach(scala.Function1)|",
      "|java+method:///scala/math/Ordering$/Tuple2(scala.math.Ordering,scala.math.Ordering)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicRDD$$anonfun$4/GenomicRDD$$anonfun$4(org.bdgenomics.adam.rdd.GenomicRDD,org.bdgenomics.adam.rdd.GenomeBins,int)|",
      "|java+method:///scala/collection/immutable/Vector/nonEmpty()|",
      "|java+method:///scala/collection/TraversableOnce/toMap(scala.Predef$$less$colon$less)|",
      "|java+method:///org/bdgenomics/adam/rdd/InFormatterCompanion/apply(org.bdgenomics.adam.rdd.GenomicRDD)|",
      "|java+method:///scala/collection/immutable/Vector/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///org/apache/spark/rdd/OrderedRDDFunctions/repartitionAndSortWithinPartitions(org.apache.spark.Partitioner)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicRDD$$anonfun$pipe$1/GenomicRDD$$anonfun$pipe$1(org.bdgenomics.adam.rdd.GenomicRDD)|",
      "|java+method:///org/apache/spark/rdd/RDD$/rddToPairRDDFunctions(org.apache.spark.rdd.RDD,scala.reflect.ClassTag,scala.reflect.ClassTag,scala.math.Ordering)|",
      "|java+method:///org/apache/spark/rdd/RDD/mapPartitions(scala.Function1,boolean,scala.reflect.ClassTag)|",
      "|java+method:///scala/collection/Iterable/sum(scala.math.Numeric)|",
      "|java+method:///org/apache/spark/rdd/PairRDDFunctions/values()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceDictionary/isEmpty()|",
      "|java+method:///org/apache/spark/rdd/RDD$/rddToOrderedRDDFunctions(org.apache.spark.rdd.RDD,scala.math.Ordering,scala.reflect.ClassTag,scala.reflect.ClassTag)|",
      "|java+method:///scala/collection/immutable/Map/values()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomeBins/numBins()|",
      "|java+method:///scala/collection/immutable/Vector$/canBuildFrom()|",
      "|java+method:///org/apache/spark/rdd/RDD/partitions()|",
      "|java+method:///org/apache/spark/rdd/RDD/context()|",
      "|java+method:///org/apache/spark/rdd/RDD/mapPartitions$default$2()|",
      "|java+method:///org/apache/spark/SparkContext/isLocal()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRDD/rdd()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRDD/sequences()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRDD/transform(scala.Function1)|",
      "|java+method:///scala/Function2/apply(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicRDD$$anonfun$3/GenomicRDD$$anonfun$3(org.bdgenomics.adam.rdd.GenomicRDD)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/regionOrdering()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomeBins/GenomeBins(long,scala.collection.immutable.Map)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicRDD$$anonfun$pipe$2/GenomicRDD$$anonfun$pipe$2(org.bdgenomics.adam.rdd.GenomicRDD,org.bdgenomics.adam.rdd.GenomeBins,org.bdgenomics.adam.rdd.GenomicRDD,scala.reflect.ClassTag)|",
      "|java+method:///org/hammerlab/genomics/reference/package$Locus$/unwrapLocus(org.hammerlab.genomics.reference.package$Locus)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ManualRegionPartitioner/ManualRegionPartitioner(int)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicRDD$$anonfun$7/GenomicRDD$$anonfun$7(org.bdgenomics.adam.rdd.GenomicRDD,org.bdgenomics.adam.rdd.InFormatter,boolean,java.lang.String,scala.collection.Seq,scala.collection.immutable.Map,org.bdgenomics.adam.rdd.OutFormatter)|",
      "|java+method:///scala/Predef$/conforms()|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rich/RichAlignmentRecord/fivePrimeReferencePosition()|",
    "called": "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/bdgenomics/adam/models/ReferencePosition$/apply(java.lang.String,long,org.bdgenomics.formats.avro.Strand)|",
      "|java+method:///org/bdgenomics/adam/rich/RichAlignmentRecord/fivePrimePosition()|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getReadNegativeStrand()|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getContigName()|",
      "|java+method:///org/bdgenomics/adam/rich/RichAlignmentRecord/record()|",
      "|java+method:///scala/Predef$/Boolean2boolean(java.lang.Boolean)|"
    ],
    "v2Body": [
      "|java+method:///org/bdgenomics/adam/rich/RichAlignmentRecord/fivePrimePosition()|",
      "|java+method:///org/bdgenomics/adam/models/ReferencePosition$/apply(org.hammerlab.genomics.reference.ContigName,long,org.bdgenomics.formats.avro.Strand)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getReadNegativeStrand()|",
      "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getContigName()|",
      "|java+method:///org/bdgenomics/adam/rich/RichAlignmentRecord/record()|",
      "|java+method:///scala/Predef$/Boolean2boolean(java.lang.Boolean)|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/util/TwoBitFile/extract(org.bdgenomics.adam.models.ReferenceRegion,boolean)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/package$Locus$/unwrapLocus(org.hammerlab.genomics.reference.package$Locus)|",
    "v1Body": [
      "|java+constructor:///org/bdgenomics/adam/util/TwoBitFile$$anonfun$4/TwoBitFile$$anonfun$4(org.bdgenomics.adam.util.TwoBitFile,org.bdgenomics.adam.models.ReferenceRegion,org.bdgenomics.adam.util.TwoBitRecord)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion/referenceName()|",
      "|java+method:///org/bdgenomics/adam/util/TwoBitRecord/maskBlocks()|",
      "|java+method:///scala/Predef$/assert(boolean)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion/end()|",
      "|java+method:///org/bdgenomics/adam/util/TwoBitFile/seqRecords()|",
      "|java+constructor:///org/bdgenomics/adam/util/TwoBitFile$$anonfun$9/TwoBitFile$$anonfun$9(org.bdgenomics.adam.util.TwoBitFile,org.bdgenomics.adam.models.ReferenceRegion)|",
      "|java+method:///org/bdgenomics/adam/util/TwoBitRecord/nBlocks()|",
      "|java+method:///scala/collection/immutable/Range/foreach(scala.Function1)|",
      "|java+method:///scala/collection/mutable/StringBuilder$/newBuilder()|",
      "|java+method:///scala/package$/StringBuilder()|",
      "|java+constructor:///org/bdgenomics/adam/util/TwoBitFile$$anonfun$1/TwoBitFile$$anonfun$1(org.bdgenomics.adam.util.TwoBitFile)|",
      "|java+method:///scala/runtime/RichInt$/until$extension0(int,int)|",
      "|java+constructor:///org/bdgenomics/adam/util/TwoBitFile$$anonfun$extract$1/TwoBitFile$$anonfun$extract$1(org.bdgenomics.adam.util.TwoBitFile,org.bdgenomics.adam.models.ReferenceRegion,boolean,int,scala.collection.mutable.StringBuilder,scala.Function1,scala.Function1)|",
      "|java+method:///scala/Predef$/intWrapper(int)|",
      "|java+method:///org/bdgenomics/adam/util/TwoBitRecord/dnaOffset()|",
      "|java+method:///scala/collection/immutable/Map/getOrElse(java.lang.Object,scala.Function0)|",
      "|java+method:///scala/Option/forall(scala.Function1)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion/start()|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion/width()|",
      "|java+constructor:///org/bdgenomics/adam/util/TwoBitFile$$anonfun$8/TwoBitFile$$anonfun$8(org.bdgenomics.adam.util.TwoBitFile,org.bdgenomics.adam.models.ReferenceRegion)|",
      "|java+constructor:///org/bdgenomics/adam/util/TwoBitFile$$anonfun$3/TwoBitFile$$anonfun$3(org.bdgenomics.adam.util.TwoBitFile)|",
      "|java+method:///org/bdgenomics/adam/util/TwoBitRecord/dnaSize()|",
      "|java+constructor:///org/bdgenomics/adam/util/TwoBitFile$$anonfun$2/TwoBitFile$$anonfun$2(org.bdgenomics.adam.util.TwoBitFile,org.bdgenomics.adam.models.ReferenceRegion,org.bdgenomics.adam.util.TwoBitRecord)|",
      "|java+constructor:///org/bdgenomics/adam/util/TwoBitFile$$anonfun$10/TwoBitFile$$anonfun$10(org.bdgenomics.adam.util.TwoBitFile,org.bdgenomics.adam.models.ReferenceRegion)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+constructor:///org/bdgenomics/adam/util/TwoBitFile$$anonfun$4/TwoBitFile$$anonfun$4(org.bdgenomics.adam.util.TwoBitFile,org.bdgenomics.adam.models.ReferenceRegion,org.bdgenomics.adam.util.TwoBitRecord)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion/referenceName()|",
      "|java+method:///org/bdgenomics/adam/util/TwoBitRecord/maskBlocks()|",
      "|java+method:///scala/Predef$/assert(boolean)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion/end()|",
      "|java+method:///org/bdgenomics/adam/util/TwoBitFile/seqRecords()|",
      "|java+method:///org/bdgenomics/adam/util/TwoBitRecord/nBlocks()|",
      "|java+method:///scala/collection/immutable/Range/foreach(scala.Function1)|",
      "|java+method:///scala/collection/mutable/StringBuilder$/newBuilder()|",
      "|java+method:///scala/package$/StringBuilder()|",
      "|java+constructor:///org/bdgenomics/adam/util/TwoBitFile$$anonfun$1/TwoBitFile$$anonfun$1(org.bdgenomics.adam.util.TwoBitFile)|",
      "|java+method:///scala/runtime/RichInt$/until$extension0(int,int)|",
      "|java+constructor:///org/bdgenomics/adam/util/TwoBitFile$$anonfun$extract$1/TwoBitFile$$anonfun$extract$1(org.bdgenomics.adam.util.TwoBitFile,org.bdgenomics.adam.models.ReferenceRegion,boolean,int,scala.collection.mutable.StringBuilder,scala.Function1,scala.Function1)|",
      "|java+method:///scala/Predef$/intWrapper(int)|",
      "|java+method:///org/bdgenomics/adam/util/TwoBitRecord/dnaOffset()|",
      "|java+method:///scala/collection/immutable/Map/getOrElse(java.lang.Object,scala.Function0)|",
      "|java+method:///scala/Option/forall(scala.Function1)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion/start()|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion/width()|",
      "|java+constructor:///org/bdgenomics/adam/util/TwoBitFile$$anonfun$8/TwoBitFile$$anonfun$8(org.bdgenomics.adam.util.TwoBitFile,org.bdgenomics.adam.models.ReferenceRegion)|",
      "|java+constructor:///org/bdgenomics/adam/util/TwoBitFile$$anonfun$9/TwoBitFile$$anonfun$9(org.bdgenomics.adam.util.TwoBitFile,org.bdgenomics.adam.models.ReferenceRegion)|",
      "|java+method:///org/hammerlab/genomics/reference/package$Locus$/unwrapLocus(org.hammerlab.genomics.reference.package$Locus)|",
      "|java+constructor:///org/bdgenomics/adam/util/TwoBitFile$$anonfun$3/TwoBitFile$$anonfun$3(org.bdgenomics.adam.util.TwoBitFile)|",
      "|java+method:///org/bdgenomics/adam/util/TwoBitRecord/dnaSize()|",
      "|java+constructor:///org/bdgenomics/adam/util/TwoBitFile$$anonfun$2/TwoBitFile$$anonfun$2(org.bdgenomics.adam.util.TwoBitFile,org.bdgenomics.adam.models.ReferenceRegion,org.bdgenomics.adam.util.TwoBitRecord)|",
      "|java+constructor:///org/bdgenomics/adam/util/TwoBitFile$$anonfun$10/TwoBitFile$$anonfun$10(org.bdgenomics.adam.util.TwoBitFile,org.bdgenomics.adam.models.ReferenceRegion)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/apply(org.bdgenomics.formats.avro.Genotype)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(java.lang.String,long,long,org.bdgenomics.formats.avro.Strand)|",
      "|java+method:///org/bdgenomics/formats/avro/Genotype/getEnd()|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/apply$default$4()|",
      "|java+method:///org/bdgenomics/formats/avro/Genotype/getStart()|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///org/bdgenomics/formats/avro/Genotype/getContigName()|"
    ],
    "v2Body": [
      "|java+method:///org/bdgenomics/formats/avro/Genotype/getEnd()|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/apply$default$4()|",
      "|java+method:///org/bdgenomics/formats/avro/Genotype/getStart()|",
      "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(org.hammerlab.genomics.reference.ContigName,long,long,org.bdgenomics.formats.avro.Strand)|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///org/bdgenomics/formats/avro/Genotype/getContigName()|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/stranded(org.bdgenomics.formats.avro.AlignmentRecord)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
    "v1Body": [
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getEnd()|",
      "|java+method:///scala/Option$/apply(java.lang.Object)|",
      "|java+method:///scala/Option/map(scala.Function1)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(java.lang.String,long,long,org.bdgenomics.formats.avro.Strand)|",
      "|java+method:///scala/Some/x()|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToBoolean(java.lang.Object)|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion$$anonfun$1/ReferenceRegion$$anonfun$1()|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getStart()|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getReadNegativeStrand()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/checkRead(org.bdgenomics.formats.avro.AlignmentRecord)|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getContigName()|"
    ],
    "v2Body": [
      "|java+method:///scala/Some/x()|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getEnd()|",
      "|java+method:///scala/Option$/apply(java.lang.Object)|",
      "|java+method:///scala/Option/map(scala.Function1)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToBoolean(java.lang.Object)|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion$$anonfun$1/ReferenceRegion$$anonfun$1()|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getStart()|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getReadNegativeStrand()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/checkRead(org.bdgenomics.formats.avro.AlignmentRecord)|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(org.hammerlab.genomics.reference.ContigName,long,long,org.bdgenomics.formats.avro.Strand)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getContigName()|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/models/SequenceDictionary/containsRefName(java.lang.String)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
    "v1Body": [
      "|java+method:///scala/collection/Map/contains(java.lang.Object)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceDictionary/org$bdgenomics$adam$models$SequenceDictionary$$byName()|",
      "|java+method:///org/hammerlab/genomics/reference/package$ContigName$/makeContigName(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///scala/collection/Map/contains(java.lang.Object)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceDictionary/org$bdgenomics$adam$models$SequenceDictionary$$byName()|",
      "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/models/ReferencePosition$/apply(org.bdgenomics.formats.avro.AlignmentRecord)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getStart()|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferencePosition/ReferencePosition(java.lang.String,long,org.bdgenomics.formats.avro.Strand)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getContigName()|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///org/bdgenomics/adam/models/ReferencePosition$/$lessinit$greater$default$3()|"
    ],
    "v2Body": [
      "|java+constructor:///org/bdgenomics/adam/models/ReferencePosition/ReferencePosition(org.hammerlab.genomics.reference.ContigName,long,org.bdgenomics.formats.avro.Strand)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getStart()|",
      "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getContigName()|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///org/bdgenomics/adam/models/ReferencePosition$/$lessinit$greater$default$3()|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner/hashCode()|",
    "called": "|java+constructor:///org/hammerlab/genomics/reference/package$ContigLengths/package$ContigLengths(scala.collection.immutable.Map)|",
    "v1Body": [
      "|java+method:///scala/runtime/Statics/finalizeHash(int,int)|",
      "|java+method:///scala/runtime/Statics/mix(int,int)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner/start()|",
      "|java+method:///scala/runtime/Statics/longHash(long)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner/partitionSize()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner/seqLengths()|",
      "|java+method:///scala/runtime/Statics/anyHash(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///scala/runtime/Statics/finalizeHash(int,int)|",
      "|java+method:///scala/runtime/Statics/mix(int,int)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner/start()|",
      "|java+method:///scala/runtime/Statics/longHash(long)|",
      "|java+constructor:///org/hammerlab/genomics/reference/package$ContigLengths/package$ContigLengths(scala.collection.immutable.Map)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner/partitionSize()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner/seqLengths()|",
      "|java+method:///scala/runtime/Statics/anyHash(java.lang.Object)|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/unstranded(org.bdgenomics.formats.avro.AlignmentRecord)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(java.lang.String,long,long,org.bdgenomics.formats.avro.Strand)|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/apply$default$4()|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getEnd()|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getStart()|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/checkRead(org.bdgenomics.formats.avro.AlignmentRecord)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getContigName()|"
    ],
    "v2Body": [
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/apply$default$4()|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getEnd()|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getStart()|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/checkRead(org.bdgenomics.formats.avro.AlignmentRecord)|",
      "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(org.hammerlab.genomics.reference.ContigName,long,long,org.bdgenomics.formats.avro.Strand)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getContigName()|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/read/realignment/IndelRealignmentTarget$$anonfun$apply$1$$anonfun$apply$2/apply(htsjdk.samtools.CigarElement)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(java.lang.String,long,long,org.bdgenomics.formats.avro.Strand)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/apply$default$4()|",
      "|java+method:///htsjdk/samtools/CigarOperator/consumesReferenceBases()|",
      "|java+method:///scala/collection/immutable/List/$colon$colon(java.lang.Object)|",
      "|java+method:///scala/Predef$/long2Long(long)|",
      "|java+method:///htsjdk/samtools/CigarElement/getOperator()|",
      "|java+method:///htsjdk/samtools/CigarElement/getLength()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/apply$default$4()|",
      "|java+method:///htsjdk/samtools/CigarOperator/consumesReferenceBases()|",
      "|java+method:///scala/collection/immutable/List/$colon$colon(java.lang.Object)|",
      "|java+method:///scala/Predef$/long2Long(long)|",
      "|java+method:///htsjdk/samtools/CigarElement/getOperator()|",
      "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
      "|java+method:///htsjdk/samtools/CigarElement/getLength()|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(org.hammerlab.genomics.reference.ContigName,long,long,org.bdgenomics.formats.avro.Strand)|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/stranded(org.bdgenomics.formats.avro.Feature)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(java.lang.String,long,long,org.bdgenomics.formats.avro.Strand)|",
      "|java+method:///org/bdgenomics/formats/avro/Feature/getContigName()|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///org/bdgenomics/formats/avro/Feature/getEnd()|",
      "|java+method:///org/bdgenomics/formats/avro/Feature/getStrand()|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/checkFeature(org.bdgenomics.formats.avro.Feature)|",
      "|java+method:///scala/Predef$/require(boolean,scala.Function0)|",
      "|java+method:///org/bdgenomics/formats/avro/Feature/getStart()|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion$$anonfun$stranded$1/ReferenceRegion$$anonfun$stranded$1(org.bdgenomics.formats.avro.Feature)|"
    ],
    "v2Body": [
      "|java+method:///org/bdgenomics/formats/avro/Feature/getContigName()|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///org/bdgenomics/formats/avro/Feature/getEnd()|",
      "|java+method:///org/bdgenomics/formats/avro/Feature/getStrand()|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/checkFeature(org.bdgenomics.formats.avro.Feature)|",
      "|java+method:///scala/Predef$/require(boolean,scala.Function0)|",
      "|java+method:///org/bdgenomics/formats/avro/Feature/getStart()|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion$$anonfun$stranded$1/ReferenceRegion$$anonfun$stranded$1(org.bdgenomics.formats.avro.Feature)|",
      "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(org.hammerlab.genomics.reference.ContigName,long,long,org.bdgenomics.formats.avro.Strand)|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/productElement(int)|",
    "called": "|java+constructor:///org/hammerlab/genomics/reference/package$ContigLengths/package$ContigLengths(scala.collection.immutable.Map)|",
    "v1Body": [
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///java/lang/IndexOutOfBoundsException/IndexOutOfBoundsException(java.lang.String)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/seqLengths()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/numParts()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///java/lang/IndexOutOfBoundsException/IndexOutOfBoundsException(java.lang.String)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/seqLengths()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/numParts()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///org/hammerlab/genomics/reference/package$ContigLengths/package$ContigLengths(scala.collection.immutable.Map)|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner$/unapply(org.bdgenomics.adam.rdd.GenomicPositionPartitioner)|",
    "called": "|java+constructor:///org/hammerlab/genomics/reference/package$ContigLengths/package$ContigLengths(scala.collection.immutable.Map)|",
    "v1Body": [
      "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/seqLengths()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/numParts()|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/seqLengths()|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/numParts()|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///org/hammerlab/genomics/reference/package$ContigLengths/package$ContigLengths(scala.collection.immutable.Map)|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/models/IndelTable$$anonfun$3/apply(org.bdgenomics.formats.avro.Variant)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/ContigName$/apply(java.lang.String,org.hammerlab.genomics.reference.ContigName$Factory)|",
    "v1Body": [
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(java.lang.String,long,long,org.bdgenomics.formats.avro.Strand)|",
      "|java+constructor:///org/bdgenomics/adam/algorithms/consensus/Consensus/Consensus(java.lang.String,org.bdgenomics.adam.models.ReferenceRegion)|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/bdgenomics/formats/avro/Variant/getContigName()|",
      "|java+method:///org/bdgenomics/formats/avro/Variant/getAlternateAllele()|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/bdgenomics/formats/avro/Variant/getStart()|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///org/bdgenomics/formats/avro/Variant/getReferenceAllele()|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/apply$default$4()|",
      "|java+method:///scala/collection/immutable/StringOps/drop(int)|"
    ],
    "v2Body": [
      "|java+constructor:///org/bdgenomics/adam/algorithms/consensus/Consensus/Consensus(java.lang.String,org.bdgenomics.adam.models.ReferenceRegion)|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/bdgenomics/formats/avro/Variant/getContigName()|",
      "|java+method:///org/bdgenomics/formats/avro/Variant/getAlternateAllele()|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///org/hammerlab/genomics/reference/ContigName$/apply(java.lang.String,org.hammerlab.genomics.reference.ContigName$Factory)|",
      "|java+method:///org/bdgenomics/formats/avro/Variant/getStart()|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///org/bdgenomics/formats/avro/Variant/getReferenceAllele()|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/apply$default$4()|",
      "|java+method:///scala/collection/immutable/StringOps/drop(int)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(org.hammerlab.genomics.reference.ContigName,long,long,org.bdgenomics.formats.avro.Strand)|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/models/SequenceRecord/toSAMSequenceRecord()|",
    "called": "|java+method:///org/hammerlab/genomics/reference/package$Locus$/unwrapLocus(org.hammerlab.genomics.reference.package$Locus)|",
    "v1Body": [
      "|java+constructor:///htsjdk/samtools/SAMSequenceRecord/SAMSequenceRecord(java.lang.String,int)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/name()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/url()|",
      "|java+constructor:///org/bdgenomics/adam/models/SequenceRecord$$anonfun$toSAMSequenceRecord$7/SequenceRecord$$anonfun$toSAMSequenceRecord$7(org.bdgenomics.adam.models.SequenceRecord,htsjdk.samtools.SAMSequenceRecord)|",
      "|java+constructor:///org/bdgenomics/adam/models/SequenceRecord$$anonfun$toSAMSequenceRecord$6/SequenceRecord$$anonfun$toSAMSequenceRecord$6(org.bdgenomics.adam.models.SequenceRecord,htsjdk.samtools.SAMSequenceRecord)|",
      "|java+constructor:///org/bdgenomics/adam/models/SequenceRecord$$anonfun$toSAMSequenceRecord$5/SequenceRecord$$anonfun$toSAMSequenceRecord$5(org.bdgenomics.adam.models.SequenceRecord,htsjdk.samtools.SAMSequenceRecord)|",
      "|java+constructor:///org/bdgenomics/adam/models/SequenceRecord$$anonfun$toSAMSequenceRecord$4/SequenceRecord$$anonfun$toSAMSequenceRecord$4(org.bdgenomics.adam.models.SequenceRecord,htsjdk.samtools.SAMSequenceRecord)|",
      "|java+constructor:///org/bdgenomics/adam/models/SequenceRecord$$anonfun$toSAMSequenceRecord$3/SequenceRecord$$anonfun$toSAMSequenceRecord$3(org.bdgenomics.adam.models.SequenceRecord,htsjdk.samtools.SAMSequenceRecord)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/assembly()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/length()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/referenceIndex()|",
      "|java+method:///scala/Option/foreach(scala.Function1)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/genbank()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/refseq()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/species()|",
      "|java+constructor:///org/bdgenomics/adam/models/SequenceRecord$$anonfun$toSAMSequenceRecord$2/SequenceRecord$$anonfun$toSAMSequenceRecord$2(org.bdgenomics.adam.models.SequenceRecord,htsjdk.samtools.SAMSequenceRecord)|",
      "|java+constructor:///org/bdgenomics/adam/models/SequenceRecord$$anonfun$toSAMSequenceRecord$1/SequenceRecord$$anonfun$toSAMSequenceRecord$1(org.bdgenomics.adam.models.SequenceRecord,htsjdk.samtools.SAMSequenceRecord)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/md5()|"
    ],
    "v2Body": [
      "|java+constructor:///htsjdk/samtools/SAMSequenceRecord/SAMSequenceRecord(java.lang.String,int)|",
      "|java+method:///org/hammerlab/genomics/reference/ContigName/name()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/name()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/url()|",
      "|java+constructor:///org/bdgenomics/adam/models/SequenceRecord$$anonfun$toSAMSequenceRecord$7/SequenceRecord$$anonfun$toSAMSequenceRecord$7(org.bdgenomics.adam.models.SequenceRecord,htsjdk.samtools.SAMSequenceRecord)|",
      "|java+constructor:///org/bdgenomics/adam/models/SequenceRecord$$anonfun$toSAMSequenceRecord$6/SequenceRecord$$anonfun$toSAMSequenceRecord$6(org.bdgenomics.adam.models.SequenceRecord,htsjdk.samtools.SAMSequenceRecord)|",
      "|java+constructor:///org/bdgenomics/adam/models/SequenceRecord$$anonfun$toSAMSequenceRecord$5/SequenceRecord$$anonfun$toSAMSequenceRecord$5(org.bdgenomics.adam.models.SequenceRecord,htsjdk.samtools.SAMSequenceRecord)|",
      "|java+constructor:///org/bdgenomics/adam/models/SequenceRecord$$anonfun$toSAMSequenceRecord$4/SequenceRecord$$anonfun$toSAMSequenceRecord$4(org.bdgenomics.adam.models.SequenceRecord,htsjdk.samtools.SAMSequenceRecord)|",
      "|java+constructor:///org/bdgenomics/adam/models/SequenceRecord$$anonfun$toSAMSequenceRecord$3/SequenceRecord$$anonfun$toSAMSequenceRecord$3(org.bdgenomics.adam.models.SequenceRecord,htsjdk.samtools.SAMSequenceRecord)|",
      "|java+method:///org/hammerlab/genomics/reference/package$Locus$/unwrapLocus(org.hammerlab.genomics.reference.package$Locus)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/assembly()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/length()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/referenceIndex()|",
      "|java+method:///scala/Option/foreach(scala.Function1)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/genbank()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/refseq()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/species()|",
      "|java+constructor:///org/bdgenomics/adam/models/SequenceRecord$$anonfun$toSAMSequenceRecord$2/SequenceRecord$$anonfun$toSAMSequenceRecord$2(org.bdgenomics.adam.models.SequenceRecord,htsjdk.samtools.SAMSequenceRecord)|",
      "|java+constructor:///org/bdgenomics/adam/models/SequenceRecord$$anonfun$toSAMSequenceRecord$1/SequenceRecord$$anonfun$toSAMSequenceRecord$1(org.bdgenomics.adam.models.SequenceRecord,htsjdk.samtools.SAMSequenceRecord)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/md5()|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+constructor:///org/bdgenomics/adam/models/ReferencePosition$/ReferencePosition$()|",
    "called": "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/bdgenomics/adam/models/ReferencePosition$/$lessinit$greater$default$3()|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferencePosition/ReferencePosition(java.lang.String,long,org.bdgenomics.formats.avro.Strand)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///org/bdgenomics/adam/models/ReferenceOrdering$/lexicographic()|",
      "|java+method:///org/bdgenomics/adam/models/ReferencePosition$/$lessinit$greater$default$3()|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferencePosition/ReferencePosition(org.hammerlab.genomics.reference.ContigName,long,org.bdgenomics.formats.avro.Strand)|",
      "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/toEnd(java.lang.String,long,org.bdgenomics.formats.avro.Strand)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(java.lang.String,long,long,org.bdgenomics.formats.avro.Strand)|"
    ],
    "v2Body": [
      "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(org.hammerlab.genomics.reference.ContigName,long,long,org.bdgenomics.formats.avro.Strand)|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/models/SnpTable$$anonfun$apply$1/apply(scala.Tuple2)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
    "v1Body": [
      "|java+method:///scala/collection/mutable/HashSet/$plus$eq(java.lang.Object)|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///scala/collection/mutable/HashMap/getOrElseUpdate(java.lang.Object,scala.Function0)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+constructor:///org/bdgenomics/adam/models/SnpTable$$anonfun$apply$1$$anonfun$apply$2/SnpTable$$anonfun$apply$1$$anonfun$apply$2(org.bdgenomics.adam.models.SnpTable$$anonfun$apply$1)|"
    ],
    "v2Body": [
      "|java+method:///scala/collection/mutable/HashSet/$plus$eq(java.lang.Object)|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///scala/collection/mutable/HashMap/getOrElseUpdate(java.lang.Object,scala.Function0)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
      "|java+constructor:///org/bdgenomics/adam/models/SnpTable$$anonfun$apply$1$$anonfun$apply$2/SnpTable$$anonfun$apply$1$$anonfun$apply$2(org.bdgenomics.adam.models.SnpTable$$anonfun$apply$1)|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/hashCode()|",
    "called": "|java+constructor:///org/hammerlab/genomics/reference/package$ContigLengths/package$ContigLengths(scala.collection.immutable.Map)|",
    "v1Body": [
      "|java+method:///scala/runtime/Statics/finalizeHash(int,int)|",
      "|java+method:///scala/runtime/Statics/mix(int,int)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/seqLengths()|",
      "|java+method:///scala/runtime/Statics/anyHash(java.lang.Object)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/numParts()|"
    ],
    "v2Body": [
      "|java+method:///scala/runtime/Statics/finalizeHash(int,int)|",
      "|java+method:///scala/runtime/Statics/mix(int,int)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/seqLengths()|",
      "|java+constructor:///org/hammerlab/genomics/reference/package$ContigLengths/package$ContigLengths(scala.collection.immutable.Map)|",
      "|java+method:///scala/runtime/Statics/anyHash(java.lang.Object)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/numParts()|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/algorithms/consensus/ConsensusGeneratorFromReads$$anonfun$findConsensus$2/apply(org.bdgenomics.adam.rich.RichAlignmentRecord)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
    "v1Body": [
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///org/bdgenomics/adam/rich/RichAlignmentRecord/samtoolsCigar()|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getStart()|",
      "|java+method:///org/bdgenomics/adam/algorithms/consensus/Consensus$/generateAlternateConsensus(java.lang.String,org.bdgenomics.adam.models.ReferencePosition,htsjdk.samtools.Cigar)|",
      "|java+method:///org/bdgenomics/adam/models/ReferencePosition$/apply(java.lang.String,long)|",
      "|java+method:///org/bdgenomics/adam/rich/RichAlignmentRecord$/richRecordToRecord(org.bdgenomics.adam.rich.RichAlignmentRecord)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getContigName()|",
      "|java+method:///scala/Option$/option2Iterable(scala.Option)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getSequence()|"
    ],
    "v2Body": [
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getStart()|",
      "|java+method:///org/bdgenomics/adam/algorithms/consensus/Consensus$/generateAlternateConsensus(java.lang.String,org.bdgenomics.adam.models.ReferencePosition,htsjdk.samtools.Cigar)|",
      "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
      "|java+method:///org/bdgenomics/adam/rich/RichAlignmentRecord$/richRecordToRecord(org.bdgenomics.adam.rich.RichAlignmentRecord)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getContigName()|",
      "|java+method:///scala/Option$/option2Iterable(scala.Option)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getSequence()|",
      "|java+method:///org/bdgenomics/adam/models/ReferencePosition$/apply(org.hammerlab.genomics.reference.ContigName,long)|",
      "|java+method:///org/bdgenomics/adam/rich/RichAlignmentRecord/samtoolsCigar()|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/util/ReferenceContigMap$$anonfun$1/apply(scala.Tuple2)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/package$NumLoci$/apply(long)|",
    "v1Body": [
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord$/apply$default$8()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord$/apply$default$9()|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord$/apply(java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,scala.Option)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+constructor:///org/bdgenomics/adam/util/ReferenceContigMap$$anonfun$1$$anonfun$apply$1/ReferenceContigMap$$anonfun$1$$anonfun$apply$1(org.bdgenomics.adam.util.ReferenceContigMap$$anonfun$1)|",
      "|java+method:///scala/collection/TraversableLike/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord$/apply$default$3()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord$/apply$default$4()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord$/apply$default$6()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///scala/math/Ordering$/ordered(scala.Function1)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord$/apply$default$5()|",
      "|java+method:///scala/Predef$/conforms()|",
      "|java+method:///scala/collection/TraversableOnce/max(scala.math.Ordering)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord$/apply$default$7()|"
    ],
    "v2Body": [
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord$/apply$default$8()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord$/apply$default$9()|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///org/hammerlab/genomics/reference/package$NumLoci$/apply(long)|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+constructor:///org/bdgenomics/adam/util/ReferenceContigMap$$anonfun$1$$anonfun$apply$1/ReferenceContigMap$$anonfun$1$$anonfun$apply$1(org.bdgenomics.adam.util.ReferenceContigMap$$anonfun$1)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord$/apply(org.hammerlab.genomics.reference.ContigName,org.hammerlab.genomics.reference.package$Locus,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,scala.Option)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord$/apply$default$3()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord$/apply$default$6()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///scala/math/Ordering$/ordered(scala.Function1)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord$/apply$default$4()|",
      "|java+method:///scala/collection/Seq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord$/apply$default$5()|",
      "|java+method:///scala/Predef$/conforms()|",
      "|java+method:///scala/collection/TraversableOnce/max(scala.math.Ordering)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord$/apply$default$7()|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner/productElement(int)|",
    "called": "|java+constructor:///org/hammerlab/genomics/reference/package$ContigLengths/package$ContigLengths(scala.collection.immutable.Map)|",
    "v1Body": [
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///java/lang/IndexOutOfBoundsException/IndexOutOfBoundsException(java.lang.String)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner/start()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner/partitionSize()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner/seqLengths()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToBoolean(boolean)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///java/lang/IndexOutOfBoundsException/IndexOutOfBoundsException(java.lang.String)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner/start()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner/partitionSize()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner/seqLengths()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToBoolean(boolean)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///org/hammerlab/genomics/reference/package$ContigLengths/package$ContigLengths(scala.collection.immutable.Map)|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/read/AlignmentRecordRDD$$anonfun$3$$anonfun$apply$2/apply(long)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(java.lang.String,long,long,org.bdgenomics.formats.avro.Strand)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/apply$default$4()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getContigName()|"
    ],
    "v2Body": [
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/apply$default$4()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(org.hammerlab.genomics.reference.ContigName,long,long,org.bdgenomics.formats.avro.Strand)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getContigName()|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/util/ReferenceContigMap$$anonfun$apply$3/apply(org.bdgenomics.formats.avro.NucleotideContigFragment)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/ContigName$/apply(java.lang.String,org.hammerlab.genomics.reference.ContigName$Factory)|",
    "v1Body": [
      "|java+method:///org/bdgenomics/formats/avro/NucleotideContigFragment/getContig()|",
      "|java+method:///org/bdgenomics/formats/avro/Contig/getContigName()|"
    ],
    "v2Body": [
      "|java+method:///org/bdgenomics/formats/avro/NucleotideContigFragment/getContig()|",
      "|java+method:///org/hammerlab/genomics/reference/ContigName$/apply(java.lang.String,org.hammerlab.genomics.reference.ContigName$Factory)|",
      "|java+method:///org/bdgenomics/formats/avro/Contig/getContigName()|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$$anonfun$realignTargetGroup$1/apply()|",
    "called": "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$$anonfun$realignTargetGroup$1$$anonfun$apply$7/RealignIndels$$anonfun$realignTargetGroup$1$$anonfun$apply$7(org.bdgenomics.adam.rdd.read.realignment.RealignIndels$$anonfun$realignTargetGroup$1,java.lang.String,org.bdgenomics.adam.models.ReferenceRegion,scala.collection.Iterable,scala.runtime.ObjectRef)|",
      "|java+method:///scala/collection/Iterable/foreach(scala.Function1)|",
      "|java+method:///scala/collection/immutable/List/minBy(scala.Function1,scala.math.Ordering)|",
      "|java+method:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels/lodThreshold()|",
      "|java+method:///scala/collection/Iterable/head()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$$anonfun$realignTargetGroup$1$$anonfun$13/RealignIndels$$anonfun$realignTargetGroup$1$$anonfun$13(org.bdgenomics.adam.rdd.read.realignment.RealignIndels$$anonfun$realignTargetGroup$1)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels/maxConsensusNumber()|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToInt(java.lang.Object)|",
      "|java+method:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels/log()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(java.lang.String,long,long,org.bdgenomics.formats.avro.Strand)|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToLong(java.lang.Object)|",
      "|java+method:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$$anonfun$realignTargetGroup$1/apply()|",
      "|java+method:///scala/collection/Iterable$/canBuildFrom()|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/apply$default$4()|",
      "|java+constructor:///scala/runtime/ObjectRef/ObjectRef(java.lang.Object)|",
      "|java+method:///scala/Tuple3/_1()|",
      "|java+method:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$/getReferenceFromReads(scala.collection.Iterable)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Tuple3/_2()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$$anonfun$realignTargetGroup$1$$anonfun$10/RealignIndels$$anonfun$realignTargetGroup$1$$anonfun$10(org.bdgenomics.adam.rdd.read.realignment.RealignIndels$$anonfun$realignTargetGroup$1)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///scala/Tuple3/_3()|",
      "|java+method:///org/bdgenomics/adam/algorithms/consensus/ConsensusGenerator/findConsensus(scala.collection.Iterable)|",
      "|java+method:///scala/util/Random/shuffle(scala.collection.TraversableOnce,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/Option/isEmpty()|",
      "|java+constructor:///scala/util/Random/Random()|",
      "|java+method:///scala/collection/TraversableOnce/sum(scala.math.Numeric)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/bdgenomics/adam/rich/RichAlignmentRecord/record()|",
      "|java+method:///scala/collection/Iterable/filter(scala.Function1)|",
      "|java+method:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels/consensusModel()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///scala/collection/Iterable/size()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToDouble(double)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///org/bdgenomics/adam/algorithms/consensus/ConsensusGenerator/preprocessReadsForRealignment(scala.collection.Iterable,java.lang.String,org.bdgenomics.adam.models.ReferenceRegion)|",
      "|java+constructor:///scala/runtime/IntRef/IntRef(int)|",
      "|java+constructor:///scala/Tuple3/Tuple3(java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/collection/Iterable/$plus$plus(scala.collection.GenTraversableOnce,scala.collection.generic.CanBuildFrom)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$$anonfun$realignTargetGroup$1$$anonfun$7/RealignIndels$$anonfun$realignTargetGroup$1$$anonfun$7(org.bdgenomics.adam.rdd.read.realignment.RealignIndels$$anonfun$realignTargetGroup$1)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$$anonfun$realignTargetGroup$1$$anonfun$9/RealignIndels$$anonfun$realignTargetGroup$1$$anonfun$9(org.bdgenomics.adam.rdd.read.realignment.RealignIndels$$anonfun$realignTargetGroup$1)|",
      "|java+method:///scala/collection/Iterable/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$$anonfun$realignTargetGroup$1$$anonfun$8/RealignIndels$$anonfun$realignTargetGroup$1$$anonfun$8(org.bdgenomics.adam.rdd.read.realignment.RealignIndels$$anonfun$realignTargetGroup$1)|",
      "|java+method:///scala/collection/IterableLike/take(int)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$$anonfun$realignTargetGroup$1$$anonfun$14/RealignIndels$$anonfun$realignTargetGroup$1$$anonfun$14(org.bdgenomics.adam.rdd.read.realignment.RealignIndels$$anonfun$realignTargetGroup$1,java.lang.String,long,org.bdgenomics.adam.algorithms.consensus.Consensus,scala.collection.mutable.Map,scala.runtime.IntRef)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getContigName()|"
    ],
    "v2Body": [
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$$anonfun$realignTargetGroup$1$$anonfun$apply$7/RealignIndels$$anonfun$realignTargetGroup$1$$anonfun$apply$7(org.bdgenomics.adam.rdd.read.realignment.RealignIndels$$anonfun$realignTargetGroup$1,java.lang.String,org.bdgenomics.adam.models.ReferenceRegion,scala.collection.Iterable,scala.runtime.ObjectRef)|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///scala/collection/immutable/List/minBy(scala.Function1,scala.math.Ordering)|",
      "|java+method:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels/lodThreshold()|",
      "|java+method:///scala/collection/Iterable/head()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$$anonfun$realignTargetGroup$1$$anonfun$13/RealignIndels$$anonfun$realignTargetGroup$1$$anonfun$13(org.bdgenomics.adam.rdd.read.realignment.RealignIndels$$anonfun$realignTargetGroup$1)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels/maxConsensusNumber()|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToInt(java.lang.Object)|",
      "|java+method:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels/log()|",
      "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToLong(java.lang.Object)|",
      "|java+method:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$$anonfun$realignTargetGroup$1/apply()|",
      "|java+method:///scala/collection/Iterable$/canBuildFrom()|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/apply$default$4()|",
      "|java+constructor:///scala/runtime/ObjectRef/ObjectRef(java.lang.Object)|",
      "|java+method:///scala/Tuple3/_1()|",
      "|java+method:///scala/collection/Seq/foreach(scala.Function1)|",
      "|java+method:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$/getReferenceFromReads(scala.collection.Iterable)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Tuple3/_2()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$$anonfun$realignTargetGroup$1$$anonfun$10/RealignIndels$$anonfun$realignTargetGroup$1$$anonfun$10(org.bdgenomics.adam.rdd.read.realignment.RealignIndels$$anonfun$realignTargetGroup$1)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///scala/Tuple3/_3()|",
      "|java+method:///scala/collection/Iterable/toSeq()|",
      "|java+method:///org/bdgenomics/adam/algorithms/consensus/ConsensusGenerator/findConsensus(scala.collection.Iterable)|",
      "|java+method:///scala/util/Random/shuffle(scala.collection.TraversableOnce,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/Option/isEmpty()|",
      "|java+constructor:///scala/util/Random/Random()|",
      "|java+method:///scala/collection/TraversableOnce/sum(scala.math.Numeric)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/bdgenomics/adam/rich/RichAlignmentRecord/record()|",
      "|java+method:///scala/collection/Iterable/filter(scala.Function1)|",
      "|java+method:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels/consensusModel()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///scala/collection/Iterable/size()|",
      "|java+method:///scala/collection/Seq/distinct()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToDouble(double)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///org/bdgenomics/adam/algorithms/consensus/ConsensusGenerator/preprocessReadsForRealignment(scala.collection.Iterable,java.lang.String,org.bdgenomics.adam.models.ReferenceRegion)|",
      "|java+constructor:///scala/runtime/IntRef/IntRef(int)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/collection/Seq/size()|",
      "|java+constructor:///scala/Tuple3/Tuple3(java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/collection/Iterable/$plus$plus(scala.collection.GenTraversableOnce,scala.collection.generic.CanBuildFrom)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$$anonfun$realignTargetGroup$1$$anonfun$7/RealignIndels$$anonfun$realignTargetGroup$1$$anonfun$7(org.bdgenomics.adam.rdd.read.realignment.RealignIndels$$anonfun$realignTargetGroup$1)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$$anonfun$realignTargetGroup$1$$anonfun$9/RealignIndels$$anonfun$realignTargetGroup$1$$anonfun$9(org.bdgenomics.adam.rdd.read.realignment.RealignIndels$$anonfun$realignTargetGroup$1)|",
      "|java+method:///scala/collection/Iterable/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$$anonfun$realignTargetGroup$1$$anonfun$8/RealignIndels$$anonfun$realignTargetGroup$1$$anonfun$8(org.bdgenomics.adam.rdd.read.realignment.RealignIndels$$anonfun$realignTargetGroup$1)|",
      "|java+method:///scala/collection/IterableLike/take(int)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$$anonfun$realignTargetGroup$1$$anonfun$14/RealignIndels$$anonfun$realignTargetGroup$1$$anonfun$14(org.bdgenomics.adam.rdd.read.realignment.RealignIndels$$anonfun$realignTargetGroup$1,java.lang.String,long,org.bdgenomics.adam.algorithms.consensus.Consensus,scala.collection.mutable.Map,scala.runtime.IntRef)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(org.hammerlab.genomics.reference.ContigName,long,long,org.bdgenomics.formats.avro.Strand)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getContigName()|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/fromStart(java.lang.String,long,org.bdgenomics.formats.avro.Strand)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(java.lang.String,long,long,org.bdgenomics.formats.avro.Strand)|"
    ],
    "v2Body": [
      "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(org.hammerlab.genomics.reference.ContigName,long,long,org.bdgenomics.formats.avro.Strand)|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/read/realignment/IndelRealignmentTargetSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(java.lang.String,long,long,org.bdgenomics.formats.avro.Strand)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/IndelRealignmentTarget/IndelRealignmentTarget(scala.Option,org.bdgenomics.adam.models.ReferenceRegion)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/apply$default$4()|",
      "|java+method:///com/esotericsoftware/kryo/io/Input/readLong()|",
      "|java+method:///com/esotericsoftware/kryo/io/Input/readBoolean()|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|",
      "|java+method:///org/bdgenomics/adam/rdd/read/realignment/IndelRealignmentTargetSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)|",
      "|java+method:///com/esotericsoftware/kryo/io/Input/readString()|"
    ],
    "v2Body": [
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/IndelRealignmentTarget/IndelRealignmentTarget(scala.Option,org.bdgenomics.adam.models.ReferenceRegion)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/apply$default$4()|",
      "|java+method:///com/esotericsoftware/kryo/io/Input/readLong()|",
      "|java+method:///com/esotericsoftware/kryo/io/Input/readBoolean()|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|",
      "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
      "|java+method:///org/bdgenomics/adam/rdd/read/realignment/IndelRealignmentTargetSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)|",
      "|java+method:///com/esotericsoftware/kryo/io/Input/readString()|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(org.hammerlab.genomics.reference.ContigName,long,long,org.bdgenomics.formats.avro.Strand)|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/read/AlignmentRecordRDD$$anonfun$sortReadsByReferencePositionAndIndex$1$$anonfun$apply$10/apply(org.bdgenomics.formats.avro.AlignmentRecord)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/String/hashCode()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/referenceIndex()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/AlignmentRecordRDD$$anonfun$sortReadsByReferencePositionAndIndex$1$$anonfun$apply$10$$anonfun$apply$12/AlignmentRecordRDD$$anonfun$sortReadsByReferencePositionAndIndex$1$$anonfun$apply$10$$anonfun$apply$12(org.bdgenomics.adam.rdd.read.AlignmentRecordRDD$$anonfun$sortReadsByReferencePositionAndIndex$1$$anonfun$apply$10,scala.Option)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getReadName()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceDictionary/apply(java.lang.String)|",
      "|java+method:///scala/Predef$/Boolean2boolean(java.lang.Boolean)|",
      "|java+constructor:///scala/Tuple2$mcIJ$sp/Tuple2$mcIJ$sp(int,long)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/AlignmentRecordRDD$$anonfun$sortReadsByReferencePositionAndIndex$1$$anonfun$apply$10$$anonfun$apply$11/AlignmentRecordRDD$$anonfun$sortReadsByReferencePositionAndIndex$1$$anonfun$apply$10$$anonfun$apply$11(org.bdgenomics.adam.rdd.read.AlignmentRecordRDD$$anonfun$sortReadsByReferencePositionAndIndex$1$$anonfun$apply$10,org.bdgenomics.formats.avro.AlignmentRecord)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getStart()|",
      "|java+method:///scala/math/package$/min(int,int)|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToInt(java.lang.Object)|",
      "|java+method:///scala/math/package$/abs(int)|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///scala/Option/isDefined()|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getReadMapped()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRDD/sequences()|",
      "|java+method:///scala/Predef$/require(boolean,scala.Function0)|",
      "|java+method:///org/bdgenomics/adam/rdd/read/AlignmentRecordRDD$$anonfun$sortReadsByReferencePositionAndIndex$1/org$bdgenomics$adam$rdd$read$AlignmentRecordRDD$$anonfun$$$outer()|",
      "|java+method:///scala/Option/get()|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getContigName()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/String/hashCode()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/referenceIndex()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/AlignmentRecordRDD$$anonfun$sortReadsByReferencePositionAndIndex$1$$anonfun$apply$10$$anonfun$apply$12/AlignmentRecordRDD$$anonfun$sortReadsByReferencePositionAndIndex$1$$anonfun$apply$10$$anonfun$apply$12(org.bdgenomics.adam.rdd.read.AlignmentRecordRDD$$anonfun$sortReadsByReferencePositionAndIndex$1$$anonfun$apply$10,scala.Option)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getReadName()|",
      "|java+method:///scala/Predef$/Boolean2boolean(java.lang.Boolean)|",
      "|java+constructor:///scala/Tuple2$mcIJ$sp/Tuple2$mcIJ$sp(int,long)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/AlignmentRecordRDD$$anonfun$sortReadsByReferencePositionAndIndex$1$$anonfun$apply$10$$anonfun$apply$11/AlignmentRecordRDD$$anonfun$sortReadsByReferencePositionAndIndex$1$$anonfun$apply$10$$anonfun$apply$11(org.bdgenomics.adam.rdd.read.AlignmentRecordRDD$$anonfun$sortReadsByReferencePositionAndIndex$1$$anonfun$apply$10,org.bdgenomics.formats.avro.AlignmentRecord)|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getStart()|",
      "|java+method:///scala/math/package$/min(int,int)|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToInt(java.lang.Object)|",
      "|java+method:///scala/math/package$/abs(int)|",
      "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceDictionary/apply(org.hammerlab.genomics.reference.ContigName)|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///scala/Option/isDefined()|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getReadMapped()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRDD/sequences()|",
      "|java+method:///scala/Predef$/require(boolean,scala.Function0)|",
      "|java+method:///org/bdgenomics/adam/rdd/read/AlignmentRecordRDD$$anonfun$sortReadsByReferencePositionAndIndex$1/org$bdgenomics$adam$rdd$read$AlignmentRecordRDD$$anonfun$$$outer()|",
      "|java+method:///scala/Option/get()|",
      "|java+method:///org/bdgenomics/formats/avro/AlignmentRecord/getContigName()|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$$anonfun$apply$1$$anonfun$apply$2$$anonfun$apply$4/apply(scala.Tuple2)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(java.lang.String,long,long,org.bdgenomics.formats.avro.Strand)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$$anonfun$apply$1$$anonfun$apply$2/org$bdgenomics$adam$models$ReferenceRegion$$anonfun$$anonfun$$$outer()|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/apply$default$4()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/bdgenomics/formats/avro/NucleotideContigFragment/getFragmentStartPosition()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///org/bdgenomics/formats/avro/Contig/getContigName()|"
    ],
    "v2Body": [
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$$anonfun$apply$1$$anonfun$apply$2/org$bdgenomics$adam$models$ReferenceRegion$$anonfun$$anonfun$$$outer()|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/apply$default$4()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/bdgenomics/formats/avro/NucleotideContigFragment/getFragmentStartPosition()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///org/hammerlab/genomics/reference/ContigName$Strict$/apply(java.lang.String)|",
      "|java+method:///org/bdgenomics/formats/avro/Contig/getContigName()|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferenceRegion/ReferenceRegion(org.hammerlab.genomics.reference.ContigName,long,long,org.bdgenomics.formats.avro.Strand)|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/GenomicRDD$class/joinPartitionSizeAndSequences(org.bdgenomics.adam.rdd.GenomicRDD,scala.Option,org.bdgenomics.adam.rdd.GenomicRDD)|",
    "called": "|java+method:///org/hammerlab/genomics/reference/package$Locus$/unwrapLocus(org.hammerlab.genomics.reference.package$Locus)|",
    "v1Body": [
      "|java+method:///scala/runtime/BoxesRunTime/unboxToLong(java.lang.Object)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceDictionary/records()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceDictionary/isEmpty()|",
      "|java+method:///scala/collection/immutable/Vector$/canBuildFrom()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicRDD$$anonfun$1/GenomicRDD$$anonfun$1(org.bdgenomics.adam.rdd.GenomicRDD,org.bdgenomics.adam.rdd.GenomicRDD)|",
      "|java+method:///scala/Predef$/require(boolean,scala.Function0)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///scala/collection/immutable/Vector/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicRDD$$anonfun$joinPartitionSizeAndSequences$1/GenomicRDD$$anonfun$joinPartitionSizeAndSequences$1(org.bdgenomics.adam.rdd.GenomicRDD)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceDictionary/$plus$plus(org.bdgenomics.adam.models.SequenceDictionary)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicRDD$$anonfun$joinPartitionSizeAndSequences$2/GenomicRDD$$anonfun$joinPartitionSizeAndSequences$2(org.bdgenomics.adam.rdd.GenomicRDD)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/collection/TraversableOnce/sum(scala.math.Numeric)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRDD/sequences()|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToInt(java.lang.Object)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|"
    ],
    "v2Body": [
      "|java+method:///org/bdgenomics/adam/models/SequenceDictionary/records()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceDictionary/isEmpty()|",
      "|java+method:///scala/collection/immutable/Vector$/canBuildFrom()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicRDD$$anonfun$1/GenomicRDD$$anonfun$1(org.bdgenomics.adam.rdd.GenomicRDD,org.bdgenomics.adam.rdd.GenomicRDD)|",
      "|java+method:///scala/Predef$/require(boolean,scala.Function0)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///org/hammerlab/genomics/reference/package$Locus$/unwrapLocus(org.hammerlab.genomics.reference.package$Locus)|",
      "|java+method:///scala/collection/immutable/Vector/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicRDD$$anonfun$joinPartitionSizeAndSequences$1/GenomicRDD$$anonfun$joinPartitionSizeAndSequences$1(org.bdgenomics.adam.rdd.GenomicRDD)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceDictionary/$plus$plus(org.bdgenomics.adam.models.SequenceDictionary)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicRDD$$anonfun$joinPartitionSizeAndSequences$2/GenomicRDD$$anonfun$joinPartitionSizeAndSequences$2(org.bdgenomics.adam.rdd.GenomicRDD)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/collection/TraversableOnce/sum(scala.math.Numeric)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRDD/sequences()|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToInt(java.lang.Object)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|"
    ],
    "affectedLib": "org.hammerlab.genomics:reference_2.10:1.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/loadIndexedBam(java.lang.String,org.hammerlab.genomics.loci.parsing.ParsedLoci,boolean,scala.Predef$DummyImplicit)|",
    "called": "|java+method:///org/hammerlab/genomics/loci/set/LociSet$/apply(org.hammerlab.genomics.loci.parsing.ParsedLoci,scala.collection.immutable.Map)|",
    "v1Body": [
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$loadIndexedBam$1/ADAMContext$$anonfun$loadIndexedBam$1(org.bdgenomics.adam.rdd.ADAMContext,org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$14/ADAMContext$$anonfun$14(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///scala/Array$/canBuildFrom(scala.reflect.ClassTag)|",
      "|java+method:///org/seqdoop/hadoop_bam/BAMInputFormat/setIntervals(org.apache.hadoop.conf.Configuration,java.util.List)|",
      "|java+method:///scala/collection/mutable/ArrayOps/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/getFsAndFiles(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$loadIndexedBam$3/ADAMContext$$anonfun$loadIndexedBam$3(org.bdgenomics.adam.rdd.ADAMContext,boolean,org.apache.spark.broadcast.Broadcast)|",
      "|java+method:///scala/collection/JavaConversions$/seqAsJavaList(scala.collection.Seq)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/AlignedReadRDD/AlignedReadRDD(org.apache.spark.rdd.RDD,org.bdgenomics.adam.models.SequenceDictionary,org.bdgenomics.adam.models.RecordGroupDictionary)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$15/ADAMContext$$anonfun$15(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///org/apache/spark/SparkContext/union(scala.collection.Seq,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/spark/SparkContext/broadcast(java.lang.Object,scala.reflect.ClassTag)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///org/bdgenomics/utils/instrumentation/Metrics$/isRecording()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$17/ADAMContext$$anonfun$17(org.bdgenomics.adam.rdd.ADAMContext,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/hammerlab/genomics/loci/set/LociSet/toHtsJDKIntervals()|",
      "|java+method:///scala/Predef$/require(boolean,scala.Function0)|",
      "|java+method:///scala/collection/mutable/ArrayOps/reduce(scala.Function2)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$loadIndexedBam$2/ADAMContext$$anonfun$loadIndexedBam$2(org.bdgenomics.adam.rdd.ADAMContext,org.bdgenomics.adam.converters.SAMRecordConverter)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///org/bdgenomics/utils/misc/HadoopUtil$/newJob(org.apache.spark.SparkContext)|",
      "|java+method:///org/hammerlab/genomics/loci/set/LociSet$/apply(org.hammerlab.genomics.loci.parsing.ParsedLoci,scala.collection.immutable.Map)|",
      "|java+method:///org/apache/spark/rdd/MetricsContext$/rddToInstrumentedRDD(org.apache.spark.rdd.RDD,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.hadoop.mapreduce.JobContext)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+constructor:///org/bdgenomics/adam/converters/SAMRecordConverter/SAMRecordConverter()|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceDictionary/contigLengths()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$16/ADAMContext$$anonfun$16(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///scala/collection/mutable/ArrayOps/filter(scala.Function1)|",
      "|java+method:///org/apache/spark/rdd/RDD/map(scala.Function1,scala.reflect.ClassTag)|",
      "|java+method:///scala/collection/mutable/ArrayOps/nonEmpty()|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/sc()|",
      "|java+method:///org/apache/spark/rdd/RDD/filter(scala.Function1)|"
    ],
    "v2Body": [
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$loadIndexedBam$1/ADAMContext$$anonfun$loadIndexedBam$1(org.bdgenomics.adam.rdd.ADAMContext,org.apache.hadoop.fs.Path)|",
      "|java+method:///scala/Array$/canBuildFrom(scala.reflect.ClassTag)|",
      "|java+method:///org/seqdoop/hadoop_bam/BAMInputFormat/setIntervals(org.apache.hadoop.conf.Configuration,java.util.List)|",
      "|java+method:///scala/collection/mutable/ArrayOps/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/getFsAndFiles(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/hammerlab/genomics/loci/set/LociSet/toHtsJDKIntervals()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$loadIndexedBam$3/ADAMContext$$anonfun$loadIndexedBam$3(org.bdgenomics.adam.rdd.ADAMContext,boolean,org.apache.spark.broadcast.Broadcast)|",
      "|java+method:///scala/collection/JavaConversions$/seqAsJavaList(scala.collection.Seq)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/AlignedReadRDD/AlignedReadRDD(org.apache.spark.rdd.RDD,org.bdgenomics.adam.models.SequenceDictionary,org.bdgenomics.adam.models.RecordGroupDictionary)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$15/ADAMContext$$anonfun$15(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///org/apache/spark/SparkContext/union(scala.collection.Seq,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/spark/SparkContext/broadcast(java.lang.Object,scala.reflect.ClassTag)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///org/bdgenomics/utils/instrumentation/Metrics$/isRecording()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$18/ADAMContext$$anonfun$18(org.bdgenomics.adam.rdd.ADAMContext,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///scala/Predef$/require(boolean,scala.Function0)|",
      "|java+method:///scala/collection/mutable/ArrayOps/reduce(scala.Function2)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$loadIndexedBam$2/ADAMContext$$anonfun$loadIndexedBam$2(org.bdgenomics.adam.rdd.ADAMContext,org.bdgenomics.adam.converters.SAMRecordConverter)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///org/bdgenomics/utils/misc/HadoopUtil$/newJob(org.apache.spark.SparkContext)|",
      "|java+method:///org/hammerlab/genomics/loci/set/LociSet$/apply(org.hammerlab.genomics.loci.parsing.ParsedLoci,scala.collection.immutable.Map)|",
      "|java+method:///org/apache/spark/rdd/MetricsContext$/rddToInstrumentedRDD(org.apache.spark.rdd.RDD,scala.reflect.ClassTag)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$17/ADAMContext$$anonfun$17(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
      "|java+method:///org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.hadoop.mapreduce.JobContext)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+constructor:///org/bdgenomics/adam/converters/SAMRecordConverter/SAMRecordConverter()|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceDictionary/contigLengths()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$16/ADAMContext$$anonfun$16(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///scala/collection/mutable/ArrayOps/filter(scala.Function1)|",
      "|java+method:///org/apache/spark/rdd/RDD/map(scala.Function1,scala.reflect.ClassTag)|",
      "|java+method:///scala/collection/mutable/ArrayOps/nonEmpty()|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/sc()|",
      "|java+method:///org/apache/spark/rdd/RDD/filter(scala.Function1)|"
    ],
    "affectedLib": "org.hammerlab.genomics:loci_2.10:1.5.2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$loadIndexedBam$4/apply(org.bdgenomics.adam.models.ReferenceRegion)|",
    "called": "|java+method:///org/hammerlab/genomics/loci/parsing/LociRange$/apply(org.hammerlab.genomics.reference.ContigName,org.hammerlab.genomics.reference.package$Locus,org.hammerlab.genomics.reference.package$Locus)|",
    "v1Body": [
      "|java+constructor:///org/hammerlab/genomics/reference/package$Locus/package$Locus(long)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion/referenceName()|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion/end()|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion/start()|",
      "|java+method:///org/hammerlab/genomics/reference/package$ContigName$/makeContigName(java.lang.String)|",
      "|java+method:///org/hammerlab/genomics/loci/parsing/LociRange$/apply(org.hammerlab.genomics.reference.package$ContigName,org.hammerlab.genomics.reference.package$Locus,org.hammerlab.genomics.reference.package$Locus)|"
    ],
    "v2Body": [
      "|java+constructor:///org/hammerlab/genomics/reference/package$Locus/package$Locus(long)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion/referenceName()|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion/end()|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion/start()|",
      "|java+method:///org/hammerlab/genomics/loci/parsing/LociRange$/apply(org.hammerlab.genomics.reference.ContigName,org.hammerlab.genomics.reference.package$Locus,org.hammerlab.genomics.reference.package$Locus)|"
    ],
    "affectedLib": "org.hammerlab.genomics:loci_2.10:1.5.2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/serialization/ADAMKryoRegistrator/registerClasses(com.esotericsoftware.kryo.Kryo)|",
    "called": "|java+constructor:///org/hammerlab/genomics/loci/set/Registrar/Registrar()|",
    "v1Body": [
      "|java+method:///com/esotericsoftware/kryo/Kryo/register(java.lang.Class)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/TargetSetSerializer/TargetSetSerializer()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/ZippedTargetSetSerializer/ZippedTargetSetSerializer()|",
      "|java+method:///org/hammerlab/genomics/loci/set/Registrar/registerClasses(com.esotericsoftware.kryo.Kryo)|",
      "|java+constructor:///org/bdgenomics/adam/serialization/AvroSerializer/AvroSerializer(scala.reflect.ClassTag)|",
      "|java+method:///com/esotericsoftware/kryo/Kryo/register(java.lang.Class,com.esotericsoftware.kryo.Serializer)|",
      "|java+method:///scala/collection/immutable/Map$/empty()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/SingleReadBucketSerializer/SingleReadBucketSerializer()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/IndelRealignmentTargetSerializer/IndelRealignmentTargetSerializer()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/ReferencePositionPairSerializer/ReferencePositionPairSerializer()|",
      "|java+constructor:///org/bdgenomics/utils/intervalarray/IntervalArraySerializer/IntervalArraySerializer(com.esotericsoftware.kryo.Kryo,scala.reflect.ClassTag,scala.reflect.ClassTag)|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///scala/Predef$/Map()|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferencePositionSerializer/ReferencePositionSerializer()|",
      "|java+constructor:///org/bdgenomics/adam/util/TwoBitFileSerializer/TwoBitFileSerializer()|",
      "|java+constructor:///org/hammerlab/genomics/loci/set/Registrar/Registrar()|"
    ],
    "v2Body": [
      "|java+method:///com/esotericsoftware/kryo/Kryo/register(java.lang.Class)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/variant/GenotypeArraySerializer/GenotypeArraySerializer()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/ZippedTargetSetSerializer/ZippedTargetSetSerializer()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/feature/FeatureArraySerializer/FeatureArraySerializer()|",
      "|java+method:///org/hammerlab/genomics/reference/Registrar/registerClasses(com.esotericsoftware.kryo.Kryo)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+constructor:///org/bdgenomics/adam/models/ReferencePositionSerializer/ReferencePositionSerializer(org.hammerlab.genomics.reference.ContigName$Factory)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/IndelRealignmentTargetSerializer/IndelRealignmentTargetSerializer()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/ReferencePositionPairSerializer/ReferencePositionPairSerializer()|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/variant/VariantArraySerializer/VariantArraySerializer()|",
      "|java+method:///scala/Predef$/Map()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/TargetSetSerializer/TargetSetSerializer()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/variant/VariantContextArraySerializer/VariantContextArraySerializer()|",
      "|java+constructor:///org/bdgenomics/adam/util/TwoBitFileSerializer/TwoBitFileSerializer()|",
      "|java+constructor:///org/hammerlab/genomics/loci/set/Registrar/Registrar()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/feature/CoverageArraySerializer/CoverageArraySerializer(com.esotericsoftware.kryo.Kryo)|",
      "|java+method:///org/hammerlab/genomics/loci/set/Registrar/registerClasses(com.esotericsoftware.kryo.Kryo)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/contig/NucleotideContigFragmentArraySerializer/NucleotideContigFragmentArraySerializer()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/fragment/FragmentArraySerializer/FragmentArraySerializer()|",
      "|java+constructor:///org/bdgenomics/adam/serialization/AvroSerializer/AvroSerializer(scala.reflect.ClassTag)|",
      "|java+method:///com/esotericsoftware/kryo/Kryo/register(java.lang.Class,com.esotericsoftware.kryo.Serializer)|",
      "|java+constructor:///org/bdgenomics/adam/models/VariantContextSerializer/VariantContextSerializer()|",
      "|java+constructor:///org/hammerlab/genomics/reference/Registrar/Registrar()|",
      "|java+method:///scala/collection/immutable/Map$/empty()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/AlignmentRecordArraySerializer/AlignmentRecordArraySerializer()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/SingleReadBucketSerializer/SingleReadBucketSerializer()|"
    ],
    "affectedLib": "org.hammerlab.genomics:loci_2.10:1.5.2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/loadIndexedBam(java.lang.String,org.hammerlab.genomics.loci.parsing.ParsedLoci,boolean,scala.Predef$DummyImplicit)|",
    "called": "|java+method:///org/bdgenomics/utils/misc/HadoopUtil$/newJob(org.apache.spark.SparkContext)|",
    "v1Body": [
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$loadIndexedBam$1/ADAMContext$$anonfun$loadIndexedBam$1(org.bdgenomics.adam.rdd.ADAMContext,org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$14/ADAMContext$$anonfun$14(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///scala/Array$/canBuildFrom(scala.reflect.ClassTag)|",
      "|java+method:///org/seqdoop/hadoop_bam/BAMInputFormat/setIntervals(org.apache.hadoop.conf.Configuration,java.util.List)|",
      "|java+method:///scala/collection/mutable/ArrayOps/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/getFsAndFiles(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$loadIndexedBam$3/ADAMContext$$anonfun$loadIndexedBam$3(org.bdgenomics.adam.rdd.ADAMContext,boolean,org.apache.spark.broadcast.Broadcast)|",
      "|java+method:///scala/collection/JavaConversions$/seqAsJavaList(scala.collection.Seq)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/AlignedReadRDD/AlignedReadRDD(org.apache.spark.rdd.RDD,org.bdgenomics.adam.models.SequenceDictionary,org.bdgenomics.adam.models.RecordGroupDictionary)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$15/ADAMContext$$anonfun$15(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///org/apache/spark/SparkContext/union(scala.collection.Seq,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/spark/SparkContext/broadcast(java.lang.Object,scala.reflect.ClassTag)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///org/bdgenomics/utils/instrumentation/Metrics$/isRecording()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$17/ADAMContext$$anonfun$17(org.bdgenomics.adam.rdd.ADAMContext,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/hammerlab/genomics/loci/set/LociSet/toHtsJDKIntervals()|",
      "|java+method:///scala/Predef$/require(boolean,scala.Function0)|",
      "|java+method:///scala/collection/mutable/ArrayOps/reduce(scala.Function2)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$loadIndexedBam$2/ADAMContext$$anonfun$loadIndexedBam$2(org.bdgenomics.adam.rdd.ADAMContext,org.bdgenomics.adam.converters.SAMRecordConverter)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///org/bdgenomics/utils/misc/HadoopUtil$/newJob(org.apache.spark.SparkContext)|",
      "|java+method:///org/hammerlab/genomics/loci/set/LociSet$/apply(org.hammerlab.genomics.loci.parsing.ParsedLoci,scala.collection.immutable.Map)|",
      "|java+method:///org/apache/spark/rdd/MetricsContext$/rddToInstrumentedRDD(org.apache.spark.rdd.RDD,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.hadoop.mapreduce.JobContext)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+constructor:///org/bdgenomics/adam/converters/SAMRecordConverter/SAMRecordConverter()|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceDictionary/contigLengths()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$16/ADAMContext$$anonfun$16(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///scala/collection/mutable/ArrayOps/filter(scala.Function1)|",
      "|java+method:///org/apache/spark/rdd/RDD/map(scala.Function1,scala.reflect.ClassTag)|",
      "|java+method:///scala/collection/mutable/ArrayOps/nonEmpty()|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/sc()|",
      "|java+method:///org/apache/spark/rdd/RDD/filter(scala.Function1)|"
    ],
    "v2Body": [
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$loadIndexedBam$1/ADAMContext$$anonfun$loadIndexedBam$1(org.bdgenomics.adam.rdd.ADAMContext,org.apache.hadoop.fs.Path)|",
      "|java+method:///scala/Array$/canBuildFrom(scala.reflect.ClassTag)|",
      "|java+method:///org/seqdoop/hadoop_bam/BAMInputFormat/setIntervals(org.apache.hadoop.conf.Configuration,java.util.List)|",
      "|java+method:///scala/collection/mutable/ArrayOps/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/getFsAndFiles(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/hammerlab/genomics/loci/set/LociSet/toHtsJDKIntervals()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$loadIndexedBam$3/ADAMContext$$anonfun$loadIndexedBam$3(org.bdgenomics.adam.rdd.ADAMContext,boolean,org.apache.spark.broadcast.Broadcast)|",
      "|java+method:///scala/collection/JavaConversions$/seqAsJavaList(scala.collection.Seq)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/AlignedReadRDD/AlignedReadRDD(org.apache.spark.rdd.RDD,org.bdgenomics.adam.models.SequenceDictionary,org.bdgenomics.adam.models.RecordGroupDictionary)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$15/ADAMContext$$anonfun$15(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///org/apache/spark/SparkContext/union(scala.collection.Seq,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/spark/SparkContext/broadcast(java.lang.Object,scala.reflect.ClassTag)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///org/bdgenomics/utils/instrumentation/Metrics$/isRecording()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$18/ADAMContext$$anonfun$18(org.bdgenomics.adam.rdd.ADAMContext,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///scala/Predef$/require(boolean,scala.Function0)|",
      "|java+method:///scala/collection/mutable/ArrayOps/reduce(scala.Function2)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$loadIndexedBam$2/ADAMContext$$anonfun$loadIndexedBam$2(org.bdgenomics.adam.rdd.ADAMContext,org.bdgenomics.adam.converters.SAMRecordConverter)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///org/bdgenomics/utils/misc/HadoopUtil$/newJob(org.apache.spark.SparkContext)|",
      "|java+method:///org/hammerlab/genomics/loci/set/LociSet$/apply(org.hammerlab.genomics.loci.parsing.ParsedLoci,scala.collection.immutable.Map)|",
      "|java+method:///org/apache/spark/rdd/MetricsContext$/rddToInstrumentedRDD(org.apache.spark.rdd.RDD,scala.reflect.ClassTag)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$17/ADAMContext$$anonfun$17(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
      "|java+method:///org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.hadoop.mapreduce.JobContext)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+constructor:///org/bdgenomics/adam/converters/SAMRecordConverter/SAMRecordConverter()|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceDictionary/contigLengths()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$16/ADAMContext$$anonfun$16(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///scala/collection/mutable/ArrayOps/filter(scala.Function1)|",
      "|java+method:///org/apache/spark/rdd/RDD/map(scala.Function1,scala.reflect.ClassTag)|",
      "|java+method:///scala/collection/mutable/ArrayOps/nonEmpty()|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/sc()|",
      "|java+method:///org/apache/spark/rdd/RDD/filter(scala.Function1)|"
    ],
    "affectedLib": "org.bdgenomics.utils:utils-misc_2.10:0.2.11",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+constructor:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner/GenomicRegionPartitioner(long,scala.collection.immutable.Map,boolean)|",
    "called": "|java+method:///org/bdgenomics/utils/misc/Logging$class/$init$(org.bdgenomics.utils.misc.Logging)|",
    "v1Body": [
      "|java+method:///scala/Product$class/$init$(scala.Product)|",
      "|java+method:///scala/Predef$/Map()|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner$$anonfun$7/GenomicRegionPartitioner$$anonfun$7(org.bdgenomics.adam.rdd.GenomicRegionPartitioner)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner$$anonfun$8/GenomicRegionPartitioner$$anonfun$8(org.bdgenomics.adam.rdd.GenomicRegionPartitioner)|",
      "|java+method:///scala/collection/Iterable/toSeq()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner/parts()|",
      "|java+method:///scala/collection/Seq/zip(scala.collection.GenIterable,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner/names()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner/lengths()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner$$anonfun$2/GenomicRegionPartitioner$$anonfun$2(org.bdgenomics.adam.rdd.GenomicRegionPartitioner)|",
      "|java+method:///scala/collection/immutable/Map$/apply(scala.collection.Seq)|",
      "|java+method:///org/bdgenomics/utils/misc/Logging$class/$init$(org.bdgenomics.utils.misc.Logging)|",
      "|java+method:///scala/collection/immutable/Map/keys()|",
      "|java+constructor:///org/apache/spark/Partitioner/Partitioner()|",
      "|java+method:///scala/collection/Seq/sortWith(scala.Function2)|",
      "|java+method:///scala/collection/Seq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/collection/Seq/scan(java.lang.Object,scala.Function2,scala.collection.generic.CanBuildFrom)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner$$anonfun$3/GenomicRegionPartitioner$$anonfun$3(org.bdgenomics.adam.rdd.GenomicRegionPartitioner)|"
    ],
    "v2Body": [
      "|java+method:///scala/Product$class/$init$(scala.Product)|",
      "|java+method:///scala/Predef$/Map()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner$$anonfun$6/GenomicRegionPartitioner$$anonfun$6(org.bdgenomics.adam.rdd.GenomicRegionPartitioner)|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///scala/collection/immutable/Vector/sorted(scala.math.Ordering)|",
      "|java+method:///scala/math/Ordering$/ordered(scala.Function1)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner/parts()|",
      "|java+method:///scala/collection/Iterable/toVector()|",
      "|java+method:///scala/collection/Seq/zip(scala.collection.GenIterable,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner/names()|",
      "|java+method:///scala/collection/Seq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/collection/immutable/Map$/apply(scala.collection.Seq)|",
      "|java+method:///org/bdgenomics/utils/misc/Logging$class/$init$(org.bdgenomics.utils.misc.Logging)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner$$anonfun$5/GenomicRegionPartitioner$$anonfun$5(org.bdgenomics.adam.rdd.GenomicRegionPartitioner)|",
      "|java+method:///scala/collection/immutable/Map/keys()|",
      "|java+constructor:///org/apache/spark/Partitioner/Partitioner()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner/lengths()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicRegionPartitioner$$anonfun$1/GenomicRegionPartitioner$$anonfun$1(org.bdgenomics.adam.rdd.GenomicRegionPartitioner)|",
      "|java+method:///org/hammerlab/genomics/reference/package$ContigLengths$/unwrapContigLengths(scala.collection.immutable.Map)|",
      "|java+method:///scala/Predef$/conforms()|",
      "|java+method:///scala/collection/Seq/scan(java.lang.Object,scala.Function2,scala.collection.generic.CanBuildFrom)|"
    ],
    "affectedLib": "org.bdgenomics.utils:utils-misc_2.10:0.2.11",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/loadBam(java.lang.String,htsjdk.samtools.ValidationStringency)|",
    "called": "|java+method:///org/bdgenomics/utils/misc/HadoopUtil$/newJob(org.apache.spark.SparkContext)|",
    "v1Body": [
      "|java+method:///scala/Array$/canBuildFrom(scala.reflect.ClassTag)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$loadBam$1/ADAMContext$$anonfun$loadBam$1(org.bdgenomics.adam.rdd.ADAMContext,org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$12/ADAMContext$$anonfun$12(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///scala/collection/mutable/ArrayOps/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$13/ADAMContext$$anonfun$13(org.bdgenomics.adam.rdd.ADAMContext,org.apache.hadoop.mapreduce.Job)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$loadBam$2/ADAMContext$$anonfun$loadBam$2(org.bdgenomics.adam.rdd.ADAMContext,org.bdgenomics.adam.converters.SAMRecordConverter)|",
      "|java+method:///org/apache/spark/rdd/MetricsContext$/rddToInstrumentedRDD(org.apache.spark.rdd.RDD,scala.reflect.ClassTag)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/AlignedReadRDD/AlignedReadRDD(org.apache.spark.rdd.RDD,org.bdgenomics.adam.models.SequenceDictionary,org.bdgenomics.adam.models.RecordGroupDictionary)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
      "|java+method:///scala/collection/mutable/ArrayOps/flatMap(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///org/apache/spark/SparkContext/union(scala.collection.Seq,scala.reflect.ClassTag)|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/getFsAndFiles(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$11/ADAMContext$$anonfun$11(org.bdgenomics.adam.rdd.ADAMContext,htsjdk.samtools.ValidationStringency)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$10/ADAMContext$$anonfun$10(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///org/bdgenomics/utils/instrumentation/Metrics$/isRecording()|",
      "|java+method:///scala/Predef$/require(boolean,scala.Function0)|",
      "|java+method:///scala/collection/mutable/ArrayOps/reduce(scala.Function2)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///org/bdgenomics/utils/misc/HadoopUtil$/newJob(org.apache.spark.SparkContext)|",
      "|java+method:///org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.hadoop.mapreduce.JobContext)|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+constructor:///org/bdgenomics/adam/converters/SAMRecordConverter/SAMRecordConverter()|",
      "|java+method:///org/apache/spark/rdd/RDD/map(scala.Function1,scala.reflect.ClassTag)|",
      "|java+method:///scala/collection/mutable/ArrayOps/filter(scala.Function1)|",
      "|java+method:///org/apache/spark/SparkContext/newAPIHadoopFile(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Class,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///scala/collection/mutable/ArrayOps/nonEmpty()|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/sc()|"
    ],
    "v2Body": [
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$loadBam$1/ADAMContext$$anonfun$loadBam$1(org.bdgenomics.adam.rdd.ADAMContext,org.apache.hadoop.fs.Path)|",
      "|java+method:///scala/collection/mutable/ArrayOps/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$11/ADAMContext$$anonfun$11(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/getFsAndFiles(org.apache.hadoop.fs.Path)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$14/ADAMContext$$anonfun$14(org.bdgenomics.adam.rdd.ADAMContext,org.apache.hadoop.mapreduce.Job)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$loadBam$2/ADAMContext$$anonfun$loadBam$2(org.bdgenomics.adam.rdd.ADAMContext,org.bdgenomics.adam.converters.SAMRecordConverter)|",
      "|java+method:///org/apache/spark/rdd/MetricsContext$/rddToInstrumentedRDD(org.apache.spark.rdd.RDD,scala.reflect.ClassTag)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/AlignedReadRDD/AlignedReadRDD(org.apache.spark.rdd.RDD,org.bdgenomics.adam.models.SequenceDictionary,org.bdgenomics.adam.models.RecordGroupDictionary)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
      "|java+method:///scala/collection/mutable/ArrayOps/flatMap(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///org/apache/spark/SparkContext/union(scala.collection.Seq,scala.reflect.ClassTag)|",
      "|java+method:///scala/Array$/canBuildFrom(scala.reflect.ClassTag)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$13/ADAMContext$$anonfun$13(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///org/bdgenomics/utils/instrumentation/Metrics$/isRecording()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$12/ADAMContext$$anonfun$12(org.bdgenomics.adam.rdd.ADAMContext,htsjdk.samtools.ValidationStringency)|",
      "|java+method:///scala/Predef$/require(boolean,scala.Function0)|",
      "|java+method:///scala/collection/mutable/ArrayOps/reduce(scala.Function2)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///org/bdgenomics/utils/misc/HadoopUtil$/newJob(org.apache.spark.SparkContext)|",
      "|java+method:///org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.hadoop.mapreduce.JobContext)|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+constructor:///org/bdgenomics/adam/converters/SAMRecordConverter/SAMRecordConverter()|",
      "|java+method:///org/apache/spark/rdd/RDD/map(scala.Function1,scala.reflect.ClassTag)|",
      "|java+method:///scala/collection/mutable/ArrayOps/filter(scala.Function1)|",
      "|java+method:///org/apache/spark/SparkContext/newAPIHadoopFile(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Class,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///scala/collection/mutable/ArrayOps/nonEmpty()|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/sc()|"
    ],
    "affectedLib": "org.bdgenomics.utils:utils-misc_2.10:0.2.11",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+constructor:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/GenomicPositionPartitioner(int,scala.collection.immutable.Map)|",
    "called": "|java+method:///org/bdgenomics/utils/misc/Logging$class/$init$(org.bdgenomics.utils.misc.Logging)|",
    "v1Body": [
      "|java+method:///scala/collection/Iterable/toSeq()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///scala/collection/Seq/zip(scala.collection.GenIterable,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/log()|",
      "|java+method:///scala/collection/Seq/scan(java.lang.Object,scala.Function2,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToLong(java.lang.Object)|",
      "|java+method:///scala/Product$class/$init$(scala.Product)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/cumuls()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner$$anonfun$5/GenomicPositionPartitioner$$anonfun$5(org.bdgenomics.adam.rdd.GenomicPositionPartitioner)|",
      "|java+method:///scala/collection/immutable/Map$/apply(scala.collection.Seq)|",
      "|java+method:///org/bdgenomics/utils/misc/Logging$class/$init$(org.bdgenomics.utils.misc.Logging)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/totalLength()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner$$anonfun$6/GenomicPositionPartitioner$$anonfun$6(org.bdgenomics.adam.rdd.GenomicPositionPartitioner)|",
      "|java+method:///scala/Predef$/Map()|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/lengths()|",
      "|java+method:///scala/collection/immutable/Map/keys()|",
      "|java+constructor:///org/apache/spark/Partitioner/Partitioner()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner$$anonfun$1/GenomicPositionPartitioner$$anonfun$1(org.bdgenomics.adam.rdd.GenomicPositionPartitioner)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///scala/collection/immutable/Map/foreach(scala.Function1)|",
      "|java+method:///scala/collection/Seq/sortWith(scala.Function2)|",
      "|java+method:///scala/collection/Seq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///scala/collection/Seq/sum(scala.math.Numeric)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner$$anonfun$4/GenomicPositionPartitioner$$anonfun$4(org.bdgenomics.adam.rdd.GenomicPositionPartitioner)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/names()|",
      "|java+method:///scala/math/package$/min(long,long)|"
    ],
    "v2Body": [
      "|java+method:///scala/Predef$/Map()|",
      "|java+method:///scala/collection/immutable/Vector/sorted(scala.math.Ordering)|",
      "|java+method:///scala/math/Ordering$/ordered(scala.Function1)|",
      "|java+method:///scala/collection/Seq/zip(scala.collection.GenIterable,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///org/hammerlab/genomics/reference/package$NumLoci$/apply(int)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///org/hammerlab/genomics/reference/package$Locus$/unwrapLocus(org.hammerlab.genomics.reference.package$Locus)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner$$anonfun$2/GenomicPositionPartitioner$$anonfun$2(org.bdgenomics.adam.rdd.GenomicPositionPartitioner)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/log()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/cumuls()|",
      "|java+method:///scala/Product$class/$init$(scala.Product)|",
      "|java+method:///scala/collection/immutable/Map$/apply(scala.collection.Seq)|",
      "|java+method:///org/bdgenomics/utils/misc/Logging$class/$init$(org.bdgenomics.utils.misc.Logging)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/totalLength()|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/lengths()|",
      "|java+method:///scala/collection/Iterable/toVector()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///scala/collection/immutable/Map/keys()|",
      "|java+constructor:///org/apache/spark/Partitioner/Partitioner()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/hammerlab/genomics/reference/package$ContigLengths$/unwrapContigLengths(scala.collection.immutable.Map)|",
      "|java+method:///scala/collection/immutable/Map/foreach(scala.Function1)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner$$anonfun$3/GenomicPositionPartitioner$$anonfun$3(org.bdgenomics.adam.rdd.GenomicPositionPartitioner)|",
      "|java+method:///scala/collection/Seq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/Predef$/conforms()|",
      "|java+method:///scala/collection/Seq/scan(java.lang.Object,scala.Function2,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///scala/collection/Seq/sum(scala.math.Numeric)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner$$anonfun$4/GenomicPositionPartitioner$$anonfun$4(org.bdgenomics.adam.rdd.GenomicPositionPartitioner)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicPositionPartitioner/names()|",
      "|java+method:///scala/math/package$/min(long,long)|"
    ],
    "affectedLib": "org.bdgenomics.utils:utils-misc_2.10:0.2.11",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/TreeRegionJoin$$anonfun$runJoinAndGroupByRight$1/apply()|",
    "called": "|java+method:///org/bdgenomics/utils/interval/array/IntervalArray$/apply(org.apache.spark.rdd.RDD,scala.reflect.ClassTag,scala.reflect.ClassTag)|",
    "v1Body": [
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///org/bdgenomics/adam/rdd/TreeRegionJoin$$anonfun$runJoinAndGroupByRight$1/apply()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/TreeRegionJoin$$anonfun$runJoinAndGroupByRight$1$$anonfun$apply$1/TreeRegionJoin$$anonfun$runJoinAndGroupByRight$1$$anonfun$apply$1(org.bdgenomics.adam.rdd.TreeRegionJoin$$anonfun$runJoinAndGroupByRight$1,org.bdgenomics.utils.intervalarray.IntervalArray)|",
      "|java+method:///org/bdgenomics/utils/intervalarray/IntervalArray$/apply(org.apache.spark.rdd.RDD,scala.reflect.ClassTag,scala.reflect.ClassTag)|",
      "|java+method:///org/bdgenomics/adam/instrumentation/Timers$/RunningMapSideJoin()|",
      "|java+method:///org/apache/spark/rdd/Timer/time(scala.Function0)|"
    ],
    "v2Body": [
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///org/bdgenomics/adam/rdd/TreeRegionJoin$$anonfun$runJoinAndGroupByRight$1/apply()|",
      "|java+method:///org/bdgenomics/utils/interval/array/IntervalArray$/apply(org.apache.spark.rdd.RDD,scala.reflect.ClassTag,scala.reflect.ClassTag)|",
      "|java+method:///org/bdgenomics/adam/rdd/TreeRegionJoin/runJoinAndGroupByRightWithTree(org.bdgenomics.utils.interval.array.IntervalArray,org.apache.spark.rdd.RDD,scala.reflect.ClassTag)|"
    ],
    "affectedLib": "org.bdgenomics.utils:utils-intervalrdd_2.10:0.2.11",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/models/ReferenceRegion/width()|",
    "called": "|java+method:///org/bdgenomics/utils/interval/array/Interval$class/width(org.bdgenomics.utils.interval.array.Interval)|",
    "v1Body": [
      "|java+method:///org/bdgenomics/utils/intervalarray/Interval$class/width(org.bdgenomics.utils.intervalarray.Interval)|"
    ],
    "v2Body": [
      "|java+method:///org/bdgenomics/utils/interval/array/Interval$class/width(org.bdgenomics.utils.interval.array.Interval)|"
    ],
    "affectedLib": "org.bdgenomics.utils:utils-intervalrdd_2.10:0.2.11",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/loadBam(java.lang.String,htsjdk.samtools.ValidationStringency)|",
    "called": "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
    "v1Body": [
      "|java+method:///scala/Array$/canBuildFrom(scala.reflect.ClassTag)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$loadBam$1/ADAMContext$$anonfun$loadBam$1(org.bdgenomics.adam.rdd.ADAMContext,org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$12/ADAMContext$$anonfun$12(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///scala/collection/mutable/ArrayOps/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$13/ADAMContext$$anonfun$13(org.bdgenomics.adam.rdd.ADAMContext,org.apache.hadoop.mapreduce.Job)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$loadBam$2/ADAMContext$$anonfun$loadBam$2(org.bdgenomics.adam.rdd.ADAMContext,org.bdgenomics.adam.converters.SAMRecordConverter)|",
      "|java+method:///org/apache/spark/rdd/MetricsContext$/rddToInstrumentedRDD(org.apache.spark.rdd.RDD,scala.reflect.ClassTag)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/AlignedReadRDD/AlignedReadRDD(org.apache.spark.rdd.RDD,org.bdgenomics.adam.models.SequenceDictionary,org.bdgenomics.adam.models.RecordGroupDictionary)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
      "|java+method:///scala/collection/mutable/ArrayOps/flatMap(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///org/apache/spark/SparkContext/union(scala.collection.Seq,scala.reflect.ClassTag)|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/getFsAndFiles(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$11/ADAMContext$$anonfun$11(org.bdgenomics.adam.rdd.ADAMContext,htsjdk.samtools.ValidationStringency)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$10/ADAMContext$$anonfun$10(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///org/bdgenomics/utils/instrumentation/Metrics$/isRecording()|",
      "|java+method:///scala/Predef$/require(boolean,scala.Function0)|",
      "|java+method:///scala/collection/mutable/ArrayOps/reduce(scala.Function2)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///org/bdgenomics/utils/misc/HadoopUtil$/newJob(org.apache.spark.SparkContext)|",
      "|java+method:///org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.hadoop.mapreduce.JobContext)|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+constructor:///org/bdgenomics/adam/converters/SAMRecordConverter/SAMRecordConverter()|",
      "|java+method:///org/apache/spark/rdd/RDD/map(scala.Function1,scala.reflect.ClassTag)|",
      "|java+method:///scala/collection/mutable/ArrayOps/filter(scala.Function1)|",
      "|java+method:///org/apache/spark/SparkContext/newAPIHadoopFile(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Class,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///scala/collection/mutable/ArrayOps/nonEmpty()|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/sc()|"
    ],
    "v2Body": [
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$loadBam$1/ADAMContext$$anonfun$loadBam$1(org.bdgenomics.adam.rdd.ADAMContext,org.apache.hadoop.fs.Path)|",
      "|java+method:///scala/collection/mutable/ArrayOps/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$11/ADAMContext$$anonfun$11(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/getFsAndFiles(org.apache.hadoop.fs.Path)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$14/ADAMContext$$anonfun$14(org.bdgenomics.adam.rdd.ADAMContext,org.apache.hadoop.mapreduce.Job)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$loadBam$2/ADAMContext$$anonfun$loadBam$2(org.bdgenomics.adam.rdd.ADAMContext,org.bdgenomics.adam.converters.SAMRecordConverter)|",
      "|java+method:///org/apache/spark/rdd/MetricsContext$/rddToInstrumentedRDD(org.apache.spark.rdd.RDD,scala.reflect.ClassTag)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/AlignedReadRDD/AlignedReadRDD(org.apache.spark.rdd.RDD,org.bdgenomics.adam.models.SequenceDictionary,org.bdgenomics.adam.models.RecordGroupDictionary)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
      "|java+method:///scala/collection/mutable/ArrayOps/flatMap(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///org/apache/spark/SparkContext/union(scala.collection.Seq,scala.reflect.ClassTag)|",
      "|java+method:///scala/Array$/canBuildFrom(scala.reflect.ClassTag)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$13/ADAMContext$$anonfun$13(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///org/bdgenomics/utils/instrumentation/Metrics$/isRecording()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$12/ADAMContext$$anonfun$12(org.bdgenomics.adam.rdd.ADAMContext,htsjdk.samtools.ValidationStringency)|",
      "|java+method:///scala/Predef$/require(boolean,scala.Function0)|",
      "|java+method:///scala/collection/mutable/ArrayOps/reduce(scala.Function2)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///org/bdgenomics/utils/misc/HadoopUtil$/newJob(org.apache.spark.SparkContext)|",
      "|java+method:///org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.hadoop.mapreduce.JobContext)|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+constructor:///org/bdgenomics/adam/converters/SAMRecordConverter/SAMRecordConverter()|",
      "|java+method:///org/apache/spark/rdd/RDD/map(scala.Function1,scala.reflect.ClassTag)|",
      "|java+method:///scala/collection/mutable/ArrayOps/filter(scala.Function1)|",
      "|java+method:///org/apache/spark/SparkContext/newAPIHadoopFile(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Class,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///scala/collection/mutable/ArrayOps/nonEmpty()|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/sc()|"
    ],
    "affectedLib": "org.bdgenomics.utils:utils-metrics_2.10:0.2.11",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/loadIndexedVcf(java.lang.String,scala.collection.Iterable,htsjdk.samtools.ValidationStringency,scala.Predef$DummyImplicit)|",
    "called": "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
    "v1Body": [
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/loadVcfMetadata(java.lang.String)|",
      "|java+method:///org/apache/spark/rdd/RDD/flatMap(scala.Function1,scala.reflect.ClassTag)|",
      "|java+method:///scala/Tuple3/_1()|",
      "|java+method:///scala/Tuple3/_2()|",
      "|java+constructor:///org/bdgenomics/adam/converters/VariantContextConverter/VariantContextConverter(scala.Option)|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/cleanAndMixInSupportedLines(scala.collection.Seq,htsjdk.samtools.ValidationStringency)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$loadIndexedVcf$1/ADAMContext$$anonfun$loadIndexedVcf$1(org.bdgenomics.adam.rdd.ADAMContext,org.bdgenomics.adam.converters.VariantContextConverter)|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/readVcfRecords(java.lang.String,scala.Option)|",
      "|java+method:///org/apache/spark/rdd/MetricsContext$/rddToInstrumentedRDD(org.apache.spark.rdd.RDD,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/variant/VariantContextRDD/VariantContextRDD(org.apache.spark.rdd.RDD,org.bdgenomics.adam.models.SequenceDictionary,scala.collection.Seq,scala.collection.Seq)|",
      "|java+method:///scala/Tuple3/_3()|",
      "|java+method:///org/bdgenomics/utils/instrumentation/Metrics$/isRecording()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///scala/Tuple3/Tuple3(java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/loadVcfMetadata(java.lang.String)|",
      "|java+method:///org/apache/spark/rdd/RDD/flatMap(scala.Function1,scala.reflect.ClassTag)|",
      "|java+method:///scala/Tuple3/_1()|",
      "|java+method:///scala/Tuple3/_2()|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/cleanAndMixInSupportedLines(scala.collection.Seq,htsjdk.samtools.ValidationStringency)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$loadIndexedVcf$1/ADAMContext$$anonfun$loadIndexedVcf$1(org.bdgenomics.adam.rdd.ADAMContext,org.bdgenomics.adam.converters.VariantContextConverter)|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/readVcfRecords(java.lang.String,scala.Option)|",
      "|java+method:///org/apache/spark/rdd/MetricsContext$/rddToInstrumentedRDD(org.apache.spark.rdd.RDD,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
      "|java+constructor:///org/bdgenomics/adam/converters/VariantContextConverter/VariantContextConverter(scala.collection.Seq,htsjdk.samtools.ValidationStringency)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/variant/VariantContextRDD/VariantContextRDD(org.apache.spark.rdd.RDD,org.bdgenomics.adam.models.SequenceDictionary,scala.collection.Seq,scala.collection.Seq)|",
      "|java+method:///scala/Tuple3/_3()|",
      "|java+method:///org/bdgenomics/utils/instrumentation/Metrics$/isRecording()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///scala/Tuple3/Tuple3(java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|"
    ],
    "affectedLib": "org.bdgenomics.utils:utils-metrics_2.10:0.2.11",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/loadFasta(java.lang.String,long)|",
    "called": "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
    "v1Body": [
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///org/bdgenomics/adam/rdd/contig/NucleotideContigFragmentRDD$/apply(org.apache.spark.rdd.RDD)|",
      "|java+method:///org/bdgenomics/utils/instrumentation/Metrics$/isRecording()|",
      "|java+method:///org/apache/spark/rdd/MetricsContext$/rddToInstrumentedRDD(org.apache.spark.rdd.RDD,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/spark/rdd/RDD/cache()|",
      "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/sc()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$19/ADAMContext$$anonfun$19(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///org/apache/spark/SparkContext/newAPIHadoopFile$default$5()|",
      "|java+method:///org/bdgenomics/adam/converters/FastaConverter$/apply(org.apache.spark.rdd.RDD,long)|",
      "|java+method:///org/apache/spark/SparkContext/newAPIHadoopFile(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Class,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/spark/rdd/RDD/map(scala.Function1,scala.reflect.ClassTag)|"
    ],
    "v2Body": [
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///org/bdgenomics/adam/rdd/contig/NucleotideContigFragmentRDD$/apply(org.apache.spark.rdd.RDD)|",
      "|java+method:///org/bdgenomics/utils/instrumentation/Metrics$/isRecording()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$20/ADAMContext$$anonfun$20(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///org/apache/spark/rdd/MetricsContext$/rddToInstrumentedRDD(org.apache.spark.rdd.RDD,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/spark/SparkContext/newAPIHadoopFile$default$5()|",
      "|java+method:///org/apache/spark/rdd/RDD/cache()|",
      "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/sc()|",
      "|java+method:///org/bdgenomics/adam/converters/FastaConverter$/apply(org.apache.spark.rdd.RDD,long)|",
      "|java+method:///org/apache/spark/SparkContext/newAPIHadoopFile(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Class,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/spark/rdd/RDD/map(scala.Function1,scala.reflect.ClassTag)|"
    ],
    "affectedLib": "org.bdgenomics.utils:utils-metrics_2.10:0.2.11",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/loadIndexedBam(java.lang.String,org.hammerlab.genomics.loci.parsing.ParsedLoci,boolean,scala.Predef$DummyImplicit)|",
    "called": "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
    "v1Body": [
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$loadIndexedBam$1/ADAMContext$$anonfun$loadIndexedBam$1(org.bdgenomics.adam.rdd.ADAMContext,org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$14/ADAMContext$$anonfun$14(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///scala/Array$/canBuildFrom(scala.reflect.ClassTag)|",
      "|java+method:///org/seqdoop/hadoop_bam/BAMInputFormat/setIntervals(org.apache.hadoop.conf.Configuration,java.util.List)|",
      "|java+method:///scala/collection/mutable/ArrayOps/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/getFsAndFiles(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$loadIndexedBam$3/ADAMContext$$anonfun$loadIndexedBam$3(org.bdgenomics.adam.rdd.ADAMContext,boolean,org.apache.spark.broadcast.Broadcast)|",
      "|java+method:///scala/collection/JavaConversions$/seqAsJavaList(scala.collection.Seq)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/AlignedReadRDD/AlignedReadRDD(org.apache.spark.rdd.RDD,org.bdgenomics.adam.models.SequenceDictionary,org.bdgenomics.adam.models.RecordGroupDictionary)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$15/ADAMContext$$anonfun$15(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///org/apache/spark/SparkContext/union(scala.collection.Seq,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/spark/SparkContext/broadcast(java.lang.Object,scala.reflect.ClassTag)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///org/bdgenomics/utils/instrumentation/Metrics$/isRecording()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$17/ADAMContext$$anonfun$17(org.bdgenomics.adam.rdd.ADAMContext,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/hammerlab/genomics/loci/set/LociSet/toHtsJDKIntervals()|",
      "|java+method:///scala/Predef$/require(boolean,scala.Function0)|",
      "|java+method:///scala/collection/mutable/ArrayOps/reduce(scala.Function2)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$loadIndexedBam$2/ADAMContext$$anonfun$loadIndexedBam$2(org.bdgenomics.adam.rdd.ADAMContext,org.bdgenomics.adam.converters.SAMRecordConverter)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///org/bdgenomics/utils/misc/HadoopUtil$/newJob(org.apache.spark.SparkContext)|",
      "|java+method:///org/hammerlab/genomics/loci/set/LociSet$/apply(org.hammerlab.genomics.loci.parsing.ParsedLoci,scala.collection.immutable.Map)|",
      "|java+method:///org/apache/spark/rdd/MetricsContext$/rddToInstrumentedRDD(org.apache.spark.rdd.RDD,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.hadoop.mapreduce.JobContext)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+constructor:///org/bdgenomics/adam/converters/SAMRecordConverter/SAMRecordConverter()|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceDictionary/contigLengths()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$16/ADAMContext$$anonfun$16(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///scala/collection/mutable/ArrayOps/filter(scala.Function1)|",
      "|java+method:///org/apache/spark/rdd/RDD/map(scala.Function1,scala.reflect.ClassTag)|",
      "|java+method:///scala/collection/mutable/ArrayOps/nonEmpty()|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/sc()|",
      "|java+method:///org/apache/spark/rdd/RDD/filter(scala.Function1)|"
    ],
    "v2Body": [
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$loadIndexedBam$1/ADAMContext$$anonfun$loadIndexedBam$1(org.bdgenomics.adam.rdd.ADAMContext,org.apache.hadoop.fs.Path)|",
      "|java+method:///scala/Array$/canBuildFrom(scala.reflect.ClassTag)|",
      "|java+method:///org/seqdoop/hadoop_bam/BAMInputFormat/setIntervals(org.apache.hadoop.conf.Configuration,java.util.List)|",
      "|java+method:///scala/collection/mutable/ArrayOps/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/getFsAndFiles(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/hammerlab/genomics/loci/set/LociSet/toHtsJDKIntervals()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$loadIndexedBam$3/ADAMContext$$anonfun$loadIndexedBam$3(org.bdgenomics.adam.rdd.ADAMContext,boolean,org.apache.spark.broadcast.Broadcast)|",
      "|java+method:///scala/collection/JavaConversions$/seqAsJavaList(scala.collection.Seq)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/AlignedReadRDD/AlignedReadRDD(org.apache.spark.rdd.RDD,org.bdgenomics.adam.models.SequenceDictionary,org.bdgenomics.adam.models.RecordGroupDictionary)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$15/ADAMContext$$anonfun$15(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///org/apache/spark/SparkContext/union(scala.collection.Seq,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/spark/SparkContext/broadcast(java.lang.Object,scala.reflect.ClassTag)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///org/bdgenomics/utils/instrumentation/Metrics$/isRecording()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$18/ADAMContext$$anonfun$18(org.bdgenomics.adam.rdd.ADAMContext,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///scala/Predef$/require(boolean,scala.Function0)|",
      "|java+method:///scala/collection/mutable/ArrayOps/reduce(scala.Function2)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$loadIndexedBam$2/ADAMContext$$anonfun$loadIndexedBam$2(org.bdgenomics.adam.rdd.ADAMContext,org.bdgenomics.adam.converters.SAMRecordConverter)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///org/bdgenomics/utils/misc/HadoopUtil$/newJob(org.apache.spark.SparkContext)|",
      "|java+method:///org/hammerlab/genomics/loci/set/LociSet$/apply(org.hammerlab.genomics.loci.parsing.ParsedLoci,scala.collection.immutable.Map)|",
      "|java+method:///org/apache/spark/rdd/MetricsContext$/rddToInstrumentedRDD(org.apache.spark.rdd.RDD,scala.reflect.ClassTag)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$17/ADAMContext$$anonfun$17(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
      "|java+method:///org/apache/parquet/hadoop/util/ContextUtil/getConfiguration(org.apache.hadoop.mapreduce.JobContext)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+constructor:///org/bdgenomics/adam/converters/SAMRecordConverter/SAMRecordConverter()|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceDictionary/contigLengths()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$16/ADAMContext$$anonfun$16(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///scala/collection/mutable/ArrayOps/filter(scala.Function1)|",
      "|java+method:///org/apache/spark/rdd/RDD/map(scala.Function1,scala.reflect.ClassTag)|",
      "|java+method:///scala/collection/mutable/ArrayOps/nonEmpty()|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/sc()|",
      "|java+method:///org/apache/spark/rdd/RDD/filter(scala.Function1)|"
    ],
    "affectedLib": "org.bdgenomics.utils:utils-metrics_2.10:0.2.11",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/loadVcf(java.lang.String,htsjdk.samtools.ValidationStringency)|",
    "called": "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
    "v1Body": [
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/loadVcfMetadata(java.lang.String)|",
      "|java+method:///org/apache/spark/rdd/RDD/flatMap(scala.Function1,scala.reflect.ClassTag)|",
      "|java+method:///scala/Tuple3/_1()|",
      "|java+method:///scala/Tuple3/_2()|",
      "|java+constructor:///org/bdgenomics/adam/converters/VariantContextConverter/VariantContextConverter(scala.Option)|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/cleanAndMixInSupportedLines(scala.collection.Seq,htsjdk.samtools.ValidationStringency)|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/readVcfRecords(java.lang.String,scala.Option)|",
      "|java+method:///org/apache/spark/rdd/MetricsContext$/rddToInstrumentedRDD(org.apache.spark.rdd.RDD,scala.reflect.ClassTag)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$loadVcf$1/ADAMContext$$anonfun$loadVcf$1(org.bdgenomics.adam.rdd.ADAMContext,org.bdgenomics.adam.converters.VariantContextConverter)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/variant/VariantContextRDD/VariantContextRDD(org.apache.spark.rdd.RDD,org.bdgenomics.adam.models.SequenceDictionary,scala.collection.Seq,scala.collection.Seq)|",
      "|java+method:///scala/Tuple3/_3()|",
      "|java+method:///org/bdgenomics/utils/instrumentation/Metrics$/isRecording()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///scala/Tuple3/Tuple3(java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/loadVcfMetadata(java.lang.String)|",
      "|java+method:///org/apache/spark/rdd/RDD/flatMap(scala.Function1,scala.reflect.ClassTag)|",
      "|java+method:///scala/Tuple3/_1()|",
      "|java+method:///scala/Tuple3/_2()|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/cleanAndMixInSupportedLines(scala.collection.Seq,htsjdk.samtools.ValidationStringency)|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/readVcfRecords(java.lang.String,scala.Option)|",
      "|java+method:///org/apache/spark/rdd/MetricsContext$/rddToInstrumentedRDD(org.apache.spark.rdd.RDD,scala.reflect.ClassTag)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$loadVcf$1/ADAMContext$$anonfun$loadVcf$1(org.bdgenomics.adam.rdd.ADAMContext,org.bdgenomics.adam.converters.VariantContextConverter)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
      "|java+constructor:///org/bdgenomics/adam/converters/VariantContextConverter/VariantContextConverter(scala.collection.Seq,htsjdk.samtools.ValidationStringency)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/variant/VariantContextRDD/VariantContextRDD(org.apache.spark.rdd.RDD,org.bdgenomics.adam.models.SequenceDictionary,scala.collection.Seq,scala.collection.Seq)|",
      "|java+method:///scala/Tuple3/_3()|",
      "|java+method:///org/bdgenomics/utils/instrumentation/Metrics$/isRecording()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///scala/Tuple3/Tuple3(java.lang.Object,java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.bdgenomics.utils:utils-metrics_2.10:0.2.11",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/ShuffleRegionJoin/partitionAndJoin(org.apache.spark.rdd.RDD,org.apache.spark.rdd.RDD)|",
    "called": "|java+method:///org/apache/spark/rdd/InstrumentedOrderedRDDFunctions/repartitionAndSortWithinPartitions(org.apache.spark.Partitioner)|",
    "v1Body": [
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///org/apache/spark/rdd/MetricsContext$/rddToInstrumentedOrderedRDD(org.apache.spark.rdd.RDD,scala.math.Ordering,scala.reflect.ClassTag,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedOrderedRDDFunctions/repartitionAndSortWithinPartitions(org.apache.spark.Partitioner)|",
      "|java+method:///org/bdgenomics/adam/rdd/ShuffleRegionJoin/bins()|",
      "|java+method:///org/apache/spark/rdd/RDD/flatMap(scala.Function1,scala.reflect.ClassTag)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomeBins/numBins()|",
      "|java+method:///org/apache/spark/broadcast/Broadcast/value()|",
      "|java+method:///scala/math/Ordering$/Tuple2(scala.math.Ordering,scala.math.Ordering)|",
      "|java+method:///org/apache/spark/rdd/RDD/zipPartitions(org.apache.spark.rdd.RDD,boolean,scala.Function2,scala.reflect.ClassTag,scala.reflect.ClassTag)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ShuffleRegionJoin$$anonfun$partitionAndJoin$1/ShuffleRegionJoin$$anonfun$partitionAndJoin$1(org.bdgenomics.adam.rdd.ShuffleRegionJoin)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ShuffleRegionJoin$$anonfun$3/ShuffleRegionJoin$$anonfun$3(org.bdgenomics.adam.rdd.ShuffleRegionJoin)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ShuffleRegionJoin$$anonfun$2/ShuffleRegionJoin$$anonfun$2(org.bdgenomics.adam.rdd.ShuffleRegionJoin)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ManualRegionPartitioner/ManualRegionPartitioner(int)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/orderingForPositions()|"
    ],
    "v2Body": [
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///org/apache/spark/rdd/MetricsContext$/rddToInstrumentedOrderedRDD(org.apache.spark.rdd.RDD,scala.math.Ordering,scala.reflect.ClassTag,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedOrderedRDDFunctions/repartitionAndSortWithinPartitions(org.apache.spark.Partitioner)|",
      "|java+method:///org/bdgenomics/adam/rdd/ShuffleRegionJoin/bins()|",
      "|java+method:///org/apache/spark/rdd/RDD/flatMap(scala.Function1,scala.reflect.ClassTag)|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomeBins/numBins()|",
      "|java+method:///org/apache/spark/broadcast/Broadcast/value()|",
      "|java+method:///scala/math/Ordering$/Tuple2(scala.math.Ordering,scala.math.Ordering)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/regionOrdering()|",
      "|java+method:///org/apache/spark/rdd/RDD/zipPartitions(org.apache.spark.rdd.RDD,boolean,scala.Function2,scala.reflect.ClassTag,scala.reflect.ClassTag)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ShuffleRegionJoin$$anonfun$partitionAndJoin$1/ShuffleRegionJoin$$anonfun$partitionAndJoin$1(org.bdgenomics.adam.rdd.ShuffleRegionJoin)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ManualRegionPartitioner/ManualRegionPartitioner(int)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ShuffleRegionJoin$$anonfun$3/ShuffleRegionJoin$$anonfun$3(org.bdgenomics.adam.rdd.ShuffleRegionJoin)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ShuffleRegionJoin$$anonfun$2/ShuffleRegionJoin$$anonfun$2(org.bdgenomics.adam.rdd.ShuffleRegionJoin)|"
    ],
    "affectedLib": "org.bdgenomics.utils:utils-metrics_2.10:0.2.11",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/loadBed(java.lang.String,scala.Option,htsjdk.samtools.ValidationStringency)|",
    "called": "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
    "v1Body": [
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///org/apache/spark/rdd/RDD/flatMap(scala.Function1,scala.reflect.ClassTag)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$22/ADAMContext$$anonfun$22(org.bdgenomics.adam.rdd.ADAMContext,htsjdk.samtools.ValidationStringency)|",
      "|java+method:///org/bdgenomics/utils/instrumentation/Metrics$/isRecording()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$3/ADAMContext$$anonfun$3(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///org/apache/spark/SparkContext/textFile(java.lang.String,int)|",
      "|java+method:///org/bdgenomics/adam/rdd/feature/FeatureRDD$/apply(org.apache.spark.rdd.RDD)|",
      "|java+method:///org/apache/spark/rdd/MetricsContext$/rddToInstrumentedRDD(org.apache.spark.rdd.RDD,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/sc()|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToInt(java.lang.Object)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|"
    ],
    "v2Body": [
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///org/apache/spark/rdd/RDD/flatMap(scala.Function1,scala.reflect.ClassTag)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$3/ADAMContext$$anonfun$3(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///org/apache/spark/SparkContext/textFile(java.lang.String,int)|",
      "|java+method:///org/bdgenomics/adam/rdd/feature/FeatureRDD$/apply(org.apache.spark.rdd.RDD)|",
      "|java+method:///org/apache/spark/rdd/MetricsContext$/rddToInstrumentedRDD(org.apache.spark.rdd.RDD,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/sc()|",
      "|java+method:///org/bdgenomics/utils/instrumentation/Metrics$/isRecording()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$23/ADAMContext$$anonfun$23(org.bdgenomics.adam.rdd.ADAMContext,htsjdk.samtools.ValidationStringency)|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToInt(java.lang.Object)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|"
    ],
    "affectedLib": "org.bdgenomics.utils:utils-metrics_2.10:0.2.11",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/loadIntervalList(java.lang.String,scala.Option,htsjdk.samtools.ValidationStringency)|",
    "called": "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
    "v1Body": [
      "|java+method:///org/apache/spark/rdd/RDD/flatMap(scala.Function1,scala.reflect.ClassTag)|",
      "|java+method:///scala/collection/immutable/Vector$/canBuildFrom()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$5/ADAMContext$$anonfun$5(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$24/ADAMContext$$anonfun$24(org.bdgenomics.adam.rdd.ADAMContext,htsjdk.samtools.ValidationStringency)|",
      "|java+method:///org/apache/spark/SparkContext/textFile(java.lang.String,int)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceDictionary$/apply(scala.collection.Seq)|",
      "|java+method:///scala/collection/TraversableOnce/toMap(scala.Predef$$less$colon$less)|",
      "|java+method:///org/apache/spark/rdd/MetricsContext$/rddToInstrumentedRDD(org.apache.spark.rdd.RDD,scala.reflect.ClassTag)|",
      "|java+method:///scala/collection/immutable/Vector/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/sc()|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$26/ADAMContext$$anonfun$26(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///org/apache/spark/rdd/RDD/collect()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$25/ADAMContext$$anonfun$25(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceDictionary/records()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/bdgenomics/utils/instrumentation/Metrics$/isRecording()|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToInt(java.lang.Object)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/feature/FeatureRDD/FeatureRDD(org.apache.spark.rdd.RDD,org.bdgenomics.adam.models.SequenceDictionary)|",
      "|java+method:///scala/Predef$/conforms()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$27/ADAMContext$$anonfun$27(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///org/apache/spark/rdd/RDD/map(scala.Function1,scala.reflect.ClassTag)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/spark/rdd/RDD/collect()|",
      "|java+method:///org/apache/spark/rdd/RDD/flatMap(scala.Function1,scala.reflect.ClassTag)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$5/ADAMContext$$anonfun$5(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$25/ADAMContext$$anonfun$25(org.bdgenomics.adam.rdd.ADAMContext,htsjdk.samtools.ValidationStringency)|",
      "|java+method:///org/apache/spark/SparkContext/textFile(java.lang.String,int)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceDictionary$/apply(scala.collection.Seq)|",
      "|java+method:///org/apache/spark/rdd/MetricsContext$/rddToInstrumentedRDD(org.apache.spark.rdd.RDD,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/feature/FeatureRDD/FeatureRDD(org.apache.spark.rdd.RDD,org.bdgenomics.adam.models.SequenceDictionary)|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/sc()|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$26/ADAMContext$$anonfun$26(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/bdgenomics/utils/instrumentation/Metrics$/isRecording()|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToInt(java.lang.Object)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$27/ADAMContext$$anonfun$27(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///org/apache/spark/rdd/RDD/map(scala.Function1,scala.reflect.ClassTag)|"
    ],
    "affectedLib": "org.bdgenomics.utils:utils-metrics_2.10:0.2.11",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/loadNarrowPeak(java.lang.String,scala.Option,htsjdk.samtools.ValidationStringency)|",
    "called": "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
    "v1Body": [
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///org/apache/spark/rdd/RDD/flatMap(scala.Function1,scala.reflect.ClassTag)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$4/ADAMContext$$anonfun$4(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///org/apache/spark/SparkContext/textFile(java.lang.String,int)|",
      "|java+method:///org/bdgenomics/adam/rdd/feature/FeatureRDD$/apply(org.apache.spark.rdd.RDD)|",
      "|java+method:///org/apache/spark/rdd/MetricsContext$/rddToInstrumentedRDD(org.apache.spark.rdd.RDD,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/sc()|",
      "|java+method:///org/bdgenomics/utils/instrumentation/Metrics$/isRecording()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$23/ADAMContext$$anonfun$23(org.bdgenomics.adam.rdd.ADAMContext,htsjdk.samtools.ValidationStringency)|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToInt(java.lang.Object)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|"
    ],
    "v2Body": [
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///org/apache/spark/rdd/RDD/flatMap(scala.Function1,scala.reflect.ClassTag)|",
      "|java+method:///org/bdgenomics/utils/instrumentation/Metrics$/isRecording()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$4/ADAMContext$$anonfun$4(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$24/ADAMContext$$anonfun$24(org.bdgenomics.adam.rdd.ADAMContext,htsjdk.samtools.ValidationStringency)|",
      "|java+method:///org/apache/spark/SparkContext/textFile(java.lang.String,int)|",
      "|java+method:///org/bdgenomics/adam/rdd/feature/FeatureRDD$/apply(org.apache.spark.rdd.RDD)|",
      "|java+method:///org/apache/spark/rdd/MetricsContext$/rddToInstrumentedRDD(org.apache.spark.rdd.RDD,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/sc()|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToInt(java.lang.Object)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|"
    ],
    "affectedLib": "org.bdgenomics.utils:utils-metrics_2.10:0.2.11",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/loadGtf(java.lang.String,scala.Option,htsjdk.samtools.ValidationStringency)|",
    "called": "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
    "v1Body": [
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///org/apache/spark/rdd/RDD/flatMap(scala.Function1,scala.reflect.ClassTag)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$21/ADAMContext$$anonfun$21(org.bdgenomics.adam.rdd.ADAMContext,htsjdk.samtools.ValidationStringency)|",
      "|java+method:///org/bdgenomics/utils/instrumentation/Metrics$/isRecording()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$2/ADAMContext$$anonfun$2(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///org/apache/spark/SparkContext/textFile(java.lang.String,int)|",
      "|java+method:///org/bdgenomics/adam/rdd/feature/FeatureRDD$/apply(org.apache.spark.rdd.RDD)|",
      "|java+method:///org/apache/spark/rdd/MetricsContext$/rddToInstrumentedRDD(org.apache.spark.rdd.RDD,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/sc()|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToInt(java.lang.Object)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|"
    ],
    "v2Body": [
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///org/apache/spark/rdd/RDD/flatMap(scala.Function1,scala.reflect.ClassTag)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$22/ADAMContext$$anonfun$22(org.bdgenomics.adam.rdd.ADAMContext,htsjdk.samtools.ValidationStringency)|",
      "|java+method:///org/bdgenomics/utils/instrumentation/Metrics$/isRecording()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$2/ADAMContext$$anonfun$2(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///org/apache/spark/SparkContext/textFile(java.lang.String,int)|",
      "|java+method:///org/bdgenomics/adam/rdd/feature/FeatureRDD$/apply(org.apache.spark.rdd.RDD)|",
      "|java+method:///org/apache/spark/rdd/MetricsContext$/rddToInstrumentedRDD(org.apache.spark.rdd.RDD,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/sc()|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToInt(java.lang.Object)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|"
    ],
    "affectedLib": "org.bdgenomics.utils:utils-metrics_2.10:0.2.11",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/loadGff3(java.lang.String,scala.Option,htsjdk.samtools.ValidationStringency)|",
    "called": "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
    "v1Body": [
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///org/bdgenomics/utils/instrumentation/Metrics$/isRecording()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$1/ADAMContext$$anonfun$1(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///org/apache/spark/SparkContext/textFile(java.lang.String,int)|",
      "|java+method:///org/bdgenomics/adam/rdd/feature/FeatureRDD$/apply(org.apache.spark.rdd.RDD)|",
      "|java+method:///org/apache/spark/rdd/MetricsContext$/rddToInstrumentedRDD(org.apache.spark.rdd.RDD,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/sc()|",
      "|java+method:///org/apache/spark/rdd/RDD/flatMap(scala.Function1,scala.reflect.ClassTag)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$20/ADAMContext$$anonfun$20(org.bdgenomics.adam.rdd.ADAMContext,htsjdk.samtools.ValidationStringency)|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToInt(java.lang.Object)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|"
    ],
    "v2Body": [
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///org/apache/spark/rdd/RDD/flatMap(scala.Function1,scala.reflect.ClassTag)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$21/ADAMContext$$anonfun$21(org.bdgenomics.adam.rdd.ADAMContext,htsjdk.samtools.ValidationStringency)|",
      "|java+method:///org/bdgenomics/utils/instrumentation/Metrics$/isRecording()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/ADAMContext$$anonfun$1/ADAMContext$$anonfun$1(org.bdgenomics.adam.rdd.ADAMContext)|",
      "|java+method:///org/apache/spark/SparkContext/textFile(java.lang.String,int)|",
      "|java+method:///org/bdgenomics/adam/rdd/feature/FeatureRDD$/apply(org.apache.spark.rdd.RDD)|",
      "|java+method:///org/apache/spark/rdd/MetricsContext$/rddToInstrumentedRDD(org.apache.spark.rdd.RDD,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedRDDFunctions/instrument()|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext/sc()|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToInt(java.lang.Object)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|"
    ],
    "affectedLib": "org.bdgenomics.utils:utils-metrics_2.10:0.2.11",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/read/AlignmentRecordRDD$class/toCoverage(org.bdgenomics.adam.rdd.read.AlignmentRecordRDD,boolean)|",
    "called": "|java+method:///org/apache/spark/rdd/InstrumentedOrderedRDDFunctions/sortByKey$default$2()|",
    "v1Body": [
      "|java+method:///scala/reflect/ClassTag$/Int()|",
      "|java+method:///org/apache/spark/rdd/RDD/flatMap(scala.Function1,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/spark/rdd/MetricsContext$/rddToInstrumentedPairRDD(org.apache.spark.rdd.RDD,scala.reflect.ClassTag,scala.reflect.ClassTag,scala.math.Ordering)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedOrderedRDDFunctions/sortByKey$default$1()|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext$/rddToADAMRDD(org.apache.spark.rdd.RDD,scala.Function1,scala.reflect.Manifest)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/feature/CoverageRDD/CoverageRDD(org.apache.spark.rdd.RDD,org.bdgenomics.adam.models.SequenceDictionary)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedPairRDDFunctions/reduceByKey(scala.Function2)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/AlignmentRecordRDD$$anonfun$4/AlignmentRecordRDD$$anonfun$4(org.bdgenomics.adam.rdd.read.AlignmentRecordRDD)|",
      "|java+method:///org/apache/spark/rdd/RDD/cache()|",
      "|java+method:///org/apache/spark/rdd/RDD/map(scala.Function1,scala.reflect.ClassTag)|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///org/bdgenomics/adam/rdd/ConcreteADAMRDDFunctions/rdd()|",
      "|java+method:///scala/reflect/ManifestFactory$/classType(java.lang.Class)|",
      "|java+method:///org/apache/spark/rdd/MetricsContext$/rddToInstrumentedOrderedRDD(org.apache.spark.rdd.RDD,scala.math.Ordering,scala.reflect.ClassTag,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedOrderedRDDFunctions/sortByKey$default$2()|",
      "|java+method:///org/apache/spark/rdd/RDD/unpersist(boolean)|",
      "|java+method:///org/bdgenomics/adam/rdd/feature/CoverageRDD/collapse()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRDD/rdd()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRDD/sequences()|",
      "|java+method:///org/apache/spark/rdd/InstrumentedOrderedRDDFunctions/sortByKey(boolean,int)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/AlignmentRecordRDD$$anonfun$3/AlignmentRecordRDD$$anonfun$3(org.bdgenomics.adam.rdd.read.AlignmentRecordRDD)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/orderingForPositions()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/AlignmentRecordRDD$$anonfun$2/AlignmentRecordRDD$$anonfun$2(org.bdgenomics.adam.rdd.read.AlignmentRecordRDD)|",
      "|java+method:///scala/Predef$/conforms()|",
      "|java+method:///org/apache/spark/rdd/RDD/unpersist$default$1()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/AlignmentRecordRDD$$anonfun$1/AlignmentRecordRDD$$anonfun$1(org.bdgenomics.adam.rdd.read.AlignmentRecordRDD)|",
      "|java+method:///org/apache/spark/rdd/RDD/filter(scala.Function1)|"
    ],
    "v2Body": [
      "|java+method:///scala/reflect/ClassTag$/Int()|",
      "|java+method:///org/apache/spark/rdd/RDD/flatMap(scala.Function1,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/spark/rdd/MetricsContext$/rddToInstrumentedPairRDD(org.apache.spark.rdd.RDD,scala.reflect.ClassTag,scala.reflect.ClassTag,scala.math.Ordering)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedOrderedRDDFunctions/sortByKey$default$1()|",
      "|java+method:///org/bdgenomics/adam/rdd/ADAMContext$/rddToADAMRDD(org.apache.spark.rdd.RDD,scala.Function1,scala.reflect.Manifest)|",
      "|java+method:///org/bdgenomics/adam/models/ReferenceRegion$/regionOrdering()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/feature/CoverageRDD/CoverageRDD(org.apache.spark.rdd.RDD,org.bdgenomics.adam.models.SequenceDictionary)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedPairRDDFunctions/reduceByKey(scala.Function2)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/AlignmentRecordRDD$$anonfun$4/AlignmentRecordRDD$$anonfun$4(org.bdgenomics.adam.rdd.read.AlignmentRecordRDD)|",
      "|java+method:///org/apache/spark/rdd/RDD/cache()|",
      "|java+method:///org/apache/spark/rdd/RDD/map(scala.Function1,scala.reflect.ClassTag)|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///org/bdgenomics/adam/rdd/ConcreteADAMRDDFunctions/rdd()|",
      "|java+method:///scala/reflect/ManifestFactory$/classType(java.lang.Class)|",
      "|java+method:///org/apache/spark/rdd/MetricsContext$/rddToInstrumentedOrderedRDD(org.apache.spark.rdd.RDD,scala.math.Ordering,scala.reflect.ClassTag,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedOrderedRDDFunctions/sortByKey$default$2()|",
      "|java+method:///org/apache/spark/rdd/RDD/unpersist(boolean)|",
      "|java+method:///org/bdgenomics/adam/rdd/feature/CoverageRDD/collapse()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRDD/rdd()|",
      "|java+method:///org/bdgenomics/adam/rdd/GenomicRDD/sequences()|",
      "|java+method:///org/apache/spark/rdd/InstrumentedOrderedRDDFunctions/sortByKey(boolean,int)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/AlignmentRecordRDD$$anonfun$3/AlignmentRecordRDD$$anonfun$3(org.bdgenomics.adam.rdd.read.AlignmentRecordRDD)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/AlignmentRecordRDD$$anonfun$2/AlignmentRecordRDD$$anonfun$2(org.bdgenomics.adam.rdd.read.AlignmentRecordRDD)|",
      "|java+method:///scala/Predef$/conforms()|",
      "|java+method:///org/apache/spark/rdd/RDD/unpersist$default$1()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/AlignmentRecordRDD$$anonfun$1/AlignmentRecordRDD$$anonfun$1(org.bdgenomics.adam.rdd.read.AlignmentRecordRDD)|",
      "|java+method:///org/apache/spark/rdd/RDD/filter(scala.Function1)|"
    ],
    "affectedLib": "org.bdgenomics.utils:utils-metrics_2.10:0.2.11",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels/realignIndels(org.apache.spark.rdd.RDD)|",
    "called": "|java+method:///org/apache/spark/rdd/InstrumentedOrderedRDDFunctions/sortByKey$default$2()|",
    "v1Body": [
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$$anonfun$19/RealignIndels$$anonfun$19(org.bdgenomics.adam.rdd.read.realignment.RealignIndels)|",
      "|java+method:///org/apache/spark/rdd/RDD/flatMap(scala.Function1,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/spark/rdd/RDD/keyBy(scala.Function1)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedOrderedRDDFunctions/sortByKey$default$1()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels/maxTargetSize()|",
      "|java+method:///org/bdgenomics/adam/models/ReferencePosition$/orderingForPositions()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$$anonfun$22/RealignIndels$$anonfun$22(org.bdgenomics.adam.rdd.read.realignment.RealignIndels)|",
      "|java+method:///org/bdgenomics/adam/rdd/read/realignment/RealignmentTargetFinder$/apply(org.apache.spark.rdd.RDD,int,int)|",
      "|java+method:///org/apache/spark/rdd/RDD/cache()|",
      "|java+method:///org/apache/spark/rdd/InstrumentedOrderedRDDFunctions/sortByKey(boolean,int)|",
      "|java+method:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels/log()|",
      "|java+method:///org/apache/spark/rdd/RDD/map(scala.Function1,scala.reflect.ClassTag)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$$anonfun$18/RealignIndels$$anonfun$18(org.bdgenomics.adam.rdd.read.realignment.RealignIndels)|",
      "|java+method:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels/maxIndelSize()|",
      "|java+method:///org/apache/spark/rdd/MetricsContext$/rddToInstrumentedOrderedRDD(org.apache.spark.rdd.RDD,scala.math.Ordering,scala.reflect.ClassTag,scala.reflect.ClassTag)|",
      "|java+method:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$/mapTargets(org.apache.spark.rdd.RDD,scala.collection.immutable.TreeSet)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedOrderedRDDFunctions/sortByKey$default$2()|",
      "|java+method:///org/apache/spark/rdd/RDD/unpersist(boolean)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$$anonfun$20/RealignIndels$$anonfun$20(org.bdgenomics.adam.rdd.read.realignment.RealignIndels)|",
      "|java+method:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels/dataIsSorted()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$$anonfun$realignIndels$1/RealignIndels$$anonfun$realignIndels$1(org.bdgenomics.adam.rdd.read.realignment.RealignIndels)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$$anonfun$21/RealignIndels$$anonfun$21(org.bdgenomics.adam.rdd.read.realignment.RealignIndels)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$$anonfun$realignIndels$2/RealignIndels$$anonfun$realignIndels$2(org.bdgenomics.adam.rdd.read.realignment.RealignIndels)|",
      "|java+method:///scala/collection/immutable/TreeSet/isEmpty()|",
      "|java+method:///org/apache/spark/rdd/RDD/unpersist$default$1()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$$anonfun$17/RealignIndels$$anonfun$17(org.bdgenomics.adam.rdd.read.realignment.RealignIndels)|",
      "|java+method:///org/apache/spark/rdd/RDD/filter(scala.Function1)|"
    ],
    "v2Body": [
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$$anonfun$19/RealignIndels$$anonfun$19(org.bdgenomics.adam.rdd.read.realignment.RealignIndels)|",
      "|java+method:///org/apache/spark/rdd/RDD/flatMap(scala.Function1,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/spark/rdd/RDD/keyBy(scala.Function1)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedOrderedRDDFunctions/sortByKey$default$1()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels/maxTargetSize()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$$anonfun$22/RealignIndels$$anonfun$22(org.bdgenomics.adam.rdd.read.realignment.RealignIndels)|",
      "|java+method:///org/bdgenomics/adam/rdd/read/realignment/RealignmentTargetFinder$/apply(org.apache.spark.rdd.RDD,int,int)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedOrderedRDDFunctions/sortByKey(boolean,int)|",
      "|java+method:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels/log()|",
      "|java+method:///org/apache/spark/rdd/RDD/map(scala.Function1,scala.reflect.ClassTag)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$$anonfun$18/RealignIndels$$anonfun$18(org.bdgenomics.adam.rdd.read.realignment.RealignIndels)|",
      "|java+method:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels/maxIndelSize()|",
      "|java+method:///org/apache/spark/rdd/MetricsContext$/rddToInstrumentedOrderedRDD(org.apache.spark.rdd.RDD,scala.math.Ordering,scala.reflect.ClassTag,scala.reflect.ClassTag)|",
      "|java+method:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$/mapTargets(org.apache.spark.rdd.RDD,scala.collection.immutable.TreeSet)|",
      "|java+method:///org/apache/spark/rdd/InstrumentedOrderedRDDFunctions/sortByKey$default$2()|",
      "|java+method:///org/apache/spark/rdd/RDD/unpersist(boolean)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$$anonfun$20/RealignIndels$$anonfun$20(org.bdgenomics.adam.rdd.read.realignment.RealignIndels)|",
      "|java+method:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels/dataIsSorted()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$$anonfun$realignIndels$1/RealignIndels$$anonfun$realignIndels$1(org.bdgenomics.adam.rdd.read.realignment.RealignIndels)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$$anonfun$21/RealignIndels$$anonfun$21(org.bdgenomics.adam.rdd.read.realignment.RealignIndels)|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$$anonfun$realignIndels$2/RealignIndels$$anonfun$realignIndels$2(org.bdgenomics.adam.rdd.read.realignment.RealignIndels)|",
      "|java+method:///org/bdgenomics/adam/models/ReferencePosition$/positionOrdering()|",
      "|java+method:///org/apache/spark/rdd/RDD/cache()|",
      "|java+method:///scala/collection/immutable/TreeSet/isEmpty()|",
      "|java+method:///org/apache/spark/rdd/RDD/unpersist$default$1()|",
      "|java+constructor:///org/bdgenomics/adam/rdd/read/realignment/RealignIndels$$anonfun$17/RealignIndels$$anonfun$17(org.bdgenomics.adam.rdd.read.realignment.RealignIndels)|",
      "|java+method:///org/apache/spark/rdd/RDD/filter(scala.Function1)|"
    ],
    "affectedLib": "org.bdgenomics.utils:utils-metrics_2.10:0.2.11",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/models/SequenceRecord/toADAMContig()|",
    "called": "|java+method:///org/bdgenomics/formats/avro/Contig/newBuilder()|",
    "v1Body": [
      "|java+method:///org/bdgenomics/formats/avro/Contig/newBuilder()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/name()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/url()|",
      "|java+method:///org/bdgenomics/formats/avro/Contig$Builder/setContigLength(java.lang.Long)|",
      "|java+method:///org/bdgenomics/formats/avro/Contig$Builder/build()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/species()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/md5()|",
      "|java+method:///org/bdgenomics/formats/avro/Contig$Builder/setContigName(java.lang.String)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/assembly()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/length()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/referenceIndex()|",
      "|java+method:///scala/Option/foreach(scala.Function1)|",
      "|java+constructor:///org/bdgenomics/adam/models/SequenceRecord$$anonfun$toADAMContig$3/SequenceRecord$$anonfun$toADAMContig$3(org.bdgenomics.adam.models.SequenceRecord,org.bdgenomics.formats.avro.Contig$Builder)|",
      "|java+constructor:///org/bdgenomics/adam/models/SequenceRecord$$anonfun$toADAMContig$4/SequenceRecord$$anonfun$toADAMContig$4(org.bdgenomics.adam.models.SequenceRecord,org.bdgenomics.formats.avro.Contig$Builder)|",
      "|java+constructor:///org/bdgenomics/adam/models/SequenceRecord$$anonfun$toADAMContig$5/SequenceRecord$$anonfun$toADAMContig$5(org.bdgenomics.adam.models.SequenceRecord,org.bdgenomics.formats.avro.Contig$Builder)|",
      "|java+constructor:///org/bdgenomics/adam/models/SequenceRecord$$anonfun$toADAMContig$1/SequenceRecord$$anonfun$toADAMContig$1(org.bdgenomics.adam.models.SequenceRecord,org.bdgenomics.formats.avro.Contig$Builder)|",
      "|java+constructor:///org/bdgenomics/adam/models/SequenceRecord$$anonfun$toADAMContig$2/SequenceRecord$$anonfun$toADAMContig$2(org.bdgenomics.adam.models.SequenceRecord,org.bdgenomics.formats.avro.Contig$Builder)|",
      "|java+method:///scala/Predef$/long2Long(long)|"
    ],
    "v2Body": [
      "|java+method:///org/bdgenomics/formats/avro/Contig/newBuilder()|",
      "|java+method:///org/hammerlab/genomics/reference/ContigName/name()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/name()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/url()|",
      "|java+method:///org/bdgenomics/formats/avro/Contig$Builder/setContigLength(java.lang.Long)|",
      "|java+method:///org/bdgenomics/formats/avro/Contig$Builder/build()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/species()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/md5()|",
      "|java+method:///org/bdgenomics/formats/avro/Contig$Builder/setContigName(java.lang.String)|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/assembly()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/length()|",
      "|java+method:///org/bdgenomics/adam/models/SequenceRecord/referenceIndex()|",
      "|java+method:///scala/Option/foreach(scala.Function1)|",
      "|java+constructor:///org/bdgenomics/adam/models/SequenceRecord$$anonfun$toADAMContig$3/SequenceRecord$$anonfun$toADAMContig$3(org.bdgenomics.adam.models.SequenceRecord,org.bdgenomics.formats.avro.Contig$Builder)|",
      "|java+constructor:///org/bdgenomics/adam/models/SequenceRecord$$anonfun$toADAMContig$4/SequenceRecord$$anonfun$toADAMContig$4(org.bdgenomics.adam.models.SequenceRecord,org.bdgenomics.formats.avro.Contig$Builder)|",
      "|java+constructor:///org/bdgenomics/adam/models/SequenceRecord$$anonfun$toADAMContig$5/SequenceRecord$$anonfun$toADAMContig$5(org.bdgenomics.adam.models.SequenceRecord,org.bdgenomics.formats.avro.Contig$Builder)|",
      "|java+constructor:///org/bdgenomics/adam/models/SequenceRecord$$anonfun$toADAMContig$1/SequenceRecord$$anonfun$toADAMContig$1(org.bdgenomics.adam.models.SequenceRecord,org.bdgenomics.formats.avro.Contig$Builder)|",
      "|java+constructor:///org/bdgenomics/adam/models/SequenceRecord$$anonfun$toADAMContig$2/SequenceRecord$$anonfun$toADAMContig$2(org.bdgenomics.adam.models.SequenceRecord,org.bdgenomics.formats.avro.Contig$Builder)|",
      "|java+method:///scala/Predef$/long2Long(long)|",
      "|java+method:///org/hammerlab/genomics/reference/package$Locus/num()|"
    ],
    "affectedLib": "org.bdgenomics.bdg-formats:bdg-formats:0.10.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/models/Coverage/toFeature()|",
    "called": "|java+method:///org/bdgenomics/formats/avro/Feature$Builder/setStart(java.lang.Long)|",
    "v1Body": [
      "|java+method:///org/bdgenomics/formats/avro/Feature/newBuilder()|",
      "|java+method:///scala/Predef$/double2Double(double)|",
      "|java+method:///org/bdgenomics/adam/models/Coverage/end()|",
      "|java+method:///org/bdgenomics/adam/models/Coverage/start()|",
      "|java+method:///org/bdgenomics/formats/avro/Feature$Builder/build()|",
      "|java+method:///org/bdgenomics/formats/avro/Feature$Builder/setEnd(java.lang.Long)|",
      "|java+method:///org/bdgenomics/formats/avro/Feature$Builder/setScore(java.lang.Double)|",
      "|java+method:///scala/Predef$/long2Long(long)|",
      "|java+method:///org/bdgenomics/adam/models/Coverage/contigName()|",
      "|java+method:///org/bdgenomics/adam/models/Coverage/count()|",
      "|java+method:///org/bdgenomics/formats/avro/Feature$Builder/setContigName(java.lang.String)|",
      "|java+method:///org/bdgenomics/formats/avro/Feature$Builder/setStart(java.lang.Long)|"
    ],
    "v2Body": [
      "|java+method:///org/bdgenomics/formats/avro/Feature/newBuilder()|",
      "|java+method:///org/hammerlab/genomics/reference/ContigName/name()|",
      "|java+method:///scala/Predef$/double2Double(double)|",
      "|java+method:///org/bdgenomics/adam/models/Coverage/end()|",
      "|java+method:///org/bdgenomics/adam/models/Coverage/start()|",
      "|java+method:///org/bdgenomics/formats/avro/Feature$Builder/build()|",
      "|java+method:///org/bdgenomics/formats/avro/Feature$Builder/setEnd(java.lang.Long)|",
      "|java+method:///org/bdgenomics/formats/avro/Feature$Builder/setScore(java.lang.Double)|",
      "|java+method:///scala/Predef$/long2Long(long)|",
      "|java+method:///org/bdgenomics/adam/models/Coverage/contigName()|",
      "|java+method:///org/bdgenomics/adam/models/Coverage/count()|",
      "|java+method:///org/bdgenomics/formats/avro/Feature$Builder/setContigName(java.lang.String)|",
      "|java+method:///org/bdgenomics/formats/avro/Feature$Builder/setStart(java.lang.Long)|"
    ],
    "affectedLib": "org.bdgenomics.bdg-formats:bdg-formats:0.10.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.hammerlab.adam:core_spark1_2.10:0.20.4",
    "coordinatesV2": "org.hammerlab.adam:core_spark1_2.10:0.21.1",
    "caller": "|java+method:///org/bdgenomics/adam/util/TwoBitFileSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)|",
    "called": "|java+constructor:///org/bdgenomics/utils/io/ByteArrayByteAccess/ByteArrayByteAccess(byte%5B%5D)|",
    "v1Body": [
      "|java+method:///com/esotericsoftware/kryo/io/Input/readBytes(int)|",
      "|java+constructor:///org/bdgenomics/adam/util/TwoBitFile/TwoBitFile(org.bdgenomics.utils.io.ByteAccess)|",
      "|java+constructor:///org/bdgenomics/utils/io/ByteArrayByteAccess/ByteArrayByteAccess(byte%5B%5D)|",
      "|java+method:///org/bdgenomics/adam/util/TwoBitFileSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)|",
      "|java+method:///com/esotericsoftware/kryo/io/Input/readInt()|"
    ],
    "v2Body": [
      "|java+constructor:///org/bdgenomics/adam/util/TwoBitFile/TwoBitFile(org.bdgenomics.utils.io.ByteAccess,org.hammerlab.genomics.reference.ContigName$Factory)|",
      "|java+method:///com/esotericsoftware/kryo/io/Input/readBytes(int)|",
      "|java+constructor:///org/bdgenomics/utils/io/ByteArrayByteAccess/ByteArrayByteAccess(byte%5B%5D)|",
      "|java+method:///org/bdgenomics/adam/util/TwoBitFileSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)|",
      "|java+method:///com/esotericsoftware/kryo/io/Input/readInt()|"
    ],
    "affectedLib": "org.bdgenomics.utils:utils-io_2.10:0.2.11",
    "change": "UPDATED"
  }
]