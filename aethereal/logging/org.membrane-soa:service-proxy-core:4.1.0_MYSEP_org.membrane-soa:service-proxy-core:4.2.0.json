[
  {
    "coordinatesV1": "org.membrane-soa:service-proxy-core:4.1.0",
    "coordinatesV2": "org.membrane-soa:service-proxy-core:4.2.0",
    "caller": "|java+method:///com/predic8/membrane/core/interceptor/oauth2/GoogleAuthorizationService/handleRequest(com.predic8.membrane.core.exchange.Exchange,java.lang.String,java.lang.String,com.predic8.membrane.core.interceptor.authentication.session.SessionManager$Session)|",
    "called": "|java+method:///com/google/api/client/googleapis/auth/oauth2/GoogleIdTokenVerifier/verify(com.google.api.client.googleapis.auth.oauth2.GoogleIdToken)|",
    "v1Body": [
      "|java+method:///com/predic8/membrane/core/interceptor/authentication/session/SessionManager$Session/getUserAttributes()|",
      "|java+method:///com/predic8/membrane/core/exchange/Exchange/setResponse(com.predic8.membrane.core.http.Response)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+constructor:///com/predic8/membrane/core/http/Request$Builder/Request$Builder()|",
      "|java+constructor:///com/predic8/membrane/core/interceptor/oauth2/GoogleAuthorizationService$1/GoogleAuthorizationService$1(com.predic8.membrane.core.interceptor.oauth2.GoogleAuthorizationService)|",
      "|java+method:///com/predic8/membrane/core/http/Request$Builder/buildExchange()|",
      "|java+method:///com/predic8/membrane/core/http/Response/redirect(java.lang.String,boolean)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///com/predic8/membrane/core/http/Request$Builder/post(java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/util/Util/parseSimpleJSONResponse(com.predic8.membrane.core.http.Response)|",
      "|java+method:///java/util/HashMap/get(java.lang.Object)|",
      "|java+method:///com/predic8/membrane/core/exchange/Exchange/setRule(com.predic8.membrane.core.rules.Rule)|",
      "|java+method:///com/google/api/client/googleapis/auth/oauth2/GoogleIdToken/getPayload()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/predic8/membrane/core/exchange/Exchange/getDestinations()|",
      "|java+method:///com/predic8/membrane/core/transport/http/HttpClient/call(com.predic8.membrane.core.exchange.Exchange)|",
      "|java+method:///com/predic8/membrane/core/http/Response$ResponseBuilder/build()|",
      "|java+method:///com/google/api/client/googleapis/auth/oauth2/GoogleIdToken$Payload/getEmail()|",
      "|java+method:///java/util/HashMap/containsKey(java.lang.Object)|",
      "|java+method:///com/google/api/client/googleapis/auth/oauth2/GoogleIdToken/verifyAudience(java.util.Collection)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/http/AbstractBody/read()|",
      "|java+method:///com/google/api/client/googleapis/auth/oauth2/GoogleIdTokenVerifier/verify(com.google.api.client.googleapis.auth.oauth2.GoogleIdToken)|",
      "|java+method:///com/predic8/membrane/core/util/URIFactory/create(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///com/predic8/membrane/core/interceptor/authentication/session/SessionManager$Session/authorize()|",
      "|java+method:///com/predic8/membrane/core/util/URLParamUtil/parseQueryString(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///com/predic8/membrane/core/interceptor/LogInterceptor/LogInterceptor()|",
      "|java+method:///com/predic8/membrane/core/http/Request$Builder/body(java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/interceptor/LogInterceptor/handleResponse(com.predic8.membrane.core.exchange.Exchange)|",
      "|java+method:///com/predic8/membrane/core/http/Request$Builder/header(java.lang.String,java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/http/Response/getStatusCode()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///com/google/api/client/googleapis/auth/oauth2/GoogleIdToken/parse(com.google.api.client.json.JsonFactory,java.lang.String)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///com/predic8/membrane/core/http/Response/getBody()|",
      "|java+method:///com/predic8/membrane/core/util/URI/getPath()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/interceptor/LogInterceptor/handleRequest(com.predic8.membrane.core.exchange.Exchange)|",
      "|java+method:///com/predic8/membrane/core/interceptor/LogInterceptor/setHeaderOnly(boolean)|",
      "|java+method:///com/predic8/membrane/core/util/URLParamUtil/getParams(com.predic8.membrane.core.util.URIFactory,com.predic8.membrane.core.exchange.Exchange)|",
      "|java+method:///com/predic8/membrane/core/http/Response$ResponseBuilder/body(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Exception/getMessage()|",
      "|java+method:///com/predic8/membrane/core/exchange/Exchange/getResponse()|",
      "|java+method:///com/predic8/membrane/core/http/Response/badRequest()|"
    ],
    "v2Body": [
      "|java+method:///com/predic8/membrane/core/interceptor/authentication/session/SessionManager$Session/getUserAttributes()|",
      "|java+method:///com/google/api/client/googleapis/auth/oauth2/GoogleIdToken/getPayload()|",
      "|java+method:///com/predic8/membrane/core/exchange/Exchange/setResponse(com.predic8.membrane.core.http.Response)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+constructor:///com/predic8/membrane/core/http/Request$Builder/Request$Builder()|",
      "|java+method:///com/predic8/membrane/core/http/Request$Builder/buildExchange()|",
      "|java+method:///com/predic8/membrane/core/http/Response/redirect(java.lang.String,boolean)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///com/predic8/membrane/core/http/Request$Builder/post(java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/util/Util/parseSimpleJSONResponse(com.predic8.membrane.core.http.Response)|",
      "|java+method:///java/util/HashMap/get(java.lang.Object)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/predic8/membrane/core/exchange/Exchange/getDestinations()|",
      "|java+method:///com/predic8/membrane/core/transport/http/HttpClient/call(com.predic8.membrane.core.exchange.Exchange)|",
      "|java+method:///com/predic8/membrane/core/http/Response$ResponseBuilder/build()|",
      "|java+method:///com/google/api/client/googleapis/auth/oauth2/GoogleIdToken$Payload/getEmail()|",
      "|java+method:///java/util/HashMap/containsKey(java.lang.Object)|",
      "|java+method:///com/google/api/client/googleapis/auth/oauth2/GoogleIdToken/verifyAudience(java.util.Collection)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/http/AbstractBody/read()|",
      "|java+method:///com/google/api/client/googleapis/auth/oauth2/GoogleIdTokenVerifier/verify(com.google.api.client.googleapis.auth.oauth2.GoogleIdToken)|",
      "|java+method:///com/predic8/membrane/core/util/URIFactory/create(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///com/predic8/membrane/core/interceptor/authentication/session/SessionManager$Session/authorize()|",
      "|java+method:///com/predic8/membrane/core/util/URLParamUtil/parseQueryString(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///com/predic8/membrane/core/interceptor/LogInterceptor/LogInterceptor()|",
      "|java+method:///com/predic8/membrane/core/http/Request$Builder/body(java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/interceptor/LogInterceptor/handleResponse(com.predic8.membrane.core.exchange.Exchange)|",
      "|java+method:///com/predic8/membrane/core/http/Request$Builder/header(java.lang.String,java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/http/Response/getStatusCode()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///com/google/api/client/googleapis/auth/oauth2/GoogleIdToken/parse(com.google.api.client.json.JsonFactory,java.lang.String)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///com/predic8/membrane/core/http/Response/getBody()|",
      "|java+method:///com/predic8/membrane/core/util/URI/getPath()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/interceptor/LogInterceptor/handleRequest(com.predic8.membrane.core.exchange.Exchange)|",
      "|java+method:///com/predic8/membrane/core/interceptor/LogInterceptor/setHeaderOnly(boolean)|",
      "|java+method:///com/predic8/membrane/core/util/URLParamUtil/getParams(com.predic8.membrane.core.util.URIFactory,com.predic8.membrane.core.exchange.Exchange)|",
      "|java+method:///com/predic8/membrane/core/http/Response$ResponseBuilder/body(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Exception/getMessage()|",
      "|java+method:///com/predic8/membrane/core/exchange/Exchange/getResponse()|",
      "|java+method:///com/predic8/membrane/core/http/Response/badRequest()|"
    ],
    "affectedLib": "com.google.api-client:google-api-client:1.21.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.membrane-soa:service-proxy-core:4.1.0",
    "coordinatesV2": "org.membrane-soa:service-proxy-core:4.2.0",
    "caller": "|java+method:///com/predic8/membrane/core/interceptor/authentication/session/TelekomSMSTokenProvider/getAccessToken()|",
    "called": "|java+method:///org/apache/commons/codec/binary/Base64/encodeBase64(byte%5B%5D)|",
    "v1Body": [
      "|java+method:///com/predic8/membrane/core/exchange/Exchange/setRule(com.predic8.membrane.core.rules.Rule)|",
      "|java+constructor:///com/predic8/membrane/core/transport/http/HttpClient/HttpClient()|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/util/URLParamUtil$ParamBuilder/build()|",
      "|java+method:///com/predic8/membrane/core/http/Request$Builder/post(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/predic8/membrane/core/util/Util/parseSimpleJSONResponse(com.predic8.membrane.core.http.Response)|",
      "|java+constructor:///com/predic8/membrane/core/util/URLParamUtil$ParamBuilder/URLParamUtil$ParamBuilder()|",
      "|java+method:///java/util/HashMap/get(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/HashMap/containsKey(java.lang.Object)|",
      "|java+method:///com/predic8/membrane/core/transport/http/HttpClient/call(com.predic8.membrane.core.exchange.Exchange,boolean,boolean)|",
      "|java+constructor:///com/predic8/membrane/core/http/Request$Builder/Request$Builder()|",
      "|java+method:///com/predic8/membrane/core/http/Request$Builder/buildExchange()|",
      "|java+constructor:///java/lang/String/String(byte%5B%5D,java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/http/Request$Builder/body(java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/http/Request$Builder/header(java.lang.String,java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/util/URLParamUtil$ParamBuilder/add(java.lang.String,java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/http/Response/getStatusCode()|",
      "|java+method:///java/lang/String/getBytes(java.lang.String)|",
      "|java+constructor:///java/lang/Exception/Exception(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///com/predic8/membrane/core/interceptor/authentication/session/TelekomSMSTokenProvider$2/TelekomSMSTokenProvider$2(com.predic8.membrane.core.interceptor.authentication.session.TelekomSMSTokenProvider)|",
      "|java+method:///org/apache/commons/codec/binary/Base64/encodeBase64(byte%5B%5D)|",
      "|java+method:///com/predic8/membrane/core/exchange/Exchange/getResponse()|"
    ],
    "v2Body": [
      "|java+constructor:///com/predic8/membrane/core/transport/http/HttpClient/HttpClient()|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/util/URLParamUtil$ParamBuilder/build()|",
      "|java+method:///com/predic8/membrane/core/http/Request$Builder/post(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/predic8/membrane/core/util/Util/parseSimpleJSONResponse(com.predic8.membrane.core.http.Response)|",
      "|java+constructor:///com/predic8/membrane/core/util/URLParamUtil$ParamBuilder/URLParamUtil$ParamBuilder()|",
      "|java+method:///java/util/HashMap/get(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/HashMap/containsKey(java.lang.Object)|",
      "|java+method:///com/predic8/membrane/core/transport/http/HttpClient/call(com.predic8.membrane.core.exchange.Exchange,boolean,boolean)|",
      "|java+constructor:///com/predic8/membrane/core/http/Request$Builder/Request$Builder()|",
      "|java+method:///com/predic8/membrane/core/http/Request$Builder/buildExchange()|",
      "|java+constructor:///java/lang/String/String(byte%5B%5D,java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/http/Request$Builder/body(java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/http/Request$Builder/header(java.lang.String,java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/util/URLParamUtil$ParamBuilder/add(java.lang.String,java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/http/Response/getStatusCode()|",
      "|java+method:///java/lang/String/getBytes(java.lang.String)|",
      "|java+constructor:///java/lang/Exception/Exception(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/commons/codec/binary/Base64/encodeBase64(byte%5B%5D)|",
      "|java+method:///com/predic8/membrane/core/exchange/Exchange/getResponse()|"
    ],
    "affectedLib": "commons-codec:commons-codec:1.10",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.membrane-soa:service-proxy-core:4.1.0",
    "coordinatesV2": "org.membrane-soa:service-proxy-core:4.2.0",
    "caller": "|java+method:///com/predic8/membrane/core/interceptor/schemavalidation/JSONValidator/validateMessage(com.predic8.membrane.core.exchange.Exchange,java.io.InputStream,java.nio.charset.Charset,java.lang.String)|",
    "called": "|java+method:///com/github/fge/jsonschema/main/JsonSchema/validateUnchecked(com.fasterxml.jackson.databind.JsonNode)|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeStartObject()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/close()|",
      "|java+method:///com/github/fge/jsonschema/core/report/ProcessingReport/iterator()|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeStringField(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/incrementAndGet()|",
      "|java+method:///com/predic8/membrane/core/exchange/Exchange/setProperty(java.lang.String,java.lang.Object)|",
      "|java+method:///com/github/fge/jsonschema/core/report/ProcessingMessage/getMessage()|",
      "|java+method:///com/predic8/membrane/core/interceptor/schemavalidation/ValidatorInterceptor$FailureHandler/handleFailure(java.lang.String,com.predic8.membrane.core.exchange.Exchange)|",
      "|java+method:///com/github/fge/jsonschema/core/report/ProcessingReport/isSuccess()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/github/fge/jsonschema/main/JsonSchema/validateUnchecked(com.fasterxml.jackson.databind.JsonNode)|",
      "|java+method:///java/io/ByteArrayOutputStream/toByteArray()|",
      "|java+method:///com/fasterxml/jackson/core/JsonFactory/createJsonGenerator(java.io.OutputStream)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeArrayFieldStart(java.lang.String)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///com/predic8/membrane/core/http/Response$ResponseBuilder/build()|",
      "|java+method:///com/predic8/membrane/core/http/Response$ResponseBuilder/contentType(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/predic8/membrane/core/exchange/Exchange/setResponse(com.predic8.membrane.core.http.Response)|",
      "|java+constructor:///java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.nio.charset.Charset)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/String/String(byte%5B%5D,java.nio.charset.Charset)|",
      "|java+constructor:///com/fasterxml/jackson/core/JsonFactory/JsonFactory()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParseException/getMessage()|",
      "|java+method:///com/predic8/membrane/core/http/Response$ResponseBuilder/body(byte%5B%5D)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/String/getBytes(java.nio.charset.Charset)|",
      "|java+method:///com/github/fge/jackson/JsonLoader/fromReader(java.io.Reader)|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeString(java.lang.String)|",
      "|java+constructor:///java/io/ByteArrayOutputStream/ByteArrayOutputStream()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/predic8/membrane/core/http/Response/badRequest()|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeStartObject()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/close()|",
      "|java+method:///com/github/fge/jsonschema/core/report/ProcessingReport/iterator()|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeStringField(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/incrementAndGet()|",
      "|java+method:///com/predic8/membrane/core/exchange/Exchange/setProperty(java.lang.String,java.lang.Object)|",
      "|java+method:///com/github/fge/jsonschema/core/report/ProcessingMessage/getMessage()|",
      "|java+method:///com/predic8/membrane/core/interceptor/schemavalidation/ValidatorInterceptor$FailureHandler/handleFailure(java.lang.String,com.predic8.membrane.core.exchange.Exchange)|",
      "|java+method:///com/github/fge/jsonschema/core/report/ProcessingReport/isSuccess()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/github/fge/jsonschema/main/JsonSchema/validateUnchecked(com.fasterxml.jackson.databind.JsonNode)|",
      "|java+method:///java/io/ByteArrayOutputStream/toByteArray()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeArrayFieldStart(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/core/JsonFactory/createGenerator(java.io.OutputStream)|",
      "|java+method:///com/predic8/membrane/core/http/Response$ResponseBuilder/build()|",
      "|java+method:///com/predic8/membrane/core/http/Response$ResponseBuilder/contentType(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/predic8/membrane/core/exchange/Exchange/setResponse(com.predic8.membrane.core.http.Response)|",
      "|java+constructor:///java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.nio.charset.Charset)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/String/String(byte%5B%5D,java.nio.charset.Charset)|",
      "|java+constructor:///com/fasterxml/jackson/core/JsonFactory/JsonFactory()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParseException/getMessage()|",
      "|java+method:///com/predic8/membrane/core/http/Response$ResponseBuilder/body(byte%5B%5D)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/String/getBytes(java.nio.charset.Charset)|",
      "|java+method:///com/github/fge/jackson/JsonLoader/fromReader(java.io.Reader)|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeString(java.lang.String)|",
      "|java+constructor:///java/io/ByteArrayOutputStream/ByteArrayOutputStream()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/predic8/membrane/core/http/Response/badRequest()|"
    ],
    "affectedLib": "com.github.fge:json-schema-validator:2.2.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.membrane-soa:service-proxy-core:4.1.0",
    "coordinatesV2": "org.membrane-soa:service-proxy-core:4.2.0",
    "caller": "|java+method:///com/predic8/membrane/core/interceptor/authentication/session/LoginDialog/showPage(com.predic8.membrane.core.exchange.Exchange,int,java.lang.Object%5B%5D)|",
    "called": "|java+constructor:///com/floreysoft/jmte/Engine/Engine()|",
    "v1Body": [
      "|java+method:///com/predic8/membrane/core/http/Response/setBodyContent(byte%5B%5D)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/predic8/membrane/core/exchange/Exchange/getDestinations()|",
      "|java+method:///com/floreysoft/jmte/Engine/transform(java.lang.String,java.util.Map)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///com/floreysoft/jmte/Engine/Engine()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/apache/commons/lang/StringUtils/defaultString(java.lang.String)|",
      "|java+method:///java/lang/String/getBytes(java.nio.charset.Charset)|",
      "|java+method:///com/predic8/membrane/core/interceptor/server/WebServerInterceptor/handleRequest(com.predic8.membrane.core.exchange.Exchange)|",
      "|java+method:///java/util/List/set(int,java.lang.Object)|",
      "|java+method:///com/predic8/membrane/core/util/URLParamUtil/getParams(com.predic8.membrane.core.util.URIFactory,com.predic8.membrane.core.exchange.Exchange)|",
      "|java+method:///com/predic8/membrane/core/exchange/Exchange/getResponse()|",
      "|java+method:///com/floreysoft/jmte/Engine/setErrorHandler(com.floreysoft.jmte.ErrorHandler)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///org/apache/commons/lang/StringEscapeUtils/escapeXml(java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/http/Response/getBody()|",
      "|java+method:///com/predic8/membrane/core/http/AbstractBody/toString()|",
      "|java+constructor:///com/predic8/membrane/core/interceptor/authentication/session/LoginDialog$1/LoginDialog$1(com.predic8.membrane.core.interceptor.authentication.session.LoginDialog)|"
    ],
    "v2Body": [
      "|java+method:///com/predic8/membrane/core/http/Response/setBodyContent(byte%5B%5D)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/predic8/membrane/core/exchange/Exchange/getDestinations()|",
      "|java+method:///com/floreysoft/jmte/Engine/transform(java.lang.String,java.util.Map)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///com/floreysoft/jmte/Engine/Engine()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/apache/commons/lang/StringUtils/defaultString(java.lang.String)|",
      "|java+method:///java/lang/String/getBytes(java.nio.charset.Charset)|",
      "|java+method:///org/apache/commons/lang/StringEscapeUtils/escapeXml(java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/interceptor/server/WebServerInterceptor/handleRequest(com.predic8.membrane.core.exchange.Exchange)|",
      "|java+method:///java/util/List/set(int,java.lang.Object)|",
      "|java+method:///com/predic8/membrane/core/util/URLParamUtil/getParams(com.predic8.membrane.core.util.URIFactory,com.predic8.membrane.core.exchange.Exchange)|",
      "|java+constructor:///com/predic8/membrane/core/interceptor/authentication/session/LoginDialog$1/LoginDialog$1(com.predic8.membrane.core.interceptor.authentication.session.LoginDialog)|",
      "|java+method:///com/predic8/membrane/core/exchange/Exchange/getResponse()|",
      "|java+method:///com/floreysoft/jmte/Engine/setErrorHandler(com.floreysoft.jmte.ErrorHandler)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///com/predic8/membrane/core/http/Response/getBodyAsStringDecoded()|"
    ],
    "affectedLib": "com.floreysoft:jmte:3.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.membrane-soa:service-proxy-core:4.1.0",
    "coordinatesV2": "org.membrane-soa:service-proxy-core:4.2.0",
    "caller": "|java+method:///com/predic8/membrane/core/interceptor/oauth2/OAuth2ResourceInterceptor/showPage(com.predic8.membrane.core.exchange.Exchange,java.lang.String,java.lang.Object%5B%5D)|",
    "called": "|java+constructor:///com/floreysoft/jmte/Engine/Engine()|",
    "v1Body": [
      "|java+method:///com/predic8/membrane/core/http/Response/setBodyContent(byte%5B%5D)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/predic8/membrane/core/exchange/Exchange/getDestinations()|",
      "|java+method:///com/floreysoft/jmte/Engine/transform(java.lang.String,java.util.Map)|",
      "|java+method:///com/predic8/membrane/core/util/URIFactory/create(java.lang.String)|",
      "|java+constructor:///com/predic8/membrane/core/interceptor/oauth2/OAuth2ResourceInterceptor$1/OAuth2ResourceInterceptor$1(com.predic8.membrane.core.interceptor.oauth2.OAuth2ResourceInterceptor)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///com/floreysoft/jmte/Engine/Engine()|",
      "|java+method:///java/lang/String/getBytes(java.nio.charset.Charset)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///com/predic8/membrane/core/interceptor/server/WebServerInterceptor/handleRequest(com.predic8.membrane.core.exchange.Exchange)|",
      "|java+method:///java/util/List/set(int,java.lang.Object)|",
      "|java+method:///com/predic8/membrane/core/http/AbstractBody/toString()|",
      "|java+method:///com/predic8/membrane/core/exchange/Exchange/getResponse()|",
      "|java+method:///com/floreysoft/jmte/Engine/setErrorHandler(com.floreysoft.jmte.ErrorHandler)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///org/apache/commons/lang/StringUtils/defaultString(java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/interceptor/oauth2/AuthorizationService/getLoginURL(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringEscapeUtils/escapeXml(java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/http/Response/getBody()|",
      "|java+method:///com/predic8/membrane/core/util/URI/getPath()|",
      "|java+method:///com/predic8/membrane/core/util/URLParamUtil/getParams(com.predic8.membrane.core.util.URIFactory,com.predic8.membrane.core.exchange.Exchange)|",
      "|java+method:///com/predic8/membrane/core/Router/getUriFactory()|"
    ],
    "v2Body": [
      "|java+method:///com/predic8/membrane/core/http/Response/setBodyContent(byte%5B%5D)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/predic8/membrane/core/exchange/Exchange/getDestinations()|",
      "|java+method:///com/floreysoft/jmte/Engine/transform(java.lang.String,java.util.Map)|",
      "|java+method:///com/predic8/membrane/core/util/URIFactory/create(java.lang.String)|",
      "|java+constructor:///com/predic8/membrane/core/interceptor/oauth2/OAuth2ResourceInterceptor$1/OAuth2ResourceInterceptor$1(com.predic8.membrane.core.interceptor.oauth2.OAuth2ResourceInterceptor)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///com/floreysoft/jmte/Engine/Engine()|",
      "|java+method:///java/lang/String/getBytes(java.nio.charset.Charset)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///com/predic8/membrane/core/interceptor/server/WebServerInterceptor/handleRequest(com.predic8.membrane.core.exchange.Exchange)|",
      "|java+method:///java/util/List/set(int,java.lang.Object)|",
      "|java+method:///com/predic8/membrane/core/exchange/Exchange/getResponse()|",
      "|java+method:///com/floreysoft/jmte/Engine/setErrorHandler(com.floreysoft.jmte.ErrorHandler)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///com/predic8/membrane/core/http/Response/getBodyAsStringDecoded()|",
      "|java+method:///org/apache/commons/lang/StringUtils/defaultString(java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/interceptor/oauth2/AuthorizationService/getLoginURL(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringEscapeUtils/escapeXml(java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/util/URI/getPath()|",
      "|java+method:///com/predic8/membrane/core/util/URLParamUtil/getParams(com.predic8.membrane.core.util.URIFactory,com.predic8.membrane.core.exchange.Exchange)|",
      "|java+method:///com/predic8/membrane/core/Router/getUriFactory()|"
    ],
    "affectedLib": "com.floreysoft:jmte:3.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.membrane-soa:service-proxy-core:4.1.0",
    "coordinatesV2": "org.membrane-soa:service-proxy-core:4.2.0",
    "caller": "|java+method:///com/predic8/membrane/core/interceptor/administration/AdminRESTInterceptor$5/write(com.fasterxml.jackson.core.JsonGenerator)|",
    "called": "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeArrayFieldStart(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeEndObject()|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeArrayFieldStart(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeStartObject()|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeEndArray()|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeNumberField(java.lang.String,int)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/predic8/membrane/core/interceptor/administration/AdminRESTInterceptor/access$000(com.predic8.membrane.core.interceptor.administration.AdminRESTInterceptor,com.predic8.membrane.core.exchange.AbstractExchange,com.fasterxml.jackson.core.JsonGenerator)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeEndObject()|",
      "|java+method:///com/predic8/membrane/core/interceptor/administration/AdminRESTInterceptor/getRouter()|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeArrayFieldStart(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeStartObject()|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeNumberField(java.lang.String,long)|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeEndArray()|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeNumberField(java.lang.String,int)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/predic8/membrane/core/Router/getExchangeStore()|",
      "|java+method:///com/predic8/membrane/core/interceptor/administration/AdminRESTInterceptor/access$000(com.predic8.membrane.core.interceptor.administration.AdminRESTInterceptor,com.predic8.membrane.core.exchange.AbstractExchange,com.fasterxml.jackson.core.JsonGenerator)|",
      "|java+method:///com/predic8/membrane/core/exchangestore/ExchangeStore/getLastModified()|",
      "|java+method:///java/util/List/iterator()|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-core:2.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.membrane-soa:service-proxy-core:4.1.0",
    "coordinatesV2": "org.membrane-soa:service-proxy-core:4.2.0",
    "caller": "|java+method:///com/predic8/membrane/core/util/Util/parseSimpleJSONResponse(com.predic8.membrane.core.http.Response)|",
    "called": "|java+constructor:///com/fasterxml/jackson/core/JsonFactory/JsonFactory()|",
    "v1Body": [
      "|java+method:///com/predic8/membrane/core/http/Response/getBodyAsStreamDecoded()|",
      "|java+method:///com/predic8/membrane/core/http/Response/getHeader()|",
      "|java+method:///com/predic8/membrane/core/http/Header/getContentTypeObject()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentName()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|",
      "|java+method:///com/fasterxml/jackson/core/JsonFactory/createJsonParser(java.io.Reader)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/core/JsonToken/ordinal()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/HashMap/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///com/fasterxml/jackson/core/JsonFactory/JsonFactory()|",
      "|java+method:///javax/mail/internet/ContentType/match(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///java/io/InputStreamReader/InputStreamReader(java.io.InputStream)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getText()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getLongValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/predic8/membrane/core/http/Header/getFirstValue(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/predic8/membrane/core/http/Response/getBodyAsStreamDecoded()|",
      "|java+method:///com/predic8/membrane/core/http/Response/getHeader()|",
      "|java+method:///com/predic8/membrane/core/http/Header/getContentTypeObject()|",
      "|java+method:///com/fasterxml/jackson/core/JsonFactory/createParser(java.io.Reader)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentName()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/core/JsonToken/ordinal()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/HashMap/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///com/fasterxml/jackson/core/JsonFactory/JsonFactory()|",
      "|java+method:///javax/mail/internet/ContentType/match(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///java/io/InputStreamReader/InputStreamReader(java.io.InputStream)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getText()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getLongValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/predic8/membrane/core/http/Header/getFirstValue(java.lang.String)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-core:2.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.membrane-soa:service-proxy-core:4.1.0",
    "coordinatesV2": "org.membrane-soa:service-proxy-core:4.2.0",
    "caller": "|java+method:///com/predic8/membrane/core/transport/http/AbstractHttpHandler/generateErrorResponse(java.lang.Exception)|",
    "called": "|java+method:///com/fasterxml/jackson/core/JsonFactory/createGenerator(java.io.OutputStream)|",
    "v1Body": [
      "|java+method:///com/predic8/membrane/core/http/Response$ResponseBuilder/build()|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeFieldName(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/util/ContentTypeDetector$ContentType/ordinal()|",
      "|java+method:///java/lang/Exception/printStackTrace(java.io.PrintWriter)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///java/io/StringWriter/StringWriter()|",
      "|java+method:///com/predic8/membrane/core/util/HttpUtil/createHeaders(java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///com/predic8/membrane/core/exchange/Exchange/getRequest()|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeStartObject()|",
      "|java+constructor:///java/io/PrintWriter/PrintWriter(java.io.Writer)|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/close()|",
      "|java+method:///com/predic8/membrane/core/http/Response/internalServerError()|",
      "|java+constructor:///com/fasterxml/jackson/core/JsonFactory/JsonFactory()|",
      "|java+method:///com/predic8/membrane/core/util/ContentTypeDetector$ContentDescriptor/getEffectiveContentType()|",
      "|java+method:///com/predic8/membrane/core/http/Response$ResponseBuilder/body(byte%5B%5D)|",
      "|java+method:///java/lang/String/getBytes(java.nio.charset.Charset)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///java/io/StringWriter/toString()|",
      "|java+method:///com/predic8/membrane/core/util/HttpUtil/setHTMLErrorResponse(com.predic8.membrane.core.http.Response$ResponseBuilder,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringEscapeUtils/escapeXml(java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/http/Response$ResponseBuilder/header(com.predic8.membrane.core.http.Header)|",
      "|java+method:///java/io/ByteArrayOutputStream/toByteArray()|",
      "|java+method:///com/fasterxml/jackson/core/JsonFactory/createJsonGenerator(java.io.OutputStream)|",
      "|java+method:///java/lang/Exception/toString()|",
      "|java+method:///com/predic8/membrane/core/util/ContentTypeDetector/detect(com.predic8.membrane.core.http.Message)|",
      "|java+method:///com/predic8/membrane/core/util/HttpUtil/getFaultSOAPBody(java.lang.String,java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeString(java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/transport/Transport/isPrintStackTrace()|",
      "|java+constructor:///java/io/ByteArrayOutputStream/ByteArrayOutputStream()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/predic8/membrane/core/http/Response/badRequest()|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/core/JsonFactory/createGenerator(java.io.OutputStream)|",
      "|java+method:///com/predic8/membrane/core/http/Response$ResponseBuilder/build()|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeFieldName(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/util/ContentTypeDetector$ContentType/ordinal()|",
      "|java+method:///java/lang/Exception/printStackTrace(java.io.PrintWriter)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///java/io/StringWriter/StringWriter()|",
      "|java+method:///java/lang/Exception/toString()|",
      "|java+method:///com/predic8/membrane/core/util/HttpUtil/createHeaders(java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///com/predic8/membrane/core/exchange/Exchange/getRequest()|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeStartObject()|",
      "|java+constructor:///java/io/PrintWriter/PrintWriter(java.io.Writer)|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/close()|",
      "|java+method:///com/predic8/membrane/core/http/Response/internalServerError()|",
      "|java+constructor:///com/fasterxml/jackson/core/JsonFactory/JsonFactory()|",
      "|java+method:///com/predic8/membrane/core/util/ContentTypeDetector$ContentDescriptor/getEffectiveContentType()|",
      "|java+method:///com/predic8/membrane/core/http/Response$ResponseBuilder/body(byte%5B%5D)|",
      "|java+method:///java/lang/String/getBytes(java.nio.charset.Charset)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///java/io/StringWriter/toString()|",
      "|java+method:///com/predic8/membrane/core/util/HttpUtil/setHTMLErrorResponse(com.predic8.membrane.core.http.Response$ResponseBuilder,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringEscapeUtils/escapeXml(java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/http/Response$ResponseBuilder/header(com.predic8.membrane.core.http.Header)|",
      "|java+method:///java/io/ByteArrayOutputStream/toByteArray()|",
      "|java+method:///com/predic8/membrane/core/util/ContentTypeDetector/detect(com.predic8.membrane.core.http.Message)|",
      "|java+method:///com/predic8/membrane/core/util/HttpUtil/getFaultSOAPBody(java.lang.String,java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeString(java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/transport/Transport/isPrintStackTrace()|",
      "|java+constructor:///java/io/ByteArrayOutputStream/ByteArrayOutputStream()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/predic8/membrane/core/http/Response/badRequest()|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-core:2.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.membrane-soa:service-proxy-core:4.1.0",
    "coordinatesV2": "org.membrane-soa:service-proxy-core:4.2.0",
    "caller": "|java+method:///com/predic8/membrane/core/http/xml/JSONBody/write(javax.xml.stream.XMLStreamWriter)|",
    "called": "|java+constructor:///com/fasterxml/jackson/core/JsonFactory/JsonFactory()|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///com/predic8/membrane/core/http/Message/getBodyAsStreamDecoded()|",
      "|java+method:///java/util/List/remove(int)|",
      "|java+method:///com/fasterxml/jackson/core/JsonToken/ordinal()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/predic8/membrane/core/http/Message/getCharset()|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///com/fasterxml/jackson/core/JsonFactory/JsonFactory()|",
      "|java+method:///com/fasterxml/jackson/core/JsonFactory/createJsonParser(java.io.Reader)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getBooleanValue()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///javax/xml/stream/XMLStreamWriter/writeCharacters(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getText()|",
      "|java+method:///java/lang/Boolean/toString(boolean)|",
      "|java+method:///javax/xml/stream/XMLStreamWriter/writeAttribute(java.lang.String,java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///javax/xml/stream/XMLStreamWriter/writeStartElement(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/core/JsonToken/toString()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentName()|",
      "|java+constructor:///java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|",
      "|java+method:///javax/xml/stream/XMLStreamWriter/writeEndElement()|",
      "|java+method:///java/util/List/add(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///com/predic8/membrane/core/http/Message/getBodyAsStreamDecoded()|",
      "|java+method:///java/util/List/remove(int)|",
      "|java+method:///com/fasterxml/jackson/core/JsonToken/ordinal()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/predic8/membrane/core/http/Message/getCharset()|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///com/fasterxml/jackson/core/JsonFactory/JsonFactory()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getBooleanValue()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///javax/xml/stream/XMLStreamWriter/writeCharacters(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getText()|",
      "|java+method:///java/lang/Boolean/toString(boolean)|",
      "|java+method:///javax/xml/stream/XMLStreamWriter/writeAttribute(java.lang.String,java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///com/fasterxml/jackson/core/JsonFactory/createParser(java.io.Reader)|",
      "|java+method:///javax/xml/stream/XMLStreamWriter/writeStartElement(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/core/JsonToken/toString()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentName()|",
      "|java+constructor:///java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|",
      "|java+method:///javax/xml/stream/XMLStreamWriter/writeEndElement()|",
      "|java+method:///java/util/List/add(java.lang.Object)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-core:2.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.membrane-soa:service-proxy-core:4.1.0",
    "coordinatesV2": "org.membrane-soa:service-proxy-core:4.2.0",
    "caller": "|java+method:///com/predic8/membrane/core/interceptor/schemavalidation/JSONValidator/validateMessage(com.predic8.membrane.core.exchange.Exchange,java.io.InputStream,java.nio.charset.Charset,java.lang.String)|",
    "called": "|java+method:///com/fasterxml/jackson/core/JsonFactory/createGenerator(java.io.OutputStream)|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeStartObject()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/close()|",
      "|java+method:///com/github/fge/jsonschema/core/report/ProcessingReport/iterator()|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeStringField(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/incrementAndGet()|",
      "|java+method:///com/predic8/membrane/core/exchange/Exchange/setProperty(java.lang.String,java.lang.Object)|",
      "|java+method:///com/github/fge/jsonschema/core/report/ProcessingMessage/getMessage()|",
      "|java+method:///com/predic8/membrane/core/interceptor/schemavalidation/ValidatorInterceptor$FailureHandler/handleFailure(java.lang.String,com.predic8.membrane.core.exchange.Exchange)|",
      "|java+method:///com/github/fge/jsonschema/core/report/ProcessingReport/isSuccess()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/github/fge/jsonschema/main/JsonSchema/validateUnchecked(com.fasterxml.jackson.databind.JsonNode)|",
      "|java+method:///java/io/ByteArrayOutputStream/toByteArray()|",
      "|java+method:///com/fasterxml/jackson/core/JsonFactory/createJsonGenerator(java.io.OutputStream)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeArrayFieldStart(java.lang.String)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///com/predic8/membrane/core/http/Response$ResponseBuilder/build()|",
      "|java+method:///com/predic8/membrane/core/http/Response$ResponseBuilder/contentType(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/predic8/membrane/core/exchange/Exchange/setResponse(com.predic8.membrane.core.http.Response)|",
      "|java+constructor:///java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.nio.charset.Charset)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/String/String(byte%5B%5D,java.nio.charset.Charset)|",
      "|java+constructor:///com/fasterxml/jackson/core/JsonFactory/JsonFactory()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParseException/getMessage()|",
      "|java+method:///com/predic8/membrane/core/http/Response$ResponseBuilder/body(byte%5B%5D)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/String/getBytes(java.nio.charset.Charset)|",
      "|java+method:///com/github/fge/jackson/JsonLoader/fromReader(java.io.Reader)|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeString(java.lang.String)|",
      "|java+constructor:///java/io/ByteArrayOutputStream/ByteArrayOutputStream()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/predic8/membrane/core/http/Response/badRequest()|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeStartObject()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/close()|",
      "|java+method:///com/github/fge/jsonschema/core/report/ProcessingReport/iterator()|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeStringField(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/incrementAndGet()|",
      "|java+method:///com/predic8/membrane/core/exchange/Exchange/setProperty(java.lang.String,java.lang.Object)|",
      "|java+method:///com/github/fge/jsonschema/core/report/ProcessingMessage/getMessage()|",
      "|java+method:///com/predic8/membrane/core/interceptor/schemavalidation/ValidatorInterceptor$FailureHandler/handleFailure(java.lang.String,com.predic8.membrane.core.exchange.Exchange)|",
      "|java+method:///com/github/fge/jsonschema/core/report/ProcessingReport/isSuccess()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/github/fge/jsonschema/main/JsonSchema/validateUnchecked(com.fasterxml.jackson.databind.JsonNode)|",
      "|java+method:///java/io/ByteArrayOutputStream/toByteArray()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeArrayFieldStart(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/core/JsonFactory/createGenerator(java.io.OutputStream)|",
      "|java+method:///com/predic8/membrane/core/http/Response$ResponseBuilder/build()|",
      "|java+method:///com/predic8/membrane/core/http/Response$ResponseBuilder/contentType(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/predic8/membrane/core/exchange/Exchange/setResponse(com.predic8.membrane.core.http.Response)|",
      "|java+constructor:///java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.nio.charset.Charset)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/String/String(byte%5B%5D,java.nio.charset.Charset)|",
      "|java+constructor:///com/fasterxml/jackson/core/JsonFactory/JsonFactory()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParseException/getMessage()|",
      "|java+method:///com/predic8/membrane/core/http/Response$ResponseBuilder/body(byte%5B%5D)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/String/getBytes(java.nio.charset.Charset)|",
      "|java+method:///com/github/fge/jackson/JsonLoader/fromReader(java.io.Reader)|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeString(java.lang.String)|",
      "|java+constructor:///java/io/ByteArrayOutputStream/ByteArrayOutputStream()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/predic8/membrane/core/http/Response/badRequest()|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-core:2.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.membrane-soa:service-proxy-core:4.1.0",
    "coordinatesV2": "org.membrane-soa:service-proxy-core:4.2.0",
    "caller": "|java+method:///com/predic8/membrane/core/interceptor/statistics/StatisticsProvider/createJson(com.predic8.membrane.core.exchange.Exchange,java.sql.ResultSet,int,int,int)|",
    "called": "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeArrayFieldStart(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeEndObject()|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeArrayFieldStart(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/core/JsonFactory/createJsonGenerator(java.io.Writer)|",
      "|java+method:///java/sql/ResultSet/isAfterLast()|",
      "|java+method:///java/sql/ResultSet/absolute(int)|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeEndArray()|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeNumberField(java.lang.String,int)|",
      "|java+method:///com/predic8/membrane/core/interceptor/statistics/StatisticsProvider/writeRecord(java.sql.ResultSet,com.fasterxml.jackson.core.JsonGenerator)|",
      "|java+method:///com/predic8/membrane/core/interceptor/statistics/StatisticsProvider/createResponse(com.predic8.membrane.core.exchange.Exchange,java.io.StringWriter)|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/flush()|",
      "|java+constructor:///java/io/StringWriter/StringWriter()|",
      "|java+method:///java/sql/ResultSet/next()|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeStartObject()|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeEndObject()|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeArrayFieldStart(java.lang.String)|",
      "|java+method:///java/sql/ResultSet/isAfterLast()|",
      "|java+method:///java/sql/ResultSet/absolute(int)|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeEndArray()|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeNumberField(java.lang.String,int)|",
      "|java+method:///com/predic8/membrane/core/interceptor/statistics/StatisticsProvider/createResponse(com.predic8.membrane.core.exchange.Exchange,java.io.StringWriter)|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/flush()|",
      "|java+constructor:///java/io/StringWriter/StringWriter()|",
      "|java+method:///java/sql/ResultSet/next()|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeStartObject()|",
      "|java+method:///com/fasterxml/jackson/core/JsonFactory/createGenerator(java.io.Writer)|",
      "|java+method:///com/predic8/membrane/core/interceptor/statistics/StatisticsProvider/writeRecord(java.sql.ResultSet,com.fasterxml.jackson.core.JsonGenerator)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-core:2.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.membrane-soa:service-proxy-core:4.1.0",
    "coordinatesV2": "org.membrane-soa:service-proxy-core:4.2.0",
    "caller": "|java+method:///com/predic8/membrane/core/interceptor/authentication/session/TelekomSMSTokenProvider/sendSMS(java.lang.String,java.lang.String)|",
    "called": "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeArrayFieldStart(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeEndObject()|",
      "|java+method:///com/predic8/membrane/core/exchange/Exchange/setRule(com.predic8.membrane.core.rules.Rule)|",
      "|java+method:///com/fasterxml/jackson/core/JsonFactory/createJsonGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding)|",
      "|java+method:///java/lang/String/toLowerCase()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/close()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///com/predic8/membrane/core/interceptor/authentication/session/TelekomSMSTokenProvider/getAccessToken()|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeEndArray()|",
      "|java+method:///com/predic8/membrane/core/http/Request$Builder/body(byte%5B%5D)|",
      "|java+method:///com/predic8/membrane/core/http/Request$Builder/post(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/predic8/membrane/core/http/Request$Builder/header(java.lang.String,java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/http/Response/getStatusCode()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///com/predic8/membrane/core/interceptor/authentication/session/TelekomSMSTokenProvider$1/TelekomSMSTokenProvider$1(com.predic8.membrane.core.interceptor.authentication.session.TelekomSMSTokenProvider)|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeArrayFieldStart(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeStartObject()|",
      "|java+method:///java/lang/String/replaceAll(java.lang.String,java.lang.String)|",
      "|java+method:///java/net/URLEncoder/encode(java.lang.String,java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeStringField(java.lang.String,java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/transport/http/HttpClient/call(com.predic8.membrane.core.exchange.Exchange,boolean,boolean)|",
      "|java+constructor:///com/predic8/membrane/core/http/Request$Builder/Request$Builder()|",
      "|java+method:///com/predic8/membrane/core/http/Request$Builder/buildExchange()|",
      "|java+method:///com/predic8/membrane/core/interceptor/authentication/session/TelekomSMSTokenProvider$EnvironmentType/name()|",
      "|java+constructor:///com/fasterxml/jackson/core/JsonFactory/JsonFactory()|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeObjectFieldStart(java.lang.String)|",
      "|java+method:///java/lang/Math/random()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///java/io/ByteArrayOutputStream/toByteArray()|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeString(java.lang.String)|",
      "|java+constructor:///java/io/ByteArrayOutputStream/ByteArrayOutputStream()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/predic8/membrane/core/exchange/Exchange/getResponse()|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeEndObject()|",
      "|java+method:///java/lang/String/toLowerCase()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/close()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeEndArray()|",
      "|java+method:///com/predic8/membrane/core/http/Request$Builder/body(byte%5B%5D)|",
      "|java+method:///com/predic8/membrane/core/http/Request$Builder/post(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/predic8/membrane/core/http/Request$Builder/header(java.lang.String,java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/http/Response/getStatusCode()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeArrayFieldStart(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeStartObject()|",
      "|java+method:///java/lang/String/replaceAll(java.lang.String,java.lang.String)|",
      "|java+method:///java/net/URLEncoder/encode(java.lang.String,java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeStringField(java.lang.String,java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/transport/http/HttpClient/call(com.predic8.membrane.core.exchange.Exchange,boolean,boolean)|",
      "|java+constructor:///com/predic8/membrane/core/http/Request$Builder/Request$Builder()|",
      "|java+method:///com/predic8/membrane/core/interceptor/authentication/session/TelekomSMSTokenProvider/getAccessToken()|",
      "|java+method:///com/fasterxml/jackson/core/JsonFactory/createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding)|",
      "|java+method:///com/predic8/membrane/core/http/Request$Builder/buildExchange()|",
      "|java+method:///com/predic8/membrane/core/interceptor/authentication/session/TelekomSMSTokenProvider$EnvironmentType/name()|",
      "|java+constructor:///com/fasterxml/jackson/core/JsonFactory/JsonFactory()|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeObjectFieldStart(java.lang.String)|",
      "|java+method:///java/lang/Math/random()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///java/io/ByteArrayOutputStream/toByteArray()|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/writeString(java.lang.String)|",
      "|java+constructor:///java/io/ByteArrayOutputStream/ByteArrayOutputStream()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/predic8/membrane/core/exchange/Exchange/getResponse()|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-core:2.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.membrane-soa:service-proxy-core:4.1.0",
    "coordinatesV2": "org.membrane-soa:service-proxy-core:4.2.0",
    "caller": "|java+method:///com/predic8/membrane/core/interceptor/rest/RESTInterceptor/json(com.predic8.membrane.core.interceptor.rest.JSONContent)|",
    "called": "|java+method:///com/fasterxml/jackson/core/JsonFactory/createGenerator(java.io.Writer)|",
    "v1Body": [
      "|java+method:///com/predic8/membrane/core/http/Response$ResponseBuilder/build()|",
      "|java+method:///com/fasterxml/jackson/core/JsonFactory/createJsonGenerator(java.io.Writer)|",
      "|java+method:///com/predic8/membrane/core/http/Response$ResponseBuilder/header(java.lang.String,java.lang.String)|",
      "|java+method:///com/predic8/membrane/core/http/Response/ok()|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/flush()|",
      "|java+constructor:///java/io/StringWriter/StringWriter()|",
      "|java+method:///java/io/StringWriter/toString()|",
      "|java+method:///com/predic8/membrane/core/interceptor/rest/JSONContent/write(com.fasterxml.jackson.core.JsonGenerator)|",
      "|java+method:///com/predic8/membrane/core/http/Response$ResponseBuilder/body(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/predic8/membrane/core/http/Response$ResponseBuilder/build()|",
      "|java+method:///com/predic8/membrane/core/http/Response$ResponseBuilder/header(java.lang.String,java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/core/JsonFactory/createGenerator(java.io.Writer)|",
      "|java+method:///com/predic8/membrane/core/http/Response/ok()|",
      "|java+method:///com/fasterxml/jackson/core/JsonGenerator/flush()|",
      "|java+constructor:///java/io/StringWriter/StringWriter()|",
      "|java+method:///java/io/StringWriter/toString()|",
      "|java+method:///com/predic8/membrane/core/interceptor/rest/JSONContent/write(com.fasterxml.jackson.core.JsonGenerator)|",
      "|java+method:///com/predic8/membrane/core/http/Response$ResponseBuilder/body(java.lang.String)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-core:2.6.3",
    "change": "UPDATED"
  }
]