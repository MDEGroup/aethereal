[
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.2.3",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.2.4",
    "caller": "|java+method:///org/apache/cassandra/transport/Server/run()|",
    "called": "|java+method:///org/jboss/netty/bootstrap/ServerBootstrap/bind(java.net.SocketAddress)|",
    "v1Body": [
      "|java+method:///org/jboss/netty/channel/group/ChannelGroup/add(java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/transport/Server$PipelineFactory/Server$PipelineFactory(org.apache.cassandra.transport.Server)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getClientEncryptionOptions()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/jboss/netty/bootstrap/ServerBootstrap/setOption(java.lang.String,java.lang.Object)|",
      "|java+constructor:///org/jboss/netty/channel/socket/nio/NioServerSocketChannelFactory/NioServerSocketChannelFactory(java.util.concurrent.Executor,java.util.concurrent.Executor)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/jboss/netty/bootstrap/ServerBootstrap/setPipelineFactory(org.jboss.netty.channel.ChannelPipelineFactory)|",
      "|java+method:///java/util/concurrent/Executors/newCachedThreadPool()|",
      "|java+constructor:///org/jboss/netty/handler/execution/ExecutionHandler/ExecutionHandler(java.util.concurrent.Executor)|",
      "|java+constructor:///org/apache/cassandra/transport/Server$SecurePipelineFactory/Server$SecurePipelineFactory(org.apache.cassandra.transport.Server,org.apache.cassandra.config.EncryptionOptions)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/jboss/netty/bootstrap/ServerBootstrap/bind(java.net.SocketAddress)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///org/jboss/netty/bootstrap/ServerBootstrap/ServerBootstrap(org.jboss.netty.channel.ChannelFactory)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/cassandra/transport/RequestThreadPoolExecutor/RequestThreadPoolExecutor()|"
    ],
    "v2Body": [
      "|java+method:///org/jboss/netty/channel/group/ChannelGroup/add(java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/transport/Server$PipelineFactory/Server$PipelineFactory(org.apache.cassandra.transport.Server)|",
      "|java+method:///org/jboss/netty/bootstrap/ServerBootstrap/bind(java.net.SocketAddress)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getClientEncryptionOptions()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/jboss/netty/bootstrap/ServerBootstrap/setOption(java.lang.String,java.lang.Object)|",
      "|java+constructor:///org/jboss/netty/channel/socket/nio/NioServerSocketChannelFactory/NioServerSocketChannelFactory(java.util.concurrent.Executor,java.util.concurrent.Executor)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/jboss/netty/bootstrap/ServerBootstrap/setPipelineFactory(org.jboss.netty.channel.ChannelPipelineFactory)|",
      "|java+method:///java/util/concurrent/Executors/newCachedThreadPool()|",
      "|java+constructor:///org/apache/cassandra/transport/RequestThreadPoolExecutor/RequestThreadPoolExecutor()|",
      "|java+constructor:///org/jboss/netty/handler/execution/ExecutionHandler/ExecutionHandler(java.util.concurrent.Executor)|",
      "|java+constructor:///org/apache/cassandra/transport/Server$SecurePipelineFactory/Server$SecurePipelineFactory(org.apache.cassandra.transport.Server,org.apache.cassandra.config.EncryptionOptions)|",
      "|java+constructor:///org/jboss/netty/bootstrap/ServerBootstrap/ServerBootstrap(org.jboss.netty.channel.ChannelFactory)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|"
    ],
    "affectedLib": "io.netty:netty:3.5.9.Final",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.2.3",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.2.4",
    "caller": "|java+method:///org/apache/cassandra/transport/Server/close()|",
    "called": "|java+method:///org/jboss/netty/handler/execution/ExecutionHandler/releaseExternalResources()|",
    "v1Body": [
      "|java+method:///org/jboss/netty/handler/execution/ExecutionHandler/releaseExternalResources()|",
      "|java+method:///org/apache/cassandra/transport/Server$ConnectionTracker/closeAll()|",
      "|java+method:///org/jboss/netty/channel/ChannelFactory/releaseExternalResources()|"
    ],
    "v2Body": [
      "|java+method:///org/jboss/netty/handler/execution/ExecutionHandler/releaseExternalResources()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/cassandra/transport/Server$ConnectionTracker/closeAll()|",
      "|java+method:///org/jboss/netty/channel/ChannelFactory/releaseExternalResources()|"
    ],
    "affectedLib": "io.netty:netty:3.5.9.Final",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.2.3",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.2.4",
    "caller": "|java+method:///org/apache/cassandra/thrift/CassandraServer/get_indexed_slices(org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.IndexClause,org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.thrift.ConsistencyLevel)|",
    "called": "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/fromThrift(org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestValidationException)|",
      "|java+constructor:///org/apache/cassandra/dht/Bounds/Bounds(org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.RingPosition)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/instance()|",
      "|java+constructor:///org/apache/cassandra/db/RangeSliceCommand/RangeSliceCommand(java.lang.String,java.lang.String,java.nio.ByteBuffer,org.apache.cassandra.db.filter.IDiskAtomFilter,org.apache.cassandra.dht.AbstractBounds,java.util.List,int)|",
      "|java+method:///org/apache/cassandra/db/RowPosition/forKey(java.nio.ByteBuffer,org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String,boolean)|",
      "|java+method:///org/apache/cassandra/db/ConsistencyLevel/validateForRead(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getComparatorFor(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/startSessionIfRequested()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestTimeoutException)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/hasColumnFamilyAccess(java.lang.String,java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.UnavailableException)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateIndexClauses(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.IndexClause)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnParent(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.ColumnParent)|",
      "|java+method:///org/apache/cassandra/thrift/IndexClause/toString()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validatePredicate(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/thriftifyKeySlices(java.util.List,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/apache/cassandra/thrift/ConsistencyLevel/name()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/asIFilter(org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/begin(java.lang.String,java.util.Map)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/stopSession()|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getMinimumToken()|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/getRangeSlice(org.apache.cassandra.db.RangeSliceCommand,org.apache.cassandra.db.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/dht/Token/minKeyBound()|",
      "|java+method:///org/apache/cassandra/thrift/SlicePredicate/toString()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnParent/toString()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/getKeyspace()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/fromThrift(org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestValidationException)|",
      "|java+constructor:///org/apache/cassandra/dht/Bounds/Bounds(org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.RingPosition)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/instance()|",
      "|java+constructor:///org/apache/cassandra/db/RangeSliceCommand/RangeSliceCommand(java.lang.String,java.lang.String,java.nio.ByteBuffer,org.apache.cassandra.db.filter.IDiskAtomFilter,org.apache.cassandra.dht.AbstractBounds,java.util.List,int)|",
      "|java+method:///org/apache/cassandra/db/RowPosition/forKey(java.nio.ByteBuffer,org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String,boolean)|",
      "|java+method:///org/apache/cassandra/db/ConsistencyLevel/validateForRead(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getComparatorFor(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/startSessionIfRequested()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestTimeoutException)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/hasColumnFamilyAccess(java.lang.String,java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.UnavailableException)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateIndexClauses(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.IndexClause)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnParent(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.ColumnParent)|",
      "|java+method:///org/apache/cassandra/thrift/IndexClause/toString()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validatePredicate(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/thriftifyKeySlices(java.util.List,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/apache/cassandra/thrift/ConsistencyLevel/name()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/asIFilter(org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/begin(java.lang.String,java.util.Map)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/stopSession()|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getMinimumToken()|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/getRangeSlice(org.apache.cassandra.db.RangeSliceCommand,org.apache.cassandra.db.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/dht/Token/minKeyBound()|",
      "|java+method:///org/apache/cassandra/thrift/SlicePredicate/toString()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnParent/toString()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/getKeyspace()|"
    ],
    "affectedLib": "com.google.guava:guava:13.0.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.2.3",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.2.4",
    "caller": "|java+constructor:///org/apache/cassandra/db/columniterator/IndexedSliceReader/IndexedSliceReader(org.apache.cassandra.io.sstable.SSTableReader,org.apache.cassandra.db.RowIndexEntry,org.apache.cassandra.io.util.FileDataInput,org.apache.cassandra.db.filter.ColumnSlice%5B%5D,boolean)|",
    "called": "|java+constructor:///com/google/common/collect/AbstractIterator/AbstractIterator()|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/io/sstable/IndexHelper/deserializeIndex(org.apache.cassandra.io.util.FileDataInput)|",
      "|java+method:///org/apache/cassandra/io/sstable/IndexHelper/skipBloomFilter(java.io.DataInput)|",
      "|java+constructor:///org/apache/cassandra/db/columniterator/IndexedSliceReader$SimpleBlockFetcher/IndexedSliceReader$SimpleBlockFetcher(org.apache.cassandra.db.columniterator.IndexedSliceReader)|",
      "|java+method:///org/apache/cassandra/io/util/FileDataInput/getPath()|",
      "|java+constructor:///org/apache/cassandra/db/columniterator/IndexedSliceReader$IndexedBlockFetcher/IndexedSliceReader$IndexedBlockFetcher(org.apache.cassandra.db.columniterator.IndexedSliceReader,long)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+constructor:///java/util/ArrayDeque/ArrayDeque()|",
      "|java+method:///org/apache/cassandra/io/util/FileDataInput/getFilePointer()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/create(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableReader/markSuspect()|",
      "|java+method:///org/apache/cassandra/db/columniterator/IndexedSliceReader/setToRowStart(org.apache.cassandra.io.sstable.SSTableReader,org.apache.cassandra.db.RowIndexEntry,org.apache.cassandra.io.util.FileDataInput)|",
      "|java+method:///org/apache/cassandra/db/RowIndexEntry/deletionInfo()|",
      "|java+method:///org/apache/cassandra/db/DeletionInfo/serializer()|",
      "|java+constructor:///org/apache/cassandra/io/sstable/CorruptSSTableException/CorruptSSTableException(java.lang.Exception,java.lang.String)|",
      "|java+constructor:///com/google/common/collect/AbstractIterator/AbstractIterator()|",
      "|java+method:///org/apache/cassandra/db/DeletionInfo$Serializer/deserializeFromSSTable(java.io.DataInput,org.apache.cassandra.io.sstable.Descriptor$Version)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/delete(org.apache.cassandra.db.DeletionInfo)|",
      "|java+method:///org/apache/cassandra/db/RowIndexEntry/columnsIndex()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/io/sstable/IndexHelper/deserializeIndex(org.apache.cassandra.io.util.FileDataInput)|",
      "|java+constructor:///org/apache/cassandra/db/columniterator/IndexedSliceReader$SimpleBlockFetcher/IndexedSliceReader$SimpleBlockFetcher(org.apache.cassandra.db.columniterator.IndexedSliceReader)|",
      "|java+method:///org/apache/cassandra/io/util/FileDataInput/getPath()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+constructor:///java/util/ArrayDeque/ArrayDeque()|",
      "|java+method:///org/apache/cassandra/io/util/FileDataInput/getFilePointer()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/create(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableReader/markSuspect()|",
      "|java+method:///org/apache/cassandra/db/columniterator/IndexedSliceReader/setToRowStart(org.apache.cassandra.io.sstable.SSTableReader,org.apache.cassandra.db.RowIndexEntry,org.apache.cassandra.io.util.FileDataInput)|",
      "|java+method:///org/apache/cassandra/db/RowIndexEntry/deletionInfo()|",
      "|java+constructor:///org/apache/cassandra/db/columniterator/IndexedSliceReader$IndexedBlockFetcher/IndexedSliceReader$IndexedBlockFetcher(org.apache.cassandra.db.columniterator.IndexedSliceReader,long)|",
      "|java+method:///org/apache/cassandra/io/sstable/IndexHelper/skipSSTableBloomFilter(java.io.DataInput,org.apache.cassandra.io.sstable.Descriptor$Version)|",
      "|java+method:///org/apache/cassandra/db/DeletionInfo/serializer()|",
      "|java+constructor:///org/apache/cassandra/io/sstable/CorruptSSTableException/CorruptSSTableException(java.lang.Exception,java.lang.String)|",
      "|java+constructor:///com/google/common/collect/AbstractIterator/AbstractIterator()|",
      "|java+method:///org/apache/cassandra/db/DeletionInfo$Serializer/deserializeFromSSTable(java.io.DataInput,org.apache.cassandra.io.sstable.Descriptor$Version)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/delete(org.apache.cassandra.db.DeletionInfo)|",
      "|java+method:///org/apache/cassandra/db/RowIndexEntry/columnsIndex()|"
    ],
    "affectedLib": "com.google.guava:guava:13.0.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.2.3",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.2.4",
    "caller": "|java+method:///org/apache/cassandra/service/CassandraDaemon/setup()|",
    "called": "|java+method:///com/google/common/collect/Iterables/concat(java.lang.Iterable,java.lang.Iterable)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRpcPort()|",
      "|java+method:///org/apache/cassandra/utils/CLibrary/tryMlockall()|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getNativeTransportPort()|",
      "|java+method:///org/apache/cassandra/config/Schema/getTables()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/db/SystemTable/finishStartup()|",
      "|java+method:///java/io/File/canWrite()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/io/File/isDirectory()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/concatWithIndexes()|",
      "|java+method:///java/lang/Runtime/getRuntime()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/transport/Server/Server(java.net.InetAddress,int)|",
      "|java+method:///org/apache/cassandra/db/commitlog/CommitLog/recover()|",
      "|java+method:///org/apache/cassandra/db/Table/all()|",
      "|java+method:///org/apache/cassandra/service/StorageService/registerDaemon(org.apache.cassandra.service.CassandraDaemon)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getSavedCachesLocation()|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/Directories/sstablesNeedsMigration()|",
      "|java+method:///java/io/File/canRead()|",
      "|java+method:///org/apache/cassandra/db/Table/getColumnFamilyStores()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRpcAddress()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/service/StorageService/initServer()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/enableAutoCompaction()|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///org/apache/cassandra/utils/Mx4jTool/maybeLoad()|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///org/apache/cassandra/concurrent/DebuggableScheduledThreadPoolExecutor/schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/loadSchemas()|",
      "|java+method:///java/lang/System/exit(int)|",
      "|java+method:///org/apache/cassandra/service/GCInspector/start()|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getAllDataFileLocations()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/scrubDataDirectories(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/ThriftServer/ThriftServer(java.net.InetAddress,int)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/lang/System/getProperty(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/db/Directories/migrateSSTables()|",
      "|java+method:///org/apache/cassandra/db/Table/open(java.lang.String)|",
      "|java+method:///java/lang/Thread/setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/cassandra/exceptions/ConfigurationException/getMessage()|",
      "|java+method:///java/lang/Runtime/totalMemory()|",
      "|java+constructor:///org/apache/cassandra/service/CassandraDaemon$1/CassandraDaemon$1(org.apache.cassandra.service.CassandraDaemon)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///java/lang/Runtime/maxMemory()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/io/File/canExecute()|",
      "|java+constructor:///org/apache/cassandra/service/CassandraDaemon$2/CassandraDaemon$2(org.apache.cassandra.service.CassandraDaemon)|",
      "|java+method:///java/lang/String/contains(java.lang.CharSequence)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/config/Schema/getTableMetaData(java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/SystemTable/checkHealth()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/disableAutoCompaction()|",
      "|java+method:///org/slf4j/Logger/isDebugEnabled()|",
      "|java+method:///com/google/common/collect/Iterables/concat(java.lang.Iterable,java.lang.Iterable)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getNativeTransportAddress()|",
      "|java+method:///org/apache/cassandra/cache/AutoSavingCache/size()|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getCommitLogLocation()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRpcPort()|",
      "|java+method:///org/apache/cassandra/utils/CLibrary/tryMlockall()|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getNativeTransportPort()|",
      "|java+method:///org/apache/cassandra/config/Schema/getTables()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+constructor:///org/apache/cassandra/db/MeteredFlusher/MeteredFlusher()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/db/SystemTable/finishStartup()|",
      "|java+method:///java/io/File/canWrite()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/io/File/isDirectory()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/concatWithIndexes()|",
      "|java+method:///java/lang/Runtime/getRuntime()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/transport/Server/Server(java.net.InetAddress,int)|",
      "|java+method:///org/apache/cassandra/db/commitlog/CommitLog/recover()|",
      "|java+method:///org/apache/cassandra/db/Table/all()|",
      "|java+method:///org/apache/cassandra/service/StorageService/registerDaemon(org.apache.cassandra.service.CassandraDaemon)|",
      "|java+method:///java/util/Arrays/toString(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getSavedCachesLocation()|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/Directories/sstablesNeedsMigration()|",
      "|java+method:///java/io/File/canRead()|",
      "|java+method:///org/apache/cassandra/db/Table/getColumnFamilyStores()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRpcAddress()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/concurrent/DebuggableScheduledThreadPoolExecutor/scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)|",
      "|java+method:///org/apache/cassandra/service/StorageService/initServer()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/enableAutoCompaction()|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///org/apache/cassandra/utils/Mx4jTool/maybeLoad()|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///org/apache/cassandra/concurrent/DebuggableScheduledThreadPoolExecutor/schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/loadSchemas()|",
      "|java+method:///java/lang/System/exit(int)|",
      "|java+method:///org/apache/cassandra/service/GCInspector/start()|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getAllDataFileLocations()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/scrubDataDirectories(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/ThriftServer/ThriftServer(java.net.InetAddress,int)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/lang/System/getProperty(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/db/Directories/migrateSSTables()|",
      "|java+method:///org/apache/cassandra/db/Table/open(java.lang.String)|",
      "|java+method:///java/lang/Thread/setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/cassandra/exceptions/ConfigurationException/getMessage()|",
      "|java+method:///java/lang/Runtime/totalMemory()|",
      "|java+constructor:///org/apache/cassandra/service/CassandraDaemon$1/CassandraDaemon$1(org.apache.cassandra.service.CassandraDaemon)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///java/lang/Runtime/maxMemory()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/io/File/canExecute()|",
      "|java+constructor:///org/apache/cassandra/service/CassandraDaemon$2/CassandraDaemon$2(org.apache.cassandra.service.CassandraDaemon)|",
      "|java+method:///java/lang/String/contains(java.lang.CharSequence)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/config/Schema/getTableMetaData(java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/SystemTable/checkHealth()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/disableAutoCompaction()|",
      "|java+method:///org/slf4j/Logger/isDebugEnabled()|",
      "|java+method:///com/google/common/collect/Iterables/concat(java.lang.Iterable,java.lang.Iterable)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getNativeTransportAddress()|",
      "|java+method:///org/apache/cassandra/cache/AutoSavingCache/size()|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getCommitLogLocation()|"
    ],
    "affectedLib": "com.google.guava:guava:13.0.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.2.3",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.2.4",
    "caller": "|java+method:///org/apache/cassandra/thrift/CassandraServer/get_range_slices(org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.thrift.KeyRange,org.apache.cassandra.thrift.ConsistencyLevel)|",
    "called": "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/fromThrift(org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestValidationException)|",
      "|java+method:///org/apache/cassandra/dht/Range/makeRowRange(org.apache.cassandra.dht.Token,org.apache.cassandra.dht.Token,org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/dht/Token$TokenFactory/fromString(java.lang.String)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/instance()|",
      "|java+method:///org/apache/cassandra/db/RowPosition/forKey(java.nio.ByteBuffer,org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnParent(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.ColumnParent)|",
      "|java+method:///org/apache/cassandra/db/ConsistencyLevel/validateForRead(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRangeRpcTimeout()|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/getRangeSlice(org.apache.cassandra.db.RangeSliceCommand,org.apache.cassandra.db.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/startSessionIfRequested()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestTimeoutException)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/KeyRange/toString()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/hasColumnFamilyAccess(java.lang.String,java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/release()|",
      "|java+constructor:///org/apache/cassandra/dht/Bounds/Bounds(org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.RingPosition)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.UnavailableException)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validatePredicate(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/thriftifyKeySlices(java.util.List,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/apache/cassandra/thrift/ConsistencyLevel/name()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getComparatorFor(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/schedule(long)|",
      "|java+method:///org/apache/cassandra/dht/Token/maxKeyBound(org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/asIFilter(org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKeyRange(org.apache.cassandra.config.CFMetaData,java.nio.ByteBuffer,org.apache.cassandra.thrift.KeyRange)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/begin(java.lang.String,java.util.Map)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/stopSession()|",
      "|java+constructor:///org/apache/cassandra/db/RangeSliceCommand/RangeSliceCommand(java.lang.String,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.db.filter.IDiskAtomFilter,org.apache.cassandra.dht.AbstractBounds,java.util.List,int)|",
      "|java+method:///org/apache/cassandra/thrift/SlicePredicate/toString()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getTokenFactory()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnParent/toString()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/getKeyspace()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/fromThrift(org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestValidationException)|",
      "|java+method:///org/apache/cassandra/dht/Range/makeRowRange(org.apache.cassandra.dht.Token,org.apache.cassandra.dht.Token,org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/dht/Token$TokenFactory/fromString(java.lang.String)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/instance()|",
      "|java+method:///org/apache/cassandra/db/RowPosition/forKey(java.nio.ByteBuffer,org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnParent(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.ColumnParent)|",
      "|java+method:///org/apache/cassandra/db/ConsistencyLevel/validateForRead(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRangeRpcTimeout()|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/getRangeSlice(org.apache.cassandra.db.RangeSliceCommand,org.apache.cassandra.db.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/startSessionIfRequested()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestTimeoutException)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/KeyRange/toString()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/hasColumnFamilyAccess(java.lang.String,java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/release()|",
      "|java+constructor:///org/apache/cassandra/dht/Bounds/Bounds(org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.RingPosition)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.UnavailableException)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validatePredicate(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/thriftifyKeySlices(java.util.List,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/apache/cassandra/thrift/ConsistencyLevel/name()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getComparatorFor(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/schedule(long)|",
      "|java+method:///org/apache/cassandra/dht/Token/maxKeyBound(org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/asIFilter(org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKeyRange(org.apache.cassandra.config.CFMetaData,java.nio.ByteBuffer,org.apache.cassandra.thrift.KeyRange)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/begin(java.lang.String,java.util.Map)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/stopSession()|",
      "|java+constructor:///org/apache/cassandra/db/RangeSliceCommand/RangeSliceCommand(java.lang.String,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.db.filter.IDiskAtomFilter,org.apache.cassandra.dht.AbstractBounds,java.util.List,int)|",
      "|java+method:///org/apache/cassandra/thrift/SlicePredicate/toString()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getTokenFactory()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnParent/toString()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/getKeyspace()|"
    ],
    "affectedLib": "com.google.guava:guava:13.0.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.2.3",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.2.4",
    "caller": "|java+method:///org/apache/cassandra/db/HintedHandOffManager/scheduleAllDeliveries()|",
    "called": "|java+method:///com/google/common/collect/ImmutableSortedSet/of()|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getTokenMetadata()|",
      "|java+constructor:///org/apache/cassandra/dht/Range/Range(org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/db/HintedHandOffManager/scheduleHintDelivery(java.net.InetAddress)|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getMinimumToken()|",
      "|java+method:///org/slf4j/Logger/isDebugEnabled()|",
      "|java+method:///com/google/common/collect/ImmutableSortedSet/of()|",
      "|java+method:///org/apache/cassandra/locator/TokenMetadata/getEndpointForHostId(java.util.UUID)|",
      "|java+constructor:///org/apache/cassandra/db/filter/NamesQueryFilter/NamesQueryFilter(java.util.SortedSet)|",
      "|java+method:///org/apache/cassandra/utils/UUIDGen/getUUID(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/db/Table/open(java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/getRangeSlice(java.nio.ByteBuffer,org.apache.cassandra.dht.AbstractBounds,int,org.apache.cassandra.db.filter.IDiskAtomFilter,java.util.List)|",
      "|java+method:///org/apache/cassandra/dht/Token/minKeyBound()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/db/Table/getColumnFamilyStore(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getTokenMetadata()|",
      "|java+constructor:///org/apache/cassandra/dht/Range/Range(org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/db/HintedHandOffManager/scheduleHintDelivery(java.net.InetAddress)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/getRangeSlice(java.nio.ByteBuffer,org.apache.cassandra.dht.AbstractBounds,int,org.apache.cassandra.db.filter.IDiskAtomFilter,java.util.List)|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getMinimumToken()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/slf4j/Logger/isDebugEnabled()|",
      "|java+method:///com/google/common/collect/ImmutableSortedSet/of()|",
      "|java+method:///org/apache/cassandra/locator/TokenMetadata/getEndpointForHostId(java.util.UUID)|",
      "|java+constructor:///org/apache/cassandra/db/filter/NamesQueryFilter/NamesQueryFilter(java.util.SortedSet)|",
      "|java+method:///org/apache/cassandra/utils/UUIDGen/getUUID(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/dht/Token/minKeyBound()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|"
    ],
    "affectedLib": "com.google.guava:guava:13.0.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.2.3",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.2.4",
    "caller": "|java+method:///org/apache/cassandra/thrift/CassandraServer/get_paged_slice(java.lang.String,org.apache.cassandra.thrift.KeyRange,java.nio.ByteBuffer,org.apache.cassandra.thrift.ConsistencyLevel)|",
    "called": "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/fromThrift(org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestValidationException)|",
      "|java+method:///org/apache/cassandra/dht/Range/makeRowRange(org.apache.cassandra.dht.Token,org.apache.cassandra.dht.Token,org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/dht/Token$TokenFactory/fromString(java.lang.String)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/instance()|",
      "|java+method:///org/apache/cassandra/db/ConsistencyLevel/validateForRead(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/schedule(long)|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/getRangeSlice(org.apache.cassandra.db.RangeSliceCommand,org.apache.cassandra.db.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/startSessionIfRequested()|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/bytesToHex(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestTimeoutException)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/KeyRange/toString()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/hasColumnFamilyAccess(java.lang.String,java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/release()|",
      "|java+constructor:///org/apache/cassandra/dht/Bounds/Bounds(org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.RingPosition)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.UnavailableException)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/RowPosition/forKey(java.nio.ByteBuffer,org.apache.cassandra.dht.IPartitioner)|",
      "|java+constructor:///org/apache/cassandra/thrift/SliceRange/SliceRange(java.nio.ByteBuffer,java.nio.ByteBuffer,boolean,int)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/thriftifyKeySlices(java.util.List,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/apache/cassandra/thrift/ConsistencyLevel/name()|",
      "|java+method:///org/apache/cassandra/dht/Token/maxKeyBound(org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/asIFilter(org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKeyRange(org.apache.cassandra.config.CFMetaData,java.nio.ByteBuffer,org.apache.cassandra.thrift.KeyRange)|",
      "|java+constructor:///org/apache/cassandra/db/RangeSliceCommand/RangeSliceCommand(java.lang.String,java.lang.String,java.nio.ByteBuffer,org.apache.cassandra.db.filter.IDiskAtomFilter,org.apache.cassandra.dht.AbstractBounds,java.util.List,int,boolean,boolean)|",
      "|java+constructor:///org/apache/cassandra/thrift/ColumnParent/ColumnParent(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRangeRpcTimeout()|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/begin(java.lang.String,java.util.Map)|",
      "|java+method:///org/apache/cassandra/thrift/SlicePredicate/setSlice_range(org.apache.cassandra.thrift.SliceRange)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/stopSession()|",
      "|java+constructor:///org/apache/cassandra/thrift/SlicePredicate/SlicePredicate()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getTokenFactory()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/getKeyspace()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/fromThrift(org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestValidationException)|",
      "|java+method:///org/apache/cassandra/dht/Range/makeRowRange(org.apache.cassandra.dht.Token,org.apache.cassandra.dht.Token,org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/dht/Token$TokenFactory/fromString(java.lang.String)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/instance()|",
      "|java+method:///org/apache/cassandra/db/ConsistencyLevel/validateForRead(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/schedule(long)|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/getRangeSlice(org.apache.cassandra.db.RangeSliceCommand,org.apache.cassandra.db.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/startSessionIfRequested()|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/bytesToHex(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestTimeoutException)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/KeyRange/toString()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/hasColumnFamilyAccess(java.lang.String,java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/release()|",
      "|java+constructor:///org/apache/cassandra/dht/Bounds/Bounds(org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.RingPosition)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.UnavailableException)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/RowPosition/forKey(java.nio.ByteBuffer,org.apache.cassandra.dht.IPartitioner)|",
      "|java+constructor:///org/apache/cassandra/thrift/SliceRange/SliceRange(java.nio.ByteBuffer,java.nio.ByteBuffer,boolean,int)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/thriftifyKeySlices(java.util.List,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/apache/cassandra/thrift/ConsistencyLevel/name()|",
      "|java+method:///org/apache/cassandra/dht/Token/maxKeyBound(org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/asIFilter(org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKeyRange(org.apache.cassandra.config.CFMetaData,java.nio.ByteBuffer,org.apache.cassandra.thrift.KeyRange)|",
      "|java+constructor:///org/apache/cassandra/db/RangeSliceCommand/RangeSliceCommand(java.lang.String,java.lang.String,java.nio.ByteBuffer,org.apache.cassandra.db.filter.IDiskAtomFilter,org.apache.cassandra.dht.AbstractBounds,java.util.List,int,boolean,boolean)|",
      "|java+constructor:///org/apache/cassandra/thrift/ColumnParent/ColumnParent(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRangeRpcTimeout()|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/begin(java.lang.String,java.util.Map)|",
      "|java+method:///org/apache/cassandra/thrift/SlicePredicate/setSlice_range(org.apache.cassandra.thrift.SliceRange)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/stopSession()|",
      "|java+constructor:///org/apache/cassandra/thrift/SlicePredicate/SlicePredicate()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getTokenFactory()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/getKeyspace()|"
    ],
    "affectedLib": "com.google.guava:guava:13.0.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.2.3",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.2.4",
    "caller": "|java+constructor:///org/apache/cassandra/db/columniterator/SimpleSliceReader/SimpleSliceReader(org.apache.cassandra.io.sstable.SSTableReader,org.apache.cassandra.db.RowIndexEntry,org.apache.cassandra.io.util.FileDataInput,java.nio.ByteBuffer)|",
    "called": "|java+constructor:///com/google/common/collect/AbstractIterator/AbstractIterator()|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/io/util/FileDataInput/seek(long)|",
      "|java+method:///org/apache/cassandra/io/sstable/IndexHelper/skipBloomFilter(java.io.DataInput)|",
      "|java+method:///org/apache/cassandra/io/util/FileDataInput/readInt()|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableReader/getFilename()|",
      "|java+method:///org/apache/cassandra/io/sstable/IndexHelper/skipIndex(java.io.DataInput)|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableReader/readRowSize(java.io.DataInput,org.apache.cassandra.io.sstable.Descriptor)|",
      "|java+method:///org/apache/cassandra/io/util/FileDataInput/mark()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/delete(org.apache.cassandra.db.DeletionInfo)|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableReader/markSuspect()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/getOnDiskSerializer()|",
      "|java+method:///org/apache/cassandra/db/DeletionInfo/serializer()|",
      "|java+constructor:///org/apache/cassandra/io/sstable/CorruptSSTableException/CorruptSSTableException(java.lang.Exception,java.lang.String)|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/skipShortLength(java.io.DataInput)|",
      "|java+constructor:///com/google/common/collect/AbstractIterator/AbstractIterator()|",
      "|java+method:///org/apache/cassandra/db/DeletionInfo$Serializer/deserializeFromSSTable(java.io.DataInput,org.apache.cassandra.io.sstable.Descriptor$Version)|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableReader/getFileDataInput(long)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/create(org.apache.cassandra.config.CFMetaData)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/io/util/FileDataInput/seek(long)|",
      "|java+method:///org/apache/cassandra/io/util/FileDataInput/readInt()|",
      "|java+method:///org/apache/cassandra/io/sstable/IndexHelper/skipSSTableBloomFilter(java.io.DataInput,org.apache.cassandra.io.sstable.Descriptor$Version)|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableReader/getFilename()|",
      "|java+method:///org/apache/cassandra/io/sstable/IndexHelper/skipIndex(java.io.DataInput)|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableReader/readRowSize(java.io.DataInput,org.apache.cassandra.io.sstable.Descriptor)|",
      "|java+method:///org/apache/cassandra/io/util/FileDataInput/mark()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/delete(org.apache.cassandra.db.DeletionInfo)|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableReader/markSuspect()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/getOnDiskSerializer()|",
      "|java+method:///org/apache/cassandra/db/DeletionInfo/serializer()|",
      "|java+constructor:///org/apache/cassandra/io/sstable/CorruptSSTableException/CorruptSSTableException(java.lang.Exception,java.lang.String)|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/skipShortLength(java.io.DataInput)|",
      "|java+constructor:///com/google/common/collect/AbstractIterator/AbstractIterator()|",
      "|java+method:///org/apache/cassandra/db/DeletionInfo$Serializer/deserializeFromSSTable(java.io.DataInput,org.apache.cassandra.io.sstable.Descriptor$Version)|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableReader/getFileDataInput(long)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/create(org.apache.cassandra.config.CFMetaData)|"
    ],
    "affectedLib": "com.google.guava:guava:13.0.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.2.3",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.2.4",
    "caller": "|java+method:///org/apache/cassandra/tools/NodeCmd/printRing(java.io.PrintStream,java.lang.String)|",
    "called": "|java+method:///com/google/common/collect/LinkedHashMultimap/keys()|",
    "v1Body": [
      "|java+method:///java/net/InetAddress/getHostAddress()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/tools/NodeProbe/getOwnership()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/io/PrintStream/println()|",
      "|java+method:///org/apache/cassandra/tools/NodeCmd/printDc(java.io.PrintStream,java.lang.String,java.lang.String,com.google.common.collect.LinkedHashMultimap,boolean,java.util.Map)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/locator/EndpointSnitchInfoMBean/getDatacenter(java.lang.String)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/tools/NodeProbe/getEndpointSnitchInfoProxy()|",
      "|java+method:///java/io/PrintStream/printf(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///com/google/common/collect/LinkedHashMultimap/create()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+constructor:///java/util/LinkedHashMap/LinkedHashMap()|",
      "|java+method:///com/google/common/collect/Maps/newLinkedHashMap()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/apache/cassandra/tools/NodeProbe/effectiveOwnership(java.lang.String)|",
      "|java+method:///org/apache/cassandra/tools/NodeProbe/getTokenToEndpointMap()|",
      "|java+method:///com/google/common/collect/LinkedHashMultimap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Set/iterator()|"
    ],
    "v2Body": [
      "|java+method:///java/net/InetAddress/getHostAddress()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/tools/NodeProbe/getOwnership()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/tools/NodeCmd/printDc(java.io.PrintStream,java.lang.String,java.lang.String,com.google.common.collect.LinkedHashMultimap,boolean,java.util.Map)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///java/io/PrintStream/printf(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+constructor:///java/util/LinkedHashMap/LinkedHashMap()|",
      "|java+constructor:///org/apache/cassandra/tools/NodeCmd$1/NodeCmd$1(org.apache.cassandra.tools.NodeCmd)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/google/common/collect/Maps/newLinkedHashMap()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/io/PrintStream/println()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/tools/NodeProbe/effectiveOwnership(java.lang.String)|",
      "|java+method:///org/apache/cassandra/tools/NodeProbe/getTokenToEndpointMap()|",
      "|java+method:///com/google/common/collect/LinkedHashMultimap/keys()|",
      "|java+method:///org/apache/cassandra/locator/EndpointSnitchInfoMBean/getDatacenter(java.lang.String)|",
      "|java+method:///com/google/common/collect/LinkedHashMultimap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/cassandra/tools/NodeProbe/getEndpointSnitchInfoProxy()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/google/common/collect/LinkedHashMultimap/create()|",
      "|java+method:///java/util/Collections/max(java.util.Collection,java.util.Comparator)|"
    ],
    "affectedLib": "com.google.guava:guava:13.0.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.2.3",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.2.4",
    "caller": "|java+method:///org/apache/cassandra/thrift/CassandraServer/get_paged_slice(java.lang.String,org.apache.cassandra.thrift.KeyRange,java.nio.ByteBuffer,org.apache.cassandra.thrift.ConsistencyLevel)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/ColumnParent/ColumnParent(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/fromThrift(org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestValidationException)|",
      "|java+method:///org/apache/cassandra/dht/Range/makeRowRange(org.apache.cassandra.dht.Token,org.apache.cassandra.dht.Token,org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/dht/Token$TokenFactory/fromString(java.lang.String)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/instance()|",
      "|java+method:///org/apache/cassandra/db/ConsistencyLevel/validateForRead(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/schedule(long)|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/getRangeSlice(org.apache.cassandra.db.RangeSliceCommand,org.apache.cassandra.db.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/startSessionIfRequested()|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/bytesToHex(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestTimeoutException)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/KeyRange/toString()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/hasColumnFamilyAccess(java.lang.String,java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/release()|",
      "|java+constructor:///org/apache/cassandra/dht/Bounds/Bounds(org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.RingPosition)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.UnavailableException)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/RowPosition/forKey(java.nio.ByteBuffer,org.apache.cassandra.dht.IPartitioner)|",
      "|java+constructor:///org/apache/cassandra/thrift/SliceRange/SliceRange(java.nio.ByteBuffer,java.nio.ByteBuffer,boolean,int)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/thriftifyKeySlices(java.util.List,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/apache/cassandra/thrift/ConsistencyLevel/name()|",
      "|java+method:///org/apache/cassandra/dht/Token/maxKeyBound(org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/asIFilter(org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKeyRange(org.apache.cassandra.config.CFMetaData,java.nio.ByteBuffer,org.apache.cassandra.thrift.KeyRange)|",
      "|java+constructor:///org/apache/cassandra/db/RangeSliceCommand/RangeSliceCommand(java.lang.String,java.lang.String,java.nio.ByteBuffer,org.apache.cassandra.db.filter.IDiskAtomFilter,org.apache.cassandra.dht.AbstractBounds,java.util.List,int,boolean,boolean)|",
      "|java+constructor:///org/apache/cassandra/thrift/ColumnParent/ColumnParent(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRangeRpcTimeout()|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/begin(java.lang.String,java.util.Map)|",
      "|java+method:///org/apache/cassandra/thrift/SlicePredicate/setSlice_range(org.apache.cassandra.thrift.SliceRange)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/stopSession()|",
      "|java+constructor:///org/apache/cassandra/thrift/SlicePredicate/SlicePredicate()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getTokenFactory()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/getKeyspace()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/fromThrift(org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestValidationException)|",
      "|java+method:///org/apache/cassandra/dht/Range/makeRowRange(org.apache.cassandra.dht.Token,org.apache.cassandra.dht.Token,org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/dht/Token$TokenFactory/fromString(java.lang.String)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/instance()|",
      "|java+method:///org/apache/cassandra/db/ConsistencyLevel/validateForRead(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/schedule(long)|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/getRangeSlice(org.apache.cassandra.db.RangeSliceCommand,org.apache.cassandra.db.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/startSessionIfRequested()|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/bytesToHex(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestTimeoutException)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/KeyRange/toString()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/hasColumnFamilyAccess(java.lang.String,java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/release()|",
      "|java+constructor:///org/apache/cassandra/dht/Bounds/Bounds(org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.RingPosition)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.UnavailableException)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/RowPosition/forKey(java.nio.ByteBuffer,org.apache.cassandra.dht.IPartitioner)|",
      "|java+constructor:///org/apache/cassandra/thrift/SliceRange/SliceRange(java.nio.ByteBuffer,java.nio.ByteBuffer,boolean,int)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/thriftifyKeySlices(java.util.List,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/apache/cassandra/thrift/ConsistencyLevel/name()|",
      "|java+method:///org/apache/cassandra/dht/Token/maxKeyBound(org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/asIFilter(org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKeyRange(org.apache.cassandra.config.CFMetaData,java.nio.ByteBuffer,org.apache.cassandra.thrift.KeyRange)|",
      "|java+constructor:///org/apache/cassandra/db/RangeSliceCommand/RangeSliceCommand(java.lang.String,java.lang.String,java.nio.ByteBuffer,org.apache.cassandra.db.filter.IDiskAtomFilter,org.apache.cassandra.dht.AbstractBounds,java.util.List,int,boolean,boolean)|",
      "|java+constructor:///org/apache/cassandra/thrift/ColumnParent/ColumnParent(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRangeRpcTimeout()|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/begin(java.lang.String,java.util.Map)|",
      "|java+method:///org/apache/cassandra/thrift/SlicePredicate/setSlice_range(org.apache.cassandra.thrift.SliceRange)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/stopSession()|",
      "|java+constructor:///org/apache/cassandra/thrift/SlicePredicate/SlicePredicate()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getTokenFactory()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/getKeyspace()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.2.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.2.3",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.2.4",
    "caller": "|java+method:///org/apache/cassandra/thrift/CassandraServer/get_indexed_slices(org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.IndexClause,org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.thrift.ConsistencyLevel)|",
    "called": "|java+method:///org/apache/cassandra/thrift/IndexClause/toString()|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/fromThrift(org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestValidationException)|",
      "|java+constructor:///org/apache/cassandra/dht/Bounds/Bounds(org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.RingPosition)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/instance()|",
      "|java+constructor:///org/apache/cassandra/db/RangeSliceCommand/RangeSliceCommand(java.lang.String,java.lang.String,java.nio.ByteBuffer,org.apache.cassandra.db.filter.IDiskAtomFilter,org.apache.cassandra.dht.AbstractBounds,java.util.List,int)|",
      "|java+method:///org/apache/cassandra/db/RowPosition/forKey(java.nio.ByteBuffer,org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String,boolean)|",
      "|java+method:///org/apache/cassandra/db/ConsistencyLevel/validateForRead(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getComparatorFor(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/startSessionIfRequested()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestTimeoutException)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/hasColumnFamilyAccess(java.lang.String,java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.UnavailableException)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateIndexClauses(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.IndexClause)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnParent(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.ColumnParent)|",
      "|java+method:///org/apache/cassandra/thrift/IndexClause/toString()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validatePredicate(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/thriftifyKeySlices(java.util.List,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/apache/cassandra/thrift/ConsistencyLevel/name()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/asIFilter(org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/begin(java.lang.String,java.util.Map)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/stopSession()|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getMinimumToken()|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/getRangeSlice(org.apache.cassandra.db.RangeSliceCommand,org.apache.cassandra.db.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/dht/Token/minKeyBound()|",
      "|java+method:///org/apache/cassandra/thrift/SlicePredicate/toString()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnParent/toString()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/getKeyspace()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/fromThrift(org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestValidationException)|",
      "|java+constructor:///org/apache/cassandra/dht/Bounds/Bounds(org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.RingPosition)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/instance()|",
      "|java+constructor:///org/apache/cassandra/db/RangeSliceCommand/RangeSliceCommand(java.lang.String,java.lang.String,java.nio.ByteBuffer,org.apache.cassandra.db.filter.IDiskAtomFilter,org.apache.cassandra.dht.AbstractBounds,java.util.List,int)|",
      "|java+method:///org/apache/cassandra/db/RowPosition/forKey(java.nio.ByteBuffer,org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String,boolean)|",
      "|java+method:///org/apache/cassandra/db/ConsistencyLevel/validateForRead(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getComparatorFor(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/startSessionIfRequested()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestTimeoutException)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/hasColumnFamilyAccess(java.lang.String,java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.UnavailableException)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateIndexClauses(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.IndexClause)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnParent(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.ColumnParent)|",
      "|java+method:///org/apache/cassandra/thrift/IndexClause/toString()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validatePredicate(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/thriftifyKeySlices(java.util.List,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/apache/cassandra/thrift/ConsistencyLevel/name()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/asIFilter(org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/begin(java.lang.String,java.util.Map)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/stopSession()|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getMinimumToken()|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/getRangeSlice(org.apache.cassandra.db.RangeSliceCommand,org.apache.cassandra.db.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/dht/Token/minKeyBound()|",
      "|java+method:///org/apache/cassandra/thrift/SlicePredicate/toString()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnParent/toString()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/getKeyspace()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.2.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.2.3",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.2.4",
    "caller": "|java+method:///org/apache/cassandra/thrift/CassandraServer/get_range_slices(org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.thrift.KeyRange,org.apache.cassandra.thrift.ConsistencyLevel)|",
    "called": "|java+method:///org/apache/cassandra/thrift/KeyRange/toString()|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/fromThrift(org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestValidationException)|",
      "|java+method:///org/apache/cassandra/dht/Range/makeRowRange(org.apache.cassandra.dht.Token,org.apache.cassandra.dht.Token,org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/dht/Token$TokenFactory/fromString(java.lang.String)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/instance()|",
      "|java+method:///org/apache/cassandra/db/RowPosition/forKey(java.nio.ByteBuffer,org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnParent(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.ColumnParent)|",
      "|java+method:///org/apache/cassandra/db/ConsistencyLevel/validateForRead(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRangeRpcTimeout()|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/getRangeSlice(org.apache.cassandra.db.RangeSliceCommand,org.apache.cassandra.db.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/startSessionIfRequested()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestTimeoutException)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/KeyRange/toString()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/hasColumnFamilyAccess(java.lang.String,java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/release()|",
      "|java+constructor:///org/apache/cassandra/dht/Bounds/Bounds(org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.RingPosition)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.UnavailableException)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validatePredicate(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/thriftifyKeySlices(java.util.List,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/apache/cassandra/thrift/ConsistencyLevel/name()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getComparatorFor(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/schedule(long)|",
      "|java+method:///org/apache/cassandra/dht/Token/maxKeyBound(org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/asIFilter(org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKeyRange(org.apache.cassandra.config.CFMetaData,java.nio.ByteBuffer,org.apache.cassandra.thrift.KeyRange)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/begin(java.lang.String,java.util.Map)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/stopSession()|",
      "|java+constructor:///org/apache/cassandra/db/RangeSliceCommand/RangeSliceCommand(java.lang.String,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.db.filter.IDiskAtomFilter,org.apache.cassandra.dht.AbstractBounds,java.util.List,int)|",
      "|java+method:///org/apache/cassandra/thrift/SlicePredicate/toString()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getTokenFactory()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnParent/toString()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/getKeyspace()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/fromThrift(org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestValidationException)|",
      "|java+method:///org/apache/cassandra/dht/Range/makeRowRange(org.apache.cassandra.dht.Token,org.apache.cassandra.dht.Token,org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/dht/Token$TokenFactory/fromString(java.lang.String)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/instance()|",
      "|java+method:///org/apache/cassandra/db/RowPosition/forKey(java.nio.ByteBuffer,org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnParent(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.ColumnParent)|",
      "|java+method:///org/apache/cassandra/db/ConsistencyLevel/validateForRead(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRangeRpcTimeout()|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/getRangeSlice(org.apache.cassandra.db.RangeSliceCommand,org.apache.cassandra.db.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/startSessionIfRequested()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestTimeoutException)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/KeyRange/toString()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/hasColumnFamilyAccess(java.lang.String,java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/release()|",
      "|java+constructor:///org/apache/cassandra/dht/Bounds/Bounds(org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.RingPosition)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.UnavailableException)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validatePredicate(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/thriftifyKeySlices(java.util.List,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///org/apache/cassandra/thrift/ConsistencyLevel/name()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getComparatorFor(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/schedule(long)|",
      "|java+method:///org/apache/cassandra/dht/Token/maxKeyBound(org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/asIFilter(org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKeyRange(org.apache.cassandra.config.CFMetaData,java.nio.ByteBuffer,org.apache.cassandra.thrift.KeyRange)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/begin(java.lang.String,java.util.Map)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/stopSession()|",
      "|java+constructor:///org/apache/cassandra/db/RangeSliceCommand/RangeSliceCommand(java.lang.String,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.db.filter.IDiskAtomFilter,org.apache.cassandra.dht.AbstractBounds,java.util.List,int)|",
      "|java+method:///org/apache/cassandra/thrift/SlicePredicate/toString()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getTokenFactory()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnParent/toString()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/getKeyspace()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.2.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.2.3",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.2.4",
    "caller": "|java+method:///org/apache/cassandra/cli/CliClient/showColumnFamily(java.io.PrintStream,org.apache.cassandra.thrift.CfDef)|",
    "called": "|java+method:///org/apache/cassandra/thrift/CfDef/isSetBloom_filter_fp_chance()|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/cli/CliUtils/quote(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/normaliseType(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliUtils/escapeSQLString(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/showColumnMeta(java.io.PrintStream,org.apache.cassandra.thrift.CfDef,org.apache.cassandra.thrift.ColumnDef)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///java/io/PrintStream/append(java.lang.CharSequence)|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isEmpty(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/writeAttr(java.io.PrintStream,boolean,java.lang.String,java.lang.Number)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetBloom_filter_fp_chance()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/writeAttr(java.io.PrintStream,boolean,java.lang.String,java.lang.Boolean)|",
      "|java+method:///java/util/Map/size()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/writeAttrRaw(java.io.PrintStream,boolean,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/writeAttr(java.io.PrintStream,boolean,java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/cli/CliUtils/quote(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/normaliseType(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/showColumnMeta(java.io.PrintStream,org.apache.cassandra.thrift.CfDef,org.apache.cassandra.thrift.ColumnDef)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/cassandra/cli/CliUtils/maybeEscapeName(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///java/io/PrintStream/append(java.lang.CharSequence)|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isEmpty(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/writeAttr(java.io.PrintStream,boolean,java.lang.String,java.lang.Number)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetBloom_filter_fp_chance()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/writeAttr(java.io.PrintStream,boolean,java.lang.String,java.lang.Boolean)|",
      "|java+method:///java/util/Map/size()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/writeAttrRaw(java.io.PrintStream,boolean,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/writeAttr(java.io.PrintStream,boolean,java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.2.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.2.3",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.2.4",
    "caller": "|java+method:///org/apache/cassandra/cql/QueryProcessor/multiRangeSlice(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.cql.SelectStatement,java.util.List)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/IndexExpression/IndexExpression(java.nio.ByteBuffer,org.apache.cassandra.thrift.IndexOperator,java.nio.ByteBuffer)|",
    "v1Body": [
      "|java+constructor:///org/apache/cassandra/thrift/IndexExpression/IndexExpression(java.nio.ByteBuffer,org.apache.cassandra.thrift.IndexOperator,java.nio.ByteBuffer)|",
      "|java+method:///java/nio/ByteBuffer/equals(java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/db/RangeSliceCommand/RangeSliceCommand(java.lang.String,java.lang.String,java.nio.ByteBuffer,org.apache.cassandra.db.filter.IDiskAtomFilter,org.apache.cassandra.dht.AbstractBounds,java.util.List,int)|",
      "|java+constructor:///org/apache/cassandra/exceptions/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getConsistencyLevel()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/includeStartKey()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|",
      "|java+method:///org/apache/cassandra/cql/Relation/getValue()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/db/RowPosition/isMinimum(org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getColumnFamily()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getValueValidator(java.lang.String,java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getNumRecords()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getKeyFinish()|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///org/apache/cassandra/cql/Relation/operator()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/cassandra/dht/Bounds/Bounds(org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.RingPosition)|",
      "|java+method:///java/util/List/remove(int)|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getKeyStart()|",
      "|java+method:///org/apache/cassandra/db/RowPosition/compareTo(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/includeFinishKey()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/db/RowPosition/forKey(java.nio.ByteBuffer,org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/filterFromSelect(org.apache.cassandra.cql.SelectStatement,org.apache.cassandra.config.CFMetaData,java.util.List)|",
      "|java+method:///org/apache/cassandra/thrift/IndexOperator/valueOf(java.lang.String)|",
      "|java+method:///java/util/List/subList(int,int)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/isKeyRange()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/validateFilter(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.db.filter.IDiskAtomFilter)|",
      "|java+method:///org/apache/cassandra/cql/Relation/getEntity()|",
      "|java+method:///org/apache/cassandra/cql/RelationType/toString()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getColumnRelations()|",
      "|java+method:///org/apache/cassandra/config/Schema/getCFMetaData(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getKeyValidator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/cql/Term/getByteBuffer(org.apache.cassandra.db.marshal.AbstractType,java.util.List)|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/getRangeSlice(org.apache.cassandra.db.RangeSliceCommand,org.apache.cassandra.db.ConsistencyLevel)|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/cassandra/thrift/IndexExpression/IndexExpression(java.nio.ByteBuffer,org.apache.cassandra.thrift.IndexOperator,java.nio.ByteBuffer)|",
      "|java+method:///java/nio/ByteBuffer/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/includeFinishKey()|",
      "|java+constructor:///org/apache/cassandra/db/RangeSliceCommand/RangeSliceCommand(java.lang.String,java.lang.String,java.nio.ByteBuffer,org.apache.cassandra.db.filter.IDiskAtomFilter,org.apache.cassandra.dht.AbstractBounds,java.util.List,int)|",
      "|java+constructor:///org/apache/cassandra/exceptions/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getConsistencyLevel()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/includeStartKey()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|",
      "|java+method:///org/apache/cassandra/cql/Relation/getValue()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/db/RowPosition/isMinimum(org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getColumnFamily()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getValueValidator(java.lang.String,java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getNumRecords()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getKeyFinish()|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///org/apache/cassandra/cql/Relation/operator()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/cassandra/dht/Bounds/Bounds(org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.RingPosition)|",
      "|java+method:///java/util/List/remove(int)|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getKeyStart()|",
      "|java+method:///org/apache/cassandra/db/RowPosition/compareTo(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/db/RowPosition/forKey(java.nio.ByteBuffer,org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/filterFromSelect(org.apache.cassandra.cql.SelectStatement,org.apache.cassandra.config.CFMetaData,java.util.List)|",
      "|java+method:///org/apache/cassandra/thrift/IndexOperator/valueOf(java.lang.String)|",
      "|java+method:///java/util/List/subList(int,int)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/isKeyRange()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/validateFilter(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.db.filter.IDiskAtomFilter)|",
      "|java+method:///org/apache/cassandra/cql/Relation/getEntity()|",
      "|java+method:///org/apache/cassandra/cql/RelationType/toString()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getColumnRelations()|",
      "|java+method:///org/apache/cassandra/config/Schema/getCFMetaData(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getKeyValidator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/cql/Term/getByteBuffer(org.apache.cassandra.db.marshal.AbstractType,java.util.List)|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/getRangeSlice(org.apache.cassandra.db.RangeSliceCommand,org.apache.cassandra.db.ConsistencyLevel)|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.2.4",
    "change": "UPDATED"
  }
]