[
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/guice/http/JettyHttpClientModule$HttpClientProvider/get()|",
    "called": "|java+constructor:///org/eclipse/jetty/util/thread/QueuedThreadPool/QueuedThreadPool(int)|",
    "v1Body": [
      "|java+method:///com/google/inject/Binding/getProvider()|",
      "|java+method:///org/eclipse/jetty/client/HttpClient/setIdleTimeout(long)|",
      "|java+method:///com/google/inject/Provider/get()|",
      "|java+method:///io/druid/guice/http/DruidHttpClientConfig/getNumConnections()|",
      "|java+method:///io/druid/guice/http/JettyHttpClientModule$HttpClientProvider/get()|",
      "|java+method:///io/druid/guice/http/JettyHttpClientModule$HttpClientProvider/getSslContextBinding()|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+constructor:///org/eclipse/jetty/client/HttpClient/HttpClient()|",
      "|java+method:///com/google/common/base/Supplier/get()|",
      "|java+method:///org/eclipse/jetty/client/HttpClient/setMaxConnectionsPerDestination(int)|",
      "|java+constructor:///org/eclipse/jetty/util/ssl/SslContextFactory/SslContextFactory()|",
      "|java+constructor:///org/eclipse/jetty/client/HttpClient/HttpClient(org.eclipse.jetty.util.ssl.SslContextFactory)|",
      "|java+method:///org/joda/time/Duration/getMillis()|",
      "|java+method:///org/eclipse/jetty/util/ssl/SslContextFactory/setSslContext(javax.net.ssl.SSLContext)|",
      "|java+method:///io/druid/guice/http/JettyHttpClientModule$HttpClientProvider/getLifecycleProvider()|",
      "|java+method:///io/druid/guice/http/DruidHttpClientConfig/getReadTimeout()|",
      "|java+method:///com/metamx/common/lifecycle/Lifecycle/addMaybeStartHandler(com.metamx.common.lifecycle.Lifecycle$Handler)|",
      "|java+method:///io/druid/guice/http/JettyHttpClientModule$HttpClientProvider/getConfigProvider()|",
      "|java+constructor:///io/druid/guice/http/JettyHttpClientModule$HttpClientProvider$1/JettyHttpClientModule$HttpClientProvider$1(io.druid.guice.http.JettyHttpClientModule$HttpClientProvider,org.eclipse.jetty.client.HttpClient)|"
    ],
    "v2Body": [
      "|java+method:///com/google/inject/Binding/getProvider()|",
      "|java+method:///java/lang/Class/getSimpleName()|",
      "|java+method:///org/eclipse/jetty/client/HttpClient/setIdleTimeout(long)|",
      "|java+method:///org/eclipse/jetty/client/HttpClient/setExecutor(java.util.concurrent.Executor)|",
      "|java+method:///io/druid/guice/http/JettyHttpClientModule$HttpClientProvider/get()|",
      "|java+method:///io/druid/guice/http/JettyHttpClientModule$HttpClientProvider/getSslContextBinding()|",
      "|java+constructor:///org/eclipse/jetty/client/HttpClient/HttpClient()|",
      "|java+method:///com/google/common/base/Supplier/get()|",
      "|java+constructor:///org/eclipse/jetty/client/HttpClient/HttpClient(org.eclipse.jetty.util.ssl.SslContextFactory)|",
      "|java+method:///org/joda/time/Duration/getMillis()|",
      "|java+method:///org/eclipse/jetty/util/ssl/SslContextFactory/setSslContext(javax.net.ssl.SSLContext)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/druid/guice/http/DruidHttpClientConfig/getNumMaxThreads()|",
      "|java+method:///io/druid/guice/http/JettyHttpClientModule$HttpClientProvider/getLifecycleProvider()|",
      "|java+method:///io/druid/guice/http/DruidHttpClientConfig/getReadTimeout()|",
      "|java+method:///org/eclipse/jetty/util/thread/QueuedThreadPool/setName(java.lang.String)|",
      "|java+method:///com/google/inject/Provider/get()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/druid/java/util/common/lifecycle/Lifecycle/addMaybeStartHandler(io.druid.java.util.common.lifecycle.Lifecycle$Handler)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///io/druid/guice/http/DruidHttpClientConfig/getNumConnections()|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+constructor:///org/eclipse/jetty/util/thread/QueuedThreadPool/QueuedThreadPool(int)|",
      "|java+method:///java/lang/Object/hashCode()|",
      "|java+method:///org/eclipse/jetty/client/HttpClient/setMaxConnectionsPerDestination(int)|",
      "|java+constructor:///org/eclipse/jetty/util/ssl/SslContextFactory/SslContextFactory()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/druid/guice/http/JettyHttpClientModule$HttpClientProvider/getConfigProvider()|",
      "|java+constructor:///io/druid/guice/http/JettyHttpClientModule$HttpClientProvider$1/JettyHttpClientModule$HttpClientProvider$1(io.druid.guice.http.JettyHttpClientModule$HttpClientProvider,org.eclipse.jetty.client.HttpClient)|"
    ],
    "affectedLib": "org.eclipse.jetty:jetty-util:9.3.16.v20170120",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/server/initialization/jetty/JettyRequestLog/log(org.eclipse.jetty.server.Request,org.eclipse.jetty.server.Response)|",
    "called": "|java+method:///org/eclipse/jetty/server/Request/getHttpURI()|",
    "v1Body": [
      "|java+method:///org/eclipse/jetty/server/Request/getProtocol()|",
      "|java+method:///com/metamx/common/logger/Logger/isDebugEnabled()|",
      "|java+method:///org/eclipse/jetty/server/Request/getMethod()|",
      "|java+method:///com/metamx/common/logger/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/String/toString()|",
      "|java+method:///org/eclipse/jetty/http/HttpURI/toString()|",
      "|java+method:///org/eclipse/jetty/server/Request/getUri()|"
    ],
    "v2Body": [
      "|java+method:///org/eclipse/jetty/server/Request/getHttpURI()|",
      "|java+method:///org/eclipse/jetty/http/HttpURI/toString()|",
      "|java+method:///io/druid/java/util/common/logger/Logger/isDebugEnabled()|",
      "|java+method:///org/eclipse/jetty/server/Request/getProtocol()|",
      "|java+method:///org/eclipse/jetty/server/Request/getMethod()|",
      "|java+method:///io/druid/java/util/common/logger/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "org.eclipse.jetty:jetty-server:9.3.16.v20170120",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/server/AsyncQueryForwardingServlet$MetricsEmittingProxyResponseListener/onComplete(org.eclipse.jetty.client.api.Result)|",
    "called": "|java+method:///org/eclipse/jetty/proxy/ProxyServlet$ProxyResponseListener/onComplete(org.eclipse.jetty.client.api.Result)|",
    "v1Body": [
      "|java+constructor:///io/druid/server/RequestLogLine/RequestLogLine(org.joda.time.DateTime,java.lang.String,io.druid.query.Query,io.druid.server.QueryStats)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet/access$400(io.druid.server.AsyncQueryForwardingServlet)|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet/access$200(io.druid.server.AsyncQueryForwardingServlet)|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet/access$100(io.druid.server.AsyncQueryForwardingServlet)|",
      "|java+method:///javax/servlet/http/HttpServletRequest/getRemoteAddr()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///javax/ws/rs/core/Response$Status/getStatusCode()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+constructor:///io/druid/server/QueryStats/QueryStats(java.util.Map)|",
      "|java+method:///io/druid/query/DruidMetrics/makeQueryTimeMetric(io.druid.query.QueryToolChest,com.fasterxml.jackson.databind.ObjectMapper,io.druid.query.Query,java.lang.String)|",
      "|java+method:///com/metamx/emitter/service/ServiceEmitter/emit(com.metamx.emitter.service.ServiceEventBuilder)|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet/access$300(io.druid.server.AsyncQueryForwardingServlet)|",
      "|java+method:///org/eclipse/jetty/proxy/ProxyServlet$ProxyResponseListener/onComplete(org.eclipse.jetty.client.api.Result)|",
      "|java+method:///io/druid/query/QueryToolChestWarehouse/getToolChest(io.druid.query.Query)|",
      "|java+method:///org/eclipse/jetty/client/api/Response/getStatus()|",
      "|java+method:///io/druid/server/log/RequestLogger/log(io.druid.server.RequestLogLine)|",
      "|java+method:///com/metamx/emitter/service/ServiceMetricEvent$Builder/build(java.lang.String,java.lang.Number)|",
      "|java+constructor:///org/joda/time/DateTime/DateTime()|",
      "|java+method:///com/metamx/emitter/EmittingLogger/error(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet/access$000()|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/eclipse/jetty/client/api/Result/getResponse()|",
      "|java+method:///org/eclipse/jetty/client/api/Result/isSucceeded()|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/server/RequestLogLine/RequestLogLine(org.joda.time.DateTime,java.lang.String,io.druid.query.Query,io.druid.server.QueryStats)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet/access$600(io.druid.server.AsyncQueryForwardingServlet)|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet/access$500(io.druid.server.AsyncQueryForwardingServlet)|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet/access$400(io.druid.server.AsyncQueryForwardingServlet)|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet/access$100(io.druid.server.AsyncQueryForwardingServlet)|",
      "|java+method:///javax/servlet/http/HttpServletRequest/getRemoteAddr()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///javax/ws/rs/core/Response$Status/getStatusCode()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+constructor:///io/druid/server/QueryStats/QueryStats(java.util.Map)|",
      "|java+method:///io/druid/query/DruidMetrics/makeQueryTimeMetric(io.druid.query.QueryToolChest,com.fasterxml.jackson.databind.ObjectMapper,io.druid.query.Query,java.lang.String)|",
      "|java+method:///com/metamx/emitter/service/ServiceEmitter/emit(com.metamx.emitter.service.ServiceEventBuilder)|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet/access$300(io.druid.server.AsyncQueryForwardingServlet)|",
      "|java+method:///org/eclipse/jetty/proxy/ProxyServlet$ProxyResponseListener/onComplete(org.eclipse.jetty.client.api.Result)|",
      "|java+method:///io/druid/query/QueryToolChestWarehouse/getToolChest(io.druid.query.Query)|",
      "|java+method:///org/eclipse/jetty/client/api/Response/getStatus()|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet/access$200(io.druid.server.AsyncQueryForwardingServlet)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/incrementAndGet()|",
      "|java+method:///io/druid/server/log/RequestLogger/log(io.druid.server.RequestLogLine)|",
      "|java+method:///com/metamx/emitter/service/ServiceMetricEvent$Builder/build(java.lang.String,java.lang.Number)|",
      "|java+constructor:///org/joda/time/DateTime/DateTime()|",
      "|java+method:///com/metamx/emitter/EmittingLogger/error(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet/access$000()|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/eclipse/jetty/client/api/Result/getResponse()|",
      "|java+method:///org/eclipse/jetty/client/api/Result/isSucceeded()|"
    ],
    "affectedLib": "org.eclipse.jetty:jetty-proxy:9.3.16.v20170120",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+constructor:///io/druid/server/AsyncQueryForwardingServlet/AsyncQueryForwardingServlet(io.druid.query.QueryToolChestWarehouse,com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.ObjectMapper,io.druid.server.router.QueryHostFinder,com.google.inject.Provider,io.druid.guice.http.DruidHttpClientConfig,com.metamx.emitter.service.ServiceEmitter,io.druid.server.log.RequestLogger)|",
    "called": "|java+constructor:///org/eclipse/jetty/proxy/AsyncProxyServlet/AsyncProxyServlet()|",
    "v1Body": [
      "|java+constructor:///org/eclipse/jetty/proxy/AsyncProxyServlet/AsyncProxyServlet()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/concurrent/atomic/AtomicLong/AtomicLong()|",
      "|java+constructor:///org/eclipse/jetty/proxy/AsyncProxyServlet/AsyncProxyServlet()|"
    ],
    "affectedLib": "org.eclipse.jetty:jetty-proxy:9.3.16.v20170120",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/server/initialization/jetty/JettyServerInitUtils/addExtensionFilters(org.eclipse.jetty.servlet.ServletContextHandler,com.google.inject.Injector)|",
    "called": "|java+constructor:///org/eclipse/jetty/servlet/FilterHolder/FilterHolder(javax.servlet.Filter)|",
    "v1Body": [
      "|java+method:///io/druid/server/initialization/jetty/ServletFilterHolder/getPath()|",
      "|java+constructor:///org/eclipse/jetty/servlet/FilterHolder/FilterHolder(javax.servlet.Filter)|",
      "|java+constructor:///org/eclipse/jetty/servlet/FilterHolder/FilterHolder(java.lang.Class)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/eclipse/jetty/servlet/FilterHolder/setInitParameters(java.util.Map)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///io/druid/server/initialization/jetty/ServletFilterHolder/getFilter()|",
      "|java+method:///com/google/inject/Injector/getInstance(com.google.inject.Key)|",
      "|java+method:///io/druid/server/initialization/jetty/ServletFilterHolder/getDispatcherType()|",
      "|java+constructor:///com/metamx/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///io/druid/server/initialization/jetty/JettyServerInitUtils$1/JettyServerInitUtils$1()|",
      "|java+method:///io/druid/server/initialization/jetty/ServletFilterHolder/getFilterClass()|",
      "|java+method:///org/eclipse/jetty/servlet/ServletContextHandler/addFilter(org.eclipse.jetty.servlet.FilterHolder,java.lang.String,java.util.EnumSet)|",
      "|java+method:///com/google/inject/Key/get(com.google.inject.TypeLiteral)|",
      "|java+method:///io/druid/server/initialization/jetty/ServletFilterHolder/getInitParameters()|"
    ],
    "v2Body": [
      "|java+method:///io/druid/server/initialization/jetty/ServletFilterHolder/getDispatcherType()|",
      "|java+method:///io/druid/server/initialization/jetty/ServletFilterHolder/getPath()|",
      "|java+constructor:///org/eclipse/jetty/servlet/FilterHolder/FilterHolder(javax.servlet.Filter)|",
      "|java+constructor:///org/eclipse/jetty/servlet/FilterHolder/FilterHolder(java.lang.Class)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/eclipse/jetty/servlet/FilterHolder/setInitParameters(java.util.Map)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///io/druid/server/initialization/jetty/ServletFilterHolder/getFilter()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///io/druid/server/initialization/jetty/JettyServerInitUtils$1/JettyServerInitUtils$1()|",
      "|java+method:///io/druid/server/initialization/jetty/ServletFilterHolder/getFilterClass()|",
      "|java+method:///org/eclipse/jetty/servlet/ServletContextHandler/addFilter(org.eclipse.jetty.servlet.FilterHolder,java.lang.String,java.util.EnumSet)|",
      "|java+method:///com/google/inject/Key/get(com.google.inject.TypeLiteral)|",
      "|java+method:///io/druid/server/initialization/jetty/ServletFilterHolder/getInitParameters()|",
      "|java+method:///com/google/inject/Injector/getInstance(com.google.inject.Key)|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "org.eclipse.jetty:jetty-servlet:9.3.16.v20170120",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/segment/loading/SegmentLoaderLocalCacheManager/getSegment(io.druid.timeline.DataSegment)|",
    "called": "|java+constructor:///io/druid/segment/loading/MMappedQueryableSegmentizerFactory/MMappedQueryableSegmentizerFactory(io.druid.segment.IndexIO)|",
    "v1Body": [
      "|java+method:///io/druid/segment/loading/QueryableIndexFactory/factorize(java.io.File)|",
      "|java+constructor:///io/druid/segment/QueryableIndexSegment/QueryableIndexSegment(java.lang.String,io.druid.segment.QueryableIndex)|",
      "|java+method:///io/druid/segment/loading/SegmentLoaderLocalCacheManager/getSegmentFiles(io.druid.timeline.DataSegment)|",
      "|java+method:///io/druid/timeline/DataSegment/getIdentifier()|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/segment/loading/MMappedQueryableSegmentizerFactory/MMappedQueryableSegmentizerFactory(io.druid.segment.IndexIO)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///java/io/IOException/getMessage()|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(java.io.File,java.lang.Class)|",
      "|java+method:///io/druid/segment/loading/SegmentLoaderLocalCacheManager/getSegmentFiles(io.druid.timeline.DataSegment)|",
      "|java+method:///io/druid/segment/loading/SegmentizerFactory/factorize(io.druid.timeline.DataSegment,java.io.File)|",
      "|java+constructor:///io/druid/segment/loading/SegmentLoadingException/SegmentLoadingException(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/segment/realtime/FireHydrant/swapSegment(io.druid.segment.Segment)|",
    "called": "|java+method:///io/druid/segment/ReferenceCountingSegment/close()|",
    "v1Body": [
      "|java+constructor:///com/metamx/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/segment/Segment/getIdentifier()|",
      "|java+method:///io/druid/segment/ReferenceCountingSegment/close()|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///io/druid/segment/ReferenceCountingSegment/getIdentifier()|",
      "|java+constructor:///io/druid/segment/ReferenceCountingSegment/ReferenceCountingSegment(io.druid.segment.Segment)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/segment/Segment/getIdentifier()|",
      "|java+method:///io/druid/segment/ReferenceCountingSegment/close()|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///io/druid/segment/ReferenceCountingSegment/getIdentifier()|",
      "|java+constructor:///io/druid/segment/ReferenceCountingSegment/ReferenceCountingSegment(io.druid.segment.Segment)|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/segment/realtime/FireHydrant/getAndIncrementSegment()|",
    "called": "|java+method:///io/druid/segment/ReferenceCountingSegment/increment()|",
    "v1Body": [
      "|java+method:///io/druid/segment/ReferenceCountingSegment/increment()|",
      "|java+constructor:///com/metamx/common/Pair/Pair(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/segment/ReferenceCountingSegment/increment()|",
      "|java+constructor:///io/druid/java/util/common/Pair/Pair(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/guice/DruidProcessingModule/getIntermediateResultsPool(io.druid.query.DruidProcessingConfig)|",
    "called": "|java+method:///io/druid/query/DruidProcessingConfig/getNumThreads()|",
    "v1Body": [
      "|java+constructor:///io/druid/collections/StupidPool/StupidPool(com.google.common.base.Supplier,int)|",
      "|java+method:///io/druid/query/DruidProcessingConfig/poolCacheMaxCount()|",
      "|java+method:///io/druid/guice/DruidProcessingModule/verifyDirectMemory(io.druid.query.DruidProcessingConfig)|",
      "|java+method:///io/druid/query/DruidProcessingConfig/intermediateComputeSizeBytes()|",
      "|java+constructor:///io/druid/offheap/OffheapBufferGenerator/OffheapBufferGenerator(java.lang.String,int)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/collections/StupidPool/StupidPool(java.lang.String,com.google.common.base.Supplier,int,int)|",
      "|java+method:///io/druid/query/DruidProcessingConfig/poolCacheMaxCount()|",
      "|java+method:///io/druid/guice/DruidProcessingModule/verifyDirectMemory(io.druid.query.DruidProcessingConfig)|",
      "|java+method:///io/druid/query/DruidProcessingConfig/intermediateComputeSizeBytes()|",
      "|java+constructor:///io/druid/offheap/OffheapBufferGenerator/OffheapBufferGenerator(java.lang.String,int)|",
      "|java+method:///io/druid/query/DruidProcessingConfig/getNumThreads()|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/query/lookup/LookupIntrospectionResource/introspectLookup(java.lang.String)|",
    "called": "|java+method:///io/druid/query/lookup/LookupReferencesManager/get(java.lang.String)|",
    "v1Body": [
      "|java+method:///javax/ws/rs/core/Response/status(javax.ws.rs.core.Response$Status)|",
      "|java+method:///javax/ws/rs/core/Response$ResponseBuilder/build()|",
      "|java+method:///io/druid/query/lookup/LookupReferencesManager/get(java.lang.String)|",
      "|java+method:///com/metamx/common/logger/Logger/warn(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/metamx/common/logger/Logger/error(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/query/lookup/LookupExtractorFactory/get()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/druid/query/lookup/LookupExtractorFactory/getIntrospectHandler()|"
    ],
    "v2Body": [
      "|java+method:///javax/ws/rs/core/Response/status(javax.ws.rs.core.Response$Status)|",
      "|java+method:///javax/ws/rs/core/Response$ResponseBuilder/build()|",
      "|java+method:///io/druid/query/lookup/LookupReferencesManager/get(java.lang.String)|",
      "|java+method:///io/druid/java/util/common/logger/Logger/error(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/query/lookup/LookupExtractorFactory/get()|",
      "|java+method:///io/druid/java/util/common/logger/Logger/warn(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/druid/query/lookup/LookupExtractorFactory/getIntrospectHandler()|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/segment/realtime/firehose/IngestSegmentFirehose$1/apply(io.druid.segment.realtime.firehose.WindowedStorageAdapter)|",
    "called": "|java+method:///io/druid/segment/filter/Filters/toFilter(io.druid.query.filter.DimFilter)|",
    "v1Body": [
      "|java+method:///com/metamx/common/guava/Sequences/map(com.metamx.common.guava.Sequence,com.google.common.base.Function)|",
      "|java+method:///com/metamx/common/guava/Sequences/concat(com.metamx.common.guava.Sequence)|",
      "|java+method:///io/druid/segment/realtime/firehose/WindowedStorageAdapter/getAdapter()|",
      "|java+constructor:///io/druid/segment/realtime/firehose/IngestSegmentFirehose$1$1/IngestSegmentFirehose$1$1(io.druid.segment.realtime.firehose.IngestSegmentFirehose$1)|",
      "|java+method:///io/druid/segment/realtime/firehose/WindowedStorageAdapter/getInterval()|",
      "|java+method:///io/druid/segment/filter/Filters/toFilter(io.druid.query.filter.DimFilter)|",
      "|java+method:///io/druid/segment/StorageAdapter/makeCursors(io.druid.query.filter.Filter,org.joda.time.Interval,io.druid.granularity.QueryGranularity,boolean)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/segment/StorageAdapter/makeCursors(io.druid.query.filter.Filter,org.joda.time.Interval,io.druid.segment.VirtualColumns,io.druid.java.util.common.granularity.Granularity,boolean)|",
      "|java+method:///io/druid/java/util/common/guava/Sequences/concat(io.druid.java.util.common.guava.Sequence)|",
      "|java+method:///io/druid/java/util/common/guava/Sequences/map(io.druid.java.util.common.guava.Sequence,com.google.common.base.Function)|",
      "|java+method:///io/druid/segment/realtime/firehose/WindowedStorageAdapter/getAdapter()|",
      "|java+constructor:///io/druid/segment/realtime/firehose/IngestSegmentFirehose$1$1/IngestSegmentFirehose$1$1(io.druid.segment.realtime.firehose.IngestSegmentFirehose$1)|",
      "|java+method:///io/druid/segment/realtime/firehose/WindowedStorageAdapter/getInterval()|",
      "|java+method:///io/druid/segment/filter/Filters/toFilter(io.druid.query.filter.DimFilter)|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/client/DirectDruidClient/run(io.druid.query.Query,java.util.Map)|",
    "called": "|java+method:///io/druid/query/BaseQuery/getContextBySegment(io.druid.query.Query,boolean)|",
    "v1Body": [
      "|java+method:///io/druid/query/Query/getId()|",
      "|java+constructor:///com/metamx/common/guava/BaseSequence/BaseSequence(com.metamx.common.guava.BaseSequence$IteratorMaker)|",
      "|java+constructor:///com/metamx/http/client/Request/Request(org.jboss.netty.handler.codec.http.HttpMethod,java.net.URL)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/metamx/common/logger/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///com/metamx/http/client/Request/setContent(byte%5B%5D)|",
      "|java+constructor:///io/druid/client/DirectDruidClient$1/DirectDruidClient$1(io.druid.client.DirectDruidClient,java.lang.String,io.druid.query.Query,com.metamx.emitter.service.ServiceMetricEvent$Builder,long,java.util.Map)|",
      "|java+method:///com/metamx/http/client/HttpClient/go(com.metamx.http.client.Request,com.metamx.http.client.response.HttpResponseHandler)|",
      "|java+method:///io/druid/query/QueryWatcher/registerQuery(io.druid.query.Query,com.google.common.util.concurrent.ListenableFuture)|",
      "|java+method:///com/metamx/http/client/Request/setHeader(java.lang.String,java.lang.String)|",
      "|java+method:///io/druid/query/aggregation/MetricManipulatorFns/deserializing()|",
      "|java+constructor:///io/druid/client/DirectDruidClient$2/DirectDruidClient$2(io.druid.client.DirectDruidClient,com.google.common.util.concurrent.ListenableFuture,java.lang.String,io.druid.query.Query)|",
      "|java+method:///java/util/concurrent/atomic/AtomicInteger/getAndIncrement()|",
      "|java+method:///io/druid/query/QueryToolChest/makePreComputeManipulatorFn(io.druid.query.Query,io.druid.query.aggregation.MetricManipulationFn)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/metamx/common/Pair/of(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/metamx/emitter/service/ServiceMetricEvent$Builder/setDimension(java.lang.String,java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/getTypeFactory()|",
      "|java+method:///com/metamx/common/guava/Sequences/map(com.metamx.common.guava.Sequence,com.google.common.base.Function)|",
      "|java+method:///io/druid/query/QueryToolChest/getResultTypeReference()|",
      "|java+constructor:///io/druid/client/DirectDruidClient$3/DirectDruidClient$3(io.druid.client.DirectDruidClient,com.fasterxml.jackson.databind.JavaType,com.google.common.util.concurrent.ListenableFuture,java.lang.String)|",
      "|java+method:///io/druid/query/QueryToolChestWarehouse/getToolChest(io.druid.query.Query)|",
      "|java+method:///com/fasterxml/jackson/databind/type/TypeFactory/constructParametricType(java.lang.Class,com.fasterxml.jackson.databind.JavaType%5B%5D)|",
      "|java+method:///com/fasterxml/jackson/databind/type/TypeFactory/constructType(com.fasterxml.jackson.core.type.TypeReference)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///java/net/URL/URL(java.lang.String)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///com/google/common/util/concurrent/Futures/addCallback(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureCallback)|",
      "|java+method:///io/druid/query/QueryToolChest/makeMetricBuilder(io.druid.query.Query)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsBytes(java.lang.Object)|",
      "|java+method:///io/druid/query/BaseQuery/getContextBySegment(io.druid.query.Query,boolean)|"
    ],
    "v2Body": [
      "|java+method:///com/metamx/emitter/service/ServiceMetricEvent$Builder/setDimension(java.lang.String,java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/getTypeFactory()|",
      "|java+method:///io/druid/query/Query/getId()|",
      "|java+constructor:///com/metamx/http/client/Request/Request(org.jboss.netty.handler.codec.http.HttpMethod,java.net.URL)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/java/util/common/guava/Sequences/map(io.druid.java.util.common.guava.Sequence,com.google.common.base.Function)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+constructor:///io/druid/java/util/common/guava/BaseSequence/BaseSequence(io.druid.java.util.common.guava.BaseSequence$IteratorMaker)|",
      "|java+method:///com/metamx/http/client/Request/setContent(byte%5B%5D)|",
      "|java+constructor:///io/druid/client/DirectDruidClient$1/DirectDruidClient$1(io.druid.client.DirectDruidClient,java.lang.String,io.druid.query.Query,com.metamx.emitter.service.ServiceMetricEvent$Builder,long,java.util.Map)|",
      "|java+method:///com/metamx/http/client/HttpClient/go(com.metamx.http.client.Request,com.metamx.http.client.response.HttpResponseHandler)|",
      "|java+method:///io/druid/query/QueryWatcher/registerQuery(io.druid.query.Query,com.google.common.util.concurrent.ListenableFuture)|",
      "|java+method:///com/metamx/http/client/Request/setHeader(java.lang.String,java.lang.String)|",
      "|java+method:///io/druid/query/aggregation/MetricManipulatorFns/deserializing()|",
      "|java+constructor:///io/druid/client/DirectDruidClient$2/DirectDruidClient$2(io.druid.client.DirectDruidClient,com.google.common.util.concurrent.ListenableFuture,java.lang.String,io.druid.query.Query)|",
      "|java+method:///io/druid/java/util/common/Pair/of(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/concurrent/atomic/AtomicInteger/getAndIncrement()|",
      "|java+method:///io/druid/query/QueryToolChest/makePreComputeManipulatorFn(io.druid.query.Query,io.druid.query.aggregation.MetricManipulationFn)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/druid/query/QueryToolChest/getResultTypeReference()|",
      "|java+method:///io/druid/java/util/common/logger/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/client/DirectDruidClient$3/DirectDruidClient$3(io.druid.client.DirectDruidClient,com.fasterxml.jackson.databind.JavaType,com.google.common.util.concurrent.ListenableFuture,java.lang.String)|",
      "|java+method:///io/druid/query/QueryToolChestWarehouse/getToolChest(io.druid.query.Query)|",
      "|java+method:///com/fasterxml/jackson/databind/type/TypeFactory/constructParametricType(java.lang.Class,com.fasterxml.jackson.databind.JavaType%5B%5D)|",
      "|java+method:///com/fasterxml/jackson/databind/type/TypeFactory/constructType(com.fasterxml.jackson.core.type.TypeReference)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///java/net/URL/URL(java.lang.String)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///com/google/common/util/concurrent/Futures/addCallback(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureCallback)|",
      "|java+method:///io/druid/query/QueryToolChest/makeMetricBuilder(io.druid.query.Query)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsBytes(java.lang.Object)|",
      "|java+method:///io/druid/query/BaseQuery/getContextBySegment(io.druid.query.Query,boolean)|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/query/lookup/LookupListeningResource$2/post(java.util.Map)|",
    "called": "|java+method:///io/druid/query/lookup/LookupReferencesManager/get(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/druid/query/lookup/LookupReferencesManager/updateIfNew(java.lang.String,io.druid.query.lookup.LookupExtractorFactory)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///io/druid/query/lookup/LookupReferencesManager/get(java.lang.String)|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///io/druid/query/lookup/LookupExtractorFactory/replaces(io.druid.query.lookup.LookupExtractorFactory)|",
      "|java+method:///com/metamx/common/logger/Logger/error(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/query/lookup/LookupListeningResource/access$000()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/Map/keySet()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/druid/query/lookup/LookupReferencesManager/updateIfNew(java.lang.String,io.druid.query.lookup.LookupExtractorFactory)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///io/druid/query/lookup/LookupReferencesManager/get(java.lang.String)|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///io/druid/java/util/common/logger/Logger/error(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///io/druid/query/lookup/LookupExtractorFactory/replaces(io.druid.query.lookup.LookupExtractorFactory)|",
      "|java+method:///io/druid/query/lookup/LookupListeningResource/access$000()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/Map/keySet()|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/segment/realtime/plumber/Sink/add(io.druid.data.input.InputRow)|",
    "called": "|java+method:///io/druid/segment/incremental/IncrementalIndex/add(io.druid.data.input.InputRow)|",
    "v1Body": [
      "|java+method:///io/druid/segment/realtime/FireHydrant/getIndex()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex/add(io.druid.data.input.InputRow)|",
      "|java+constructor:///com/metamx/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/segment/realtime/FireHydrant/getIndex()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex/add(io.druid.data.input.InputRow)|",
      "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/server/http/DatasourcesResource/getSegmentDataSourceSpecificInterval(java.lang.String,java.lang.String,boolean)|",
    "called": "|java+constructor:///io/druid/query/TableDataSource/TableDataSource(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/metamx/common/guava/FunctionalIterable/create(java.lang.Iterable)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///com/metamx/common/guava/FunctionalIterable/transformCat(com.google.common.base.Function)|",
      "|java+method:///javax/ws/rs/core/Response/ok(java.lang.Object)|",
      "|java+method:///io/druid/client/CoordinatorServerView/getTimeline(io.druid.query.DataSource)|",
      "|java+method:///io/druid/timeline/TimelineLookup/lookupWithIncompletePartitions(org.joda.time.Interval)|",
      "|java+constructor:///org/joda/time/Interval/Interval(java.lang.Object)|",
      "|java+constructor:///io/druid/server/http/DatasourcesResource$5/DatasourcesResource$5(io.druid.server.http.DatasourcesResource)|",
      "|java+method:///javax/ws/rs/core/Response$ResponseBuilder/build()|",
      "|java+method:///com/metamx/common/logger/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/query/TableDataSource/TableDataSource(java.lang.String)|",
      "|java+method:///java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/java/util/common/logger/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/java/util/common/guava/FunctionalIterable/transformCat(com.google.common.base.Function)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///io/druid/java/util/common/guava/FunctionalIterable/create(java.lang.Iterable)|",
      "|java+method:///javax/ws/rs/core/Response/ok(java.lang.Object)|",
      "|java+method:///io/druid/client/CoordinatorServerView/getTimeline(io.druid.query.DataSource)|",
      "|java+method:///io/druid/timeline/TimelineLookup/lookupWithIncompletePartitions(org.joda.time.Interval)|",
      "|java+constructor:///org/joda/time/Interval/Interval(java.lang.Object)|",
      "|java+constructor:///io/druid/server/http/DatasourcesResource$5/DatasourcesResource$5(io.druid.server.http.DatasourcesResource)|",
      "|java+method:///javax/ws/rs/core/Response$ResponseBuilder/build()|",
      "|java+constructor:///io/druid/query/TableDataSource/TableDataSource(java.lang.String)|",
      "|java+method:///java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/client/CachingClusteredClient/run(io.druid.query.Query,java.util.Map)|",
    "called": "|java+method:///io/druid/query/BaseQuery/getContextPriority(io.druid.query.Query,int)|",
    "v1Body": [
      "|java+method:///io/druid/timeline/partition/PartitionChunk/getObject()|",
      "|java+method:///io/druid/timeline/TimelineObjectHolder/getInterval()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///com/google/common/collect/Sets/newLinkedHashSet()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///io/druid/query/QueryToolChest/getCacheStrategy(io.druid.query.Query)|",
      "|java+method:///io/druid/query/BaseQuery/getContextBySegment(io.druid.query.Query,boolean)|",
      "|java+method:///com/google/common/collect/Iterables/limit(java.lang.Iterable,int)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///io/druid/query/filter/DimFilterUtils/filterShards(io.druid.query.filter.DimFilter,java.lang.Iterable,com.google.common.base.Function,java.util.Map)|",
      "|java+method:///io/druid/client/cache/CacheConfig/getCacheBulkMergeLimit()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/druid/client/selector/ServerSelector/getSegment()|",
      "|java+method:///io/druid/timeline/TimelineObjectHolder/getObject()|",
      "|java+method:///io/druid/query/Query/getFilter()|",
      "|java+method:///io/druid/client/cache/CacheConfig/isPopulateCache()|",
      "|java+method:///com/metamx/common/Pair/of(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/druid/client/cache/CacheConfig/isUseCache()|",
      "|java+method:///io/druid/query/BaseQuery/getContextUncoveredIntervalsLimit(io.druid.query.Query,int)|",
      "|java+method:///io/druid/client/CacheUtil/computeSegmentCacheKey(java.lang.String,io.druid.query.SegmentDescriptor,byte%5B%5D)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/druid/client/selector/ServerSelector/pick()|",
      "|java+method:///com/google/common/collect/ImmutableMap/of()|",
      "|java+method:///io/druid/query/QueryToolChest/filterSegments(io.druid.query.Query,java.util.List)|",
      "|java+constructor:///io/druid/client/CachingClusteredClient$CachePopulator/CachingClusteredClient$CachePopulator(io.druid.client.cache.Cache,com.fasterxml.jackson.databind.ObjectMapper,io.druid.client.cache.Cache$NamedKey)|",
      "|java+method:///com/google/common/collect/Maps/newLinkedHashMap()|",
      "|java+method:///com/metamx/common/guava/Sequences/empty()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///io/druid/timeline/TimelineObjectHolder/getVersion()|",
      "|java+method:///io/druid/query/CacheStrategy/computeCacheKey(io.druid.query.Query)|",
      "|java+method:///com/google/common/collect/Iterables/addAll(java.util.Collection,java.lang.Iterable)|",
      "|java+method:///com/google/common/collect/Lists/newArrayListWithCapacity(int)|",
      "|java+method:///io/druid/timeline/partition/PartitionChunk/getChunkNumber()|",
      "|java+method:///io/druid/query/SegmentDescriptor/getInterval()|",
      "|java+constructor:///io/druid/query/SegmentDescriptor/SegmentDescriptor(org.joda.time.Interval,java.lang.String,int)|",
      "|java+method:///io/druid/client/selector/QueryableDruidServer/getServer()|",
      "|java+method:///io/druid/query/QueryToolChestWarehouse/getToolChest(io.druid.query.Query)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///com/metamx/emitter/EmittingLogger/makeAlert(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///io/druid/client/TimelineServerView/getTimeline(io.druid.query.DataSource)|",
      "|java+method:///io/druid/timeline/TimelineLookup/lookup(org.joda.time.Interval)|",
      "|java+method:///com/google/common/collect/ImmutableMap$Builder/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///io/druid/client/CachingClusteredClient$2/CachingClusteredClient$2(io.druid.client.CachingClusteredClient)|",
      "|java+method:///io/druid/client/cache/CacheConfig/isQueryCacheable(io.druid.query.Query)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/druid/query/Query/getDataSource()|",
      "|java+constructor:///com/google/common/collect/ImmutableMap$Builder/ImmutableMap$Builder()|",
      "|java+method:///org/joda/time/Interval/getEndMillis()|",
      "|java+method:///com/metamx/emitter/service/AlertBuilder/emit()|",
      "|java+method:///com/google/common/collect/Maps/newTreeMap()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+constructor:///org/joda/time/Interval/Interval(long,long)|",
      "|java+method:///io/druid/client/cache/Cache/getBulk(java.lang.Iterable)|",
      "|java+constructor:///com/metamx/common/guava/LazySequence/LazySequence(com.google.common.base.Supplier)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/Set/remove(java.lang.Object)|",
      "|java+method:///com/google/common/collect/Lists/newLinkedList()|",
      "|java+method:///org/joda/time/Interval/getStartMillis()|",
      "|java+method:///io/druid/query/Query/getIntervals()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+constructor:///io/druid/client/CachingClusteredClient$3/CachingClusteredClient$3(io.druid.client.CachingClusteredClient,io.druid.query.Query,io.druid.query.CacheStrategy,java.util.List,java.util.Map,com.google.common.collect.ImmutableMap$Builder,boolean,boolean,java.util.Map,io.druid.query.QueryToolChest,java.util.Map)|",
      "|java+method:///io/druid/query/BaseQuery/getContextPopulateCache(io.druid.query.Query,boolean)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///io/druid/query/BaseQuery/getContextUseCache(io.druid.query.Query,boolean)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///io/druid/query/BaseQuery/getContextPriority(io.druid.query.Query,int)|",
      "|java+method:///io/druid/timeline/DataSegment/getIdentifier()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/timeline/TimelineObjectHolder/getInterval()|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///io/druid/query/Query/getContext()|",
      "|java+method:///io/druid/query/QueryToolChest/getCacheStrategy(io.druid.query.Query)|",
      "|java+method:///io/druid/query/BaseQuery/getContextBySegment(io.druid.query.Query,boolean)|",
      "|java+method:///com/google/common/collect/Iterables/limit(java.lang.Iterable,int)|",
      "|java+method:///io/druid/timeline/partition/PartitionChunk/getObject()|",
      "|java+method:///io/druid/java/util/common/Pair/of(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///io/druid/query/filter/DimFilterUtils/filterShards(io.druid.query.filter.DimFilter,java.lang.Iterable,com.google.common.base.Function,java.util.Map)|",
      "|java+method:///com/google/common/hash/Hashing/sha1()|",
      "|java+method:///io/druid/client/cache/CacheConfig/getCacheBulkMergeLimit()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/druid/client/selector/ServerSelector/getSegment()|",
      "|java+method:///io/druid/timeline/TimelineObjectHolder/getObject()|",
      "|java+method:///io/druid/query/Query/getFilter()|",
      "|java+method:///io/druid/query/BaseQuery/getContextUncoveredIntervalsLimit(io.druid.query.Query,int)|",
      "|java+method:///io/druid/client/DruidServer/isAssignable()|",
      "|java+method:///io/druid/client/CacheUtil/computeSegmentCacheKey(java.lang.String,io.druid.query.SegmentDescriptor,byte%5B%5D)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/google/common/hash/HashCode/asBytes()|",
      "|java+method:///io/druid/client/selector/ServerSelector/pick()|",
      "|java+method:///com/google/common/collect/ImmutableMap/of()|",
      "|java+method:///io/druid/query/QueryToolChest/filterSegments(io.druid.query.Query,java.util.List)|",
      "|java+constructor:///io/druid/client/CachingClusteredClient$CachePopulator/CachingClusteredClient$CachePopulator(io.druid.client.cache.Cache,com.fasterxml.jackson.databind.ObjectMapper,io.druid.client.cache.Cache$NamedKey)|",
      "|java+method:///com/google/common/collect/Maps/newLinkedHashMap()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///io/druid/timeline/TimelineObjectHolder/getVersion()|",
      "|java+method:///io/druid/query/CacheStrategy/computeCacheKey(io.druid.query.Query)|",
      "|java+method:///com/google/common/collect/Iterables/addAll(java.util.Collection,java.lang.Iterable)|",
      "|java+method:///com/google/common/collect/Lists/newArrayListWithCapacity(int)|",
      "|java+method:///io/druid/timeline/partition/PartitionChunk/getChunkNumber()|",
      "|java+method:///io/druid/query/SegmentDescriptor/getInterval()|",
      "|java+constructor:///io/druid/query/SegmentDescriptor/SegmentDescriptor(org.joda.time.Interval,java.lang.String,int)|",
      "|java+method:///io/druid/client/selector/QueryableDruidServer/getServer()|",
      "|java+method:///io/druid/query/QueryToolChestWarehouse/getToolChest(io.druid.query.Query)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///com/metamx/emitter/EmittingLogger/makeAlert(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///io/druid/client/CacheUtil/useCacheOnBrokers(io.druid.query.Query,io.druid.query.CacheStrategy,io.druid.client.cache.CacheConfig)|",
      "|java+method:///io/druid/java/util/common/guava/Sequences/empty()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///io/druid/client/TimelineServerView/getTimeline(io.druid.query.DataSource)|",
      "|java+method:///io/druid/timeline/TimelineLookup/lookup(org.joda.time.Interval)|",
      "|java+method:///com/google/common/collect/ImmutableMap$Builder/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/commons/codec/binary/Base64/encodeBase64String(byte%5B%5D)|",
      "|java+constructor:///io/druid/client/CachingClusteredClient$2/CachingClusteredClient$2(io.druid.client.CachingClusteredClient)|",
      "|java+method:///io/druid/query/Query/getDataSource()|",
      "|java+constructor:///com/google/common/collect/ImmutableMap$Builder/ImmutableMap$Builder()|",
      "|java+method:///org/joda/time/Interval/getEndMillis()|",
      "|java+method:///com/metamx/emitter/service/AlertBuilder/emit()|",
      "|java+method:///com/google/common/collect/Maps/newTreeMap()|",
      "|java+method:///com/google/common/hash/HashFunction/newHasher()|",
      "|java+constructor:///io/druid/java/util/common/guava/LazySequence/LazySequence(com.google.common.base.Supplier)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///com/google/common/hash/Hasher/putString(java.lang.CharSequence,java.nio.charset.Charset)|",
      "|java+method:///com/google/common/collect/Sets/newLinkedHashSet()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+constructor:///org/joda/time/Interval/Interval(long,long)|",
      "|java+method:///io/druid/client/cache/Cache/getBulk(java.lang.Iterable)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/google/common/hash/Hasher/hash()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/Set/remove(java.lang.Object)|",
      "|java+method:///com/google/common/collect/Lists/newLinkedList()|",
      "|java+method:///org/joda/time/Interval/getStartMillis()|",
      "|java+method:///io/druid/query/Query/getIntervals()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+constructor:///io/druid/client/CachingClusteredClient$3/CachingClusteredClient$3(io.druid.client.CachingClusteredClient,io.druid.query.Query,io.druid.query.CacheStrategy,java.util.List,java.util.Map,com.google.common.collect.ImmutableMap$Builder,boolean,boolean,java.util.Map,io.druid.query.QueryToolChest,java.util.Map)|",
      "|java+method:///io/druid/client/CacheUtil/populateCacheOnBrokers(io.druid.query.Query,io.druid.query.CacheStrategy,io.druid.client.cache.CacheConfig)|",
      "|java+method:///com/google/common/hash/Hasher/putBytes(byte%5B%5D)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///io/druid/query/BaseQuery/getContextPriority(io.druid.query.Query,int)|",
      "|java+method:///io/druid/timeline/DataSegment/getIdentifier()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/client/DirectDruidClient$JsonParserIterator/init()|",
    "called": "|java+constructor:///io/druid/query/QueryInterruptedException/QueryInterruptedException(java.lang.Throwable,java.lang.String)|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/getFactory()|",
      "|java+method:///io/druid/client/DirectDruidClient/access$800(io.druid.client.DirectDruidClient)|",
      "|java+method:///com/fasterxml/jackson/core/ObjectCodec/readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class)|",
      "|java+method:///io/druid/client/DirectDruidClient/access$200(io.druid.client.DirectDruidClient)|",
      "|java+constructor:///com/metamx/common/RE/RE(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/query/QueryInterruptedException/QueryInterruptedException(java.lang.Throwable,java.lang.String)|",
      "|java+method:///java/util/concurrent/Future/get()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|",
      "|java+method:///com/fasterxml/jackson/core/JsonFactory/createParser(java.io.InputStream)|",
      "|java+constructor:///com/metamx/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCodec()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///java/lang/Exception/getMessage()|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/getFactory()|",
      "|java+method:///io/druid/client/DirectDruidClient/access$800(io.druid.client.DirectDruidClient)|",
      "|java+method:///com/fasterxml/jackson/core/ObjectCodec/readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class)|",
      "|java+method:///io/druid/client/DirectDruidClient/access$200(io.druid.client.DirectDruidClient)|",
      "|java+constructor:///io/druid/java/util/common/RE/RE(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/query/QueryInterruptedException/QueryInterruptedException(java.lang.Throwable,java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCodec()|",
      "|java+method:///java/util/concurrent/Future/get()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|",
      "|java+method:///com/fasterxml/jackson/core/JsonFactory/createParser(java.io.InputStream)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///java/lang/Exception/getMessage()|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/segment/realtime/plumber/Sink/makeNewCurrIndex(long,io.druid.segment.indexing.DataSchema)|",
    "called": "|java+method:///io/druid/segment/incremental/IncrementalIndex/loadDimensionIterable(java.lang.Iterable,java.util.Map)|",
    "v1Body": [
      "|java+method:///io/druid/segment/incremental/IncrementalIndexSchema$Builder/withMinTimestamp(long)|",
      "|java+method:///java/util/concurrent/atomic/AtomicInteger/addAndGet(int)|",
      "|java+method:///io/druid/segment/realtime/FireHydrant/getIndex()|",
      "|java+constructor:///io/druid/segment/incremental/IncrementalIndexSchema$Builder/IncrementalIndexSchema$Builder()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex/getDimensionOrder()|",
      "|java+method:///io/druid/segment/Segment/asQueryableIndex()|",
      "|java+method:///io/druid/segment/realtime/plumber/Sink/getSegment()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndexSchema$Builder/build()|",
      "|java+constructor:///io/druid/segment/realtime/FireHydrant/FireHydrant(io.druid.segment.incremental.IncrementalIndex,int,java.lang.String)|",
      "|java+method:///io/druid/segment/column/Column/getCapabilities()|",
      "|java+method:///io/druid/segment/indexing/DataSchema/getParser()|",
      "|java+method:///io/druid/segment/data/Indexed/iterator()|",
      "|java+method:///java/util/concurrent/CopyOnWriteArrayList/add(java.lang.Object)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+constructor:///com/metamx/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/segment/realtime/FireHydrant/getCount()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex/close()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndexSchema$Builder/withMetrics(io.druid.query.aggregation.AggregatorFactory%5B%5D)|",
      "|java+method:///io/druid/segment/indexing/granularity/GranularitySpec/getQueryGranularity()|",
      "|java+method:///io/druid/segment/indexing/DataSchema/getGranularitySpec()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/concurrent/CopyOnWriteArrayList/size()|",
      "|java+method:///io/druid/segment/realtime/FireHydrant/getSegment()|",
      "|java+method:///io/druid/segment/QueryableIndex/getAvailableDimensions()|",
      "|java+method:///io/druid/segment/indexing/DataSchema/getAggregators()|",
      "|java+method:///io/druid/data/input/impl/DimensionsSpec/hasCustomDimensions()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex/loadDimensionIterable(java.lang.Iterable,java.util.Map)|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex/size()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndexSchema/getDimensionsSpec()|",
      "|java+method:///io/druid/segment/realtime/FireHydrant/hasSwapped()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndexSchema$Builder/withTimestampSpec(io.druid.data.input.impl.InputRowParser)|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndexSchema$Builder/withQueryGranularity(io.druid.granularity.QueryGranularity)|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex/getColumnCapabilities()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndexSchema$Builder/withRollup(boolean)|",
      "|java+method:///java/util/LinkedHashSet/addAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/druid/segment/indexing/granularity/GranularitySpec/isRollup()|",
      "|java+constructor:///io/druid/segment/incremental/OnheapIncrementalIndex/OnheapIncrementalIndex(io.druid.segment.incremental.IncrementalIndexSchema,boolean,int)|",
      "|java+method:///java/util/concurrent/CopyOnWriteArrayList/get(int)|",
      "|java+method:///io/druid/segment/QueryableIndex/getColumn(java.lang.String)|",
      "|java+method:///java/util/LinkedHashSet/add(java.lang.Object)|",
      "|java+method:///io/druid/timeline/DataSegment/getIdentifier()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndexSchema$Builder/withDimensionsSpec(io.druid.data.input.impl.InputRowParser)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/segment/incremental/IncrementalIndexSchema$Builder/withMinTimestamp(long)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///java/util/concurrent/atomic/AtomicInteger/addAndGet(int)|",
      "|java+method:///io/druid/segment/realtime/FireHydrant/getIndex()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex/getDimensionOrder()|",
      "|java+method:///io/druid/segment/Segment/asQueryableIndex()|",
      "|java+method:///io/druid/segment/realtime/plumber/Sink/getSegment()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndexSchema$Builder/build()|",
      "|java+constructor:///io/druid/segment/realtime/FireHydrant/FireHydrant(io.druid.segment.incremental.IncrementalIndex,int,java.lang.String)|",
      "|java+method:///io/druid/segment/column/Column/getCapabilities()|",
      "|java+method:///io/druid/segment/indexing/DataSchema/getParser()|",
      "|java+method:///io/druid/segment/data/Indexed/iterator()|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/concurrent/CopyOnWriteArrayList/add(java.lang.Object)|",
      "|java+method:///io/druid/segment/realtime/FireHydrant/getCount()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex/close()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndexSchema$Builder/withMetrics(io.druid.query.aggregation.AggregatorFactory%5B%5D)|",
      "|java+method:///io/druid/segment/indexing/granularity/GranularitySpec/getQueryGranularity()|",
      "|java+method:///io/druid/segment/indexing/DataSchema/getGranularitySpec()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/concurrent/CopyOnWriteArrayList/size()|",
      "|java+method:///io/druid/segment/realtime/FireHydrant/getSegment()|",
      "|java+method:///io/druid/segment/QueryableIndex/getAvailableDimensions()|",
      "|java+method:///io/druid/segment/indexing/DataSchema/getAggregators()|",
      "|java+method:///io/druid/data/input/impl/DimensionsSpec/hasCustomDimensions()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex/loadDimensionIterable(java.lang.Iterable,java.util.Map)|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndexSchema$Builder/withQueryGranularity(io.druid.java.util.common.granularity.Granularity)|",
      "|java+constructor:///io/druid/segment/incremental/IncrementalIndexSchema$Builder/IncrementalIndexSchema$Builder()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex/size()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndexSchema/getDimensionsSpec()|",
      "|java+method:///io/druid/segment/realtime/FireHydrant/hasSwapped()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndexSchema$Builder/withTimestampSpec(io.druid.data.input.impl.InputRowParser)|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex/getColumnCapabilities()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndexSchema$Builder/withRollup(boolean)|",
      "|java+method:///java/util/LinkedHashSet/addAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/druid/segment/indexing/granularity/GranularitySpec/isRollup()|",
      "|java+constructor:///io/druid/segment/incremental/OnheapIncrementalIndex/OnheapIncrementalIndex(io.druid.segment.incremental.IncrementalIndexSchema,boolean,int)|",
      "|java+method:///java/util/concurrent/CopyOnWriteArrayList/get(int)|",
      "|java+method:///io/druid/segment/QueryableIndex/getColumn(java.lang.String)|",
      "|java+method:///java/util/LinkedHashSet/add(java.lang.Object)|",
      "|java+method:///io/druid/timeline/DataSegment/getIdentifier()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndexSchema$Builder/withDimensionsSpec(io.druid.data.input.impl.InputRowParser)|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/guice/DruidProcessingModule/verifyDirectMemory(io.druid.query.DruidProcessingConfig)|",
    "called": "|java+method:///io/druid/query/DruidProcessingConfig/getNumThreads()|",
    "v1Body": [
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/metamx/common/logger/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/UnsupportedOperationException/getMessage()|",
      "|java+method:///io/druid/common/utils/VMUtils/getMaxDirectMemory()|",
      "|java+constructor:///com/google/inject/ProvisionException/ProvisionException(java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///io/druid/query/DruidProcessingConfig/getNumMergeBuffers()|",
      "|java+method:///io/druid/query/DruidProcessingConfig/intermediateComputeSizeBytes()|",
      "|java+method:///io/druid/query/DruidProcessingConfig/getNumThreads()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/UnsupportedOperationException/getMessage()|",
      "|java+method:///io/druid/common/utils/VMUtils/getMaxDirectMemory()|",
      "|java+method:///io/druid/java/util/common/logger/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///com/google/inject/ProvisionException/ProvisionException(java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///io/druid/query/DruidProcessingConfig/getNumMergeBuffers()|",
      "|java+method:///io/druid/query/DruidProcessingConfig/intermediateComputeSizeBytes()|",
      "|java+method:///io/druid/query/DruidProcessingConfig/getNumThreads()|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/query/lookup/LookupListeningResource$2/delete(java.lang.String)|",
    "called": "|java+method:///io/druid/query/lookup/LookupReferencesManager/get(java.lang.String)|",
    "v1Body": [
      "|java+method:///io/druid/query/lookup/LookupReferencesManager/get(java.lang.String)|",
      "|java+method:///io/druid/query/lookup/LookupReferencesManager/remove(java.lang.String)|",
      "|java+constructor:///com/metamx/common/RE/RE(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/query/lookup/LookupReferencesManager/get(java.lang.String)|",
      "|java+constructor:///io/druid/java/util/common/RE/RE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/query/lookup/LookupReferencesManager/remove(java.lang.String)|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/segment/realtime/firehose/IngestSegmentFirehose$1$1/apply(io.druid.segment.Cursor)|",
    "called": "|java+constructor:///io/druid/query/dimension/DefaultDimensionSpec/DefaultDimensionSpec(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/metamx/common/guava/Sequences/simple(java.lang.Iterable)|",
      "|java+method:///io/druid/segment/Cursor/makeDimensionSelector(io.druid.query.dimension.DimensionSpec)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///io/druid/segment/realtime/firehose/IngestSegmentFirehose$1$1$1/IngestSegmentFirehose$1$1$1(io.druid.segment.realtime.firehose.IngestSegmentFirehose$1$1,io.druid.segment.Cursor,io.druid.segment.LongColumnSelector,java.util.Map,java.util.Map)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///io/druid/segment/Cursor/makeLongColumnSelector(java.lang.String)|",
      "|java+method:///io/druid/segment/Cursor/makeObjectColumnSelector(java.lang.String)|",
      "|java+constructor:///io/druid/query/dimension/DefaultDimensionSpec/DefaultDimensionSpec(java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/druid/segment/Cursor/makeDimensionSelector(io.druid.query.dimension.DimensionSpec)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///io/druid/segment/realtime/firehose/IngestSegmentFirehose$1$1$1/IngestSegmentFirehose$1$1$1(io.druid.segment.realtime.firehose.IngestSegmentFirehose$1$1,io.druid.segment.Cursor,io.druid.segment.LongColumnSelector,java.util.Map,java.util.Map)|",
      "|java+method:///io/druid/java/util/common/guava/Sequences/simple(java.lang.Iterable)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///io/druid/segment/Cursor/makeLongColumnSelector(java.lang.String)|",
      "|java+method:///io/druid/segment/Cursor/makeObjectColumnSelector(java.lang.String)|",
      "|java+constructor:///io/druid/query/dimension/DefaultDimensionSpec/DefaultDimensionSpec(java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/segment/realtime/appenderator/SinkQuerySegmentWalker/getQueryRunnerForSegments(io.druid.query.Query,java.lang.Iterable)|",
    "called": "|java+constructor:///io/druid/query/NoopQueryRunner/NoopQueryRunner()|",
    "v1Body": [
      "|java+method:///io/druid/query/TableDataSource/getName()|",
      "|java+method:///com/metamx/common/guava/FunctionalIterable/create(java.lang.Iterable)|",
      "|java+method:///com/metamx/emitter/service/AlertBuilder/addData(java.lang.String,java.lang.Object)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicLong/AtomicLong(long)|",
      "|java+method:///io/druid/query/QueryToolChest/mergeResults(io.druid.query.QueryRunner)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/makeAlert(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/query/QueryRunnerFactory/getToolchest()|",
      "|java+method:///io/druid/query/CPUTimeMetricQueryRunner/safeBuild(io.druid.query.QueryRunner,com.google.common.base.Function,com.metamx.emitter.service.ServiceEmitter,java.util.concurrent.atomic.AtomicLong,boolean)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+constructor:///io/druid/segment/realtime/appenderator/SinkQuerySegmentWalker$3/SinkQuerySegmentWalker$3(io.druid.segment.realtime.appenderator.SinkQuerySegmentWalker,io.druid.query.QueryToolChest,io.druid.query.Query)|",
      "|java+constructor:///io/druid/segment/realtime/appenderator/SinkQuerySegmentWalker$4/SinkQuerySegmentWalker$4(io.druid.segment.realtime.appenderator.SinkQuerySegmentWalker,io.druid.query.QueryRunnerFactory,boolean,io.druid.query.QueryToolChest,com.google.common.base.Function,java.util.concurrent.atomic.AtomicLong)|",
      "|java+method:///com/metamx/common/guava/FunctionalIterable/transform(com.google.common.base.Function)|",
      "|java+method:///io/druid/query/QueryRunnerFactoryConglomerate/findFactory(io.druid.query.Query)|",
      "|java+constructor:///com/metamx/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/query/NoopQueryRunner/NoopQueryRunner()|",
      "|java+method:///io/druid/query/Query/getDataSource()|",
      "|java+method:///com/metamx/emitter/service/AlertBuilder/emit()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/druid/query/QueryRunnerFactory/mergeRunners(java.util.concurrent.ExecutorService,java.lang.Iterable)|",
      "|java+method:///io/druid/query/Query/getContextValue(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Boolean/booleanValue()|"
    ],
    "v2Body": [
      "|java+method:///io/druid/query/TableDataSource/getName()|",
      "|java+method:///com/metamx/emitter/service/AlertBuilder/addData(java.lang.String,java.lang.Object)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicLong/AtomicLong(long)|",
      "|java+method:///io/druid/query/QueryToolChest/mergeResults(io.druid.query.QueryRunner)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/makeAlert(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/query/CPUTimeMetricQueryRunner/safeBuild(io.druid.query.QueryRunner,com.google.common.base.Function,com.metamx.emitter.service.ServiceEmitter,java.util.concurrent.atomic.AtomicLong,boolean)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+constructor:///io/druid/segment/realtime/appenderator/SinkQuerySegmentWalker$3/SinkQuerySegmentWalker$3(io.druid.segment.realtime.appenderator.SinkQuerySegmentWalker,io.druid.query.QueryToolChest,io.druid.query.Query)|",
      "|java+constructor:///io/druid/segment/realtime/appenderator/SinkQuerySegmentWalker$4/SinkQuerySegmentWalker$4(io.druid.segment.realtime.appenderator.SinkQuerySegmentWalker,io.druid.query.QueryRunnerFactory,boolean,io.druid.query.QueryToolChest,com.google.common.base.Function,java.util.concurrent.atomic.AtomicLong)|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/query/QueryRunnerFactoryConglomerate/findFactory(io.druid.query.Query)|",
      "|java+constructor:///io/druid/query/NoopQueryRunner/NoopQueryRunner()|",
      "|java+method:///io/druid/java/util/common/guava/FunctionalIterable/transform(com.google.common.base.Function)|",
      "|java+method:///io/druid/java/util/common/guava/FunctionalIterable/create(java.lang.Iterable)|",
      "|java+method:///io/druid/query/QueryRunnerFactory/getToolchest()|",
      "|java+method:///io/druid/query/Query/getDataSource()|",
      "|java+method:///com/metamx/emitter/service/AlertBuilder/emit()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/druid/query/QueryRunnerFactory/mergeRunners(java.util.concurrent.ExecutorService,java.lang.Iterable)|",
      "|java+method:///io/druid/query/Query/getContextValue(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Boolean/booleanValue()|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/server/AsyncQueryForwardingServlet$MetricsEmittingProxyResponseListener/onComplete(org.eclipse.jetty.client.api.Result)|",
    "called": "|java+method:///io/druid/query/DruidMetrics/makeQueryTimeMetric(io.druid.query.QueryToolChest,com.fasterxml.jackson.databind.ObjectMapper,io.druid.query.Query,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///io/druid/server/RequestLogLine/RequestLogLine(org.joda.time.DateTime,java.lang.String,io.druid.query.Query,io.druid.server.QueryStats)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet/access$400(io.druid.server.AsyncQueryForwardingServlet)|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet/access$200(io.druid.server.AsyncQueryForwardingServlet)|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet/access$100(io.druid.server.AsyncQueryForwardingServlet)|",
      "|java+method:///javax/servlet/http/HttpServletRequest/getRemoteAddr()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///javax/ws/rs/core/Response$Status/getStatusCode()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+constructor:///io/druid/server/QueryStats/QueryStats(java.util.Map)|",
      "|java+method:///io/druid/query/DruidMetrics/makeQueryTimeMetric(io.druid.query.QueryToolChest,com.fasterxml.jackson.databind.ObjectMapper,io.druid.query.Query,java.lang.String)|",
      "|java+method:///com/metamx/emitter/service/ServiceEmitter/emit(com.metamx.emitter.service.ServiceEventBuilder)|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet/access$300(io.druid.server.AsyncQueryForwardingServlet)|",
      "|java+method:///org/eclipse/jetty/proxy/ProxyServlet$ProxyResponseListener/onComplete(org.eclipse.jetty.client.api.Result)|",
      "|java+method:///io/druid/query/QueryToolChestWarehouse/getToolChest(io.druid.query.Query)|",
      "|java+method:///org/eclipse/jetty/client/api/Response/getStatus()|",
      "|java+method:///io/druid/server/log/RequestLogger/log(io.druid.server.RequestLogLine)|",
      "|java+method:///com/metamx/emitter/service/ServiceMetricEvent$Builder/build(java.lang.String,java.lang.Number)|",
      "|java+constructor:///org/joda/time/DateTime/DateTime()|",
      "|java+method:///com/metamx/emitter/EmittingLogger/error(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet/access$000()|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/eclipse/jetty/client/api/Result/getResponse()|",
      "|java+method:///org/eclipse/jetty/client/api/Result/isSucceeded()|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/server/RequestLogLine/RequestLogLine(org.joda.time.DateTime,java.lang.String,io.druid.query.Query,io.druid.server.QueryStats)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet/access$600(io.druid.server.AsyncQueryForwardingServlet)|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet/access$500(io.druid.server.AsyncQueryForwardingServlet)|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet/access$400(io.druid.server.AsyncQueryForwardingServlet)|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet/access$100(io.druid.server.AsyncQueryForwardingServlet)|",
      "|java+method:///javax/servlet/http/HttpServletRequest/getRemoteAddr()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///javax/ws/rs/core/Response$Status/getStatusCode()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+constructor:///io/druid/server/QueryStats/QueryStats(java.util.Map)|",
      "|java+method:///io/druid/query/DruidMetrics/makeQueryTimeMetric(io.druid.query.QueryToolChest,com.fasterxml.jackson.databind.ObjectMapper,io.druid.query.Query,java.lang.String)|",
      "|java+method:///com/metamx/emitter/service/ServiceEmitter/emit(com.metamx.emitter.service.ServiceEventBuilder)|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet/access$300(io.druid.server.AsyncQueryForwardingServlet)|",
      "|java+method:///org/eclipse/jetty/proxy/ProxyServlet$ProxyResponseListener/onComplete(org.eclipse.jetty.client.api.Result)|",
      "|java+method:///io/druid/query/QueryToolChestWarehouse/getToolChest(io.druid.query.Query)|",
      "|java+method:///org/eclipse/jetty/client/api/Response/getStatus()|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet/access$200(io.druid.server.AsyncQueryForwardingServlet)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/incrementAndGet()|",
      "|java+method:///io/druid/server/log/RequestLogger/log(io.druid.server.RequestLogLine)|",
      "|java+method:///com/metamx/emitter/service/ServiceMetricEvent$Builder/build(java.lang.String,java.lang.Number)|",
      "|java+constructor:///org/joda/time/DateTime/DateTime()|",
      "|java+method:///com/metamx/emitter/EmittingLogger/error(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet/access$000()|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/eclipse/jetty/client/api/Result/getResponse()|",
      "|java+method:///org/eclipse/jetty/client/api/Result/isSucceeded()|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/server/QueryResource/doPost(java.io.InputStream,java.lang.String,javax.servlet.http.HttpServletRequest)|",
    "called": "|java+method:///io/druid/query/DruidMetrics/makeQueryTimeMetric(io.druid.query.QueryToolChest,com.fasterxml.jackson.databind.ObjectMapper,io.druid.query.Query,java.lang.String)|",
    "v1Body": [
      "|java+method:///javax/ws/rs/core/Response/ok(java.lang.Object,java.lang.String)|",
      "|java+method:///com/google/common/collect/MapMaker/makeMap()|",
      "|java+method:///java/lang/Thread/getName()|",
      "|java+method:///com/metamx/emitter/EmittingLogger/error(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///javax/servlet/http/HttpServletRequest/getAttribute(java.lang.String)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+constructor:///io/druid/server/RequestLogLine/RequestLogLine(org.joda.time.DateTime,java.lang.String,io.druid.query.Query,io.druid.server.QueryStats)|",
      "|java+constructor:///com/metamx/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///io/druid/query/QueryInterruptedException/getMessage()|",
      "|java+method:///com/metamx/emitter/service/ServiceMetricEvent$Builder/setDimension(java.lang.String,java.lang.String)|",
      "|java+method:///javax/ws/rs/core/Response/status(javax.ws.rs.core.Response$Status)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/druid/query/Query/getType()|",
      "|java+method:///io/druid/query/Query/getId()|",
      "|java+method:///com/metamx/emitter/EmittingLogger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/druid/server/security/AuthConfig/isEnabled()|",
      "|java+method:///com/metamx/common/guava/Sequences/empty()|",
      "|java+method:///io/druid/server/security/Access/isAllowed()|",
      "|java+method:///io/druid/query/Query/getContextValue(java.lang.String)|",
      "|java+method:///com/metamx/emitter/service/AlertBuilder/addData(java.lang.String,java.lang.Object)|",
      "|java+method:///javax/ws/rs/core/Response$ResponseBuilder/header(java.lang.String,java.lang.Object)|",
      "|java+method:///io/druid/server/QueryResource$ResponseContext/newOutputWriter()|",
      "|java+method:///com/metamx/emitter/service/ServiceEmitter/emit(com.metamx.emitter.service.ServiceEventBuilder)|",
      "|java+method:///io/druid/query/QueryToolChestWarehouse/getToolChest(io.druid.query.Query)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/makeAlert(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///io/druid/server/QueryResource$ResponseContext/getObjectMapper()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsString(java.lang.Object)|",
      "|java+method:///javax/ws/rs/core/Response$ResponseBuilder/build()|",
      "|java+method:///java/util/UUID/randomUUID()|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///io/druid/server/log/RequestLogger/log(io.druid.server.RequestLogLine)|",
      "|java+method:///com/metamx/emitter/service/ServiceMetricEvent$Builder/build(java.lang.String,java.lang.Number)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///javax/servlet/http/HttpServletRequest/getContentType()|",
      "|java+method:///javax/servlet/http/HttpServletRequest/getRemoteAddr()|",
      "|java+method:///io/druid/server/QueryResource$ResponseContext/gotError(java.lang.Exception)|",
      "|java+constructor:///io/druid/server/QueryResource$2/QueryResource$2(io.druid.server.QueryResource,com.fasterxml.jackson.databind.ObjectWriter,com.metamx.common.guava.Yielder,long,io.druid.query.QueryToolChest,io.druid.query.Query,javax.servlet.http.HttpServletRequest)|",
      "|java+constructor:///io/druid/server/QueryResource$1/QueryResource$1(io.druid.server.QueryResource)|",
      "|java+method:///com/metamx/emitter/service/AlertBuilder/emit()|",
      "|java+constructor:///com/google/common/collect/MapMaker/MapMaker()|",
      "|java+method:///java/lang/Thread/setName(java.lang.String)|",
      "|java+method:///io/druid/query/Query/getDataSource()|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/String/substring(int,int)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///org/joda/time/DateTime/DateTime(long)|",
      "|java+method:///org/joda/time/Period/toStandardDuration()|",
      "|java+method:///com/metamx/common/guava/Sequence/toYielder(java.lang.Object,com.metamx.common.guava.YieldingAccumulator)|",
      "|java+method:///io/druid/query/DataSource/getNames()|",
      "|java+method:///io/druid/server/initialization/ServerConfig/getMaxIdleTime()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///java/lang/Exception/toString()|",
      "|java+method:///io/druid/query/Query/run(io.druid.query.QuerySegmentWalker,java.util.Map)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/metamx/common/guava/Yielder/close()|",
      "|java+method:///org/joda/time/Duration/getMillis()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(java.io.InputStream,java.lang.Class)|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///io/druid/query/Query/withId(java.lang.String)|",
      "|java+method:///io/druid/server/QueryResource$ResponseContext/getContentType()|",
      "|java+constructor:///io/druid/server/QueryStats/QueryStats(java.util.Map)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/isDebugEnabled()|",
      "|java+method:///com/metamx/emitter/EmittingLogger/warn(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/warn(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/server/security/AuthorizationInfo/isAuthorized(io.druid.server.security.Resource,io.druid.server.security.Action)|",
      "|java+method:///io/druid/query/Query/withOverriddenContext(java.util.Map)|",
      "|java+method:///io/druid/query/DruidMetrics/makeQueryTimeMetric(io.druid.query.QueryToolChest,com.fasterxml.jackson.databind.ObjectMapper,io.druid.query.Query,java.lang.String)|",
      "|java+constructor:///io/druid/server/security/Resource/Resource(java.lang.String,io.druid.server.security.ResourceType)|",
      "|java+method:///io/druid/query/QueryInterruptedException/toString()|",
      "|java+method:///io/druid/server/QueryResource/createContext(java.lang.String,boolean)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/MapMaker/makeMap()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///io/druid/server/security/Access/isAllowed()|",
      "|java+method:///java/lang/Thread/getName()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///io/druid/query/DataSource/getNames()|",
      "|java+method:///io/druid/java/util/common/guava/Yielder/close()|",
      "|java+method:///javax/ws/rs/core/Response/ok(java.lang.Object,java.lang.String)|",
      "|java+method:///javax/servlet/http/HttpServletRequest/getHeader(java.lang.String)|",
      "|java+constructor:///io/druid/server/RequestLogLine/RequestLogLine(org.joda.time.DateTime,java.lang.String,io.druid.query.Query,io.druid.server.QueryStats)|",
      "|java+method:///com/metamx/emitter/service/ServiceMetricEvent$Builder/setDimension(java.lang.String,java.lang.String)|",
      "|java+method:///javax/ws/rs/core/Response/status(javax.ws.rs.core.Response$Status)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/druid/query/Query/getType()|",
      "|java+method:///javax/ws/rs/core/Response/notModified()|",
      "|java+method:///io/druid/query/Query/getId()|",
      "|java+method:///com/metamx/emitter/EmittingLogger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/druid/server/security/AuthConfig/isEnabled()|",
      "|java+method:///io/druid/query/Query/getContextValue(java.lang.String)|",
      "|java+method:///com/metamx/emitter/service/AlertBuilder/addData(java.lang.String,java.lang.Object)|",
      "|java+method:///javax/ws/rs/core/Response$ResponseBuilder/header(java.lang.String,java.lang.Object)|",
      "|java+method:///io/druid/server/QueryResource$ResponseContext/newOutputWriter()|",
      "|java+method:///com/metamx/emitter/service/ServiceEmitter/emit(com.metamx.emitter.service.ServiceEventBuilder)|",
      "|java+method:///io/druid/query/QueryToolChestWarehouse/getToolChest(io.druid.query.Query)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/makeAlert(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/incrementAndGet()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///io/druid/server/QueryResource$ResponseContext/getObjectMapper()|",
      "|java+method:///io/druid/java/util/common/guava/Sequences/empty()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsString(java.lang.Object)|",
      "|java+method:///javax/ws/rs/core/Response$ResponseBuilder/build()|",
      "|java+method:///java/util/UUID/randomUUID()|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///io/druid/server/log/RequestLogger/log(io.druid.server.RequestLogLine)|",
      "|java+method:///com/metamx/emitter/service/ServiceMetricEvent$Builder/build(java.lang.String,java.lang.Number)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///javax/servlet/http/HttpServletRequest/getContentType()|",
      "|java+method:///javax/servlet/http/HttpServletRequest/getRemoteAddr()|",
      "|java+method:///io/druid/server/QueryResource$ResponseContext/gotError(java.lang.Exception)|",
      "|java+method:///com/metamx/emitter/service/AlertBuilder/emit()|",
      "|java+constructor:///com/google/common/collect/MapMaker/MapMaker()|",
      "|java+method:///java/lang/Thread/setName(java.lang.String)|",
      "|java+method:///io/druid/query/Query/getDataSource()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/error(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/String/substring(int,int)|",
      "|java+method:///io/druid/java/util/common/guava/Yielders/each(io.druid.java.util.common.guava.Sequence)|",
      "|java+method:///javax/servlet/http/HttpServletRequest/getAttribute(java.lang.String)|",
      "|java+constructor:///io/druid/server/QueryResource$1/QueryResource$1(io.druid.server.QueryResource,com.fasterxml.jackson.databind.ObjectWriter,io.druid.java.util.common.guava.Yielder,long,io.druid.query.QueryToolChest,io.druid.query.Query,javax.servlet.http.HttpServletRequest,java.lang.String)|",
      "|java+constructor:///org/joda/time/DateTime/DateTime(long)|",
      "|java+method:///org/joda/time/Period/toStandardDuration()|",
      "|java+method:///io/druid/server/initialization/ServerConfig/getMaxIdleTime()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///java/lang/Exception/toString()|",
      "|java+method:///io/druid/query/Query/run(io.druid.query.QuerySegmentWalker,java.util.Map)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/joda/time/Duration/getMillis()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(java.io.InputStream,java.lang.Class)|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///io/druid/query/Query/withId(java.lang.String)|",
      "|java+method:///io/druid/server/QueryResource$ResponseContext/getContentType()|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/server/QueryStats/QueryStats(java.util.Map)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/isDebugEnabled()|",
      "|java+method:///com/metamx/emitter/EmittingLogger/warn(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/remove(java.lang.Object)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/warn(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/server/security/AuthorizationInfo/isAuthorized(io.druid.server.security.Resource,io.druid.server.security.Action)|",
      "|java+method:///io/druid/query/Query/withOverriddenContext(java.util.Map)|",
      "|java+method:///io/druid/query/DruidMetrics/makeQueryTimeMetric(io.druid.query.QueryToolChest,com.fasterxml.jackson.databind.ObjectMapper,io.druid.query.Query,java.lang.String)|",
      "|java+constructor:///io/druid/server/security/Resource/Resource(java.lang.String,io.druid.server.security.ResourceType)|",
      "|java+method:///io/druid/query/QueryInterruptedException/toString()|",
      "|java+method:///io/druid/server/QueryResource/createContext(java.lang.String,boolean)|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/segment/realtime/appenderator/AppenderatorImpl/mergeAndPush(io.druid.segment.realtime.appenderator.SegmentIdentifier,io.druid.segment.realtime.plumber.Sink)|",
    "called": "|java+method:///io/druid/segment/IndexMerger/mergeQueryableIndex(java.util.List,boolean,io.druid.query.aggregation.AggregatorFactory%5B%5D,java.io.File,io.druid.segment.IndexSpec)|",
    "v1Body": [
      "|java+method:///io/druid/segment/realtime/plumber/Sink/iterator()|",
      "|java+method:///io/druid/segment/IndexMerger/mergeQueryableIndex(java.util.List,boolean,io.druid.query.aggregation.AggregatorFactory%5B%5D,java.io.File,io.druid.segment.IndexSpec)|",
      "|java+method:///io/druid/segment/realtime/FireHydrant/hasSwapped()|",
      "|java+method:///com/metamx/emitter/EmittingLogger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///io/druid/segment/realtime/plumber/Sink/isWritable()|",
      "|java+method:///io/druid/segment/realtime/appenderator/AppenderatorConfig/getIndexSpec()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValue(java.io.File,java.lang.Object)|",
      "|java+constructor:///com/metamx/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///io/druid/segment/IndexIO/loadIndex(java.io.File)|",
      "|java+method:///io/druid/segment/indexing/DataSchema/getGranularitySpec()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Iterable)|",
      "|java+method:///io/druid/segment/realtime/FireHydrant/getSegment()|",
      "|java+method:///io/druid/segment/QueryableIndex/getAvailableDimensions()|",
      "|java+method:///io/druid/segment/indexing/DataSchema/getAggregators()|",
      "|java+method:///io/druid/segment/Segment/asQueryableIndex()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///io/druid/segment/realtime/appenderator/AppenderatorImpl/computeDescriptorFile(io.druid.segment.realtime.appenderator.SegmentIdentifier)|",
      "|java+method:///io/druid/timeline/DataSegment/withDimensions(java.util.List)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///io/druid/segment/realtime/plumber/Sink/getSegment()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/druid/segment/indexing/granularity/GranularitySpec/isRollup()|",
      "|java+method:///io/druid/segment/realtime/FireDepartmentMetrics/incrementFailedHandoffs()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(java.io.File,java.lang.Class)|",
      "|java+method:///io/druid/segment/realtime/appenderator/AppenderatorImpl/removeDirectory(java.io.File)|",
      "|java+method:///io/druid/segment/realtime/appenderator/AppenderatorImpl/computePersistDir(io.druid.segment.realtime.appenderator.SegmentIdentifier)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/warn(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/warn(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/segment/loading/DataSegmentPusher/push(java.io.File,io.druid.timeline.DataSegment)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/segment/realtime/plumber/Sink/iterator()|",
      "|java+method:///io/druid/segment/IndexMerger/mergeQueryableIndex(java.util.List,boolean,io.druid.query.aggregation.AggregatorFactory%5B%5D,java.io.File,io.druid.segment.IndexSpec)|",
      "|java+method:///io/druid/segment/realtime/FireHydrant/hasSwapped()|",
      "|java+method:///com/metamx/emitter/EmittingLogger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///io/druid/segment/realtime/appenderator/AppenderatorConfig/getIndexSpec()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValue(java.io.File,java.lang.Object)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///io/druid/segment/IndexIO/loadIndex(java.io.File)|",
      "|java+method:///io/druid/segment/indexing/DataSchema/getGranularitySpec()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Iterable)|",
      "|java+method:///io/druid/segment/realtime/FireHydrant/getSegment()|",
      "|java+method:///io/druid/segment/QueryableIndex/getAvailableDimensions()|",
      "|java+method:///io/druid/segment/indexing/DataSchema/getAggregators()|",
      "|java+method:///io/druid/segment/Segment/asQueryableIndex()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///io/druid/segment/realtime/appenderator/AppenderatorImpl/computeDescriptorFile(io.druid.segment.realtime.appenderator.SegmentIdentifier)|",
      "|java+method:///io/druid/timeline/DataSegment/withDimensions(java.util.List)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///io/druid/segment/realtime/plumber/Sink/getSegment()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/druid/segment/indexing/granularity/GranularitySpec/isRollup()|",
      "|java+method:///io/druid/segment/realtime/FireDepartmentMetrics/incrementFailedHandoffs()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(java.io.File,java.lang.Class)|",
      "|java+method:///io/druid/segment/realtime/appenderator/AppenderatorImpl/removeDirectory(java.io.File)|",
      "|java+method:///io/druid/segment/realtime/appenderator/AppenderatorImpl/computePersistDir(io.druid.segment.realtime.appenderator.SegmentIdentifier)|",
      "|java+method:///io/druid/segment/realtime/plumber/Sink/isWritable()|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/warn(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/warn(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/segment/loading/DataSegmentPusher/push(java.io.File,io.druid.timeline.DataSegment)|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/segment/realtime/appenderator/SinkQuerySegmentWalker$4$1/apply(io.druid.segment.realtime.FireHydrant)|",
    "called": "|java+constructor:///io/druid/query/NoopQueryRunner/NoopQueryRunner()|",
    "v1Body": [
      "|java+method:///com/metamx/common/guava/CloseQuietly/close(java.io.Closeable)|",
      "|java+constructor:///io/druid/query/NoopQueryRunner/NoopQueryRunner()|",
      "|java+method:///com/google/common/util/concurrent/MoreExecutors/sameThreadExecutor()|",
      "|java+method:///io/druid/segment/realtime/appenderator/SinkQuerySegmentWalker/access$300(io.druid.segment.realtime.appenderator.SinkQuerySegmentWalker)|",
      "|java+method:///io/druid/segment/realtime/appenderator/SinkQuerySegmentWalker/access$100(io.druid.segment.realtime.appenderator.SinkQuerySegmentWalker)|",
      "|java+method:///io/druid/client/cache/Cache/isLocal()|",
      "|java+constructor:///io/druid/client/CachingQueryRunner/CachingQueryRunner(java.lang.String,io.druid.query.SegmentDescriptor,com.fasterxml.jackson.databind.ObjectMapper,io.druid.client.cache.Cache,io.druid.query.QueryToolChest,io.druid.query.QueryRunner,java.util.concurrent.ExecutorService,io.druid.client.cache.CacheConfig)|",
      "|java+method:///io/druid/segment/realtime/appenderator/SinkQuerySegmentWalker/makeHydrantCacheIdentifier(io.druid.segment.realtime.FireHydrant)|",
      "|java+method:///io/druid/query/QueryRunnerFactory/createRunner(io.druid.segment.Segment)|",
      "|java+method:///io/druid/segment/realtime/FireHydrant/hasSwapped()|",
      "|java+method:///io/druid/query/QueryRunnerHelper/makeClosingQueryRunner(io.druid.query.QueryRunner,java.io.Closeable)|",
      "|java+method:///io/druid/segment/realtime/FireHydrant/getAndIncrementSegment()|",
      "|java+method:///io/druid/segment/realtime/appenderator/SinkQuerySegmentWalker/access$200(io.druid.segment.realtime.appenderator.SinkQuerySegmentWalker)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/query/NoopQueryRunner/NoopQueryRunner()|",
      "|java+method:///io/druid/java/util/common/guava/CloseQuietly/close(java.io.Closeable)|",
      "|java+method:///com/google/common/util/concurrent/MoreExecutors/sameThreadExecutor()|",
      "|java+method:///io/druid/segment/realtime/appenderator/SinkQuerySegmentWalker/access$300(io.druid.segment.realtime.appenderator.SinkQuerySegmentWalker)|",
      "|java+method:///io/druid/segment/realtime/appenderator/SinkQuerySegmentWalker/access$100(io.druid.segment.realtime.appenderator.SinkQuerySegmentWalker)|",
      "|java+method:///io/druid/client/cache/Cache/isLocal()|",
      "|java+constructor:///io/druid/client/CachingQueryRunner/CachingQueryRunner(java.lang.String,io.druid.query.SegmentDescriptor,com.fasterxml.jackson.databind.ObjectMapper,io.druid.client.cache.Cache,io.druid.query.QueryToolChest,io.druid.query.QueryRunner,java.util.concurrent.ExecutorService,io.druid.client.cache.CacheConfig)|",
      "|java+method:///io/druid/segment/realtime/appenderator/SinkQuerySegmentWalker/makeHydrantCacheIdentifier(io.druid.segment.realtime.FireHydrant)|",
      "|java+method:///io/druid/query/QueryRunnerFactory/createRunner(io.druid.segment.Segment)|",
      "|java+method:///io/druid/segment/realtime/FireHydrant/hasSwapped()|",
      "|java+method:///io/druid/query/QueryRunnerHelper/makeClosingQueryRunner(io.druid.query.QueryRunner,java.io.Closeable)|",
      "|java+method:///io/druid/segment/realtime/FireHydrant/getAndIncrementSegment()|",
      "|java+method:///io/druid/segment/realtime/appenderator/SinkQuerySegmentWalker/access$200(io.druid.segment.realtime.appenderator.SinkQuerySegmentWalker)|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/server/coordination/ServerManager/getQueryRunnerForSegments(io.druid.query.Query,java.lang.Iterable)|",
    "called": "|java+constructor:///io/druid/query/FinalizeResultsQueryRunner/FinalizeResultsQueryRunner(io.druid.query.QueryRunner,io.druid.query.QueryToolChest)|",
    "v1Body": [
      "|java+constructor:///io/druid/query/NoopQueryRunner/NoopQueryRunner()|",
      "|java+constructor:///io/druid/query/FinalizeResultsQueryRunner/FinalizeResultsQueryRunner(io.druid.query.QueryRunner,io.druid.query.QueryToolChest)|",
      "|java+method:///com/metamx/common/guava/FunctionalIterable/create(java.lang.Iterable)|",
      "|java+method:///com/metamx/emitter/service/AlertBuilder/addData(java.lang.String,java.lang.Object)|",
      "|java+method:///io/druid/query/QueryToolChest/mergeResults(io.druid.query.QueryRunner)|",
      "|java+method:///io/druid/query/QueryRunnerFactory/getToolchest()|",
      "|java+constructor:///io/druid/server/coordination/ServerManager$3/ServerManager$3(io.druid.server.coordination.ServerManager,io.druid.timeline.VersionedIntervalTimeline,io.druid.query.QueryRunnerFactory,io.druid.query.QueryToolChest,com.google.common.base.Function,java.util.concurrent.atomic.AtomicLong)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicLong/AtomicLong(long)|",
      "|java+method:///io/druid/server/coordination/ServerManager/getDataSourceName(io.druid.query.DataSource)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/makeAlert(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///com/metamx/common/guava/FunctionalIterable/transformCat(com.google.common.base.Function)|",
      "|java+method:///io/druid/query/CPUTimeMetricQueryRunner/safeBuild(io.druid.query.QueryRunner,com.google.common.base.Function,com.metamx.emitter.service.ServiceEmitter,java.util.concurrent.atomic.AtomicLong,boolean)|",
      "|java+method:///io/druid/query/Query/getDataSource()|",
      "|java+method:///com/metamx/emitter/service/AlertBuilder/emit()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/druid/query/QueryRunnerFactory/mergeRunners(java.util.concurrent.ExecutorService,java.lang.Iterable)|",
      "|java+method:///io/druid/query/QueryRunnerFactoryConglomerate/findFactory(io.druid.query.Query)|",
      "|java+method:///io/druid/server/coordination/ServerManager/getBuilderFn(io.druid.query.QueryToolChest)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/query/NoopQueryRunner/NoopQueryRunner()|",
      "|java+constructor:///io/druid/query/FinalizeResultsQueryRunner/FinalizeResultsQueryRunner(io.druid.query.QueryRunner,io.druid.query.QueryToolChest)|",
      "|java+method:///com/metamx/emitter/service/AlertBuilder/addData(java.lang.String,java.lang.Object)|",
      "|java+method:///io/druid/query/CPUTimeMetricQueryRunner/safeBuild(io.druid.query.QueryRunner,com.google.common.base.Function,com.metamx.emitter.service.ServiceEmitter,java.util.concurrent.atomic.AtomicLong,boolean)|",
      "|java+constructor:///io/druid/server/coordination/ServerManager$3/ServerManager$3(io.druid.server.coordination.ServerManager,io.druid.timeline.VersionedIntervalTimeline,io.druid.query.QueryRunnerFactory,io.druid.query.QueryToolChest,com.google.common.base.Function,java.util.concurrent.atomic.AtomicLong)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicLong/AtomicLong(long)|",
      "|java+method:///io/druid/server/coordination/ServerManager/getDataSourceName(io.druid.query.DataSource)|",
      "|java+method:///io/druid/java/util/common/guava/FunctionalIterable/transformCat(com.google.common.base.Function)|",
      "|java+method:///io/druid/query/QueryToolChest/mergeResults(io.druid.query.QueryRunner)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/makeAlert(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///io/druid/java/util/common/guava/FunctionalIterable/create(java.lang.Iterable)|",
      "|java+method:///io/druid/query/QueryRunnerFactory/getToolchest()|",
      "|java+method:///io/druid/query/Query/getDataSource()|",
      "|java+method:///com/metamx/emitter/service/AlertBuilder/emit()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/druid/query/QueryRunnerFactory/mergeRunners(java.util.concurrent.ExecutorService,java.lang.Iterable)|",
      "|java+method:///io/druid/query/QueryRunnerFactoryConglomerate/findFactory(io.druid.query.Query)|",
      "|java+method:///io/druid/server/coordination/ServerManager/getBuilderFn(io.druid.query.QueryToolChest)|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/segment/realtime/appenderator/AppenderatorImpl/bootstrapSinksFromDisk()|",
    "called": "|java+constructor:///io/druid/segment/QueryableIndexSegment/QueryableIndexSegment(java.lang.String,io.druid.segment.QueryableIndex)|",
    "v1Body": [
      "|java+method:///org/apache/commons/io/FileUtils/deleteDirectory(java.io.File)|",
      "|java+method:///io/druid/segment/realtime/appenderator/Committed/getHydrants()|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///com/google/common/collect/ImmutableMap/keySet()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(java.io.File,java.lang.Class)|",
      "|java+method:///java/io/File/isFile()|",
      "|java+method:///io/druid/segment/realtime/appenderator/Committed/getCommittedHydrants(java.lang.String)|",
      "|java+method:///io/druid/segment/indexing/DataSchema/getDataSource()|",
      "|java+method:///java/io/File/listFiles(java.io.FilenameFilter)|",
      "|java+constructor:///com/metamx/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///com/metamx/common/ISE/ISE(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/server/coordination/DataSegmentAnnouncer/announceSegment(io.druid.timeline.DataSegment)|",
      "|java+method:///io/druid/segment/realtime/appenderator/SegmentIdentifier/getInterval()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/druid/timeline/VersionedIntervalTimeline/add(org.joda.time.Interval,java.lang.Object,io.druid.timeline.partition.PartitionChunk)|",
      "|java+method:///com/google/common/base/Preconditions/checkState(boolean,java.lang.Object)|",
      "|java+method:///java/io/File/getName()|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)|",
      "|java+method:///io/druid/segment/realtime/appenderator/AppenderatorConfig/isReportParseExceptions()|",
      "|java+method:///io/druid/segment/IndexIO/loadIndex(java.io.File)|",
      "|java+method:///io/druid/timeline/partition/ShardSpec/createChunk(java.lang.Object)|",
      "|java+method:///com/google/common/collect/Sets/newHashSet(java.lang.Iterable)|",
      "|java+method:///com/metamx/emitter/service/AlertBuilder/addData(java.lang.String,java.lang.Object)|",
      "|java+method:///io/druid/segment/realtime/appenderator/SegmentIdentifier/getIdentifierAsString()|",
      "|java+method:///java/util/Arrays/sort(java.lang.Object%5B%5D,java.util.Comparator)|",
      "|java+constructor:///io/druid/segment/realtime/appenderator/AppenderatorImpl$6/AppenderatorImpl$6(io.druid.segment.realtime.appenderator.AppenderatorImpl)|",
      "|java+constructor:///io/druid/segment/realtime/appenderator/AppenderatorImpl$7/AppenderatorImpl$7(io.druid.segment.realtime.appenderator.AppenderatorImpl)|",
      "|java+constructor:///io/druid/segment/realtime/appenderator/AppenderatorImpl$5/AppenderatorImpl$5(io.druid.segment.realtime.appenderator.AppenderatorImpl)|",
      "|java+method:///com/google/common/base/Joiner/on(java.lang.String)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/makeAlert(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///io/druid/segment/realtime/appenderator/AppenderatorConfig/getBasePersistDirectory()|",
      "|java+method:///io/druid/segment/realtime/appenderator/Committed/getMetadata()|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///io/druid/segment/QueryableIndexSegment/QueryableIndexSegment(java.lang.String,io.druid.segment.QueryableIndex)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///io/druid/segment/realtime/plumber/Sink/getSegment()|",
      "|java+method:///io/druid/segment/realtime/appenderator/SegmentIdentifier/getVersion()|",
      "|java+method:///com/metamx/emitter/service/AlertBuilder/emit()|",
      "|java+method:///io/druid/segment/realtime/appenderator/SegmentIdentifier/getShardSpec()|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+method:///io/druid/segment/realtime/plumber/Sink/getVersion()|",
      "|java+method:///io/druid/segment/realtime/appenderator/AppenderatorImpl/computeCommitFile()|",
      "|java+method:///com/google/common/base/Joiner/join(java.lang.Iterable)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///io/druid/segment/realtime/appenderator/AppenderatorConfig/getMaxRowsInMemory()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///io/druid/segment/realtime/appenderator/Committed/nil()|",
      "|java+method:///com/google/common/collect/Sets/difference(java.util.Set,java.util.Set)|",
      "|java+method:///java/io/File/listFiles()|",
      "|java+constructor:///io/druid/segment/realtime/plumber/Sink/Sink(org.joda.time.Interval,io.druid.segment.indexing.DataSchema,io.druid.timeline.partition.ShardSpec,java.lang.String,int,boolean,java.util.List)|",
      "|java+method:///io/druid/segment/realtime/plumber/Sink/getInterval()|",
      "|java+constructor:///io/druid/segment/realtime/FireHydrant/FireHydrant(io.druid.segment.Segment,int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/io/FileUtils/deleteDirectory(java.io.File)|",
      "|java+method:///io/druid/segment/realtime/appenderator/Committed/getHydrants()|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///com/google/common/collect/ImmutableMap/keySet()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(java.io.File,java.lang.Class)|",
      "|java+method:///java/io/File/isFile()|",
      "|java+method:///io/druid/segment/realtime/appenderator/Committed/getCommittedHydrants(java.lang.String)|",
      "|java+method:///io/druid/segment/indexing/DataSchema/getDataSource()|",
      "|java+method:///java/io/File/listFiles(java.io.FilenameFilter)|",
      "|java+method:///io/druid/server/coordination/DataSegmentAnnouncer/announceSegment(io.druid.timeline.DataSegment)|",
      "|java+method:///io/druid/segment/realtime/appenderator/SegmentIdentifier/getInterval()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/druid/timeline/VersionedIntervalTimeline/add(org.joda.time.Interval,java.lang.Object,io.druid.timeline.partition.PartitionChunk)|",
      "|java+method:///com/google/common/base/Preconditions/checkState(boolean,java.lang.Object)|",
      "|java+method:///java/io/File/getName()|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)|",
      "|java+method:///io/druid/segment/realtime/appenderator/AppenderatorConfig/isReportParseExceptions()|",
      "|java+method:///io/druid/segment/IndexIO/loadIndex(java.io.File)|",
      "|java+method:///io/druid/timeline/partition/ShardSpec/createChunk(java.lang.Object)|",
      "|java+method:///com/google/common/collect/Sets/newHashSet(java.lang.Iterable)|",
      "|java+method:///com/metamx/emitter/service/AlertBuilder/addData(java.lang.String,java.lang.Object)|",
      "|java+method:///io/druid/segment/realtime/appenderator/SegmentIdentifier/getIdentifierAsString()|",
      "|java+method:///java/util/Arrays/sort(java.lang.Object%5B%5D,java.util.Comparator)|",
      "|java+constructor:///io/druid/segment/realtime/appenderator/AppenderatorImpl$6/AppenderatorImpl$6(io.druid.segment.realtime.appenderator.AppenderatorImpl)|",
      "|java+constructor:///io/druid/segment/realtime/appenderator/AppenderatorImpl$7/AppenderatorImpl$7(io.druid.segment.realtime.appenderator.AppenderatorImpl)|",
      "|java+constructor:///io/druid/segment/realtime/appenderator/AppenderatorImpl$5/AppenderatorImpl$5(io.druid.segment.realtime.appenderator.AppenderatorImpl)|",
      "|java+method:///com/google/common/base/Joiner/on(java.lang.String)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/makeAlert(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///io/druid/segment/realtime/appenderator/AppenderatorConfig/getBasePersistDirectory()|",
      "|java+method:///io/druid/segment/realtime/appenderator/Committed/getMetadata()|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///io/druid/segment/QueryableIndexSegment/QueryableIndexSegment(java.lang.String,io.druid.segment.QueryableIndex)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///io/druid/segment/realtime/plumber/Sink/getSegment()|",
      "|java+method:///io/druid/segment/realtime/appenderator/SegmentIdentifier/getVersion()|",
      "|java+method:///com/metamx/emitter/service/AlertBuilder/emit()|",
      "|java+method:///io/druid/segment/realtime/appenderator/SegmentIdentifier/getShardSpec()|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+method:///io/druid/segment/realtime/plumber/Sink/getVersion()|",
      "|java+method:///io/druid/segment/realtime/appenderator/AppenderatorImpl/computeCommitFile()|",
      "|java+method:///com/google/common/base/Joiner/join(java.lang.Iterable)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///io/druid/segment/realtime/appenderator/AppenderatorConfig/getMaxRowsInMemory()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///io/druid/segment/realtime/appenderator/Committed/nil()|",
      "|java+method:///com/google/common/collect/Sets/difference(java.util.Set,java.util.Set)|",
      "|java+method:///java/io/File/listFiles()|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/segment/realtime/plumber/Sink/Sink(org.joda.time.Interval,io.druid.segment.indexing.DataSchema,io.druid.timeline.partition.ShardSpec,java.lang.String,int,boolean,java.util.List)|",
      "|java+method:///io/druid/segment/realtime/plumber/Sink/getInterval()|",
      "|java+constructor:///io/druid/segment/realtime/FireHydrant/FireHydrant(io.druid.segment.Segment,int)|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/server/coordination/ServerManager/getQueryRunnerForIntervals(io.druid.query.Query,java.lang.Iterable)|",
    "called": "|java+constructor:///io/druid/query/FinalizeResultsQueryRunner/FinalizeResultsQueryRunner(io.druid.query.QueryRunner,io.druid.query.QueryToolChest)|",
    "v1Body": [
      "|java+constructor:///io/druid/query/FinalizeResultsQueryRunner/FinalizeResultsQueryRunner(io.druid.query.QueryRunner,io.druid.query.QueryToolChest)|",
      "|java+method:///io/druid/query/QueryToolChest/mergeResults(io.druid.query.QueryRunner)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///io/druid/query/QueryRunnerFactory/getToolchest()|",
      "|java+method:///io/druid/query/Query/getDataSource()|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)|",
      "|java+constructor:///com/metamx/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/query/NoopQueryRunner/NoopQueryRunner()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/metamx/common/guava/FunctionalIterable/create(java.lang.Iterable)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicLong/AtomicLong(long)|",
      "|java+method:///io/druid/server/coordination/ServerManager/getDataSourceName(io.druid.query.DataSource)|",
      "|java+method:///com/metamx/common/guava/FunctionalIterable/transformCat(com.google.common.base.Function)|",
      "|java+method:///io/druid/query/CPUTimeMetricQueryRunner/safeBuild(io.druid.query.QueryRunner,com.google.common.base.Function,com.metamx.emitter.service.ServiceEmitter,java.util.concurrent.atomic.AtomicLong,boolean)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/druid/query/QueryRunnerFactory/mergeRunners(java.util.concurrent.ExecutorService,java.lang.Iterable)|",
      "|java+constructor:///io/druid/server/coordination/ServerManager$1/ServerManager$1(io.druid.server.coordination.ServerManager,io.druid.query.QueryRunnerFactory,io.druid.query.QueryToolChest,com.google.common.base.Function,java.util.concurrent.atomic.AtomicLong)|",
      "|java+constructor:///io/druid/server/coordination/ServerManager$2/ServerManager$2(io.druid.server.coordination.ServerManager,io.druid.timeline.VersionedIntervalTimeline)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/druid/query/QueryRunnerFactoryConglomerate/findFactory(io.druid.query.Query)|",
      "|java+method:///io/druid/server/coordination/ServerManager/getBuilderFn(io.druid.query.QueryToolChest)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/query/NoopQueryRunner/NoopQueryRunner()|",
      "|java+constructor:///io/druid/query/FinalizeResultsQueryRunner/FinalizeResultsQueryRunner(io.druid.query.QueryRunner,io.druid.query.QueryToolChest)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///io/druid/query/CPUTimeMetricQueryRunner/safeBuild(io.druid.query.QueryRunner,com.google.common.base.Function,com.metamx.emitter.service.ServiceEmitter,java.util.concurrent.atomic.AtomicLong,boolean)|",
      "|java+method:///io/druid/query/Query/getDataSource()|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicLong/AtomicLong(long)|",
      "|java+method:///io/druid/server/coordination/ServerManager/getDataSourceName(io.druid.query.DataSource)|",
      "|java+method:///io/druid/java/util/common/guava/FunctionalIterable/transformCat(com.google.common.base.Function)|",
      "|java+method:///io/druid/query/QueryToolChest/mergeResults(io.druid.query.QueryRunner)|",
      "|java+method:///io/druid/java/util/common/guava/FunctionalIterable/create(java.lang.Iterable)|",
      "|java+method:///io/druid/query/QueryRunnerFactory/getToolchest()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/druid/query/QueryRunnerFactory/mergeRunners(java.util.concurrent.ExecutorService,java.lang.Iterable)|",
      "|java+constructor:///io/druid/server/coordination/ServerManager$1/ServerManager$1(io.druid.server.coordination.ServerManager,io.druid.query.QueryRunnerFactory,io.druid.query.QueryToolChest,com.google.common.base.Function,java.util.concurrent.atomic.AtomicLong)|",
      "|java+constructor:///io/druid/server/coordination/ServerManager$2/ServerManager$2(io.druid.server.coordination.ServerManager,io.druid.timeline.VersionedIntervalTimeline)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/druid/query/QueryRunnerFactoryConglomerate/findFactory(io.druid.query.Query)|",
      "|java+method:///io/druid/server/coordination/ServerManager/getBuilderFn(io.druid.query.QueryToolChest)|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/client/CachingClusteredClient$3/addSequencesFromServer(java.util.ArrayList)|",
    "called": "|java+constructor:///io/druid/query/spec/MultipleSpecificSegmentSpec/MultipleSpecificSegmentSpec(java.util.List)|",
    "v1Body": [
      "|java+constructor:///io/druid/client/CachingClusteredClient$3$2/CachingClusteredClient$3$2(io.druid.client.CachingClusteredClient$3)|",
      "|java+method:///io/druid/client/DruidServer/isAssignable()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/Map/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+constructor:///io/druid/query/spec/MultipleSpecificSegmentSpec/MultipleSpecificSegmentSpec(java.util.List)|",
      "|java+constructor:///io/druid/client/CachingClusteredClient$3$3/CachingClusteredClient$3$3(io.druid.client.CachingClusteredClient$3,io.druid.query.Query)|",
      "|java+method:///io/druid/query/Query/withOverriddenContext(java.util.Map)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/metamx/common/guava/Sequences/map(com.metamx.common.guava.Sequence,com.google.common.base.Function)|",
      "|java+method:///io/druid/client/CachingClusteredClient/access$300()|",
      "|java+method:///com/google/common/collect/ImmutableMap$Builder/build()|",
      "|java+method:///java/util/ArrayList/ensureCapacity(int)|",
      "|java+method:///io/druid/query/Query/withQuerySegmentSpec(io.druid.query.spec.QuerySegmentSpec)|",
      "|java+method:///java/util/ArrayList/add(java.lang.Object)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/error(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/ArrayList/size()|",
      "|java+method:///io/druid/query/QueryRunner/run(io.druid.query.Query,java.util.Map)|",
      "|java+constructor:///com/metamx/common/guava/MergeSequence/MergeSequence(com.google.common.collect.Ordering,com.metamx.common.guava.Sequence)|",
      "|java+method:///io/druid/client/CachingClusteredClient/access$200(io.druid.client.CachingClusteredClient)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///io/druid/client/TimelineServerView/getQueryRunner(io.druid.client.DruidServer)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///io/druid/query/Query/getResultOrdering()|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/client/CachingClusteredClient$3$2/CachingClusteredClient$3$2(io.druid.client.CachingClusteredClient$3)|",
      "|java+method:///io/druid/client/DruidServer/isAssignable()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///io/druid/java/util/common/guava/MergeSequence/MergeSequence(com.google.common.collect.Ordering,io.druid.java.util.common.guava.Sequence)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///io/druid/client/CachingClusteredClient/access$200(io.druid.client.CachingClusteredClient)|",
      "|java+constructor:///io/druid/query/spec/MultipleSpecificSegmentSpec/MultipleSpecificSegmentSpec(java.util.List)|",
      "|java+constructor:///io/druid/client/CachingClusteredClient$3$3/CachingClusteredClient$3$3(io.druid.client.CachingClusteredClient$3,io.druid.query.Query)|",
      "|java+method:///io/druid/query/Query/withOverriddenContext(java.util.Map)|",
      "|java+method:///io/druid/client/CachingClusteredClient/access$300()|",
      "|java+method:///com/google/common/collect/ImmutableMap$Builder/build()|",
      "|java+method:///java/util/ArrayList/ensureCapacity(int)|",
      "|java+method:///io/druid/query/Query/withQuerySegmentSpec(io.druid.query.spec.QuerySegmentSpec)|",
      "|java+method:///java/util/Map/size()|",
      "|java+method:///io/druid/java/util/common/guava/Sequences/map(io.druid.java.util.common.guava.Sequence,com.google.common.base.Function)|",
      "|java+method:///java/util/ArrayList/add(java.lang.Object)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/error(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/ArrayList/size()|",
      "|java+method:///io/druid/query/QueryRunner/run(io.druid.query.Query,java.util.Map)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///io/druid/client/TimelineServerView/getQueryRunner(io.druid.client.DruidServer)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///io/druid/query/Query/getResultOrdering()|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/server/router/CoordinatorRuleManager/poll()|",
    "called": "|java+constructor:///com/metamx/http/client/Request/Request(org.jboss.netty.handler.codec.http.HttpMethod,java.net.URL)|",
    "v1Body": [
      "|java+constructor:///io/druid/server/router/CoordinatorRuleManager$2/CoordinatorRuleManager$2(io.druid.server.router.CoordinatorRuleManager)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(java.lang.String,com.fasterxml.jackson.core.type.TypeReference)|",
      "|java+constructor:///com/metamx/http/client/Request/Request(org.jboss.netty.handler.codec.http.HttpMethod,java.net.URL)|",
      "|java+method:///com/metamx/http/client/response/FullResponseHolder/getContent()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/concurrent/ConcurrentHashMap$KeySetView/size()|",
      "|java+method:///com/metamx/http/client/response/FullResponseHolder/getResponse()|",
      "|java+method:///org/jboss/netty/handler/codec/http/HttpResponseStatus/equals(java.lang.Object)|",
      "|java+method:///org/jboss/netty/handler/codec/http/HttpHeaders/get(java.lang.String)|",
      "|java+method:///com/google/common/util/concurrent/ListenableFuture/get()|",
      "|java+constructor:///java/net/URL/URL(java.lang.String)|",
      "|java+method:///com/metamx/common/logger/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/concurrent/ConcurrentHashMap/keySet()|",
      "|java+method:///com/metamx/http/client/response/FullResponseHolder/getStatus()|",
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap(java.util.Map)|",
      "|java+method:///java/util/concurrent/atomic/AtomicReference/set(java.lang.Object)|",
      "|java+method:///org/jboss/netty/handler/codec/http/HttpResponse/headers()|",
      "|java+method:///io/druid/server/router/CoordinatorRuleManager/getRuleURL()|",
      "|java+method:///com/metamx/common/logger/Logger/error(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/metamx/http/client/HttpClient/go(com.metamx.http.client.Request,com.metamx.http.client.response.HttpResponseHandler)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/server/router/CoordinatorRuleManager$2/CoordinatorRuleManager$2(io.druid.server.router.CoordinatorRuleManager)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(java.lang.String,com.fasterxml.jackson.core.type.TypeReference)|",
      "|java+constructor:///com/metamx/http/client/Request/Request(org.jboss.netty.handler.codec.http.HttpMethod,java.net.URL)|",
      "|java+method:///java/util/concurrent/ConcurrentHashMap/size()|",
      "|java+method:///com/metamx/http/client/response/FullResponseHolder/getStatus()|",
      "|java+method:///com/metamx/http/client/response/FullResponseHolder/getContent()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/metamx/http/client/HttpClient/go(com.metamx.http.client.Request,com.metamx.http.client.response.HttpResponseHandler)|",
      "|java+method:///com/metamx/http/client/response/FullResponseHolder/getResponse()|",
      "|java+method:///org/jboss/netty/handler/codec/http/HttpResponseStatus/equals(java.lang.Object)|",
      "|java+method:///org/jboss/netty/handler/codec/http/HttpHeaders/get(java.lang.String)|",
      "|java+method:///com/google/common/util/concurrent/ListenableFuture/get()|",
      "|java+constructor:///java/net/URL/URL(java.lang.String)|",
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap(java.util.Map)|",
      "|java+method:///java/util/concurrent/atomic/AtomicReference/set(java.lang.Object)|",
      "|java+method:///io/druid/java/util/common/logger/Logger/error(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/java/util/common/logger/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/jboss/netty/handler/codec/http/HttpResponse/headers()|",
      "|java+method:///io/druid/server/router/CoordinatorRuleManager/getRuleURL()|"
    ],
    "affectedLib": "com.metamx:http-client:1.0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/server/lookup/cache/LookupCoordinatorManager/deleteOnHost(java.net.URL)|",
    "called": "|java+method:///com/metamx/http/client/Request/addHeader(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///com/metamx/http/client/Request/addHeader(java.lang.String,java.lang.String)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///com/metamx/common/StreamUtils/copyAndClose(java.io.InputStream,java.io.OutputStream)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/server/lookup/cache/LookupCoordinatorManager/httpStatusIsSuccess(int)|",
      "|java+method:///com/metamx/http/client/HttpClient/go(com.metamx.http.client.Request,com.metamx.http.client.response.HttpResponseHandler,org.joda.time.Duration)|",
      "|java+method:///java/io/InputStream/close()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicReference/AtomicReference(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/io/ByteArrayOutputStream/toByteArray()|",
      "|java+method:///java/util/concurrent/atomic/AtomicInteger/get()|",
      "|java+constructor:///com/metamx/http/client/Request/Request(org.jboss.netty.handler.codec.http.HttpMethod,java.net.URL)|",
      "|java+method:///com/google/common/util/concurrent/ListenableFuture/get()|",
      "|java+method:///io/druid/server/lookup/cache/LookupCoordinatorManager/makeResponseHandler(java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicReference)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///com/metamx/common/StringUtils/fromUtf8(byte%5B%5D)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/concurrent/atomic/AtomicReference/get()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicInteger/AtomicInteger(int)|",
      "|java+method:///io/druid/server/lookup/cache/LookupCoordinatorManagerConfig/getHostDeleteTimeout()|",
      "|java+constructor:///java/io/ByteArrayOutputStream/ByteArrayOutputStream()|",
      "|java+method:///com/metamx/emitter/EmittingLogger/isDebugEnabled()|",
      "|java+method:///io/druid/server/lookup/cache/LookupCoordinatorManager/httpStatusIsNotFound(int)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/warn(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///com/metamx/http/client/Request/addHeader(java.lang.String,java.lang.String)|",
      "|java+method:///io/druid/java/util/common/StreamUtils/copyAndClose(java.io.InputStream,java.io.OutputStream)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/metamx/http/client/HttpClient/go(com.metamx.http.client.Request,com.metamx.http.client.response.HttpResponseHandler,org.joda.time.Duration)|",
      "|java+method:///java/io/InputStream/close()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicReference/AtomicReference(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/io/ByteArrayOutputStream/toByteArray()|",
      "|java+method:///io/druid/server/lookup/cache/LookupCoordinatorManager/httpStatusIsSuccess(int)|",
      "|java+method:///io/druid/java/util/common/StringUtils/fromUtf8(byte%5B%5D)|",
      "|java+method:///java/util/concurrent/atomic/AtomicInteger/get()|",
      "|java+constructor:///com/metamx/http/client/Request/Request(org.jboss.netty.handler.codec.http.HttpMethod,java.net.URL)|",
      "|java+method:///com/google/common/util/concurrent/ListenableFuture/get()|",
      "|java+method:///io/druid/server/lookup/cache/LookupCoordinatorManager/makeResponseHandler(java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicReference)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///java/util/concurrent/atomic/AtomicReference/get()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicInteger/AtomicInteger(int)|",
      "|java+method:///io/druid/server/lookup/cache/LookupCoordinatorManagerConfig/getHostDeleteTimeout()|",
      "|java+constructor:///java/io/ByteArrayOutputStream/ByteArrayOutputStream()|",
      "|java+method:///com/metamx/emitter/EmittingLogger/isDebugEnabled()|",
      "|java+method:///io/druid/server/lookup/cache/LookupCoordinatorManager/httpStatusIsNotFound(int)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/warn(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "com.metamx:http-client:1.0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/client/DirectDruidClient/run(io.druid.query.Query,java.util.Map)|",
    "called": "|java+constructor:///com/metamx/http/client/Request/Request(org.jboss.netty.handler.codec.http.HttpMethod,java.net.URL)|",
    "v1Body": [
      "|java+method:///io/druid/query/Query/getId()|",
      "|java+constructor:///com/metamx/common/guava/BaseSequence/BaseSequence(com.metamx.common.guava.BaseSequence$IteratorMaker)|",
      "|java+constructor:///com/metamx/http/client/Request/Request(org.jboss.netty.handler.codec.http.HttpMethod,java.net.URL)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/metamx/common/logger/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///com/metamx/http/client/Request/setContent(byte%5B%5D)|",
      "|java+constructor:///io/druid/client/DirectDruidClient$1/DirectDruidClient$1(io.druid.client.DirectDruidClient,java.lang.String,io.druid.query.Query,com.metamx.emitter.service.ServiceMetricEvent$Builder,long,java.util.Map)|",
      "|java+method:///com/metamx/http/client/HttpClient/go(com.metamx.http.client.Request,com.metamx.http.client.response.HttpResponseHandler)|",
      "|java+method:///io/druid/query/QueryWatcher/registerQuery(io.druid.query.Query,com.google.common.util.concurrent.ListenableFuture)|",
      "|java+method:///com/metamx/http/client/Request/setHeader(java.lang.String,java.lang.String)|",
      "|java+method:///io/druid/query/aggregation/MetricManipulatorFns/deserializing()|",
      "|java+constructor:///io/druid/client/DirectDruidClient$2/DirectDruidClient$2(io.druid.client.DirectDruidClient,com.google.common.util.concurrent.ListenableFuture,java.lang.String,io.druid.query.Query)|",
      "|java+method:///java/util/concurrent/atomic/AtomicInteger/getAndIncrement()|",
      "|java+method:///io/druid/query/QueryToolChest/makePreComputeManipulatorFn(io.druid.query.Query,io.druid.query.aggregation.MetricManipulationFn)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/metamx/common/Pair/of(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/metamx/emitter/service/ServiceMetricEvent$Builder/setDimension(java.lang.String,java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/getTypeFactory()|",
      "|java+method:///com/metamx/common/guava/Sequences/map(com.metamx.common.guava.Sequence,com.google.common.base.Function)|",
      "|java+method:///io/druid/query/QueryToolChest/getResultTypeReference()|",
      "|java+constructor:///io/druid/client/DirectDruidClient$3/DirectDruidClient$3(io.druid.client.DirectDruidClient,com.fasterxml.jackson.databind.JavaType,com.google.common.util.concurrent.ListenableFuture,java.lang.String)|",
      "|java+method:///io/druid/query/QueryToolChestWarehouse/getToolChest(io.druid.query.Query)|",
      "|java+method:///com/fasterxml/jackson/databind/type/TypeFactory/constructParametricType(java.lang.Class,com.fasterxml.jackson.databind.JavaType%5B%5D)|",
      "|java+method:///com/fasterxml/jackson/databind/type/TypeFactory/constructType(com.fasterxml.jackson.core.type.TypeReference)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///java/net/URL/URL(java.lang.String)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///com/google/common/util/concurrent/Futures/addCallback(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureCallback)|",
      "|java+method:///io/druid/query/QueryToolChest/makeMetricBuilder(io.druid.query.Query)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsBytes(java.lang.Object)|",
      "|java+method:///io/druid/query/BaseQuery/getContextBySegment(io.druid.query.Query,boolean)|"
    ],
    "v2Body": [
      "|java+method:///com/metamx/emitter/service/ServiceMetricEvent$Builder/setDimension(java.lang.String,java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/getTypeFactory()|",
      "|java+method:///io/druid/query/Query/getId()|",
      "|java+constructor:///com/metamx/http/client/Request/Request(org.jboss.netty.handler.codec.http.HttpMethod,java.net.URL)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/java/util/common/guava/Sequences/map(io.druid.java.util.common.guava.Sequence,com.google.common.base.Function)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+constructor:///io/druid/java/util/common/guava/BaseSequence/BaseSequence(io.druid.java.util.common.guava.BaseSequence$IteratorMaker)|",
      "|java+method:///com/metamx/http/client/Request/setContent(byte%5B%5D)|",
      "|java+constructor:///io/druid/client/DirectDruidClient$1/DirectDruidClient$1(io.druid.client.DirectDruidClient,java.lang.String,io.druid.query.Query,com.metamx.emitter.service.ServiceMetricEvent$Builder,long,java.util.Map)|",
      "|java+method:///com/metamx/http/client/HttpClient/go(com.metamx.http.client.Request,com.metamx.http.client.response.HttpResponseHandler)|",
      "|java+method:///io/druid/query/QueryWatcher/registerQuery(io.druid.query.Query,com.google.common.util.concurrent.ListenableFuture)|",
      "|java+method:///com/metamx/http/client/Request/setHeader(java.lang.String,java.lang.String)|",
      "|java+method:///io/druid/query/aggregation/MetricManipulatorFns/deserializing()|",
      "|java+constructor:///io/druid/client/DirectDruidClient$2/DirectDruidClient$2(io.druid.client.DirectDruidClient,com.google.common.util.concurrent.ListenableFuture,java.lang.String,io.druid.query.Query)|",
      "|java+method:///io/druid/java/util/common/Pair/of(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/concurrent/atomic/AtomicInteger/getAndIncrement()|",
      "|java+method:///io/druid/query/QueryToolChest/makePreComputeManipulatorFn(io.druid.query.Query,io.druid.query.aggregation.MetricManipulationFn)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/druid/query/QueryToolChest/getResultTypeReference()|",
      "|java+method:///io/druid/java/util/common/logger/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/client/DirectDruidClient$3/DirectDruidClient$3(io.druid.client.DirectDruidClient,com.fasterxml.jackson.databind.JavaType,com.google.common.util.concurrent.ListenableFuture,java.lang.String)|",
      "|java+method:///io/druid/query/QueryToolChestWarehouse/getToolChest(io.druid.query.Query)|",
      "|java+method:///com/fasterxml/jackson/databind/type/TypeFactory/constructParametricType(java.lang.Class,com.fasterxml.jackson.databind.JavaType%5B%5D)|",
      "|java+method:///com/fasterxml/jackson/databind/type/TypeFactory/constructType(com.fasterxml.jackson.core.type.TypeReference)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///java/net/URL/URL(java.lang.String)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///com/google/common/util/concurrent/Futures/addCallback(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureCallback)|",
      "|java+method:///io/druid/query/QueryToolChest/makeMetricBuilder(io.druid.query.Query)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsBytes(java.lang.Object)|",
      "|java+method:///io/druid/query/BaseQuery/getContextBySegment(io.druid.query.Query,boolean)|"
    ],
    "affectedLib": "com.metamx:http-client:1.0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/guice/http/HttpClientModule$HttpClientProvider/get()|",
    "called": "|java+method:///com/metamx/http/client/HttpClientConfig$Builder/build()|",
    "v1Body": [
      "|java+method:///io/druid/guice/http/HttpClientModule$HttpClientProvider/getConfigProvider()|",
      "|java+method:///com/google/inject/Binding/getProvider()|",
      "|java+method:///io/druid/guice/http/HttpClientModule$HttpClientProvider/getLifecycleProvider()|",
      "|java+method:///io/druid/guice/http/DruidHttpClientConfig/getReadTimeout()|",
      "|java+method:///com/google/inject/Provider/get()|",
      "|java+method:///io/druid/guice/http/HttpClientModule$HttpClientProvider/get()|",
      "|java+method:///com/google/common/base/Supplier/get()|",
      "|java+method:///com/metamx/http/client/HttpClientConfig$Builder/withNumConnections(int)|",
      "|java+method:///com/metamx/http/client/HttpClientConfig$Builder/build()|",
      "|java+method:///com/metamx/http/client/HttpClientConfig$Builder/withReadTimeout(org.joda.time.Duration)|",
      "|java+method:///com/metamx/http/client/HttpClientInit/createClient(com.metamx.http.client.HttpClientConfig,com.metamx.common.lifecycle.Lifecycle)|",
      "|java+method:///io/druid/guice/http/DruidHttpClientConfig/getNumConnections()|",
      "|java+method:///com/metamx/http/client/HttpClientConfig$Builder/withSslContext(javax.net.ssl.SSLContext)|",
      "|java+method:///com/metamx/http/client/HttpClientConfig/builder()|",
      "|java+method:///io/druid/guice/http/HttpClientModule$HttpClientProvider/getSslContextBinding()|"
    ],
    "v2Body": [
      "|java+method:///io/druid/guice/http/HttpClientModule$HttpClientProvider/getConfigProvider()|",
      "|java+method:///com/google/inject/Binding/getProvider()|",
      "|java+method:///io/druid/guice/http/HttpClientModule$HttpClientProvider/getLifecycleProvider()|",
      "|java+method:///com/metamx/http/client/HttpClientConfig$Builder/withWorkerCount(int)|",
      "|java+method:///java/lang/String/toUpperCase()|",
      "|java+method:///com/google/inject/Provider/get()|",
      "|java+method:///io/druid/guice/http/HttpClientModule$HttpClientProvider/get()|",
      "|java+method:///com/google/common/base/Supplier/get()|",
      "|java+method:///com/metamx/http/client/HttpClientConfig$Builder/withNumConnections(int)|",
      "|java+method:///com/metamx/http/client/HttpClientConfig$Builder/withCompressionCodec(com.metamx.http.client.HttpClientConfig$CompressionCodec)|",
      "|java+method:///com/metamx/http/client/HttpClientConfig$Builder/build()|",
      "|java+method:///com/metamx/http/client/HttpClientConfig$Builder/withReadTimeout(org.joda.time.Duration)|",
      "|java+method:///com/metamx/http/client/HttpClientInit/createClient(com.metamx.http.client.HttpClientConfig,com.metamx.common.lifecycle.Lifecycle)|",
      "|java+method:///com/metamx/http/client/HttpClientConfig$CompressionCodec/valueOf(java.lang.String)|",
      "|java+method:///io/druid/guice/http/DruidHttpClientConfig/getReadTimeout()|",
      "|java+method:///io/druid/guice/http/LifecycleUtils/asMmxLifecycle(io.druid.java.util.common.lifecycle.Lifecycle)|",
      "|java+method:///io/druid/guice/http/DruidHttpClientConfig/getNumMaxThreads()|",
      "|java+method:///io/druid/guice/http/DruidHttpClientConfig/getNumConnections()|",
      "|java+method:///com/metamx/http/client/HttpClientConfig$Builder/withSslContext(javax.net.ssl.SSLContext)|",
      "|java+method:///com/metamx/http/client/HttpClientConfig/builder()|",
      "|java+method:///io/druid/guice/http/DruidHttpClientConfig/getCompressionCodec()|",
      "|java+method:///io/druid/guice/http/HttpClientModule$HttpClientProvider/getSslContextBinding()|"
    ],
    "affectedLib": "com.metamx:http-client:1.0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/client/DirectDruidClient$1/done(com.metamx.http.client.response.ClientResponse)|",
    "called": "|java+method:///com/metamx/http/client/response/ClientResponse/finished(java.lang.Object)|",
    "v1Body": [
      "|java+method:///com/metamx/http/client/response/ClientResponse/getObj()|",
      "|java+method:///com/google/common/io/ByteSource/empty()|",
      "|java+method:///io/druid/client/DirectDruidClient/access$100(io.druid.client.DirectDruidClient)|",
      "|java+method:///com/metamx/common/logger/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/get()|",
      "|java+method:///com/metamx/common/logger/Logger/error(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///com/google/common/io/ByteSource/openStream()|",
      "|java+method:///io/druid/client/DirectDruidClient/access$000()|",
      "|java+method:///io/druid/query/Query/getId()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/concurrent/BlockingQueue/put(java.lang.Object)|",
      "|java+method:///com/metamx/emitter/service/ServiceEmitter/emit(com.metamx.emitter.service.ServiceEventBuilder)|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///java/lang/Thread/interrupt()|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///com/metamx/emitter/service/ServiceMetricEvent$Builder/build(java.lang.String,java.lang.Number)|",
      "|java+method:///com/metamx/http/client/response/ClientResponse/finished(java.lang.Object)|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/set(boolean)|"
    ],
    "v2Body": [
      "|java+method:///com/metamx/http/client/response/ClientResponse/getObj()|",
      "|java+method:///io/druid/java/util/common/logger/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/google/common/io/ByteSource/empty()|",
      "|java+method:///io/druid/client/DirectDruidClient/access$100(io.druid.client.DirectDruidClient)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///com/google/common/io/ByteSource/openStream()|",
      "|java+method:///io/druid/client/DirectDruidClient/access$000()|",
      "|java+method:///io/druid/query/Query/getId()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/concurrent/BlockingQueue/put(java.lang.Object)|",
      "|java+method:///com/metamx/emitter/service/ServiceEmitter/emit(com.metamx.emitter.service.ServiceEventBuilder)|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///java/lang/Thread/interrupt()|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///com/metamx/emitter/service/ServiceMetricEvent$Builder/build(java.lang.String,java.lang.Number)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/get()|",
      "|java+method:///io/druid/java/util/common/logger/Logger/error(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/metamx/http/client/response/ClientResponse/finished(java.lang.Object)|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/set(boolean)|"
    ],
    "affectedLib": "com.metamx:http-client:1.0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/client/DirectDruidClient$2/onFailure(java.lang.Throwable)|",
    "called": "|java+constructor:///com/metamx/http/client/Request/Request(org.jboss.netty.handler.codec.http.HttpMethod,java.net.URL)|",
    "v1Body": [
      "|java+method:///org/jboss/netty/handler/codec/http/HttpResponseStatus/getCode()|",
      "|java+method:///java/util/concurrent/atomic/AtomicInteger/getAndDecrement()|",
      "|java+method:///io/druid/client/DirectDruidClient/access$700(io.druid.client.DirectDruidClient)|",
      "|java+method:///io/druid/client/DirectDruidClient/access$600(io.druid.client.DirectDruidClient)|",
      "|java+method:///io/druid/client/DirectDruidClient/access$500(io.druid.client.DirectDruidClient)|",
      "|java+constructor:///com/metamx/http/client/Request/Request(org.jboss.netty.handler.codec.http.HttpMethod,java.net.URL)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///com/metamx/http/client/response/StatusResponseHolder/getStatus()|",
      "|java+method:///org/jboss/netty/handler/codec/http/HttpResponseStatus/getReasonPhrase()|",
      "|java+method:///com/metamx/http/client/Request/setContent(byte%5B%5D)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/google/common/util/concurrent/ListenableFuture/isCancelled()|",
      "|java+method:///com/metamx/http/client/Request/setHeader(java.lang.String,java.lang.String)|",
      "|java+method:///com/google/common/util/concurrent/ListenableFuture/get()|",
      "|java+method:///io/druid/client/DirectDruidClient/access$200(io.druid.client.DirectDruidClient)|",
      "|java+constructor:///java/net/URL/URL(java.lang.String)|",
      "|java+constructor:///com/metamx/common/RE/RE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/metamx/http/client/HttpClient/go(com.metamx.http.client.Request,com.metamx.http.client.response.HttpResponseHandler)|",
      "|java+constructor:///com/metamx/http/client/response/StatusResponseHandler/StatusResponseHandler(java.nio.charset.Charset)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsBytes(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/jboss/netty/handler/codec/http/HttpResponseStatus/getCode()|",
      "|java+method:///java/util/concurrent/atomic/AtomicInteger/getAndDecrement()|",
      "|java+method:///io/druid/client/DirectDruidClient/access$700(io.druid.client.DirectDruidClient)|",
      "|java+method:///io/druid/client/DirectDruidClient/access$600(io.druid.client.DirectDruidClient)|",
      "|java+method:///io/druid/client/DirectDruidClient/access$500(io.druid.client.DirectDruidClient)|",
      "|java+constructor:///com/metamx/http/client/Request/Request(org.jboss.netty.handler.codec.http.HttpMethod,java.net.URL)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///com/metamx/http/client/response/StatusResponseHolder/getStatus()|",
      "|java+method:///com/metamx/http/client/Request/setContent(byte%5B%5D)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/metamx/http/client/HttpClient/go(com.metamx.http.client.Request,com.metamx.http.client.response.HttpResponseHandler)|",
      "|java+method:///com/google/common/util/concurrent/ListenableFuture/isCancelled()|",
      "|java+method:///com/metamx/http/client/Request/setHeader(java.lang.String,java.lang.String)|",
      "|java+method:///com/google/common/util/concurrent/ListenableFuture/get()|",
      "|java+method:///io/druid/client/DirectDruidClient/access$200(io.druid.client.DirectDruidClient)|",
      "|java+constructor:///java/net/URL/URL(java.lang.String)|",
      "|java+method:///org/jboss/netty/handler/codec/http/HttpResponseStatus/getReasonPhrase()|",
      "|java+constructor:///io/druid/java/util/common/RE/RE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///com/metamx/http/client/response/StatusResponseHandler/StatusResponseHandler(java.nio.charset.Charset)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsBytes(java.lang.Object)|"
    ],
    "affectedLib": "com.metamx:http-client:1.0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/server/lookup/cache/LookupCoordinatorManager/updateAllOnHost(java.net.URL,java.util.Map)|",
    "called": "|java+method:///com/metamx/http/client/Request/addHeader(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///com/metamx/http/client/Request/addHeader(java.lang.String,java.lang.String)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///com/metamx/common/StreamUtils/copyAndClose(java.io.InputStream,java.io.OutputStream)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/server/lookup/cache/LookupCoordinatorManager/httpStatusIsSuccess(int)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///java/io/InputStream/close()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicReference/AtomicReference(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/io/ByteArrayOutputStream/toByteArray()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(java.io.InputStream,com.fasterxml.jackson.core.type.TypeReference)|",
      "|java+constructor:///java/io/ByteArrayOutputStream/ByteArrayOutputStream()|",
      "|java+constructor:///com/metamx/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,com.fasterxml.jackson.core.type.TypeReference)|",
      "|java+method:///java/util/concurrent/atomic/AtomicInteger/get()|",
      "|java+constructor:///com/metamx/http/client/Request/Request(org.jboss.netty.handler.codec.http.HttpMethod,java.net.URL)|",
      "|java+method:///com/google/common/util/concurrent/ListenableFuture/get()|",
      "|java+method:///io/druid/server/lookup/cache/LookupCoordinatorManager/makeResponseHandler(java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicReference)|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///com/metamx/common/StringUtils/fromUtf8(byte%5B%5D)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsString(java.lang.Object)|",
      "|java+method:///com/metamx/http/client/HttpClient/go(com.metamx.http.client.Request,com.metamx.http.client.response.HttpResponseHandler,org.joda.time.Duration)|",
      "|java+method:///java/util/Map/size()|",
      "|java+method:///com/metamx/http/client/Request/setContent(byte%5B%5D)|",
      "|java+method:///java/util/concurrent/atomic/AtomicReference/get()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicInteger/AtomicInteger(int)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/isDebugEnabled()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsBytes(java.lang.Object)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/warn(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/server/lookup/cache/LookupCoordinatorManagerConfig/getHostUpdateTimeout()|"
    ],
    "v2Body": [
      "|java+method:///com/metamx/http/client/Request/addHeader(java.lang.String,java.lang.String)|",
      "|java+method:///io/druid/java/util/common/StreamUtils/copyAndClose(java.io.InputStream,java.io.OutputStream)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///java/io/InputStream/close()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicReference/AtomicReference(java.lang.Object)|",
      "|java+method:///java/io/ByteArrayOutputStream/toByteArray()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(java.io.InputStream,com.fasterxml.jackson.core.type.TypeReference)|",
      "|java+constructor:///java/io/ByteArrayOutputStream/ByteArrayOutputStream()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,com.fasterxml.jackson.core.type.TypeReference)|",
      "|java+method:///io/druid/server/lookup/cache/LookupCoordinatorManager/httpStatusIsSuccess(int)|",
      "|java+method:///io/druid/java/util/common/StringUtils/fromUtf8(byte%5B%5D)|",
      "|java+method:///java/util/concurrent/atomic/AtomicInteger/get()|",
      "|java+constructor:///com/metamx/http/client/Request/Request(org.jboss.netty.handler.codec.http.HttpMethod,java.net.URL)|",
      "|java+method:///com/google/common/util/concurrent/ListenableFuture/get()|",
      "|java+method:///io/druid/server/lookup/cache/LookupCoordinatorManager/makeResponseHandler(java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicReference)|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsString(java.lang.Object)|",
      "|java+method:///com/metamx/http/client/HttpClient/go(com.metamx.http.client.Request,com.metamx.http.client.response.HttpResponseHandler,org.joda.time.Duration)|",
      "|java+method:///java/util/Map/size()|",
      "|java+method:///com/metamx/http/client/Request/setContent(byte%5B%5D)|",
      "|java+method:///java/util/concurrent/atomic/AtomicReference/get()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicInteger/AtomicInteger(int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/isDebugEnabled()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsBytes(java.lang.Object)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/warn(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/server/lookup/cache/LookupCoordinatorManagerConfig/getHostUpdateTimeout()|"
    ],
    "affectedLib": "com.metamx:http-client:1.0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/client/DirectDruidClient$1/handleResponse(org.jboss.netty.handler.codec.http.HttpResponse)|",
    "called": "|java+method:///com/metamx/http/client/response/ClientResponse/finished(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/jboss/netty/handler/codec/http/HttpHeaders/get(java.lang.String)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/addAndGet(long)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(java.lang.String,com.fasterxml.jackson.core.type.TypeReference)|",
      "|java+method:///com/metamx/common/logger/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/client/DirectDruidClient$1$1/DirectDruidClient$1$1(io.druid.client.DirectDruidClient$1)|",
      "|java+method:///org/jboss/netty/handler/codec/http/HttpResponse/headers()|",
      "|java+method:///com/metamx/common/logger/Logger/error(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///com/metamx/http/client/response/ClientResponse/finished(java.lang.Object)|",
      "|java+constructor:///java/io/SequenceInputStream/SequenceInputStream(java.util.Enumeration)|",
      "|java+method:///io/druid/client/DirectDruidClient/access$000()|",
      "|java+method:///io/druid/query/Query/getId()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/jboss/netty/handler/codec/http/HttpResponse/getContent()|",
      "|java+method:///org/jboss/netty/buffer/ChannelBuffer/readableBytes()|",
      "|java+method:///java/util/concurrent/BlockingQueue/put(java.lang.Object)|",
      "|java+method:///com/metamx/emitter/service/ServiceEmitter/emit(com.metamx.emitter.service.ServiceEventBuilder)|",
      "|java+method:///java/util/Map/putAll(java.util.Map)|",
      "|java+constructor:///io/druid/client/DirectDruidClient$1$3/DirectDruidClient$1$3(io.druid.client.DirectDruidClient$1)|",
      "|java+method:///java/lang/Thread/interrupt()|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///io/druid/client/DirectDruidClient/access$200(io.druid.client.DirectDruidClient)|",
      "|java+method:///io/druid/client/DirectDruidClient/access$100(io.druid.client.DirectDruidClient)|",
      "|java+constructor:///io/druid/client/DirectDruidClient$1$2/DirectDruidClient$1$2(io.druid.client.DirectDruidClient$1,java.io.IOException)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+constructor:///org/jboss/netty/buffer/ChannelBufferInputStream/ChannelBufferInputStream(org.jboss.netty.buffer.ChannelBuffer)|",
      "|java+method:///com/metamx/emitter/service/ServiceMetricEvent$Builder/build(java.lang.String,java.lang.Number)|"
    ],
    "v2Body": [
      "|java+method:///org/jboss/netty/handler/codec/http/HttpHeaders/get(java.lang.String)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/addAndGet(long)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(java.lang.String,com.fasterxml.jackson.core.type.TypeReference)|",
      "|java+method:///io/druid/java/util/common/logger/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/client/DirectDruidClient$1$1/DirectDruidClient$1$1(io.druid.client.DirectDruidClient$1)|",
      "|java+method:///io/druid/java/util/common/logger/Logger/error(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/jboss/netty/handler/codec/http/HttpResponse/headers()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///com/metamx/http/client/response/ClientResponse/finished(java.lang.Object)|",
      "|java+constructor:///java/io/SequenceInputStream/SequenceInputStream(java.util.Enumeration)|",
      "|java+method:///io/druid/client/DirectDruidClient/access$000()|",
      "|java+method:///io/druid/query/Query/getId()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/jboss/netty/handler/codec/http/HttpResponse/getContent()|",
      "|java+method:///org/jboss/netty/buffer/ChannelBuffer/readableBytes()|",
      "|java+method:///java/util/concurrent/BlockingQueue/put(java.lang.Object)|",
      "|java+method:///com/metamx/emitter/service/ServiceEmitter/emit(com.metamx.emitter.service.ServiceEventBuilder)|",
      "|java+method:///java/util/Map/putAll(java.util.Map)|",
      "|java+constructor:///io/druid/client/DirectDruidClient$1$3/DirectDruidClient$1$3(io.druid.client.DirectDruidClient$1)|",
      "|java+method:///java/lang/Thread/interrupt()|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///io/druid/client/DirectDruidClient/access$200(io.druid.client.DirectDruidClient)|",
      "|java+method:///io/druid/client/DirectDruidClient/access$100(io.druid.client.DirectDruidClient)|",
      "|java+constructor:///io/druid/client/DirectDruidClient$1$2/DirectDruidClient$1$2(io.druid.client.DirectDruidClient$1,java.io.IOException)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+constructor:///org/jboss/netty/buffer/ChannelBufferInputStream/ChannelBufferInputStream(org.jboss.netty.buffer.ChannelBuffer)|",
      "|java+method:///com/metamx/emitter/service/ServiceMetricEvent$Builder/build(java.lang.String,java.lang.Number)|"
    ],
    "affectedLib": "com.metamx:http-client:1.0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.9.2",
    "coordinatesV2": "io.druid:druid-server:0.10.0",
    "caller": "|java+method:///io/druid/client/coordinator/CoordinatorClient/fetchServerView(java.lang.String,org.joda.time.Interval,boolean)|",
    "called": "|java+constructor:///com/metamx/http/client/Request/Request(org.jboss.netty.handler.codec.http.HttpMethod,java.net.URL)|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(java.lang.String,com.fasterxml.jackson.core.type.TypeReference)|",
      "|java+constructor:///com/metamx/http/client/Request/Request(org.jboss.netty.handler.codec.http.HttpMethod,java.net.URL)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)|",
      "|java+method:///org/jboss/netty/handler/codec/http/HttpResponseStatus/equals(java.lang.Object)|",
      "|java+constructor:///com/metamx/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/google/common/util/concurrent/ListenableFuture/get()|",
      "|java+constructor:///java/net/URL/URL(java.lang.String)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+constructor:///io/druid/client/coordinator/CoordinatorClient$1/CoordinatorClient$1(io.druid.client.coordinator.CoordinatorClient)|",
      "|java+method:///com/metamx/http/client/response/StatusResponseHolder/getContent()|",
      "|java+method:///org/joda/time/Interval/toString()|",
      "|java+method:///com/metamx/http/client/response/StatusResponseHolder/getStatus()|",
      "|java+method:///io/druid/client/coordinator/CoordinatorClient/baseUrl()|",
      "|java+method:///com/metamx/http/client/HttpClient/go(com.metamx.http.client.Request,com.metamx.http.client.response.HttpResponseHandler)|"
    ],
    "v2Body": [
      "|java+method:///org/jboss/netty/handler/codec/http/HttpResponseStatus/equals(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(java.lang.String,com.fasterxml.jackson.core.type.TypeReference)|",
      "|java+constructor:///com/metamx/http/client/Request/Request(org.jboss.netty.handler.codec.http.HttpMethod,java.net.URL)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/google/common/util/concurrent/ListenableFuture/get()|",
      "|java+constructor:///java/net/URL/URL(java.lang.String)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+constructor:///io/druid/client/coordinator/CoordinatorClient$1/CoordinatorClient$1(io.druid.client.coordinator.CoordinatorClient)|",
      "|java+method:///com/metamx/http/client/response/StatusResponseHolder/getContent()|",
      "|java+method:///org/joda/time/Interval/toString()|",
      "|java+method:///com/metamx/http/client/response/StatusResponseHolder/getStatus()|",
      "|java+method:///io/druid/client/coordinator/CoordinatorClient/baseUrl()|",
      "|java+method:///com/metamx/http/client/HttpClient/go(com.metamx.http.client.Request,com.metamx.http.client.response.HttpResponseHandler)|"
    ],
    "affectedLib": "com.metamx:http-client:1.0.6",
    "change": "UPDATED"
  }
]