[
  {
    "coordinatesV1": "org.codehaus.sonar:sonar-batch:3.5.1",
    "coordinatesV2": "org.codehaus.sonar:sonar-batch:3.4.1",
    "caller": "|java+method:///org/sonar/batch/bootstrapper/Batch/startBatch()|",
    "called": "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/sonar/core/PicoUtils/propagateStartupException(java.lang.Throwable)|",
      "|java+method:///org/sonar/batch/bootstrap/Module/init()|",
      "|java+method:///org/sonar/batch/bootstrap/Module/start()|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/batch/bootstrap/Module/stop()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///org/sonar/batch/bootstrap/BootstrapModule/BootstrapModule(org.sonar.api.batch.bootstrap.ProjectReactor,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/core/PicoUtils/propagateStartupException(java.lang.Throwable)|",
      "|java+method:///org/sonar/batch/bootstrap/Container/start()|",
      "|java+method:///org/sonar/batch/bootstrap/Container/init()|",
      "|java+constructor:///org/sonar/batch/bootstrap/BootstrapContainer/BootstrapContainer(org.sonar.batch.bootstrap.GlobalBatchProperties,java.lang.String,org.sonar.api.batch.bootstrap.ProjectReactor,java.lang.Object%5B%5D)|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/sonar/batch/bootstrap/Container/stop()|",
      "|java+constructor:///org/sonar/batch/bootstrap/GlobalBatchProperties/GlobalBatchProperties(java.util.Map)|"
    ],
    "affectedLib": "org.slf4j:slf4j-api:1.6.2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.codehaus.sonar:sonar-batch:3.4.1",
    "coordinatesV2": "org.codehaus.sonar:sonar-batch:3.5.1",
    "caller": "|java+method:///org/sonar/batch/bootstrap/PluginDownloader/downloadPlugin(org.sonar.core.plugins.RemotePlugin)|",
    "called": "|java+method:///org/sonar/home/cache/FileCache/get(java.lang.String,java.lang.String,org.sonar.home.cache.FileCache$Downloader)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+constructor:///org/sonar/api/utils/SonarException/SonarException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/batch/bootstrap/ServerClient/download(java.lang.String,java.io.File)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/core/plugins/RemotePlugin/getFilenames()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/commons/io/FileUtils/forceMkdir(java.io.File)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/sonar/batch/bootstrap/TempDirectories/getDir(java.lang.String)|",
      "|java+method:///org/sonar/core/plugins/RemotePlugin/getKey()|"
    ],
    "v2Body": [
      "|java+constructor:///org/sonar/api/utils/SonarException/SonarException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/core/plugins/RemotePluginFile/getFilename()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/core/plugins/RemotePlugin/getFiles()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/core/plugins/RemotePlugin/getKey()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/home/cache/FileCache/get(java.lang.String,java.lang.String,org.sonar.home.cache.FileCache$Downloader)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+constructor:///org/sonar/batch/bootstrap/PluginDownloader$1/PluginDownloader$1(org.sonar.batch.bootstrap.PluginDownloader,org.sonar.core.plugins.RemotePlugin,org.sonar.core.plugins.RemotePluginFile)|",
      "|java+method:///org/sonar/core/plugins/RemotePluginFile/getHash()|"
    ],
    "affectedLib": "org.codehaus.sonar:sonar-home:3.5.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.codehaus.sonar:sonar-batch:3.4.1",
    "coordinatesV2": "org.codehaus.sonar:sonar-batch:3.5.1",
    "caller": "|java+method:///org/sonar/batch/bootstrap/JdbcDriverHolder/start()|",
    "called": "|java+method:///org/sonar/home/cache/FileCache/get(java.lang.String,java.lang.String,org.sonar.home.cache.FileCache$Downloader)|",
    "v1Body": [
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///org/sonar/batch/bootstrap/JdbcDriverHolder/initClassloader(java.io.File)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/sonar/api/config/Settings/getBoolean(java.lang.String)|",
      "|java+method:///org/sonar/batch/bootstrap/ServerClient/download(java.lang.String,java.io.File)|",
      "|java+method:///org/sonar/batch/bootstrap/TempDirectories/getRoot()|"
    ],
    "v2Body": [
      "|java+constructor:///org/sonar/api/utils/SonarException/SonarException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/sonar/batch/bootstrap/JdbcDriverHolder/initClassloader(java.io.File)|",
      "|java+method:///org/sonar/home/cache/FileCache/get(java.lang.String,java.lang.String,org.sonar.home.cache.FileCache$Downloader)|",
      "|java+method:///org/sonar/batch/bootstrap/JdbcDriverHolder/downloadJdbcDriverIndex()|",
      "|java+method:///org/sonar/api/config/Settings/getBoolean(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+constructor:///org/sonar/batch/bootstrap/JdbcDriverHolder$1/JdbcDriverHolder$1(org.sonar.batch.bootstrap.JdbcDriverHolder)|"
    ],
    "affectedLib": "org.codehaus.sonar:sonar-home:3.5.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.codehaus.sonar:sonar-batch:3.4.1",
    "coordinatesV2": "org.codehaus.sonar:sonar-batch:3.5.1",
    "caller": "|java+method:///org/sonar/batch/bootstrap/PluginDownloader/downloadPlugin(org.sonar.core.plugins.RemotePlugin)|",
    "called": "|java+constructor:///org/sonar/api/utils/SonarException/SonarException(java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+constructor:///org/sonar/api/utils/SonarException/SonarException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/batch/bootstrap/ServerClient/download(java.lang.String,java.io.File)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/core/plugins/RemotePlugin/getFilenames()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/commons/io/FileUtils/forceMkdir(java.io.File)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/sonar/batch/bootstrap/TempDirectories/getDir(java.lang.String)|",
      "|java+method:///org/sonar/core/plugins/RemotePlugin/getKey()|"
    ],
    "v2Body": [
      "|java+constructor:///org/sonar/api/utils/SonarException/SonarException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/core/plugins/RemotePluginFile/getFilename()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/core/plugins/RemotePlugin/getFiles()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/core/plugins/RemotePlugin/getKey()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/home/cache/FileCache/get(java.lang.String,java.lang.String,org.sonar.home.cache.FileCache$Downloader)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+constructor:///org/sonar/batch/bootstrap/PluginDownloader$1/PluginDownloader$1(org.sonar.batch.bootstrap.PluginDownloader,org.sonar.core.plugins.RemotePlugin,org.sonar.core.plugins.RemotePluginFile)|",
      "|java+method:///org/sonar/core/plugins/RemotePluginFile/getHash()|"
    ],
    "affectedLib": "org.codehaus.sonar:sonar-plugin-api:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.codehaus.sonar:sonar-batch:3.4.1",
    "coordinatesV2": "org.codehaus.sonar:sonar-batch:3.5.1",
    "caller": "|java+method:///org/sonar/batch/bootstrap/ServerClient/handleHttpException(org.sonar.api.utils.HttpDownloader$HttpException)|",
    "called": "|java+constructor:///org/sonar/api/utils/SonarException/SonarException(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/api/utils/HttpDownloader$HttpException/getUri()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/sonar/api/utils/HttpDownloader$HttpException/getResponseCode()|",
      "|java+constructor:///org/sonar/api/utils/SonarException/SonarException(java.lang.String)|",
      "|java+constructor:///org/sonar/api/utils/SonarException/SonarException(java.lang.String,java.lang.Throwable)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/batch/bootstrap/ServerClient/getMessageWhenNotAuthorized()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/api/utils/HttpDownloader$HttpException/getUri()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/sonar/api/utils/HttpDownloader$HttpException/getResponseCode()|",
      "|java+constructor:///org/sonar/api/utils/SonarException/SonarException(java.lang.String)|",
      "|java+constructor:///org/sonar/api/utils/SonarException/SonarException(java.lang.String,java.lang.Throwable)|"
    ],
    "affectedLib": "org.codehaus.sonar:sonar-plugin-api:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.codehaus.sonar:sonar-batch:3.4.1",
    "coordinatesV2": "org.codehaus.sonar:sonar-batch:3.5.1",
    "caller": "|java+method:///org/sonar/batch/local/DryRunExporter/writeJson(java.util.Collection,java.io.Writer)|",
    "called": "|java+method:///org/sonar/api/utils/DateUtils/formatDateTime(java.util.Date)|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/google/gson/stream/JsonWriter/value(java.lang.String)|",
      "|java+method:///org/sonar/batch/local/DryRunExporter/name(org.sonar.api.rules.Rule)|",
      "|java+method:///org/sonar/api/rules/Rule/getRepositoryKey()|",
      "|java+method:///com/google/gson/stream/JsonWriter/beginArray()|",
      "|java+constructor:///com/google/gson/stream/JsonWriter/JsonWriter(java.io.Writer)|",
      "|java+method:///com/google/gson/stream/JsonWriter/value(java.lang.Number)|",
      "|java+method:///org/sonar/api/rules/RulePriority/name()|",
      "|java+method:///org/sonar/api/rules/Violation/getLineId()|",
      "|java+method:///org/sonar/api/rules/Rule/getKey()|",
      "|java+method:///org/sonar/api/platform/Server/getVersion()|",
      "|java+method:///com/google/gson/stream/JsonWriter/flush()|",
      "|java+method:///org/sonar/batch/local/DryRunExporter/getViolations(org.sonar.api.resources.Resource)|",
      "|java+method:///org/sonar/api/rules/Violation/getRule()|",
      "|java+method:///org/sonar/api/rules/Violation/getSeverity()|",
      "|java+method:///com/google/gson/stream/JsonWriter/name(java.lang.String)|",
      "|java+method:///com/google/gson/stream/JsonWriter/beginObject()|",
      "|java+constructor:///org/sonar/api/utils/SonarException/SonarException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///org/sonar/api/resources/Resource/getKey()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/gson/stream/JsonWriter/setSerializeNulls(boolean)|",
      "|java+method:///com/google/gson/stream/JsonWriter/endObject()|",
      "|java+method:///com/google/gson/stream/JsonWriter/endArray()|",
      "|java+method:///org/sonar/api/rules/Violation/getMessage()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/rules/Violation/isNew()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/google/gson/stream/JsonWriter/value(java.lang.String)|",
      "|java+method:///org/sonar/batch/local/DryRunExporter/name(org.sonar.api.rules.Rule)|",
      "|java+method:///org/sonar/api/rules/Rule/getRepositoryKey()|",
      "|java+method:///com/google/gson/stream/JsonWriter/beginArray()|",
      "|java+method:///org/sonar/api/rules/Violation/getCreatedAt()|",
      "|java+constructor:///com/google/gson/stream/JsonWriter/JsonWriter(java.io.Writer)|",
      "|java+method:///com/google/gson/stream/JsonWriter/value(java.lang.Number)|",
      "|java+method:///org/sonar/api/rules/Violation/getLineId()|",
      "|java+method:///org/sonar/api/platform/Server/getVersion()|",
      "|java+method:///com/google/gson/stream/JsonWriter/flush()|",
      "|java+method:///org/sonar/batch/local/DryRunExporter/getViolations(org.sonar.api.resources.Resource)|",
      "|java+method:///org/sonar/api/rules/Violation/getRule()|",
      "|java+method:///org/sonar/api/rules/Violation/isSwitchedOff()|",
      "|java+method:///org/sonar/api/rules/Violation/getSeverity()|",
      "|java+method:///com/google/gson/stream/JsonWriter/name(java.lang.String)|",
      "|java+method:///com/google/gson/stream/JsonWriter/beginObject()|",
      "|java+constructor:///org/sonar/api/utils/SonarException/SonarException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///org/sonar/api/resources/Resource/getKey()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/gson/stream/JsonWriter/value(boolean)|",
      "|java+method:///org/sonar/api/rules/RulePriority/name()|",
      "|java+method:///org/sonar/api/rules/Rule/getKey()|",
      "|java+method:///org/sonar/api/utils/DateUtils/formatDateTime(java.util.Date)|",
      "|java+method:///com/google/gson/stream/JsonWriter/setSerializeNulls(boolean)|",
      "|java+method:///com/google/gson/stream/JsonWriter/endObject()|",
      "|java+method:///com/google/gson/stream/JsonWriter/endArray()|",
      "|java+method:///org/sonar/api/rules/Violation/getMessage()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|"
    ],
    "affectedLib": "org.codehaus.sonar:sonar-plugin-api:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.codehaus.sonar:sonar-batch:3.4.1",
    "coordinatesV2": "org.codehaus.sonar:sonar-batch:3.5.1",
    "caller": "|java+method:///org/sonar/batch/index/DefaultIndex/doIndex(org.sonar.api.resources.Resource,org.sonar.api.resources.Resource)|",
    "called": "|java+method:///org/sonar/api/resources/ResourceUtils/isLibrary(org.sonar.api.resources.Resource)|",
    "v1Body": [
      "|java+method:///org/sonar/batch/index/PersistenceManager/saveResource(org.sonar.api.resources.Project,org.sonar.api.resources.Resource,org.sonar.api.resources.Resource)|",
      "|java+method:///org/sonar/api/resources/Resource/setEffectiveKey(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/api/resources/ResourceUtils/isLibrary(org.sonar.api.resources.Resource)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/batch/index/DefaultIndex/checkLock(org.sonar.api.resources.Resource)|",
      "|java+method:///org/sonar/batch/index/Bucket/setParent(org.sonar.batch.index.Bucket)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/batch/index/Bucket/getResource()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/sonar/batch/index/Bucket/Bucket(org.sonar.api.resources.Resource)|",
      "|java+method:///org/sonar/batch/index/DefaultIndex/getBucket(org.sonar.api.resources.Resource,boolean)|",
      "|java+method:///org/sonar/batch/index/DefaultIndex/createUID(org.sonar.api.resources.Project,org.sonar.api.resources.Resource)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/batch/index/DefaultIndex/checkExclusion(org.sonar.api.resources.Resource,org.sonar.batch.index.Bucket)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/commons/lang/ObjectUtils/defaultIfNull(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/batch/index/PersistenceManager/saveResource(org.sonar.api.resources.Project,org.sonar.api.resources.Resource,org.sonar.api.resources.Resource)|",
      "|java+method:///org/sonar/api/resources/Resource/setEffectiveKey(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/api/resources/ResourceUtils/isLibrary(org.sonar.api.resources.Resource)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/sonar/batch/index/DefaultIndex/checkLock(org.sonar.api.resources.Resource)|",
      "|java+method:///org/sonar/api/resources/ResourceUtils/isPersistable(org.sonar.api.resources.Resource)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/batch/index/Bucket/getResource()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/sonar/batch/index/Bucket/Bucket(org.sonar.api.resources.Resource)|",
      "|java+method:///org/sonar/batch/index/DefaultIndex/getBucket(org.sonar.api.resources.Resource,boolean)|",
      "|java+method:///org/sonar/batch/index/DefaultIndex/createUID(org.sonar.api.resources.Project,org.sonar.api.resources.Resource)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/batch/index/DefaultIndex/checkExclusion(org.sonar.api.resources.Resource,org.sonar.batch.index.Bucket)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/sonar/core/component/ScanGraph/addComponent(org.sonar.api.resources.Resource,org.sonar.api.database.model.Snapshot)|",
      "|java+method:///org/apache/commons/lang/ObjectUtils/defaultIfNull(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/batch/index/Bucket/setParent(org.sonar.batch.index.Bucket)|",
      "|java+method:///org/sonar/api/resources/Resource/getQualifier()|"
    ],
    "affectedLib": "org.codehaus.sonar:sonar-plugin-api:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.codehaus.sonar:sonar-batch:3.4.1",
    "coordinatesV2": "org.codehaus.sonar:sonar-batch:3.5.1",
    "caller": "|java+method:///org/sonar/batch/index/DefaultIndex/addViolation(org.sonar.api.rules.Violation,boolean)|",
    "called": "|java+method:///org/sonar/api/resources/Scopes/isHigherThanOrEquals(org.sonar.api.resources.Resource,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/api/rules/Violation/getRule()|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object)|",
      "|java+method:///org/sonar/batch/index/Bucket/isExcluded()|",
      "|java+method:///org/sonar/api/rules/Violation/getResource()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/sonar/batch/index/DefaultIndex/checkIndexed(org.sonar.api.resources.Resource)|",
      "|java+method:///org/sonar/api/rules/Violation/setResource(org.sonar.api.resources.Resource)|",
      "|java+method:///org/sonar/batch/index/DefaultIndex/addViolation(org.sonar.api.rules.Violation,org.sonar.batch.index.Bucket,boolean)|",
      "|java+method:///org/sonar/api/resources/Scopes/isHigherThanOrEquals(org.sonar.api.resources.Resource,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/rules/Violation/getRule()|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object)|",
      "|java+method:///org/sonar/api/rules/Rule/getRepositoryKey()|",
      "|java+method:///org/sonar/batch/index/Bucket/isExcluded()|",
      "|java+method:///org/sonar/api/rules/Violation/setRule(org.sonar.api.rules.Rule)|",
      "|java+method:///org/sonar/api/rules/Violation/getResource()|",
      "|java+method:///org/sonar/api/rules/Rule/getKey()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/sonar/api/rules/Rule/getId()|",
      "|java+method:///org/sonar/api/rules/Violation/setResource(org.sonar.api.resources.Resource)|",
      "|java+method:///org/sonar/batch/index/DefaultIndex/addViolation(org.sonar.api.rules.Violation,org.sonar.batch.index.Bucket,boolean)|",
      "|java+method:///org/sonar/api/resources/Scopes/isHigherThanOrEquals(org.sonar.api.resources.Resource,java.lang.String)|",
      "|java+method:///org/sonar/batch/index/DefaultIndex/checkIndexed(org.sonar.api.resources.Resource)|",
      "|java+method:///org/sonar/api/rules/RuleFinder/findByKey(java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "org.codehaus.sonar:sonar-plugin-api:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.codehaus.sonar:sonar-batch:3.4.1",
    "coordinatesV2": "org.codehaus.sonar:sonar-batch:3.5.1",
    "caller": "|java+method:///org/sonar/batch/bootstrap/ProjectExclusions/start()|",
    "called": "|java+method:///org/sonar/api/batch/bootstrap/ProjectReactor/getProjects()|",
    "v1Body": [
      "|java+method:///org/sonar/batch/bootstrap/ProjectExclusions/isExcluded(java.lang.String,boolean)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/bootstrap/ProjectReactor/getRoot()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/batch/bootstrap/ProjectExclusions/key(org.sonar.api.batch.bootstrap.ProjectDefinition)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/batch/bootstrap/ProjectExclusions/exclude(org.sonar.api.batch.bootstrap.ProjectDefinition)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/api/batch/bootstrap/ProjectReactor/getProjects()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/batch/bootstrap/ProjectDefinition/getKey()|",
      "|java+method:///org/sonar/batch/bootstrap/ProjectExclusions/isExcluded(java.lang.String,boolean)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/sonar/batch/bootstrap/ProjectExclusions/key(org.sonar.api.batch.bootstrap.ProjectDefinition)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/batch/bootstrap/ProjectExclusions/exclude(org.sonar.api.batch.bootstrap.ProjectDefinition)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/api/batch/bootstrap/ProjectReactor/getProjects()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/sonar/api/batch/bootstrap/ProjectReactor/getRoot()|"
    ],
    "affectedLib": "org.codehaus.sonar:sonar-plugin-api:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.codehaus.sonar:sonar-batch:3.4.1",
    "coordinatesV2": "org.codehaus.sonar:sonar-batch:3.5.1",
    "caller": "|java+method:///org/sonar/batch/phases/SensorsExecutor/executeMavenPlugin(org.sonar.api.batch.Sensor)|",
    "called": "|java+method:///org/sonar/api/utils/TimeProfiler/stop()|",
    "v1Body": [
      "|java+constructor:///org/sonar/api/utils/TimeProfiler/TimeProfiler(org.slf4j.Logger)|",
      "|java+method:///org/sonar/api/utils/TimeProfiler/stop()|",
      "|java+method:///org/sonar/api/batch/maven/DependsUponMavenPlugin/getMavenPluginHandler(org.sonar.api.resources.Project)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/batch/MavenPluginExecutor/execute(org.sonar.api.resources.Project,org.sonar.api.batch.bootstrap.ProjectDefinition,org.sonar.api.batch.maven.MavenPluginHandler)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/TimeProfiler/start(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/api/batch/maven/MavenPluginHandler/getArtifactId()|"
    ],
    "v2Body": [
      "|java+constructor:///org/sonar/api/utils/TimeProfiler/TimeProfiler(org.slf4j.Logger)|",
      "|java+method:///org/sonar/batch/scan/maven/MavenPluginExecutor/execute(org.sonar.api.resources.Project,org.sonar.batch.scan.filesystem.DefaultModuleFileSystem,org.sonar.api.batch.maven.MavenPluginHandler)|",
      "|java+method:///org/sonar/api/utils/TimeProfiler/stop()|",
      "|java+method:///org/sonar/api/batch/maven/DependsUponMavenPlugin/getMavenPluginHandler(org.sonar.api.resources.Project)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/TimeProfiler/start(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/api/batch/maven/MavenPluginHandler/getArtifactId()|"
    ],
    "affectedLib": "org.codehaus.sonar:sonar-plugin-api:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.codehaus.sonar:sonar-batch:3.4.1",
    "coordinatesV2": "org.codehaus.sonar:sonar-batch:3.5.1",
    "caller": "|java+method:///org/sonar/batch/local/DryRunExporter/getViolations(org.sonar.api.resources.Resource)|",
    "called": "|java+method:///org/sonar/api/violations/ViolationQuery/create()|",
    "v1Body": [
      "|java+method:///org/sonar/batch/index/DefaultIndex/getViolations(org.sonar.api.resources.Resource)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/batch/index/DefaultIndex/getViolations(org.sonar.api.violations.ViolationQuery)|",
      "|java+method:///org/sonar/api/violations/ViolationQuery/create()|",
      "|java+method:///org/sonar/api/violations/ViolationQuery/forResource(org.sonar.api.resources.Resource)|",
      "|java+method:///org/sonar/api/violations/ViolationQuery/setSwitchMode(org.sonar.api.violations.ViolationQuery$SwitchMode)|"
    ],
    "affectedLib": "org.codehaus.sonar:sonar-plugin-api:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.codehaus.sonar:sonar-batch:3.4.1",
    "coordinatesV2": "org.codehaus.sonar:sonar-batch:3.5.1",
    "caller": "|java+method:///org/sonar/batch/phases/Phases/execute(org.sonar.api.resources.Project)|",
    "called": "|java+method:///org/sonar/api/resources/Project/isRoot()|",
    "v1Body": [
      "|java+method:///org/sonar/batch/index/PersistenceManager/setDelayedMode(boolean)|",
      "|java+method:///org/sonar/batch/phases/ProjectInitializer/execute(org.sonar.api.resources.Project)|",
      "|java+constructor:///org/sonar/batch/phases/ProjectAnalysisEvent/ProjectAnalysisEvent(org.sonar.api.resources.Project,boolean)|",
      "|java+method:///org/sonar/batch/phases/SensorsExecutor/execute(org.sonar.api.batch.SensorContext)|",
      "|java+method:///org/sonar/batch/phases/MavenPhaseExecutor/execute(org.sonar.api.resources.Project)|",
      "|java+method:///org/sonar/batch/phases/InitializersExecutor/execute()|",
      "|java+method:///org/sonar/api/resources/Project/isRoot()|",
      "|java+method:///org/sonar/batch/phases/UpdateStatusJob/execute()|",
      "|java+method:///org/sonar/batch/events/EventBus/fireEvent(org.sonar.batch.events.BatchEvent)|",
      "|java+method:///org/sonar/batch/phases/Phases/cleanMemory()|",
      "|java+method:///org/sonar/batch/index/PersistenceManager/dump()|",
      "|java+method:///org/sonar/batch/phases/MavenPluginsConfigurator/execute(org.sonar.api.resources.Project)|",
      "|java+method:///org/sonar/batch/phases/PostJobsExecutor/execute(org.sonar.api.batch.SensorContext)|",
      "|java+method:///org/sonar/batch/phases/DecoratorsExecutor/execute()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/batch/index/PersistenceManager/setDelayedMode(boolean)|",
      "|java+method:///org/sonar/core/component/ScanGraphStore/save()|",
      "|java+constructor:///org/sonar/batch/phases/ProjectAnalysisEvent/ProjectAnalysisEvent(org.sonar.api.resources.Project,boolean)|",
      "|java+method:///org/sonar/batch/phases/SensorsExecutor/execute(org.sonar.api.batch.SensorContext)|",
      "|java+method:///org/sonar/batch/scan/maven/MavenPhaseExecutor/execute(org.sonar.api.resources.Project)|",
      "|java+method:///org/sonar/batch/phases/InitializersExecutor/execute()|",
      "|java+method:///org/sonar/api/resources/Project/isRoot()|",
      "|java+method:///org/sonar/batch/phases/UpdateStatusJob/execute()|",
      "|java+method:///org/sonar/batch/events/EventBus/fireEvent(org.sonar.batch.events.BatchEvent)|",
      "|java+method:///org/sonar/batch/phases/Phases/cleanMemory()|",
      "|java+method:///org/sonar/batch/index/PersistenceManager/dump()|",
      "|java+method:///org/sonar/batch/scan/filesystem/FileSystemLogger/log()|",
      "|java+method:///org/sonar/batch/phases/ProjectInitializer/execute(org.sonar.api.resources.Project)|",
      "|java+method:///org/sonar/batch/scan/maven/MavenPluginsConfigurator/execute(org.sonar.api.resources.Project)|",
      "|java+method:///org/sonar/batch/phases/PostJobsExecutor/execute(org.sonar.api.batch.SensorContext)|",
      "|java+method:///org/sonar/batch/phases/DecoratorsExecutor/execute()|"
    ],
    "affectedLib": "org.codehaus.sonar:sonar-plugin-api:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.codehaus.sonar:sonar-batch:3.4.1",
    "coordinatesV2": "org.codehaus.sonar:sonar-batch:3.5.1",
    "caller": "|java+method:///org/sonar/batch/bootstrap/ProjectLock/start()|",
    "called": "|java+constructor:///org/sonar/api/utils/SonarException/SonarException(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/sonar/api/utils/SonarException/SonarException(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/Semaphores$Semaphore/isLocked()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+method:///org/sonar/batch/bootstrap/ProjectLock/acquire()|",
      "|java+method:///org/sonar/batch/bootstrap/ProjectLock/isInDryRunMode()|",
      "|java+method:///org/sonar/batch/bootstrap/ProjectLock/getErrorMessage(org.sonar.api.utils.Semaphores$Semaphore)|"
    ],
    "v2Body": [
      "|java+constructor:///org/sonar/api/utils/SonarException/SonarException(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/Semaphores$Semaphore/isLocked()|",
      "|java+method:///org/sonar/api/resources/Project/getKey()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)|",
      "|java+method:///org/sonar/batch/bootstrap/ProjectLock/acquire()|",
      "|java+method:///org/sonar/batch/bootstrap/ProjectLock/isInDryRunMode()|",
      "|java+method:///org/sonar/batch/bootstrap/ProjectLock/getErrorMessage(org.sonar.api.utils.Semaphores$Semaphore)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+method:///org/sonar/batch/bootstrap/ProjectLock/getProject()|"
    ],
    "affectedLib": "org.codehaus.sonar:sonar-plugin-api:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.codehaus.sonar:sonar-batch:3.4.1",
    "coordinatesV2": "org.codehaus.sonar:sonar-batch:3.5.1",
    "caller": "|java+method:///org/sonar/batch/phases/InitializersExecutor/executeMavenPlugin(org.sonar.api.batch.Initializer)|",
    "called": "|java+method:///org/sonar/api/utils/TimeProfiler/stop()|",
    "v1Body": [
      "|java+constructor:///org/sonar/api/utils/TimeProfiler/TimeProfiler(org.slf4j.Logger)|",
      "|java+method:///org/sonar/api/utils/TimeProfiler/stop()|",
      "|java+method:///org/sonar/api/batch/maven/DependsUponMavenPlugin/getMavenPluginHandler(org.sonar.api.resources.Project)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/batch/MavenPluginExecutor/execute(org.sonar.api.resources.Project,org.sonar.api.batch.bootstrap.ProjectDefinition,org.sonar.api.batch.maven.MavenPluginHandler)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/TimeProfiler/start(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/api/batch/maven/MavenPluginHandler/getArtifactId()|"
    ],
    "v2Body": [
      "|java+constructor:///org/sonar/api/utils/TimeProfiler/TimeProfiler(org.slf4j.Logger)|",
      "|java+method:///org/sonar/batch/scan/maven/MavenPluginExecutor/execute(org.sonar.api.resources.Project,org.sonar.batch.scan.filesystem.DefaultModuleFileSystem,org.sonar.api.batch.maven.MavenPluginHandler)|",
      "|java+method:///org/sonar/api/utils/TimeProfiler/stop()|",
      "|java+method:///org/sonar/api/batch/maven/DependsUponMavenPlugin/getMavenPluginHandler(org.sonar.api.resources.Project)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/TimeProfiler/start(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/api/batch/maven/MavenPluginHandler/getArtifactId()|"
    ],
    "affectedLib": "org.codehaus.sonar:sonar-plugin-api:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.codehaus.sonar:sonar-batch:3.4.1",
    "coordinatesV2": "org.codehaus.sonar:sonar-batch:3.5.1",
    "caller": "|java+method:///org/sonar/batch/bootstrap/DryRunDatabase/downloadDatabase(java.lang.String,java.io.File)|",
    "called": "|java+constructor:///org/sonar/api/utils/SonarException/SonarException(java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+constructor:///org/sonar/api/utils/SonarException/SonarException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/batch/bootstrap/ServerClient/download(java.lang.String,java.io.File)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/google/common/base/Throwables/getRootCause(java.lang.Throwable)|",
      "|java+method:///org/sonar/api/utils/HttpDownloader$HttpException/getResponseCode()|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/io/FileUtils/sizeOf(java.io.File)|",
      "|java+constructor:///org/sonar/api/utils/SonarException/SonarException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/io/FileUtils/byteCountToDisplaySize(long)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/batch/bootstrap/ServerClient/download(java.lang.String,java.io.File)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/google/common/base/Throwables/getRootCause(java.lang.Throwable)|",
      "|java+method:///org/sonar/api/utils/HttpDownloader$HttpException/getResponseCode()|",
      "|java+method:///org/slf4j/Logger/isDebugEnabled()|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "affectedLib": "org.codehaus.sonar:sonar-plugin-api:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.codehaus.sonar:sonar-batch:3.4.1",
    "coordinatesV2": "org.codehaus.sonar:sonar-batch:3.5.1",
    "caller": "|java+method:///org/sonar/batch/bootstrap/ServerClient/doRequest(java.lang.String)|",
    "called": "|java+method:///org/sonar/api/utils/HttpDownloader$BaseHttpDownloader/newInputSupplier(java.net.URI)|",
    "v1Body": [
      "|java+constructor:///org/sonar/api/utils/SonarException/SonarException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/batch/bootstrap/ServerClient/getURL()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+method:///org/sonar/batch/bootstrap/BootstrapSettings/getProperty(java.lang.String)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/HttpDownloader$BaseHttpDownloader/newInputSupplier(java.net.URI,java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/api/utils/HttpDownloader$BaseHttpDownloader/newInputSupplier(java.net.URI)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///org/sonar/api/utils/SonarException/SonarException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/batch/bootstrap/ServerClient/getURL()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/batch/bootstrap/BootstrapSettings/getProperty(java.lang.String)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/HttpDownloader$BaseHttpDownloader/newInputSupplier(java.net.URI,java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/api/utils/HttpDownloader$BaseHttpDownloader/newInputSupplier(java.net.URI)|",
      "|java+method:///org/apache/commons/lang/StringEscapeUtils/escapeHtml(java.lang.String)|",
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|"
    ],
    "affectedLib": "org.codehaus.sonar:sonar-plugin-api:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.codehaus.sonar:sonar-batch:3.4.1",
    "coordinatesV2": "org.codehaus.sonar:sonar-batch:3.5.1",
    "caller": "|java+method:///org/sonar/batch/local/DryRunExporter/exportResults(java.util.Collection)|",
    "called": "|java+method:///org/sonar/api/config/Settings/getString(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/sonar/api/utils/SonarException/SonarException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/sonar/api/resources/ProjectFileSystem/getSonarWorkingDirectory()|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///org/sonar/batch/local/DryRunExporter/writeJson(java.util.Collection,java.io.Writer)|",
      "|java+constructor:///java/io/BufferedWriter/BufferedWriter(java.io.Writer)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/sonar/api/config/Settings/getString(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+constructor:///java/io/FileWriter/FileWriter(java.io.File)|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+constructor:///org/sonar/api/utils/SonarException/SonarException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///org/sonar/batch/local/DryRunExporter/writeJson(java.util.Collection,java.io.Writer)|",
      "|java+constructor:///java/io/BufferedWriter/BufferedWriter(java.io.Writer)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/sonar/api/scan/filesystem/ModuleFileSystem/workingDir()|",
      "|java+method:///org/sonar/api/config/Settings/getString(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+constructor:///java/io/FileWriter/FileWriter(java.io.File)|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "affectedLib": "org.codehaus.sonar:sonar-plugin-api:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.codehaus.sonar:sonar-batch:3.4.1",
    "coordinatesV2": "org.codehaus.sonar:sonar-batch:3.5.1",
    "caller": "|java+method:///org/sonar/batch/bootstrap/JdbcDriverHolder/start()|",
    "called": "|java+method:///org/sonar/api/config/Settings/getBoolean(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///org/sonar/batch/bootstrap/JdbcDriverHolder/initClassloader(java.io.File)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/sonar/api/config/Settings/getBoolean(java.lang.String)|",
      "|java+method:///org/sonar/batch/bootstrap/ServerClient/download(java.lang.String,java.io.File)|",
      "|java+method:///org/sonar/batch/bootstrap/TempDirectories/getRoot()|"
    ],
    "v2Body": [
      "|java+constructor:///org/sonar/api/utils/SonarException/SonarException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/sonar/batch/bootstrap/JdbcDriverHolder/initClassloader(java.io.File)|",
      "|java+method:///org/sonar/home/cache/FileCache/get(java.lang.String,java.lang.String,org.sonar.home.cache.FileCache$Downloader)|",
      "|java+method:///org/sonar/batch/bootstrap/JdbcDriverHolder/downloadJdbcDriverIndex()|",
      "|java+method:///org/sonar/api/config/Settings/getBoolean(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+constructor:///org/sonar/batch/bootstrap/JdbcDriverHolder$1/JdbcDriverHolder$1(org.sonar.batch.bootstrap.JdbcDriverHolder)|"
    ],
    "affectedLib": "org.codehaus.sonar:sonar-plugin-api:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.codehaus.sonar:sonar-batch:3.4.1",
    "coordinatesV2": "org.codehaus.sonar:sonar-batch:3.5.1",
    "caller": "|java+method:///org/sonar/batch/phases/SensorsExecutor/execute(org.sonar.api.batch.SensorContext)|",
    "called": "|java+method:///org/sonar/api/batch/BatchExtensionDictionnary/select(java.lang.Class,org.sonar.api.resources.Project,boolean)|",
    "v1Body": [
      "|java+method:///org/sonar/api/batch/BatchExtensionDictionnary/select(java.lang.Class,org.sonar.api.resources.Project,boolean)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/sonar/batch/phases/SensorExecutionEvent/SensorExecutionEvent(org.sonar.api.batch.Sensor,boolean)|",
      "|java+method:///org/sonar/batch/events/EventBus/fireEvent(org.sonar.batch.events.BatchEvent)|",
      "|java+method:///org/sonar/api/batch/Sensor/analyse(org.sonar.api.resources.Project,org.sonar.api.batch.SensorContext)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/sonar/batch/phases/SensorsExecutor/executeMavenPlugin(org.sonar.api.batch.Sensor)|",
      "|java+constructor:///org/sonar/batch/phases/SensorsPhaseEvent/SensorsPhaseEvent(java.util.List,boolean)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Iterable)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/batch/BatchExtensionDictionnary/select(java.lang.Class,org.sonar.api.resources.Project,boolean)|",
      "|java+constructor:///org/sonar/batch/phases/SensorExecutionEvent/SensorExecutionEvent(org.sonar.api.batch.Sensor,boolean)|",
      "|java+method:///org/sonar/batch/events/EventBus/fireEvent(org.sonar.batch.events.BatchEvent)|",
      "|java+method:///org/sonar/api/batch/Sensor/analyse(org.sonar.api.resources.Project,org.sonar.api.batch.SensorContext)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/sonar/batch/phases/SensorsExecutor/executeMavenPlugin(org.sonar.api.batch.Sensor)|",
      "|java+constructor:///org/sonar/batch/phases/SensorsPhaseEvent/SensorsPhaseEvent(java.util.List,boolean)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Iterable)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/database/DatabaseSession/commitAndClose()|"
    ],
    "affectedLib": "org.codehaus.sonar:sonar-plugin-api:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.codehaus.sonar:sonar-batch:3.4.1",
    "coordinatesV2": "org.codehaus.sonar:sonar-batch:3.5.1",
    "caller": "|java+method:///org/sonar/batch/bootstrap/ProjectExclusions/isExcluded(java.lang.String,boolean)|",
    "called": "|java+method:///org/sonar/api/config/Settings/getStringArray(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/commons/lang/ArrayUtils/contains(java.lang.Object%5B%5D,java.lang.Object)|",
      "|java+method:///org/sonar/api/config/Settings/getStringArray(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/commons/lang/ArrayUtils/contains(java.lang.Object%5B%5D,java.lang.Object)|",
      "|java+method:///org/sonar/api/config/Settings/getStringArray(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "affectedLib": "org.codehaus.sonar:sonar-plugin-api:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.codehaus.sonar:sonar-batch:3.4.1",
    "coordinatesV2": "org.codehaus.sonar:sonar-batch:3.5.1",
    "caller": "|java+method:///org/sonar/batch/bootstrap/BatchPluginRepository/doStart(java.util.List)|",
    "called": "|java+constructor:///org/sonar/core/plugins/PluginInstaller/PluginInstaller()|",
    "v1Body": [
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/sonar/batch/bootstrap/BatchPluginRepository$PluginFilter/BatchPluginRepository$PluginFilter(org.sonar.api.config.Settings)|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///java/util/List/subList(int,int)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/sonar/core/plugins/PluginClassloaders/PluginClassloaders(java.lang.ClassLoader)|",
      "|java+method:///org/sonar/batch/bootstrap/BatchPluginRepository$PluginFilter/accepts(java.lang.String)|",
      "|java+method:///org/sonar/api/platform/PluginMetadata/getBasePlugin()|",
      "|java+method:///org/sonar/core/plugins/PluginInstaller/installInSameLocation(java.io.File,boolean,java.util.List)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/sonar/api/platform/PluginMetadata/getKey()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///org/sonar/core/plugins/RemotePlugin/getKey()|",
      "|java+method:///org/sonar/core/plugins/RemotePlugin/isCore()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/batch/bootstrap/PluginDownloader/downloadPlugin(org.sonar.core.plugins.RemotePlugin)|",
      "|java+constructor:///org/sonar/core/plugins/PluginInstaller/PluginInstaller()|",
      "|java+method:///org/sonar/core/plugins/PluginClassloaders/init(java.util.Collection)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/lang/Thread/getContextClassLoader()|",
      "|java+method:///java/util/List/iterator()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/core/plugins/PluginInstaller/install(java.io.File,boolean,java.util.List,java.io.File)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/sonar/batch/bootstrap/BatchPluginRepository$PluginFilter/BatchPluginRepository$PluginFilter(org.sonar.api.config.Settings)|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///java/util/List/subList(int,int)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/batch/bootstrap/BatchPluginRepository$PluginFilter/accepts(java.lang.String)|",
      "|java+method:///org/sonar/api/platform/PluginMetadata/getBasePlugin()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/sonar/api/platform/PluginMetadata/getKey()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///org/sonar/batch/bootstrap/TempDirectories/getDir(java.lang.String)|",
      "|java+method:///org/sonar/core/plugins/RemotePlugin/getKey()|",
      "|java+method:///org/sonar/core/plugins/RemotePlugin/isCore()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/batch/bootstrap/PluginDownloader/downloadPlugin(org.sonar.core.plugins.RemotePlugin)|",
      "|java+constructor:///org/sonar/core/plugins/PluginInstaller/PluginInstaller()|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+constructor:///org/sonar/core/plugins/PluginClassloaders/PluginClassloaders(java.lang.ClassLoader)|",
      "|java+method:///org/sonar/core/plugins/PluginClassloaders/init(java.util.Collection)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/lang/Thread/getContextClassLoader()|",
      "|java+method:///java/util/List/iterator()|"
    ],
    "affectedLib": "org.codehaus.sonar:sonar-core:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.codehaus.sonar:sonar-batch:3.4.1",
    "coordinatesV2": "org.codehaus.sonar:sonar-batch:3.5.1",
    "caller": "|java+method:///org/sonar/batch/phases/Phases/execute(org.sonar.api.resources.Project)|",
    "called": "|java+method:///org/sonar/core/component/ScanGraphStore/save()|",
    "v1Body": [
      "|java+method:///org/sonar/batch/index/PersistenceManager/setDelayedMode(boolean)|",
      "|java+method:///org/sonar/batch/phases/ProjectInitializer/execute(org.sonar.api.resources.Project)|",
      "|java+constructor:///org/sonar/batch/phases/ProjectAnalysisEvent/ProjectAnalysisEvent(org.sonar.api.resources.Project,boolean)|",
      "|java+method:///org/sonar/batch/phases/SensorsExecutor/execute(org.sonar.api.batch.SensorContext)|",
      "|java+method:///org/sonar/batch/phases/MavenPhaseExecutor/execute(org.sonar.api.resources.Project)|",
      "|java+method:///org/sonar/batch/phases/InitializersExecutor/execute()|",
      "|java+method:///org/sonar/api/resources/Project/isRoot()|",
      "|java+method:///org/sonar/batch/phases/UpdateStatusJob/execute()|",
      "|java+method:///org/sonar/batch/events/EventBus/fireEvent(org.sonar.batch.events.BatchEvent)|",
      "|java+method:///org/sonar/batch/phases/Phases/cleanMemory()|",
      "|java+method:///org/sonar/batch/index/PersistenceManager/dump()|",
      "|java+method:///org/sonar/batch/phases/MavenPluginsConfigurator/execute(org.sonar.api.resources.Project)|",
      "|java+method:///org/sonar/batch/phases/PostJobsExecutor/execute(org.sonar.api.batch.SensorContext)|",
      "|java+method:///org/sonar/batch/phases/DecoratorsExecutor/execute()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/batch/index/PersistenceManager/setDelayedMode(boolean)|",
      "|java+method:///org/sonar/core/component/ScanGraphStore/save()|",
      "|java+constructor:///org/sonar/batch/phases/ProjectAnalysisEvent/ProjectAnalysisEvent(org.sonar.api.resources.Project,boolean)|",
      "|java+method:///org/sonar/batch/phases/SensorsExecutor/execute(org.sonar.api.batch.SensorContext)|",
      "|java+method:///org/sonar/batch/scan/maven/MavenPhaseExecutor/execute(org.sonar.api.resources.Project)|",
      "|java+method:///org/sonar/batch/phases/InitializersExecutor/execute()|",
      "|java+method:///org/sonar/api/resources/Project/isRoot()|",
      "|java+method:///org/sonar/batch/phases/UpdateStatusJob/execute()|",
      "|java+method:///org/sonar/batch/events/EventBus/fireEvent(org.sonar.batch.events.BatchEvent)|",
      "|java+method:///org/sonar/batch/phases/Phases/cleanMemory()|",
      "|java+method:///org/sonar/batch/index/PersistenceManager/dump()|",
      "|java+method:///org/sonar/batch/scan/filesystem/FileSystemLogger/log()|",
      "|java+method:///org/sonar/batch/phases/ProjectInitializer/execute(org.sonar.api.resources.Project)|",
      "|java+method:///org/sonar/batch/scan/maven/MavenPluginsConfigurator/execute(org.sonar.api.resources.Project)|",
      "|java+method:///org/sonar/batch/phases/PostJobsExecutor/execute(org.sonar.api.batch.SensorContext)|",
      "|java+method:///org/sonar/batch/phases/DecoratorsExecutor/execute()|"
    ],
    "affectedLib": "org.codehaus.sonar:sonar-core:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.codehaus.sonar:sonar-batch:3.4.1",
    "coordinatesV2": "org.codehaus.sonar:sonar-batch:3.5.1",
    "caller": "|java+method:///org/sonar/batch/index/DefaultIndex/doIndex(org.sonar.api.resources.Resource,org.sonar.api.resources.Resource)|",
    "called": "|java+method:///org/sonar/core/component/ScanGraph/addComponent(org.sonar.api.resources.Resource,org.sonar.api.database.model.Snapshot)|",
    "v1Body": [
      "|java+method:///org/sonar/batch/index/PersistenceManager/saveResource(org.sonar.api.resources.Project,org.sonar.api.resources.Resource,org.sonar.api.resources.Resource)|",
      "|java+method:///org/sonar/api/resources/Resource/setEffectiveKey(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/api/resources/ResourceUtils/isLibrary(org.sonar.api.resources.Resource)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/sonar/batch/index/DefaultIndex/checkLock(org.sonar.api.resources.Resource)|",
      "|java+method:///org/sonar/batch/index/Bucket/setParent(org.sonar.batch.index.Bucket)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/batch/index/Bucket/getResource()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/sonar/batch/index/Bucket/Bucket(org.sonar.api.resources.Resource)|",
      "|java+method:///org/sonar/batch/index/DefaultIndex/getBucket(org.sonar.api.resources.Resource,boolean)|",
      "|java+method:///org/sonar/batch/index/DefaultIndex/createUID(org.sonar.api.resources.Project,org.sonar.api.resources.Resource)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/batch/index/DefaultIndex/checkExclusion(org.sonar.api.resources.Resource,org.sonar.batch.index.Bucket)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/commons/lang/ObjectUtils/defaultIfNull(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/batch/index/PersistenceManager/saveResource(org.sonar.api.resources.Project,org.sonar.api.resources.Resource,org.sonar.api.resources.Resource)|",
      "|java+method:///org/sonar/api/resources/Resource/setEffectiveKey(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/api/resources/ResourceUtils/isLibrary(org.sonar.api.resources.Resource)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/sonar/batch/index/DefaultIndex/checkLock(org.sonar.api.resources.Resource)|",
      "|java+method:///org/sonar/api/resources/ResourceUtils/isPersistable(org.sonar.api.resources.Resource)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/batch/index/Bucket/getResource()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/sonar/batch/index/Bucket/Bucket(org.sonar.api.resources.Resource)|",
      "|java+method:///org/sonar/batch/index/DefaultIndex/getBucket(org.sonar.api.resources.Resource,boolean)|",
      "|java+method:///org/sonar/batch/index/DefaultIndex/createUID(org.sonar.api.resources.Project,org.sonar.api.resources.Resource)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/batch/index/DefaultIndex/checkExclusion(org.sonar.api.resources.Resource,org.sonar.batch.index.Bucket)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/sonar/core/component/ScanGraph/addComponent(org.sonar.api.resources.Resource,org.sonar.api.database.model.Snapshot)|",
      "|java+method:///org/apache/commons/lang/ObjectUtils/defaultIfNull(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/batch/index/Bucket/setParent(org.sonar.batch.index.Bucket)|",
      "|java+method:///org/sonar/api/resources/Resource/getQualifier()|"
    ],
    "affectedLib": "org.codehaus.sonar:sonar-core:3.5.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.codehaus.sonar:sonar-batch:3.4.1",
    "coordinatesV2": "org.codehaus.sonar:sonar-batch:3.5.1",
    "caller": "|java+method:///org/sonar/batch/bootstrapper/Batch/startBatch()|",
    "called": "|java+method:///org/sonar/core/PicoUtils/propagateStartupException(java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/sonar/core/PicoUtils/propagateStartupException(java.lang.Throwable)|",
      "|java+method:///org/sonar/batch/bootstrap/Module/init()|",
      "|java+method:///org/sonar/batch/bootstrap/Module/start()|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/batch/bootstrap/Module/stop()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///org/sonar/batch/bootstrap/BootstrapModule/BootstrapModule(org.sonar.api.batch.bootstrap.ProjectReactor,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/core/PicoUtils/propagateStartupException(java.lang.Throwable)|",
      "|java+method:///org/sonar/batch/bootstrap/Container/start()|",
      "|java+method:///org/sonar/batch/bootstrap/Container/init()|",
      "|java+constructor:///org/sonar/batch/bootstrap/BootstrapContainer/BootstrapContainer(org.sonar.batch.bootstrap.GlobalBatchProperties,java.lang.String,org.sonar.api.batch.bootstrap.ProjectReactor,java.lang.Object%5B%5D)|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/sonar/batch/bootstrap/Container/stop()|",
      "|java+constructor:///org/sonar/batch/bootstrap/GlobalBatchProperties/GlobalBatchProperties(java.util.Map)|"
    ],
    "affectedLib": "org.codehaus.sonar:sonar-core:3.5.1",
    "change": "UPDATED"
  }
]