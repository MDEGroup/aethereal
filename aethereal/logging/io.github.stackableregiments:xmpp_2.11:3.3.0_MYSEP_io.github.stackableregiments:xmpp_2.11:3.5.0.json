[
  {
    "coordinatesV1": "io.github.stackableregiments:xmpp_2.11:3.3.0",
    "coordinatesV2": "io.github.stackableregiments:xmpp_2.11:3.5.0",
    "caller": "|java+constructor:///com/metl/xmpp/XmppConnection/XmppConnection(scala.Function0,java.lang.String,java.lang.String,java.lang.String,scala.Option,scala.Function0,scala.Function0)|",
    "called": "|java+method:///com/metl/utils/SynchronizedWriteMap$/$lessinit$greater$default$3()|",
    "v1Body": [
      "|java+method:///com/metl/xmpp/XmppConnection/credentials()|",
      "|java+method:///com/metl/xmpp/XmppConnection/username()|",
      "|java+method:///org/jivesoftware/smack/ConnectionConfiguration$Builder/setPort(int)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///org/jivesoftware/smack/ConnectionConfiguration$Builder/setSendPresence(boolean)|",
      "|java+method:///org/jivesoftware/smack/tcp/XMPPTCPConnectionConfiguration/builder()|",
      "|java+method:///com/metl/xmpp/XmppConnection/sendPresence()|",
      "|java+method:///org/jivesoftware/smack/ConnectionConfiguration$Builder/setDebuggerEnabled(boolean)|",
      "|java+method:///org/jivesoftware/smack/ConnectionConfiguration$Builder/setResource(java.lang.String)|",
      "|java+method:///com/metl/xmpp/XmppConnection/debug()|",
      "|java+method:///org/jivesoftware/smack/tcp/XMPPTCPConnectionConfiguration$Builder/setServiceName(java.lang.String)|",
      "|java+constructor:///com/metl/utils/SynchronizedWriteMap/SynchronizedWriteMap(scala.collection.mutable.HashMap,boolean,scala.Function1)|",
      "|java+method:///scala/Predef$/Map()|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$1/XmppConnection$$anonfun$1(com.metl.xmpp.XmppConnection)|",
      "|java+method:///com/metl/xmpp/XmppConnection/password()|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Function0/apply()|",
      "|java+method:///com/metl/xmpp/XmppConnection/allowCompression()|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$2/XmppConnection$$anonfun$2(com.metl.xmpp.XmppConnection)|",
      "|java+method:///org/jivesoftware/smack/ConnectionConfiguration$Builder/setHost(java.lang.String)|",
      "|java+method:///com/metl/xmpp/XmppConnection/port()|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$4/XmppConnection$$anonfun$4(com.metl.xmpp.XmppConnection)|",
      "|java+method:///com/metl/xmpp/XmppConnection/domain()|",
      "|java+method:///org/jivesoftware/smack/util/TLSUtils/acceptAllCertificates(org.jivesoftware.smack.ConnectionConfiguration$Builder)|",
      "|java+method:///com/metl/xmpp/XmppConnection/initializeXmpp()|",
      "|java+method:///org/jivesoftware/smack/tcp/XMPPTCPConnectionConfiguration$Builder/setCompressionEnabled(boolean)|",
      "|java+method:///scala/collection/immutable/Map$/empty()|",
      "|java+method:///com/metl/xmpp/XmppConnection/host()|",
      "|java+method:///org/jivesoftware/smack/ConnectionConfiguration$Builder/setUsernameAndPassword(java.lang.CharSequence,java.lang.String)|",
      "|java+method:///org/jivesoftware/smack/tcp/XMPPTCPConnectionConfiguration$Builder/build()|",
      "|java+method:///org/jivesoftware/smack/util/TLSUtils/disableHostnameVerificationForTlsCertificicates(org.jivesoftware.smack.ConnectionConfiguration$Builder)|",
      "|java+method:///com/metl/utils/SynchronizedWriteMap$/$lessinit$greater$default$1()|",
      "|java+constructor:///com/metl/xmpp/XmppConnectionManager/XmppConnectionManager(scala.Function0,scala.Function0,scala.Function0)|",
      "|java+method:///com/metl/utils/SynchronizedWriteMap$/$lessinit$greater$default$2()|",
      "|java+method:///com/metl/xmpp/XmppConnection/resource()|",
      "|java+method:///com/metl/utils/SynchronizedWriteMap$/$lessinit$greater$default$3()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///net/liftweb/common/Logger$class/$init$(net.liftweb.common.Logger)|",
      "|java+method:///com/metl/xmpp/XmppConnection/credentials()|",
      "|java+method:///com/metl/xmpp/XmppConnection/username()|",
      "|java+method:///org/jivesoftware/smack/ConnectionConfiguration$Builder/setPort(int)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///org/jivesoftware/smack/ConnectionConfiguration$Builder/setSendPresence(boolean)|",
      "|java+method:///org/jivesoftware/smack/tcp/XMPPTCPConnectionConfiguration/builder()|",
      "|java+method:///com/metl/xmpp/XmppConnection/sendPresence()|",
      "|java+method:///org/jivesoftware/smack/ConnectionConfiguration$Builder/setDebuggerEnabled(boolean)|",
      "|java+method:///org/jivesoftware/smack/ConnectionConfiguration$Builder/setResource(java.lang.String)|",
      "|java+method:///com/metl/xmpp/XmppConnection/debug()|",
      "|java+method:///org/jivesoftware/smack/tcp/XMPPTCPConnectionConfiguration$Builder/setServiceName(java.lang.String)|",
      "|java+constructor:///com/metl/utils/SynchronizedWriteMap/SynchronizedWriteMap(scala.collection.mutable.HashMap,boolean,scala.Function1)|",
      "|java+method:///scala/Predef$/Map()|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$1/XmppConnection$$anonfun$1(com.metl.xmpp.XmppConnection)|",
      "|java+method:///com/metl/xmpp/XmppConnection/password()|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Function0/apply()|",
      "|java+method:///com/metl/xmpp/XmppConnection/allowCompression()|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$2/XmppConnection$$anonfun$2(com.metl.xmpp.XmppConnection)|",
      "|java+method:///org/jivesoftware/smack/ConnectionConfiguration$Builder/setHost(java.lang.String)|",
      "|java+method:///com/metl/xmpp/XmppConnection/port()|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$4/XmppConnection$$anonfun$4(com.metl.xmpp.XmppConnection)|",
      "|java+method:///com/metl/xmpp/XmppConnection/domain()|",
      "|java+method:///org/jivesoftware/smack/util/TLSUtils/acceptAllCertificates(org.jivesoftware.smack.ConnectionConfiguration$Builder)|",
      "|java+method:///com/metl/xmpp/XmppConnection/initializeXmpp()|",
      "|java+method:///org/jivesoftware/smack/tcp/XMPPTCPConnectionConfiguration$Builder/setCompressionEnabled(boolean)|",
      "|java+method:///scala/collection/immutable/Map$/empty()|",
      "|java+method:///com/metl/xmpp/XmppConnection/host()|",
      "|java+method:///org/jivesoftware/smack/ConnectionConfiguration$Builder/setUsernameAndPassword(java.lang.CharSequence,java.lang.String)|",
      "|java+method:///org/jivesoftware/smack/tcp/XMPPTCPConnectionConfiguration$Builder/build()|",
      "|java+method:///org/jivesoftware/smack/util/TLSUtils/disableHostnameVerificationForTlsCertificicates(org.jivesoftware.smack.ConnectionConfiguration$Builder)|",
      "|java+method:///com/metl/utils/SynchronizedWriteMap$/$lessinit$greater$default$1()|",
      "|java+constructor:///com/metl/xmpp/XmppConnectionManager/XmppConnectionManager(scala.Function0,scala.Function0,scala.Function0)|",
      "|java+method:///com/metl/utils/SynchronizedWriteMap$/$lessinit$greater$default$2()|",
      "|java+method:///com/metl/xmpp/XmppConnection/resource()|",
      "|java+method:///com/metl/utils/SynchronizedWriteMap$/$lessinit$greater$default$3()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "io.github.stackableregiments:common-utils_2.11:0.3.2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.github.stackableregiments:xmpp_2.11:3.3.0",
    "coordinatesV2": "io.github.stackableregiments:xmpp_2.11:3.5.0",
    "caller": "|java+method:///com/metl/xmpp/XmppConnection/mucFor(java.lang.String)|",
    "called": "|java+method:///com/metl/utils/Stopwatch$/time(scala.Function0,scala.Function0)|",
    "v1Body": [
      "|java+method:///com/metl/utils/Stopwatch$/time(java.lang.String,scala.Function0)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$mucFor$1/XmppConnection$$anonfun$mucFor$1(com.metl.xmpp.XmppConnection,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/metl/utils/Stopwatch$/time(scala.Function0,scala.Function0)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$mucFor$1/XmppConnection$$anonfun$mucFor$1(com.metl.xmpp.XmppConnection)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$mucFor$2/XmppConnection$$anonfun$mucFor$2(com.metl.xmpp.XmppConnection,java.lang.String)|"
    ],
    "affectedLib": "io.github.stackableregiments:common-utils_2.11:0.3.2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.github.stackableregiments:xmpp_2.11:3.3.0",
    "coordinatesV2": "io.github.stackableregiments:xmpp_2.11:3.5.0",
    "caller": "|java+method:///com/metl/xmpp/XmppConnection/disconnectFromXmpp()|",
    "called": "|java+method:///com/metl/utils/Stopwatch$/time(scala.Function0,scala.Function0)|",
    "v1Body": [
      "|java+method:///com/metl/utils/Stopwatch$/time(java.lang.String,scala.Function0)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$disconnectFromXmpp$1/XmppConnection$$anonfun$disconnectFromXmpp$1(com.metl.xmpp.XmppConnection)|"
    ],
    "v2Body": [
      "|java+method:///com/metl/utils/Stopwatch$/time(scala.Function0,scala.Function0)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$disconnectFromXmpp$2/XmppConnection$$anonfun$disconnectFromXmpp$2(com.metl.xmpp.XmppConnection)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$disconnectFromXmpp$1/XmppConnection$$anonfun$disconnectFromXmpp$1(com.metl.xmpp.XmppConnection)|"
    ],
    "affectedLib": "io.github.stackableregiments:common-utils_2.11:0.3.2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.github.stackableregiments:xmpp_2.11:3.3.0",
    "coordinatesV2": "io.github.stackableregiments:xmpp_2.11:3.5.0",
    "caller": "|java+method:///com/metl/xmpp/XmppConnection$RemoteSyncListener/processPacket(org.jivesoftware.smack.packet.Stanza)|",
    "called": "|java+method:///com/metl/utils/Stopwatch$/time(scala.Function0,scala.Function0)|",
    "v1Body": [
      "|java+method:///com/metl/utils/Stopwatch$/time(java.lang.String,scala.Function0)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$RemoteSyncListener$$anonfun$processPacket$1/XmppConnection$RemoteSyncListener$$anonfun$processPacket$1(com.metl.xmpp.XmppConnection$RemoteSyncListener,org.jivesoftware.smack.packet.Stanza)|"
    ],
    "v2Body": [
      "|java+method:///com/metl/utils/Stopwatch$/time(scala.Function0,scala.Function0)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$RemoteSyncListener$$anonfun$processPacket$2/XmppConnection$RemoteSyncListener$$anonfun$processPacket$2(com.metl.xmpp.XmppConnection$RemoteSyncListener)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$RemoteSyncListener$$anonfun$processPacket$1/XmppConnection$RemoteSyncListener$$anonfun$processPacket$1(com.metl.xmpp.XmppConnection$RemoteSyncListener,org.jivesoftware.smack.packet.Stanza)|"
    ],
    "affectedLib": "io.github.stackableregiments:common-utils_2.11:0.3.2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.github.stackableregiments:xmpp_2.11:3.3.0",
    "coordinatesV2": "io.github.stackableregiments:xmpp_2.11:3.5.0",
    "caller": "|java+method:///com/metl/xmpp/XmppConnection/register()|",
    "called": "|java+method:///com/metl/utils/Stopwatch$/time(scala.Function0,scala.Function0)|",
    "v1Body": [
      "|java+method:///com/metl/utils/Stopwatch$/time(java.lang.String,scala.Function0)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$register$1/XmppConnection$$anonfun$register$1(com.metl.xmpp.XmppConnection)|"
    ],
    "v2Body": [
      "|java+method:///com/metl/utils/Stopwatch$/time(scala.Function0,scala.Function0)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$register$1/XmppConnection$$anonfun$register$1(com.metl.xmpp.XmppConnection)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$register$2/XmppConnection$$anonfun$register$2(com.metl.xmpp.XmppConnection)|"
    ],
    "affectedLib": "io.github.stackableregiments:common-utils_2.11:0.3.2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.github.stackableregiments:xmpp_2.11:3.3.0",
    "coordinatesV2": "io.github.stackableregiments:xmpp_2.11:3.5.0",
    "caller": "|java+method:///com/metl/xmpp/XmppConnection/connectToXmpp()|",
    "called": "|java+method:///com/metl/utils/Stopwatch$/time(scala.Function0,scala.Function0)|",
    "v1Body": [
      "|java+method:///com/metl/utils/Stopwatch$/time(java.lang.String,scala.Function0)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$connectToXmpp$1/XmppConnection$$anonfun$connectToXmpp$1(com.metl.xmpp.XmppConnection)|"
    ],
    "v2Body": [
      "|java+method:///com/metl/utils/Stopwatch$/time(scala.Function0,scala.Function0)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$connectToXmpp$1/XmppConnection$$anonfun$connectToXmpp$1(com.metl.xmpp.XmppConnection)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$connectToXmpp$2/XmppConnection$$anonfun$connectToXmpp$2(com.metl.xmpp.XmppConnection)|"
    ],
    "affectedLib": "io.github.stackableregiments:common-utils_2.11:0.3.2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.github.stackableregiments:xmpp_2.11:3.3.0",
    "coordinatesV2": "io.github.stackableregiments:xmpp_2.11:3.5.0",
    "caller": "|java+method:///com/metl/xmpp/XmppConnection/joinRoom(java.lang.String,java.lang.String)|",
    "called": "|java+method:///com/metl/utils/Stopwatch$/time(scala.Function0,scala.Function0)|",
    "v1Body": [
      "|java+method:///com/metl/utils/Stopwatch$/time(java.lang.String,scala.Function0)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$joinRoom$1/XmppConnection$$anonfun$joinRoom$1(com.metl.xmpp.XmppConnection,java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/metl/utils/Stopwatch$/time(scala.Function0,scala.Function0)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$joinRoom$2/XmppConnection$$anonfun$joinRoom$2(com.metl.xmpp.XmppConnection,java.lang.String,java.lang.String)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$joinRoom$1/XmppConnection$$anonfun$joinRoom$1(com.metl.xmpp.XmppConnection)|"
    ],
    "affectedLib": "io.github.stackableregiments:common-utils_2.11:0.3.2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.github.stackableregiments:xmpp_2.11:3.3.0",
    "coordinatesV2": "io.github.stackableregiments:xmpp_2.11:3.5.0",
    "caller": "|java+method:///com/metl/xmpp/XmppConnection/initializeXmpp()|",
    "called": "|java+method:///com/metl/utils/Stopwatch$/time(scala.Function0,scala.Function0)|",
    "v1Body": [
      "|java+method:///com/metl/utils/Stopwatch$/time(java.lang.String,scala.Function0)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$initializeXmpp$1/XmppConnection$$anonfun$initializeXmpp$1(com.metl.xmpp.XmppConnection)|"
    ],
    "v2Body": [
      "|java+method:///com/metl/utils/Stopwatch$/time(scala.Function0,scala.Function0)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$initializeXmpp$1/XmppConnection$$anonfun$initializeXmpp$1(com.metl.xmpp.XmppConnection)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$initializeXmpp$2/XmppConnection$$anonfun$initializeXmpp$2(com.metl.xmpp.XmppConnection)|"
    ],
    "affectedLib": "io.github.stackableregiments:common-utils_2.11:0.3.2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.github.stackableregiments:xmpp_2.11:3.3.0",
    "coordinatesV2": "io.github.stackableregiments:xmpp_2.11:3.5.0",
    "caller": "|java+method:///com/metl/xmpp/XmppConnection/sendSimpleMessage(java.lang.String,java.lang.String)|",
    "called": "|java+method:///com/metl/utils/Stopwatch$/time(scala.Function0,scala.Function0)|",
    "v1Body": [
      "|java+method:///com/metl/utils/Stopwatch$/time(java.lang.String,scala.Function0)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$sendSimpleMessage$1/XmppConnection$$anonfun$sendSimpleMessage$1(com.metl.xmpp.XmppConnection,java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/metl/utils/Stopwatch$/time(scala.Function0,scala.Function0)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$sendSimpleMessage$1/XmppConnection$$anonfun$sendSimpleMessage$1(com.metl.xmpp.XmppConnection)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$sendSimpleMessage$2/XmppConnection$$anonfun$sendSimpleMessage$2(com.metl.xmpp.XmppConnection,java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "io.github.stackableregiments:common-utils_2.11:0.3.2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.github.stackableregiments:xmpp_2.11:3.3.0",
    "coordinatesV2": "io.github.stackableregiments:xmpp_2.11:3.5.0",
    "caller": "|java+method:///com/metl/xmpp/XmppConnection$MessageTypeFilter/accept(org.jivesoftware.smack.packet.Stanza)|",
    "called": "|java+method:///com/metl/utils/Stopwatch$/time(scala.Function0,scala.Function0)|",
    "v1Body": [
      "|java+constructor:///com/metl/xmpp/XmppConnection$MessageTypeFilter$$anonfun$accept$1/XmppConnection$MessageTypeFilter$$anonfun$accept$1(com.metl.xmpp.XmppConnection$MessageTypeFilter,org.jivesoftware.smack.packet.Stanza)|",
      "|java+method:///com/metl/utils/Stopwatch$/time(java.lang.String,scala.Function0)|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToBoolean(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///scala/runtime/BoxesRunTime/unboxToBoolean(java.lang.Object)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$MessageTypeFilter$$anonfun$accept$2/XmppConnection$MessageTypeFilter$$anonfun$accept$2(com.metl.xmpp.XmppConnection$MessageTypeFilter)|",
      "|java+method:///com/metl/utils/Stopwatch$/time(scala.Function0,scala.Function0)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$MessageTypeFilter$$anonfun$accept$1/XmppConnection$MessageTypeFilter$$anonfun$accept$1(com.metl.xmpp.XmppConnection$MessageTypeFilter,org.jivesoftware.smack.packet.Stanza)|"
    ],
    "affectedLib": "io.github.stackableregiments:common-utils_2.11:0.3.2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.github.stackableregiments:xmpp_2.11:3.3.0",
    "coordinatesV2": "io.github.stackableregiments:xmpp_2.11:3.5.0",
    "caller": "|java+method:///com/metl/xmpp/XmppConnection/sendMessage(java.lang.String,java.lang.String,java.lang.Object)|",
    "called": "|java+method:///com/metl/utils/Stopwatch$/time(scala.Function0,scala.Function0)|",
    "v1Body": [
      "|java+method:///com/metl/utils/Stopwatch$/time(java.lang.String,scala.Function0)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$sendMessage$1/XmppConnection$$anonfun$sendMessage$1(com.metl.xmpp.XmppConnection,java.lang.String,java.lang.String,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$sendMessage$1/XmppConnection$$anonfun$sendMessage$1(com.metl.xmpp.XmppConnection)|",
      "|java+method:///com/metl/utils/Stopwatch$/time(scala.Function0,scala.Function0)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$sendMessage$2/XmppConnection$$anonfun$sendMessage$2(com.metl.xmpp.XmppConnection,java.lang.String,java.lang.String,java.lang.Object)|"
    ],
    "affectedLib": "io.github.stackableregiments:common-utils_2.11:0.3.2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.github.stackableregiments:xmpp_2.11:3.3.0",
    "coordinatesV2": "io.github.stackableregiments:xmpp_2.11:3.5.0",
    "caller": "|java+method:///com/metl/xmpp/XmppConnection$RemoteSyncListener$$anonfun$processPacket$1$$anonfun$apply$mcV$sp$3/apply(java.lang.Object)|",
    "called": "|java+method:///scala/collection/immutable/List/find(scala.Function1)|",
    "v1Body": [
      "|java+method:///scala/collection/immutable/List/contains(java.lang.Object)|",
      "|java+method:///scala/collection/immutable/List/exists(scala.Function1)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/jivesoftware/smack/packet/ExtensionElement/getElementName()|",
      "|java+method:///com/metl/xmpp/XmppConnection$RemoteSyncListener/com$metl$xmpp$XmppConnection$RemoteSyncListener$$$outer()|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$RemoteSyncListener$$anonfun$processPacket$1$$anonfun$apply$mcV$sp$3$$anonfun$apply$1/XmppConnection$RemoteSyncListener$$anonfun$processPacket$1$$anonfun$apply$mcV$sp$3$$anonfun$apply$1(com.metl.xmpp.XmppConnection$RemoteSyncListener$$anonfun$processPacket$1$$anonfun$apply$mcV$sp$3)|",
      "|java+method:///com/metl/xmpp/XmppConnection/onUntypedMessageRecieved(java.lang.String,java.lang.String)|",
      "|java+method:///com/metl/xmpp/XmppConnection$RemoteSyncListener$$anonfun$processPacket$1$$anonfun$apply$mcV$sp$3/apply(java.lang.Object)|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToBoolean(java.lang.Object)|",
      "|java+method:///com/metl/xmpp/XmppConnection/ignoredTypes()|",
      "|java+method:///com/metl/xmpp/XmppConnection$RemoteSyncListener$$anonfun$processPacket$1/com$metl$xmpp$XmppConnection$RemoteSyncListener$$anonfun$$$outer()|",
      "|java+method:///com/metl/xmpp/XmppConnection/relevantElementNames()|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+method:///org/jivesoftware/smack/packet/ExtensionElement/toXML()|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$RemoteSyncListener$$anonfun$processPacket$1$$anonfun$apply$mcV$sp$3$$anonfun$apply$19/XmppConnection$RemoteSyncListener$$anonfun$processPacket$1$$anonfun$apply$mcV$sp$3$$anonfun$apply$19(com.metl.xmpp.XmppConnection$RemoteSyncListener$$anonfun$processPacket$1$$anonfun$apply$mcV$sp$3,java.lang.String)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$RemoteSyncListener$$anonfun$processPacket$1$$anonfun$apply$mcV$sp$3$$anonfun$apply$18/XmppConnection$RemoteSyncListener$$anonfun$processPacket$1$$anonfun$apply$mcV$sp$3$$anonfun$apply$18(com.metl.xmpp.XmppConnection$RemoteSyncListener$$anonfun$processPacket$1$$anonfun$apply$mcV$sp$3,java.lang.String)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$RemoteSyncListener$$anonfun$processPacket$1$$anonfun$apply$mcV$sp$3$$anonfun$apply$17/XmppConnection$RemoteSyncListener$$anonfun$processPacket$1$$anonfun$apply$mcV$sp$3$$anonfun$apply$17(com.metl.xmpp.XmppConnection$RemoteSyncListener$$anonfun$processPacket$1$$anonfun$apply$mcV$sp$3,java.lang.String)|",
      "|java+method:///com/metl/xmpp/XmppConnection/subscribedTypes()|",
      "|java+method:///scala/collection/immutable/List/find(scala.Function1)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToBoolean(boolean)|",
      "|java+method:///scala/Option/map(scala.Function1)|"
    ],
    "v2Body": [
      "|java+method:///scala/collection/immutable/List/contains(java.lang.Object)|",
      "|java+method:///scala/collection/immutable/List/exists(scala.Function1)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/jivesoftware/smack/packet/ExtensionElement/getElementName()|",
      "|java+method:///com/metl/xmpp/XmppConnection$RemoteSyncListener/com$metl$xmpp$XmppConnection$RemoteSyncListener$$$outer()|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$RemoteSyncListener$$anonfun$processPacket$1$$anonfun$apply$mcV$sp$3$$anonfun$apply$1/XmppConnection$RemoteSyncListener$$anonfun$processPacket$1$$anonfun$apply$mcV$sp$3$$anonfun$apply$1(com.metl.xmpp.XmppConnection$RemoteSyncListener$$anonfun$processPacket$1$$anonfun$apply$mcV$sp$3)|",
      "|java+method:///com/metl/xmpp/XmppConnection/onUntypedMessageRecieved(java.lang.String,java.lang.String)|",
      "|java+method:///com/metl/xmpp/XmppConnection$RemoteSyncListener$$anonfun$processPacket$1$$anonfun$apply$mcV$sp$3/apply(java.lang.Object)|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToBoolean(java.lang.Object)|",
      "|java+method:///com/metl/xmpp/XmppConnection/ignoredTypes()|",
      "|java+method:///com/metl/xmpp/XmppConnection$RemoteSyncListener$$anonfun$processPacket$1/com$metl$xmpp$XmppConnection$RemoteSyncListener$$anonfun$$$outer()|",
      "|java+method:///com/metl/xmpp/XmppConnection/relevantElementNames()|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+method:///org/jivesoftware/smack/packet/ExtensionElement/toXML()|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$RemoteSyncListener$$anonfun$processPacket$1$$anonfun$apply$mcV$sp$3$$anonfun$apply$19/XmppConnection$RemoteSyncListener$$anonfun$processPacket$1$$anonfun$apply$mcV$sp$3$$anonfun$apply$19(com.metl.xmpp.XmppConnection$RemoteSyncListener$$anonfun$processPacket$1$$anonfun$apply$mcV$sp$3,java.lang.String)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$RemoteSyncListener$$anonfun$processPacket$1$$anonfun$apply$mcV$sp$3$$anonfun$apply$21/XmppConnection$RemoteSyncListener$$anonfun$processPacket$1$$anonfun$apply$mcV$sp$3$$anonfun$apply$21(com.metl.xmpp.XmppConnection$RemoteSyncListener$$anonfun$processPacket$1$$anonfun$apply$mcV$sp$3,java.lang.String)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$RemoteSyncListener$$anonfun$processPacket$1$$anonfun$apply$mcV$sp$3$$anonfun$apply$20/XmppConnection$RemoteSyncListener$$anonfun$processPacket$1$$anonfun$apply$mcV$sp$3$$anonfun$apply$20(com.metl.xmpp.XmppConnection$RemoteSyncListener$$anonfun$processPacket$1$$anonfun$apply$mcV$sp$3,java.lang.String)|",
      "|java+method:///com/metl/xmpp/XmppConnection/subscribedTypes()|",
      "|java+method:///scala/collection/immutable/List/find(scala.Function1)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToBoolean(boolean)|",
      "|java+method:///scala/Option/map(scala.Function1)|"
    ],
    "affectedLib": "org.scala-lang:scala-library:2.11.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.github.stackableregiments:xmpp_2.11:3.3.0",
    "coordinatesV2": "io.github.stackableregiments:xmpp_2.11:3.5.0",
    "caller": "|java+constructor:///com/metl/xmpp/XmppConnection/XmppConnection(scala.Function0,java.lang.String,java.lang.String,java.lang.String,scala.Option,scala.Function0,scala.Function0)|",
    "called": "|java+method:///scala/collection/immutable/Map$/empty()|",
    "v1Body": [
      "|java+method:///com/metl/xmpp/XmppConnection/credentials()|",
      "|java+method:///com/metl/xmpp/XmppConnection/username()|",
      "|java+method:///org/jivesoftware/smack/ConnectionConfiguration$Builder/setPort(int)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///org/jivesoftware/smack/ConnectionConfiguration$Builder/setSendPresence(boolean)|",
      "|java+method:///org/jivesoftware/smack/tcp/XMPPTCPConnectionConfiguration/builder()|",
      "|java+method:///com/metl/xmpp/XmppConnection/sendPresence()|",
      "|java+method:///org/jivesoftware/smack/ConnectionConfiguration$Builder/setDebuggerEnabled(boolean)|",
      "|java+method:///org/jivesoftware/smack/ConnectionConfiguration$Builder/setResource(java.lang.String)|",
      "|java+method:///com/metl/xmpp/XmppConnection/debug()|",
      "|java+method:///org/jivesoftware/smack/tcp/XMPPTCPConnectionConfiguration$Builder/setServiceName(java.lang.String)|",
      "|java+constructor:///com/metl/utils/SynchronizedWriteMap/SynchronizedWriteMap(scala.collection.mutable.HashMap,boolean,scala.Function1)|",
      "|java+method:///scala/Predef$/Map()|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$1/XmppConnection$$anonfun$1(com.metl.xmpp.XmppConnection)|",
      "|java+method:///com/metl/xmpp/XmppConnection/password()|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Function0/apply()|",
      "|java+method:///com/metl/xmpp/XmppConnection/allowCompression()|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$2/XmppConnection$$anonfun$2(com.metl.xmpp.XmppConnection)|",
      "|java+method:///org/jivesoftware/smack/ConnectionConfiguration$Builder/setHost(java.lang.String)|",
      "|java+method:///com/metl/xmpp/XmppConnection/port()|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$4/XmppConnection$$anonfun$4(com.metl.xmpp.XmppConnection)|",
      "|java+method:///com/metl/xmpp/XmppConnection/domain()|",
      "|java+method:///org/jivesoftware/smack/util/TLSUtils/acceptAllCertificates(org.jivesoftware.smack.ConnectionConfiguration$Builder)|",
      "|java+method:///com/metl/xmpp/XmppConnection/initializeXmpp()|",
      "|java+method:///org/jivesoftware/smack/tcp/XMPPTCPConnectionConfiguration$Builder/setCompressionEnabled(boolean)|",
      "|java+method:///scala/collection/immutable/Map$/empty()|",
      "|java+method:///com/metl/xmpp/XmppConnection/host()|",
      "|java+method:///org/jivesoftware/smack/ConnectionConfiguration$Builder/setUsernameAndPassword(java.lang.CharSequence,java.lang.String)|",
      "|java+method:///org/jivesoftware/smack/tcp/XMPPTCPConnectionConfiguration$Builder/build()|",
      "|java+method:///org/jivesoftware/smack/util/TLSUtils/disableHostnameVerificationForTlsCertificicates(org.jivesoftware.smack.ConnectionConfiguration$Builder)|",
      "|java+method:///com/metl/utils/SynchronizedWriteMap$/$lessinit$greater$default$1()|",
      "|java+constructor:///com/metl/xmpp/XmppConnectionManager/XmppConnectionManager(scala.Function0,scala.Function0,scala.Function0)|",
      "|java+method:///com/metl/utils/SynchronizedWriteMap$/$lessinit$greater$default$2()|",
      "|java+method:///com/metl/xmpp/XmppConnection/resource()|",
      "|java+method:///com/metl/utils/SynchronizedWriteMap$/$lessinit$greater$default$3()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///net/liftweb/common/Logger$class/$init$(net.liftweb.common.Logger)|",
      "|java+method:///com/metl/xmpp/XmppConnection/credentials()|",
      "|java+method:///com/metl/xmpp/XmppConnection/username()|",
      "|java+method:///org/jivesoftware/smack/ConnectionConfiguration$Builder/setPort(int)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///org/jivesoftware/smack/ConnectionConfiguration$Builder/setSendPresence(boolean)|",
      "|java+method:///org/jivesoftware/smack/tcp/XMPPTCPConnectionConfiguration/builder()|",
      "|java+method:///com/metl/xmpp/XmppConnection/sendPresence()|",
      "|java+method:///org/jivesoftware/smack/ConnectionConfiguration$Builder/setDebuggerEnabled(boolean)|",
      "|java+method:///org/jivesoftware/smack/ConnectionConfiguration$Builder/setResource(java.lang.String)|",
      "|java+method:///com/metl/xmpp/XmppConnection/debug()|",
      "|java+method:///org/jivesoftware/smack/tcp/XMPPTCPConnectionConfiguration$Builder/setServiceName(java.lang.String)|",
      "|java+constructor:///com/metl/utils/SynchronizedWriteMap/SynchronizedWriteMap(scala.collection.mutable.HashMap,boolean,scala.Function1)|",
      "|java+method:///scala/Predef$/Map()|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$1/XmppConnection$$anonfun$1(com.metl.xmpp.XmppConnection)|",
      "|java+method:///com/metl/xmpp/XmppConnection/password()|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Function0/apply()|",
      "|java+method:///com/metl/xmpp/XmppConnection/allowCompression()|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$2/XmppConnection$$anonfun$2(com.metl.xmpp.XmppConnection)|",
      "|java+method:///org/jivesoftware/smack/ConnectionConfiguration$Builder/setHost(java.lang.String)|",
      "|java+method:///com/metl/xmpp/XmppConnection/port()|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$4/XmppConnection$$anonfun$4(com.metl.xmpp.XmppConnection)|",
      "|java+method:///com/metl/xmpp/XmppConnection/domain()|",
      "|java+method:///org/jivesoftware/smack/util/TLSUtils/acceptAllCertificates(org.jivesoftware.smack.ConnectionConfiguration$Builder)|",
      "|java+method:///com/metl/xmpp/XmppConnection/initializeXmpp()|",
      "|java+method:///org/jivesoftware/smack/tcp/XMPPTCPConnectionConfiguration$Builder/setCompressionEnabled(boolean)|",
      "|java+method:///scala/collection/immutable/Map$/empty()|",
      "|java+method:///com/metl/xmpp/XmppConnection/host()|",
      "|java+method:///org/jivesoftware/smack/ConnectionConfiguration$Builder/setUsernameAndPassword(java.lang.CharSequence,java.lang.String)|",
      "|java+method:///org/jivesoftware/smack/tcp/XMPPTCPConnectionConfiguration$Builder/build()|",
      "|java+method:///org/jivesoftware/smack/util/TLSUtils/disableHostnameVerificationForTlsCertificicates(org.jivesoftware.smack.ConnectionConfiguration$Builder)|",
      "|java+method:///com/metl/utils/SynchronizedWriteMap$/$lessinit$greater$default$1()|",
      "|java+constructor:///com/metl/xmpp/XmppConnectionManager/XmppConnectionManager(scala.Function0,scala.Function0,scala.Function0)|",
      "|java+method:///com/metl/utils/SynchronizedWriteMap$/$lessinit$greater$default$2()|",
      "|java+method:///com/metl/xmpp/XmppConnection/resource()|",
      "|java+method:///com/metl/utils/SynchronizedWriteMap$/$lessinit$greater$default$3()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "org.scala-lang:scala-library:2.11.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.github.stackableregiments:xmpp_2.11:3.3.0",
    "coordinatesV2": "io.github.stackableregiments:xmpp_2.11:3.5.0",
    "caller": "|java+method:///com/metl/xmpp/XmppConnection$RemoteSyncListener$$anonfun$processPacket$1$$anonfun$apply$mcV$sp$3$$anonfun$apply$19/apply(java.lang.Object)|",
    "called": "|java+method:///scala/runtime/BoxesRunTime/boxToBoolean(boolean)|",
    "v1Body": [
      "|java+method:///scala/runtime/BoxesRunTime/boxToBoolean(boolean)|",
      "|java+method:///com/metl/xmpp/XmppConnection$RemoteSyncListener$$anonfun$processPacket$1$$anonfun$apply$mcV$sp$3$$anonfun$apply$19/apply(com.metl.xmpp.XmppDataType)|"
    ],
    "v2Body": [
      "|java+method:///scala/runtime/BoxesRunTime/boxToBoolean(boolean)|",
      "|java+method:///com/metl/xmpp/XmppConnection$RemoteSyncListener$$anonfun$processPacket$1$$anonfun$apply$mcV$sp$3$$anonfun$apply$19/apply(java.lang.String)|"
    ],
    "affectedLib": "org.scala-lang:scala-library:2.11.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.github.stackableregiments:xmpp_2.11:3.3.0",
    "coordinatesV2": "io.github.stackableregiments:xmpp_2.11:3.5.0",
    "caller": "|java+method:///com/metl/xmpp/XmppConnection$$anonfun$2/apply$mcV$sp()|",
    "called": "|java+method:///scala/Option/foreach(scala.Function1)|",
    "v1Body": [
      "|java+method:///com/metl/xmpp/XmppConnection/onConnRegained()|",
      "|java+method:///com/metl/xmpp/XmppConnection/com$metl$xmpp$XmppConnection$$conn()|",
      "|java+method:///scala/Option/map(scala.Function1)|",
      "|java+method:///scala/collection/immutable/Map/foreach(scala.Function1)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$2$$anonfun$apply$mcV$sp$2/XmppConnection$$anonfun$2$$anonfun$apply$mcV$sp$2(com.metl.xmpp.XmppConnection$$anonfun$2)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$2$$anonfun$apply$mcV$sp$1/XmppConnection$$anonfun$2$$anonfun$apply$mcV$sp$1(com.metl.xmpp.XmppConnection$$anonfun$2)|",
      "|java+method:///com/metl/xmpp/XmppConnection/rooms()|"
    ],
    "v2Body": [
      "|java+method:///scala/Option/foreach(scala.Function1)|",
      "|java+method:///com/metl/xmpp/XmppConnection/onConnRegained()|",
      "|java+method:///com/metl/xmpp/XmppConnection/com$metl$xmpp$XmppConnection$$conn()|",
      "|java+method:///scala/collection/immutable/Map/foreach(scala.Function1)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$2$$anonfun$apply$mcV$sp$2/XmppConnection$$anonfun$2$$anonfun$apply$mcV$sp$2(com.metl.xmpp.XmppConnection$$anonfun$2)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$$anonfun$2$$anonfun$apply$mcV$sp$1/XmppConnection$$anonfun$2$$anonfun$apply$mcV$sp$1(com.metl.xmpp.XmppConnection$$anonfun$2)|",
      "|java+method:///com/metl/xmpp/XmppConnection/rooms()|"
    ],
    "affectedLib": "org.scala-lang:scala-library:2.11.5",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.github.stackableregiments:xmpp_2.11:3.3.0",
    "coordinatesV2": "io.github.stackableregiments:xmpp_2.11:3.5.0",
    "caller": "|java+method:///com/metl/xmpp/XmppConnection$MessageTypeFilter/accept(org.jivesoftware.smack.packet.Stanza)|",
    "called": "|java+method:///scala/runtime/BoxesRunTime/unboxToBoolean(java.lang.Object)|",
    "v1Body": [
      "|java+constructor:///com/metl/xmpp/XmppConnection$MessageTypeFilter$$anonfun$accept$1/XmppConnection$MessageTypeFilter$$anonfun$accept$1(com.metl.xmpp.XmppConnection$MessageTypeFilter,org.jivesoftware.smack.packet.Stanza)|",
      "|java+method:///com/metl/utils/Stopwatch$/time(java.lang.String,scala.Function0)|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToBoolean(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///scala/runtime/BoxesRunTime/unboxToBoolean(java.lang.Object)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$MessageTypeFilter$$anonfun$accept$2/XmppConnection$MessageTypeFilter$$anonfun$accept$2(com.metl.xmpp.XmppConnection$MessageTypeFilter)|",
      "|java+method:///com/metl/utils/Stopwatch$/time(scala.Function0,scala.Function0)|",
      "|java+constructor:///com/metl/xmpp/XmppConnection$MessageTypeFilter$$anonfun$accept$1/XmppConnection$MessageTypeFilter$$anonfun$accept$1(com.metl.xmpp.XmppConnection$MessageTypeFilter,org.jivesoftware.smack.packet.Stanza)|"
    ],
    "affectedLib": "org.scala-lang:scala-library:2.11.5",
    "change": "UPDATED"
  }
]