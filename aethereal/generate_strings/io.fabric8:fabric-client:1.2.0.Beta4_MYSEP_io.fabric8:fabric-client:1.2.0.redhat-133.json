[
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder/empty(org.apache.commons.codec.language.bm.Languages$LanguageSet)|",
    "called": "|java+constructor:///org/apache/commons/codec/language/bm/Rule$Phoneme/Rule$Phoneme(java.lang.CharSequence,org.apache.commons.codec.language.bm.Languages$LanguageSet)|",
    "v1Body": [
      "|java+constructor:///org/apache/commons/codec/language/bm/Rule$Phoneme/Rule$Phoneme(java.lang.CharSequence,org.apache.commons.codec.language.bm.Languages$LanguageSet)|",
      "|java+constructor:///org/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder/PhoneticEngine$PhonemeBuilder(java.util.Set)|",
      "|java+method:///java/util/Collections/singleton(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/commons/codec/language/bm/Rule$Phoneme/Rule$Phoneme(java.lang.CharSequence,org.apache.commons.codec.language.bm.Languages$LanguageSet)|",
      "|java+constructor:///org/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder/PhoneticEngine$PhonemeBuilder(org.apache.commons.codec.language.bm.Rule$Phoneme)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/binary/Hex/encode(java.lang.Object)|",
    "called": "|java+method:///org/apache/commons/codec/binary/Hex/encodeHex(byte%5B%5D)|",
    "v1Body": [
      "|java+method:///org/apache/commons/codec/binary/Hex/getCharsetName()|",
      "|java+method:///org/apache/commons/codec/binary/Hex/encodeHex(byte%5B%5D)|",
      "|java+method:///java/lang/ClassCastException/getMessage()|",
      "|java+constructor:///org/apache/commons/codec/EncoderException/EncoderException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/String/getBytes(java.lang.String)|",
      "|java+method:///java/io/UnsupportedEncodingException/getMessage()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/codec/binary/Hex/encodeHex(byte%5B%5D)|",
      "|java+method:///java/lang/ClassCastException/getMessage()|",
      "|java+constructor:///org/apache/commons/codec/EncoderException/EncoderException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/String/getBytes(java.nio.charset.Charset)|",
      "|java+method:///org/apache/commons/codec/binary/Hex/getCharset()|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)|",
    "called": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char,char)|",
    "v1Body": [
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/appendAlternate(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char,char)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/appendAlternate(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char,char)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)|",
    "called": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
    "v1Body": [
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/charAt(java.lang.String,int)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/appendAlternate(char)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/charAt(java.lang.String,int)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/appendAlternate(char)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/language/bm/Rule$Phoneme/join(org.apache.commons.codec.language.bm.Rule$Phoneme)|",
    "called": "|java+constructor:///org/apache/commons/codec/language/bm/Rule$Phoneme/Rule$Phoneme(java.lang.CharSequence,org.apache.commons.codec.language.bm.Languages$LanguageSet)|",
    "v1Body": [
      "|java+constructor:///org/apache/commons/codec/language/bm/Rule$Phoneme/Rule$Phoneme(java.lang.CharSequence,org.apache.commons.codec.language.bm.Languages$LanguageSet)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/commons/codec/language/bm/Languages$LanguageSet/restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet)|",
      "|java+method:///java/lang/Object/toString()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/codec/language/bm/Languages$LanguageSet/restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet)|",
      "|java+constructor:///org/apache/commons/codec/language/bm/Rule$Phoneme/Rule$Phoneme(java.lang.CharSequence,org.apache.commons.codec.language.bm.Languages$LanguageSet)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/conn/ssl/SSLSocketFactory/connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)|",
    "called": "|java+method:///org/apache/http/conn/ssl/SSLSocketFactory/connectSocket(int,java.net.Socket,org.apache.http.HttpHost,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.protocol.HttpContext)|",
    "v1Body": [
      "|java+method:///java/net/InetSocketAddress/getHostName()|",
      "|java+method:///org/apache/http/conn/HttpInetSocketAddress/getHttpHost()|",
      "|java+constructor:///org/apache/http/HttpHost/HttpHost(java.lang.String,int,java.lang.String)|",
      "|java+method:///org/apache/http/params/HttpConnectionParams/getConnectionTimeout(org.apache.http.params.HttpParams)|",
      "|java+method:///java/net/InetSocketAddress/getPort()|",
      "|java+method:///org/apache/http/util/Args/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///org/apache/http/conn/ssl/SSLSocketFactory/connectSocket(int,java.net.Socket,org.apache.http.HttpHost,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.protocol.HttpContext)|"
    ],
    "v2Body": [
      "|java+method:///java/net/InetSocketAddress/getHostName()|",
      "|java+method:///org/apache/http/conn/HttpInetSocketAddress/getHttpHost()|",
      "|java+constructor:///org/apache/http/HttpHost/HttpHost(java.lang.String,int,java.lang.String)|",
      "|java+method:///org/apache/http/params/HttpConnectionParams/getSoTimeout(org.apache.http.params.HttpParams)|",
      "|java+method:///org/apache/http/params/HttpConnectionParams/getConnectionTimeout(org.apache.http.params.HttpParams)|",
      "|java+method:///java/net/InetSocketAddress/getPort()|",
      "|java+method:///java/net/Socket/setSoTimeout(int)|",
      "|java+method:///org/apache/http/util/Args/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///org/apache/http/conn/ssl/SSLSocketFactory/connectSocket(int,java.net.Socket,org.apache.http.HttpHost,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.protocol.HttpContext)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/client/fluent/Request/Options(java.net.URI)|",
    "called": "|java+constructor:///org/apache/http/client/fluent/Request/Request(org.apache.http.client.fluent.InternalHttpRequest)|",
    "v1Body": [
      "|java+constructor:///org/apache/http/client/fluent/Request/Request(java.lang.String,java.net.URI)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/http/client/fluent/InternalHttpRequest/InternalHttpRequest(java.lang.String,java.net.URI)|",
      "|java+constructor:///org/apache/http/client/fluent/Request/Request(org.apache.http.client.fluent.InternalHttpRequest)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)|",
    "called": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char,char)|",
    "v1Body": [
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/conditionCH0(java.lang.String,int)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/conditionCH1(java.lang.String,int)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char,char)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/conditionCH0(java.lang.String,int)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/conditionCH1(java.lang.String,int)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char,char)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/digest/DigestUtils/md5(java.lang.String)|",
    "called": "|java+method:///org/apache/commons/codec/digest/DigestUtils/md5(byte%5B%5D)|",
    "v1Body": [
      "|java+method:///org/apache/commons/codec/digest/DigestUtils/getBytesUtf8(java.lang.String)|",
      "|java+method:///org/apache/commons/codec/digest/DigestUtils/md5(byte%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/codec/binary/StringUtils/getBytesUtf8(java.lang.String)|",
      "|java+method:///org/apache/commons/codec/digest/DigestUtils/md5(byte%5B%5D)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/client/methods/AbstractExecutionAwareRequest/clone()|",
    "called": "|java+method:///org/apache/http/client/utils/CloneUtils/cloneObject(java.lang.Object)|",
    "v1Body": [
      "|java+constructor:///java/util/concurrent/locks/ReentrantLock/ReentrantLock()|",
      "|java+method:///org/apache/http/client/utils/CloneUtils/cloneObject(java.lang.Object)|",
      "|java+method:///java/lang/Object/clone()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/http/client/utils/CloneUtils/cloneObject(java.lang.Object)|",
      "|java+method:///java/lang/Object/clone()|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/digest/DigestUtils/sha256(java.lang.String)|",
    "called": "|java+method:///org/apache/commons/codec/binary/StringUtils/getBytesUtf8(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/commons/codec/digest/DigestUtils/sha256(byte%5B%5D)|",
      "|java+method:///org/apache/commons/codec/digest/DigestUtils/getBytesUtf8(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/codec/binary/StringUtils/getBytesUtf8(java.lang.String)|",
      "|java+method:///org/apache/commons/codec/digest/DigestUtils/sha256(byte%5B%5D)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder/append(java.lang.CharSequence)|",
    "called": "|java+method:///org/apache/commons/codec/language/bm/Rule$Phoneme/append(java.lang.CharSequence)|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/commons/codec/language/bm/Rule$Phoneme/append(java.lang.CharSequence)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+constructor:///org/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder/PhoneticEngine$PhonemeBuilder(java.util.Set)|",
      "|java+method:///java/util/Set/iterator()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/commons/codec/language/bm/Rule$Phoneme/append(java.lang.CharSequence)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)|",
    "called": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
    "v1Body": [
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(java.lang.String)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/conditionL0(java.lang.String,int)|",
    "called": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String%5B%5D)|",
    "v1Body": [
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String%5B%5D)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+constructor:///org/apache/http/impl/conn/PoolingHttpClientConnectionManager/PoolingHttpClientConnectionManager(org.apache.http.impl.conn.CPool,org.apache.http.config.Lookup,org.apache.http.conn.SchemePortResolver,org.apache.http.conn.DnsResolver)|",
    "called": "|java+constructor:///org/apache/http/impl/conn/HttpClientConnectionOperator/HttpClientConnectionOperator(org.apache.http.config.Lookup,org.apache.http.conn.SchemePortResolver,org.apache.http.conn.DnsResolver)|",
    "v1Body": [
      "|java+constructor:///org/apache/http/impl/conn/PoolingHttpClientConnectionManager$ConfigData/PoolingHttpClientConnectionManager$ConfigData()|",
      "|java+constructor:///org/apache/http/impl/conn/HttpClientConnectionOperator/HttpClientConnectionOperator(org.apache.http.config.Lookup,org.apache.http.conn.SchemePortResolver,org.apache.http.conn.DnsResolver)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/apache/commons/logging/LogFactory/getLog(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/http/impl/conn/PoolingHttpClientConnectionManager$ConfigData/PoolingHttpClientConnectionManager$ConfigData()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicBoolean/AtomicBoolean(boolean)|",
      "|java+constructor:///org/apache/http/impl/conn/HttpClientConnectionOperator/HttpClientConnectionOperator(org.apache.http.config.Lookup,org.apache.http.conn.SchemePortResolver,org.apache.http.conn.DnsResolver)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/apache/commons/logging/LogFactory/getLog(java.lang.Class)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/impl/conn/BasicHttpClientConnectionManager/shutdown()|",
    "called": "|java+method:///org/apache/http/impl/conn/BasicHttpClientConnectionManager/shutdownConnection()|",
    "v1Body": [
      "|java+method:///org/apache/http/impl/conn/BasicHttpClientConnectionManager/shutdownConnection()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/http/impl/conn/BasicHttpClientConnectionManager/shutdownConnection()|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/compareAndSet(boolean,boolean)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/client/fluent/Request/Post(java.net.URI)|",
    "called": "|java+constructor:///org/apache/http/client/fluent/Request/Request(org.apache.http.client.fluent.InternalHttpRequest)|",
    "v1Body": [
      "|java+constructor:///org/apache/http/client/fluent/Request/Request(java.lang.String,java.net.URI)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/http/client/fluent/InternalEntityEnclosingHttpRequest/InternalEntityEnclosingHttpRequest(java.lang.String,java.net.URI)|",
      "|java+constructor:///org/apache/http/client/fluent/Request/Request(org.apache.http.client.fluent.InternalHttpRequest)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+constructor:///org/apache/http/entity/mime/content/StringBody/StringBody(java.lang.String,org.apache.http.entity.ContentType)|",
    "called": "|java+constructor:///org/apache/http/entity/mime/content/AbstractContentBody/AbstractContentBody(org.apache.http.entity.ContentType)|",
    "v1Body": [
      "|java+method:///org/apache/http/entity/ContentType/getCharset()|",
      "|java+constructor:///java/nio/charset/UnsupportedCharsetException/UnsupportedCharsetException(java.lang.String)|",
      "|java+method:///java/nio/charset/Charset/name()|",
      "|java+method:///java/lang/String/getBytes(java.lang.String)|",
      "|java+constructor:///org/apache/http/entity/mime/content/AbstractContentBody/AbstractContentBody(org.apache.http.entity.ContentType)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/http/util/Args/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///org/apache/http/entity/ContentType/getCharset()|",
      "|java+constructor:///java/nio/charset/UnsupportedCharsetException/UnsupportedCharsetException(java.lang.String)|",
      "|java+method:///java/nio/charset/Charset/name()|",
      "|java+method:///java/lang/String/getBytes(java.lang.String)|",
      "|java+constructor:///org/apache/http/entity/mime/content/AbstractContentBody/AbstractContentBody(org.apache.http.entity.ContentType)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)|",
    "called": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char,char)|",
    "v1Body": [
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/isVowel(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/charAt(java.lang.String,int)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char,char)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/isVowel(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/charAt(java.lang.String,int)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char,char)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)|",
    "called": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
    "v1Body": [
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(java.lang.String)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/conn/ssl/SSLConnectionSocketFactory/createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.http.protocol.HttpContext)|",
    "called": "|java+method:///org/apache/http/conn/ssl/SSLConnectionSocketFactory/verifyHostname(javax.net.ssl.SSLSocket,java.lang.String)|",
    "v1Body": [
      "|java+method:///javax/net/ssl/SSLSocketFactory/createSocket(java.net.Socket,java.lang.String,int,boolean)|",
      "|java+method:///org/apache/http/conn/ssl/SSLConnectionSocketFactory/prepareSocket(javax.net.ssl.SSLSocket)|",
      "|java+method:///javax/net/ssl/SSLSocket/startHandshake()|",
      "|java+method:///javax/net/ssl/SSLSocket/setEnabledProtocols(java.lang.String%5B%5D)|",
      "|java+method:///javax/net/ssl/SSLSocket/setEnabledCipherSuites(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/http/conn/ssl/SSLConnectionSocketFactory/verifyHostname(javax.net.ssl.SSLSocket,java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///org/apache/http/conn/ssl/SSLConnectionSocketFactory/prepareSocket(javax.net.ssl.SSLSocket)|",
      "|java+method:///javax/net/ssl/SSLSocket/startHandshake()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///javax/net/ssl/SSLSocket/setEnabledProtocols(java.lang.String%5B%5D)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///javax/net/ssl/SSLSocket/getSupportedProtocols()|",
      "|java+method:///javax/net/ssl/SSLSocketFactory/createSocket(java.net.Socket,java.lang.String,int,boolean)|",
      "|java+method:///javax/net/ssl/SSLSocket/setEnabledCipherSuites(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/http/conn/ssl/SSLConnectionSocketFactory/verifyHostname(javax.net.ssl.SSLSocket,java.lang.String)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/client/fluent/Request/Post(java.lang.String)|",
    "called": "|java+constructor:///org/apache/http/client/fluent/Request/Request(org.apache.http.client.fluent.InternalHttpRequest)|",
    "v1Body": [
      "|java+constructor:///org/apache/http/client/fluent/Request/Request(java.lang.String,java.net.URI)|",
      "|java+method:///java/net/URI/create(java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/http/client/fluent/InternalEntityEnclosingHttpRequest/InternalEntityEnclosingHttpRequest(java.lang.String,java.net.URI)|",
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+constructor:///org/apache/http/client/fluent/Request/Request(org.apache.http.client.fluent.InternalHttpRequest)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)|",
    "called": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
    "v1Body": [
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/charAt(java.lang.String,int)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/charAt(java.lang.String,int)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(java.lang.String)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+constructor:///org/apache/http/impl/conn/PoolingHttpClientConnectionManager/PoolingHttpClientConnectionManager(org.apache.http.config.Registry,org.apache.http.conn.HttpConnectionFactory,org.apache.http.conn.SchemePortResolver,org.apache.http.conn.DnsResolver,long,java.util.concurrent.TimeUnit)|",
    "called": "|java+constructor:///org/apache/http/impl/conn/HttpClientConnectionOperator/HttpClientConnectionOperator(org.apache.http.config.Lookup,org.apache.http.conn.SchemePortResolver,org.apache.http.conn.DnsResolver)|",
    "v1Body": [
      "|java+constructor:///org/apache/http/impl/conn/PoolingHttpClientConnectionManager$ConfigData/PoolingHttpClientConnectionManager$ConfigData()|",
      "|java+constructor:///org/apache/http/impl/conn/HttpClientConnectionOperator/HttpClientConnectionOperator(org.apache.http.config.Lookup,org.apache.http.conn.SchemePortResolver,org.apache.http.conn.DnsResolver)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+constructor:///org/apache/http/impl/conn/PoolingHttpClientConnectionManager$InternalConnectionFactory/PoolingHttpClientConnectionManager$InternalConnectionFactory(org.apache.http.impl.conn.PoolingHttpClientConnectionManager$ConfigData,org.apache.http.conn.HttpConnectionFactory)|",
      "|java+constructor:///org/apache/http/impl/conn/CPool/CPool(org.apache.http.pool.ConnFactory,int,int,long,java.util.concurrent.TimeUnit)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/apache/commons/logging/LogFactory/getLog(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/http/impl/conn/PoolingHttpClientConnectionManager$ConfigData/PoolingHttpClientConnectionManager$ConfigData()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicBoolean/AtomicBoolean(boolean)|",
      "|java+constructor:///org/apache/http/impl/conn/HttpClientConnectionOperator/HttpClientConnectionOperator(org.apache.http.config.Lookup,org.apache.http.conn.SchemePortResolver,org.apache.http.conn.DnsResolver)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+constructor:///org/apache/http/impl/conn/PoolingHttpClientConnectionManager$InternalConnectionFactory/PoolingHttpClientConnectionManager$InternalConnectionFactory(org.apache.http.impl.conn.PoolingHttpClientConnectionManager$ConfigData,org.apache.http.conn.HttpConnectionFactory)|",
      "|java+constructor:///org/apache/http/impl/conn/CPool/CPool(org.apache.http.pool.ConnFactory,int,int,long,java.util.concurrent.TimeUnit)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/apache/commons/logging/LogFactory/getLog(java.lang.Class)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)|",
    "called": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char,char)|",
    "v1Body": [
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/isVowel(char)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/charAt(java.lang.String,int)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char,char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/isVowel(char)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/charAt(java.lang.String,int)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char,char)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/language/bm/Rule/parseRules(java.util.Scanner,java.lang.String)|",
    "called": "|java+method:///org/apache/commons/codec/language/bm/Rule/stripQuotes(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+constructor:///org/apache/commons/codec/language/bm/Rule$2/Rule$2(java.lang.String,java.lang.String,java.lang.String,org.apache.commons.codec.language.bm.Rule$PhonemeExpr,int,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/bm/Rule/createScanner(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/commons/codec/language/bm/Rule/parsePhonemeExpr(java.lang.String)|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///java/util/Scanner/nextLine()|",
      "|java+method:///java/lang/String/substring(int,int)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/lang/String/contains(java.lang.CharSequence)|",
      "|java+method:///org/apache/commons/codec/language/bm/Rule/parseRules(java.util.Scanner,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///java/util/Scanner/hasNextLine()|",
      "|java+method:///java/lang/String/length()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/indexOf(java.lang.String)|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///org/apache/commons/codec/language/bm/Rule/stripQuotes(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/bm/Rule/createScanner(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///java/util/Map/putAll(java.util.Map)|",
      "|java+method:///org/apache/commons/codec/language/bm/Rule/parsePhonemeExpr(java.lang.String)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/Scanner/nextLine()|",
      "|java+method:///java/lang/String/substring(int,int)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/lang/String/contains(java.lang.CharSequence)|",
      "|java+method:///org/apache/commons/codec/language/bm/Rule/parseRules(java.util.Scanner,java.lang.String)|",
      "|java+constructor:///org/apache/commons/codec/language/bm/Rule$2/Rule$2(java.lang.String,java.lang.String,java.lang.String,org.apache.commons.codec.language.bm.Rule$PhonemeExpr,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///java/util/Scanner/hasNextLine()|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/indexOf(java.lang.String)|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///org/apache/commons/codec/language/bm/Rule/stripQuotes(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/isDoubleMetaphoneEqual(java.lang.String,java.lang.String,boolean)|",
    "called": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/doubleMetaphone(java.lang.String,boolean)|",
    "v1Body": [
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/doubleMetaphone(java.lang.String,boolean)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/codec/binary/StringUtils/equals(java.lang.CharSequence,java.lang.CharSequence)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/doubleMetaphone(java.lang.String,boolean)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+constructor:///org/apache/http/impl/cookie/NetscapeDraftSpec/NetscapeDraftSpec(java.lang.String%5B%5D)|",
    "called": "|java+constructor:///org/apache/http/impl/cookie/NetscapeDomainHandler/NetscapeDomainHandler()|",
    "v1Body": [
      "|java+constructor:///org/apache/http/impl/cookie/NetscapeDomainHandler/NetscapeDomainHandler()|",
      "|java+constructor:///org/apache/http/impl/cookie/BasicExpiresHandler/BasicExpiresHandler(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/http/impl/cookie/NetscapeDraftSpec/registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler)|",
      "|java+method:///%5BLjava/lang/String;/clone()|",
      "|java+constructor:///org/apache/http/impl/cookie/BasicCommentHandler/BasicCommentHandler()|",
      "|java+constructor:///org/apache/http/impl/cookie/BasicSecureHandler/BasicSecureHandler()|",
      "|java+constructor:///org/apache/http/impl/cookie/CookieSpecBase/CookieSpecBase()|",
      "|java+constructor:///org/apache/http/impl/cookie/BasicMaxAgeHandler/BasicMaxAgeHandler()|",
      "|java+constructor:///org/apache/http/impl/cookie/BasicPathHandler/BasicPathHandler()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/http/impl/cookie/NetscapeDomainHandler/NetscapeDomainHandler()|",
      "|java+constructor:///org/apache/http/impl/cookie/BasicExpiresHandler/BasicExpiresHandler(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/http/impl/cookie/NetscapeDraftSpec/registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler)|",
      "|java+method:///%5BLjava/lang/String;/clone()|",
      "|java+constructor:///org/apache/http/impl/cookie/BasicCommentHandler/BasicCommentHandler()|",
      "|java+constructor:///org/apache/http/impl/cookie/BasicSecureHandler/BasicSecureHandler()|",
      "|java+constructor:///org/apache/http/impl/cookie/CookieSpecBase/CookieSpecBase()|",
      "|java+constructor:///org/apache/http/impl/cookie/BasicPathHandler/BasicPathHandler()|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/language/bm/Lang/loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)|",
    "called": "|java+constructor:///org/apache/commons/codec/language/bm/Lang$LangRule/Lang$LangRule(java.util.regex.Pattern,java.util.Set,boolean,org.apache.commons.codec.language.bm.Lang$1)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+constructor:///java/util/Scanner/Scanner(java.io.InputStream,java.lang.String)|",
      "|java+method:///java/lang/String/substring(int,int)|",
      "|java+method:///java/lang/ClassLoader/getResourceAsStream(java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+constructor:///java/util/HashSet/HashSet(java.util.Collection)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/compile(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///java/util/Scanner/hasNextLine()|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/util/Scanner/nextLine()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/indexOf(java.lang.String)|",
      "|java+method:///java/lang/Class/getClassLoader()|",
      "|java+constructor:///org/apache/commons/codec/language/bm/Lang$LangRule/Lang$LangRule(java.util.regex.Pattern,java.util.Set,boolean,org.apache.commons.codec.language.bm.Lang$1)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|",
      "|java+constructor:///org/apache/commons/codec/language/bm/Lang/Lang(java.util.List,org.apache.commons.codec.language.bm.Languages)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+constructor:///java/util/Scanner/Scanner(java.io.InputStream,java.lang.String)|",
      "|java+method:///java/lang/String/substring(int,int)|",
      "|java+method:///java/lang/ClassLoader/getResourceAsStream(java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+constructor:///java/util/HashSet/HashSet(java.util.Collection)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///java/util/Scanner/close()|",
      "|java+method:///java/util/regex/Pattern/compile(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///java/util/Scanner/hasNextLine()|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/util/Scanner/nextLine()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/indexOf(java.lang.String)|",
      "|java+method:///java/lang/Class/getClassLoader()|",
      "|java+constructor:///org/apache/commons/codec/language/bm/Lang$LangRule/Lang$LangRule(java.util.regex.Pattern,java.util.Set,boolean,org.apache.commons.codec.language.bm.Lang$1)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|",
      "|java+constructor:///org/apache/commons/codec/language/bm/Lang/Lang(java.util.List,org.apache.commons.codec.language.bm.Languages)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/impl/conn/DefaultRoutePlanner/determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)|",
    "called": "|java+method:///org/apache/http/client/protocol/HttpClientContext/getRequestConfig()|",
    "v1Body": [
      "|java+constructor:///org/apache/http/conn/routing/HttpRoute/HttpRoute(org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.HttpHost,boolean)|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/apache/http/impl/conn/DefaultRoutePlanner/determineProxy(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/client/protocol/HttpClientContext/adapt(org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/util/Args/notNull(java.lang.Object,java.lang.String)|",
      "|java+constructor:///org/apache/http/conn/routing/HttpRoute/HttpRoute(org.apache.http.HttpHost,java.net.InetAddress,boolean)|",
      "|java+method:///org/apache/http/HttpHost/getSchemeName()|",
      "|java+method:///org/apache/http/conn/UnsupportedSchemeException/getMessage()|",
      "|java+method:///org/apache/http/HttpHost/getHostName()|",
      "|java+method:///org/apache/http/conn/SchemePortResolver/resolve(org.apache.http.HttpHost)|",
      "|java+method:///org/apache/http/client/config/RequestConfig/getLocalAddress()|",
      "|java+method:///org/apache/http/HttpHost/getPort()|",
      "|java+constructor:///org/apache/http/HttpHost/HttpHost(java.lang.String,int,java.lang.String)|",
      "|java+method:///org/apache/http/client/config/RequestConfig/getProxy()|",
      "|java+constructor:///org/apache/http/HttpException/HttpException(java.lang.String)|",
      "|java+method:///org/apache/http/client/protocol/HttpClientContext/getRequestConfig()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/http/conn/routing/HttpRoute/HttpRoute(org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.HttpHost,boolean)|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/apache/http/impl/conn/DefaultRoutePlanner/determineProxy(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/client/protocol/HttpClientContext/adapt(org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/util/Args/notNull(java.lang.Object,java.lang.String)|",
      "|java+constructor:///org/apache/http/conn/routing/HttpRoute/HttpRoute(org.apache.http.HttpHost,java.net.InetAddress,boolean)|",
      "|java+method:///org/apache/http/HttpHost/getSchemeName()|",
      "|java+method:///org/apache/http/conn/UnsupportedSchemeException/getMessage()|",
      "|java+method:///org/apache/http/HttpHost/getHostName()|",
      "|java+method:///org/apache/http/conn/SchemePortResolver/resolve(org.apache.http.HttpHost)|",
      "|java+method:///org/apache/http/client/config/RequestConfig/getLocalAddress()|",
      "|java+method:///org/apache/http/HttpHost/getPort()|",
      "|java+constructor:///org/apache/http/HttpHost/HttpHost(java.lang.String,int,java.lang.String)|",
      "|java+method:///org/apache/http/client/config/RequestConfig/getProxy()|",
      "|java+constructor:///org/apache/http/ProtocolException/ProtocolException(java.lang.String)|",
      "|java+constructor:///org/apache/http/HttpException/HttpException(java.lang.String)|",
      "|java+method:///org/apache/http/client/protocol/HttpClientContext/getRequestConfig()|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)|",
    "called": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char,char)|",
    "v1Body": [
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char,char)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char,char)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+initializer:///org/apache/commons/codec/language/bm/Lang/Lang$initializer|",
    "called": "|java+method:///org/apache/commons/codec/language/bm/Languages/getInstance(org.apache.commons.codec.language.bm.NameType)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/commons/codec/language/bm/NameType/values()|",
      "|java+constructor:///java/util/EnumMap/EnumMap(java.lang.Class)|",
      "|java+method:///org/apache/commons/codec/language/bm/Lang/loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)|",
      "|java+method:///org/apache/commons/codec/language/bm/Languages/getInstance(org.apache.commons.codec.language.bm.NameType)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/commons/codec/language/bm/NameType/values()|",
      "|java+constructor:///java/util/EnumMap/EnumMap(java.lang.Class)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/commons/codec/language/bm/Lang/loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)|",
      "|java+method:///org/apache/commons/codec/language/bm/Languages/getInstance(org.apache.commons.codec.language.bm.NameType)|",
      "|java+method:///org/apache/commons/codec/language/bm/NameType/getName()|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/digest/DigestUtils/sha384(java.lang.String)|",
    "called": "|java+method:///org/apache/commons/codec/digest/DigestUtils/sha384(byte%5B%5D)|",
    "v1Body": [
      "|java+method:///org/apache/commons/codec/digest/DigestUtils/sha384(byte%5B%5D)|",
      "|java+method:///org/apache/commons/codec/digest/DigestUtils/getBytesUtf8(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/codec/binary/StringUtils/getBytesUtf8(java.lang.String)|",
      "|java+method:///org/apache/commons/codec/digest/DigestUtils/sha384(byte%5B%5D)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/client/fluent/Request/Head(java.net.URI)|",
    "called": "|java+constructor:///org/apache/http/client/fluent/Request/Request(org.apache.http.client.fluent.InternalHttpRequest)|",
    "v1Body": [
      "|java+constructor:///org/apache/http/client/fluent/Request/Request(java.lang.String,java.net.URI)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/http/client/fluent/InternalHttpRequest/InternalHttpRequest(java.lang.String,java.net.URI)|",
      "|java+constructor:///org/apache/http/client/fluent/Request/Request(org.apache.http.client.fluent.InternalHttpRequest)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)|",
    "called": "|java+method:///org/apache/commons/codec/language/bm/PhoneticEngine$RulesApplication/invoke()|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/bm/PhoneticEngine$RulesApplication/invoke()|",
      "|java+method:///org/apache/commons/codec/language/bm/PhoneticEngine/join(java.lang.Iterable,java.lang.String)|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/commons/codec/language/bm/PhoneticEngine/applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.List)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/lang/String/substring(int,int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/commons/codec/language/bm/PhoneticEngine$RulesApplication/PhoneticEngine$RulesApplication(java.util.List,java.lang.CharSequence,org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/commons/codec/language/bm/Rule/getInstance(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,org.apache.commons.codec.language.bm.Languages$LanguageSet)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/substring(int)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/commons/codec/language/bm/NameType/ordinal()|",
      "|java+method:///java/lang/CharSequence/length()|",
      "|java+method:///org/apache/commons/codec/language/bm/PhoneticEngine$RulesApplication/getI()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///java/util/List/removeAll(java.util.Collection)|",
      "|java+method:///org/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder/empty(org.apache.commons.codec.language.bm.Languages$LanguageSet)|",
      "|java+method:///java/lang/String/toLowerCase(java.util.Locale)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/commons/codec/language/bm/PhoneticEngine$RulesApplication/getPhonemeBuilder()|",
      "|java+method:///org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///java/lang/String/replace(char,char)|",
      "|java+method:///org/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder/makeString()|",
      "|java+method:///org/apache/commons/codec/language/bm/Rule/getInstance(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/commons/codec/language/bm/PhoneticEngine/cacheSubSequence(java.lang.CharSequence)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/codec/language/bm/Rule/getInstanceMap(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,org.apache.commons.codec.language.bm.Languages$LanguageSet)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/bm/PhoneticEngine$RulesApplication/invoke()|",
      "|java+method:///org/apache/commons/codec/language/bm/PhoneticEngine/join(java.lang.Iterable,java.lang.String)|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/lang/String/substring(int,int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/commons/codec/language/bm/PhoneticEngine$RulesApplication/PhoneticEngine$RulesApplication(java.util.Map,java.lang.CharSequence,org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,int,int)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/substring(int)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/commons/codec/language/bm/NameType/ordinal()|",
      "|java+method:///org/apache/commons/codec/language/bm/PhoneticEngine$RulesApplication/getI()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///java/util/List/removeAll(java.util.Collection)|",
      "|java+method:///org/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder/empty(org.apache.commons.codec.language.bm.Languages$LanguageSet)|",
      "|java+method:///java/lang/String/toLowerCase(java.util.Locale)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/commons/codec/language/bm/PhoneticEngine$RulesApplication/getPhonemeBuilder()|",
      "|java+method:///org/apache/commons/codec/language/bm/PhoneticEngine/encode(java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///java/lang/String/replace(char,char)|",
      "|java+method:///org/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder/makeString()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/commons/codec/language/bm/Rule/getInstanceMap(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/bm/PhoneticEngine/applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/client/fluent/Request/Put(java.net.URI)|",
    "called": "|java+constructor:///org/apache/http/client/fluent/Request/Request(org.apache.http.client.fluent.InternalHttpRequest)|",
    "v1Body": [
      "|java+constructor:///org/apache/http/client/fluent/Request/Request(java.lang.String,java.net.URI)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/http/client/fluent/InternalEntityEnclosingHttpRequest/InternalEntityEnclosingHttpRequest(java.lang.String,java.net.URI)|",
      "|java+constructor:///org/apache/http/client/fluent/Request/Request(org.apache.http.client.fluent.InternalHttpRequest)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/conditionCH1(java.lang.String,int)|",
    "called": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String%5B%5D)|",
    "v1Body": [
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String%5B%5D)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/impl/auth/RFC2617Scheme/parseChallenge(org.apache.http.util.CharArrayBuffer,int,int)|",
    "called": "|java+constructor:///org/apache/http/auth/MalformedChallengeException/MalformedChallengeException(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/http/auth/MalformedChallengeException/MalformedChallengeException(java.lang.String)|",
      "|java+method:///org/apache/http/HeaderElement/getValue()|",
      "|java+constructor:///org/apache/http/message/ParserCursor/ParserCursor(int,int)|",
      "|java+method:///org/apache/http/util/CharArrayBuffer/length()|",
      "|java+method:///org/apache/http/HeaderElement/getName()|",
      "|java+method:///org/apache/http/message/HeaderValueParser/parseElements(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)|",
      "|java+method:///java/util/Map/clear()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/http/auth/MalformedChallengeException/MalformedChallengeException(java.lang.String)|",
      "|java+method:///org/apache/http/HeaderElement/getValue()|",
      "|java+constructor:///org/apache/http/message/ParserCursor/ParserCursor(int,int)|",
      "|java+method:///org/apache/http/util/CharArrayBuffer/length()|",
      "|java+method:///org/apache/http/message/HeaderValueParser/parseElements(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)|",
      "|java+method:///java/util/Map/clear()|",
      "|java+method:///java/lang/String/toLowerCase(java.util.Locale)|",
      "|java+method:///org/apache/http/HeaderElement/getName()|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/impl/execchain/MinimalClientExec/execute(org.apache.http.conn.routing.HttpRoute,org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.client.protocol.HttpClientContext,org.apache.http.client.methods.HttpExecutionAware)|",
    "called": "|java+constructor:///org/apache/http/impl/execchain/ConnectionHolder/ConnectionHolder(org.apache.commons.logging.Log,org.apache.http.conn.HttpClientConnectionManager,org.apache.http.HttpClientConnection)|",
    "v1Body": [
      "|java+method:///org/apache/http/conn/routing/HttpRoute/getTargetHost()|",
      "|java+method:///org/apache/http/client/protocol/HttpClientContext/setAttribute(java.lang.String,java.lang.Object)|",
      "|java+constructor:///org/apache/http/impl/execchain/ConnectionHolder/ConnectionHolder(org.apache.commons.logging.Log,org.apache.http.conn.HttpClientConnectionManager,org.apache.http.HttpClientConnection)|",
      "|java+method:///org/apache/http/client/methods/HttpUriRequest/getURI()|",
      "|java+method:///org/apache/http/ConnectionReuseStrategy/keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/conn/ConnectionRequest/cancel()|",
      "|java+method:///org/apache/http/conn/HttpClientConnectionManager/connect(org.apache.http.HttpClientConnection,org.apache.http.conn.routing.HttpRoute,int,org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/impl/execchain/ConnectionHolder/setValidFor(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///java/util/concurrent/ExecutionException/getCause()|",
      "|java+method:///java/net/URI/getPort()|",
      "|java+method:///org/apache/http/protocol/HttpProcessor/process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/impl/execchain/ConnectionHolder/releaseConnection()|",
      "|java+method:///org/apache/http/impl/execchain/ConnectionHolder/markReusable()|",
      "|java+method:///org/apache/http/protocol/HttpRequestExecutor/execute(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/HttpClientConnection/isOpen()|",
      "|java+method:///org/apache/http/HttpResponse/getEntity()|",
      "|java+method:///org/apache/http/impl/execchain/ConnectionHolder/abortConnection()|",
      "|java+method:///org/apache/http/HttpClientConnection/setSocketTimeout(int)|",
      "|java+method:///org/apache/http/util/Args/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///org/apache/http/protocol/HttpProcessor/process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/conn/ConnectionRequest/get(long,java.util.concurrent.TimeUnit)|",
      "|java+constructor:///org/apache/http/HttpHost/HttpHost(java.lang.String,int,java.lang.String)|",
      "|java+method:///org/apache/http/client/config/RequestConfig/getSocketTimeout()|",
      "|java+method:///org/apache/http/client/config/RequestConfig/getConnectionRequestTimeout()|",
      "|java+method:///org/apache/http/conn/HttpClientConnectionManager/requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)|",
      "|java+method:///org/apache/http/client/protocol/HttpClientContext/getRequestConfig()|",
      "|java+method:///org/apache/http/conn/ConnectionKeepAliveStrategy/getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/impl/execchain/ConnectionHolder/close()|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///java/lang/Thread/interrupt()|",
      "|java+constructor:///org/apache/http/impl/execchain/RequestAbortedException/RequestAbortedException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///org/apache/http/impl/execchain/RequestAbortedException/RequestAbortedException(java.lang.String)|",
      "|java+method:///org/apache/http/client/methods/HttpRequestWrapper/getOriginal()|",
      "|java+method:///org/apache/http/client/methods/HttpExecutionAware/isAborted()|",
      "|java+method:///org/apache/http/client/methods/HttpExecutionAware/setCancellable(org.apache.http.concurrent.Cancellable)|",
      "|java+constructor:///java/io/InterruptedIOException/InterruptedIOException(java.lang.String)|",
      "|java+method:///org/apache/http/client/config/RequestConfig/getConnectTimeout()|",
      "|java+method:///java/io/InterruptedIOException/initCause(java.lang.Throwable)|",
      "|java+method:///java/net/URI/getScheme()|",
      "|java+method:///java/net/URI/getHost()|",
      "|java+method:///org/apache/http/impl/execchain/Proxies/enhanceResponse(org.apache.http.HttpResponse,org.apache.http.impl.execchain.ConnectionHolder)|",
      "|java+method:///org/apache/http/impl/execchain/MinimalClientExec/rewriteRequestURI(org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.conn.routing.HttpRoute)|",
      "|java+method:///org/apache/http/conn/HttpClientConnectionManager/routeComplete(org.apache.http.HttpClientConnection,org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext)|",
      "|java+method:///java/net/URI/isAbsolute()|",
      "|java+method:///org/apache/http/impl/execchain/ConnectionHolder/markNonReusable()|",
      "|java+method:///org/apache/http/HttpEntity/isStreaming()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/http/conn/routing/HttpRoute/getTargetHost()|",
      "|java+method:///org/apache/http/client/protocol/HttpClientContext/setAttribute(java.lang.String,java.lang.Object)|",
      "|java+constructor:///org/apache/http/impl/execchain/ConnectionHolder/ConnectionHolder(org.apache.commons.logging.Log,org.apache.http.conn.HttpClientConnectionManager,org.apache.http.HttpClientConnection)|",
      "|java+method:///org/apache/http/client/methods/HttpUriRequest/getURI()|",
      "|java+method:///org/apache/http/ConnectionReuseStrategy/keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/conn/ConnectionRequest/cancel()|",
      "|java+method:///org/apache/http/conn/HttpClientConnectionManager/connect(org.apache.http.HttpClientConnection,org.apache.http.conn.routing.HttpRoute,int,org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/impl/execchain/ConnectionHolder/setValidFor(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///java/util/concurrent/ExecutionException/getCause()|",
      "|java+method:///java/net/URI/getPort()|",
      "|java+method:///org/apache/http/protocol/HttpProcessor/process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)|",
      "|java+method:///java/net/URI/getHost()|",
      "|java+method:///org/apache/http/impl/execchain/ConnectionHolder/releaseConnection()|",
      "|java+method:///org/apache/http/impl/execchain/ConnectionHolder/markReusable()|",
      "|java+method:///org/apache/http/protocol/HttpRequestExecutor/execute(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/HttpClientConnection/isOpen()|",
      "|java+method:///org/apache/http/HttpResponse/getEntity()|",
      "|java+method:///org/apache/http/impl/execchain/ConnectionHolder/abortConnection()|",
      "|java+method:///org/apache/http/HttpClientConnection/setSocketTimeout(int)|",
      "|java+method:///org/apache/http/util/Args/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///org/apache/http/protocol/HttpProcessor/process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/conn/ConnectionRequest/get(long,java.util.concurrent.TimeUnit)|",
      "|java+constructor:///org/apache/http/HttpHost/HttpHost(java.lang.String,int,java.lang.String)|",
      "|java+method:///org/apache/http/client/config/RequestConfig/getSocketTimeout()|",
      "|java+method:///org/apache/http/client/config/RequestConfig/getConnectionRequestTimeout()|",
      "|java+method:///org/apache/http/conn/HttpClientConnectionManager/requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)|",
      "|java+method:///org/apache/http/client/protocol/HttpClientContext/getRequestConfig()|",
      "|java+method:///org/apache/http/conn/ConnectionKeepAliveStrategy/getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/impl/execchain/ConnectionHolder/close()|",
      "|java+constructor:///org/apache/http/impl/execchain/HttpResponseProxy/HttpResponseProxy(org.apache.http.HttpResponse,org.apache.http.impl.execchain.ConnectionHolder)|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///java/lang/Thread/interrupt()|",
      "|java+constructor:///org/apache/http/impl/execchain/RequestAbortedException/RequestAbortedException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///org/apache/http/impl/execchain/RequestAbortedException/RequestAbortedException(java.lang.String)|",
      "|java+method:///org/apache/http/client/methods/HttpRequestWrapper/getOriginal()|",
      "|java+method:///org/apache/http/client/methods/HttpExecutionAware/isAborted()|",
      "|java+method:///org/apache/http/client/methods/HttpExecutionAware/setCancellable(org.apache.http.concurrent.Cancellable)|",
      "|java+constructor:///java/io/InterruptedIOException/InterruptedIOException(java.lang.String)|",
      "|java+method:///org/apache/http/client/config/RequestConfig/getConnectTimeout()|",
      "|java+method:///java/io/InterruptedIOException/initCause(java.lang.Throwable)|",
      "|java+method:///java/net/URI/getScheme()|",
      "|java+method:///org/apache/http/impl/execchain/MinimalClientExec/rewriteRequestURI(org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.conn.routing.HttpRoute)|",
      "|java+method:///org/apache/http/conn/HttpClientConnectionManager/routeComplete(org.apache.http.HttpClientConnection,org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext)|",
      "|java+method:///java/net/URI/isAbsolute()|",
      "|java+method:///org/apache/http/impl/execchain/ConnectionHolder/markNonReusable()|",
      "|java+method:///org/apache/http/HttpEntity/isStreaming()|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)|",
    "called": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
    "v1Body": [
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/charAt(java.lang.String,int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/charAt(java.lang.String,int)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/binary/BaseNCodecOutputStream/write(byte%5B%5D,int,int)|",
    "called": "|java+method:///org/apache/commons/codec/binary/BaseNCodecOutputStream/flush(boolean)|",
    "v1Body": [
      "|java+method:///org/apache/commons/codec/binary/BaseNCodec/encode(byte%5B%5D,int,int)|",
      "|java+constructor:///java/lang/IndexOutOfBoundsException/IndexOutOfBoundsException()|",
      "|java+method:///org/apache/commons/codec/binary/BaseNCodec/decode(byte%5B%5D,int,int)|",
      "|java+method:///org/apache/commons/codec/binary/BaseNCodecOutputStream/flush(boolean)|",
      "|java+constructor:///java/lang/NullPointerException/NullPointerException()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/codec/binary/BaseNCodec/decode(byte%5B%5D,int,int,org.apache.commons.codec.binary.BaseNCodec$Context)|",
      "|java+constructor:///java/lang/IndexOutOfBoundsException/IndexOutOfBoundsException()|",
      "|java+constructor:///java/lang/NullPointerException/NullPointerException()|",
      "|java+method:///org/apache/commons/codec/binary/BaseNCodecOutputStream/flush(boolean)|",
      "|java+method:///org/apache/commons/codec/binary/BaseNCodec/encode(byte%5B%5D,int,int,org.apache.commons.codec.binary.BaseNCodec$Context)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/client/fluent/Request/Get(java.lang.String)|",
    "called": "|java+constructor:///org/apache/http/client/fluent/Request/Request(org.apache.http.client.fluent.InternalHttpRequest)|",
    "v1Body": [
      "|java+constructor:///org/apache/http/client/fluent/Request/Request(java.lang.String,java.net.URI)|",
      "|java+method:///java/net/URI/create(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+constructor:///org/apache/http/client/fluent/InternalHttpRequest/InternalHttpRequest(java.lang.String,java.net.URI)|",
      "|java+constructor:///org/apache/http/client/fluent/Request/Request(org.apache.http.client.fluent.InternalHttpRequest)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/conn/ssl/AbstractVerifier/getCNs(java.security.cert.X509Certificate)|",
    "called": "|java+method:///org/apache/http/conn/ssl/AbstractVerifier/extractCNs(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///java/util/LinkedList/isEmpty()|",
      "|java+method:///javax/security/auth/x500/X500Principal/toString()|",
      "|java+method:///java/util/LinkedList/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/security/cert/X509Certificate/getSubjectX500Principal()|",
      "|java+method:///java/util/LinkedList/add(java.lang.Object)|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///java/lang/String/substring(int,int)|",
      "|java+method:///java/util/LinkedList/size()|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///java/util/StringTokenizer/nextToken()|",
      "|java+method:///java/util/StringTokenizer/hasMoreTokens()|",
      "|java+constructor:///java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/trim()|"
    ],
    "v2Body": [
      "|java+method:///javax/security/auth/x500/X500Principal/toString()|",
      "|java+method:///java/security/cert/X509Certificate/getSubjectX500Principal()|",
      "|java+method:///org/apache/http/conn/ssl/AbstractVerifier/extractCNs(java.lang.String)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/conditionC0(java.lang.String,int)|",
    "called": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String%5B%5D)|",
    "v1Body": [
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/isVowel(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/charAt(java.lang.String,int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/isVowel(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/charAt(java.lang.String,int)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/impl/conn/BasicHttpClientConnectionManager/closeIdleConnections(long,java.util.concurrent.TimeUnit)|",
    "called": "|java+method:///org/apache/http/impl/conn/BasicHttpClientConnectionManager/closeConnection()|",
    "v1Body": [
      "|java+method:///java/util/concurrent/TimeUnit/toMillis(long)|",
      "|java+method:///org/apache/http/util/Args/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///org/apache/http/impl/conn/BasicHttpClientConnectionManager/closeConnection()|",
      "|java+method:///java/lang/System/currentTimeMillis()|"
    ],
    "v2Body": [
      "|java+method:///java/util/concurrent/TimeUnit/toMillis(long)|",
      "|java+method:///org/apache/http/util/Args/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/get()|",
      "|java+method:///org/apache/http/impl/conn/BasicHttpClientConnectionManager/closeConnection()|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/binary/BaseNCodecOutputStream/close()|",
    "called": "|java+method:///org/apache/commons/codec/binary/BaseNCodecOutputStream/flush()|",
    "v1Body": [
      "|java+method:///org/apache/commons/codec/binary/BaseNCodecOutputStream/flush()|",
      "|java+method:///org/apache/commons/codec/binary/BaseNCodec/decode(byte%5B%5D,int,int)|",
      "|java+method:///java/io/OutputStream/close()|",
      "|java+method:///org/apache/commons/codec/binary/BaseNCodec/encode(byte%5B%5D,int,int)|"
    ],
    "v2Body": [
      "|java+method:///java/io/OutputStream/close()|",
      "|java+method:///org/apache/commons/codec/binary/BaseNCodecOutputStream/flush()|",
      "|java+method:///org/apache/commons/codec/binary/BaseNCodec/decode(byte%5B%5D,int,int,org.apache.commons.codec.binary.BaseNCodec$Context)|",
      "|java+method:///org/apache/commons/codec/binary/BaseNCodec/encode(byte%5B%5D,int,int,org.apache.commons.codec.binary.BaseNCodec$Context)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/impl/conn/BasicHttpClientConnectionManager/closeExpiredConnections()|",
    "called": "|java+method:///org/apache/http/impl/conn/BasicHttpClientConnectionManager/checkExpiry()|",
    "v1Body": [
      "|java+method:///org/apache/http/impl/conn/BasicHttpClientConnectionManager/checkExpiry()|"
    ],
    "v2Body": [
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/get()|",
      "|java+method:///org/apache/http/impl/conn/BasicHttpClientConnectionManager/checkExpiry()|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/language/RefinedSoundex/soundex(java.lang.String)|",
    "called": "|java+method:///org/apache/commons/codec/language/SoundexUtils/clean(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/String/charAt(int)|",
      "|java+method:///java/lang/StringBuffer/append(char)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/apache/commons/codec/language/RefinedSoundex/getMappingCode(char)|",
      "|java+method:///java/lang/StringBuffer/toString()|",
      "|java+constructor:///java/lang/StringBuffer/StringBuffer()|",
      "|java+method:///org/apache/commons/codec/language/SoundexUtils/clean(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/String/charAt(int)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/apache/commons/codec/language/RefinedSoundex/getMappingCode(char)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(char)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/commons/codec/language/SoundexUtils/clean(java.lang.String)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/impl/conn/CPoolProxy/newProxy(org.apache.http.impl.conn.CPoolEntry)|",
    "called": "|java+constructor:///org/apache/http/impl/conn/CPoolProxy/CPoolProxy(org.apache.http.impl.conn.CPoolEntry)|",
    "v1Body": [
      "|java+method:///java/lang/reflect/Proxy/newProxyInstance(java.lang.ClassLoader,java.lang.Class%5B%5D,java.lang.reflect.InvocationHandler)|",
      "|java+constructor:///org/apache/http/impl/conn/CPoolProxy/CPoolProxy(org.apache.http.impl.conn.CPoolEntry)|",
      "|java+method:///java/lang/Class/getClassLoader()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/http/impl/conn/CPoolProxy/CPoolProxy(org.apache.http.impl.conn.CPoolEntry)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)|",
    "called": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char,char)|",
    "v1Body": [
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/conditionC0(java.lang.String,int)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/charAt(java.lang.String,int)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char,char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/conditionC0(java.lang.String,int)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/charAt(java.lang.String,int)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char,char)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+constructor:///org/apache/http/impl/conn/BasicHttpClientConnectionManager/BasicHttpClientConnectionManager(org.apache.http.config.Lookup,org.apache.http.conn.HttpConnectionFactory,org.apache.http.conn.SchemePortResolver,org.apache.http.conn.DnsResolver)|",
    "called": "|java+constructor:///org/apache/http/impl/conn/HttpClientConnectionOperator/HttpClientConnectionOperator(org.apache.http.config.Lookup,org.apache.http.conn.SchemePortResolver,org.apache.http.conn.DnsResolver)|",
    "v1Body": [
      "|java+constructor:///org/apache/http/impl/conn/HttpClientConnectionOperator/HttpClientConnectionOperator(org.apache.http.config.Lookup,org.apache.http.conn.SchemePortResolver,org.apache.http.conn.DnsResolver)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/apache/commons/logging/LogFactory/getLog(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/concurrent/atomic/AtomicBoolean/AtomicBoolean(boolean)|",
      "|java+constructor:///org/apache/http/impl/conn/HttpClientConnectionOperator/HttpClientConnectionOperator(org.apache.http.config.Lookup,org.apache.http.conn.SchemePortResolver,org.apache.http.conn.DnsResolver)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/apache/commons/logging/LogFactory/getLog(java.lang.Class)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/binary/Hex/decode(byte%5B%5D)|",
    "called": "|java+method:///org/apache/commons/codec/binary/Hex/decodeHex(char%5B%5D)|",
    "v1Body": [
      "|java+method:///org/apache/commons/codec/binary/Hex/decodeHex(char%5B%5D)|",
      "|java+method:///org/apache/commons/codec/binary/Hex/getCharsetName()|",
      "|java+constructor:///java/lang/String/String(byte%5B%5D,java.lang.String)|",
      "|java+constructor:///org/apache/commons/codec/DecoderException/DecoderException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/String/toCharArray()|",
      "|java+method:///java/io/UnsupportedEncodingException/getMessage()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/codec/binary/Hex/decodeHex(char%5B%5D)|",
      "|java+constructor:///java/lang/String/String(byte%5B%5D,java.nio.charset.Charset)|",
      "|java+method:///java/lang/String/toCharArray()|",
      "|java+method:///org/apache/commons/codec/binary/Hex/getCharset()|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/impl/cookie/BrowserCompatSpec/parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin)|",
    "called": "|java+method:///org/apache/http/impl/cookie/BasicClientCookie/setDomain(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/lang/String/length()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/http/impl/cookie/BrowserCompatSpec/parse(org.apache.http.HeaderElement%5B%5D,org.apache.http.cookie.CookieOrigin)|",
      "|java+method:///org/apache/http/Header/getElements()|",
      "|java+method:///org/apache/http/util/CharArrayBuffer/append(java.lang.String)|",
      "|java+method:///org/apache/http/FormattedHeader/getValuePos()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/http/util/Args/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/http/Header/getValue()|",
      "|java+constructor:///org/apache/http/message/ParserCursor/ParserCursor(int,int)|",
      "|java+constructor:///org/apache/http/util/CharArrayBuffer/CharArrayBuffer(int)|",
      "|java+method:///org/apache/http/util/CharArrayBuffer/length()|",
      "|java+method:///org/apache/http/Header/getName()|",
      "|java+constructor:///org/apache/http/cookie/MalformedCookieException/MalformedCookieException(java.lang.String)|",
      "|java+method:///org/apache/http/impl/cookie/NetscapeDraftHeaderParser/parseHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)|",
      "|java+method:///org/apache/http/FormattedHeader/getBuffer()|",
      "|java+method:///org/apache/http/HeaderElement/getParameterByName(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/http/impl/cookie/BrowserCompatSpec/getDefaultPath(org.apache.http.cookie.CookieOrigin)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/apache/http/HeaderElement/getValue()|",
      "|java+method:///org/apache/http/HeaderElement/getParameters()|",
      "|java+method:///org/apache/http/util/TextUtils/isBlank(java.lang.CharSequence)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/http/Header/getElements()|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///org/apache/http/util/CharArrayBuffer/append(java.lang.String)|",
      "|java+method:///org/apache/http/NameValuePair/getName()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/apache/http/impl/cookie/BrowserCompatSpec/getDefaultDomain(org.apache.http.cookie.CookieOrigin)|",
      "|java+method:///org/apache/http/impl/cookie/BasicClientCookie/setAttribute(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/http/impl/cookie/BrowserCompatSpec/findAttribHandler(java.lang.String)|",
      "|java+constructor:///org/apache/http/impl/cookie/BasicClientCookie/BasicClientCookie(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/http/util/Args/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/http/Header/getValue()|",
      "|java+method:///org/apache/http/impl/cookie/BasicClientCookie/setVersion(int)|",
      "|java+constructor:///org/apache/http/message/ParserCursor/ParserCursor(int,int)|",
      "|java+constructor:///org/apache/http/util/CharArrayBuffer/CharArrayBuffer(int)|",
      "|java+method:///org/apache/http/util/CharArrayBuffer/length()|",
      "|java+method:///org/apache/http/Header/getName()|",
      "|java+method:///java/lang/String/toLowerCase(java.util.Locale)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/apache/http/HeaderElement/getName()|",
      "|java+constructor:///org/apache/http/cookie/MalformedCookieException/MalformedCookieException(java.lang.String)|",
      "|java+method:///org/apache/http/impl/cookie/NetscapeDraftHeaderParser/parseHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)|",
      "|java+method:///org/apache/http/cookie/CookieAttributeHandler/parse(org.apache.http.cookie.SetCookie,java.lang.String)|",
      "|java+method:///org/apache/http/impl/cookie/BrowserCompatSpec/parse(org.apache.http.HeaderElement%5B%5D,org.apache.http.cookie.CookieOrigin)|",
      "|java+method:///org/apache/http/NameValuePair/getValue()|",
      "|java+method:///org/apache/http/FormattedHeader/getBuffer()|",
      "|java+method:///org/apache/http/HeaderElement/getParameterByName(java.lang.String)|",
      "|java+method:///org/apache/http/impl/cookie/BasicClientCookie/setDomain(java.lang.String)|",
      "|java+method:///org/apache/http/FormattedHeader/getValuePos()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/http/impl/cookie/BasicClientCookie/setPath(java.lang.String)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/client/methods/AbstractExecutionAwareRequest/setReleaseTrigger(org.apache.http.conn.ConnectionReleaseTrigger)|",
    "called": "|java+method:///org/apache/http/client/methods/AbstractExecutionAwareRequest/setCancellable(org.apache.http.concurrent.Cancellable)|",
    "v1Body": [
      "|java+method:///java/util/concurrent/locks/Lock/unlock()|",
      "|java+method:///java/util/concurrent/locks/Lock/lock()|",
      "|java+constructor:///org/apache/http/client/methods/AbstractExecutionAwareRequest$2/AbstractExecutionAwareRequest$2(org.apache.http.client.methods.AbstractExecutionAwareRequest,org.apache.http.conn.ConnectionReleaseTrigger)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/http/client/methods/AbstractExecutionAwareRequest/setCancellable(org.apache.http.concurrent.Cancellable)|",
      "|java+constructor:///org/apache/http/client/methods/AbstractExecutionAwareRequest$2/AbstractExecutionAwareRequest$2(org.apache.http.client.methods.AbstractExecutionAwareRequest,org.apache.http.conn.ConnectionReleaseTrigger)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)|",
    "called": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char,char)|",
    "v1Body": [
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/isVowel(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/charAt(java.lang.String,int)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char,char)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/isVowel(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/charAt(java.lang.String,int)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char,char)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/binary/Hex/encode(byte%5B%5D)|",
    "called": "|java+method:///org/apache/commons/codec/binary/Hex/encodeHexString(byte%5B%5D)|",
    "v1Body": [
      "|java+method:///org/apache/commons/codec/binary/Hex/getCharsetName()|",
      "|java+method:///org/apache/commons/codec/binary/StringUtils/getBytesUnchecked(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/binary/Hex/encodeHexString(byte%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/String/getBytes(java.nio.charset.Charset)|",
      "|java+method:///org/apache/commons/codec/binary/Hex/getCharset()|",
      "|java+method:///org/apache/commons/codec/binary/Hex/encodeHexString(byte%5B%5D)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/client/fluent/Request/Put(java.lang.String)|",
    "called": "|java+constructor:///org/apache/http/client/fluent/Request/Request(org.apache.http.client.fluent.InternalHttpRequest)|",
    "v1Body": [
      "|java+constructor:///org/apache/http/client/fluent/Request/Request(java.lang.String,java.net.URI)|",
      "|java+method:///java/net/URI/create(java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/http/client/fluent/InternalEntityEnclosingHttpRequest/InternalEntityEnclosingHttpRequest(java.lang.String,java.net.URI)|",
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+constructor:///org/apache/http/client/fluent/Request/Request(org.apache.http.client.fluent.InternalHttpRequest)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/impl/execchain/RetryExec/execute(org.apache.http.conn.routing.HttpRoute,org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.client.protocol.HttpClientContext,org.apache.http.client.methods.HttpExecutionAware)|",
    "called": "|java+constructor:///org/apache/http/client/NonRepeatableRequestException/NonRepeatableRequestException(java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/apache/http/conn/routing/HttpRoute/getTargetHost()|",
      "|java+method:///org/apache/http/client/methods/HttpRequestWrapper/getAllHeaders()|",
      "|java+method:///org/apache/commons/logging/Log/isInfoEnabled()|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/apache/commons/logging/Log/info(java.lang.Object)|",
      "|java+method:///org/apache/http/client/methods/HttpExecutionAware/isAborted()|",
      "|java+method:///org/apache/http/NoHttpResponseException/setStackTrace(java.lang.StackTraceElement%5B%5D)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/apache/http/util/Args/notNull(java.lang.Object,java.lang.String)|",
      "|java+constructor:///org/apache/http/NoHttpResponseException/NoHttpResponseException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/IOException/getStackTrace()|",
      "|java+method:///java/io/IOException/getMessage()|",
      "|java+method:///org/apache/http/client/methods/HttpRequestWrapper/setHeaders(org.apache.http.Header%5B%5D)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///org/apache/http/impl/execchain/Proxies/isRepeatable(org.apache.http.HttpRequest)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/http/impl/execchain/ClientExecChain/execute(org.apache.http.conn.routing.HttpRoute,org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.client.protocol.HttpClientContext,org.apache.http.client.methods.HttpExecutionAware)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+constructor:///org/apache/http/client/NonRepeatableRequestException/NonRepeatableRequestException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/http/HttpHost/toHostString()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/http/client/HttpRequestRetryHandler/retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/http/client/methods/HttpRequestWrapper/getAllHeaders()|",
      "|java+method:///org/apache/commons/logging/Log/isInfoEnabled()|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/apache/commons/logging/Log/info(java.lang.Object)|",
      "|java+method:///org/apache/http/client/methods/HttpExecutionAware/isAborted()|",
      "|java+method:///org/apache/http/NoHttpResponseException/setStackTrace(java.lang.StackTraceElement%5B%5D)|",
      "|java+method:///org/apache/http/impl/execchain/RequestEntityProxy/isRepeatable(org.apache.http.HttpRequest)|",
      "|java+method:///org/apache/http/conn/routing/HttpRoute/getTargetHost()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/apache/http/util/Args/notNull(java.lang.Object,java.lang.String)|",
      "|java+constructor:///org/apache/http/NoHttpResponseException/NoHttpResponseException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/IOException/getStackTrace()|",
      "|java+method:///java/io/IOException/getMessage()|",
      "|java+method:///org/apache/http/client/methods/HttpRequestWrapper/setHeaders(org.apache.http.Header%5B%5D)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/http/impl/execchain/ClientExecChain/execute(org.apache.http.conn.routing.HttpRoute,org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.client.protocol.HttpClientContext,org.apache.http.client.methods.HttpExecutionAware)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+constructor:///org/apache/http/client/NonRepeatableRequestException/NonRepeatableRequestException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/http/HttpHost/toHostString()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/http/client/HttpRequestRetryHandler/retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/language/bm/Languages/getInstance(java.lang.String)|",
    "called": "|java+constructor:///org/apache/commons/codec/language/bm/Languages/Languages(java.util.Set)|",
    "v1Body": [
      "|java+method:///java/util/Scanner/nextLine()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/ClassLoader/getResourceAsStream(java.lang.String)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/lang/Class/getClassLoader()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///java/util/Scanner/hasNextLine()|",
      "|java+method:///java/lang/String/length()|",
      "|java+constructor:///java/util/Scanner/Scanner(java.io.InputStream,java.lang.String)|",
      "|java+constructor:///org/apache/commons/codec/language/bm/Languages/Languages(java.util.Set)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///java/util/Collections/unmodifiableSet(java.util.Set)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Scanner/close()|",
      "|java+method:///java/util/Scanner/nextLine()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/ClassLoader/getResourceAsStream(java.lang.String)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/lang/Class/getClassLoader()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///java/util/Scanner/hasNextLine()|",
      "|java+method:///java/lang/String/length()|",
      "|java+constructor:///java/util/Scanner/Scanner(java.io.InputStream,java.lang.String)|",
      "|java+constructor:///org/apache/commons/codec/language/bm/Languages/Languages(java.util.Set)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///java/util/Collections/unmodifiableSet(java.util.Set)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)|",
    "called": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char,char)|",
    "v1Body": [
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/isVowel(char)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/charAt(java.lang.String,int)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/appendAlternate(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char,char)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/isVowel(char)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/charAt(java.lang.String,int)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/appendAlternate(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char,char)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/impl/conn/BasicHttpClientConnectionManager/getConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)|",
    "called": "|java+method:///org/apache/http/impl/conn/BasicHttpClientConnectionManager/checkExpiry()|",
    "v1Body": [
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/apache/http/conn/HttpConnectionFactory/create(java.lang.Object,org.apache.http.config.ConnectionConfig)|",
      "|java+method:///org/apache/http/util/LangUtils/equals(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/http/impl/conn/BasicHttpClientConnectionManager/checkExpiry()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/http/util/Asserts/check(boolean,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/http/impl/conn/BasicHttpClientConnectionManager/closeConnection()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/apache/http/conn/HttpConnectionFactory/create(java.lang.Object,org.apache.http.config.ConnectionConfig)|",
      "|java+method:///org/apache/http/util/LangUtils/equals(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/http/impl/conn/BasicHttpClientConnectionManager/checkExpiry()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/http/util/Asserts/check(boolean,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/get()|",
      "|java+method:///org/apache/http/impl/conn/BasicHttpClientConnectionManager/closeConnection()|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/impl/execchain/MainClientExec/execute(org.apache.http.conn.routing.HttpRoute,org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.client.protocol.HttpClientContext,org.apache.http.client.methods.HttpExecutionAware)|",
    "called": "|java+constructor:///org/apache/http/impl/execchain/ConnectionHolder/ConnectionHolder(org.apache.commons.logging.Log,org.apache.http.conn.HttpClientConnectionManager,org.apache.http.HttpClientConnection)|",
    "v1Body": [
      "|java+constructor:///org/apache/http/impl/execchain/ConnectionHolder/ConnectionHolder(org.apache.commons.logging.Log,org.apache.http.conn.HttpClientConnectionManager,org.apache.http.HttpClientConnection)|",
      "|java+method:///org/apache/http/client/protocol/HttpClientContext/getUserToken()|",
      "|java+method:///org/apache/http/impl/execchain/ConnectionHolder/setValidFor(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///org/apache/http/impl/execchain/ConnectionHolder/isReusable()|",
      "|java+method:///org/apache/http/impl/execchain/ConnectionHolder/releaseConnection()|",
      "|java+method:///org/apache/http/HttpClientConnection/isOpen()|",
      "|java+method:///org/apache/http/auth/AuthState/getAuthScheme()|",
      "|java+method:///org/apache/http/client/protocol/HttpClientContext/setAttribute(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/http/impl/execchain/ConnectionHolder/abortConnection()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/apache/http/HttpClientConnection/setSocketTimeout(int)|",
      "|java+method:///org/apache/http/ConnectionReuseStrategy/keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/HttpClientConnection/close()|",
      "|java+method:///org/apache/http/conn/ConnectionRequest/cancel()|",
      "|java+method:///org/apache/http/client/methods/HttpRequestWrapper/removeHeaders(java.lang.String)|",
      "|java+method:///org/apache/http/util/Args/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/http/impl/execchain/TunnelRefusedException/getResponse()|",
      "|java+method:///org/apache/http/conn/ConnectionRequest/get(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///org/apache/http/client/config/RequestConfig/getSocketTimeout()|",
      "|java+method:///org/apache/http/conn/routing/HttpRoute/isTunnelled()|",
      "|java+method:///org/apache/http/client/config/RequestConfig/getConnectionRequestTimeout()|",
      "|java+method:///org/apache/http/client/config/RequestConfig/isStaleConnectionCheckEnabled()|",
      "|java+method:///org/apache/http/conn/HttpClientConnectionManager/requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)|",
      "|java+method:///org/apache/http/client/protocol/HttpClientContext/getRequestConfig()|",
      "|java+method:///org/apache/http/conn/ConnectionKeepAliveStrategy/getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///java/lang/Thread/interrupt()|",
      "|java+method:///org/apache/http/impl/execchain/Proxies/enhanceEntity(org.apache.http.HttpEntityEnclosingRequest)|",
      "|java+method:///org/apache/http/auth/AuthState/reset()|",
      "|java+method:///java/util/concurrent/ExecutionException/getCause()|",
      "|java+constructor:///org/apache/http/impl/execchain/RequestAbortedException/RequestAbortedException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///org/apache/http/auth/AuthState/AuthState()|",
      "|java+constructor:///org/apache/http/impl/execchain/RequestAbortedException/RequestAbortedException(java.lang.String)|",
      "|java+method:///org/apache/http/client/methods/HttpRequestWrapper/getOriginal()|",
      "|java+method:///org/apache/http/client/methods/HttpExecutionAware/isAborted()|",
      "|java+method:///org/apache/http/client/methods/HttpExecutionAware/setCancellable(org.apache.http.concurrent.Cancellable)|",
      "|java+constructor:///java/io/InterruptedIOException/InterruptedIOException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///org/apache/http/client/UserTokenHandler/getUserToken(org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/auth/AuthState/getState()|",
      "|java+method:///org/apache/http/client/protocol/HttpClientContext/getTargetAuthState()|",
      "|java+method:///java/io/InterruptedIOException/initCause(java.lang.Throwable)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/http/client/methods/HttpRequestWrapper/containsHeader(java.lang.String)|",
      "|java+method:///org/apache/http/impl/execchain/Proxies/isRepeatable(org.apache.http.HttpRequest)|",
      "|java+method:///org/apache/http/impl/execchain/MainClientExec/needAuthentication(org.apache.http.auth.AuthState,org.apache.http.auth.AuthState,org.apache.http.conn.routing.HttpRoute,org.apache.http.HttpResponse,org.apache.http.client.protocol.HttpClientContext)|",
      "|java+method:///org/apache/http/client/protocol/HttpClientContext/getProxyAuthState()|",
      "|java+method:///org/apache/http/impl/execchain/TunnelRefusedException/getMessage()|",
      "|java+method:///org/apache/http/impl/execchain/Proxies/enhanceResponse(org.apache.http.HttpResponse,org.apache.http.impl.execchain.ConnectionHolder)|",
      "|java+method:///org/apache/http/impl/execchain/MainClientExec/establishRoute(org.apache.http.auth.AuthState,org.apache.http.HttpClientConnection,org.apache.http.conn.routing.HttpRoute,org.apache.http.HttpRequest,org.apache.http.client.protocol.HttpClientContext)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/http/client/methods/HttpRequestWrapper/getRequestLine()|",
      "|java+method:///org/apache/http/impl/execchain/ConnectionHolder/markReusable()|",
      "|java+method:///org/apache/http/HttpRequest/containsHeader(java.lang.String)|",
      "|java+method:///org/apache/http/protocol/HttpRequestExecutor/execute(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/auth/AuthScheme/isConnectionBased()|",
      "|java+method:///org/apache/http/impl/auth/HttpAuthenticator/generateAuthResponse(org.apache.http.HttpRequest,org.apache.http.auth.AuthState,org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/HttpClientConnection/isStale()|",
      "|java+method:///org/apache/http/util/EntityUtils/consume(org.apache.http.HttpEntity)|",
      "|java+method:///org/apache/http/HttpResponse/getEntity()|",
      "|java+constructor:///org/apache/http/client/NonRepeatableRequestException/NonRepeatableRequestException(java.lang.String)|",
      "|java+method:///org/apache/http/impl/execchain/ConnectionHolder/setState(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/http/impl/execchain/ConnectionHolder/markNonReusable()|",
      "|java+method:///org/apache/http/HttpEntity/isStreaming()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/http/impl/execchain/RequestEntityProxy/isRepeatable(org.apache.http.HttpRequest)|",
      "|java+constructor:///org/apache/http/impl/execchain/ConnectionHolder/ConnectionHolder(org.apache.commons.logging.Log,org.apache.http.conn.HttpClientConnectionManager,org.apache.http.HttpClientConnection)|",
      "|java+method:///org/apache/http/client/protocol/HttpClientContext/getUserToken()|",
      "|java+method:///org/apache/http/impl/execchain/ConnectionHolder/setValidFor(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///org/apache/http/impl/execchain/ConnectionHolder/isReusable()|",
      "|java+method:///org/apache/http/impl/execchain/ConnectionHolder/releaseConnection()|",
      "|java+method:///org/apache/http/HttpClientConnection/isOpen()|",
      "|java+method:///org/apache/http/auth/AuthState/getAuthScheme()|",
      "|java+method:///org/apache/http/client/protocol/HttpClientContext/setAttribute(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/http/impl/execchain/ConnectionHolder/abortConnection()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/apache/http/HttpClientConnection/setSocketTimeout(int)|",
      "|java+method:///org/apache/http/ConnectionReuseStrategy/keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/HttpClientConnection/close()|",
      "|java+method:///org/apache/http/conn/ConnectionRequest/cancel()|",
      "|java+method:///org/apache/http/client/methods/HttpRequestWrapper/removeHeaders(java.lang.String)|",
      "|java+method:///org/apache/http/util/Args/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/http/impl/execchain/TunnelRefusedException/getResponse()|",
      "|java+method:///org/apache/http/conn/ConnectionRequest/get(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///org/apache/http/client/config/RequestConfig/getSocketTimeout()|",
      "|java+method:///org/apache/http/conn/routing/HttpRoute/isTunnelled()|",
      "|java+method:///org/apache/http/client/config/RequestConfig/getConnectionRequestTimeout()|",
      "|java+method:///org/apache/http/client/config/RequestConfig/isStaleConnectionCheckEnabled()|",
      "|java+method:///org/apache/http/conn/HttpClientConnectionManager/requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)|",
      "|java+method:///org/apache/http/client/protocol/HttpClientContext/getRequestConfig()|",
      "|java+method:///org/apache/http/conn/ConnectionKeepAliveStrategy/getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+constructor:///org/apache/http/impl/execchain/HttpResponseProxy/HttpResponseProxy(org.apache.http.HttpResponse,org.apache.http.impl.execchain.ConnectionHolder)|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///java/lang/Thread/interrupt()|",
      "|java+method:///org/apache/http/auth/AuthState/reset()|",
      "|java+method:///java/util/concurrent/ExecutionException/getCause()|",
      "|java+constructor:///org/apache/http/impl/execchain/RequestAbortedException/RequestAbortedException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///org/apache/http/auth/AuthState/AuthState()|",
      "|java+constructor:///org/apache/http/impl/execchain/RequestAbortedException/RequestAbortedException(java.lang.String)|",
      "|java+method:///org/apache/http/client/methods/HttpRequestWrapper/getOriginal()|",
      "|java+method:///org/apache/http/client/methods/HttpExecutionAware/isAborted()|",
      "|java+method:///org/apache/http/client/methods/HttpExecutionAware/setCancellable(org.apache.http.concurrent.Cancellable)|",
      "|java+constructor:///java/io/InterruptedIOException/InterruptedIOException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///org/apache/http/client/UserTokenHandler/getUserToken(org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/auth/AuthState/getState()|",
      "|java+method:///org/apache/http/client/protocol/HttpClientContext/getTargetAuthState()|",
      "|java+method:///java/io/InterruptedIOException/initCause(java.lang.Throwable)|",
      "|java+method:///org/apache/http/client/methods/HttpRequestWrapper/containsHeader(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/http/impl/execchain/MainClientExec/needAuthentication(org.apache.http.auth.AuthState,org.apache.http.auth.AuthState,org.apache.http.conn.routing.HttpRoute,org.apache.http.HttpResponse,org.apache.http.client.protocol.HttpClientContext)|",
      "|java+method:///org/apache/http/client/protocol/HttpClientContext/getProxyAuthState()|",
      "|java+method:///org/apache/http/impl/execchain/RequestEntityProxy/enhance(org.apache.http.HttpEntityEnclosingRequest)|",
      "|java+method:///org/apache/http/impl/execchain/TunnelRefusedException/getMessage()|",
      "|java+method:///org/apache/http/impl/execchain/MainClientExec/establishRoute(org.apache.http.auth.AuthState,org.apache.http.HttpClientConnection,org.apache.http.conn.routing.HttpRoute,org.apache.http.HttpRequest,org.apache.http.client.protocol.HttpClientContext)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/http/client/methods/HttpRequestWrapper/getRequestLine()|",
      "|java+method:///org/apache/http/impl/execchain/ConnectionHolder/markReusable()|",
      "|java+method:///org/apache/http/HttpRequest/containsHeader(java.lang.String)|",
      "|java+method:///org/apache/http/protocol/HttpRequestExecutor/execute(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/auth/AuthScheme/isConnectionBased()|",
      "|java+method:///org/apache/http/impl/auth/HttpAuthenticator/generateAuthResponse(org.apache.http.HttpRequest,org.apache.http.auth.AuthState,org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/HttpClientConnection/isStale()|",
      "|java+method:///org/apache/http/util/EntityUtils/consume(org.apache.http.HttpEntity)|",
      "|java+method:///org/apache/http/HttpResponse/getEntity()|",
      "|java+constructor:///org/apache/http/client/NonRepeatableRequestException/NonRepeatableRequestException(java.lang.String)|",
      "|java+method:///org/apache/http/impl/execchain/ConnectionHolder/setState(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/http/impl/execchain/ConnectionHolder/markNonReusable()|",
      "|java+method:///org/apache/http/HttpEntity/isStreaming()|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/conn/ssl/SSLConnectionSocketFactory/connectSocket(int,java.net.Socket,org.apache.http.HttpHost,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.protocol.HttpContext)|",
    "called": "|java+method:///org/apache/http/conn/ssl/SSLConnectionSocketFactory/createSocket(org.apache.http.protocol.HttpContext)|",
    "v1Body": [
      "|java+method:///java/net/Socket/connect(java.net.SocketAddress,int)|",
      "|java+method:///org/apache/http/conn/ssl/SSLConnectionSocketFactory/createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/util/Args/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///javax/net/ssl/SSLSocket/startHandshake()|",
      "|java+method:///org/apache/http/conn/ssl/SSLConnectionSocketFactory/verifyHostname(javax.net.ssl.SSLSocket,java.lang.String)|",
      "|java+method:///java/net/Socket/close()|",
      "|java+method:///java/net/InetSocketAddress/getPort()|",
      "|java+method:///java/net/Socket/bind(java.net.SocketAddress)|",
      "|java+method:///org/apache/http/HttpHost/getHostName()|",
      "|java+method:///org/apache/http/conn/ssl/SSLConnectionSocketFactory/createSocket(org.apache.http.protocol.HttpContext)|"
    ],
    "v2Body": [
      "|java+method:///java/net/Socket/connect(java.net.SocketAddress,int)|",
      "|java+method:///java/net/Socket/getSoTimeout()|",
      "|java+method:///org/apache/http/conn/ssl/SSLConnectionSocketFactory/createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/util/Args/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///javax/net/ssl/SSLSocket/startHandshake()|",
      "|java+method:///org/apache/http/conn/ssl/SSLConnectionSocketFactory/verifyHostname(javax.net.ssl.SSLSocket,java.lang.String)|",
      "|java+method:///java/net/Socket/close()|",
      "|java+method:///java/net/Socket/setSoTimeout(int)|",
      "|java+method:///java/net/InetSocketAddress/getPort()|",
      "|java+method:///java/net/Socket/bind(java.net.SocketAddress)|",
      "|java+method:///org/apache/http/HttpHost/getHostName()|",
      "|java+method:///org/apache/http/conn/ssl/SSLConnectionSocketFactory/createSocket(org.apache.http.protocol.HttpContext)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/conditionM0(java.lang.String,int)|",
    "called": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String%5B%5D)|",
    "v1Body": [
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/charAt(java.lang.String,int)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/charAt(java.lang.String,int)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)|",
    "called": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
    "v1Body": [
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/charAt(java.lang.String,int)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/charAt(java.lang.String,int)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/client/fluent/Request/Trace(java.net.URI)|",
    "called": "|java+constructor:///org/apache/http/client/fluent/Request/Request(org.apache.http.client.fluent.InternalHttpRequest)|",
    "v1Body": [
      "|java+constructor:///org/apache/http/client/fluent/Request/Request(java.lang.String,java.net.URI)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/http/client/fluent/InternalHttpRequest/InternalHttpRequest(java.lang.String,java.net.URI)|",
      "|java+constructor:///org/apache/http/client/fluent/Request/Request(org.apache.http.client.fluent.InternalHttpRequest)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/impl/conn/HttpClientConnectionOperator/connect(org.apache.http.conn.ManagedHttpClientConnection,org.apache.http.HttpHost,java.net.InetSocketAddress,int,org.apache.http.config.SocketConfig,org.apache.http.protocol.HttpContext)|",
    "called": "|java+constructor:///org/apache/http/conn/HttpHostConnectException/HttpHostConnectException(java.io.IOException,org.apache.http.HttpHost,java.net.InetAddress%5B%5D)|",
    "v1Body": [
      "|java+method:///org/apache/http/config/SocketConfig/isSoKeepAlive()|",
      "|java+method:///java/net/Socket/setKeepAlive(boolean)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/apache/http/config/SocketConfig/isTcpNoDelay()|",
      "|java+constructor:///org/apache/http/conn/HttpHostConnectException/HttpHostConnectException(java.io.IOException,org.apache.http.HttpHost,java.net.InetAddress%5B%5D)|",
      "|java+method:///org/apache/http/impl/conn/HttpClientConnectionOperator/getSocketFactoryRegistry(org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/conn/DnsResolver/resolve(java.lang.String)|",
      "|java+method:///org/apache/http/config/SocketConfig/getSoLinger()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/http/HttpHost/getHostName()|",
      "|java+method:///java/net/ConnectException/getMessage()|",
      "|java+method:///org/apache/http/conn/SchemePortResolver/resolve(org.apache.http.HttpHost)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/net/Socket/setSoLinger(boolean,int)|",
      "|java+method:///java/net/Socket/setTcpNoDelay(boolean)|",
      "|java+method:///org/apache/http/config/SocketConfig/isSoReuseAddress()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/http/config/SocketConfig/getSoTimeout()|",
      "|java+constructor:///java/net/InetSocketAddress/InetSocketAddress(java.net.InetAddress,int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/http/config/Lookup/lookup(java.lang.String)|",
      "|java+method:///org/apache/http/conn/socket/ConnectionSocketFactory/createSocket(org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/apache/http/conn/ManagedHttpClientConnection/bind(java.net.Socket)|",
      "|java+method:///org/apache/http/HttpHost/getSchemeName()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///org/apache/http/conn/ConnectTimeoutException/ConnectTimeoutException(java.io.IOException,org.apache.http.HttpHost,java.net.InetAddress%5B%5D)|",
      "|java+method:///org/apache/http/conn/socket/ConnectionSocketFactory/connectSocket(int,java.net.Socket,org.apache.http.HttpHost,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.protocol.HttpContext)|",
      "|java+constructor:///org/apache/http/conn/UnsupportedSchemeException/UnsupportedSchemeException(java.lang.String)|",
      "|java+method:///java/net/Socket/setReuseAddress(boolean)|",
      "|java+method:///java/net/Socket/setSoTimeout(int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/http/config/SocketConfig/isSoKeepAlive()|",
      "|java+method:///java/net/Socket/setKeepAlive(boolean)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/apache/http/config/SocketConfig/isTcpNoDelay()|",
      "|java+constructor:///org/apache/http/conn/HttpHostConnectException/HttpHostConnectException(java.io.IOException,org.apache.http.HttpHost,java.net.InetAddress%5B%5D)|",
      "|java+method:///org/apache/http/impl/conn/HttpClientConnectionOperator/getSocketFactoryRegistry(org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/conn/DnsResolver/resolve(java.lang.String)|",
      "|java+method:///org/apache/http/config/SocketConfig/getSoLinger()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/http/HttpHost/getHostName()|",
      "|java+method:///java/net/ConnectException/getMessage()|",
      "|java+method:///org/apache/http/conn/SchemePortResolver/resolve(org.apache.http.HttpHost)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/net/Socket/setSoLinger(boolean,int)|",
      "|java+method:///java/net/Socket/setTcpNoDelay(boolean)|",
      "|java+method:///org/apache/http/config/SocketConfig/isSoReuseAddress()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/http/config/SocketConfig/getSoTimeout()|",
      "|java+constructor:///java/net/InetSocketAddress/InetSocketAddress(java.net.InetAddress,int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/http/conn/socket/ConnectionSocketFactory/createSocket(org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/config/Lookup/lookup(java.lang.String)|",
      "|java+method:///org/apache/http/HttpHost/getAddress()|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/apache/http/conn/ManagedHttpClientConnection/bind(java.net.Socket)|",
      "|java+method:///org/apache/http/HttpHost/getSchemeName()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///org/apache/http/conn/ConnectTimeoutException/ConnectTimeoutException(java.io.IOException,org.apache.http.HttpHost,java.net.InetAddress%5B%5D)|",
      "|java+method:///org/apache/http/conn/socket/ConnectionSocketFactory/connectSocket(int,java.net.Socket,org.apache.http.HttpHost,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.protocol.HttpContext)|",
      "|java+constructor:///org/apache/http/conn/UnsupportedSchemeException/UnsupportedSchemeException(java.lang.String)|",
      "|java+method:///java/net/Socket/setReuseAddress(boolean)|",
      "|java+method:///java/net/Socket/setSoTimeout(int)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/language/bm/PhoneticEngine$RulesApplication/invoke()|",
    "called": "|java+method:///org/apache/commons/codec/language/bm/Rule/patternAndContextMatches(java.lang.CharSequence,int)|",
    "v1Body": [
      "|java+method:///org/apache/commons/codec/language/bm/Rule/getPattern()|",
      "|java+method:///org/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder/apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/commons/codec/language/bm/Rule/patternAndContextMatches(java.lang.CharSequence,int)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/commons/codec/language/bm/Rule/getPhoneme()|",
      "|java+method:///java/util/List/iterator()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder/apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr,int)|",
      "|java+method:///org/apache/commons/codec/language/bm/Rule/getPattern()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/commons/codec/language/bm/Rule/patternAndContextMatches(java.lang.CharSequence,int)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/commons/codec/language/bm/Rule/getPhoneme()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/CharSequence/subSequence(int,int)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/impl/conn/PoolingHttpClientConnectionManager/releaseConnection(org.apache.http.HttpClientConnection,java.lang.Object,long,java.util.concurrent.TimeUnit)|",
    "called": "|java+method:///org/apache/http/impl/conn/PoolingHttpClientConnectionManager/formatStats(org.apache.http.conn.routing.HttpRoute)|",
    "v1Body": [
      "|java+method:///org/apache/http/conn/ManagedHttpClientConnection/isOpen()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/apache/http/impl/conn/CPoolEntry/getRoute()|",
      "|java+method:///org/apache/http/impl/conn/PoolingHttpClientConnectionManager/formatStats(org.apache.http.conn.routing.HttpRoute)|",
      "|java+method:///org/apache/http/impl/conn/CPoolProxy/detach(org.apache.http.HttpClientConnection)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/apache/http/impl/conn/CPoolEntry/setState(java.lang.Object)|",
      "|java+method:///org/apache/http/impl/conn/PoolingHttpClientConnectionManager/format(org.apache.http.impl.conn.CPoolEntry)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/http/impl/conn/CPoolEntry/isRouteComplete()|",
      "|java+method:///java/lang/StringBuilder/append(double)|",
      "|java+method:///org/apache/http/impl/conn/CPool/release(org.apache.http.pool.PoolEntry,boolean)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/http/util/Args/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/http/impl/conn/CPoolEntry/getConnection()|",
      "|java+method:///org/apache/http/impl/conn/CPoolEntry/updateExpiry(long,java.util.concurrent.TimeUnit)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/http/conn/ManagedHttpClientConnection/isOpen()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///java/util/concurrent/TimeUnit/toMillis(long)|",
      "|java+method:///org/apache/http/impl/conn/CPoolEntry/getRoute()|",
      "|java+method:///org/apache/http/impl/conn/PoolingHttpClientConnectionManager/formatStats(org.apache.http.conn.routing.HttpRoute)|",
      "|java+method:///org/apache/http/impl/conn/CPoolProxy/detach(org.apache.http.HttpClientConnection)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/apache/http/impl/conn/CPoolEntry/setState(java.lang.Object)|",
      "|java+method:///org/apache/http/impl/conn/PoolingHttpClientConnectionManager/format(org.apache.http.impl.conn.CPoolEntry)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/http/impl/conn/CPoolEntry/isRouteComplete()|",
      "|java+method:///java/lang/StringBuilder/append(double)|",
      "|java+method:///org/apache/http/impl/conn/CPool/release(org.apache.http.pool.PoolEntry,boolean)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/http/util/Args/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/http/impl/conn/CPoolEntry/getConnection()|",
      "|java+method:///org/apache/http/impl/conn/CPoolEntry/updateExpiry(long,java.util.concurrent.TimeUnit)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/impl/client/CloseableHttpResponseProxy/newProxy(org.apache.http.HttpResponse)|",
    "called": "|java+constructor:///org/apache/http/impl/client/CloseableHttpResponseProxy/CloseableHttpResponseProxy(org.apache.http.HttpResponse)|",
    "v1Body": [
      "|java+method:///java/lang/reflect/Proxy/newProxyInstance(java.lang.ClassLoader,java.lang.Class%5B%5D,java.lang.reflect.InvocationHandler)|",
      "|java+constructor:///org/apache/http/impl/client/CloseableHttpResponseProxy/CloseableHttpResponseProxy(org.apache.http.HttpResponse)|",
      "|java+method:///java/lang/Class/getClassLoader()|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///java/lang/reflect/Constructor/newInstance(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/apache/http/impl/client/CloseableHttpResponseProxy/CloseableHttpResponseProxy(org.apache.http.HttpResponse)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/conditionCH0(java.lang.String,int)|",
    "called": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String%5B%5D)|",
    "v1Body": [
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String%5B%5D)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/client/fluent/Request/Delete(java.net.URI)|",
    "called": "|java+constructor:///org/apache/http/client/fluent/Request/Request(org.apache.http.client.fluent.InternalHttpRequest)|",
    "v1Body": [
      "|java+constructor:///org/apache/http/client/fluent/Request/Request(java.lang.String,java.net.URI)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/http/client/fluent/InternalHttpRequest/InternalHttpRequest(java.lang.String,java.net.URI)|",
      "|java+constructor:///org/apache/http/client/fluent/Request/Request(org.apache.http.client.fluent.InternalHttpRequest)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/impl/conn/CPoolProxy/getPoolEntry(org.apache.http.HttpClientConnection)|",
    "called": "|java+method:///org/apache/http/impl/conn/CPoolProxy/getProxy(org.apache.http.HttpClientConnection)|",
    "v1Body": [
      "|java+constructor:///org/apache/http/impl/conn/ConnectionShutdownException/ConnectionShutdownException()|",
      "|java+method:///org/apache/http/impl/conn/CPoolProxy/getHandler(org.apache.http.HttpClientConnection)|",
      "|java+method:///org/apache/http/impl/conn/CPoolProxy/getPoolEntry()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/http/impl/conn/ConnectionShutdownException/ConnectionShutdownException()|",
      "|java+method:///org/apache/http/impl/conn/CPoolProxy/getProxy(org.apache.http.HttpClientConnection)|",
      "|java+method:///org/apache/http/impl/conn/CPoolProxy/getPoolEntry()|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/client/fluent/Request/Get(java.net.URI)|",
    "called": "|java+constructor:///org/apache/http/client/fluent/Request/Request(org.apache.http.client.fluent.InternalHttpRequest)|",
    "v1Body": [
      "|java+constructor:///org/apache/http/client/fluent/Request/Request(java.lang.String,java.net.URI)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/http/client/fluent/InternalHttpRequest/InternalHttpRequest(java.lang.String,java.net.URI)|",
      "|java+constructor:///org/apache/http/client/fluent/Request/Request(org.apache.http.client.fluent.InternalHttpRequest)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/client/fluent/Request/Options(java.lang.String)|",
    "called": "|java+constructor:///org/apache/http/client/fluent/Request/Request(org.apache.http.client.fluent.InternalHttpRequest)|",
    "v1Body": [
      "|java+constructor:///org/apache/http/client/fluent/Request/Request(java.lang.String,java.net.URI)|",
      "|java+method:///java/net/URI/create(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+constructor:///org/apache/http/client/fluent/InternalHttpRequest/InternalHttpRequest(java.lang.String,java.net.URI)|",
      "|java+constructor:///org/apache/http/client/fluent/Request/Request(org.apache.http.client.fluent.InternalHttpRequest)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)|",
    "called": "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
    "v1Body": [
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/isVowel(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/charAt(java.lang.String,int)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult/append(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/isVowel(char)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/contains(java.lang.String,int,int,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/codec/language/DoubleMetaphone/charAt(java.lang.String,int)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/digest/DigestUtils/sha512(java.lang.String)|",
    "called": "|java+method:///org/apache/commons/codec/digest/DigestUtils/sha512(byte%5B%5D)|",
    "v1Body": [
      "|java+method:///org/apache/commons/codec/digest/DigestUtils/sha512(byte%5B%5D)|",
      "|java+method:///org/apache/commons/codec/digest/DigestUtils/getBytesUtf8(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/codec/binary/StringUtils/getBytesUtf8(java.lang.String)|",
      "|java+method:///org/apache/commons/codec/digest/DigestUtils/sha512(byte%5B%5D)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/commons/codec/language/bm/Rule/getInstance(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String)|",
    "called": "|java+method:///org/apache/commons/codec/language/bm/Languages$LanguageSet/from(java.util.Set)|",
    "v1Body": [
      "|java+method:///org/apache/commons/codec/language/bm/RuleType/getName()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/commons/codec/language/bm/NameType/getName()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/commons/codec/language/bm/Languages$LanguageSet/from(java.util.Set)|",
      "|java+method:///org/apache/commons/codec/language/bm/Rule/getInstance(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,org.apache.commons.codec.language.bm.Languages$LanguageSet)|",
      "|java+constructor:///java/util/HashSet/HashSet(java.util.Collection)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/impl/conn/CPoolProxy/detach(org.apache.http.HttpClientConnection)|",
    "called": "|java+method:///org/apache/http/impl/conn/CPoolProxy/getProxy(org.apache.http.HttpClientConnection)|",
    "v1Body": [
      "|java+method:///org/apache/http/impl/conn/CPoolProxy/detach()|",
      "|java+method:///org/apache/http/impl/conn/CPoolProxy/getHandler(org.apache.http.HttpClientConnection)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/http/impl/conn/CPoolProxy/detach()|",
      "|java+method:///org/apache/http/impl/conn/CPoolProxy/getProxy(org.apache.http.HttpClientConnection)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/client/fluent/Request/Head(java.lang.String)|",
    "called": "|java+constructor:///org/apache/http/client/fluent/Request/Request(org.apache.http.client.fluent.InternalHttpRequest)|",
    "v1Body": [
      "|java+constructor:///org/apache/http/client/fluent/Request/Request(java.lang.String,java.net.URI)|",
      "|java+method:///java/net/URI/create(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+constructor:///org/apache/http/client/fluent/InternalHttpRequest/InternalHttpRequest(java.lang.String,java.net.URI)|",
      "|java+constructor:///org/apache/http/client/fluent/Request/Request(org.apache.http.client.fluent.InternalHttpRequest)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/impl/execchain/RedirectExec/execute(org.apache.http.conn.routing.HttpRoute,org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.client.protocol.HttpClientContext,org.apache.http.client.methods.HttpExecutionAware)|",
    "called": "|java+method:///org/apache/http/client/utils/URIUtils/extractHost(java.net.URI)|",
    "v1Body": [
      "|java+method:///org/apache/http/auth/AuthState/getAuthScheme()|",
      "|java+method:///org/apache/http/client/methods/HttpRequestWrapper/getURI()|",
      "|java+method:///org/apache/http/HeaderIterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/http/client/methods/CloseableHttpResponse/getEntity()|",
      "|java+method:///org/apache/http/client/methods/HttpRequestWrapper/getOriginal()|",
      "|java+method:///org/apache/http/conn/routing/HttpRoutePlanner/determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/client/protocol/HttpClientContext/getTargetAuthState()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/http/client/RedirectException/RedirectException(java.lang.String)|",
      "|java+method:///org/apache/http/conn/routing/HttpRoute/getTargetHost()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/apache/http/client/config/RequestConfig/isRedirectsEnabled()|",
      "|java+method:///org/apache/http/client/RedirectStrategy/getRedirect(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/util/Args/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/http/ProtocolException/ProtocolException(java.lang.String)|",
      "|java+method:///org/apache/http/client/protocol/HttpClientContext/getRequestConfig()|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/apache/http/client/config/RequestConfig/getMaxRedirects()|",
      "|java+method:///org/apache/http/impl/execchain/Proxies/enhanceEntity(org.apache.http.HttpEntityEnclosingRequest)|",
      "|java+method:///org/apache/http/auth/AuthState/reset()|",
      "|java+method:///org/apache/http/HttpRequest/headerIterator()|",
      "|java+method:///org/apache/http/client/methods/CloseableHttpResponse/close()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/http/impl/execchain/ClientExecChain/execute(org.apache.http.conn.routing.HttpRoute,org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.client.protocol.HttpClientContext,org.apache.http.client.methods.HttpExecutionAware)|",
      "|java+method:///org/apache/http/client/protocol/HttpClientContext/getProxyAuthState()|",
      "|java+method:///java/util/List/clear()|",
      "|java+method:///org/apache/http/HttpHost/equals(java.lang.Object)|",
      "|java+method:///org/apache/http/client/methods/HttpRequestWrapper/wrap(org.apache.http.HttpRequest)|",
      "|java+method:///org/apache/http/HttpRequest/setHeaders(org.apache.http.Header%5B%5D)|",
      "|java+method:///org/apache/http/auth/AuthScheme/isConnectionBased()|",
      "|java+method:///org/apache/http/client/RedirectStrategy/isRedirected(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/client/utils/URIUtils/extractHost(java.net.URI)|",
      "|java+method:///org/apache/http/client/protocol/HttpClientContext/getRedirectLocations()|",
      "|java+method:///org/apache/http/util/EntityUtils/consume(org.apache.http.HttpEntity)|",
      "|java+method:///org/apache/http/HttpRequest/getAllHeaders()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/http/auth/AuthState/getAuthScheme()|",
      "|java+method:///org/apache/http/client/methods/HttpRequestWrapper/getURI()|",
      "|java+method:///org/apache/http/HeaderIterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/http/client/methods/CloseableHttpResponse/getEntity()|",
      "|java+method:///org/apache/http/client/methods/HttpRequestWrapper/getOriginal()|",
      "|java+method:///org/apache/http/conn/routing/HttpRoutePlanner/determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/client/protocol/HttpClientContext/getTargetAuthState()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/http/client/RedirectException/RedirectException(java.lang.String)|",
      "|java+method:///org/apache/http/conn/routing/HttpRoute/getTargetHost()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/apache/http/client/config/RequestConfig/isRedirectsEnabled()|",
      "|java+method:///org/apache/http/client/RedirectStrategy/getRedirect(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/util/Args/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/http/ProtocolException/ProtocolException(java.lang.String)|",
      "|java+method:///org/apache/http/client/protocol/HttpClientContext/getRequestConfig()|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/apache/http/client/config/RequestConfig/getMaxRedirects()|",
      "|java+method:///org/apache/http/auth/AuthState/reset()|",
      "|java+method:///org/apache/http/HttpRequest/headerIterator()|",
      "|java+method:///org/apache/http/client/methods/CloseableHttpResponse/close()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/http/impl/execchain/ClientExecChain/execute(org.apache.http.conn.routing.HttpRoute,org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.client.protocol.HttpClientContext,org.apache.http.client.methods.HttpExecutionAware)|",
      "|java+method:///org/apache/http/client/protocol/HttpClientContext/getProxyAuthState()|",
      "|java+method:///java/util/List/clear()|",
      "|java+method:///org/apache/http/impl/execchain/RequestEntityProxy/enhance(org.apache.http.HttpEntityEnclosingRequest)|",
      "|java+method:///org/apache/http/HttpHost/equals(java.lang.Object)|",
      "|java+method:///org/apache/http/client/methods/HttpRequestWrapper/wrap(org.apache.http.HttpRequest)|",
      "|java+method:///org/apache/http/HttpRequest/setHeaders(org.apache.http.Header%5B%5D)|",
      "|java+method:///org/apache/http/auth/AuthScheme/isConnectionBased()|",
      "|java+method:///org/apache/http/client/RedirectStrategy/isRedirected(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/client/utils/URIUtils/extractHost(java.net.URI)|",
      "|java+method:///org/apache/http/client/protocol/HttpClientContext/getRedirectLocations()|",
      "|java+method:///org/apache/http/util/EntityUtils/consume(org.apache.http.HttpEntity)|",
      "|java+method:///org/apache/http/HttpRequest/getAllHeaders()|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/impl/client/cache/CachingExec/revalidateCacheEntry(org.apache.http.conn.routing.HttpRoute,org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.client.protocol.HttpClientContext,org.apache.http.client.methods.HttpExecutionAware,org.apache.http.client.cache.HttpCacheEntry)|",
    "called": "|java+method:///org/apache/http/impl/client/cache/CachingExec/recordCacheUpdate(org.apache.http.protocol.HttpContext)|",
    "v1Body": [
      "|java+method:///org/apache/http/impl/client/cache/CachingExec/recordCacheUpdate(org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/impl/client/cache/ConditionalRequestBuilder/buildUnconditionalRequest(org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.client.cache.HttpCacheEntry)|",
      "|java+method:///org/apache/http/impl/client/cache/CachingExec/generateViaHeader(org.apache.http.HttpMessage)|",
      "|java+method:///org/apache/http/impl/client/cache/CachingExec/handleBackendResponse(org.apache.http.conn.routing.HttpRoute,org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.client.protocol.HttpClientContext,org.apache.http.client.methods.HttpExecutionAware,java.util.Date,java.util.Date,org.apache.http.client.methods.CloseableHttpResponse)|",
      "|java+method:///org/apache/http/client/methods/CloseableHttpResponse/close()|",
      "|java+method:///org/apache/http/impl/client/cache/CacheValidityPolicy/mayReturnStaleIfError(org.apache.http.HttpRequest,org.apache.http.client.cache.HttpCacheEntry,java.util.Date)|",
      "|java+method:///org/apache/http/client/methods/CloseableHttpResponse/addHeader(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/http/StatusLine/getStatusCode()|",
      "|java+method:///org/apache/http/impl/client/cache/CachingExec/staleIfErrorAppliesTo(int)|",
      "|java+method:///org/apache/http/impl/client/cache/CachedResponseSuitabilityChecker/isConditional(org.apache.http.HttpRequest)|",
      "|java+method:///org/apache/http/impl/client/cache/CachedHttpResponseGenerator/generateResponse(org.apache.http.client.cache.HttpCacheEntry)|",
      "|java+method:///org/apache/http/impl/client/cache/CachedHttpResponseGenerator/generateNotModifiedResponse(org.apache.http.client.cache.HttpCacheEntry)|",
      "|java+method:///org/apache/http/impl/client/cache/CachingExec/staleResponseNotAllowed(org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.client.cache.HttpCacheEntry,java.util.Date)|",
      "|java+method:///org/apache/http/impl/client/cache/CachingExec/revalidationResponseIsTooOld(org.apache.http.HttpResponse,org.apache.http.client.cache.HttpCacheEntry)|",
      "|java+method:///org/apache/http/client/methods/CloseableHttpResponse/getStatusLine()|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+method:///org/apache/http/impl/execchain/ClientExecChain/execute(org.apache.http.conn.routing.HttpRoute,org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.client.protocol.HttpClientContext,org.apache.http.client.methods.HttpExecutionAware)|",
      "|java+method:///org/apache/http/client/protocol/HttpClientContext/getTargetHost()|",
      "|java+method:///org/apache/http/impl/client/cache/HttpCache/updateCacheEntry(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.cache.HttpCacheEntry,org.apache.http.HttpResponse,java.util.Date,java.util.Date)|",
      "|java+method:///org/apache/http/impl/client/cache/CachedResponseSuitabilityChecker/allConditionalsMatch(org.apache.http.HttpRequest,org.apache.http.client.cache.HttpCacheEntry,java.util.Date)|",
      "|java+method:///org/apache/http/impl/client/cache/ConditionalRequestBuilder/buildConditionalRequest(org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.client.cache.HttpCacheEntry)|",
      "|java+method:///org/apache/http/impl/client/cache/CachingExec/getCurrentDate()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/http/impl/client/cache/ConditionalRequestBuilder/buildUnconditionalRequest(org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.client.cache.HttpCacheEntry)|",
      "|java+method:///org/apache/http/impl/client/cache/CachingExec/generateViaHeader(org.apache.http.HttpMessage)|",
      "|java+method:///org/apache/http/impl/client/cache/CachingExec/handleBackendResponse(org.apache.http.conn.routing.HttpRoute,org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.client.protocol.HttpClientContext,org.apache.http.client.methods.HttpExecutionAware,java.util.Date,java.util.Date,org.apache.http.client.methods.CloseableHttpResponse)|",
      "|java+constructor:///org/apache/http/ProtocolException/ProtocolException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/http/client/methods/CloseableHttpResponse/close()|",
      "|java+method:///org/apache/http/impl/client/cache/CacheValidityPolicy/mayReturnStaleIfError(org.apache.http.HttpRequest,org.apache.http.client.cache.HttpCacheEntry,java.util.Date)|",
      "|java+method:///org/apache/http/StatusLine/getStatusCode()|",
      "|java+method:///org/apache/http/impl/client/cache/CachingExec/staleIfErrorAppliesTo(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/http/impl/client/cache/CachingExec/recordCacheUpdate(org.apache.http.protocol.HttpContext)|",
      "|java+method:///org/apache/http/client/methods/HttpRequestWrapper/getURI()|",
      "|java+method:///org/apache/http/impl/client/cache/CachedHttpResponseGenerator/generateResponse(org.apache.http.client.cache.HttpCacheEntry)|",
      "|java+method:///org/apache/http/impl/client/cache/CachedHttpResponseGenerator/generateNotModifiedResponse(org.apache.http.client.cache.HttpCacheEntry)|",
      "|java+method:///org/apache/http/impl/client/cache/CachingExec/staleResponseNotAllowed(org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.client.cache.HttpCacheEntry,java.util.Date)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/http/client/methods/HttpRequestWrapper/setURI(java.net.URI)|",
      "|java+method:///org/apache/http/impl/client/cache/CachingExec/revalidationResponseIsTooOld(org.apache.http.HttpResponse,org.apache.http.client.cache.HttpCacheEntry)|",
      "|java+method:///org/apache/http/client/methods/CloseableHttpResponse/getStatusLine()|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/http/impl/execchain/ClientExecChain/execute(org.apache.http.conn.routing.HttpRoute,org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.client.protocol.HttpClientContext,org.apache.http.client.methods.HttpExecutionAware)|",
      "|java+method:///org/apache/http/client/protocol/HttpClientContext/getTargetHost()|",
      "|java+method:///org/apache/http/client/methods/CloseableHttpResponse/addHeader(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/http/impl/client/cache/InternalURIUtils/rewriteURIForRoute(java.net.URI,org.apache.http.conn.routing.RouteInfo)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/http/impl/client/cache/CachedResponseSuitabilityChecker/isConditional(org.apache.http.HttpRequest)|",
      "|java+method:///org/apache/http/impl/client/cache/HttpCache/updateCacheEntry(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.cache.HttpCacheEntry,org.apache.http.HttpResponse,java.util.Date,java.util.Date)|",
      "|java+method:///org/apache/http/impl/client/cache/CachedResponseSuitabilityChecker/allConditionalsMatch(org.apache.http.HttpRequest,org.apache.http.client.cache.HttpCacheEntry,java.util.Date)|",
      "|java+method:///org/apache/http/impl/client/cache/ConditionalRequestBuilder/buildConditionalRequest(org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.client.cache.HttpCacheEntry)|",
      "|java+method:///org/apache/http/impl/client/cache/CachingExec/getCurrentDate()|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/client/methods/AbstractExecutionAwareRequest/setConnectionRequest(org.apache.http.conn.ClientConnectionRequest)|",
    "called": "|java+constructor:///org/apache/http/client/methods/AbstractExecutionAwareRequest$1/AbstractExecutionAwareRequest$1(org.apache.http.client.methods.AbstractExecutionAwareRequest,org.apache.http.conn.ClientConnectionRequest)|",
    "v1Body": [
      "|java+constructor:///org/apache/http/client/methods/AbstractExecutionAwareRequest$1/AbstractExecutionAwareRequest$1(org.apache.http.client.methods.AbstractExecutionAwareRequest,org.apache.http.conn.ClientConnectionRequest)|",
      "|java+method:///java/util/concurrent/locks/Lock/unlock()|",
      "|java+method:///java/util/concurrent/locks/Lock/lock()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/http/client/methods/AbstractExecutionAwareRequest$1/AbstractExecutionAwareRequest$1(org.apache.http.client.methods.AbstractExecutionAwareRequest,org.apache.http.conn.ClientConnectionRequest)|",
      "|java+method:///org/apache/http/client/methods/AbstractExecutionAwareRequest/setCancellable(org.apache.http.concurrent.Cancellable)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/client/fluent/Request/Trace(java.lang.String)|",
    "called": "|java+constructor:///org/apache/http/client/fluent/Request/Request(org.apache.http.client.fluent.InternalHttpRequest)|",
    "v1Body": [
      "|java+constructor:///org/apache/http/client/fluent/Request/Request(java.lang.String,java.net.URI)|",
      "|java+method:///java/net/URI/create(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+constructor:///org/apache/http/client/fluent/InternalHttpRequest/InternalHttpRequest(java.lang.String,java.net.URI)|",
      "|java+constructor:///org/apache/http/client/fluent/Request/Request(org.apache.http.client.fluent.InternalHttpRequest)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///org/apache/http/client/fluent/Request/Delete(java.lang.String)|",
    "called": "|java+constructor:///org/apache/http/client/fluent/Request/Request(org.apache.http.client.fluent.InternalHttpRequest)|",
    "v1Body": [
      "|java+constructor:///org/apache/http/client/fluent/Request/Request(java.lang.String,java.net.URI)|",
      "|java+method:///java/net/URI/create(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+constructor:///org/apache/http/client/fluent/InternalHttpRequest/InternalHttpRequest(java.lang.String,java.net.URI)|",
      "|java+constructor:///org/apache/http/client/fluent/Request/Request(org.apache.http.client.fluent.InternalHttpRequest)|"
    ],
    "affectedLib": "org.apache.httpcomponents:httpclient-osgi:4.3.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$ShortDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders/getShortBuilder()|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$ShortBuilder/completeAndClearBuffer(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders/getShortBuilder()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$ShortDeser/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$ShortDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/getArrayBuilders()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$ShortBuilder/resetAndStart()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$ShortBuilder/appendCompletedChunk(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$ShortDeser/_parseShortPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders/getShortBuilder()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$ShortDeser/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$ShortBuilder/completeAndClearBuffer(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonMappingException/wrapWithPath(java.lang.Throwable,java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$ShortDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/getArrayBuilders()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$ShortBuilder/resetAndStart()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$ShortBuilder/appendCompletedChunk(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$ShortDeser/_parseShortPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer/_deserializeCustom(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/returnObjectBuffer(com.fasterxml.jackson.databind.util.ObjectBuffer)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/resetAndStart()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer/_parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/completeAndClearBuffer(java.lang.Object%5B%5D,int,java.lang.Class)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getText()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/appendCompletedChunk(java.lang.Object%5B%5D)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/leaseObjectBuffer()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/JsonMappingException/wrapWithPath(java.lang.Throwable,java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer/_deserializeCustom(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/returnObjectBuffer(com.fasterxml.jackson.databind.util.ObjectBuffer)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/resetAndStart()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer/_parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/completeAndClearBuffer(java.lang.Object%5B%5D,int,java.lang.Class)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getText()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/appendCompletedChunk(java.lang.Object%5B%5D)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/leaseObjectBuffer()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/deser/DefaultDeserializationContext/findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.annotation.ObjectIdResolver)|",
    "called": "|java+constructor:///com/fasterxml/jackson/databind/deser/impl/ReadableObjectId/ReadableObjectId(com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///java/util/LinkedHashMap/get(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/LinkedHashMap/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///com/fasterxml/jackson/databind/deser/impl/ReadableObjectId/ReadableObjectId(com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey)|",
      "|java+method:///com/fasterxml/jackson/annotation/ObjectIdResolver/newForDeserialization(java.lang.Object)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///java/util/LinkedHashMap/LinkedHashMap()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/impl/ReadableObjectId/setResolver(com.fasterxml.jackson.annotation.ObjectIdResolver)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/fasterxml/jackson/annotation/ObjectIdResolver/canUseFor(com.fasterxml.jackson.annotation.ObjectIdResolver)|",
      "|java+method:///com/fasterxml/jackson/annotation/ObjectIdGenerator/key(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///java/util/LinkedHashMap/get(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/LinkedHashMap/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///com/fasterxml/jackson/databind/deser/impl/ReadableObjectId/ReadableObjectId(com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey)|",
      "|java+method:///com/fasterxml/jackson/annotation/ObjectIdResolver/newForDeserialization(java.lang.Object)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///java/util/LinkedHashMap/LinkedHashMap()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/impl/ReadableObjectId/setResolver(com.fasterxml.jackson.annotation.ObjectIdResolver)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///com/fasterxml/jackson/annotation/SimpleObjectIdResolver/SimpleObjectIdResolver()|",
      "|java+method:///com/fasterxml/jackson/annotation/ObjectIdResolver/canUseFor(com.fasterxml.jackson.annotation.ObjectIdResolver)|",
      "|java+method:///com/fasterxml/jackson/annotation/ObjectIdGenerator/key(java.lang.Object)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/deser/std/CollectionDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/deser/std/CollectionDeserializer$CollectionReferringAccumulator/add(java.lang.Object)|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/getNullValue()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/CollectionDeserializer$CollectionReferringAccumulator/add(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/JavaType/getRawClass()|",
      "|java+method:///com/fasterxml/jackson/databind/JavaType/getContentType()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/CollectionDeserializer$CollectionReferringAccumulator/handleUnresolvedReference(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/getObjectIdReader()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+constructor:///com/fasterxml/jackson/databind/deser/std/CollectionDeserializer$CollectionReferringAccumulator/CollectionDeserializer$CollectionReferringAccumulator(java.lang.Class,java.util.Collection)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonMappingException/from(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/CollectionDeserializer/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/impl/ReadableObjectId/appendReferring(com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring)|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/UnresolvedForwardReference/getRoid()|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/JsonMappingException/wrapWithPath(java.lang.Throwable,java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/getNullValue()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/CollectionDeserializer$CollectionReferringAccumulator/add(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/JavaType/getRawClass()|",
      "|java+method:///com/fasterxml/jackson/databind/JavaType/getContentType()|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/CollectionDeserializer$CollectionReferringAccumulator/handleUnresolvedReference(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/getObjectIdReader()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+constructor:///com/fasterxml/jackson/databind/deser/std/CollectionDeserializer$CollectionReferringAccumulator/CollectionDeserializer$CollectionReferringAccumulator(java.lang.Class,java.util.Collection)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonMappingException/from(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/CollectionDeserializer/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/impl/ReadableObjectId/appendReferring(com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring)|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/UnresolvedForwardReference/getRoid()|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/deser/BeanDeserializerFactory/constructSetterlessProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/introspect/AnnotatedMethod/getType(com.fasterxml.jackson.databind.type.TypeBindings)|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/deser/BeanDeserializerFactory/findDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/canOverrideAccessModifiers()|",
      "|java+method:///com/fasterxml/jackson/databind/introspect/BeanPropertyDefinition/getGetter()|",
      "|java+method:///com/fasterxml/jackson/databind/JavaType/getTypeHandler()|",
      "|java+constructor:///com/fasterxml/jackson/databind/deser/impl/SetterlessProperty/SetterlessProperty(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMethod)|",
      "|java+method:///com/fasterxml/jackson/databind/introspect/AnnotatedMethod/getType(com.fasterxml.jackson.databind.type.TypeBindings)|",
      "|java+method:///com/fasterxml/jackson/databind/introspect/AnnotatedMethod/fixAccess()|",
      "|java+method:///com/fasterxml/jackson/databind/BeanDescription/getClassAnnotations()|",
      "|java+method:///com/fasterxml/jackson/databind/BeanDescription/bindingsForBeanType()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/SettableBeanProperty/withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/BeanDeserializerFactory/modifyTypeByAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/deser/BeanDeserializerFactory/findDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/canOverrideAccessModifiers()|",
      "|java+method:///com/fasterxml/jackson/databind/introspect/BeanPropertyDefinition/getGetter()|",
      "|java+method:///com/fasterxml/jackson/databind/JavaType/getTypeHandler()|",
      "|java+constructor:///com/fasterxml/jackson/databind/deser/impl/SetterlessProperty/SetterlessProperty(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMethod)|",
      "|java+method:///com/fasterxml/jackson/databind/introspect/AnnotatedMethod/getType(com.fasterxml.jackson.databind.type.TypeBindings)|",
      "|java+method:///com/fasterxml/jackson/databind/introspect/AnnotatedMethod/fixAccess()|",
      "|java+method:///com/fasterxml/jackson/databind/BeanDescription/getClassAnnotations()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/BeanDeserializerFactory/resolveType(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedMember)|",
      "|java+method:///com/fasterxml/jackson/databind/BeanDescription/bindingsForBeanType()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/SettableBeanProperty/withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/BeanDeserializerFactory/modifyTypeByAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$ByteDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$ByteDeser/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders/getByteBuilder()|",
      "|java+method:///java/lang/Class/getComponentType()|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/getArrayBuilders()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getBinaryValue(com.fasterxml.jackson.core.Base64Variant)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/getBase64Variant()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$ByteDeser/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getByteValue()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$ByteBuilder/completeAndClearBuffer(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$ByteDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/mappingException(java.lang.Class)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$ByteBuilder/resetAndStart()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getEmbeddedObject()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$ByteBuilder/appendCompletedChunk(java.lang.Object,int)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/JsonMappingException/wrapWithPath(java.lang.Throwable,java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders/getByteBuilder()|",
      "|java+method:///java/lang/Class/getComponentType()|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/getArrayBuilders()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getBinaryValue(com.fasterxml.jackson.core.Base64Variant)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/getBase64Variant()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$ByteDeser/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getByteValue()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$ByteBuilder/completeAndClearBuffer(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$ByteDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/mappingException(java.lang.Class)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$ByteBuilder/resetAndStart()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getEmbeddedObject()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$ByteBuilder/appendCompletedChunk(java.lang.Object,int)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$BooleanDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$BooleanDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/getArrayBuilders()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$BooleanDeser/_parseBooleanPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$BooleanDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders/getBooleanBuilder()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$BooleanBuilder/completeAndClearBuffer(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$BooleanDeser/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$BooleanBuilder/appendCompletedChunk(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$BooleanBuilder/resetAndStart()|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/JsonMappingException/wrapWithPath(java.lang.Throwable,java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/getArrayBuilders()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$BooleanDeser/_parseBooleanPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$BooleanDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders/getBooleanBuilder()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$BooleanBuilder/completeAndClearBuffer(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$BooleanDeser/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$BooleanBuilder/appendCompletedChunk(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$BooleanBuilder/resetAndStart()|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/ser/std/AsArraySerializerBase/acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/SerializerProvider/findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/SerializerProvider/getTypeFactory()|",
      "|java+method:///com/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper/getProvider()|",
      "|java+method:///com/fasterxml/jackson/databind/jsonFormatVisitors/JsonArrayFormatVisitor/itemsFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable,com.fasterxml.jackson.databind.JavaType)|",
      "|java+method:///com/fasterxml/jackson/databind/type/TypeFactory/moreSpecificType(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)|",
      "|java+method:///com/fasterxml/jackson/databind/JavaType/getContentType()|",
      "|java+constructor:///com/fasterxml/jackson/databind/JsonMappingException/JsonMappingException(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper/expectArrayFormat(com.fasterxml.jackson.databind.JavaType)|",
      "|java+method:///com/fasterxml/jackson/databind/SerializerProvider/findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper/getProvider()|",
      "|java+method:///com/fasterxml/jackson/databind/jsonFormatVisitors/JsonArrayFormatVisitor/itemsFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable,com.fasterxml.jackson.databind.JavaType)|",
      "|java+method:///com/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper/expectArrayFormat(com.fasterxml.jackson.databind.JavaType)|",
      "|java+method:///com/fasterxml/jackson/databind/SerializerProvider/findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/deser/std/StringCollectionDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/deser/std/StringCollectionDeserializer/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/deser/std/StringCollectionDeserializer/deserializeUsingCustom(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection,com.fasterxml.jackson.databind.JsonDeserializer)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/StringCollectionDeserializer/_parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getText()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/StringCollectionDeserializer/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/JsonMappingException/wrapWithPath(java.lang.Throwable,java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/StringCollectionDeserializer/deserializeUsingCustom(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection,com.fasterxml.jackson.databind.JsonDeserializer)|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/StringCollectionDeserializer/_parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getText()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/StringCollectionDeserializer/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/deser/std/ObjectArrayDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/appendCompletedChunk(java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/getNullValue()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/ObjectArrayDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/returnObjectBuffer(com.fasterxml.jackson.databind.util.ObjectBuffer)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/completeAndClearBuffer(java.lang.Object%5B%5D,int)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/resetAndStart()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/ObjectArrayDeserializer/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/completeAndClearBuffer(java.lang.Object%5B%5D,int,java.lang.Class)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/appendCompletedChunk(java.lang.Object%5B%5D)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/leaseObjectBuffer()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonMappingException/wrapWithPath(java.lang.Throwable,java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/getNullValue()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/ObjectArrayDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/returnObjectBuffer(com.fasterxml.jackson.databind.util.ObjectBuffer)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/completeAndClearBuffer(java.lang.Object%5B%5D,int)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/resetAndStart()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/ObjectArrayDeserializer/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/completeAndClearBuffer(java.lang.Object%5B%5D,int,java.lang.Class)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/appendCompletedChunk(java.lang.Object%5B%5D)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/leaseObjectBuffer()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$FloatDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$FloatDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$FloatBuilder/completeAndClearBuffer(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders/getFloatBuilder()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$FloatDeser/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/getArrayBuilders()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$FloatBuilder/resetAndStart()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$FloatDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$FloatDeser/_parseFloatPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$FloatBuilder/appendCompletedChunk(java.lang.Object,int)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders/getFloatBuilder()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$FloatDeser/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonMappingException/wrapWithPath(java.lang.Throwable,java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$FloatBuilder/completeAndClearBuffer(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/getArrayBuilders()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$FloatBuilder/resetAndStart()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$FloatDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$FloatDeser/_parseFloatPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$FloatBuilder/appendCompletedChunk(java.lang.Object,int)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/deser/std/MapDeserializer/_readAndBind(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/deser/std/MapDeserializer$MapReferringAccumulator/put(java.lang.Object,java.lang.Object)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/getNullValue()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentName()|",
      "|java+method:///com/fasterxml/jackson/databind/JavaType/getRawClass()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/getObjectIdReader()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/skipChildren()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/MapDeserializer$MapReferringAccumulator/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/MapDeserializer/handleUnresolvedReference(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator,java.lang.Object,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference)|",
      "|java+method:///com/fasterxml/jackson/databind/KeyDeserializer/deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///java/util/HashSet/contains(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/JavaType/getContentType()|",
      "|java+constructor:///com/fasterxml/jackson/databind/deser/std/MapDeserializer$MapReferringAccumulator/MapDeserializer$MapReferringAccumulator(java.lang.Class,java.util.Map)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/getNullValue()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentName()|",
      "|java+method:///com/fasterxml/jackson/databind/JavaType/getRawClass()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/getObjectIdReader()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/MapDeserializer/wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/skipChildren()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/MapDeserializer$MapReferringAccumulator/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/MapDeserializer/handleUnresolvedReference(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator,java.lang.Object,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference)|",
      "|java+method:///com/fasterxml/jackson/databind/KeyDeserializer/deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///java/util/HashSet/contains(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/JavaType/getContentType()|",
      "|java+constructor:///com/fasterxml/jackson/databind/deser/std/MapDeserializer$MapReferringAccumulator/MapDeserializer$MapReferringAccumulator(java.lang.Class,java.util.Map)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/ser/std/AsArraySerializerBase/getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/node/ObjectNode/put(java.lang.String,com.fasterxml.jackson.databind.JsonNode)|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/jsonschema/JsonSchema/getDefaultSchemaNode()|",
      "|java+method:///com/fasterxml/jackson/databind/node/ObjectNode/put(java.lang.String,com.fasterxml.jackson.databind.JsonNode)|",
      "|java+method:///com/fasterxml/jackson/databind/JavaType/getRawClass()|",
      "|java+method:///com/fasterxml/jackson/databind/JavaType/getContentType()|",
      "|java+method:///com/fasterxml/jackson/databind/jsonschema/SchemaAware/getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type)|",
      "|java+method:///java/lang/reflect/ParameterizedType/getActualTypeArguments()|",
      "|java+method:///com/fasterxml/jackson/databind/ser/std/AsArraySerializerBase/createSchemaNode(java.lang.String,boolean)|",
      "|java+method:///com/fasterxml/jackson/databind/SerializerProvider/findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)|",
      "|java+method:///com/fasterxml/jackson/databind/SerializerProvider/constructType(java.lang.reflect.Type)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/jsonschema/JsonSchema/getDefaultSchemaNode()|",
      "|java+method:///com/fasterxml/jackson/databind/node/ObjectNode/put(java.lang.String,com.fasterxml.jackson.databind.JsonNode)|",
      "|java+method:///com/fasterxml/jackson/databind/JavaType/getRawClass()|",
      "|java+method:///com/fasterxml/jackson/databind/jsonschema/SchemaAware/getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type)|",
      "|java+method:///com/fasterxml/jackson/databind/ser/std/AsArraySerializerBase/createSchemaNode(java.lang.String,boolean)|",
      "|java+method:///com/fasterxml/jackson/databind/SerializerProvider/findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/deser/std/EnumSetDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/deser/std/EnumSetDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/deser/std/EnumSetDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/mappingException(java.lang.Class)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/EnumSetDeserializer/constructSet()|",
      "|java+method:///java/util/EnumSet/add(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/deser/std/EnumSetDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonMappingException/wrapWithPath(java.lang.Throwable,java.lang.Object,int)|",
      "|java+method:///java/util/EnumSet/size()|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/mappingException(java.lang.Class)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/EnumSetDeserializer/constructSet()|",
      "|java+method:///java/util/EnumSet/add(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/deser/std/CollectionDeserializer/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/getNullValue()|",
      "|java+method:///com/fasterxml/jackson/databind/JavaType/getRawClass()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/mappingException(java.lang.Class)|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonMappingException/wrapWithPath(java.lang.Throwable,java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/getNullValue()|",
      "|java+method:///com/fasterxml/jackson/databind/JavaType/getRawClass()|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/mappingException(java.lang.Class)|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer/_deserializeCustom(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/appendCompletedChunk(java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/getNullValue()|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/returnObjectBuffer(com.fasterxml.jackson.databind.util.ObjectBuffer)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/resetAndStart()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/completeAndClearBuffer(java.lang.Object%5B%5D,int,java.lang.Class)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/appendCompletedChunk(java.lang.Object%5B%5D)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/leaseObjectBuffer()|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonMappingException/wrapWithPath(java.lang.Throwable,java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/getNullValue()|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/returnObjectBuffer(com.fasterxml.jackson.databind.util.ObjectBuffer)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/resetAndStart()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/completeAndClearBuffer(java.lang.Object%5B%5D,int,java.lang.Class)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/appendCompletedChunk(java.lang.Object%5B%5D)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/leaseObjectBuffer()|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/ser/BeanPropertyWriter/depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/ser/BeanPropertyWriter/getGenericPropertyType()|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/jsonschema/JsonSchema/getDefaultSchemaNode()|",
      "|java+method:///com/fasterxml/jackson/databind/ser/BeanPropertyWriter/getRawSerializationType()|",
      "|java+method:///com/fasterxml/jackson/databind/JavaType/getRawClass()|",
      "|java+method:///com/fasterxml/jackson/databind/ser/BeanPropertyWriter/isRequired()|",
      "|java+method:///com/fasterxml/jackson/databind/ser/BeanPropertyWriter/_depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.JsonNode)|",
      "|java+method:///com/fasterxml/jackson/databind/ser/BeanPropertyWriter/getGenericPropertyType()|",
      "|java+method:///com/fasterxml/jackson/databind/ser/BeanPropertyWriter/getPropertyType()|",
      "|java+method:///com/fasterxml/jackson/databind/jsonschema/SchemaAware/getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type,boolean)|",
      "|java+method:///com/fasterxml/jackson/databind/SerializerProvider/findValueSerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)|",
      "|java+method:///com/fasterxml/jackson/databind/ser/BeanPropertyWriter/getSerializer()|",
      "|java+method:///com/fasterxml/jackson/databind/ser/BeanPropertyWriter/getSerializationType()|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/ser/BeanPropertyWriter/getType()|",
      "|java+method:///com/fasterxml/jackson/databind/jsonschema/JsonSchema/getDefaultSchemaNode()|",
      "|java+method:///com/fasterxml/jackson/databind/JavaType/getRawClass()|",
      "|java+method:///com/fasterxml/jackson/databind/ser/BeanPropertyWriter/isRequired()|",
      "|java+method:///com/fasterxml/jackson/databind/ser/BeanPropertyWriter/_depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.JsonNode)|",
      "|java+method:///com/fasterxml/jackson/databind/jsonschema/SchemaAware/getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type,boolean)|",
      "|java+method:///com/fasterxml/jackson/databind/ser/BeanPropertyWriter/getGenericPropertyType()|",
      "|java+method:///com/fasterxml/jackson/databind/SerializerProvider/findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)|",
      "|java+method:///com/fasterxml/jackson/databind/ser/BeanPropertyWriter/getSerializer()|",
      "|java+method:///com/fasterxml/jackson/databind/ser/BeanPropertyWriter/getSerializationType()|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/deser/BeanDeserializer/_deserializeOther(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/deser/BeanDeserializer/deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/deser/BeanDeserializer/deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/BeanDeserializer/deserializeWithObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/BeanDeserializer/deserializeFromBoolean(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/BeanDeserializer/handledType()|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/mappingException(java.lang.Class)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getEmbeddedObject()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/BeanDeserializer/deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/BeanDeserializer/vanillaDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken)|",
      "|java+method:///com/fasterxml/jackson/core/JsonToken/ordinal()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/BeanDeserializer/deserializeFromString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/BeanDeserializer/deserializeFromDouble(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/BeanDeserializer/deserializeFromNumber(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/BeanDeserializer/_missingToken(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/deser/BeanDeserializer/deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/BeanDeserializer/deserializeWithObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/BeanDeserializer/deserializeFromBoolean(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/BeanDeserializer/handledType()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/BeanDeserializer/deserializeFromNumber(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/BeanDeserializer/deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/BeanDeserializer/vanillaDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonToken)|",
      "|java+method:///com/fasterxml/jackson/core/JsonToken/ordinal()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/BeanDeserializer/deserializeFromString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/BeanDeserializer/deserializeFromDouble(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/BeanDeserializer/deserializeFromEmbedded(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/mappingException(java.lang.Class)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/deser/std/MapDeserializer/_deserializeUsingCreator(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/deser/impl/PropertyBasedCreator/findCreatorProperty(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/deser/impl/PropertyValueBuffer/bufferMapProperty(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/getNullValue()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/SettableBeanProperty/getCreatorIndex()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/impl/PropertyBasedCreator/startBuilding(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentName()|",
      "|java+method:///com/fasterxml/jackson/databind/JavaType/getRawClass()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/impl/PropertyBasedCreator/build(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/impl/PropertyValueBuffer/assignParameter(int,java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///java/util/HashSet/contains(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/MapDeserializer/_readAndBind(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/skipChildren()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/MapDeserializer/wrapAndThrow(java.lang.Throwable,java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/SettableBeanProperty/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/KeyDeserializer/deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/impl/PropertyBasedCreator/findCreatorProperty(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/deser/impl/PropertyValueBuffer/bufferMapProperty(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/getNullValue()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/SettableBeanProperty/getCreatorIndex()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/impl/PropertyBasedCreator/startBuilding(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentName()|",
      "|java+method:///com/fasterxml/jackson/databind/JavaType/getRawClass()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/impl/PropertyBasedCreator/build(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/impl/PropertyValueBuffer/assignParameter(int,java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/MapDeserializer/wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///java/util/HashSet/contains(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/MapDeserializer/_readAndBind(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/skipChildren()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/SettableBeanProperty/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/KeyDeserializer/deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/impl/PropertyBasedCreator/findCreatorProperty(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$DoubleDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$DoubleDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$DoubleDeser/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/getArrayBuilders()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$DoubleBuilder/appendCompletedChunk(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$DoubleBuilder/resetAndStart()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$DoubleBuilder/completeAndClearBuffer(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$DoubleDeser/_parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$DoubleDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders/getDoubleBuilder()|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/JsonMappingException/wrapWithPath(java.lang.Throwable,java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$DoubleDeser/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/getArrayBuilders()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$DoubleBuilder/appendCompletedChunk(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$DoubleBuilder/resetAndStart()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$DoubleBuilder/completeAndClearBuffer(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$DoubleDeser/_parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$DoubleDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders/getDoubleBuilder()|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/deser/std/ArrayBlockingQueueDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///java/util/concurrent/ArrayBlockingQueue/ArrayBlockingQueue(int)|",
      "|java+method:///java/util/Collection/addAll(java.util.Collection)|",
      "|java+method:///java/util/ArrayList/add(java.lang.Object)|",
      "|java+method:///java/util/ArrayList/size()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/ArrayBlockingQueueDeserializer/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/getNullValue()|",
      "|java+constructor:///java/util/concurrent/ArrayBlockingQueue/ArrayBlockingQueue(int,boolean,java.util.Collection)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+constructor:///java/util/concurrent/ArrayBlockingQueue/ArrayBlockingQueue(int)|",
      "|java+method:///java/util/Collection/addAll(java.util.Collection)|",
      "|java+method:///java/util/ArrayList/add(java.lang.Object)|",
      "|java+method:///java/util/ArrayList/size()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonMappingException/wrapWithPath(java.lang.Throwable,java.lang.Object,int)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/ArrayBlockingQueueDeserializer/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/getNullValue()|",
      "|java+constructor:///java/util/concurrent/ArrayBlockingQueue/ArrayBlockingQueue(int,boolean,java.util.Collection)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$IntDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders/getIntBuilder()|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$IntBuilder/appendCompletedChunk(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$IntDeser/_parseIntPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders/getIntBuilder()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$IntBuilder/resetAndStart()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$IntBuilder/completeAndClearBuffer(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$IntDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/getArrayBuilders()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$IntDeser/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$IntDeser/_parseIntPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders/getIntBuilder()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$IntBuilder/resetAndStart()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$IntBuilder/completeAndClearBuffer(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$IntDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$IntBuilder/appendCompletedChunk(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonMappingException/wrapWithPath(java.lang.Throwable,java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/getArrayBuilders()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$IntDeser/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/util/StdDateFormat/parseAsISO8601(java.lang.String,java.text.ParsePosition)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/util/StdDateFormat/hasTimeZone(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/insert(int,java.lang.String)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///com/fasterxml/jackson/databind/util/StdDateFormat/hasTimeZone(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/delete(int,int)|",
      "|java+method:///java/lang/StringBuilder/append(char)|",
      "|java+method:///java/text/DateFormat/parse(java.lang.String,java.text.ParsePosition)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/fasterxml/jackson/databind/util/StdDateFormat/_cloneFormat(java.text.DateFormat,java.lang.String,java.util.TimeZone,java.util.Locale)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/charAt(int)|",
      "|java+method:///java/lang/Character/isDigit(char)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/lastIndexOf(int)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/StringBuilder/insert(int,java.lang.String)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///com/fasterxml/jackson/databind/util/StdDateFormat/hasTimeZone(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/delete(int,int)|",
      "|java+method:///java/lang/StringBuilder/append(char)|",
      "|java+method:///java/text/DateFormat/parse(java.lang.String,java.text.ParsePosition)|",
      "|java+method:///java/lang/StringBuilder/insert(int,char)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/fasterxml/jackson/databind/util/StdDateFormat/_cloneFormat(java.text.DateFormat,java.lang.String,java.util.TimeZone,java.util.Locale)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/charAt(int)|",
      "|java+method:///java/lang/Character/isDigit(char)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/lastIndexOf(int)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$LongDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders/getLongBuilder()|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$LongBuilder/resetAndStart()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$LongBuilder/completeAndClearBuffer(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$LongDeser/_parseLongPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders/getLongBuilder()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$LongBuilder/appendCompletedChunk(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$LongDeser/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$LongDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/getArrayBuilders()|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/JsonMappingException/wrapWithPath(java.lang.Throwable,java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$LongBuilder/resetAndStart()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$LongBuilder/completeAndClearBuffer(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$LongDeser/_parseLongPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders/getLongBuilder()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$LongBuilder/appendCompletedChunk(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$LongDeser/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$LongDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/getArrayBuilders()|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/util/LRUMap/put(java.lang.Object,java.lang.Object)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/util/LRUMap/clear()|",
    "v1Body": [
      "|java+method:///java/util/concurrent/locks/Lock/unlock()|",
      "|java+method:///java/util/LinkedHashMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/concurrent/locks/Lock/lock()|"
    ],
    "v2Body": [
      "|java+method:///java/util/concurrent/ConcurrentHashMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/concurrent/ConcurrentHashMap/size()|",
      "|java+method:///com/fasterxml/jackson/databind/util/LRUMap/clear()|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/deser/std/MapDeserializer/_readAndBindStringMap(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/deser/std/MapDeserializer$MapReferringAccumulator/put(java.lang.Object,java.lang.Object)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/getNullValue()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentName()|",
      "|java+method:///com/fasterxml/jackson/databind/JavaType/getRawClass()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/getObjectIdReader()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/skipChildren()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/MapDeserializer$MapReferringAccumulator/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/MapDeserializer/handleUnresolvedReference(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator,java.lang.Object,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///java/util/HashSet/contains(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/JavaType/getContentType()|",
      "|java+constructor:///com/fasterxml/jackson/databind/deser/std/MapDeserializer$MapReferringAccumulator/MapDeserializer$MapReferringAccumulator(java.lang.Class,java.util.Map)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/getNullValue()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentName()|",
      "|java+method:///com/fasterxml/jackson/databind/JavaType/getRawClass()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/getObjectIdReader()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/MapDeserializer/wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/skipChildren()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/MapDeserializer$MapReferringAccumulator/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/MapDeserializer/handleUnresolvedReference(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator,java.lang.Object,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///java/util/HashSet/contains(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/JavaType/getContentType()|",
      "|java+constructor:///com/fasterxml/jackson/databind/deser/std/MapDeserializer$MapReferringAccumulator/MapDeserializer$MapReferringAccumulator(java.lang.Class,java.util.Map)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/deser/std/MapDeserializer/wrapAndThrow(java.lang.Throwable,java.lang.Object)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/deser/std/MapDeserializer/wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/Throwable/getCause()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonMappingException/wrapWithPath(java.lang.Throwable,java.lang.Object,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/deser/std/MapDeserializer/wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/introspect/ObjectIdInfo/withAlwaysAsId(boolean)|",
    "called": "|java+constructor:///com/fasterxml/jackson/databind/introspect/ObjectIdInfo/ObjectIdInfo(com.fasterxml.jackson.databind.PropertyName,java.lang.Class,java.lang.Class,boolean,java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///com/fasterxml/jackson/databind/introspect/ObjectIdInfo/ObjectIdInfo(com.fasterxml.jackson.databind.PropertyName,java.lang.Class,java.lang.Class,boolean)|"
    ],
    "v2Body": [
      "|java+constructor:///com/fasterxml/jackson/databind/introspect/ObjectIdInfo/ObjectIdInfo(com.fasterxml.jackson.databind.PropertyName,java.lang.Class,java.lang.Class,boolean,java.lang.Class)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///io/fabric8/api/ProfileBuilder$Factory/create()|",
    "called": "|java+method:///io/fabric8/api/ProfileBuilder$Factory/getProfileBuilders()|",
    "v1Body": [
      "|java+method:///org/jboss/gravia/runtime/ServiceLocator/getRequiredService(java.lang.Class)|",
      "|java+method:///io/fabric8/api/ProfileBuilders/profileBuilder()|"
    ],
    "v2Body": [
      "|java+method:///io/fabric8/api/ProfileBuilder$Factory/getProfileBuilders()|",
      "|java+method:///io/fabric8/api/ProfileBuilders/profileBuilder()|"
    ],
    "affectedLib": "io.fabric8:fabric-api:1.2.0.redhat-133",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///io/fabric8/api/VersionBuilder$Factory/createFrom(io.fabric8.api.Version)|",
    "called": "|java+method:///io/fabric8/api/VersionBuilder$Factory/getProfileBuilders()|",
    "v1Body": [
      "|java+method:///org/jboss/gravia/runtime/ServiceLocator/getRequiredService(java.lang.Class)|",
      "|java+method:///io/fabric8/api/ProfileBuilders/profileVersionBuilderFrom(io.fabric8.api.Version)|"
    ],
    "v2Body": [
      "|java+method:///io/fabric8/api/ProfileBuilders/profileVersionBuilderFrom(io.fabric8.api.Version)|",
      "|java+method:///io/fabric8/api/VersionBuilder$Factory/getProfileBuilders()|"
    ],
    "affectedLib": "io.fabric8:fabric-api:1.2.0.redhat-133",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+constructor:///io/fabric8/api/permit/PermitKey/PermitKey(java.lang.Class,java.lang.String)|",
    "called": "|java+method:///io/fabric8/api/gravia/IllegalArgumentAssertion/assertNotNull(java.lang.Object,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/jboss/gravia/utils/IllegalArgumentAssertion/assertNotNull(java.lang.Object,java.lang.String)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///io/fabric8/api/gravia/IllegalArgumentAssertion/assertNotNull(java.lang.Object,java.lang.String)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "io.fabric8:fabric-api:1.2.0.redhat-133",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///io/fabric8/api/ProfileBuilder$Factory/create(java.lang.String)|",
    "called": "|java+method:///io/fabric8/api/ProfileBuilder$Factory/getProfileBuilders()|",
    "v1Body": [
      "|java+method:///org/jboss/gravia/runtime/ServiceLocator/getRequiredService(java.lang.Class)|",
      "|java+method:///io/fabric8/api/ProfileBuilders/profileBuilder(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///io/fabric8/api/ProfileBuilder$Factory/getProfileBuilders()|",
      "|java+method:///io/fabric8/api/ProfileBuilders/profileBuilder(java.lang.String)|"
    ],
    "affectedLib": "io.fabric8:fabric-api:1.2.0.redhat-133",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///io/fabric8/api/Profiles/refreshProfile(io.fabric8.api.FabricService,io.fabric8.api.Profile)|",
    "called": "|java+method:///io/fabric8/api/ProfileBuilder$Factory/createFrom(io.fabric8.api.Profile)|",
    "v1Body": [
      "|java+method:///io/fabric8/api/ProfileService/updateProfile(io.fabric8.api.Profile)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/fabric8/api/ProfileBuilder/getConfiguration(java.lang.String)|",
      "|java+method:///java/lang/String/valueOf(long)|",
      "|java+method:///io/fabric8/api/ProfileBuilder/addConfiguration(java.lang.String,java.util.Map)|",
      "|java+method:///io/fabric8/api/Profile/getId()|",
      "|java+method:///io/fabric8/api/ProfileBuilder$Factory/createFrom(io.fabric8.api.Profile)|",
      "|java+method:///java/util/Map/putAll(java.util.Map)|",
      "|java+method:///io/fabric8/api/ProfileBuilder/getProfile()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/fabric8/api/FabricService/adapt(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///io/fabric8/api/ProfileService/updateProfile(io.fabric8.api.Profile)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/fabric8/api/ProfileBuilder/getProfile()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/fabric8/api/ProfileBuilder/getConfiguration(java.lang.String)|",
      "|java+method:///java/lang/String/valueOf(long)|",
      "|java+method:///io/fabric8/api/ProfileBuilder/addConfiguration(java.lang.String,java.util.Map)|",
      "|java+method:///io/fabric8/api/Profile/getId()|",
      "|java+method:///io/fabric8/api/ProfileBuilder$Factory/createFrom(io.fabric8.api.Profile)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/fabric8/api/FabricService/adapt(java.lang.Class)|"
    ],
    "affectedLib": "io.fabric8:fabric-api:1.2.0.redhat-133",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///io/fabric8/api/scr/AbstractRuntimeProperties/putRuntimeAttribute(java.lang.Class,java.lang.Object)|",
    "called": "|java+method:///io/fabric8/api/gravia/IllegalStateAssertion/assertNull(java.lang.Object,java.lang.String)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/jboss/gravia/utils/IllegalStateAssertion/assertNull(java.lang.Object,java.lang.String)|",
      "|java+method:///org/jboss/gravia/utils/IllegalArgumentAssertion/assertNotNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///io/fabric8/api/gravia/IllegalStateAssertion/assertNull(java.lang.Object,java.lang.String)|",
      "|java+method:///io/fabric8/api/gravia/IllegalArgumentAssertion/assertNotNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "affectedLib": "io.fabric8:fabric-api:1.2.0.redhat-133",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///io/fabric8/api/ProfileManagerLocator/getProfileManager()|",
    "called": "|java+method:///io/fabric8/api/gravia/ServiceLocator/getRequiredService(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/jboss/gravia/runtime/ServiceLocator/getRequiredService(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///io/fabric8/api/gravia/ServiceLocator/getRequiredService(java.lang.Class)|"
    ],
    "affectedLib": "io.fabric8:fabric-api:1.2.0.redhat-133",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///io/fabric8/api/permit/DefaultPermitManager/getPermitState(io.fabric8.api.permit.PermitKey)|",
    "called": "|java+method:///io/fabric8/api/gravia/IllegalArgumentAssertion/assertNotNull(java.lang.Object,java.lang.String)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/jboss/gravia/utils/IllegalArgumentAssertion/assertNotNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///io/fabric8/api/permit/DefaultPermitManager$PermitState/DefaultPermitManager$PermitState(io.fabric8.api.permit.PermitKey)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///io/fabric8/api/permit/DefaultPermitManager$PermitState/DefaultPermitManager$PermitState(io.fabric8.api.permit.PermitKey)|",
      "|java+method:///io/fabric8/api/gravia/IllegalArgumentAssertion/assertNotNull(java.lang.Object,java.lang.String)|"
    ],
    "affectedLib": "io.fabric8:fabric-api:1.2.0.redhat-133",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///io/fabric8/api/permit/DefaultPermitManager$PermitState/activate(java.lang.Object)|",
    "called": "|java+method:///io/fabric8/api/gravia/IllegalStateAssertion/assertTrue(java.lang.Boolean,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///org/jboss/gravia/utils/IllegalStateAssertion/assertTrue(java.lang.Boolean,java.lang.String)|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/compareAndSet(boolean,boolean)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///java/util/concurrent/Semaphore/release(int)|",
      "|java+method:///java/util/concurrent/atomic/AtomicReference/set(java.lang.Object)|",
      "|java+method:///io/fabric8/api/permit/DefaultPermitManager/access$000()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/compareAndSet(boolean,boolean)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///io/fabric8/api/gravia/IllegalStateAssertion/assertTrue(java.lang.Boolean,java.lang.String)|",
      "|java+method:///java/util/concurrent/Semaphore/release(int)|",
      "|java+method:///java/util/concurrent/atomic/AtomicReference/set(java.lang.Object)|",
      "|java+method:///io/fabric8/api/permit/DefaultPermitManager/access$000()|"
    ],
    "affectedLib": "io.fabric8:fabric-api:1.2.0.redhat-133",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///io/fabric8/api/VersionBuilder$Factory/create()|",
    "called": "|java+method:///io/fabric8/api/VersionBuilder$Factory/getProfileBuilders()|",
    "v1Body": [
      "|java+method:///org/jboss/gravia/runtime/ServiceLocator/getRequiredService(java.lang.Class)|",
      "|java+method:///io/fabric8/api/ProfileBuilders/profileVersionBuilder()|"
    ],
    "v2Body": [
      "|java+method:///io/fabric8/api/VersionBuilder$Factory/getProfileBuilders()|",
      "|java+method:///io/fabric8/api/ProfileBuilders/profileVersionBuilder()|"
    ],
    "affectedLib": "io.fabric8:fabric-api:1.2.0.redhat-133",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///io/fabric8/api/ProfileBuilder$Factory/createFrom(io.fabric8.api.Profile)|",
    "called": "|java+method:///io/fabric8/api/ProfileBuilder$Factory/getProfileBuilders()|",
    "v1Body": [
      "|java+method:///org/jboss/gravia/runtime/ServiceLocator/getRequiredService(java.lang.Class)|",
      "|java+method:///io/fabric8/api/ProfileBuilders/profileBuilderFrom(io.fabric8.api.Profile)|"
    ],
    "v2Body": [
      "|java+method:///io/fabric8/api/ProfileBuilder$Factory/getProfileBuilders()|",
      "|java+method:///io/fabric8/api/ProfileBuilders/profileBuilderFrom(io.fabric8.api.Profile)|"
    ],
    "affectedLib": "io.fabric8:fabric-api:1.2.0.redhat-133",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///io/fabric8/api/Profiles/getProfileDifference(io.fabric8.api.Profile,io.fabric8.api.Profile)|",
    "called": "|java+method:///io/fabric8/api/gravia/IllegalArgumentAssertion/assertNotNull(java.lang.Object,java.lang.String)|",
    "v1Body": [
      "|java+method:///com/google/common/collect/Sets/union(java.util.Set,java.util.Set)|",
      "|java+method:///io/fabric8/api/Profile/getAttributes()|",
      "|java+method:///io/fabric8/api/Profile/getFileConfigurations()|",
      "|java+method:///com/google/common/collect/Maps/difference(java.util.Map,java.util.Map)|",
      "|java+method:///io/fabric8/api/Profile/getId()|",
      "|java+method:///io/fabric8/api/Profile/getConfigurations()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///io/fabric8/api/Profile/getConfiguration(java.lang.String)|",
      "|java+method:///com/google/common/collect/Sets/difference(java.util.Set,java.util.Set)|",
      "|java+method:///java/util/Map/equals(java.lang.Object)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///io/fabric8/api/Profile/getVersion()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/google/common/collect/Sets$SetView/iterator()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/jboss/gravia/utils/IllegalArgumentAssertion/assertNotNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+constructor:///java/util/TreeMap/TreeMap(java.util.Map)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/Map$Entry/getValue()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Sets/union(java.util.Set,java.util.Set)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/fabric8/api/Profile/getAttributes()|",
      "|java+method:///io/fabric8/api/Profile/getFileConfigurations()|",
      "|java+method:///com/google/common/collect/Maps/difference(java.util.Map,java.util.Map)|",
      "|java+method:///io/fabric8/api/Profile/getId()|",
      "|java+method:///io/fabric8/api/Profile/getConfigurations()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///io/fabric8/api/Profile/getConfiguration(java.lang.String)|",
      "|java+method:///com/google/common/collect/Sets/difference(java.util.Set,java.util.Set)|",
      "|java+method:///java/util/Map/equals(java.lang.Object)|",
      "|java+method:///io/fabric8/api/Profile/getVersion()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/google/common/collect/Sets$SetView/iterator()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+constructor:///java/util/TreeMap/TreeMap(java.util.Map)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///io/fabric8/api/gravia/IllegalArgumentAssertion/assertNotNull(java.lang.Object,java.lang.String)|"
    ],
    "affectedLib": "io.fabric8:fabric-api:1.2.0.redhat-133",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///io/fabric8/api/Containers/overlayProfiles(io.fabric8.api.Container)|",
    "called": "|java+method:///io/fabric8/api/Containers/recursiveAddProfiles(io.fabric8.api.Version,java.util.Set,java.util.List)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+constructor:///java/util/LinkedHashSet/LinkedHashSet()|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///io/fabric8/api/Containers/recursiveAddProfiles(java.util.Set,java.util.List)|",
      "|java+method:///io/fabric8/api/Container/getProfiles()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+method:///io/fabric8/api/Container/getVersion()|",
      "|java+constructor:///java/util/LinkedHashSet/LinkedHashSet()|",
      "|java+method:///java/util/Collections/unmodifiableList(java.util.List)|",
      "|java+method:///io/fabric8/api/Container/getProfileIds()|",
      "|java+method:///io/fabric8/api/Containers/recursiveAddProfiles(io.fabric8.api.Version,java.util.Set,java.util.List)|"
    ],
    "affectedLib": "io.fabric8:fabric-api:1.2.0.redhat-133",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///io/fabric8/api/jmx/ProfileDTO/populateBuilder(io.fabric8.api.FabricService,io.fabric8.api.ProfileService,io.fabric8.api.ProfileBuilder)|",
    "called": "|java+method:///io/fabric8/api/Profiles/getProfiles(io.fabric8.api.FabricService,java.lang.Iterable,java.lang.String)|",
    "v1Body": [
      "|java+method:///io/fabric8/api/ProfileBuilder/setParents(java.util.List)|",
      "|java+method:///io/fabric8/api/ProfileBuilder/setOverlay(boolean)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/fabric8/api/ProfileBuilder/setAttributes(java.util.Map)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///io/fabric8/api/ProfileBuilder/setBundles(java.util.List)|",
      "|java+method:///io/fabric8/api/ProfileBuilder/setLocked(boolean)|",
      "|java+method:///io/fabric8/api/Profiles/getProfiles(io.fabric8.api.FabricService,java.lang.Iterable,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/fabric8/api/Profile/getId()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/fabric8/api/ProfileBuilder/setOverlay(boolean)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/fabric8/api/ProfileBuilder/setAttributes(java.util.Map)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///io/fabric8/api/ProfileBuilder/setBundles(java.util.List)|",
      "|java+method:///io/fabric8/api/ProfileBuilder/setLocked(boolean)|",
      "|java+method:///io/fabric8/api/Profiles/getProfiles(io.fabric8.api.FabricService,java.lang.Iterable,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/fabric8/api/ProfileBuilder/addParent(java.lang.String)|"
    ],
    "affectedLib": "io.fabric8:fabric-api:1.2.0.redhat-133",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///io/fabric8/api/VersionBuilder$Factory/create(java.lang.String)|",
    "called": "|java+method:///io/fabric8/api/VersionBuilder$Factory/getProfileBuilders()|",
    "v1Body": [
      "|java+method:///org/jboss/gravia/runtime/ServiceLocator/getRequiredService(java.lang.Class)|",
      "|java+method:///io/fabric8/api/ProfileBuilders/profileVersionBuilder(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///io/fabric8/api/VersionBuilder$Factory/getProfileBuilders()|",
      "|java+method:///io/fabric8/api/ProfileBuilders/profileVersionBuilder(java.lang.String)|"
    ],
    "affectedLib": "io.fabric8:fabric-api:1.2.0.redhat-133",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///io/fabric8/api/Containers/createNameValidator(io.fabric8.api.Container%5B%5D)|",
    "called": "|java+method:///io/fabric8/api/Containers/createNameValidator(io.fabric8.api.Container%5B%5D,java.util.Set)|",
    "v1Body": [
      "|java+method:///io/fabric8/api/Containers/createNameValidator(io.fabric8.api.Container%5B%5D,java.util.Set)|"
    ],
    "v2Body": [
      "|java+method:///io/fabric8/api/Containers/createNameValidator(io.fabric8.api.Container%5B%5D,java.util.Set)|",
      "|java+method:///java/util/Collections/emptySet()|"
    ],
    "affectedLib": "io.fabric8:fabric-api:1.2.0.redhat-133",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///io/fabric8/api/scr/AbstractRuntimeProperties/removeRuntimeAttribute(java.lang.Class)|",
    "called": "|java+method:///io/fabric8/api/gravia/IllegalArgumentAssertion/assertNotNull(java.lang.Object,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/jboss/gravia/utils/IllegalArgumentAssertion/assertNotNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///java/util/Map/remove(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///io/fabric8/api/gravia/IllegalArgumentAssertion/assertNotNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/util/Map/remove(java.lang.Object)|"
    ],
    "affectedLib": "io.fabric8:fabric-api:1.2.0.redhat-133",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///io/fabric8/api/scr/AbstractRuntimeProperties/getRuntimeAttribute(java.lang.Class)|",
    "called": "|java+method:///io/fabric8/api/gravia/IllegalArgumentAssertion/assertNotNull(java.lang.Object,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/jboss/gravia/utils/IllegalArgumentAssertion/assertNotNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Class/getName()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///io/fabric8/api/gravia/IllegalArgumentAssertion/assertNotNull(java.lang.Object,java.lang.String)|"
    ],
    "affectedLib": "io.fabric8:fabric-api:1.2.0.redhat-133",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///io/fabric8/api/scr/AbstractRuntimeProperties/getRequiredProperty(java.lang.String)|",
    "called": "|java+method:///io/fabric8/api/gravia/IllegalStateAssertion/assertNotNull(java.lang.Object,java.lang.String)|",
    "v1Body": [
      "|java+method:///io/fabric8/api/scr/AbstractRuntimeProperties/getPropertyInternal(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/jboss/gravia/utils/IllegalStateAssertion/assertNotNull(java.lang.Object,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///io/fabric8/api/scr/AbstractRuntimeProperties/getPropertyInternal(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/fabric8/api/gravia/IllegalStateAssertion/assertNotNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "affectedLib": "io.fabric8:fabric-api:1.2.0.redhat-133",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///io/fabric8/api/ProfileBuilder$Factory/create(java.lang.String,java.lang.String)|",
    "called": "|java+method:///io/fabric8/api/ProfileBuilder$Factory/getProfileBuilders()|",
    "v1Body": [
      "|java+method:///io/fabric8/api/ProfileBuilders/profileBuilder(java.lang.String,java.lang.String)|",
      "|java+method:///org/jboss/gravia/runtime/ServiceLocator/getRequiredService(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///io/fabric8/api/ProfileBuilder$Factory/getProfileBuilders()|",
      "|java+method:///io/fabric8/api/ProfileBuilders/profileBuilder(java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "io.fabric8:fabric-api:1.2.0.redhat-133",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$ShortDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "called": "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$ShortBuilder/completeAndClearBuffer(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders/getShortBuilder()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$ShortDeser/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$ShortDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/getArrayBuilders()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$ShortBuilder/resetAndStart()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$ShortBuilder/appendCompletedChunk(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$ShortDeser/_parseShortPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders/getShortBuilder()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$ShortDeser/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$ShortBuilder/completeAndClearBuffer(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonMappingException/wrapWithPath(java.lang.Throwable,java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$ShortDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/getArrayBuilders()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$ShortBuilder/resetAndStart()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$ShortBuilder/appendCompletedChunk(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$ShortDeser/_parseShortPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-core:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "called": "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer/_deserializeCustom(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/returnObjectBuffer(com.fasterxml.jackson.databind.util.ObjectBuffer)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/resetAndStart()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer/_parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/completeAndClearBuffer(java.lang.Object%5B%5D,int,java.lang.Class)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getText()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/appendCompletedChunk(java.lang.Object%5B%5D)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/leaseObjectBuffer()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/JsonMappingException/wrapWithPath(java.lang.Throwable,java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer/_deserializeCustom(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/returnObjectBuffer(com.fasterxml.jackson.databind.util.ObjectBuffer)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/resetAndStart()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer/_parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/completeAndClearBuffer(java.lang.Object%5B%5D,int,java.lang.Class)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getText()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/appendCompletedChunk(java.lang.Object%5B%5D)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/leaseObjectBuffer()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-core:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/deser/std/CollectionDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)|",
    "called": "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/getNullValue()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/CollectionDeserializer$CollectionReferringAccumulator/add(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/JavaType/getRawClass()|",
      "|java+method:///com/fasterxml/jackson/databind/JavaType/getContentType()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/CollectionDeserializer$CollectionReferringAccumulator/handleUnresolvedReference(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/getObjectIdReader()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+constructor:///com/fasterxml/jackson/databind/deser/std/CollectionDeserializer$CollectionReferringAccumulator/CollectionDeserializer$CollectionReferringAccumulator(java.lang.Class,java.util.Collection)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonMappingException/from(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/CollectionDeserializer/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/impl/ReadableObjectId/appendReferring(com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring)|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/UnresolvedForwardReference/getRoid()|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/JsonMappingException/wrapWithPath(java.lang.Throwable,java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/getNullValue()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/CollectionDeserializer$CollectionReferringAccumulator/add(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/JavaType/getRawClass()|",
      "|java+method:///com/fasterxml/jackson/databind/JavaType/getContentType()|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/CollectionDeserializer$CollectionReferringAccumulator/handleUnresolvedReference(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/getObjectIdReader()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+constructor:///com/fasterxml/jackson/databind/deser/std/CollectionDeserializer$CollectionReferringAccumulator/CollectionDeserializer$CollectionReferringAccumulator(java.lang.Class,java.util.Collection)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonMappingException/from(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/CollectionDeserializer/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/impl/ReadableObjectId/appendReferring(com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring)|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/UnresolvedForwardReference/getRoid()|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-core:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$DoubleDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "called": "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$DoubleDeser/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/getArrayBuilders()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$DoubleBuilder/appendCompletedChunk(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$DoubleBuilder/resetAndStart()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$DoubleBuilder/completeAndClearBuffer(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$DoubleDeser/_parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$DoubleDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders/getDoubleBuilder()|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/JsonMappingException/wrapWithPath(java.lang.Throwable,java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$DoubleDeser/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/getArrayBuilders()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$DoubleBuilder/appendCompletedChunk(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$DoubleBuilder/resetAndStart()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$DoubleBuilder/completeAndClearBuffer(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$DoubleDeser/_parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$DoubleDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders/getDoubleBuilder()|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-core:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$ByteDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "called": "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders/getByteBuilder()|",
      "|java+method:///java/lang/Class/getComponentType()|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/getArrayBuilders()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getBinaryValue(com.fasterxml.jackson.core.Base64Variant)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/getBase64Variant()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$ByteDeser/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getByteValue()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$ByteBuilder/completeAndClearBuffer(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$ByteDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/mappingException(java.lang.Class)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$ByteBuilder/resetAndStart()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getEmbeddedObject()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$ByteBuilder/appendCompletedChunk(java.lang.Object,int)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/JsonMappingException/wrapWithPath(java.lang.Throwable,java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders/getByteBuilder()|",
      "|java+method:///java/lang/Class/getComponentType()|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/getArrayBuilders()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getBinaryValue(com.fasterxml.jackson.core.Base64Variant)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/getBase64Variant()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$ByteDeser/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getByteValue()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$ByteBuilder/completeAndClearBuffer(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$ByteDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/mappingException(java.lang.Class)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$ByteBuilder/resetAndStart()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getEmbeddedObject()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$ByteBuilder/appendCompletedChunk(java.lang.Object,int)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-core:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$BooleanDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "called": "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/getArrayBuilders()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$BooleanDeser/_parseBooleanPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$BooleanDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders/getBooleanBuilder()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$BooleanBuilder/completeAndClearBuffer(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$BooleanDeser/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$BooleanBuilder/appendCompletedChunk(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$BooleanBuilder/resetAndStart()|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/JsonMappingException/wrapWithPath(java.lang.Throwable,java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/getArrayBuilders()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$BooleanDeser/_parseBooleanPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$BooleanDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders/getBooleanBuilder()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$BooleanBuilder/completeAndClearBuffer(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$BooleanDeser/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$BooleanBuilder/appendCompletedChunk(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$BooleanBuilder/resetAndStart()|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-core:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/deser/std/ArrayBlockingQueueDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)|",
    "called": "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///java/util/concurrent/ArrayBlockingQueue/ArrayBlockingQueue(int)|",
      "|java+method:///java/util/Collection/addAll(java.util.Collection)|",
      "|java+method:///java/util/ArrayList/add(java.lang.Object)|",
      "|java+method:///java/util/ArrayList/size()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/ArrayBlockingQueueDeserializer/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/getNullValue()|",
      "|java+constructor:///java/util/concurrent/ArrayBlockingQueue/ArrayBlockingQueue(int,boolean,java.util.Collection)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+constructor:///java/util/concurrent/ArrayBlockingQueue/ArrayBlockingQueue(int)|",
      "|java+method:///java/util/Collection/addAll(java.util.Collection)|",
      "|java+method:///java/util/ArrayList/add(java.lang.Object)|",
      "|java+method:///java/util/ArrayList/size()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonMappingException/wrapWithPath(java.lang.Throwable,java.lang.Object,int)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/ArrayBlockingQueueDeserializer/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/getNullValue()|",
      "|java+constructor:///java/util/concurrent/ArrayBlockingQueue/ArrayBlockingQueue(int,boolean,java.util.Collection)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-core:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$IntDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "called": "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$IntBuilder/appendCompletedChunk(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$IntDeser/_parseIntPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders/getIntBuilder()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$IntBuilder/resetAndStart()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$IntBuilder/completeAndClearBuffer(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$IntDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/getArrayBuilders()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$IntDeser/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$IntDeser/_parseIntPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders/getIntBuilder()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$IntBuilder/resetAndStart()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$IntBuilder/completeAndClearBuffer(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$IntDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$IntBuilder/appendCompletedChunk(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonMappingException/wrapWithPath(java.lang.Throwable,java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/getArrayBuilders()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$IntDeser/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-core:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$LongDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "called": "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$LongBuilder/resetAndStart()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$LongBuilder/completeAndClearBuffer(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$LongDeser/_parseLongPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders/getLongBuilder()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$LongBuilder/appendCompletedChunk(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$LongDeser/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$LongDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/getArrayBuilders()|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/JsonMappingException/wrapWithPath(java.lang.Throwable,java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$LongBuilder/resetAndStart()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$LongBuilder/completeAndClearBuffer(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$LongDeser/_parseLongPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders/getLongBuilder()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$LongBuilder/appendCompletedChunk(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$LongDeser/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$LongDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/getArrayBuilders()|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-core:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/deser/std/StringCollectionDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)|",
    "called": "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/deser/std/StringCollectionDeserializer/deserializeUsingCustom(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection,com.fasterxml.jackson.databind.JsonDeserializer)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/StringCollectionDeserializer/_parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getText()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/StringCollectionDeserializer/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/JsonMappingException/wrapWithPath(java.lang.Throwable,java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/StringCollectionDeserializer/deserializeUsingCustom(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection,com.fasterxml.jackson.databind.JsonDeserializer)|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/StringCollectionDeserializer/_parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getText()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/StringCollectionDeserializer/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-core:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/deser/std/ObjectArrayDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "called": "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/getNullValue()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/ObjectArrayDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/returnObjectBuffer(com.fasterxml.jackson.databind.util.ObjectBuffer)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/completeAndClearBuffer(java.lang.Object%5B%5D,int)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/resetAndStart()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/ObjectArrayDeserializer/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/completeAndClearBuffer(java.lang.Object%5B%5D,int,java.lang.Class)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/appendCompletedChunk(java.lang.Object%5B%5D)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/leaseObjectBuffer()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonMappingException/wrapWithPath(java.lang.Throwable,java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/getNullValue()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/ObjectArrayDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/returnObjectBuffer(com.fasterxml.jackson.databind.util.ObjectBuffer)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/completeAndClearBuffer(java.lang.Object%5B%5D,int)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/resetAndStart()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/ObjectArrayDeserializer/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/completeAndClearBuffer(java.lang.Object%5B%5D,int,java.lang.Class)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ObjectBuffer/appendCompletedChunk(java.lang.Object%5B%5D)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/leaseObjectBuffer()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-core:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$FloatDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "called": "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$FloatBuilder/completeAndClearBuffer(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders/getFloatBuilder()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$FloatDeser/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/getArrayBuilders()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$FloatBuilder/resetAndStart()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$FloatDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$FloatDeser/_parseFloatPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$FloatBuilder/appendCompletedChunk(java.lang.Object,int)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders/getFloatBuilder()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$FloatDeser/handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonMappingException/wrapWithPath(java.lang.Throwable,java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$FloatBuilder/completeAndClearBuffer(java.lang.Object,int)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/getArrayBuilders()|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$FloatBuilder/resetAndStart()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$FloatDeser/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers$FloatDeser/_parseFloatPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/util/ArrayBuilders$FloatBuilder/appendCompletedChunk(java.lang.Object,int)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-core:2.4.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.fabric8:fabric-client:1.2.0.Beta4",
    "coordinatesV2": "io.fabric8:fabric-client:1.2.0.redhat-133",
    "caller": "|java+method:///com/fasterxml/jackson/databind/deser/std/EnumSetDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "called": "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/deser/std/EnumSetDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/mappingException(java.lang.Class)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/EnumSetDeserializer/constructSet()|",
      "|java+method:///java/util/EnumSet/add(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/deser/std/EnumSetDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonMappingException/wrapWithPath(java.lang.Throwable,java.lang.Object,int)|",
      "|java+method:///java/util/EnumSet/size()|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/mappingException(java.lang.Class)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/isExpectedStartArrayToken()|",
      "|java+method:///com/fasterxml/jackson/databind/deser/std/EnumSetDeserializer/constructSet()|",
      "|java+method:///java/util/EnumSet/add(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-core:2.4.3",
    "change": "UPDATED"
  }
]