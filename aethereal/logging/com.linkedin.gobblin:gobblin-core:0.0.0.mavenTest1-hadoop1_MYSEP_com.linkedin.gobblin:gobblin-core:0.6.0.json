[
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "caller": "|java+method:///gobblin/publisher/TimePartitionedDataPublisher/addWriterOutputToExistingDir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,gobblin.configuration.WorkUnitState,int,gobblin.util.ParallelRunner)|",
    "called": "|java+method:///org/apache/hadoop/fs/Path/toString()|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///gobblin/util/FileListUtils/listFilesRecursively(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///gobblin/util/ParallelRunner/renamePath(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,com.google.common.base.Optional)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/String/indexOf(java.lang.String)|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///gobblin/util/WriterUtils/mkdirsWithRecursivePermission(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///gobblin/util/FileListUtils/listFilesRecursively(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///gobblin/util/ParallelRunner/movePath(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,com.google.common.base.Optional)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/String/indexOf(java.lang.String)|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///gobblin/util/WriterUtils/mkdirsWithRecursivePermission(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:1.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "caller": "|java+constructor:///gobblin/publisher/BaseDataPublisher/BaseDataPublisher(gobblin.configuration.State)|",
    "called": "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///gobblin/configuration/State/getProp(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/hadoop/fs/permission/FsPermission/getDefault()|",
      "|java+method:///com/google/common/collect/Lists/newArrayListWithCapacity(int)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/fs/permission/FsPermission/FsPermission(short)|",
      "|java+method:///org/apache/hadoop/fs/permission/FsPermission/toShort()|",
      "|java+constructor:///gobblin/publisher/SingleTaskDataPublisher/SingleTaskDataPublisher(gobblin.configuration.State)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/getState()|",
      "|java+method:///com/google/common/io/Closer/create()|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///gobblin/configuration/State/getProp(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/getPropAsInt(java.lang.String,int)|",
      "|java+method:///gobblin/configuration/State/getPropAsShortWithRadix(java.lang.String,short,int)|",
      "|java+method:///gobblin/configuration/State/getPropertyNames()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/net/URI/create(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///gobblin/configuration/State/getProp(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/hadoop/fs/permission/FsPermission/getDefault()|",
      "|java+method:///java/net/URI/toString()|",
      "|java+method:///com/google/common/collect/Lists/newArrayListWithCapacity(int)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/fs/permission/FsPermission/FsPermission(short)|",
      "|java+method:///org/apache/hadoop/fs/permission/FsPermission/toShort()|",
      "|java+constructor:///gobblin/publisher/SingleTaskDataPublisher/SingleTaskDataPublisher(gobblin.configuration.State)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/getState()|",
      "|java+method:///com/google/common/io/Closer/create()|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///gobblin/configuration/State/getProp(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/getPropAsInt(java.lang.String,int)|",
      "|java+method:///gobblin/configuration/State/getPropAsShortWithRadix(java.lang.String,short,int)|",
      "|java+method:///gobblin/configuration/State/getPropertyNames()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/net/URI/create(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:1.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "caller": "|java+method:///gobblin/qualitychecker/row/RowLevelPolicyChecker/executePolicies(java.lang.Object,gobblin.qualitychecker.row.RowLevelPolicyCheckResults)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///gobblin/qualitychecker/row/RowLevelErrFileWriter/open(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/qualitychecker/row/RowLevelPolicy/getType()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/qualitychecker/row/RowLevelPolicy/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///gobblin/qualitychecker/row/RowLevelPolicy$Type/equals(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///gobblin/qualitychecker/row/RowLevelPolicy/getErrFileLocation()|",
      "|java+method:///gobblin/qualitychecker/row/RowLevelPolicy/executePolicy(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/replaceAll(java.lang.String,java.lang.String)|",
      "|java+method:///gobblin/qualitychecker/row/RowLevelPolicyCheckResults/put(gobblin.qualitychecker.row.RowLevelPolicy,gobblin.qualitychecker.row.RowLevelPolicy$Result)|",
      "|java+method:///gobblin/qualitychecker/row/RowLevelErrFileWriter/write(java.lang.Object)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///gobblin/qualitychecker/row/RowLevelPolicy$Result/equals(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///gobblin/qualitychecker/row/RowLevelErrFileWriter/open(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/qualitychecker/row/RowLevelPolicy/getType()|",
      "|java+method:///gobblin/qualitychecker/row/RowLevelPolicy/executePolicy(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///gobblin/qualitychecker/row/RowLevelPolicyCheckResults/put(gobblin.qualitychecker.row.RowLevelPolicy,gobblin.qualitychecker.row.RowLevelPolicy$Result)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///gobblin/qualitychecker/row/RowLevelPolicy$Type/equals(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///gobblin/qualitychecker/row/RowLevelErrFileWriter/write(java.lang.Object)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///gobblin/qualitychecker/row/RowLevelPolicyChecker/getErrFilePath(gobblin.qualitychecker.row.RowLevelPolicy)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///gobblin/qualitychecker/row/RowLevelPolicy$Result/equals(java.lang.Object)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:1.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "caller": "|java+constructor:///gobblin/writer/FsDataWriter/FsDataWriter(gobblin.writer.FsDataWriterBuilder,gobblin.configuration.State)|",
    "called": "|java+method:///org/apache/hadoop/fs/FileSystem/getDefaultBlockSize(org.apache.hadoop.fs.Path)|",
    "v1Body": [
      "|java+method:///gobblin/configuration/State/getProp(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+constructor:///gobblin/util/ProxiedFileSystemWrapper/ProxiedFileSystemWrapper()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///gobblin/util/HadoopUtils/deserializeWriterFilePermissions(gobblin.configuration.State,int,int)|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///gobblin/util/HadoopUtils/deletePath(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,boolean)|",
      "|java+method:///gobblin/util/JobConfigurationUtils/putStateIntoConfiguration(gobblin.configuration.State,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///gobblin/util/WriterUtils/mkdirsWithRecursivePermission(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///gobblin/writer/FsDataWriterBuilder/getWriterId()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/getDefaultBlockSize(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/writer/FsDataWriterBuilder/getBranches()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/getDefaultReplication(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/util/WriterUtils/getWriterStagingDir(gobblin.configuration.State,int,int)|",
      "|java+method:///gobblin/writer/FsDataWriterBuilder/getFileName(gobblin.configuration.State)|",
      "|java+method:///gobblin/configuration/State/getProp(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/getPropAsBoolean(java.lang.String,boolean)|",
      "|java+method:///gobblin/configuration/State/getPropAsShort(java.lang.String,short)|",
      "|java+method:///gobblin/configuration/State/getPropAsInt(java.lang.String,int)|",
      "|java+method:///gobblin/util/HadoopUtils/deserializeWriterDirPermissions(gobblin.configuration.State,int,int)|",
      "|java+method:///gobblin/util/WriterUtils/getWriterOutputDir(gobblin.configuration.State,int,int)|",
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/getPropAsLong(java.lang.String,long)|",
      "|java+method:///gobblin/util/ProxiedFileSystemWrapper/getProxiedFileSystem(gobblin.configuration.State,gobblin.util.ProxiedFileSystemWrapper$AuthType,java.lang.String,java.lang.String)|",
      "|java+method:///gobblin/writer/FsDataWriterBuilder/getBranch()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.Throwable)|",
      "|java+method:///com/google/common/io/Closer/create()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///gobblin/util/HadoopUtils/deserializeWriterFilePermissions(gobblin.configuration.State,int,int)|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///gobblin/util/WriterUtils/getWriterOutputDir(gobblin.configuration.State,int,int)|",
      "|java+method:///gobblin/util/JobConfigurationUtils/putStateIntoConfiguration(gobblin.configuration.State,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///gobblin/configuration/State/getPropAsLong(java.lang.String,long)|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///gobblin/util/WriterUtils/mkdirsWithRecursivePermission(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///gobblin/writer/FsDataWriterBuilder/getWriterId()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/getDefaultBlockSize(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/writer/FsDataWriterBuilder/getBranches()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/getDefaultReplication(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/util/WriterUtils/getWriterStagingDir(gobblin.configuration.State,int,int)|",
      "|java+method:///gobblin/writer/FsDataWriterBuilder/getFileName(gobblin.configuration.State)|",
      "|java+method:///gobblin/configuration/State/getProp(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/getPropAsBoolean(java.lang.String,boolean)|",
      "|java+method:///gobblin/configuration/State/getPropAsShort(java.lang.String,short)|",
      "|java+method:///gobblin/configuration/State/getPropAsInt(java.lang.String,int)|",
      "|java+method:///gobblin/util/HadoopUtils/deserializeWriterDirPermissions(gobblin.configuration.State,int,int)|",
      "|java+method:///gobblin/util/WriterUtils/getWriterFS(gobblin.configuration.State,int,int)|",
      "|java+method:///gobblin/util/HadoopUtils/deletePath(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,boolean)|",
      "|java+method:///gobblin/writer/FsDataWriterBuilder/getBranch()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///com/google/common/io/Closer/create()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:1.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "caller": "|java+method:///gobblin/publisher/BaseDataPublisher/addSingleTaskWriterOutputToExistingDir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,gobblin.configuration.WorkUnitState,int,gobblin.util.ParallelRunner)|",
    "called": "|java+method:///org/apache/hadoop/fs/Path/toString()|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///gobblin/configuration/WorkUnitState/getPropAsList(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///gobblin/util/WriterUtils/mkdirsWithRecursivePermission(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)|",
      "|java+method:///gobblin/configuration/WorkUnitState/contains(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/util/ParallelRunner/renamePath(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,com.google.common.base.Optional)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/indexOf(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///gobblin/configuration/WorkUnitState/getPropAsList(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///gobblin/util/WriterUtils/mkdirsWithRecursivePermission(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)|",
      "|java+method:///gobblin/configuration/WorkUnitState/contains(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/util/ParallelRunner/movePath(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,com.google.common.base.Optional)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/indexOf(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:1.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "caller": "|java+method:///gobblin/source/extractor/extract/sftp/SftpLightWeightFileSystem/getFileStatus(org.apache.hadoop.fs.Path)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/permission/FsPermission/FsPermission(short)|",
    "v1Body": [
      "|java+method:///com/jcraft/jsch/SftpATTRS/getSize()|",
      "|java+method:///org/apache/commons/io/IOUtils/toString(java.io.InputStream)|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/getATime()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+constructor:///org/apache/hadoop/fs/FileStatus/FileStatus(long,boolean,int,long,long,long,org.apache.hadoop.fs.permission.FsPermission,java.lang.String,java.lang.String,org.apache.hadoop.fs.Path)|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/getMTime()|",
      "|java+method:///gobblin/source/extractor/extract/sftp/SftpLightWeightFileSystem/safeDisconnect(com.jcraft.jsch.Channel)|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/getPermissions()|",
      "|java+method:///com/jcraft/jsch/ChannelSftp/stat(java.lang.String)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.Throwable)|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/getUId()|",
      "|java+method:///gobblin/source/extractor/extract/sftp/SftpFsHelper/getSftpChannel()|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/isDir()|",
      "|java+method:///gobblin/util/HadoopUtils/toUriPath(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/commons/lang/StringUtils/trimToEmpty(java.lang.String)|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/getGId()|",
      "|java+constructor:///org/apache/hadoop/fs/permission/FsPermission/FsPermission(short)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/jcraft/jsch/ChannelExec/getInputStream()|",
      "|java+method:///gobblin/source/extractor/extract/sftp/SftpFsHelper/getExecChannel(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/jcraft/jsch/SftpATTRS/getSize()|",
      "|java+method:///org/apache/commons/io/IOUtils/toString(java.io.InputStream)|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/getATime()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/getMTime()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///gobblin/source/extractor/extract/sftp/SftpLightWeightFileSystem/safeDisconnect(com.jcraft.jsch.Channel)|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/getPermissions()|",
      "|java+method:///com/jcraft/jsch/ChannelSftp/stat(java.lang.String)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.Throwable)|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/getUId()|",
      "|java+method:///gobblin/source/extractor/extract/sftp/SftpFsHelper/getSftpChannel()|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/isDir()|",
      "|java+method:///gobblin/util/HadoopUtils/toUriPath(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/trimToEmpty(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/FileStatus/FileStatus(long,boolean,int,long,long,long,org.apache.hadoop.fs.permission.FsPermission,java.lang.String,java.lang.String,org.apache.hadoop.fs.Path)|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/getGId()|",
      "|java+constructor:///org/apache/hadoop/fs/permission/FsPermission/FsPermission(short)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/jcraft/jsch/ChannelExec/getInputStream()|",
      "|java+method:///gobblin/source/extractor/extract/sftp/SftpFsHelper/getExecChannel(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:1.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "caller": "|java+method:///gobblin/source/extractor/extract/sftp/SftpFsHelper$HDFSIdentityStrategy/setIdentity(java.lang.String,com.jcraft.jsch.JSch)|",
    "called": "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/io/IOUtils/toByteArray(java.io.InputStream)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/open(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/source/extractor/extract/sftp/SftpFsHelper/access$300()|",
      "|java+method:///com/jcraft/jsch/JSch/addIdentity(java.lang.String,byte%5B%5D,byte%5B%5D,byte%5B%5D)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/hadoop/fs/FSDataInputStream/close()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Exception/getMessage()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/open(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/source/extractor/extract/sftp/SftpFsHelper/access$300()|",
      "|java+method:///com/jcraft/jsch/JSch/addIdentity(java.lang.String,byte%5B%5D,byte%5B%5D,byte%5B%5D)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/hadoop/fs/FSDataInputStream/close()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/commons/io/IOUtils/toByteArray(java.io.InputStream)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Exception/getMessage()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:1.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "caller": "|java+method:///gobblin/metrics/GobblinMetrics/buildFileMetricReporter(java.util.Properties)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/append(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamReporter$Builder/build()|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamReporter$Builder/outputTo(java.io.OutputStream)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamEventReporter/forContext(gobblin.metrics.MetricContext)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamReporter/forContext(gobblin.metrics.MetricContext)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///com/google/common/io/Closer/register(java.io.Closeable)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/create(org.apache.hadoop.fs.Path,boolean)|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamEventReporter$Builder/build()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamEventReporter$Builder/outputTo(java.io.OutputStream)|",
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+method:///gobblin/metrics/GobblinMetrics/getName()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/mkdirs(org.apache.hadoop.fs.Path)|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/append(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamReporter$Builder/build()|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamReporter$Builder/outputTo(java.io.OutputStream)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamEventReporter/forContext(gobblin.metrics.MetricContext)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamReporter/forContext(gobblin.metrics.MetricContext)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///com/google/common/io/Closer/register(java.io.Closeable)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/create(org.apache.hadoop.fs.Path,boolean)|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamEventReporter$Builder/build()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamEventReporter$Builder/outputTo(java.io.OutputStream)|",
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+method:///gobblin/metrics/GobblinMetrics/getName()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/mkdirs(org.apache.hadoop.fs.Path)|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:1.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "caller": "|java+method:///gobblin/source/extractor/extract/sftp/SftpLightWeightFileSystem$1/accept(org.apache.hadoop.fs.Path)|",
    "called": "|java+method:///org/apache/hadoop/fs/Path/toString()|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:1.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "caller": "|java+method:///gobblin/qualitychecker/row/RowLevelErrFileWriter/open(org.apache.hadoop.fs.Path)|",
    "called": "|java+method:///org/apache/hadoop/fs/Path/toString()|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+constructor:///java/io/BufferedWriter/BufferedWriter(java.io.Writer)|",
      "|java+constructor:///java/io/FileOutputStream/FileOutputStream(java.lang.String)|",
      "|java+method:///com/google/common/io/Closer/register(java.io.Closeable)|",
      "|java+constructor:///java/io/OutputStreamWriter/OutputStreamWriter(java.io.OutputStream,java.nio.charset.Charset)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/append(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/mkdirs(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/create(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///java/io/BufferedWriter/BufferedWriter(java.io.Writer)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///com/google/common/io/Closer/register(java.io.Closeable)|",
      "|java+constructor:///java/io/OutputStreamWriter/OutputStreamWriter(java.io.OutputStream,java.nio.charset.Charset)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:1.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "caller": "|java+method:///gobblin/publisher/BaseDataPublisher/publishData(gobblin.configuration.WorkUnitState,int,boolean,java.util.Set)|",
    "called": "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/getPublisherOutputDir(gobblin.configuration.WorkUnitState,int)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/getParallelRunner(org.apache.hadoop.fs.FileSystem)|",
      "|java+method:///gobblin/configuration/State/getPropAsBoolean(java.lang.String)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///gobblin/util/WriterUtils/getWriterOutputDir(gobblin.configuration.State,int,int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///gobblin/configuration/WorkUnitState/getId()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/addSingleTaskWriterOutputToExistingDir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,gobblin.configuration.WorkUnitState,int,gobblin.util.ParallelRunner)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///gobblin/util/WriterUtils/mkdirsWithRecursivePermission(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/util/ParallelRunner/renamePath(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,com.google.common.base.Optional)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/addWriterOutputToExistingDir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,gobblin.configuration.WorkUnitState,int,gobblin.util.ParallelRunner)|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/getState()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/delete(org.apache.hadoop.fs.Path,boolean)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/getPublisherOutputDir(gobblin.configuration.WorkUnitState,int)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/getParallelRunner(org.apache.hadoop.fs.FileSystem)|",
      "|java+method:///gobblin/configuration/State/getPropAsBoolean(java.lang.String)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///gobblin/util/WriterUtils/getWriterOutputDir(gobblin.configuration.State,int,int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///gobblin/configuration/WorkUnitState/getId()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/addSingleTaskWriterOutputToExistingDir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,gobblin.configuration.WorkUnitState,int,gobblin.util.ParallelRunner)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///gobblin/util/WriterUtils/mkdirsWithRecursivePermission(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/util/ParallelRunner/movePath(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,com.google.common.base.Optional)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/addWriterOutputToExistingDir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,gobblin.configuration.WorkUnitState,int,gobblin.util.ParallelRunner)|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/getState()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/delete(org.apache.hadoop.fs.Path,boolean)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:1.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "caller": "|java+method:///gobblin/publisher/BaseDataPublisher/addWriterOutputToExistingDir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,gobblin.configuration.WorkUnitState,int,gobblin.util.ParallelRunner)|",
    "called": "|java+method:///org/apache/hadoop/fs/Path/getName()|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///org/apache/hadoop/fs/Path/getName()|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///gobblin/configuration/WorkUnitState/getProp(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///gobblin/configuration/WorkUnitState/getPropAsBoolean(java.lang.String,boolean)|",
      "|java+method:///gobblin/util/ParallelRunner/renamePath(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,com.google.common.base.Optional)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///org/apache/hadoop/fs/Path/getName()|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///gobblin/configuration/WorkUnitState/getProp(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///gobblin/configuration/WorkUnitState/getPropAsBoolean(java.lang.String,boolean)|",
      "|java+method:///gobblin/util/ParallelRunner/movePath(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,com.google.common.base.Optional)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:1.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+method:///gobblin/publisher/TimePartitionedDataPublisher/addWriterOutputToExistingDir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,gobblin.configuration.WorkUnitState,int,gobblin.util.ParallelRunner)|",
    "called": "|java+method:///org/apache/hadoop/fs/Path/toString()|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///gobblin/util/FileListUtils/listFilesRecursively(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///gobblin/util/ParallelRunner/renamePath(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,com.google.common.base.Optional)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/String/indexOf(java.lang.String)|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///gobblin/util/WriterUtils/mkdirsWithRecursivePermission(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///gobblin/util/FileListUtils/listFilesRecursively(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///gobblin/util/ParallelRunner/movePath(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,com.google.common.base.Optional)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/String/indexOf(java.lang.String)|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///gobblin/util/WriterUtils/mkdirsWithRecursivePermission(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-common:2.3.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+constructor:///gobblin/publisher/BaseDataPublisher/BaseDataPublisher(gobblin.configuration.State)|",
    "called": "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///gobblin/configuration/State/getProp(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/hadoop/fs/permission/FsPermission/getDefault()|",
      "|java+method:///com/google/common/collect/Lists/newArrayListWithCapacity(int)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/fs/permission/FsPermission/FsPermission(short)|",
      "|java+method:///org/apache/hadoop/fs/permission/FsPermission/toShort()|",
      "|java+constructor:///gobblin/publisher/SingleTaskDataPublisher/SingleTaskDataPublisher(gobblin.configuration.State)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/getState()|",
      "|java+method:///com/google/common/io/Closer/create()|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///gobblin/configuration/State/getProp(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/getPropAsInt(java.lang.String,int)|",
      "|java+method:///gobblin/configuration/State/getPropAsShortWithRadix(java.lang.String,short,int)|",
      "|java+method:///gobblin/configuration/State/getPropertyNames()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/net/URI/create(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///gobblin/configuration/State/getProp(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/hadoop/fs/permission/FsPermission/getDefault()|",
      "|java+method:///java/net/URI/toString()|",
      "|java+method:///com/google/common/collect/Lists/newArrayListWithCapacity(int)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/fs/permission/FsPermission/FsPermission(short)|",
      "|java+method:///org/apache/hadoop/fs/permission/FsPermission/toShort()|",
      "|java+constructor:///gobblin/publisher/SingleTaskDataPublisher/SingleTaskDataPublisher(gobblin.configuration.State)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/getState()|",
      "|java+method:///com/google/common/io/Closer/create()|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///gobblin/configuration/State/getProp(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/getPropAsInt(java.lang.String,int)|",
      "|java+method:///gobblin/configuration/State/getPropAsShortWithRadix(java.lang.String,short,int)|",
      "|java+method:///gobblin/configuration/State/getPropertyNames()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/net/URI/create(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-common:2.3.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+constructor:///gobblin/writer/FsDataWriter/FsDataWriter(gobblin.writer.FsDataWriterBuilder,gobblin.configuration.State)|",
    "called": "|java+method:///org/apache/hadoop/fs/FileSystem/getDefaultBlockSize(org.apache.hadoop.fs.Path)|",
    "v1Body": [
      "|java+method:///gobblin/configuration/State/getProp(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+constructor:///gobblin/util/ProxiedFileSystemWrapper/ProxiedFileSystemWrapper()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///gobblin/util/HadoopUtils/deserializeWriterFilePermissions(gobblin.configuration.State,int,int)|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///gobblin/util/HadoopUtils/deletePath(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,boolean)|",
      "|java+method:///gobblin/util/JobConfigurationUtils/putStateIntoConfiguration(gobblin.configuration.State,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///gobblin/util/WriterUtils/mkdirsWithRecursivePermission(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///gobblin/writer/FsDataWriterBuilder/getWriterId()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/getDefaultBlockSize(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/writer/FsDataWriterBuilder/getBranches()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/getDefaultReplication(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/util/WriterUtils/getWriterStagingDir(gobblin.configuration.State,int,int)|",
      "|java+method:///gobblin/writer/FsDataWriterBuilder/getFileName(gobblin.configuration.State)|",
      "|java+method:///gobblin/configuration/State/getProp(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/getPropAsBoolean(java.lang.String,boolean)|",
      "|java+method:///gobblin/configuration/State/getPropAsShort(java.lang.String,short)|",
      "|java+method:///gobblin/configuration/State/getPropAsInt(java.lang.String,int)|",
      "|java+method:///gobblin/util/HadoopUtils/deserializeWriterDirPermissions(gobblin.configuration.State,int,int)|",
      "|java+method:///gobblin/util/WriterUtils/getWriterOutputDir(gobblin.configuration.State,int,int)|",
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/getPropAsLong(java.lang.String,long)|",
      "|java+method:///gobblin/util/ProxiedFileSystemWrapper/getProxiedFileSystem(gobblin.configuration.State,gobblin.util.ProxiedFileSystemWrapper$AuthType,java.lang.String,java.lang.String)|",
      "|java+method:///gobblin/writer/FsDataWriterBuilder/getBranch()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.Throwable)|",
      "|java+method:///com/google/common/io/Closer/create()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///gobblin/util/HadoopUtils/deserializeWriterFilePermissions(gobblin.configuration.State,int,int)|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///gobblin/util/WriterUtils/getWriterOutputDir(gobblin.configuration.State,int,int)|",
      "|java+method:///gobblin/util/JobConfigurationUtils/putStateIntoConfiguration(gobblin.configuration.State,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///gobblin/configuration/State/getPropAsLong(java.lang.String,long)|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///gobblin/util/WriterUtils/mkdirsWithRecursivePermission(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///gobblin/writer/FsDataWriterBuilder/getWriterId()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/getDefaultBlockSize(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/writer/FsDataWriterBuilder/getBranches()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/getDefaultReplication(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/util/WriterUtils/getWriterStagingDir(gobblin.configuration.State,int,int)|",
      "|java+method:///gobblin/writer/FsDataWriterBuilder/getFileName(gobblin.configuration.State)|",
      "|java+method:///gobblin/configuration/State/getProp(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/getPropAsBoolean(java.lang.String,boolean)|",
      "|java+method:///gobblin/configuration/State/getPropAsShort(java.lang.String,short)|",
      "|java+method:///gobblin/configuration/State/getPropAsInt(java.lang.String,int)|",
      "|java+method:///gobblin/util/HadoopUtils/deserializeWriterDirPermissions(gobblin.configuration.State,int,int)|",
      "|java+method:///gobblin/util/WriterUtils/getWriterFS(gobblin.configuration.State,int,int)|",
      "|java+method:///gobblin/util/HadoopUtils/deletePath(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,boolean)|",
      "|java+method:///gobblin/writer/FsDataWriterBuilder/getBranch()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///com/google/common/io/Closer/create()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-common:2.3.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+method:///gobblin/publisher/BaseDataPublisher/addSingleTaskWriterOutputToExistingDir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,gobblin.configuration.WorkUnitState,int,gobblin.util.ParallelRunner)|",
    "called": "|java+method:///org/apache/hadoop/fs/Path/toString()|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///gobblin/configuration/WorkUnitState/getPropAsList(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///gobblin/util/WriterUtils/mkdirsWithRecursivePermission(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)|",
      "|java+method:///gobblin/configuration/WorkUnitState/contains(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/util/ParallelRunner/renamePath(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,com.google.common.base.Optional)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/indexOf(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///gobblin/configuration/WorkUnitState/getPropAsList(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///gobblin/util/WriterUtils/mkdirsWithRecursivePermission(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)|",
      "|java+method:///gobblin/configuration/WorkUnitState/contains(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/util/ParallelRunner/movePath(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,com.google.common.base.Optional)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/indexOf(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-common:2.3.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+method:///gobblin/source/extractor/extract/sftp/SftpLightWeightFileSystem/getFileStatus(org.apache.hadoop.fs.Path)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/permission/FsPermission/FsPermission(short)|",
    "v1Body": [
      "|java+method:///com/jcraft/jsch/SftpATTRS/getSize()|",
      "|java+method:///org/apache/commons/io/IOUtils/toString(java.io.InputStream)|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/getATime()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+constructor:///org/apache/hadoop/fs/FileStatus/FileStatus(long,boolean,int,long,long,long,org.apache.hadoop.fs.permission.FsPermission,java.lang.String,java.lang.String,org.apache.hadoop.fs.Path)|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/getMTime()|",
      "|java+method:///gobblin/source/extractor/extract/sftp/SftpLightWeightFileSystem/safeDisconnect(com.jcraft.jsch.Channel)|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/getPermissions()|",
      "|java+method:///com/jcraft/jsch/ChannelSftp/stat(java.lang.String)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.Throwable)|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/getUId()|",
      "|java+method:///gobblin/source/extractor/extract/sftp/SftpFsHelper/getSftpChannel()|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/isDir()|",
      "|java+method:///gobblin/util/HadoopUtils/toUriPath(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/commons/lang/StringUtils/trimToEmpty(java.lang.String)|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/getGId()|",
      "|java+constructor:///org/apache/hadoop/fs/permission/FsPermission/FsPermission(short)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/jcraft/jsch/ChannelExec/getInputStream()|",
      "|java+method:///gobblin/source/extractor/extract/sftp/SftpFsHelper/getExecChannel(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/jcraft/jsch/SftpATTRS/getSize()|",
      "|java+method:///org/apache/commons/io/IOUtils/toString(java.io.InputStream)|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/getATime()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/getMTime()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///gobblin/source/extractor/extract/sftp/SftpLightWeightFileSystem/safeDisconnect(com.jcraft.jsch.Channel)|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/getPermissions()|",
      "|java+method:///com/jcraft/jsch/ChannelSftp/stat(java.lang.String)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.Throwable)|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/getUId()|",
      "|java+method:///gobblin/source/extractor/extract/sftp/SftpFsHelper/getSftpChannel()|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/isDir()|",
      "|java+method:///gobblin/util/HadoopUtils/toUriPath(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/trimToEmpty(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/FileStatus/FileStatus(long,boolean,int,long,long,long,org.apache.hadoop.fs.permission.FsPermission,java.lang.String,java.lang.String,org.apache.hadoop.fs.Path)|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/getGId()|",
      "|java+constructor:///org/apache/hadoop/fs/permission/FsPermission/FsPermission(short)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/jcraft/jsch/ChannelExec/getInputStream()|",
      "|java+method:///gobblin/source/extractor/extract/sftp/SftpFsHelper/getExecChannel(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-common:2.3.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+method:///gobblin/source/extractor/extract/sftp/SftpFsHelper$HDFSIdentityStrategy/setIdentity(java.lang.String,com.jcraft.jsch.JSch)|",
    "called": "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/io/IOUtils/toByteArray(java.io.InputStream)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/open(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/source/extractor/extract/sftp/SftpFsHelper/access$300()|",
      "|java+method:///com/jcraft/jsch/JSch/addIdentity(java.lang.String,byte%5B%5D,byte%5B%5D,byte%5B%5D)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/hadoop/fs/FSDataInputStream/close()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Exception/getMessage()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/open(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/source/extractor/extract/sftp/SftpFsHelper/access$300()|",
      "|java+method:///com/jcraft/jsch/JSch/addIdentity(java.lang.String,byte%5B%5D,byte%5B%5D,byte%5B%5D)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/hadoop/fs/FSDataInputStream/close()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/commons/io/IOUtils/toByteArray(java.io.InputStream)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Exception/getMessage()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-common:2.3.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+method:///gobblin/metrics/GobblinMetrics/buildFileMetricReporter(java.util.Properties)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/append(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamReporter$Builder/build()|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamReporter$Builder/outputTo(java.io.OutputStream)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamEventReporter/forContext(gobblin.metrics.MetricContext)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamReporter/forContext(gobblin.metrics.MetricContext)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///com/google/common/io/Closer/register(java.io.Closeable)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/create(org.apache.hadoop.fs.Path,boolean)|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamEventReporter$Builder/build()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamEventReporter$Builder/outputTo(java.io.OutputStream)|",
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+method:///gobblin/metrics/GobblinMetrics/getName()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/mkdirs(org.apache.hadoop.fs.Path)|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/append(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamReporter$Builder/build()|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamReporter$Builder/outputTo(java.io.OutputStream)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamEventReporter/forContext(gobblin.metrics.MetricContext)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamReporter/forContext(gobblin.metrics.MetricContext)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///com/google/common/io/Closer/register(java.io.Closeable)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/create(org.apache.hadoop.fs.Path,boolean)|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamEventReporter$Builder/build()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamEventReporter$Builder/outputTo(java.io.OutputStream)|",
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+method:///gobblin/metrics/GobblinMetrics/getName()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/mkdirs(org.apache.hadoop.fs.Path)|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-common:2.3.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+method:///gobblin/source/extractor/extract/sftp/SftpLightWeightFileSystem$1/accept(org.apache.hadoop.fs.Path)|",
    "called": "|java+method:///org/apache/hadoop/fs/Path/toString()|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-common:2.3.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+method:///gobblin/qualitychecker/row/RowLevelErrFileWriter/open(org.apache.hadoop.fs.Path)|",
    "called": "|java+method:///org/apache/hadoop/fs/FileSystem/create(org.apache.hadoop.fs.Path)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+constructor:///java/io/BufferedWriter/BufferedWriter(java.io.Writer)|",
      "|java+constructor:///java/io/FileOutputStream/FileOutputStream(java.lang.String)|",
      "|java+method:///com/google/common/io/Closer/register(java.io.Closeable)|",
      "|java+constructor:///java/io/OutputStreamWriter/OutputStreamWriter(java.io.OutputStream,java.nio.charset.Charset)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/append(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/mkdirs(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/create(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///java/io/BufferedWriter/BufferedWriter(java.io.Writer)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///com/google/common/io/Closer/register(java.io.Closeable)|",
      "|java+constructor:///java/io/OutputStreamWriter/OutputStreamWriter(java.io.OutputStream,java.nio.charset.Charset)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-common:2.3.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+method:///gobblin/publisher/BaseDataPublisher/publishData(gobblin.configuration.WorkUnitState,int,boolean,java.util.Set)|",
    "called": "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/getPublisherOutputDir(gobblin.configuration.WorkUnitState,int)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/getParallelRunner(org.apache.hadoop.fs.FileSystem)|",
      "|java+method:///gobblin/configuration/State/getPropAsBoolean(java.lang.String)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///gobblin/util/WriterUtils/getWriterOutputDir(gobblin.configuration.State,int,int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///gobblin/configuration/WorkUnitState/getId()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/addSingleTaskWriterOutputToExistingDir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,gobblin.configuration.WorkUnitState,int,gobblin.util.ParallelRunner)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///gobblin/util/WriterUtils/mkdirsWithRecursivePermission(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/util/ParallelRunner/renamePath(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,com.google.common.base.Optional)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/addWriterOutputToExistingDir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,gobblin.configuration.WorkUnitState,int,gobblin.util.ParallelRunner)|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/getState()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/delete(org.apache.hadoop.fs.Path,boolean)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/getPublisherOutputDir(gobblin.configuration.WorkUnitState,int)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/getParallelRunner(org.apache.hadoop.fs.FileSystem)|",
      "|java+method:///gobblin/configuration/State/getPropAsBoolean(java.lang.String)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///gobblin/util/WriterUtils/getWriterOutputDir(gobblin.configuration.State,int,int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///gobblin/configuration/WorkUnitState/getId()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/addSingleTaskWriterOutputToExistingDir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,gobblin.configuration.WorkUnitState,int,gobblin.util.ParallelRunner)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///gobblin/util/WriterUtils/mkdirsWithRecursivePermission(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/util/ParallelRunner/movePath(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,com.google.common.base.Optional)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/addWriterOutputToExistingDir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,gobblin.configuration.WorkUnitState,int,gobblin.util.ParallelRunner)|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/getState()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/delete(org.apache.hadoop.fs.Path,boolean)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-common:2.3.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+method:///gobblin/publisher/BaseDataPublisher/addWriterOutputToExistingDir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,gobblin.configuration.WorkUnitState,int,gobblin.util.ParallelRunner)|",
    "called": "|java+method:///org/apache/hadoop/fs/Path/getName()|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///org/apache/hadoop/fs/Path/getName()|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///gobblin/configuration/WorkUnitState/getProp(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///gobblin/configuration/WorkUnitState/getPropAsBoolean(java.lang.String,boolean)|",
      "|java+method:///gobblin/util/ParallelRunner/renamePath(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,com.google.common.base.Optional)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///org/apache/hadoop/fs/Path/getName()|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///gobblin/configuration/WorkUnitState/getProp(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///gobblin/configuration/WorkUnitState/getPropAsBoolean(java.lang.String,boolean)|",
      "|java+method:///gobblin/util/ParallelRunner/movePath(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,com.google.common.base.Optional)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-common:2.3.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+method:///gobblin/instrumented/Instrumented/getMetricContext(gobblin.configuration.State,java.lang.Class,java.util.List)|",
    "called": "|java+method:///gobblin/configuration/State/getProp(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+constructor:///gobblin/metrics/Tag/Tag(java.lang.String,java.lang.Object)|",
      "|java+method:///gobblin/metrics/GobblinMetricsRegistry/get(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/lang/Class/getCanonicalName()|",
      "|java+method:///gobblin/metrics/MetricContext/builder(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/contains(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/getProp(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///gobblin/Constructs/toString()|",
      "|java+method:///gobblin/metrics/MetricContext/childBuilder(java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/Class/isAnonymousClass()|",
      "|java+method:///gobblin/metrics/GobblinMetrics/getMetricContext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Random/nextInt(int)|",
      "|java+method:///gobblin/metrics/MetricContext$Builder/addTags(java.util.Collection)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///gobblin/metrics/MetricContext$Builder/build()|",
      "|java+method:///gobblin/metrics/GobblinMetricsRegistry/getInstance()|"
    ],
    "v2Body": [
      "|java+constructor:///gobblin/metrics/Tag/Tag(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/lang/Class/getCanonicalName()|",
      "|java+method:///gobblin/metrics/MetricContext/builder(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/contains(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/getProp(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///gobblin/Constructs/toString()|",
      "|java+method:///gobblin/metrics/MetricContext/childBuilder(java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/Class/isAnonymousClass()|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///gobblin/metrics/GobblinMetricsRegistry/get(java.lang.String)|",
      "|java+method:///gobblin/metrics/GobblinMetrics/getMetricContext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Random/nextInt(int)|",
      "|java+method:///gobblin/metrics/MetricContext$Builder/addTags(java.util.Collection)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///gobblin/metrics/MetricContext$Builder/build()|",
      "|java+method:///gobblin/metrics/GobblinMetricsRegistry/getInstance()|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-api:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+method:///gobblin/source/extractor/extract/QueryBasedExtractor/build()|",
    "called": "|java+method:///gobblin/source/workunit/WorkUnit/getLowWaterMark()|",
    "v1Body": [
      "|java+method:///gobblin/source/workunit/WorkUnit/getProp(java.lang.String)|",
      "|java+method:///gobblin/source/extractor/extract/QueryBasedExtractor/getLatestWatermark(java.lang.String,gobblin.source.extractor.watermark.WatermarkType,long,long)|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///gobblin/source/extractor/extract/QueryBasedExtractor/getSourceCount(java.lang.String,java.lang.String,gobblin.source.workunit.WorkUnit,java.util.List)|",
      "|java+method:///gobblin/source/workunit/WorkUnit/getPropAsInt(java.lang.String,int)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///gobblin/source/extractor/exception/RecordCountException/getMessage()|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///gobblin/source/workunit/WorkUnit/getLowWaterMark()|",
      "|java+method:///gobblin/source/workunit/WorkUnit/getHighWaterMark()|",
      "|java+constructor:///gobblin/source/extractor/exception/ExtractPrepareException/ExtractPrepareException(java.lang.String,java.lang.Exception)|",
      "|java+method:///gobblin/source/extractor/extract/QueryBasedExtractor/setFetchStatus(boolean)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///java/lang/String/toUpperCase()|",
      "|java+method:///gobblin/source/extractor/exception/SchemaException/getMessage()|",
      "|java+method:///gobblin/source/extractor/watermark/WatermarkType/valueOf(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/source/extractor/extract/QueryBasedExtractor/getLowWatermarkWithNoDelta(long)|",
      "|java+method:///gobblin/source/extractor/extract/QueryBasedExtractor/extractMetadata(java.lang.String,java.lang.String,gobblin.source.workunit.WorkUnit)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///gobblin/source/extractor/extract/QueryBasedExtractor/setRangePredicates(java.lang.String,gobblin.source.extractor.watermark.WatermarkType,long,long)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///gobblin/source/extractor/exception/HighWatermarkException/getMessage()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///gobblin/source/extractor/extract/QueryBasedExtractor/setTimeOut(int)|",
      "|java+method:///java/lang/Exception/getMessage()|"
    ],
    "v2Body": [
      "|java+method:///gobblin/source/workunit/WorkUnit/getProp(java.lang.String)|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///gobblin/source/extractor/extract/QueryBasedExtractor/getSourceCount(java.lang.String,java.lang.String,gobblin.source.workunit.WorkUnit,java.util.List)|",
      "|java+method:///gobblin/source/workunit/WorkUnit/getPropAsInt(java.lang.String,int)|",
      "|java+method:///gobblin/source/extractor/exception/RecordCountException/getMessage()|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///gobblin/source/extractor/extract/QueryBasedExtractor/setRangePredicates(java.lang.String,gobblin.source.extractor.watermark.WatermarkType,long,long)|",
      "|java+method:///gobblin/source/workunit/WorkUnit/getHighWaterMark()|",
      "|java+constructor:///gobblin/source/extractor/exception/ExtractPrepareException/ExtractPrepareException(java.lang.String,java.lang.Exception)|",
      "|java+method:///gobblin/source/extractor/extract/QueryBasedExtractor/setFetchStatus(boolean)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
      "|java+method:///gobblin/source/extractor/extract/QueryBasedExtractor/getLatestWatermark(java.lang.String,gobblin.source.extractor.watermark.WatermarkType,long,long)|",
      "|java+method:///java/lang/String/toUpperCase()|",
      "|java+method:///gobblin/source/extractor/exception/SchemaException/getMessage()|",
      "|java+method:///gobblin/source/extractor/watermark/WatermarkType/valueOf(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/source/extractor/extract/QueryBasedExtractor/getLowWatermarkWithNoDelta(long)|",
      "|java+method:///gobblin/source/extractor/extract/QueryBasedExtractor/extractMetadata(java.lang.String,java.lang.String,gobblin.source.workunit.WorkUnit)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isNotBlank(java.lang.CharSequence)|",
      "|java+method:///gobblin/source/workunit/WorkUnit/getLowWaterMark()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///gobblin/source/extractor/exception/HighWatermarkException/getMessage()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///gobblin/source/extractor/extract/QueryBasedExtractor/setTimeOut(int)|",
      "|java+method:///java/lang/Exception/getMessage()|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-api:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+constructor:///gobblin/writer/FsDataWriter/FsDataWriter(gobblin.writer.FsDataWriterBuilder,gobblin.configuration.State)|",
    "called": "|java+method:///gobblin/configuration/State/getPropAsBoolean(java.lang.String,boolean)|",
    "v1Body": [
      "|java+method:///gobblin/configuration/State/getProp(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+constructor:///gobblin/util/ProxiedFileSystemWrapper/ProxiedFileSystemWrapper()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///gobblin/util/HadoopUtils/deserializeWriterFilePermissions(gobblin.configuration.State,int,int)|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///gobblin/util/HadoopUtils/deletePath(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,boolean)|",
      "|java+method:///gobblin/util/JobConfigurationUtils/putStateIntoConfiguration(gobblin.configuration.State,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///gobblin/util/WriterUtils/mkdirsWithRecursivePermission(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///gobblin/writer/FsDataWriterBuilder/getWriterId()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/getDefaultBlockSize(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/writer/FsDataWriterBuilder/getBranches()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/getDefaultReplication(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/util/WriterUtils/getWriterStagingDir(gobblin.configuration.State,int,int)|",
      "|java+method:///gobblin/writer/FsDataWriterBuilder/getFileName(gobblin.configuration.State)|",
      "|java+method:///gobblin/configuration/State/getProp(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/getPropAsBoolean(java.lang.String,boolean)|",
      "|java+method:///gobblin/configuration/State/getPropAsShort(java.lang.String,short)|",
      "|java+method:///gobblin/configuration/State/getPropAsInt(java.lang.String,int)|",
      "|java+method:///gobblin/util/HadoopUtils/deserializeWriterDirPermissions(gobblin.configuration.State,int,int)|",
      "|java+method:///gobblin/util/WriterUtils/getWriterOutputDir(gobblin.configuration.State,int,int)|",
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/getPropAsLong(java.lang.String,long)|",
      "|java+method:///gobblin/util/ProxiedFileSystemWrapper/getProxiedFileSystem(gobblin.configuration.State,gobblin.util.ProxiedFileSystemWrapper$AuthType,java.lang.String,java.lang.String)|",
      "|java+method:///gobblin/writer/FsDataWriterBuilder/getBranch()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.Throwable)|",
      "|java+method:///com/google/common/io/Closer/create()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///gobblin/util/HadoopUtils/deserializeWriterFilePermissions(gobblin.configuration.State,int,int)|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///gobblin/util/WriterUtils/getWriterOutputDir(gobblin.configuration.State,int,int)|",
      "|java+method:///gobblin/util/JobConfigurationUtils/putStateIntoConfiguration(gobblin.configuration.State,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///gobblin/configuration/State/getPropAsLong(java.lang.String,long)|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///gobblin/util/WriterUtils/mkdirsWithRecursivePermission(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///gobblin/writer/FsDataWriterBuilder/getWriterId()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/getDefaultBlockSize(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/writer/FsDataWriterBuilder/getBranches()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/getDefaultReplication(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/util/WriterUtils/getWriterStagingDir(gobblin.configuration.State,int,int)|",
      "|java+method:///gobblin/writer/FsDataWriterBuilder/getFileName(gobblin.configuration.State)|",
      "|java+method:///gobblin/configuration/State/getProp(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/getPropAsBoolean(java.lang.String,boolean)|",
      "|java+method:///gobblin/configuration/State/getPropAsShort(java.lang.String,short)|",
      "|java+method:///gobblin/configuration/State/getPropAsInt(java.lang.String,int)|",
      "|java+method:///gobblin/util/HadoopUtils/deserializeWriterDirPermissions(gobblin.configuration.State,int,int)|",
      "|java+method:///gobblin/util/WriterUtils/getWriterFS(gobblin.configuration.State,int,int)|",
      "|java+method:///gobblin/util/HadoopUtils/deletePath(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,boolean)|",
      "|java+method:///gobblin/writer/FsDataWriterBuilder/getBranch()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///com/google/common/io/Closer/create()|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-api:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+method:///gobblin/publisher/BaseDataPublisher/addSingleTaskWriterOutputToExistingDir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,gobblin.configuration.WorkUnitState,int,gobblin.util.ParallelRunner)|",
    "called": "|java+method:///gobblin/configuration/WorkUnitState/contains(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///gobblin/configuration/WorkUnitState/getPropAsList(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///gobblin/util/WriterUtils/mkdirsWithRecursivePermission(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)|",
      "|java+method:///gobblin/configuration/WorkUnitState/contains(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/util/ParallelRunner/renamePath(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,com.google.common.base.Optional)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/indexOf(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///gobblin/configuration/WorkUnitState/getPropAsList(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///gobblin/util/WriterUtils/mkdirsWithRecursivePermission(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)|",
      "|java+method:///gobblin/configuration/WorkUnitState/contains(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/util/ParallelRunner/movePath(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,com.google.common.base.Optional)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/indexOf(java.lang.String)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-api:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+method:///gobblin/source/extractor/filebased/FileBasedSource/getWorkunits(gobblin.configuration.SourceState)|",
    "called": "|java+method:///gobblin/configuration/SourceState/getPreviousWorkUnitStates()|",
    "v1Body": [
      "|java+method:///gobblin/configuration/SourceState/addAll(gobblin.configuration.State)|",
      "|java+constructor:///gobblin/configuration/SourceState/SourceState()|",
      "|java+method:///gobblin/source/workunit/WorkUnit/contains(java.lang.String)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Iterable)|",
      "|java+method:///gobblin/source/workunit/Extract$TableType/valueOf(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///gobblin/source/workunit/WorkUnit/getPropAsList(java.lang.String)|",
      "|java+method:///gobblin/configuration/SourceState/getPropAsInt(java.lang.String)|",
      "|java+method:///gobblin/source/extractor/filebased/FileBasedSource/getPreviousWorkUnitsForRetry(gobblin.configuration.SourceState)|",
      "|java+method:///gobblin/configuration/WorkUnitState/getWorkunit()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/commons/lang/StringUtils/join(java.util.Collection,java.lang.String)|",
      "|java+method:///gobblin/source/extractor/filebased/FileBasedSource/initLogger(gobblin.configuration.SourceState)|",
      "|java+method:///gobblin/configuration/SourceState/setProp(java.lang.String,java.lang.Object)|",
      "|java+method:///gobblin/configuration/SourceState/createExtract(gobblin.source.workunit.Extract$TableType,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/toUpperCase()|",
      "|java+method:///java/util/List/toArray()|",
      "|java+method:///java/util/Arrays/toString(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/configuration/SourceState/getPreviousWorkUnitStates()|",
      "|java+method:///java/util/List/removeAll(java.util.Collection)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///gobblin/configuration/SourceState/contains(java.lang.String)|",
      "|java+method:///java/util/List/subList(int,int)|",
      "|java+method:///gobblin/configuration/SourceState/createWorkUnit(gobblin.source.workunit.Extract)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///gobblin/configuration/SourceState/getPropAsBoolean(java.lang.String,boolean)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///gobblin/source/extractor/filebased/FileBasedSource/getcurrentFsSnapshot(gobblin.configuration.State)|",
      "|java+method:///gobblin/configuration/SourceState/getProp(java.lang.String)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///gobblin/source/extractor/filebased/FileBasedSource/initFileSystemHelper(gobblin.configuration.State)|"
    ],
    "v2Body": [
      "|java+method:///gobblin/configuration/SourceState/addAll(gobblin.configuration.State)|",
      "|java+constructor:///gobblin/configuration/SourceState/SourceState()|",
      "|java+method:///gobblin/source/workunit/WorkUnit/contains(java.lang.String)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Iterable)|",
      "|java+method:///gobblin/source/workunit/Extract$TableType/valueOf(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///gobblin/source/workunit/WorkUnit/getPropAsList(java.lang.String)|",
      "|java+method:///gobblin/configuration/SourceState/getPropAsInt(java.lang.String)|",
      "|java+method:///gobblin/source/extractor/filebased/FileBasedSource/getPreviousWorkUnitsForRetry(gobblin.configuration.SourceState)|",
      "|java+method:///gobblin/configuration/WorkUnitState/getWorkunit()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///gobblin/source/extractor/filebased/FileBasedSource/initLogger(gobblin.configuration.SourceState)|",
      "|java+method:///gobblin/configuration/SourceState/setProp(java.lang.String,java.lang.Object)|",
      "|java+method:///gobblin/configuration/SourceState/createExtract(gobblin.source.workunit.Extract$TableType,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/toUpperCase()|",
      "|java+method:///java/util/List/toArray()|",
      "|java+method:///java/util/Arrays/toString(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/configuration/SourceState/getPreviousWorkUnitStates()|",
      "|java+method:///java/util/List/removeAll(java.util.Collection)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///gobblin/configuration/SourceState/contains(java.lang.String)|",
      "|java+method:///java/util/List/subList(int,int)|",
      "|java+method:///gobblin/configuration/SourceState/createWorkUnit(gobblin.source.workunit.Extract)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///gobblin/configuration/SourceState/getPropAsBoolean(java.lang.String,boolean)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///gobblin/source/extractor/filebased/FileBasedSource/getcurrentFsSnapshot(gobblin.configuration.State)|",
      "|java+method:///gobblin/configuration/SourceState/getProp(java.lang.String)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/join(java.lang.Iterable,java.lang.String)|",
      "|java+method:///gobblin/source/extractor/filebased/FileBasedSource/initFileSystemHelper(gobblin.configuration.State)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-api:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+method:///gobblin/publisher/BaseDataPublisher/addWriterOutputToExistingDir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,gobblin.configuration.WorkUnitState,int,gobblin.util.ParallelRunner)|",
    "called": "|java+method:///gobblin/configuration/WorkUnitState/getProp(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///org/apache/hadoop/fs/Path/getName()|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///gobblin/configuration/WorkUnitState/getProp(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///gobblin/configuration/WorkUnitState/getPropAsBoolean(java.lang.String,boolean)|",
      "|java+method:///gobblin/util/ParallelRunner/renamePath(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,com.google.common.base.Optional)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///org/apache/hadoop/fs/Path/getName()|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///gobblin/configuration/WorkUnitState/getProp(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///gobblin/configuration/WorkUnitState/getPropAsBoolean(java.lang.String,boolean)|",
      "|java+method:///gobblin/util/ParallelRunner/movePath(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,com.google.common.base.Optional)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-api:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+constructor:///gobblin/publisher/BaseDataPublisher/BaseDataPublisher(gobblin.configuration.State)|",
    "called": "|java+method:///gobblin/configuration/State/getPropAsShortWithRadix(java.lang.String,short,int)|",
    "v1Body": [
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///gobblin/configuration/State/getProp(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/hadoop/fs/permission/FsPermission/getDefault()|",
      "|java+method:///com/google/common/collect/Lists/newArrayListWithCapacity(int)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/fs/permission/FsPermission/FsPermission(short)|",
      "|java+method:///org/apache/hadoop/fs/permission/FsPermission/toShort()|",
      "|java+constructor:///gobblin/publisher/SingleTaskDataPublisher/SingleTaskDataPublisher(gobblin.configuration.State)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/getState()|",
      "|java+method:///com/google/common/io/Closer/create()|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///gobblin/configuration/State/getProp(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/getPropAsInt(java.lang.String,int)|",
      "|java+method:///gobblin/configuration/State/getPropAsShortWithRadix(java.lang.String,short,int)|",
      "|java+method:///gobblin/configuration/State/getPropertyNames()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/net/URI/create(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///gobblin/configuration/State/getProp(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/hadoop/fs/permission/FsPermission/getDefault()|",
      "|java+method:///java/net/URI/toString()|",
      "|java+method:///com/google/common/collect/Lists/newArrayListWithCapacity(int)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/fs/permission/FsPermission/FsPermission(short)|",
      "|java+method:///org/apache/hadoop/fs/permission/FsPermission/toShort()|",
      "|java+constructor:///gobblin/publisher/SingleTaskDataPublisher/SingleTaskDataPublisher(gobblin.configuration.State)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/getState()|",
      "|java+method:///com/google/common/io/Closer/create()|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///gobblin/configuration/State/getProp(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/getPropAsInt(java.lang.String,int)|",
      "|java+method:///gobblin/configuration/State/getPropAsShortWithRadix(java.lang.String,short,int)|",
      "|java+method:///gobblin/configuration/State/getPropertyNames()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/net/URI/create(java.lang.String)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-api:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+method:///gobblin/source/extractor/extract/QueryBasedSource/getWorkunits(gobblin.configuration.SourceState)|",
    "called": "|java+method:///gobblin/source/workunit/Extract/setFullTrue(long)|",
    "v1Body": [
      "|java+method:///gobblin/configuration/SourceState/addAll(gobblin.configuration.State)|",
      "|java+method:///gobblin/source/extractor/utils/Utils/escapeSpecialCharacters(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///gobblin/source/workunit/Extract/setFullTrue(long)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///gobblin/source/workunit/Extract$TableType/valueOf(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///java/util/Map/putAll(java.util.Map)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///gobblin/configuration/SourceState/getProp(java.lang.String)|",
      "|java+constructor:///gobblin/source/extractor/partition/Partitioner/Partitioner(gobblin.configuration.SourceState)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///gobblin/source/extractor/extract/QueryBasedSource/getPreviousWorkUnitsForRetry(gobblin.configuration.SourceState)|",
      "|java+constructor:///gobblin/configuration/SourceState/SourceState()|",
      "|java+method:///gobblin/configuration/SourceState/setProp(java.lang.String,java.lang.Object)|",
      "|java+method:///gobblin/configuration/SourceState/createExtract(gobblin.source.workunit.Extract$TableType,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/toUpperCase()|",
      "|java+method:///gobblin/source/extractor/partition/Partitioner/getPartitions(long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///gobblin/configuration/SourceState/createWorkUnit(gobblin.source.workunit.Extract)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///gobblin/source/extractor/extract/QueryBasedSource/initLogger(gobblin.configuration.SourceState)|",
      "|java+method:///gobblin/source/extractor/extract/QueryBasedSource/getLatestWatermarkFromMetadata(gobblin.configuration.SourceState)|",
      "|java+method:///com/google/common/collect/Maps/newTreeMap()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/lang/System/currentTimeMillis()|"
    ],
    "v2Body": [
      "|java+method:///gobblin/configuration/SourceState/addAll(gobblin.configuration.State)|",
      "|java+method:///gobblin/source/extractor/utils/Utils/escapeSpecialCharacters(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///gobblin/source/workunit/Extract/setFullTrue(long)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///gobblin/source/workunit/Extract$TableType/valueOf(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///java/util/Map/putAll(java.util.Map)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///gobblin/configuration/SourceState/getProp(java.lang.String)|",
      "|java+constructor:///gobblin/source/extractor/partition/Partitioner/Partitioner(gobblin.configuration.SourceState)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///gobblin/source/extractor/extract/QueryBasedSource/getPreviousWorkUnitsForRetry(gobblin.configuration.SourceState)|",
      "|java+constructor:///gobblin/configuration/SourceState/SourceState()|",
      "|java+method:///gobblin/configuration/SourceState/setProp(java.lang.String,java.lang.Object)|",
      "|java+method:///gobblin/configuration/SourceState/createExtract(gobblin.source.workunit.Extract$TableType,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
      "|java+method:///java/lang/String/toUpperCase()|",
      "|java+method:///gobblin/source/extractor/partition/Partitioner/getPartitions(long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///gobblin/configuration/SourceState/createWorkUnit(gobblin.source.workunit.Extract)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///gobblin/source/extractor/extract/QueryBasedSource/initLogger(gobblin.configuration.SourceState)|",
      "|java+method:///gobblin/source/extractor/extract/QueryBasedSource/getLatestWatermarkFromMetadata(gobblin.configuration.SourceState)|",
      "|java+method:///com/google/common/collect/Maps/newTreeMap()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/lang/System/currentTimeMillis()|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-api:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+constructor:///gobblin/source/extractor/extract/kafka/KafkaAvroExtractor/KafkaAvroExtractor(gobblin.configuration.WorkUnitState)|",
    "called": "|java+method:///gobblin/configuration/WorkUnitState/getProperties()|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+constructor:///org/apache/avro/generic/GenericDatumReader/GenericDatumReader(org.apache.avro.Schema)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///gobblin/source/extractor/extract/kafka/KafkaAvroExtractor/getExtractorSchema()|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+constructor:///gobblin/source/extractor/extract/kafka/KafkaExtractor/KafkaExtractor(gobblin.configuration.WorkUnitState)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///gobblin/configuration/WorkUnitState/contains(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+constructor:///org/apache/avro/generic/GenericDatumReader/GenericDatumReader(org.apache.avro.Schema)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///gobblin/configuration/WorkUnitState/getProperties()|",
      "|java+method:///gobblin/metrics/kafka/KafkaSchemaRegistry/get(java.util.Properties)|",
      "|java+method:///gobblin/source/extractor/extract/kafka/KafkaAvroExtractor/getExtractorSchema()|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+constructor:///gobblin/source/extractor/extract/kafka/KafkaExtractor/KafkaExtractor(gobblin.configuration.WorkUnitState)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-api:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+method:///gobblin/publisher/BaseDataPublisher/publishData(gobblin.configuration.WorkUnitState,int,boolean,java.util.Set)|",
    "called": "|java+method:///gobblin/configuration/State/getPropAsBoolean(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/getPublisherOutputDir(gobblin.configuration.WorkUnitState,int)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/getParallelRunner(org.apache.hadoop.fs.FileSystem)|",
      "|java+method:///gobblin/configuration/State/getPropAsBoolean(java.lang.String)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///gobblin/util/WriterUtils/getWriterOutputDir(gobblin.configuration.State,int,int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///gobblin/configuration/WorkUnitState/getId()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/addSingleTaskWriterOutputToExistingDir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,gobblin.configuration.WorkUnitState,int,gobblin.util.ParallelRunner)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///gobblin/util/WriterUtils/mkdirsWithRecursivePermission(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/util/ParallelRunner/renamePath(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,com.google.common.base.Optional)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/addWriterOutputToExistingDir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,gobblin.configuration.WorkUnitState,int,gobblin.util.ParallelRunner)|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/getState()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/delete(org.apache.hadoop.fs.Path,boolean)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/getPublisherOutputDir(gobblin.configuration.WorkUnitState,int)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/getParallelRunner(org.apache.hadoop.fs.FileSystem)|",
      "|java+method:///gobblin/configuration/State/getPropAsBoolean(java.lang.String)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///gobblin/util/WriterUtils/getWriterOutputDir(gobblin.configuration.State,int,int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///gobblin/configuration/WorkUnitState/getId()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/addSingleTaskWriterOutputToExistingDir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,gobblin.configuration.WorkUnitState,int,gobblin.util.ParallelRunner)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///gobblin/util/WriterUtils/mkdirsWithRecursivePermission(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/util/ParallelRunner/movePath(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,com.google.common.base.Optional)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/addWriterOutputToExistingDir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,gobblin.configuration.WorkUnitState,int,gobblin.util.ParallelRunner)|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/getState()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/delete(org.apache.hadoop.fs.Path,boolean)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-api:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+method:///gobblin/publisher/TimePartitionedDataPublisher/addWriterOutputToExistingDir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,gobblin.configuration.WorkUnitState,int,gobblin.util.ParallelRunner)|",
    "called": "|java+method:///gobblin/util/FileListUtils/listFilesRecursively(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///gobblin/util/FileListUtils/listFilesRecursively(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///gobblin/util/ParallelRunner/renamePath(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,com.google.common.base.Optional)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/String/indexOf(java.lang.String)|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///gobblin/util/WriterUtils/mkdirsWithRecursivePermission(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///gobblin/util/FileListUtils/listFilesRecursively(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///gobblin/util/ParallelRunner/movePath(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,com.google.common.base.Optional)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/String/indexOf(java.lang.String)|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///gobblin/util/WriterUtils/mkdirsWithRecursivePermission(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-utility:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+constructor:///gobblin/publisher/BaseDataPublisher/BaseDataPublisher(gobblin.configuration.State)|",
    "called": "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
    "v1Body": [
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///gobblin/configuration/State/getProp(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/hadoop/fs/permission/FsPermission/getDefault()|",
      "|java+method:///com/google/common/collect/Lists/newArrayListWithCapacity(int)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/fs/permission/FsPermission/FsPermission(short)|",
      "|java+method:///org/apache/hadoop/fs/permission/FsPermission/toShort()|",
      "|java+constructor:///gobblin/publisher/SingleTaskDataPublisher/SingleTaskDataPublisher(gobblin.configuration.State)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/getState()|",
      "|java+method:///com/google/common/io/Closer/create()|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///gobblin/configuration/State/getProp(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/getPropAsInt(java.lang.String,int)|",
      "|java+method:///gobblin/configuration/State/getPropAsShortWithRadix(java.lang.String,short,int)|",
      "|java+method:///gobblin/configuration/State/getPropertyNames()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/net/URI/create(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///gobblin/configuration/State/getProp(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/hadoop/fs/permission/FsPermission/getDefault()|",
      "|java+method:///java/net/URI/toString()|",
      "|java+method:///com/google/common/collect/Lists/newArrayListWithCapacity(int)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/fs/permission/FsPermission/FsPermission(short)|",
      "|java+method:///org/apache/hadoop/fs/permission/FsPermission/toShort()|",
      "|java+constructor:///gobblin/publisher/SingleTaskDataPublisher/SingleTaskDataPublisher(gobblin.configuration.State)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/getState()|",
      "|java+method:///com/google/common/io/Closer/create()|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///gobblin/configuration/State/getProp(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/getPropAsInt(java.lang.String,int)|",
      "|java+method:///gobblin/configuration/State/getPropAsShortWithRadix(java.lang.String,short,int)|",
      "|java+method:///gobblin/configuration/State/getPropertyNames()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/net/URI/create(java.lang.String)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-utility:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+method:///gobblin/instrumented/writer/InstrumentedDataWriterBase/close()|",
    "called": "|java+method:///gobblin/util/ExecutorsUtils/shutdownExecutorService(java.util.concurrent.ExecutorService,com.google.common.base.Optional)|",
    "v1Body": [
      "|java+method:///com/google/common/io/Closer/close()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+method:///com/google/common/io/Closer/close()|",
      "|java+method:///gobblin/util/ExecutorsUtils/shutdownExecutorService(java.util.concurrent.ExecutorService,com.google.common.base.Optional)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-utility:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+constructor:///gobblin/writer/FsDataWriter/FsDataWriter(gobblin.writer.FsDataWriterBuilder,gobblin.configuration.State)|",
    "called": "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
    "v1Body": [
      "|java+method:///gobblin/configuration/State/getProp(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+constructor:///gobblin/util/ProxiedFileSystemWrapper/ProxiedFileSystemWrapper()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///gobblin/util/HadoopUtils/deserializeWriterFilePermissions(gobblin.configuration.State,int,int)|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///gobblin/util/HadoopUtils/deletePath(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,boolean)|",
      "|java+method:///gobblin/util/JobConfigurationUtils/putStateIntoConfiguration(gobblin.configuration.State,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///gobblin/util/WriterUtils/mkdirsWithRecursivePermission(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///gobblin/writer/FsDataWriterBuilder/getWriterId()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/getDefaultBlockSize(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/writer/FsDataWriterBuilder/getBranches()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/getDefaultReplication(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/util/WriterUtils/getWriterStagingDir(gobblin.configuration.State,int,int)|",
      "|java+method:///gobblin/writer/FsDataWriterBuilder/getFileName(gobblin.configuration.State)|",
      "|java+method:///gobblin/configuration/State/getProp(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/getPropAsBoolean(java.lang.String,boolean)|",
      "|java+method:///gobblin/configuration/State/getPropAsShort(java.lang.String,short)|",
      "|java+method:///gobblin/configuration/State/getPropAsInt(java.lang.String,int)|",
      "|java+method:///gobblin/util/HadoopUtils/deserializeWriterDirPermissions(gobblin.configuration.State,int,int)|",
      "|java+method:///gobblin/util/WriterUtils/getWriterOutputDir(gobblin.configuration.State,int,int)|",
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/getPropAsLong(java.lang.String,long)|",
      "|java+method:///gobblin/util/ProxiedFileSystemWrapper/getProxiedFileSystem(gobblin.configuration.State,gobblin.util.ProxiedFileSystemWrapper$AuthType,java.lang.String,java.lang.String)|",
      "|java+method:///gobblin/writer/FsDataWriterBuilder/getBranch()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.Throwable)|",
      "|java+method:///com/google/common/io/Closer/create()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///gobblin/util/HadoopUtils/deserializeWriterFilePermissions(gobblin.configuration.State,int,int)|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///gobblin/util/WriterUtils/getWriterOutputDir(gobblin.configuration.State,int,int)|",
      "|java+method:///gobblin/util/JobConfigurationUtils/putStateIntoConfiguration(gobblin.configuration.State,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///gobblin/configuration/State/getPropAsLong(java.lang.String,long)|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///gobblin/util/WriterUtils/mkdirsWithRecursivePermission(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///gobblin/writer/FsDataWriterBuilder/getWriterId()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/getDefaultBlockSize(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/writer/FsDataWriterBuilder/getBranches()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/getDefaultReplication(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/util/WriterUtils/getWriterStagingDir(gobblin.configuration.State,int,int)|",
      "|java+method:///gobblin/writer/FsDataWriterBuilder/getFileName(gobblin.configuration.State)|",
      "|java+method:///gobblin/configuration/State/getProp(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/getPropAsBoolean(java.lang.String,boolean)|",
      "|java+method:///gobblin/configuration/State/getPropAsShort(java.lang.String,short)|",
      "|java+method:///gobblin/configuration/State/getPropAsInt(java.lang.String,int)|",
      "|java+method:///gobblin/util/HadoopUtils/deserializeWriterDirPermissions(gobblin.configuration.State,int,int)|",
      "|java+method:///gobblin/util/WriterUtils/getWriterFS(gobblin.configuration.State,int,int)|",
      "|java+method:///gobblin/util/HadoopUtils/deletePath(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,boolean)|",
      "|java+method:///gobblin/writer/FsDataWriterBuilder/getBranch()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///com/google/common/io/Closer/create()|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-utility:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+method:///gobblin/publisher/BaseDataPublisher/addSingleTaskWriterOutputToExistingDir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,gobblin.configuration.WorkUnitState,int,gobblin.util.ParallelRunner)|",
    "called": "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///gobblin/configuration/WorkUnitState/getPropAsList(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///gobblin/util/WriterUtils/mkdirsWithRecursivePermission(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)|",
      "|java+method:///gobblin/configuration/WorkUnitState/contains(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/util/ParallelRunner/renamePath(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,com.google.common.base.Optional)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/indexOf(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///gobblin/configuration/WorkUnitState/getPropAsList(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///gobblin/util/WriterUtils/mkdirsWithRecursivePermission(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)|",
      "|java+method:///gobblin/configuration/WorkUnitState/contains(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/util/ParallelRunner/movePath(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,com.google.common.base.Optional)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/indexOf(java.lang.String)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-utility:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+method:///gobblin/source/extractor/extract/sftp/SftpLightWeightFileSystem/getFileStatus(org.apache.hadoop.fs.Path)|",
    "called": "|java+method:///gobblin/util/HadoopUtils/toUriPath(org.apache.hadoop.fs.Path)|",
    "v1Body": [
      "|java+method:///com/jcraft/jsch/SftpATTRS/getSize()|",
      "|java+method:///org/apache/commons/io/IOUtils/toString(java.io.InputStream)|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/getATime()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+constructor:///org/apache/hadoop/fs/FileStatus/FileStatus(long,boolean,int,long,long,long,org.apache.hadoop.fs.permission.FsPermission,java.lang.String,java.lang.String,org.apache.hadoop.fs.Path)|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/getMTime()|",
      "|java+method:///gobblin/source/extractor/extract/sftp/SftpLightWeightFileSystem/safeDisconnect(com.jcraft.jsch.Channel)|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/getPermissions()|",
      "|java+method:///com/jcraft/jsch/ChannelSftp/stat(java.lang.String)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.Throwable)|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/getUId()|",
      "|java+method:///gobblin/source/extractor/extract/sftp/SftpFsHelper/getSftpChannel()|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/isDir()|",
      "|java+method:///gobblin/util/HadoopUtils/toUriPath(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/commons/lang/StringUtils/trimToEmpty(java.lang.String)|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/getGId()|",
      "|java+constructor:///org/apache/hadoop/fs/permission/FsPermission/FsPermission(short)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/jcraft/jsch/ChannelExec/getInputStream()|",
      "|java+method:///gobblin/source/extractor/extract/sftp/SftpFsHelper/getExecChannel(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/jcraft/jsch/SftpATTRS/getSize()|",
      "|java+method:///org/apache/commons/io/IOUtils/toString(java.io.InputStream)|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/getATime()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/getMTime()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///gobblin/source/extractor/extract/sftp/SftpLightWeightFileSystem/safeDisconnect(com.jcraft.jsch.Channel)|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/getPermissions()|",
      "|java+method:///com/jcraft/jsch/ChannelSftp/stat(java.lang.String)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.Throwable)|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/getUId()|",
      "|java+method:///gobblin/source/extractor/extract/sftp/SftpFsHelper/getSftpChannel()|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/isDir()|",
      "|java+method:///gobblin/util/HadoopUtils/toUriPath(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/trimToEmpty(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/FileStatus/FileStatus(long,boolean,int,long,long,long,org.apache.hadoop.fs.permission.FsPermission,java.lang.String,java.lang.String,org.apache.hadoop.fs.Path)|",
      "|java+method:///com/jcraft/jsch/SftpATTRS/getGId()|",
      "|java+constructor:///org/apache/hadoop/fs/permission/FsPermission/FsPermission(short)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/jcraft/jsch/ChannelExec/getInputStream()|",
      "|java+method:///gobblin/source/extractor/extract/sftp/SftpFsHelper/getExecChannel(java.lang.String)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-utility:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+method:///gobblin/qualitychecker/row/RowLevelPolicyCheckerBuilder/build()|",
    "called": "|java+method:///gobblin/util/WriterUtils/getWriterFS(gobblin.configuration.State,int,int)|",
    "v1Body": [
      "|java+method:///gobblin/qualitychecker/row/RowLevelPolicyCheckerBuilder/createPolicyList()|",
      "|java+constructor:///gobblin/qualitychecker/row/RowLevelPolicyChecker/RowLevelPolicyChecker(java.util.List)|"
    ],
    "v2Body": [
      "|java+method:///gobblin/qualitychecker/row/RowLevelPolicyCheckerBuilder/createPolicyList()|",
      "|java+method:///gobblin/configuration/State/getId()|",
      "|java+method:///gobblin/util/WriterUtils/getWriterFS(gobblin.configuration.State,int,int)|",
      "|java+constructor:///gobblin/qualitychecker/row/RowLevelPolicyChecker/RowLevelPolicyChecker(java.util.List,java.lang.String,org.apache.hadoop.fs.FileSystem)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-utility:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+method:///gobblin/publisher/BaseDataPublisher/publishData(gobblin.configuration.WorkUnitState,int,boolean,java.util.Set)|",
    "called": "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/getPublisherOutputDir(gobblin.configuration.WorkUnitState,int)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/getParallelRunner(org.apache.hadoop.fs.FileSystem)|",
      "|java+method:///gobblin/configuration/State/getPropAsBoolean(java.lang.String)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///gobblin/util/WriterUtils/getWriterOutputDir(gobblin.configuration.State,int,int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///gobblin/configuration/WorkUnitState/getId()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/addSingleTaskWriterOutputToExistingDir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,gobblin.configuration.WorkUnitState,int,gobblin.util.ParallelRunner)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///gobblin/util/WriterUtils/mkdirsWithRecursivePermission(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/util/ParallelRunner/renamePath(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,com.google.common.base.Optional)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/addWriterOutputToExistingDir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,gobblin.configuration.WorkUnitState,int,gobblin.util.ParallelRunner)|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/getState()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/delete(org.apache.hadoop.fs.Path,boolean)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/getPublisherOutputDir(gobblin.configuration.WorkUnitState,int)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/getParallelRunner(org.apache.hadoop.fs.FileSystem)|",
      "|java+method:///gobblin/configuration/State/getPropAsBoolean(java.lang.String)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///gobblin/util/WriterUtils/getWriterOutputDir(gobblin.configuration.State,int,int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///gobblin/configuration/WorkUnitState/getId()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/addSingleTaskWriterOutputToExistingDir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,gobblin.configuration.WorkUnitState,int,gobblin.util.ParallelRunner)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///gobblin/util/WriterUtils/mkdirsWithRecursivePermission(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/util/ParallelRunner/movePath(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,com.google.common.base.Optional)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/addWriterOutputToExistingDir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,gobblin.configuration.WorkUnitState,int,gobblin.util.ParallelRunner)|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///gobblin/publisher/BaseDataPublisher/getState()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/delete(org.apache.hadoop.fs.Path,boolean)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-utility:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+method:///gobblin/publisher/BaseDataPublisher/addWriterOutputToExistingDir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,gobblin.configuration.WorkUnitState,int,gobblin.util.ParallelRunner)|",
    "called": "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///org/apache/hadoop/fs/Path/getName()|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///gobblin/configuration/WorkUnitState/getProp(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///gobblin/configuration/WorkUnitState/getPropAsBoolean(java.lang.String,boolean)|",
      "|java+method:///gobblin/util/ParallelRunner/renamePath(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,com.google.common.base.Optional)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///org/apache/hadoop/fs/Path/getName()|",
      "|java+method:///gobblin/util/ForkOperatorUtils/getPropertyNameForBranch(java.lang.String,int,int)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///gobblin/configuration/WorkUnitState/getProp(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///gobblin/configuration/WorkUnitState/getPropAsBoolean(java.lang.String,boolean)|",
      "|java+method:///gobblin/util/ParallelRunner/movePath(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,com.google.common.base.Optional)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-utility:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+method:///gobblin/instrumented/Instrumented/getMetricContext(gobblin.configuration.State,java.lang.Class,java.util.List)|",
    "called": "|java+constructor:///gobblin/metrics/Tag/Tag(java.lang.String,java.lang.Object)|",
    "v1Body": [
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+constructor:///gobblin/metrics/Tag/Tag(java.lang.String,java.lang.Object)|",
      "|java+method:///gobblin/metrics/GobblinMetricsRegistry/get(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/lang/Class/getCanonicalName()|",
      "|java+method:///gobblin/metrics/MetricContext/builder(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/contains(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/getProp(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///gobblin/Constructs/toString()|",
      "|java+method:///gobblin/metrics/MetricContext/childBuilder(java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/Class/isAnonymousClass()|",
      "|java+method:///gobblin/metrics/GobblinMetrics/getMetricContext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Random/nextInt(int)|",
      "|java+method:///gobblin/metrics/MetricContext$Builder/addTags(java.util.Collection)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///gobblin/metrics/MetricContext$Builder/build()|",
      "|java+method:///gobblin/metrics/GobblinMetricsRegistry/getInstance()|"
    ],
    "v2Body": [
      "|java+constructor:///gobblin/metrics/Tag/Tag(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/lang/Class/getCanonicalName()|",
      "|java+method:///gobblin/metrics/MetricContext/builder(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/contains(java.lang.String)|",
      "|java+method:///gobblin/configuration/State/getProp(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///gobblin/Constructs/toString()|",
      "|java+method:///gobblin/metrics/MetricContext/childBuilder(java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/Class/isAnonymousClass()|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///gobblin/metrics/GobblinMetricsRegistry/get(java.lang.String)|",
      "|java+method:///gobblin/metrics/GobblinMetrics/getMetricContext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Random/nextInt(int)|",
      "|java+method:///gobblin/metrics/MetricContext$Builder/addTags(java.util.Collection)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///gobblin/metrics/MetricContext$Builder/build()|",
      "|java+method:///gobblin/metrics/GobblinMetricsRegistry/getInstance()|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-metrics:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+constructor:///gobblin/source/extractor/extract/kafka/KafkaAvroExtractor/KafkaAvroExtractor(gobblin.configuration.WorkUnitState)|",
    "called": "|java+method:///gobblin/metrics/kafka/KafkaSchemaRegistry/get(java.util.Properties)|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+constructor:///org/apache/avro/generic/GenericDatumReader/GenericDatumReader(org.apache.avro.Schema)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///gobblin/source/extractor/extract/kafka/KafkaAvroExtractor/getExtractorSchema()|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+constructor:///gobblin/source/extractor/extract/kafka/KafkaExtractor/KafkaExtractor(gobblin.configuration.WorkUnitState)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///gobblin/configuration/WorkUnitState/contains(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+constructor:///org/apache/avro/generic/GenericDatumReader/GenericDatumReader(org.apache.avro.Schema)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///gobblin/configuration/WorkUnitState/getProperties()|",
      "|java+method:///gobblin/metrics/kafka/KafkaSchemaRegistry/get(java.util.Properties)|",
      "|java+method:///gobblin/source/extractor/extract/kafka/KafkaAvroExtractor/getExtractorSchema()|",
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+constructor:///gobblin/source/extractor/extract/kafka/KafkaExtractor/KafkaExtractor(gobblin.configuration.WorkUnitState)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-metrics:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+method:///gobblin/instrumented/writer/InstrumentedDataWriterBase/regenerateMetrics()|",
    "called": "|java+method:///gobblin/metrics/MetricContext/timer(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+method:///gobblin/metrics/MetricContext/timer(java.lang.String)|",
      "|java+method:///gobblin/instrumented/writer/InstrumentedDataWriterBase/isInstrumentationEnabled()|",
      "|java+method:///gobblin/metrics/MetricContext/meter(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///gobblin/instrumented/writer/InstrumentedDataWriterBase/setBytesWrittenMeter(boolean)|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+method:///gobblin/instrumented/writer/InstrumentedDataWriterBase/setRecordsWrittenMeter(boolean)|",
      "|java+method:///gobblin/metrics/MetricContext/timer(java.lang.String)|",
      "|java+method:///gobblin/instrumented/writer/InstrumentedDataWriterBase/isInstrumentationEnabled()|",
      "|java+method:///gobblin/metrics/MetricContext/meter(java.lang.String)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-metrics:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+method:///gobblin/instrumented/Instrumented/newContextFromReferenceContext(gobblin.metrics.MetricContext,java.util.List,com.google.common.base.Optional)|",
    "called": "|java+method:///gobblin/metrics/MetricContext/getName()|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Iterable)|",
      "|java+method:///gobblin/metrics/MetricContext/getTags()|",
      "|java+method:///com/google/common/base/Joiner/on(java.lang.String)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///gobblin/metrics/MetricContext/builder(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/orNull()|",
      "|java+method:///com/google/common/collect/Iterables/getLast(java.lang.Iterable)|",
      "|java+method:///com/google/common/base/Joiner/join(java.lang.Iterable)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///com/google/common/base/Splitter/splitToList(java.lang.CharSequence)|",
      "|java+method:///gobblin/metrics/MetricContext$Builder/addTags(java.util.Collection)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/UUID/randomUUID()|",
      "|java+method:///gobblin/metrics/MetricContext/childBuilder(java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringUtils/startsWith(java.lang.String,java.lang.String)|",
      "|java+method:///gobblin/metrics/MetricContext/getParent()|",
      "|java+method:///com/google/common/base/Splitter/on(java.lang.String)|",
      "|java+method:///java/util/List/set(int,java.lang.Object)|",
      "|java+method:///gobblin/metrics/MetricContext/getName()|",
      "|java+method:///gobblin/metrics/MetricContext$Builder/build()|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Iterable)|",
      "|java+method:///gobblin/metrics/MetricContext/getTags()|",
      "|java+method:///com/google/common/base/Joiner/on(java.lang.String)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///gobblin/metrics/MetricContext/builder(java.lang.String)|",
      "|java+method:///com/google/common/collect/Iterables/getLast(java.lang.Iterable)|",
      "|java+method:///com/google/common/base/Joiner/join(java.lang.Iterable)|",
      "|java+method:///gobblin/metrics/MetricContext/childBuilder(java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///com/google/common/base/Splitter/splitToList(java.lang.CharSequence)|",
      "|java+method:///gobblin/metrics/MetricContext$Builder/addTags(java.util.Collection)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/UUID/randomUUID()|",
      "|java+method:///org/apache/commons/lang3/StringUtils/startsWith(java.lang.CharSequence,java.lang.CharSequence)|",
      "|java+method:///com/google/common/base/Optional/orNull()|",
      "|java+method:///gobblin/metrics/MetricContext/getParent()|",
      "|java+method:///com/google/common/base/Splitter/on(java.lang.String)|",
      "|java+method:///java/util/List/set(int,java.lang.Object)|",
      "|java+method:///gobblin/metrics/MetricContext/getName()|",
      "|java+method:///gobblin/metrics/MetricContext$Builder/build()|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-metrics:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+method:///gobblin/metrics/GobblinMetrics/buildFileMetricReporter(java.util.Properties)|",
    "called": "|java+method:///gobblin/metrics/reporter/OutputStreamEventReporter$Builder/build()|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/append(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamReporter$Builder/build()|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamReporter$Builder/outputTo(java.io.OutputStream)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamEventReporter/forContext(gobblin.metrics.MetricContext)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamReporter/forContext(gobblin.metrics.MetricContext)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///com/google/common/io/Closer/register(java.io.Closeable)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/create(org.apache.hadoop.fs.Path,boolean)|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamEventReporter$Builder/build()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamEventReporter$Builder/outputTo(java.io.OutputStream)|",
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+method:///gobblin/metrics/GobblinMetrics/getName()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/mkdirs(org.apache.hadoop.fs.Path)|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/append(org.apache.hadoop.fs.Path)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamReporter$Builder/build()|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamReporter$Builder/outputTo(java.io.OutputStream)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamEventReporter/forContext(gobblin.metrics.MetricContext)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamReporter/forContext(gobblin.metrics.MetricContext)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///com/google/common/io/Closer/register(java.io.Closeable)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/create(org.apache.hadoop.fs.Path,boolean)|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamEventReporter$Builder/build()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///gobblin/metrics/reporter/OutputStreamEventReporter$Builder/outputTo(java.io.OutputStream)|",
      "|java+method:///java/net/URI/create(java.lang.String)|",
      "|java+method:///gobblin/metrics/GobblinMetrics/getName()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/mkdirs(org.apache.hadoop.fs.Path)|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-metrics:0.6.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.gobblin:gobblin-core:0.0.0.mavenTest1-hadoop1",
    "coordinatesV2": "com.linkedin.gobblin:gobblin-core:0.6.0",
    "caller": "|java+method:///gobblin/metrics/GobblinMetrics/buildKafkaMetricReporter(java.util.Properties)|",
    "called": "|java+method:///gobblin/metrics/kafka/KafkaReporter$Builder/build(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///java/lang/String/toUpperCase()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/metrics/KafkaReportingFormats/metricReporterBuilder(gobblin.metrics.MetricContext,java.util.Properties)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String,java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///gobblin/metrics/kafka/KafkaReporter$Builder/build(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/google/common/io/Closer/register(java.io.Closeable)|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///gobblin/metrics/KafkaReportingFormats/valueOf(java.lang.String)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///gobblin/metrics/KafkaReportingFormats/eventReporterBuilder(gobblin.metrics.MetricContext,java.util.Properties)|",
      "|java+method:///gobblin/metrics/kafka/KafkaEventReporter$Builder/build(java.lang.String,java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/or(com.google.common.base.Optional)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///java/lang/String/toUpperCase()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///gobblin/metrics/KafkaReportingFormats/metricReporterBuilder(gobblin.metrics.MetricContext,java.util.Properties)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String,java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///gobblin/metrics/kafka/KafkaReporter$Builder/build(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/google/common/io/Closer/register(java.io.Closeable)|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///gobblin/metrics/KafkaReportingFormats/valueOf(java.lang.String)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///gobblin/metrics/KafkaReportingFormats/eventReporterBuilder(gobblin.metrics.MetricContext,java.util.Properties)|",
      "|java+method:///gobblin/metrics/kafka/KafkaEventReporter$Builder/build(java.lang.String,java.lang.String)|",
      "|java+method:///com/google/common/base/Optional/or(com.google.common.base.Optional)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|"
    ],
    "affectedLib": "com.linkedin.gobblin:gobblin-metrics:0.6.0",
    "change": "UPDATED"
  }
]