[
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "caller": "|java+method:///org/springframework/integration/gateway/GatewayProxyFactoryBean/invoke(org.aopalliance.intercept.MethodInvocation)|",
    "called": "|java+method:///reactor/function/Functions/supplier(java.util.concurrent.Callable)|",
    "v1Body": [
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///org/aopalliance/intercept/MethodInvocation/getMethod()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///reactor/core/composable/spec/PromiseSpec/env(reactor.core.Environment)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///reactor/function/Functions/supplier(java.util.concurrent.Callable)|",
      "|java+method:///java/lang/reflect/Method/getReturnType()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/springframework/integration/gateway/GatewayProxyFactoryBean$AsyncInvocationTask/GatewayProxyFactoryBean$AsyncInvocationTask(org.springframework.integration.gateway.GatewayProxyFactoryBean,org.aopalliance.intercept.MethodInvocation,org.springframework.integration.gateway.GatewayProxyFactoryBean$1)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///reactor/core/composable/spec/PromiseSpec/get()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///java/lang/Class/getSimpleName()|",
      "|java+method:///org/springframework/core/task/AsyncListenableTaskExecutor/submitListenable(java.util.concurrent.Callable)|",
      "|java+method:///org/springframework/core/task/AsyncTaskExecutor/submit(java.util.concurrent.Callable)|",
      "|java+method:///org/springframework/integration/gateway/GatewayProxyFactoryBean/doInvoke(org.aopalliance.intercept.MethodInvocation)|",
      "|java+method:///reactor/core/composable/spec/Promises/task(reactor.function.Supplier)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///reactor/rx/Promises/task(reactor.Environment,reactor.fn.Supplier)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///java/lang/reflect/Method/getReturnType()|",
      "|java+method:///org/springframework/integration/gateway/GatewayProxyFactoryBean/doInvoke(org.aopalliance.intercept.MethodInvocation,boolean)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/springframework/integration/gateway/GatewayProxyFactoryBean$AsyncInvocationTask/GatewayProxyFactoryBean$AsyncInvocationTask(org.springframework.integration.gateway.GatewayProxyFactoryBean,org.aopalliance.intercept.MethodInvocation,org.springframework.integration.gateway.GatewayProxyFactoryBean$1)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///reactor/fn/Functions/supplier(java.util.concurrent.Callable)|",
      "|java+method:///org/aopalliance/intercept/MethodInvocation/getMethod()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///java/lang/Class/getSimpleName()|",
      "|java+method:///org/springframework/core/task/AsyncListenableTaskExecutor/submitListenable(java.util.concurrent.Callable)|",
      "|java+method:///org/springframework/core/task/AsyncTaskExecutor/submit(java.util.concurrent.Callable)|"
    ],
    "affectedLib": "org.projectreactor:reactor-core:1.1.4.RELEASE",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "caller": "|java+method:///org/springframework/integration/codec/kryo/AbstractKryoCodec/decode(java.io.InputStream,java.lang.Class)|",
    "called": "|java+method:///com/esotericsoftware/kryo/io/Input/close()|",
    "v1Body": [
      "|java+method:///org/springframework/integration/codec/kryo/pool/KryoPool/run(org.springframework.integration.codec.kryo.pool.KryoCallback)|",
      "|java+constructor:///org/springframework/integration/codec/kryo/AbstractKryoCodec$3/AbstractKryoCodec$3(org.springframework.integration.codec.kryo.AbstractKryoCodec,com.esotericsoftware.kryo.io.Input,java.lang.Class)|",
      "|java+method:///com/esotericsoftware/kryo/io/Input/close()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+constructor:///com/esotericsoftware/kryo/io/Input/Input(java.io.InputStream)|"
    ],
    "v2Body": [
      "|java+method:///com/esotericsoftware/kryo/pool/KryoPool/run(com.esotericsoftware.kryo.pool.KryoCallback)|",
      "|java+constructor:///org/springframework/integration/codec/kryo/AbstractKryoCodec$3/AbstractKryoCodec$3(org.springframework.integration.codec.kryo.AbstractKryoCodec,com.esotericsoftware.kryo.io.Input,java.lang.Class)|",
      "|java+method:///com/esotericsoftware/kryo/io/Input/close()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+constructor:///com/esotericsoftware/kryo/io/Input/Input(java.io.InputStream)|"
    ],
    "affectedLib": "com.esotericsoftware.kryo:kryo:2.22",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "caller": "|java+method:///org/springframework/integration/codec/kryo/AbstractKryoCodec/encode(java.lang.Object,java.io.OutputStream)|",
    "called": "|java+method:///com/esotericsoftware/kryo/io/Output/close()|",
    "v1Body": [
      "|java+constructor:///org/springframework/integration/codec/kryo/AbstractKryoCodec$2/AbstractKryoCodec$2(org.springframework.integration.codec.kryo.AbstractKryoCodec,java.lang.Object,com.esotericsoftware.kryo.io.Output)|",
      "|java+method:///org/springframework/integration/codec/kryo/pool/KryoPool/run(org.springframework.integration.codec.kryo.pool.KryoCallback)|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+constructor:///com/esotericsoftware/kryo/io/Output/Output(java.io.OutputStream)|",
      "|java+method:///com/esotericsoftware/kryo/io/Output/close()|"
    ],
    "v2Body": [
      "|java+constructor:///org/springframework/integration/codec/kryo/AbstractKryoCodec$2/AbstractKryoCodec$2(org.springframework.integration.codec.kryo.AbstractKryoCodec,java.lang.Object,com.esotericsoftware.kryo.io.Output)|",
      "|java+method:///com/esotericsoftware/kryo/pool/KryoPool/run(com.esotericsoftware.kryo.pool.KryoCallback)|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+constructor:///com/esotericsoftware/kryo/io/Output/Output(java.io.OutputStream)|",
      "|java+method:///com/esotericsoftware/kryo/io/Output/close()|"
    ],
    "affectedLib": "com.esotericsoftware.kryo:kryo:2.22",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "caller": "|java+method:///org/springframework/integration/codec/kryo/PojoCodec/configureKryoInstance(com.esotericsoftware.kryo.Kryo)|",
    "called": "|java+method:///com/esotericsoftware/kryo/Kryo/setReferences(boolean)|",
    "v1Body": [
      "|java+method:///com/esotericsoftware/kryo/Kryo/setInstantiatorStrategy(com.esotericsoftware.shaded.org.objenesis.strategy.InstantiatorStrategy)|",
      "|java+method:///org/springframework/integration/codec/kryo/CompositeKryoRegistrar/registerTypes(com.esotericsoftware.kryo.Kryo)|",
      "|java+constructor:///com/esotericsoftware/shaded/org/objenesis/strategy/StdInstantiatorStrategy/StdInstantiatorStrategy()|",
      "|java+method:///com/esotericsoftware/kryo/Kryo/setReferences(boolean)|"
    ],
    "v2Body": [
      "|java+constructor:///org/objenesis/strategy/StdInstantiatorStrategy/StdInstantiatorStrategy()|",
      "|java+constructor:///com/esotericsoftware/kryo/Kryo$DefaultInstantiatorStrategy/Kryo$DefaultInstantiatorStrategy(org.objenesis.strategy.InstantiatorStrategy)|",
      "|java+method:///com/esotericsoftware/kryo/Kryo/setInstantiatorStrategy(org.objenesis.strategy.InstantiatorStrategy)|",
      "|java+method:///org/springframework/integration/codec/kryo/CompositeKryoRegistrar/registerTypes(com.esotericsoftware.kryo.Kryo)|",
      "|java+method:///com/esotericsoftware/kryo/Kryo/setReferences(boolean)|"
    ],
    "affectedLib": "com.esotericsoftware.kryo:kryo:2.22",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/codec/kryo/AbstractKryoCodec/decode(java.io.InputStream,java.lang.Class)|",
    "called": "|java+method:///com/esotericsoftware/kryo/io/Input/close()|",
    "v1Body": [
      "|java+method:///org/springframework/integration/codec/kryo/pool/KryoPool/run(org.springframework.integration.codec.kryo.pool.KryoCallback)|",
      "|java+constructor:///org/springframework/integration/codec/kryo/AbstractKryoCodec$3/AbstractKryoCodec$3(org.springframework.integration.codec.kryo.AbstractKryoCodec,com.esotericsoftware.kryo.io.Input,java.lang.Class)|",
      "|java+method:///com/esotericsoftware/kryo/io/Input/close()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+constructor:///com/esotericsoftware/kryo/io/Input/Input(java.io.InputStream)|"
    ],
    "v2Body": [
      "|java+method:///com/esotericsoftware/kryo/pool/KryoPool/run(com.esotericsoftware.kryo.pool.KryoCallback)|",
      "|java+constructor:///org/springframework/integration/codec/kryo/AbstractKryoCodec$3/AbstractKryoCodec$3(org.springframework.integration.codec.kryo.AbstractKryoCodec,com.esotericsoftware.kryo.io.Input,java.lang.Class)|",
      "|java+method:///com/esotericsoftware/kryo/io/Input/close()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+constructor:///com/esotericsoftware/kryo/io/Input/Input(java.io.InputStream)|"
    ],
    "affectedLib": "com.esotericsoftware:kryo-shaded:3.0.3",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+constructor:///org/springframework/integration/codec/kryo/AbstractKryoCodec/AbstractKryoCodec()|",
    "called": "|java+method:///com/esotericsoftware/kryo/pool/KryoPool$Builder/build()|",
    "v1Body": [
      "|java+constructor:///org/springframework/integration/codec/kryo/AbstractKryoCodec$1/AbstractKryoCodec$1(org.springframework.integration.codec.kryo.AbstractKryoCodec)|",
      "|java+method:///org/springframework/integration/codec/kryo/pool/KryoPool$Builder/build()|",
      "|java+constructor:///org/springframework/integration/codec/kryo/pool/KryoPool$Builder/KryoPool$Builder(org.springframework.integration.codec.kryo.pool.KryoFactory)|",
      "|java+method:///org/springframework/integration/codec/kryo/pool/KryoPool$Builder/softReferences()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+constructor:///com/esotericsoftware/kryo/pool/KryoPool$Builder/KryoPool$Builder(com.esotericsoftware.kryo.pool.KryoFactory)|",
      "|java+constructor:///org/springframework/integration/codec/kryo/AbstractKryoCodec$1/AbstractKryoCodec$1(org.springframework.integration.codec.kryo.AbstractKryoCodec)|",
      "|java+method:///com/esotericsoftware/kryo/pool/KryoPool$Builder/softReferences()|",
      "|java+method:///com/esotericsoftware/kryo/pool/KryoPool$Builder/build()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "com.esotericsoftware:kryo-shaded:3.0.3",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/codec/kryo/AbstractKryoCodec/encode(java.lang.Object,java.io.OutputStream)|",
    "called": "|java+method:///com/esotericsoftware/kryo/io/Output/close()|",
    "v1Body": [
      "|java+constructor:///org/springframework/integration/codec/kryo/AbstractKryoCodec$2/AbstractKryoCodec$2(org.springframework.integration.codec.kryo.AbstractKryoCodec,java.lang.Object,com.esotericsoftware.kryo.io.Output)|",
      "|java+method:///org/springframework/integration/codec/kryo/pool/KryoPool/run(org.springframework.integration.codec.kryo.pool.KryoCallback)|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+constructor:///com/esotericsoftware/kryo/io/Output/Output(java.io.OutputStream)|",
      "|java+method:///com/esotericsoftware/kryo/io/Output/close()|"
    ],
    "v2Body": [
      "|java+constructor:///org/springframework/integration/codec/kryo/AbstractKryoCodec$2/AbstractKryoCodec$2(org.springframework.integration.codec.kryo.AbstractKryoCodec,java.lang.Object,com.esotericsoftware.kryo.io.Output)|",
      "|java+method:///com/esotericsoftware/kryo/pool/KryoPool/run(com.esotericsoftware.kryo.pool.KryoCallback)|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+constructor:///com/esotericsoftware/kryo/io/Output/Output(java.io.OutputStream)|",
      "|java+method:///com/esotericsoftware/kryo/io/Output/close()|"
    ],
    "affectedLib": "com.esotericsoftware:kryo-shaded:3.0.3",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/codec/kryo/PojoCodec/configureKryoInstance(com.esotericsoftware.kryo.Kryo)|",
    "called": "|java+method:///com/esotericsoftware/kryo/Kryo/setReferences(boolean)|",
    "v1Body": [
      "|java+method:///com/esotericsoftware/kryo/Kryo/setInstantiatorStrategy(com.esotericsoftware.shaded.org.objenesis.strategy.InstantiatorStrategy)|",
      "|java+method:///org/springframework/integration/codec/kryo/CompositeKryoRegistrar/registerTypes(com.esotericsoftware.kryo.Kryo)|",
      "|java+constructor:///com/esotericsoftware/shaded/org/objenesis/strategy/StdInstantiatorStrategy/StdInstantiatorStrategy()|",
      "|java+method:///com/esotericsoftware/kryo/Kryo/setReferences(boolean)|"
    ],
    "v2Body": [
      "|java+constructor:///org/objenesis/strategy/StdInstantiatorStrategy/StdInstantiatorStrategy()|",
      "|java+constructor:///com/esotericsoftware/kryo/Kryo$DefaultInstantiatorStrategy/Kryo$DefaultInstantiatorStrategy(org.objenesis.strategy.InstantiatorStrategy)|",
      "|java+method:///com/esotericsoftware/kryo/Kryo/setInstantiatorStrategy(org.objenesis.strategy.InstantiatorStrategy)|",
      "|java+method:///org/springframework/integration/codec/kryo/CompositeKryoRegistrar/registerTypes(com.esotericsoftware.kryo.Kryo)|",
      "|java+method:///com/esotericsoftware/kryo/Kryo/setReferences(boolean)|"
    ],
    "affectedLib": "com.esotericsoftware:kryo-shaded:3.0.3",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/config/annotation/RouterAnnotationPostProcessor/createHandler(java.lang.Object,java.lang.reflect.Method,java.util.List)|",
    "called": "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/integration/router/AbstractMessageRouter/setDefaultOutputChannelName(java.lang.String)|",
      "|java+method:///org/springframework/core/convert/TypeDescriptor/valueOf(java.lang.Class)|",
      "|java+method:///org/springframework/integration/router/AbstractMessageRouter/setIgnoreSendFailures(boolean)|",
      "|java+method:///org/springframework/integration/router/MethodInvokingRouter/setResolutionRequired(boolean)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/core/annotation/AnnotatedElementUtils/isAnnotated(java.lang.reflect.AnnotatedElement,java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/springframework/integration/router/MethodInvokingRouter/MethodInvokingRouter(java.lang.Object)|",
      "|java+method:///org/springframework/integration/router/MethodInvokingRouter/setSuffix(java.lang.String)|",
      "|java+method:///org/springframework/integration/router/MethodInvokingRouter/setPrefix(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/util/ObjectUtils/isEmpty(java.lang.Object%5B%5D)|",
      "|java+method:///org/springframework/core/convert/ConversionService/convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)|",
      "|java+method:///org/springframework/integration/config/annotation/RouterAnnotationPostProcessor/resolveTargetBeanFromMethodWithBeanAnnotation(java.lang.reflect.Method)|",
      "|java+constructor:///org/springframework/integration/router/MethodInvokingRouter/MethodInvokingRouter(java.lang.Object,java.lang.reflect.Method)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/integration/router/MethodInvokingRouter/replaceChannelMappings(java.util.Properties)|",
      "|java+method:///org/springframework/integration/util/MessagingAnnotationUtils/resolveAttribute(java.util.List,java.lang.String,java.lang.Class)|",
      "|java+method:///org/springframework/beans/factory/config/ConfigurableListableBeanFactory/resolveEmbeddedValue(java.lang.String)|",
      "|java+method:///org/springframework/integration/config/annotation/RouterAnnotationPostProcessor/routerAttributesProvided(java.util.List)|",
      "|java+method:///org/springframework/integration/config/annotation/RouterAnnotationPostProcessor/extractTypeIfPossible(java.lang.Object,java.lang.Class)|",
      "|java+method:///org/springframework/util/Assert/isTrue(boolean,java.lang.String)|",
      "|java+method:///org/springframework/integration/router/AbstractMessageRouter/setApplySequence(boolean)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/integration/router/AbstractMessageRouter/setDefaultOutputChannelName(java.lang.String)|",
      "|java+method:///org/springframework/core/convert/TypeDescriptor/valueOf(java.lang.Class)|",
      "|java+method:///org/springframework/integration/router/MethodInvokingRouter/setResolutionRequired(boolean)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/integration/config/annotation/RouterAnnotationPostProcessor/routerAttributesProvided(java.util.List)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/springframework/integration/router/MethodInvokingRouter/MethodInvokingRouter(java.lang.Object)|",
      "|java+method:///org/springframework/integration/router/MethodInvokingRouter/setPrefix(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/integration/router/AbstractMessageRouter/setIgnoreSendFailures(boolean)|",
      "|java+method:///org/springframework/integration/config/annotation/RouterAnnotationPostProcessor/resolveTargetBeanName(java.lang.reflect.Method)|",
      "|java+method:///org/springframework/util/ObjectUtils/isEmpty(java.lang.Object%5B%5D)|",
      "|java+method:///org/springframework/core/convert/ConversionService/convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)|",
      "|java+method:///org/springframework/integration/config/annotation/RouterAnnotationPostProcessor/resolveTargetBeanFromMethodWithBeanAnnotation(java.lang.reflect.Method)|",
      "|java+constructor:///org/springframework/integration/router/MethodInvokingRouter/MethodInvokingRouter(java.lang.Object,java.lang.reflect.Method)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/integration/router/MethodInvokingRouter/replaceChannelMappings(java.util.Properties)|",
      "|java+method:///org/springframework/integration/util/MessagingAnnotationUtils/resolveAttribute(java.util.List,java.lang.String,java.lang.Class)|",
      "|java+method:///org/springframework/integration/config/annotation/RouterAnnotationPostProcessor/extractTypeIfPossible(java.lang.Object,java.lang.Class)|",
      "|java+method:///org/springframework/util/Assert/isTrue(boolean,java.lang.String)|",
      "|java+method:///org/springframework/core/annotation/AnnotatedElementUtils/isAnnotated(java.lang.reflect.AnnotatedElement,java.lang.String)|",
      "|java+method:///org/springframework/integration/config/annotation/RouterAnnotationPostProcessor/checkMessageHandlerAttributes(java.lang.String,java.util.List)|",
      "|java+method:///org/springframework/integration/router/AbstractMessageRouter/setApplySequence(boolean)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/springframework/core/env/Environment/resolvePlaceholders(java.lang.String)|",
      "|java+method:///org/springframework/integration/router/MethodInvokingRouter/setSuffix(java.lang.String)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/aggregator/AbstractCorrelatingMessageHandler/onInit()|",
    "called": "|java+method:///org/springframework/util/Assert/isInstanceOf(java.lang.Class,java.lang.Object,java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/Class/getSimpleName()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/integration/handler/AbstractMessageProducingHandler/onInit()|",
      "|java+method:///org/springframework/integration/aggregator/SequenceSizeReleaseStrategy/setReleasePartialSequences(boolean)|",
      "|java+method:///org/springframework/util/Assert/isInstanceOf(java.lang.Class,java.lang.Object,java.lang.String)|",
      "|java+constructor:///org/springframework/integration/channel/NullChannel/NullChannel()|",
      "|java+method:///org/springframework/beans/factory/BeanFactoryAware/setBeanFactory(org.springframework.beans.factory.BeanFactory)|",
      "|java+method:///org/springframework/integration/aggregator/AbstractCorrelatingMessageHandler/getBeanFactory()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/springframework/integration/aggregator/AbstractCorrelatingMessageHandler/createGroupTimeoutProcessor()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Class/getSimpleName()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/integration/handler/AbstractMessageProducingHandler/onInit()|",
      "|java+method:///org/springframework/integration/aggregator/SequenceSizeReleaseStrategy/setReleasePartialSequences(boolean)|",
      "|java+method:///org/springframework/integration/expression/ExpressionUtils/createStandardEvaluationContext(org.springframework.beans.factory.BeanFactory)|",
      "|java+method:///org/springframework/util/Assert/isInstanceOf(java.lang.Class,java.lang.Object,java.lang.String)|",
      "|java+constructor:///org/springframework/integration/channel/NullChannel/NullChannel()|",
      "|java+method:///org/springframework/beans/factory/BeanFactoryAware/setBeanFactory(org.springframework.beans.factory.BeanFactory)|",
      "|java+method:///org/springframework/integration/aggregator/AbstractCorrelatingMessageHandler/getBeanFactory()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/springframework/integration/aggregator/AbstractCorrelatingMessageHandler/createGroupTimeoutProcessor()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/config/xml/AbstractChannelAdapterParser/parseInternal(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)|",
    "called": "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/integration/config/xml/AbstractChannelAdapterParser/doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,java.lang.String)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|",
      "|java+method:///org/springframework/beans/MutablePropertyValues/add(java.lang.String,java.lang.Object)|",
      "|java+constructor:///org/springframework/beans/factory/config/TypedStringValue/TypedStringValue(java.lang.String)|",
      "|java+method:///org/springframework/integration/config/xml/AbstractChannelAdapterParser/createDirectChannel(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)|",
      "|java+method:///org/springframework/beans/factory/support/AbstractBeanDefinition/getPropertyValues()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/getReaderContext()|",
      "|java+method:///org/springframework/integration/config/xml/AbstractChannelAdapterParser/doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,java.lang.String)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/putLifecycleInRole(java.lang.String,java.lang.String,org.springframework.beans.factory.xml.ParserContext)|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/xml/XmlReaderContext/error(java.lang.String,java.lang.Object)|",
      "|java+method:///org/springframework/beans/MutablePropertyValues/add(java.lang.String,java.lang.Object)|",
      "|java+constructor:///org/springframework/beans/factory/config/TypedStringValue/TypedStringValue(java.lang.String)|",
      "|java+method:///org/springframework/integration/config/xml/AbstractChannelAdapterParser/createDirectChannel(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)|",
      "|java+method:///org/springframework/beans/factory/support/AbstractBeanDefinition/getPropertyValues()|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/config/xml/AbstractConsumerEndpointParser/parseInternal(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)|",
    "called": "|java+method:///org/springframework/util/xml/DomUtils/getChildElementsByTagName(org.w3c.dom.Element,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/getReaderContext()|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyValue(java.lang.String,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder/getValue()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/createElementDescription(org.w3c.dom.Element)|",
      "|java+method:///org/w3c/dom/Element/hasAttribute(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/isNested()|",
      "|java+method:///org/springframework/beans/factory/xml/XmlReaderContext/error(java.lang.String,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionRegistry/getBeanDefinition(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/config/ConstructorArgumentValues/getArgumentValue(int,java.lang.Class)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/getRawBeanDefinition()|",
      "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/setValueIfAttributeDefined(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionReaderUtils/generateBeanName(org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.support.BeanDefinitionRegistry)|",
      "|java+method:///org/springframework/integration/config/xml/AbstractConsumerEndpointParser/resolveId(org.w3c.dom.Element,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.factory.xml.ParserContext)|",
      "|java+constructor:///org/springframework/beans/factory/parsing/BeanComponentDefinition/BeanComponentDefinition(org.springframework.beans.factory.config.BeanDefinition,java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/getBeanDefinition()|",
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElementByTagName(org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/configurePollerMetadata(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,org.springframework.beans.factory.xml.ParserContext)|",
      "|java+method:///org/springframework/beans/factory/config/ConstructorArgumentValues/addIndexedArgumentValue(int,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/registerBeanComponent(org.springframework.beans.factory.parsing.BeanComponentDefinition)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionRegistry/containsBeanDefinition(java.lang.String)|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/integration/config/xml/AbstractConsumerEndpointParser/getInputChannelAttributeName()|",
      "|java+method:///org/springframework/beans/factory/config/BeanDefinition/getConstructorArgumentValues()|",
      "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/configureAndSetAdviceChainIfPresent(org.w3c.dom.Element,org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.xml.ParserContext)|",
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElementsByTagName(org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+constructor:///org/springframework/beans/factory/support/ManagedSet/ManagedSet()|",
      "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/generateAlias(org.w3c.dom.Element)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyReference(java.lang.String,java.lang.String)|",
      "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/setReferenceIfAttributeDefined(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/genericBeanDefinition(java.lang.Class)|",
      "|java+method:///org/springframework/integration/config/xml/AbstractConsumerEndpointParser/parseHandler(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)|",
      "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/checkAndConfigureFixedSubscriberChannel(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,java.lang.String,java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/getRegistry()|",
      "|java+constructor:///org/springframework/beans/factory/parsing/BeanComponentDefinition/BeanComponentDefinition(org.springframework.beans.factory.config.BeanDefinition,java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/getReaderContext()|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyValue(java.lang.String,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder/getValue()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/w3c/dom/Element/hasAttribute(java.lang.String)|",
      "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/putLifecycleInRole(java.lang.String,java.lang.String,org.springframework.beans.factory.xml.ParserContext)|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/isNested()|",
      "|java+method:///org/springframework/beans/factory/xml/XmlReaderContext/error(java.lang.String,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionRegistry/getBeanDefinition(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/config/ConstructorArgumentValues/getArgumentValue(int,java.lang.Class)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/getRawBeanDefinition()|",
      "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/setValueIfAttributeDefined(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionReaderUtils/generateBeanName(org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.support.BeanDefinitionRegistry)|",
      "|java+method:///org/springframework/integration/config/xml/AbstractConsumerEndpointParser/resolveId(org.w3c.dom.Element,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.factory.xml.ParserContext)|",
      "|java+constructor:///org/springframework/beans/factory/parsing/BeanComponentDefinition/BeanComponentDefinition(org.springframework.beans.factory.config.BeanDefinition,java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/getBeanDefinition()|",
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElementByTagName(org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/configurePollerMetadata(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,org.springframework.beans.factory.xml.ParserContext)|",
      "|java+method:///org/springframework/beans/factory/config/ConstructorArgumentValues/addIndexedArgumentValue(int,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/registerBeanComponent(org.springframework.beans.factory.parsing.BeanComponentDefinition)|",
      "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/createElementDescription(org.w3c.dom.Element)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionRegistry/containsBeanDefinition(java.lang.String)|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/integration/config/xml/AbstractConsumerEndpointParser/getInputChannelAttributeName()|",
      "|java+method:///org/springframework/beans/factory/config/BeanDefinition/getConstructorArgumentValues()|",
      "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/configureAndSetAdviceChainIfPresent(org.w3c.dom.Element,org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.xml.ParserContext)|",
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElementsByTagName(org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+constructor:///org/springframework/beans/factory/support/ManagedSet/ManagedSet()|",
      "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/generateAlias(org.w3c.dom.Element)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyReference(java.lang.String,java.lang.String)|",
      "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/setReferenceIfAttributeDefined(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/genericBeanDefinition(java.lang.Class)|",
      "|java+method:///org/springframework/integration/config/xml/AbstractConsumerEndpointParser/parseHandler(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)|",
      "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/checkAndConfigureFixedSubscriberChannel(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,java.lang.String,java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/getRegistry()|",
      "|java+constructor:///org/springframework/beans/factory/parsing/BeanComponentDefinition/BeanComponentDefinition(org.springframework.beans.factory.config.BeanDefinition,java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper$1/doWith(java.lang.reflect.Method)|",
    "called": "|java+method:///org/springframework/util/ObjectUtils/containsElement(java.lang.Object%5B%5D,java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper$IneligibleMethodException/getMessage()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+constructor:///org/springframework/integration/util/MessagingMethodInvokerHelper$HandlerMethod/MessagingMethodInvokerHelper$HandlerMethod(java.lang.reflect.Method,boolean)|",
      "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper$HandlerMethod/access$400(org.springframework.integration.util.MessagingMethodInvokerHelper$HandlerMethod)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///java/lang/reflect/Method/getName()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/reflect/Method/isBridge()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper/access$100(java.lang.reflect.Method)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper/access$300(org.springframework.integration.util.MessagingMethodInvokerHelper)|",
      "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper/access$200(org.springframework.integration.util.MessagingMethodInvokerHelper)|",
      "|java+method:///java/util/concurrent/atomic/AtomicReference/compareAndSet(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/reflect/Method/getModifiers()|",
      "|java+method:///org/springframework/core/annotation/AnnotationUtils/findAnnotation(java.lang.reflect.Method,java.lang.Class)|",
      "|java+method:///java/lang/reflect/Method/getReturnType()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper$HandlerMethod/getTargetParameterType()|",
      "|java+method:///java/lang/reflect/Modifier/isPublic(int)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/lang/reflect/Method/getDeclaringClass()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper$IneligibleMethodException/getMessage()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+constructor:///org/springframework/integration/util/MessagingMethodInvokerHelper$HandlerMethod/MessagingMethodInvokerHelper$HandlerMethod(java.lang.reflect.Method,boolean)|",
      "|java+method:///org/springframework/util/ObjectUtils/containsElement(java.lang.Object%5B%5D,java.lang.Object)|",
      "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper$HandlerMethod/access$400(org.springframework.integration.util.MessagingMethodInvokerHelper$HandlerMethod)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///java/lang/reflect/Method/getName()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/reflect/Method/isBridge()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper/access$100(java.lang.reflect.Method)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper/access$300(org.springframework.integration.util.MessagingMethodInvokerHelper)|",
      "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper/access$200(org.springframework.integration.util.MessagingMethodInvokerHelper)|",
      "|java+method:///java/util/concurrent/atomic/AtomicReference/compareAndSet(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/reflect/Method/getModifiers()|",
      "|java+method:///org/springframework/core/annotation/AnnotationUtils/findAnnotation(java.lang.reflect.Method,java.lang.Class)|",
      "|java+method:///java/lang/reflect/Method/getReturnType()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper$HandlerMethod/getTargetParameterType()|",
      "|java+method:///java/lang/reflect/Modifier/isPublic(int)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/lang/reflect/Method/getDeclaringClass()|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/history/MessageHistoryConfigurer/start()|",
    "called": "|java+method:///org/springframework/util/PatternMatchUtils/simpleMatch(java.lang.String%5B%5D,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/integration/history/MessageHistoryConfigurer/getTrackableComponents(org.springframework.beans.factory.ListableBeanFactory)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/isInfoEnabled()|",
      "|java+method:///org/apache/commons/logging/Log/info(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/util/PatternMatchUtils/simpleMatch(java.lang.String%5B%5D,java.lang.String)|",
      "|java+method:///org/springframework/integration/history/TrackableComponent/getComponentName()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/integration/history/TrackableComponent/setShouldTrack(boolean)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/integration/history/MessageHistoryConfigurer/getTrackableComponents(org.springframework.beans.factory.ListableBeanFactory)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/isInfoEnabled()|",
      "|java+method:///org/apache/commons/logging/Log/info(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/util/PatternMatchUtils/simpleMatch(java.lang.String%5B%5D,java.lang.String)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/springframework/integration/support/management/TrackableComponent/getComponentName()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/integration/support/management/TrackableComponent/setShouldTrack(boolean)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+initializer:///org/springframework/integration/gateway/GatewayProxyFactoryBean/GatewayProxyFactoryBean$initializer|",
    "called": "|java+method:///org/springframework/util/ClassUtils/isPresent(java.lang.String,java.lang.ClassLoader)|",
    "v1Body": [
      "|java+constructor:///org/springframework/expression/spel/standard/SpelExpressionParser/SpelExpressionParser()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/util/ClassUtils/isPresent(java.lang.String,java.lang.ClassLoader)|",
      "|java+method:///java/lang/Class/getClassLoader()|",
      "|java+constructor:///org/springframework/expression/spel/standard/SpelExpressionParser/SpelExpressionParser()|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/transformer/support/RoutingSlipHeaderValueMessageProcessor/setBeanFactory(org.springframework.beans.factory.BeanFactory)|",
    "called": "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/integration/context/IntegrationContextUtils/getEvaluationContext(org.springframework.beans.factory.BeanFactory)|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/config/annotation/FilterAnnotationPostProcessor/createHandler(java.lang.Object,java.lang.reflect.Method,java.util.List)|",
    "called": "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/springframework/integration/filter/MethodInvokingSelector/MethodInvokingSelector(java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/config/ConfigurableListableBeanFactory/resolveEmbeddedValue(java.lang.String)|",
      "|java+method:///org/springframework/util/Assert/isTrue(boolean,java.lang.String)|",
      "|java+method:///org/springframework/core/annotation/AnnotatedElementUtils/isAnnotated(java.lang.reflect.AnnotatedElement,java.lang.String)|",
      "|java+method:///org/springframework/integration/config/annotation/FilterAnnotationPostProcessor/setOutputChannelIfPresent(java.util.List,org.springframework.integration.handler.AbstractReplyProducingMessageHandler)|",
      "|java+method:///org/springframework/integration/config/annotation/FilterAnnotationPostProcessor/extractTypeIfPossible(java.lang.Object,java.lang.Class)|",
      "|java+method:///org/springframework/integration/filter/MessageFilter/setDiscardWithinAdvice(boolean)|",
      "|java+method:///org/springframework/integration/filter/MessageFilter/setThrowExceptionOnRejection(boolean)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/springframework/integration/filter/MessageFilter/setDiscardChannelName(java.lang.String)|",
      "|java+constructor:///org/springframework/integration/filter/MessageFilter/MessageFilter(org.springframework.integration.core.MessageSelector)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/integration/util/MessagingAnnotationUtils/resolveAttribute(java.util.List,java.lang.String,java.lang.Class)|",
      "|java+method:///java/lang/reflect/Method/getReturnType()|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///org/springframework/integration/config/annotation/FilterAnnotationPostProcessor/resolveTargetBeanFromMethodWithBeanAnnotation(java.lang.reflect.Method)|",
      "|java+constructor:///org/springframework/integration/filter/MethodInvokingSelector/MethodInvokingSelector(java.lang.Object,java.lang.reflect.Method)|"
    ],
    "v2Body": [
      "|java+constructor:///org/springframework/integration/filter/MethodInvokingSelector/MethodInvokingSelector(java.lang.Object)|",
      "|java+method:///org/springframework/util/Assert/isTrue(boolean,java.lang.String)|",
      "|java+method:///org/springframework/core/annotation/AnnotatedElementUtils/isAnnotated(java.lang.reflect.AnnotatedElement,java.lang.String)|",
      "|java+method:///org/springframework/integration/config/annotation/FilterAnnotationPostProcessor/resolveTargetBeanName(java.lang.reflect.Method)|",
      "|java+method:///org/springframework/integration/config/annotation/FilterAnnotationPostProcessor/checkMessageHandlerAttributes(java.lang.String,java.util.List)|",
      "|java+method:///org/springframework/integration/config/annotation/FilterAnnotationPostProcessor/extractTypeIfPossible(java.lang.Object,java.lang.Class)|",
      "|java+method:///org/springframework/integration/filter/MessageFilter/setDiscardWithinAdvice(boolean)|",
      "|java+method:///org/springframework/integration/filter/MessageFilter/setThrowExceptionOnRejection(boolean)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/springframework/integration/filter/MessageFilter/setDiscardChannelName(java.lang.String)|",
      "|java+constructor:///org/springframework/integration/filter/MessageFilter/MessageFilter(org.springframework.integration.core.MessageSelector)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/integration/util/MessagingAnnotationUtils/resolveAttribute(java.util.List,java.lang.String,java.lang.Class)|",
      "|java+method:///java/lang/reflect/Method/getReturnType()|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///org/springframework/integration/config/annotation/FilterAnnotationPostProcessor/resolveTargetBeanFromMethodWithBeanAnnotation(java.lang.reflect.Method)|",
      "|java+constructor:///org/springframework/integration/filter/MethodInvokingSelector/MethodInvokingSelector(java.lang.Object,java.lang.reflect.Method)|",
      "|java+method:///org/springframework/core/env/Environment/resolvePlaceholders(java.lang.String)|",
      "|java+method:///org/springframework/integration/config/annotation/FilterAnnotationPostProcessor/setOutputChannelIfPresent(java.util.List,org.springframework.integration.handler.AbstractReplyProducingMessageHandler)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/config/xml/AggregatorParser/parseHandler(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)|",
    "called": "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/parseInnerHandlerDefinition(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/getBeanDefinition()|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/addConstructorArgValue(java.lang.Object)|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/support/AbstractBeanDefinition/getConstructorArgumentValues()|",
      "|java+constructor:///org/springframework/beans/factory/config/RuntimeBeanReference/RuntimeBeanReference(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/config/ConstructorArgumentValues/addGenericArgumentValue(java.lang.Object,java.lang.String)|",
      "|java+method:///org/springframework/integration/config/xml/AggregatorParser/doParse(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,org.springframework.beans.BeanMetadataElement,org.springframework.beans.factory.xml.ParserContext)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/genericBeanDefinition(java.lang.Class)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/getRawBeanDefinition()|",
      "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/setValueIfAttributeDefined(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/setValueIfAttributeDefined(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/parseInnerHandlerDefinition(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/getBeanDefinition()|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/addConstructorArgValue(java.lang.Object)|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|",
      "|java+constructor:///org/springframework/beans/factory/config/RuntimeBeanReference/RuntimeBeanReference(java.lang.String)|",
      "|java+method:///org/springframework/integration/config/xml/AggregatorParser/doParse(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,org.springframework.beans.BeanMetadataElement,org.springframework.beans.factory.xml.ParserContext)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/genericBeanDefinition(java.lang.Class)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper/findHandlerMethodsForTarget(java.lang.Object,java.lang.Class,java.lang.String,boolean)|",
    "called": "|java+method:///org/springframework/util/ClassUtils/getAllInterfacesForClass(java.lang.Class)|",
    "v1Body": [
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+constructor:///org/springframework/integration/util/MessagingMethodInvokerHelper$HandlerMethod/MessagingMethodInvokerHelper$HandlerMethod(java.lang.reflect.Method,boolean)|",
      "|java+method:///org/springframework/util/ReflectionUtils/doWithMethods(java.lang.Class,org.springframework.util.ReflectionUtils$MethodCallback,org.springframework.util.ReflectionUtils$MethodFilter)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Map/values()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Collections/singletonMap(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper/getTargetClass(java.lang.Object)|",
      "|java+method:///org/springframework/util/ClassUtils/getAllInterfacesForClass(java.lang.Class)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicReference/AtomicReference()|",
      "|java+constructor:///org/springframework/integration/util/UniqueMethodFilter/UniqueMethodFilter(java.lang.Class)|",
      "|java+method:///java/lang/Class/getMethod(java.lang.String,java.lang.Class%5B%5D)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/concurrent/atomic/AtomicReference/get()|",
      "|java+constructor:///org/springframework/integration/util/MessagingMethodInvokerHelper$1/MessagingMethodInvokerHelper$1(org.springframework.integration.util.MessagingMethodInvokerHelper,boolean,java.lang.String,java.lang.Class,java.util.Map,java.util.Map,java.util.Map,java.util.concurrent.atomic.AtomicReference,java.util.Map,java.util.concurrent.atomic.AtomicReference)|",
      "|java+method:///org/springframework/util/Assert/isNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Exception/getMessage()|",
      "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+constructor:///org/springframework/integration/util/MessagingMethodInvokerHelper$HandlerMethod/MessagingMethodInvokerHelper$HandlerMethod(java.lang.reflect.Method,boolean)|",
      "|java+method:///org/springframework/util/ReflectionUtils/doWithMethods(java.lang.Class,org.springframework.util.ReflectionUtils$MethodCallback,org.springframework.util.ReflectionUtils$MethodFilter)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Map/values()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper/findSingleSpecifMethodOnInterfacesIfProxy(java.lang.Object,java.lang.String,java.util.Map,java.util.Map)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Collections/singletonMap(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper/getTargetClass(java.lang.Object)|",
      "|java+method:///org/springframework/util/ClassUtils/getAllInterfacesForClass(java.lang.Class)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicReference/AtomicReference()|",
      "|java+constructor:///org/springframework/integration/util/UniqueMethodFilter/UniqueMethodFilter(java.lang.Class)|",
      "|java+method:///java/lang/Class/getMethod(java.lang.String,java.lang.Class%5B%5D)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/concurrent/atomic/AtomicReference/get()|",
      "|java+constructor:///org/springframework/integration/util/MessagingMethodInvokerHelper$1/MessagingMethodInvokerHelper$1(org.springframework.integration.util.MessagingMethodInvokerHelper,boolean,java.lang.String,java.lang.Class,java.util.Map,java.util.Map,java.util.Map,java.util.concurrent.atomic.AtomicReference,java.util.Map,java.util.concurrent.atomic.AtomicReference)|",
      "|java+method:///org/springframework/util/Assert/isNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Exception/getMessage()|",
      "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/config/xml/AbstractCorrelatingMessageHandlerParser/doParse(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,org.springframework.beans.BeanMetadataElement,org.springframework.beans.factory.xml.ParserContext)|",
    "called": "|java+method:///org/springframework/util/xml/DomUtils/getChildElementByTagName(org.w3c.dom.Element,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/createExpressionDefinitionFromValueOrExpression(java.lang.String,java.lang.String,org.springframework.beans.factory.xml.ParserContext,org.w3c.dom.Element,boolean)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyValue(java.lang.String,java.lang.Object)|",
      "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/setValueIfAttributeDefined(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String,java.lang.String)|",
      "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/setReferenceIfAttributeDefined(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/setReferenceIfAttributeDefined(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String,java.lang.String)|",
      "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/configureAndSetAdviceChainIfPresent(org.w3c.dom.Element,org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.xml.ParserContext,java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/getRawBeanDefinition()|",
      "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/setValueIfAttributeDefined(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///org/springframework/integration/config/xml/AbstractCorrelatingMessageHandlerParser/injectPropertyWithAdapter(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,org.springframework.beans.BeanMetadataElement,org.springframework.beans.factory.xml.ParserContext)|",
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElementByTagName(org.w3c.dom.Element,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElementByTagName(org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/createExpressionDefinitionFromValueOrExpression(java.lang.String,java.lang.String,org.springframework.beans.factory.xml.ParserContext,org.w3c.dom.Element,boolean)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyValue(java.lang.String,java.lang.Object)|",
      "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/injectPropertyWithAdapter(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,org.springframework.beans.BeanMetadataElement,org.springframework.beans.factory.xml.ParserContext)|",
      "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/setValueIfAttributeDefined(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String,java.lang.String)|",
      "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/setReferenceIfAttributeDefined(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/setReferenceIfAttributeDefined(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String,java.lang.String)|",
      "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/configureAndSetAdviceChainIfPresent(org.w3c.dom.Element,org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.xml.ParserContext,java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/getRawBeanDefinition()|",
      "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/setValueIfAttributeDefined(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/config/annotation/ServiceActivatorAnnotationPostProcessor/createHandler(java.lang.Object,java.lang.reflect.Method,java.util.List)|",
    "called": "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/integration/config/annotation/ServiceActivatorAnnotationPostProcessor/setOutputChannelIfPresent(java.util.List,org.springframework.integration.handler.AbstractReplyProducingMessageHandler)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/config/ConfigurableListableBeanFactory/resolveEmbeddedValue(java.lang.String)|",
      "|java+constructor:///org/springframework/integration/handler/ServiceActivatingHandler/ServiceActivatingHandler(java.lang.Object,java.lang.reflect.Method)|",
      "|java+method:///org/springframework/core/annotation/AnnotatedElementUtils/isAnnotated(java.lang.reflect.AnnotatedElement,java.lang.String)|",
      "|java+method:///org/springframework/integration/config/annotation/ServiceActivatorAnnotationPostProcessor/resolveTargetBeanFromMethodWithBeanAnnotation(java.lang.reflect.Method)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+constructor:///org/springframework/integration/config/annotation/ServiceActivatorAnnotationPostProcessor$ReplyProducingMessageHandlerWrapper/ServiceActivatorAnnotationPostProcessor$ReplyProducingMessageHandlerWrapper(org.springframework.integration.config.annotation.ServiceActivatorAnnotationPostProcessor,org.springframework.messaging.MessageHandler,org.springframework.integration.config.annotation.ServiceActivatorAnnotationPostProcessor$1)|",
      "|java+constructor:///org/springframework/integration/handler/ServiceActivatingHandler/ServiceActivatingHandler(java.lang.Object)|",
      "|java+method:///org/springframework/integration/config/annotation/ServiceActivatorAnnotationPostProcessor/extractTypeIfPossible(java.lang.Object,java.lang.Class)|",
      "|java+method:///org/springframework/integration/handler/AbstractReplyProducingMessageHandler/setRequiresReply(boolean)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/integration/util/MessagingAnnotationUtils/resolveAttribute(java.util.List,java.lang.String,java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/integration/config/annotation/ServiceActivatorAnnotationPostProcessor/setOutputChannelIfPresent(java.util.List,org.springframework.integration.handler.AbstractReplyProducingMessageHandler)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///org/springframework/integration/config/annotation/ServiceActivatorAnnotationPostProcessor/checkMessageHandlerAttributes(java.lang.String,java.util.List)|",
      "|java+method:///org/springframework/integration/config/annotation/ServiceActivatorAnnotationPostProcessor/resolveTargetBeanName(java.lang.reflect.Method)|",
      "|java+constructor:///org/springframework/integration/handler/ServiceActivatingHandler/ServiceActivatingHandler(java.lang.Object,java.lang.reflect.Method)|",
      "|java+method:///org/springframework/core/annotation/AnnotatedElementUtils/isAnnotated(java.lang.reflect.AnnotatedElement,java.lang.String)|",
      "|java+method:///org/springframework/integration/config/annotation/ServiceActivatorAnnotationPostProcessor/resolveTargetBeanFromMethodWithBeanAnnotation(java.lang.reflect.Method)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+constructor:///org/springframework/integration/config/annotation/ServiceActivatorAnnotationPostProcessor$ReplyProducingMessageHandlerWrapper/ServiceActivatorAnnotationPostProcessor$ReplyProducingMessageHandlerWrapper(org.springframework.integration.config.annotation.ServiceActivatorAnnotationPostProcessor,org.springframework.messaging.MessageHandler,org.springframework.integration.config.annotation.ServiceActivatorAnnotationPostProcessor$1)|",
      "|java+constructor:///org/springframework/integration/handler/ServiceActivatingHandler/ServiceActivatingHandler(java.lang.Object)|",
      "|java+method:///org/springframework/integration/config/annotation/ServiceActivatorAnnotationPostProcessor/extractTypeIfPossible(java.lang.Object,java.lang.Class)|",
      "|java+method:///org/springframework/integration/handler/AbstractReplyProducingMessageHandler/setRequiresReply(boolean)|",
      "|java+method:///org/springframework/core/env/Environment/resolvePlaceholders(java.lang.String)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/integration/util/MessagingAnnotationUtils/resolveAttribute(java.util.List,java.lang.String,java.lang.Class)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/store/SimpleMessageStore/pollMessageFromGroup(java.lang.Object)|",
    "called": "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)|",
    "v1Body": [
      "|java+method:///org/springframework/integration/store/SimpleMessageStore/removeMessageFromGroup(java.lang.Object,org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/integration/store/SimpleMessageStore/getMessageGroup(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/springframework/integration/store/MessageGroup/getMessages()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/integration/store/SimpleMessageStore/getMessageGroup(java.lang.Object)|",
      "|java+method:///org/springframework/integration/store/SimpleMessageStore/removeMessagesFromGroup(java.lang.Object,org.springframework.messaging.Message%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/springframework/integration/store/MessageGroup/getMessages()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/config/annotation/AggregatorAnnotationPostProcessor/createHandler(java.lang.Object,java.lang.reflect.Method,java.util.List)|",
    "called": "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/springframework/integration/store/SimpleMessageStore/SimpleMessageStore()|",
      "|java+method:///org/springframework/integration/aggregator/MethodInvokingMessageGroupProcessor/setBeanFactory(org.springframework.beans.factory.BeanFactory)|",
      "|java+constructor:///org/springframework/integration/aggregator/AggregatingMessageHandler/AggregatingMessageHandler(org.springframework.integration.aggregator.MessageGroupProcessor,org.springframework.integration.store.MessageGroupStore,org.springframework.integration.aggregator.CorrelationStrategy,org.springframework.integration.aggregator.ReleaseStrategy)|",
      "|java+constructor:///org/springframework/integration/aggregator/MethodInvokingCorrelationStrategy/MethodInvokingCorrelationStrategy(java.lang.Object,java.lang.reflect.Method)|",
      "|java+method:///org/springframework/integration/aggregator/AggregatingMessageHandler/setSendPartialResultOnExpiry(boolean)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/springframework/integration/aggregator/AggregatingMessageHandler/setOutputChannelName(java.lang.String)|",
      "|java+method:///org/springframework/integration/aggregator/AggregatingMessageHandler/setDiscardChannelName(java.lang.String)|",
      "|java+method:///org/springframework/integration/aggregator/AggregatingMessageHandler/setBeanFactory(org.springframework.beans.factory.BeanFactory)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/integration/util/MessagingAnnotationUtils/resolveAttribute(java.util.List,java.lang.String,java.lang.Class)|",
      "|java+method:///org/springframework/integration/aggregator/AggregatingMessageHandler/setSendTimeout(long)|",
      "|java+method:///org/springframework/integration/util/MessagingAnnotationUtils/findAnnotatedMethod(java.lang.Object,java.lang.Class)|",
      "|java+constructor:///org/springframework/integration/aggregator/MethodInvokingMessageGroupProcessor/MethodInvokingMessageGroupProcessor(java.lang.Object,java.lang.reflect.Method)|",
      "|java+constructor:///org/springframework/integration/aggregator/MethodInvokingReleaseStrategy/MethodInvokingReleaseStrategy(java.lang.Object,java.lang.reflect.Method)|"
    ],
    "v2Body": [
      "|java+constructor:///org/springframework/integration/store/SimpleMessageStore/SimpleMessageStore()|",
      "|java+method:///org/springframework/integration/aggregator/MethodInvokingMessageGroupProcessor/setBeanFactory(org.springframework.beans.factory.BeanFactory)|",
      "|java+constructor:///org/springframework/integration/aggregator/AggregatingMessageHandler/AggregatingMessageHandler(org.springframework.integration.aggregator.MessageGroupProcessor,org.springframework.integration.store.MessageGroupStore,org.springframework.integration.aggregator.CorrelationStrategy,org.springframework.integration.aggregator.ReleaseStrategy)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+constructor:///org/springframework/integration/aggregator/MethodInvokingCorrelationStrategy/MethodInvokingCorrelationStrategy(java.lang.Object,java.lang.reflect.Method)|",
      "|java+method:///org/springframework/integration/aggregator/AggregatingMessageHandler/setSendPartialResultOnExpiry(boolean)|",
      "|java+method:///org/springframework/integration/aggregator/AggregatingMessageHandler/setOutputChannelName(java.lang.String)|",
      "|java+method:///org/springframework/integration/aggregator/AggregatingMessageHandler/setDiscardChannelName(java.lang.String)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/integration/util/MessagingAnnotationUtils/findAnnotatedMethod(java.lang.Object,java.lang.Class)|",
      "|java+method:///org/springframework/integration/util/MessagingAnnotationUtils/resolveAttribute(java.util.List,java.lang.String,java.lang.Class)|",
      "|java+method:///org/springframework/core/env/Environment/resolvePlaceholders(java.lang.String)|",
      "|java+method:///org/springframework/integration/aggregator/AggregatingMessageHandler/setBeanFactory(org.springframework.beans.factory.BeanFactory)|",
      "|java+constructor:///org/springframework/integration/aggregator/MethodInvokingMessageGroupProcessor/MethodInvokingMessageGroupProcessor(java.lang.Object,java.lang.reflect.Method)|",
      "|java+constructor:///org/springframework/integration/aggregator/MethodInvokingReleaseStrategy/MethodInvokingReleaseStrategy(java.lang.Object,java.lang.reflect.Method)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+constructor:///org/springframework/integration/endpoint/PollingConsumer/PollingConsumer(org.springframework.messaging.PollableChannel,org.springframework.messaging.MessageHandler)|",
    "called": "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/springframework/integration/endpoint/AbstractPollingEndpoint/AbstractPollingEndpoint()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///org/springframework/integration/endpoint/AbstractPollingEndpoint/AbstractPollingEndpoint()|",
      "|java+method:///org/springframework/integration/channel/ExecutorChannelInterceptorAware/getChannelInterceptors()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper/processInternal(org.springframework.integration.util.MessagingMethodInvokerHelper$ParametersWrapper)|",
    "called": "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/Exception/getCause()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper$HandlerMethod/access$000(org.springframework.integration.util.MessagingMethodInvokerHelper$HandlerMethod)|",
      "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper$HandlerMethod/getExpression()|",
      "|java+method:///java/lang/reflect/Method/getReturnType()|",
      "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper/findHandlerMethodForParameters(org.springframework.integration.util.MessagingMethodInvokerHelper$ParametersWrapper)|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper/evaluateExpression(org.springframework.expression.Expression,java.lang.Object,java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Exception/getCause()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper/prepareEvaluationContext()|",
      "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper$HandlerMethod/access$000(org.springframework.integration.util.MessagingMethodInvokerHelper$HandlerMethod)|",
      "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper$HandlerMethod/getExpression()|",
      "|java+method:///java/lang/reflect/Method/getReturnType()|",
      "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper/findHandlerMethodForParameters(org.springframework.integration.util.MessagingMethodInvokerHelper$ParametersWrapper)|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper/evaluateExpression(org.springframework.expression.Expression,java.lang.Object,java.lang.Class)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/config/annotation/AbstractMethodAnnotationPostProcessor/postProcess(java.lang.Object,java.lang.String,java.lang.reflect.Method,java.util.List)|",
    "called": "|java+method:///org/springframework/core/annotation/AnnotationUtils/findAnnotation(java.lang.reflect.Method,java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/springframework/aop/support/DefaultBeanFactoryPointcutAdvisor/setBeanFactory(org.springframework.beans.factory.BeanFactory)|",
      "|java+method:///org/springframework/integration/annotation/IdempotentReceiver/value()|",
      "|java+method:///org/springframework/beans/factory/config/ConfigurableListableBeanFactory/registerSingleton(java.lang.String,java.lang.Object)|",
      "|java+method:///org/springframework/integration/config/annotation/AbstractMethodAnnotationPostProcessor/createEndpoint(org.springframework.messaging.MessageHandler,java.lang.reflect.Method,java.util.List)|",
      "|java+constructor:///org/springframework/aop/support/DefaultBeanFactoryPointcutAdvisor/DefaultBeanFactoryPointcutAdvisor()|",
      "|java+method:///org/springframework/core/annotation/AnnotationUtils/findAnnotation(java.lang.reflect.Method,java.lang.Class)|",
      "|java+method:///org/springframework/integration/config/annotation/AbstractMethodAnnotationPostProcessor/resolveTargetBeanFromMethodWithBeanAnnotation(java.lang.reflect.Method)|",
      "|java+method:///org/springframework/integration/config/annotation/AbstractMethodAnnotationPostProcessor/beanAnnotationAware()|",
      "|java+method:///org/springframework/integration/config/annotation/AbstractMethodAnnotationPostProcessor/createHandler(java.lang.Object,java.lang.reflect.Method,java.util.List)|",
      "|java+method:///org/springframework/beans/factory/config/ConfigurableListableBeanFactory/getBeanClassLoader()|",
      "|java+method:///org/springframework/aop/support/DefaultBeanFactoryPointcutAdvisor/setPointcut(org.springframework.aop.Pointcut)|",
      "|java+method:///org/springframework/aop/support/DefaultBeanFactoryPointcutAdvisor/setAdviceBeanName(java.lang.String)|",
      "|java+method:///org/springframework/core/annotation/AnnotationUtils/getAnnotation(java.lang.reflect.Method,java.lang.Class)|",
      "|java+method:///org/springframework/aop/support/NameMatchMethodPointcut/setMappedName(java.lang.String)|",
      "|java+method:///org/springframework/integration/context/Orderable/setOrder(int)|",
      "|java+method:///org/springframework/aop/framework/Advised/addAdvisor(org.springframework.aop.Advisor)|",
      "|java+method:///org/springframework/aop/framework/ProxyFactory/getProxy(java.lang.ClassLoader)|",
      "|java+method:///org/springframework/core/annotation/AnnotatedElementUtils/isAnnotated(java.lang.reflect.AnnotatedElement,java.lang.String)|",
      "|java+method:///org/springframework/integration/config/annotation/AbstractMethodAnnotationPostProcessor/setAdviceChainIfPresent(java.lang.String,java.util.List,org.springframework.messaging.MessageHandler)|",
      "|java+method:///org/springframework/aop/framework/ProxyFactory/addAdvisor(org.springframework.aop.Advisor)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///org/springframework/beans/factory/config/ConfigurableListableBeanFactory/initializeBean(java.lang.Object,java.lang.String)|",
      "|java+method:///org/springframework/integration/config/annotation/AbstractMethodAnnotationPostProcessor/generateHandlerBeanName(java.lang.String,java.lang.reflect.Method)|",
      "|java+method:///org/springframework/core/annotation/Order/value()|",
      "|java+constructor:///org/springframework/aop/framework/ProxyFactory/ProxyFactory(java.lang.Object)|",
      "|java+constructor:///org/springframework/aop/support/NameMatchMethodPointcut/NameMatchMethodPointcut()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/aop/support/DefaultBeanFactoryPointcutAdvisor/setBeanFactory(org.springframework.beans.factory.BeanFactory)|",
      "|java+method:///org/springframework/beans/factory/config/ConfigurableListableBeanFactory/registerSingleton(java.lang.String,java.lang.Object)|",
      "|java+method:///org/springframework/integration/config/annotation/AbstractMethodAnnotationPostProcessor/createEndpoint(org.springframework.messaging.MessageHandler,java.lang.reflect.Method,java.util.List)|",
      "|java+constructor:///org/springframework/aop/support/DefaultBeanFactoryPointcutAdvisor/DefaultBeanFactoryPointcutAdvisor()|",
      "|java+method:///org/springframework/integration/util/MessagingAnnotationUtils/resolveAttribute(java.util.List,java.lang.String,java.lang.Class)|",
      "|java+method:///org/springframework/core/annotation/AnnotationUtils/findAnnotation(java.lang.reflect.Method,java.lang.Class)|",
      "|java+method:///org/springframework/integration/config/annotation/AbstractMethodAnnotationPostProcessor/resolveTargetBeanFromMethodWithBeanAnnotation(java.lang.reflect.Method)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/springframework/integration/config/annotation/AbstractMethodAnnotationPostProcessor/beanAnnotationAware()|",
      "|java+method:///org/springframework/integration/config/annotation/AbstractMethodAnnotationPostProcessor/createHandler(java.lang.Object,java.lang.reflect.Method,java.util.List)|",
      "|java+method:///org/springframework/beans/factory/config/ConfigurableListableBeanFactory/getBeanClassLoader()|",
      "|java+method:///org/springframework/core/annotation/AnnotationUtils/getAnnotation(java.lang.reflect.Method,java.lang.Class)|",
      "|java+method:///java/lang/Long/valueOf(java.lang.String)|",
      "|java+method:///org/springframework/aop/support/NameMatchMethodPointcut/setMappedName(java.lang.String)|",
      "|java+method:///org/springframework/integration/router/AbstractMessageRouter/setTimeout(long)|",
      "|java+method:///org/springframework/integration/annotation/IdempotentReceiver/value()|",
      "|java+method:///org/springframework/integration/context/Orderable/setOrder(int)|",
      "|java+method:///org/springframework/aop/framework/Advised/addAdvisor(org.springframework.aop.Advisor)|",
      "|java+method:///org/springframework/aop/framework/ProxyFactory/getProxy(java.lang.ClassLoader)|",
      "|java+method:///org/springframework/core/annotation/AnnotatedElementUtils/isAnnotated(java.lang.reflect.AnnotatedElement,java.lang.String)|",
      "|java+method:///org/springframework/integration/config/annotation/AbstractMethodAnnotationPostProcessor/setAdviceChainIfPresent(java.lang.String,java.util.List,org.springframework.messaging.MessageHandler)|",
      "|java+method:///org/springframework/aop/framework/ProxyFactory/addAdvisor(org.springframework.aop.Advisor)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///org/springframework/beans/factory/config/ConfigurableListableBeanFactory/initializeBean(java.lang.Object,java.lang.String)|",
      "|java+method:///org/springframework/integration/config/annotation/AbstractMethodAnnotationPostProcessor/generateHandlerBeanName(java.lang.String,java.lang.reflect.Method)|",
      "|java+method:///org/springframework/core/annotation/Order/value()|",
      "|java+constructor:///org/springframework/aop/framework/ProxyFactory/ProxyFactory(java.lang.Object)|",
      "|java+constructor:///org/springframework/aop/support/NameMatchMethodPointcut/NameMatchMethodPointcut()|",
      "|java+method:///org/springframework/integration/handler/AbstractMessageProducingHandler/setSendTimeout(long)|",
      "|java+method:///org/springframework/aop/support/DefaultBeanFactoryPointcutAdvisor/setPointcut(org.springframework.aop.Pointcut)|",
      "|java+method:///org/springframework/core/env/Environment/resolvePlaceholders(java.lang.String)|",
      "|java+method:///org/springframework/aop/support/DefaultBeanFactoryPointcutAdvisor/setAdviceBeanName(java.lang.String)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/config/annotation/AbstractMethodAnnotationPostProcessor/configurePollingEndpoint(org.springframework.integration.endpoint.AbstractPollingEndpoint,java.util.List)|",
    "called": "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/getMaxMessagesPerPoll()|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/setTaskExecutor(java.util.concurrent.Executor)|",
      "|java+method:///org/springframework/integration/annotation/Poller/value()|",
      "|java+method:///org/springframework/util/ObjectUtils/isEmpty(java.lang.Object%5B%5D)|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/setTrigger(org.springframework.scheduling.Trigger)|",
      "|java+method:///org/springframework/beans/factory/config/ConfigurableListableBeanFactory/resolveEmbeddedValue(java.lang.String)|",
      "|java+method:///org/springframework/scheduling/support/PeriodicTrigger/setFixedRate(boolean)|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/setMaxMessagesPerPoll(long)|",
      "|java+method:///org/springframework/integration/endpoint/PollingConsumer/setReceiveTimeout(long)|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/getReceiveTimeout()|",
      "|java+method:///org/springframework/integration/endpoint/AbstractPollingEndpoint/setAdviceChain(java.util.List)|",
      "|java+method:///org/springframework/integration/endpoint/AbstractPollingEndpoint/setTrigger(org.springframework.scheduling.Trigger)|",
      "|java+method:///org/springframework/integration/endpoint/AbstractPollingEndpoint/setMaxMessagesPerPoll(long)|",
      "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/getDefaultPollerMetadata(org.springframework.beans.factory.BeanFactory)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/getTransactionSynchronizationFactory()|",
      "|java+method:///org/springframework/integration/annotation/Poller/fixedRate()|",
      "|java+method:///org/springframework/integration/util/MessagingAnnotationUtils/resolveAttribute(java.util.List,java.lang.String,java.lang.Class)|",
      "|java+method:///org/springframework/beans/factory/config/ConfigurableListableBeanFactory/getBean(java.lang.String,java.lang.Class)|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/getAdviceChain()|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/getTaskExecutor()|",
      "|java+method:///org/springframework/integration/annotation/Poller/maxMessagesPerPoll()|",
      "|java+method:///org/springframework/integration/annotation/Poller/trigger()|",
      "|java+constructor:///org/springframework/scheduling/support/CronTrigger/CronTrigger(java.lang.String)|",
      "|java+method:///org/springframework/integration/annotation/Poller/cron()|",
      "|java+method:///org/springframework/integration/endpoint/AbstractPollingEndpoint/setErrorHandler(org.springframework.util.ErrorHandler)|",
      "|java+method:///org/springframework/integration/annotation/Poller/fixedDelay()|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/getErrorHandler()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///org/springframework/integration/endpoint/AbstractPollingEndpoint/setTaskExecutor(java.util.concurrent.Executor)|",
      "|java+method:///org/springframework/integration/annotation/Poller/taskExecutor()|",
      "|java+constructor:///org/springframework/integration/scheduling/PollerMetadata/PollerMetadata()|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/getTrigger()|",
      "|java+method:///org/springframework/integration/endpoint/AbstractPollingEndpoint/setTransactionSynchronizationFactory(org.springframework.integration.transaction.TransactionSynchronizationFactory)|",
      "|java+constructor:///org/springframework/scheduling/support/PeriodicTrigger/PeriodicTrigger(long)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/getMaxMessagesPerPoll()|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/setTaskExecutor(java.util.concurrent.Executor)|",
      "|java+method:///org/springframework/integration/annotation/Poller/value()|",
      "|java+method:///org/springframework/util/ObjectUtils/isEmpty(java.lang.Object%5B%5D)|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/setTrigger(org.springframework.scheduling.Trigger)|",
      "|java+method:///org/springframework/scheduling/support/PeriodicTrigger/setFixedRate(boolean)|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/setMaxMessagesPerPoll(long)|",
      "|java+method:///org/springframework/integration/endpoint/PollingConsumer/setReceiveTimeout(long)|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/getReceiveTimeout()|",
      "|java+method:///org/springframework/integration/endpoint/AbstractPollingEndpoint/setAdviceChain(java.util.List)|",
      "|java+method:///org/springframework/integration/endpoint/AbstractPollingEndpoint/setMaxMessagesPerPoll(long)|",
      "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/getDefaultPollerMetadata(org.springframework.beans.factory.BeanFactory)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/getTransactionSynchronizationFactory()|",
      "|java+method:///org/springframework/integration/annotation/Poller/fixedRate()|",
      "|java+method:///org/springframework/integration/util/MessagingAnnotationUtils/resolveAttribute(java.util.List,java.lang.String,java.lang.Class)|",
      "|java+method:///org/springframework/beans/factory/config/ConfigurableListableBeanFactory/getBean(java.lang.String,java.lang.Class)|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/getAdviceChain()|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/getTaskExecutor()|",
      "|java+method:///org/springframework/integration/annotation/Poller/maxMessagesPerPoll()|",
      "|java+method:///org/springframework/integration/annotation/Poller/trigger()|",
      "|java+constructor:///org/springframework/scheduling/support/CronTrigger/CronTrigger(java.lang.String)|",
      "|java+method:///org/springframework/integration/annotation/Poller/cron()|",
      "|java+method:///org/springframework/integration/endpoint/AbstractPollingEndpoint/setErrorHandler(org.springframework.util.ErrorHandler)|",
      "|java+method:///org/springframework/integration/annotation/Poller/fixedDelay()|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/getErrorHandler()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///org/springframework/integration/endpoint/AbstractPollingEndpoint/setTaskExecutor(java.util.concurrent.Executor)|",
      "|java+method:///org/springframework/integration/annotation/Poller/taskExecutor()|",
      "|java+constructor:///org/springframework/integration/scheduling/PollerMetadata/PollerMetadata()|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/getTrigger()|",
      "|java+method:///org/springframework/core/env/Environment/resolvePlaceholders(java.lang.String)|",
      "|java+method:///org/springframework/integration/endpoint/AbstractPollingEndpoint/setTrigger(org.springframework.scheduling.Trigger)|",
      "|java+method:///org/springframework/integration/endpoint/AbstractPollingEndpoint/setTransactionSynchronizationFactory(org.springframework.integration.transaction.TransactionSynchronizationFactory)|",
      "|java+constructor:///org/springframework/scheduling/support/PeriodicTrigger/PeriodicTrigger(long)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+constructor:///org/springframework/integration/aggregator/AbstractCorrelatingMessageHandler/AbstractCorrelatingMessageHandler(org.springframework.integration.aggregator.MessageGroupProcessor,org.springframework.integration.store.MessageGroupStore,org.springframework.integration.aggregator.CorrelationStrategy,org.springframework.integration.aggregator.ReleaseStrategy)|",
    "called": "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object)|",
    "v1Body": [
      "|java+constructor:///org/springframework/integration/aggregator/SequenceSizeReleaseStrategy/SequenceSizeReleaseStrategy()|",
      "|java+method:///org/springframework/integration/aggregator/AbstractCorrelatingMessageHandler/setSendTimeout(long)|",
      "|java+constructor:///org/springframework/integration/aggregator/SequenceNumberComparator/SequenceNumberComparator()|",
      "|java+constructor:///org/springframework/integration/handler/AbstractMessageProducingHandler/AbstractMessageProducingHandler()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///org/springframework/integration/support/locks/DefaultLockRegistry/DefaultLockRegistry()|",
      "|java+constructor:///org/springframework/integration/aggregator/AbstractCorrelatingMessageHandler$ForceReleaseMessageGroupProcessor/AbstractCorrelatingMessageHandler$ForceReleaseMessageGroupProcessor(org.springframework.integration.aggregator.AbstractCorrelatingMessageHandler,org.springframework.integration.aggregator.AbstractCorrelatingMessageHandler$1)|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object)|",
      "|java+constructor:///org/springframework/integration/aggregator/HeaderAttributeCorrelationStrategy/HeaderAttributeCorrelationStrategy(java.lang.String)|",
      "|java+method:///org/springframework/integration/aggregator/AbstractCorrelatingMessageHandler/setMessageStore(org.springframework.integration.store.MessageGroupStore)|"
    ],
    "v2Body": [
      "|java+constructor:///org/springframework/integration/aggregator/SequenceSizeReleaseStrategy/SequenceSizeReleaseStrategy()|",
      "|java+constructor:///org/springframework/integration/aggregator/SequenceNumberComparator/SequenceNumberComparator()|",
      "|java+constructor:///org/springframework/integration/handler/AbstractMessageProducingHandler/AbstractMessageProducingHandler()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///org/springframework/integration/support/locks/DefaultLockRegistry/DefaultLockRegistry()|",
      "|java+constructor:///org/springframework/integration/aggregator/AbstractCorrelatingMessageHandler$ForceReleaseMessageGroupProcessor/AbstractCorrelatingMessageHandler$ForceReleaseMessageGroupProcessor(org.springframework.integration.aggregator.AbstractCorrelatingMessageHandler,org.springframework.integration.aggregator.AbstractCorrelatingMessageHandler$1)|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object)|",
      "|java+constructor:///org/springframework/integration/aggregator/HeaderAttributeCorrelationStrategy/HeaderAttributeCorrelationStrategy(java.lang.String)|",
      "|java+method:///org/springframework/integration/aggregator/AbstractCorrelatingMessageHandler/setMessageStore(org.springframework.integration.store.MessageGroupStore)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/codec/kryo/AbstractKryoCodec/decode(java.io.InputStream,java.lang.Class)|",
    "called": "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/integration/codec/kryo/pool/KryoPool/run(org.springframework.integration.codec.kryo.pool.KryoCallback)|",
      "|java+constructor:///org/springframework/integration/codec/kryo/AbstractKryoCodec$3/AbstractKryoCodec$3(org.springframework.integration.codec.kryo.AbstractKryoCodec,com.esotericsoftware.kryo.io.Input,java.lang.Class)|",
      "|java+method:///com/esotericsoftware/kryo/io/Input/close()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+constructor:///com/esotericsoftware/kryo/io/Input/Input(java.io.InputStream)|"
    ],
    "v2Body": [
      "|java+method:///com/esotericsoftware/kryo/pool/KryoPool/run(com.esotericsoftware.kryo.pool.KryoCallback)|",
      "|java+constructor:///org/springframework/integration/codec/kryo/AbstractKryoCodec$3/AbstractKryoCodec$3(org.springframework.integration.codec.kryo.AbstractKryoCodec,com.esotericsoftware.kryo.io.Input,java.lang.Class)|",
      "|java+method:///com/esotericsoftware/kryo/io/Input/close()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+constructor:///com/esotericsoftware/kryo/io/Input/Input(java.io.InputStream)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+constructor:///org/springframework/integration/channel/AbstractMessageChannel/AbstractMessageChannel()|",
    "called": "|java+constructor:///org/springframework/core/OrderComparator/OrderComparator()|",
    "v1Body": [
      "|java+constructor:///org/springframework/integration/context/IntegrationObjectSupport/IntegrationObjectSupport()|",
      "|java+constructor:///org/springframework/core/OrderComparator/OrderComparator()|",
      "|java+constructor:///org/springframework/integration/channel/AbstractMessageChannel$ChannelInterceptorList/AbstractMessageChannel$ChannelInterceptorList(org.apache.commons.logging.Log)|"
    ],
    "v2Body": [
      "|java+constructor:///org/springframework/integration/support/management/DefaultMessageChannelMetrics/DefaultMessageChannelMetrics()|",
      "|java+constructor:///org/springframework/integration/context/IntegrationObjectSupport/IntegrationObjectSupport()|",
      "|java+constructor:///org/springframework/core/OrderComparator/OrderComparator()|",
      "|java+constructor:///org/springframework/integration/channel/AbstractMessageChannel$ChannelInterceptorList/AbstractMessageChannel$ChannelInterceptorList(org.apache.commons.logging.Log)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/config/annotation/TransformerAnnotationPostProcessor/createHandler(java.lang.Object,java.lang.reflect.Method,java.util.List)|",
    "called": "|java+method:///org/springframework/core/annotation/AnnotatedElementUtils/isAnnotated(java.lang.reflect.AnnotatedElement,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/integration/config/annotation/TransformerAnnotationPostProcessor/resolveTargetBeanFromMethodWithBeanAnnotation(java.lang.reflect.Method)|",
      "|java+method:///org/springframework/integration/config/annotation/TransformerAnnotationPostProcessor/extractTypeIfPossible(java.lang.Object,java.lang.Class)|",
      "|java+constructor:///org/springframework/integration/transformer/MethodInvokingTransformer/MethodInvokingTransformer(java.lang.Object)|",
      "|java+method:///org/springframework/core/annotation/AnnotatedElementUtils/isAnnotated(java.lang.reflect.AnnotatedElement,java.lang.String)|",
      "|java+method:///org/springframework/integration/config/annotation/TransformerAnnotationPostProcessor/setOutputChannelIfPresent(java.util.List,org.springframework.integration.handler.AbstractReplyProducingMessageHandler)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+constructor:///org/springframework/integration/transformer/MethodInvokingTransformer/MethodInvokingTransformer(java.lang.Object,java.lang.reflect.Method)|",
      "|java+constructor:///org/springframework/integration/transformer/MessageTransformingHandler/MessageTransformingHandler(org.springframework.integration.transformer.Transformer)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/integration/config/annotation/TransformerAnnotationPostProcessor/resolveTargetBeanFromMethodWithBeanAnnotation(java.lang.reflect.Method)|",
      "|java+method:///org/springframework/integration/config/annotation/TransformerAnnotationPostProcessor/extractTypeIfPossible(java.lang.Object,java.lang.Class)|",
      "|java+constructor:///org/springframework/integration/transformer/MethodInvokingTransformer/MethodInvokingTransformer(java.lang.Object)|",
      "|java+method:///org/springframework/core/annotation/AnnotatedElementUtils/isAnnotated(java.lang.reflect.AnnotatedElement,java.lang.String)|",
      "|java+method:///org/springframework/integration/config/annotation/TransformerAnnotationPostProcessor/setOutputChannelIfPresent(java.util.List,org.springframework.integration.handler.AbstractReplyProducingMessageHandler)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///org/springframework/integration/config/annotation/TransformerAnnotationPostProcessor/checkMessageHandlerAttributes(java.lang.String,java.util.List)|",
      "|java+constructor:///org/springframework/integration/transformer/MethodInvokingTransformer/MethodInvokingTransformer(java.lang.Object,java.lang.reflect.Method)|",
      "|java+constructor:///org/springframework/integration/transformer/MessageTransformingHandler/MessageTransformingHandler(org.springframework.integration.transformer.Transformer)|",
      "|java+method:///org/springframework/integration/config/annotation/TransformerAnnotationPostProcessor/resolveTargetBeanName(java.lang.reflect.Method)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+constructor:///org/springframework/integration/channel/ExecutorChannel/ExecutorChannel(java.util.concurrent.Executor,org.springframework.integration.dispatcher.LoadBalancingStrategy)|",
    "called": "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/integration/dispatcher/UnicastingDispatcher/setLoadBalancingStrategy(org.springframework.integration.dispatcher.LoadBalancingStrategy)|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+constructor:///org/springframework/integration/channel/AbstractSubscribableChannel/AbstractSubscribableChannel()|",
      "|java+constructor:///org/springframework/integration/dispatcher/UnicastingDispatcher/UnicastingDispatcher(java.util.concurrent.Executor)|"
    ],
    "v2Body": [
      "|java+constructor:///org/springframework/integration/channel/AbstractExecutorChannel/AbstractExecutorChannel(java.util.concurrent.Executor)|",
      "|java+method:///org/springframework/integration/dispatcher/UnicastingDispatcher/setLoadBalancingStrategy(org.springframework.integration.dispatcher.LoadBalancingStrategy)|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+constructor:///org/springframework/integration/dispatcher/UnicastingDispatcher/UnicastingDispatcher(java.util.concurrent.Executor)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+constructor:///org/springframework/integration/config/annotation/MessagingAnnotationPostProcessor/MessagingAnnotationPostProcessor()|",
    "called": "|java+constructor:///org/springframework/util/LinkedMultiValueMap/LinkedMultiValueMap()|",
    "v1Body": [
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/apache/commons/logging/LogFactory/getLog(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///org/springframework/util/LinkedMultiValueMap/LinkedMultiValueMap()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/apache/commons/logging/LogFactory/getLog(java.lang.Class)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/config/annotation/MessagingAnnotationPostProcessor$1/doWith(java.lang.reflect.Method)|",
    "called": "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/integration/config/annotation/MethodAnnotationPostProcessor/shouldCreateEndpoint(java.lang.reflect.Method,java.util.List)|",
      "|java+method:///org/springframework/beans/factory/config/ConfigurableListableBeanFactory/registerSingleton(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/springframework/beans/factory/config/ConfigurableListableBeanFactory/resolveEmbeddedValue(java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///org/springframework/beans/factory/BeanInitializationException/BeanInitializationException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/springframework/integration/config/annotation/MessagingAnnotationPostProcessor/access$200(org.springframework.integration.config.annotation.MessagingAnnotationPostProcessor)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/springframework/integration/config/annotation/MessagingAnnotationPostProcessor/access$500(org.springframework.integration.config.annotation.MessagingAnnotationPostProcessor)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/springframework/integration/endpoint/AbstractEndpoint/isAutoStartup()|",
      "|java+method:///org/springframework/integration/endpoint/AbstractEndpoint/setPhase(int)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/springframework/integration/config/annotation/MessagingAnnotationPostProcessor/access$100(org.springframework.integration.config.annotation.MessagingAnnotationPostProcessor,java.lang.reflect.Method,java.lang.Class)|",
      "|java+method:///org/springframework/integration/util/MessagingAnnotationUtils/resolveAttribute(java.util.List,java.lang.String,java.lang.Class)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/integration/config/annotation/MethodAnnotationPostProcessor/postProcess(java.lang.Object,java.lang.String,java.lang.reflect.Method,java.util.List)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/springframework/integration/endpoint/AbstractEndpoint/setBeanFactory(org.springframework.beans.factory.BeanFactory)|",
      "|java+method:///org/springframework/core/annotation/AnnotatedElementUtils/isAnnotated(java.lang.reflect.AnnotatedElement,java.lang.String)|",
      "|java+method:///org/springframework/integration/endpoint/AbstractEndpoint/afterPropertiesSet()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///org/springframework/integration/config/annotation/MessagingAnnotationPostProcessor/access$000(org.springframework.integration.config.annotation.MessagingAnnotationPostProcessor)|",
      "|java+method:///org/springframework/integration/endpoint/AbstractEndpoint/setBeanName(java.lang.String)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///org/springframework/integration/endpoint/AbstractEndpoint/setAutoStartup(boolean)|",
      "|java+method:///org/springframework/integration/config/annotation/MessagingAnnotationPostProcessor/access$400(org.springframework.integration.config.annotation.MessagingAnnotationPostProcessor)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/springframework/integration/endpoint/AbstractEndpoint/start()|",
      "|java+method:///org/springframework/integration/config/annotation/MessagingAnnotationPostProcessor/access$300(org.springframework.integration.config.annotation.MessagingAnnotationPostProcessor,java.lang.String,java.lang.reflect.Method,java.lang.Class)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/integration/config/annotation/MethodAnnotationPostProcessor/shouldCreateEndpoint(java.lang.reflect.Method,java.util.List)|",
      "|java+method:///org/springframework/beans/factory/config/ConfigurableListableBeanFactory/registerSingleton(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/core/annotation/AnnotationUtils/findAnnotation(java.lang.reflect.Method,java.lang.Class)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/springframework/core/annotation/AnnotatedElementUtils/isAnnotated(java.lang.reflect.AnnotatedElement,java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/springframework/integration/config/annotation/MessagingAnnotationPostProcessor/access$500(org.springframework.integration.config.annotation.MessagingAnnotationPostProcessor)|",
      "|java+method:///java/lang/reflect/Method/getParameterTypes()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/integration/endpoint/AbstractEndpoint/setPhase(int)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/springframework/integration/config/annotation/MessagingAnnotationPostProcessor/access$100(org.springframework.integration.config.annotation.MessagingAnnotationPostProcessor,java.lang.reflect.Method,java.lang.Class)|",
      "|java+method:///org/springframework/integration/util/MessagingAnnotationUtils/resolveAttribute(java.util.List,java.lang.String,java.lang.Class)|",
      "|java+method:///java/lang/Class/getMethod(java.lang.String,java.lang.Class%5B%5D)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/integration/config/annotation/MethodAnnotationPostProcessor/postProcess(java.lang.Object,java.lang.String,java.lang.reflect.Method,java.util.List)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/springframework/util/MultiValueMap/add(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/springframework/integration/annotation/Role/value()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///org/springframework/integration/config/annotation/MessagingAnnotationPostProcessor/access$000(org.springframework.integration.config.annotation.MessagingAnnotationPostProcessor)|",
      "|java+method:///org/springframework/integration/endpoint/AbstractEndpoint/setBeanName(java.lang.String)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///org/springframework/beans/factory/config/ConfigurableListableBeanFactory/initializeBean(java.lang.Object,java.lang.String)|",
      "|java+method:///org/springframework/aop/support/AopUtils/isJdkDynamicProxy(java.lang.Object)|",
      "|java+method:///java/lang/reflect/Method/getName()|",
      "|java+method:///org/springframework/integration/config/annotation/MessagingAnnotationPostProcessor/access$200(org.springframework.integration.config.annotation.MessagingAnnotationPostProcessor)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/integration/endpoint/AbstractEndpoint/setAutoStartup(boolean)|",
      "|java+method:///org/springframework/integration/config/annotation/MessagingAnnotationPostProcessor/access$400(org.springframework.integration.config.annotation.MessagingAnnotationPostProcessor)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/springframework/core/env/Environment/resolvePlaceholders(java.lang.String)|",
      "|java+method:///org/springframework/integration/config/annotation/MessagingAnnotationPostProcessor/access$300(org.springframework.integration.config.annotation.MessagingAnnotationPostProcessor,java.lang.String,java.lang.reflect.Method,java.lang.Class)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/parseInnerHandlerDefinition(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)|",
    "called": "|java+method:///org/springframework/util/xml/DomUtils/getChildElementsByTagName(org.w3c.dom.Element,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/beans/factory/config/BeanDefinitionHolder/getBeanName()|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/getReaderContext()|",
      "|java+constructor:///org/springframework/beans/factory/parsing/BeanComponentDefinition/BeanComponentDefinition(org.springframework.beans.factory.config.BeanDefinition,java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/getDelegate()|",
      "|java+method:///org/springframework/beans/factory/parsing/BeanComponentDefinition/getBeanDefinition()|",
      "|java+method:///org/springframework/beans/factory/xml/BeanDefinitionParserDelegate/parseBeanDefinitionElement(org.w3c.dom.Element)|",
      "|java+method:///org/springframework/beans/factory/xml/XmlReaderContext/error(java.lang.String,java.lang.Object)|",
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElementsByTagName(org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/config/BeanDefinitionHolder/getBeanDefinition()|",
      "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/createElementDescription(org.w3c.dom.Element)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/xml/BeanDefinitionParserDelegate/decorateBeanDefinitionIfRequired(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinitionHolder)|",
      "|java+method:///org/springframework/beans/factory/config/BeanDefinition/getBeanClassName()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/extractSource(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/beans/factory/config/BeanDefinitionHolder/getBeanName()|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/getReaderContext()|",
      "|java+constructor:///org/springframework/beans/factory/parsing/BeanComponentDefinition/BeanComponentDefinition(org.springframework.beans.factory.config.BeanDefinition,java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/getDelegate()|",
      "|java+method:///org/springframework/beans/factory/parsing/BeanComponentDefinition/getBeanDefinition()|",
      "|java+method:///org/springframework/beans/factory/xml/BeanDefinitionParserDelegate/parseBeanDefinitionElement(org.w3c.dom.Element)|",
      "|java+method:///org/springframework/beans/factory/xml/XmlReaderContext/error(java.lang.String,java.lang.Object)|",
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElementsByTagName(org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/config/BeanDefinitionHolder/getBeanDefinition()|",
      "|java+method:///org/springframework/integration/config/xml/IntegrationNamespaceUtils/createElementDescription(org.w3c.dom.Element)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/xml/BeanDefinitionParserDelegate/decorateBeanDefinitionIfRequired(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinitionHolder)|",
      "|java+method:///org/springframework/beans/factory/config/BeanDefinition/getBeanClassName()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/extractSource(java.lang.Object)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/transformer/ObjectToMapTransformer/doFlatten(java.lang.String,java.util.Map,java.util.Map)|",
    "called": "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/integration/transformer/ObjectToMapTransformer/doProcessElement(java.lang.String,java.lang.Object,java.util.Map)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Map/keySet()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/integration/transformer/ObjectToMapTransformer/doProcessElement(java.lang.String,java.lang.Object,java.util.Map)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/endpoint/AbstractPollingEndpoint/createPoller()|",
    "called": "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/aop/framework/ProxyFactory/getProxy(java.lang.ClassLoader)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/springframework/aop/framework/ProxyFactory/ProxyFactory(java.lang.Object)|",
      "|java+constructor:///org/springframework/integration/endpoint/AbstractPollingEndpoint$Poller/AbstractPollingEndpoint$Poller(org.springframework.integration.endpoint.AbstractPollingEndpoint,java.util.concurrent.Callable)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)|",
      "|java+method:///org/springframework/aop/framework/ProxyFactory/addAdvice(org.aopalliance.aop.Advice)|",
      "|java+constructor:///org/springframework/integration/endpoint/AbstractPollingEndpoint$1/AbstractPollingEndpoint$1(org.springframework.integration.endpoint.AbstractPollingEndpoint)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/springframework/integration/endpoint/AbstractPollingEndpoint/isReceiveOnlyAdvice(org.aopalliance.aop.Advice)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/springframework/aop/framework/ProxyFactory/getProxy(java.lang.ClassLoader)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/springframework/integration/endpoint/AbstractPollingEndpoint/applyReceiveOnlyAdviceChain(java.util.Collection)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/springframework/aop/framework/ProxyFactory/ProxyFactory(java.lang.Object)|",
      "|java+constructor:///org/springframework/integration/endpoint/AbstractPollingEndpoint$Poller/AbstractPollingEndpoint$Poller(org.springframework.integration.endpoint.AbstractPollingEndpoint,java.util.concurrent.Callable)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)|",
      "|java+method:///org/springframework/aop/framework/ProxyFactory/addAdvice(org.aopalliance.aop.Advice)|",
      "|java+constructor:///org/springframework/integration/endpoint/AbstractPollingEndpoint$1/AbstractPollingEndpoint$1(org.springframework.integration.endpoint.AbstractPollingEndpoint)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/config/MessagingGatewayRegistrar/parse(java.util.Map)|",
    "called": "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/springframework/beans/BeanMetadataAttribute/BeanMetadataAttribute(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/AbstractBeanDefinition/addMetadataAttribute(org.springframework.beans.BeanMetadataAttribute)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/getBeanDefinition()|",
      "|java+constructor:///org/springframework/beans/factory/config/BeanDefinitionHolder/BeanDefinitionHolder(org.springframework.beans.factory.config.BeanDefinition,java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyValue(java.lang.String,java.lang.Object)|",
      "|java+method:///org/springframework/util/ObjectUtils/isEmpty(java.lang.Object%5B%5D)|",
      "|java+method:///java/beans/Introspector/decapitalize(java.lang.String)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///org/springframework/beans/factory/BeanDefinitionStoreException/BeanDefinitionStoreException(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyReference(java.lang.String,java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/config/ConstructorArgumentValues/addGenericArgumentValue(java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/genericBeanDefinition(java.lang.Class)|",
      "|java+method:///java/lang/String/lastIndexOf(java.lang.String)|",
      "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/addConstructorArgValue(java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/config/BeanDefinition/getConstructorArgumentValues()|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+constructor:///org/springframework/beans/factory/support/RootBeanDefinition/RootBeanDefinition(java.lang.Class)|",
      "|java+constructor:///org/springframework/beans/factory/support/ManagedMap/ManagedMap()|"
    ],
    "v2Body": [
      "|java+constructor:///org/springframework/beans/BeanMetadataAttribute/BeanMetadataAttribute(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/AbstractBeanDefinition/addMetadataAttribute(org.springframework.beans.BeanMetadataAttribute)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/getBeanDefinition()|",
      "|java+constructor:///org/springframework/beans/factory/config/BeanDefinitionHolder/BeanDefinitionHolder(org.springframework.beans.factory.config.BeanDefinition,java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyValue(java.lang.String,java.lang.Object)|",
      "|java+method:///org/springframework/util/ObjectUtils/isEmpty(java.lang.Object%5B%5D)|",
      "|java+method:///java/beans/Introspector/decapitalize(java.lang.String)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/util/ClassUtils/forName(java.lang.String,java.lang.ClassLoader)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///org/springframework/beans/factory/BeanDefinitionStoreException/BeanDefinitionStoreException(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyReference(java.lang.String,java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/config/ConstructorArgumentValues/addGenericArgumentValue(java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/genericBeanDefinition(java.lang.Class)|",
      "|java+method:///java/lang/String/lastIndexOf(java.lang.String)|",
      "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/addConstructorArgValue(java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/config/BeanDefinition/getConstructorArgumentValues()|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+constructor:///org/springframework/beans/factory/support/RootBeanDefinition/RootBeanDefinition(java.lang.Class)|",
      "|java+constructor:///org/springframework/beans/factory/support/ManagedMap/ManagedMap()|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/config/xml/WireTapParser/parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)|",
    "called": "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/getReaderContext()|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionReaderUtils/registerBeanDefinition(org.springframework.beans.factory.config.BeanDefinitionHolder,org.springframework.beans.factory.support.BeanDefinitionRegistry)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/getBeanDefinition()|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyValue(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionReaderUtils/registerWithGeneratedName(org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.factory.support.BeanDefinitionRegistry)|",
      "|java+method:///org/springframework/beans/factory/xml/XmlReaderContext/error(java.lang.String,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/addConstructorArgReference(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/genericBeanDefinition(java.lang.Class)|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/getRegistry()|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+constructor:///org/springframework/beans/factory/config/BeanDefinitionHolder/BeanDefinitionHolder(org.springframework.beans.factory.config.BeanDefinition,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/getReaderContext()|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionReaderUtils/registerBeanDefinition(org.springframework.beans.factory.config.BeanDefinitionHolder,org.springframework.beans.factory.support.BeanDefinitionRegistry)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/getBeanDefinition()|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyValue(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/addConstructorArgValue(java.lang.Object)|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionReaderUtils/registerWithGeneratedName(org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.factory.support.BeanDefinitionRegistry)|",
      "|java+method:///org/springframework/beans/factory/xml/XmlReaderContext/error(java.lang.String,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/genericBeanDefinition(java.lang.Class)|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/getRegistry()|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+constructor:///org/springframework/beans/factory/config/BeanDefinitionHolder/BeanDefinitionHolder(org.springframework.beans.factory.config.BeanDefinition,java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/addConstructorArgReference(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/extractSource(java.lang.Object)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+constructor:///org/springframework/integration/aop/MessagePublishingInterceptor/MessagePublishingInterceptor(org.springframework.integration.aop.PublisherMetadataSource)|",
    "called": "|java+constructor:///org/springframework/core/LocalVariableTableParameterNameDiscoverer/LocalVariableTableParameterNameDiscoverer()|",
    "v1Body": [
      "|java+constructor:///org/springframework/expression/spel/standard/SpelExpressionParser/SpelExpressionParser(org.springframework.expression.spel.SpelParserConfiguration)|",
      "|java+constructor:///org/springframework/integration/core/MessagingTemplate/MessagingTemplate()|",
      "|java+constructor:///org/springframework/integration/support/DefaultMessageBuilderFactory/DefaultMessageBuilderFactory()|",
      "|java+constructor:///org/springframework/core/LocalVariableTableParameterNameDiscoverer/LocalVariableTableParameterNameDiscoverer()|",
      "|java+constructor:///org/springframework/expression/spel/SpelParserConfiguration/SpelParserConfiguration(boolean,boolean)|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+constructor:///org/springframework/integration/core/MessagingTemplate/MessagingTemplate()|",
      "|java+constructor:///org/springframework/integration/support/DefaultMessageBuilderFactory/DefaultMessageBuilderFactory()|",
      "|java+constructor:///org/springframework/core/LocalVariableTableParameterNameDiscoverer/LocalVariableTableParameterNameDiscoverer()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+constructor:///org/springframework/expression/spel/standard/SpelExpressionParser/SpelExpressionParser()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/context/IntegrationObjectSupport/setBeanFactory(org.springframework.beans.factory.BeanFactory)|",
    "called": "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///org/springframework/integration/context/IntegrationContextUtils/getIntegrationProperties(org.springframework.beans.factory.BeanFactory)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+constructor:///org/springframework/integration/support/channel/BeanFactoryChannelResolver/BeanFactoryChannelResolver(org.springframework.beans.factory.BeanFactory)|",
    "called": "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/springframework/integration/support/channel/BeanFactoryChannelResolver/lookupHeaderChannelRegistry(org.springframework.beans.factory.BeanFactory)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+constructor:///org/springframework/integration/config/ReleaseStrategyFactoryBean/ReleaseStrategyFactoryBean(java.lang.Object,java.lang.String)|",
    "called": "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/springframework/integration/aggregator/SequenceSizeReleaseStrategy/SequenceSizeReleaseStrategy()|",
      "|java+method:///org/apache/commons/logging/Log/warn(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/isWarnEnabled()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///org/springframework/integration/aggregator/MethodInvokingReleaseStrategy/MethodInvokingReleaseStrategy(java.lang.Object,java.lang.reflect.Method)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/integration/util/MessagingAnnotationUtils/findAnnotatedMethod(java.lang.Object,java.lang.Class)|",
      "|java+constructor:///org/springframework/integration/aggregator/MethodInvokingReleaseStrategy/MethodInvokingReleaseStrategy(java.lang.Object,java.lang.String)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+constructor:///org/springframework/integration/aggregator/SequenceSizeReleaseStrategy/SequenceSizeReleaseStrategy()|",
      "|java+method:///java/lang/Class/getSimpleName()|",
      "|java+method:///org/apache/commons/logging/Log/warn(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/isWarnEnabled()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/springframework/integration/aggregator/MethodInvokingReleaseStrategy/MethodInvokingReleaseStrategy(java.lang.Object,java.lang.reflect.Method)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/integration/util/MessagingAnnotationUtils/findAnnotatedMethod(java.lang.Object,java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+constructor:///org/springframework/integration/aggregator/MethodInvokingReleaseStrategy/MethodInvokingReleaseStrategy(java.lang.Object,java.lang.String)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/support/converter/MapMessageConverter/toMessage(java.lang.Object,org.springframework.messaging.MessageHeaders)|",
    "called": "|java+method:///org/springframework/util/Assert/isInstanceOf(java.lang.Class,java.lang.Object,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/integration/support/AbstractIntegrationMessageBuilder/copyHeaders(java.util.Map)|",
      "|java+method:///java/util/Set/retainAll(java.util.Collection)|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///org/springframework/integration/support/MessageBuilderFactory/withPayload(java.lang.Object)|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///org/springframework/util/Assert/isInstanceOf(java.lang.Class,java.lang.Object,java.lang.String)|",
      "|java+method:///org/springframework/integration/support/AbstractIntegrationMessageBuilder/build()|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/integration/support/converter/MapMessageConverter/getMessageBuilderFactory()|",
      "|java+method:///org/springframework/integration/support/AbstractIntegrationMessageBuilder/copyHeaders(java.util.Map)|",
      "|java+method:///java/util/Set/retainAll(java.util.Collection)|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///org/springframework/integration/support/MessageBuilderFactory/withPayload(java.lang.Object)|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///org/springframework/util/Assert/isInstanceOf(java.lang.Class,java.lang.Object,java.lang.String)|",
      "|java+method:///org/springframework/integration/support/AbstractIntegrationMessageBuilder/build()|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/channel/AbstractMessageChannel/send(org.springframework.messaging.Message,long)|",
    "called": "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel/convertPayloadIfNecessary(org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel$ChannelInterceptorList/afterSendCompletion(org.springframework.messaging.Message,org.springframework.messaging.MessageChannel,boolean,java.lang.Exception,java.util.Deque)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+constructor:///org/springframework/messaging/MessageDeliveryException/MessageDeliveryException(org.springframework.messaging.Message,java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/springframework/messaging/Message/getPayload()|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel/getComponentName()|",
      "|java+method:///java/lang/StringBuilder/append(boolean)|",
      "|java+constructor:///java/util/ArrayDeque/ArrayDeque()|",
      "|java+method:///org/springframework/integration/history/MessageHistory/write(org.springframework.messaging.Message,org.springframework.integration.support.context.NamedComponent,org.springframework.integration.support.MessageBuilderFactory)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel$ChannelInterceptorList/postSend(org.springframework.messaging.Message,org.springframework.messaging.MessageChannel,boolean)|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel/getMessageBuilderFactory()|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel/doSend(org.springframework.messaging.Message,long)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel$ChannelInterceptorList/preSend(org.springframework.messaging.Message,org.springframework.messaging.MessageChannel,java.util.Deque)|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel$ChannelInterceptorList/getSize()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel/convertPayloadIfNecessary(org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel$ChannelInterceptorList/afterSendCompletion(org.springframework.messaging.Message,org.springframework.messaging.MessageChannel,boolean,java.lang.Exception,java.util.Deque)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+constructor:///org/springframework/messaging/MessageDeliveryException/MessageDeliveryException(org.springframework.messaging.Message,java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/springframework/integration/support/management/AbstractMessageChannelMetrics/afterSend(org.springframework.integration.support.management.MetricsContext,boolean)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/springframework/messaging/Message/getPayload()|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel/getComponentName()|",
      "|java+method:///java/lang/StringBuilder/append(boolean)|",
      "|java+constructor:///java/util/ArrayDeque/ArrayDeque()|",
      "|java+method:///org/springframework/integration/history/MessageHistory/write(org.springframework.messaging.Message,org.springframework.integration.support.context.NamedComponent,org.springframework.integration.support.MessageBuilderFactory)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/integration/support/management/AbstractMessageChannelMetrics/beforeSend()|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel$ChannelInterceptorList/postSend(org.springframework.messaging.Message,org.springframework.messaging.MessageChannel,boolean)|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel/getMessageBuilderFactory()|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel/doSend(org.springframework.messaging.Message,long)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel$ChannelInterceptorList/preSend(org.springframework.messaging.Message,org.springframework.messaging.MessageChannel,java.util.Deque)|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel$ChannelInterceptorList/getSize()|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/config/IntegrationRegistrar/registerBuiltInBeans(org.springframework.beans.factory.support.BeanDefinitionRegistry)|",
    "called": "|java+method:///org/springframework/util/ClassUtils/forName(java.lang.String,java.lang.ClassLoader)|",
    "v1Body": [
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/genericBeanDefinition(java.lang.String)|",
      "|java+method:///org/springframework/integration/config/IntegrationConverterInitializer/registerConverter(org.springframework.beans.factory.support.BeanDefinitionRegistry,org.springframework.beans.BeanMetadataElement)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/getBeanDefinition()|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionRegistry/registerBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)|",
      "|java+method:///org/apache/commons/logging/Log/warn(java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/ListableBeanFactory/containsBean(java.lang.String)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+method:///org/springframework/integration/config/IntegrationConfigUtils/registerSpelFunctionBean(org.springframework.beans.factory.support.BeanDefinitionRegistry,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/System/identityHashCode(java.lang.Object)|",
      "|java+method:///org/springframework/util/ClassUtils/forName(java.lang.String,java.lang.ClassLoader)|",
      "|java+constructor:///org/springframework/beans/factory/config/RuntimeBeanReference/RuntimeBeanReference(java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionRegistry/isBeanNameInUse(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/genericBeanDefinition(java.lang.String)|",
      "|java+method:///org/springframework/integration/config/IntegrationConverterInitializer/registerConverter(org.springframework.beans.factory.support.BeanDefinitionRegistry,org.springframework.beans.BeanMetadataElement)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/getBeanDefinition()|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionRegistry/registerBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)|",
      "|java+method:///org/apache/commons/logging/Log/warn(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/springframework/beans/factory/ListableBeanFactory/containsBean(java.lang.String)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+method:///org/springframework/integration/config/IntegrationConfigUtils/registerSpelFunctionBean(org.springframework.beans.factory.support.BeanDefinitionRegistry,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/System/identityHashCode(java.lang.Object)|",
      "|java+method:///org/springframework/util/ClassUtils/forName(java.lang.String,java.lang.ClassLoader)|",
      "|java+constructor:///org/springframework/beans/factory/config/RuntimeBeanReference/RuntimeBeanReference(java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionRegistry/isBeanNameInUse(java.lang.String)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/codec/kryo/AbstractKryoCodec/encode(java.lang.Object,java.io.OutputStream)|",
    "called": "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/springframework/integration/codec/kryo/AbstractKryoCodec$2/AbstractKryoCodec$2(org.springframework.integration.codec.kryo.AbstractKryoCodec,java.lang.Object,com.esotericsoftware.kryo.io.Output)|",
      "|java+method:///org/springframework/integration/codec/kryo/pool/KryoPool/run(org.springframework.integration.codec.kryo.pool.KryoCallback)|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+constructor:///com/esotericsoftware/kryo/io/Output/Output(java.io.OutputStream)|",
      "|java+method:///com/esotericsoftware/kryo/io/Output/close()|"
    ],
    "v2Body": [
      "|java+constructor:///org/springframework/integration/codec/kryo/AbstractKryoCodec$2/AbstractKryoCodec$2(org.springframework.integration.codec.kryo.AbstractKryoCodec,java.lang.Object,com.esotericsoftware.kryo.io.Output)|",
      "|java+method:///com/esotericsoftware/kryo/pool/KryoPool/run(com.esotericsoftware.kryo.pool.KryoCallback)|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+constructor:///com/esotericsoftware/kryo/io/Output/Output(java.io.OutputStream)|",
      "|java+method:///com/esotericsoftware/kryo/io/Output/close()|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+constructor:///org/springframework/integration/util/MessagingMethodInvokerHelper/MessagingMethodInvokerHelper(java.lang.Object,java.lang.Class,java.lang.String,java.lang.Class,boolean)|",
    "called": "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper/getEvaluationContext(boolean)|",
      "|java+method:///java/util/Map/values()|",
      "|java+constructor:///org/springframework/integration/util/AbstractExpressionEvaluator/AbstractExpressionEvaluator()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/commons/logging/LogFactory/getLog(java.lang.Class)|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper/setDisplayString(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper/prepareEvaluationContext(org.springframework.expression.spel.support.StandardEvaluationContext,java.lang.Object,java.lang.Class)|",
      "|java+method:///java/util/Map/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/LinkedList/add(java.lang.Object)|",
      "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper/findHandlerMethodsForTarget(java.lang.Object,java.lang.Class,java.lang.String,boolean)|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/size()|",
      "|java+method:///java/util/Map/values()|",
      "|java+constructor:///org/springframework/integration/util/AbstractExpressionEvaluator/AbstractExpressionEvaluator()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/commons/logging/LogFactory/getLog(java.lang.Class)|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper/setDisplayString(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/LinkedList/add(java.lang.Object)|",
      "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper/findHandlerMethodsForTarget(java.lang.Object,java.lang.Class,java.lang.String,boolean)|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+constructor:///org/springframework/integration/util/MessagingMethodInvokerHelper/MessagingMethodInvokerHelper(java.lang.Object,java.lang.Class,java.lang.reflect.Method,java.lang.Class,boolean)|",
    "called": "|java+method:///org/springframework/util/Assert/isTrue(boolean,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper/getEvaluationContext(boolean)|",
      "|java+constructor:///org/springframework/integration/util/MessagingMethodInvokerHelper$HandlerMethod/MessagingMethodInvokerHelper$HandlerMethod(java.lang.reflect.Method,boolean)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.Throwable)|",
      "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper/setDisplayString(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/reflect/Method/getReturnType()|",
      "|java+constructor:///org/springframework/integration/util/AbstractExpressionEvaluator/AbstractExpressionEvaluator()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/apache/commons/logging/LogFactory/getLog(java.lang.Class)|",
      "|java+method:///org/springframework/util/Assert/isTrue(boolean,java.lang.String)|",
      "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper/prepareEvaluationContext(org.springframework.expression.spel.support.StandardEvaluationContext,java.lang.Object,java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///org/springframework/integration/util/MessagingMethodInvokerHelper$HandlerMethod/MessagingMethodInvokerHelper$HandlerMethod(java.lang.reflect.Method,boolean)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.Throwable)|",
      "|java+method:///org/springframework/integration/util/MessagingMethodInvokerHelper/setDisplayString(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/springframework/util/Assert/isTrue(boolean,java.lang.String)|",
      "|java+method:///java/lang/reflect/Method/getReturnType()|",
      "|java+constructor:///org/springframework/integration/util/AbstractExpressionEvaluator/AbstractExpressionEvaluator()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/apache/commons/logging/LogFactory/getLog(java.lang.Class)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/gateway/MessagingGatewaySupport/onInit()|",
    "called": "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/integration/history/HistoryWritingMessagePostProcessor/setMessageBuilderFactory(org.springframework.integration.support.MessageBuilderFactory)|",
      "|java+method:///org/springframework/integration/gateway/MessagingGatewaySupport/getMessageBuilderFactory()|",
      "|java+method:///org/springframework/integration/gateway/MessagingGatewaySupport/getBeanFactory()|",
      "|java+method:///org/springframework/integration/core/MessagingTemplate/setBeanFactory(org.springframework.beans.factory.BeanFactory)|",
      "|java+method:///org/springframework/integration/support/converter/SimpleMessageConverter/setBeanFactory(org.springframework.beans.factory.BeanFactory)|",
      "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|",
      "|java+method:///org/springframework/integration/gateway/MessagingGatewaySupport$DefaultRequestMapper/setMessageBuilderFactory(org.springframework.integration.support.MessageBuilderFactory)|",
      "|java+method:///org/springframework/integration/history/HistoryWritingMessagePostProcessor/setTrackableComponent(org.springframework.integration.history.TrackableComponent)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/integration/history/HistoryWritingMessagePostProcessor/setMessageBuilderFactory(org.springframework.integration.support.MessageBuilderFactory)|",
      "|java+method:///org/springframework/integration/gateway/MessagingGatewaySupport$DefaultRequestMapper/setMessageBuilderFactory(org.springframework.integration.support.MessageBuilderFactory)|",
      "|java+method:///org/springframework/integration/gateway/MessagingGatewaySupport/getMessageBuilderFactory()|",
      "|java+method:///org/springframework/integration/history/HistoryWritingMessagePostProcessor/setTrackableComponent(org.springframework.integration.support.management.TrackableComponent)|",
      "|java+method:///org/springframework/integration/gateway/MessagingGatewaySupport/getBeanFactory()|",
      "|java+method:///org/springframework/integration/core/MessagingTemplate/setBeanFactory(org.springframework.beans.factory.BeanFactory)|",
      "|java+method:///org/springframework/integration/support/converter/SimpleMessageConverter/setBeanFactory(org.springframework.beans.factory.BeanFactory)|",
      "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/gateway/MessagingGatewaySupport/doSendAndReceive(java.lang.Object,boolean)|",
    "called": "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/integration/core/MessagingTemplate/convertSendAndReceive(java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.messaging.core.MessagePostProcessor)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(org.springframework.messaging.Message,java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/springframework/messaging/support/ErrorMessage/ErrorMessage(java.lang.Throwable)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/springframework/messaging/Message/getPayload()|",
      "|java+method:///org/springframework/integration/gateway/MessagingGatewaySupport/initializeIfNecessary()|",
      "|java+method:///org/springframework/integration/gateway/MessagingGatewaySupport/registerReplyMessageCorrelator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/integration/mapping/InboundMessageMapper/toMessage(java.lang.Object)|",
      "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(java.lang.String)|",
      "|java+method:///org/springframework/integration/gateway/MessagingGatewaySupport/rethrow(java.lang.Throwable,java.lang.String)|",
      "|java+method:///org/springframework/integration/gateway/MessagingGatewaySupport/getReplyChannel()|",
      "|java+method:///org/springframework/integration/gateway/MessagingGatewaySupport/getErrorChannel()|",
      "|java+method:///org/springframework/messaging/support/ErrorMessage/getPayload()|",
      "|java+method:///org/springframework/integration/core/MessagingTemplate/sendAndReceive(java.lang.Object,org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/integration/gateway/MessagingGatewaySupport/getRequestChannel()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Exception/getMessage()|",
      "|java+method:///org/springframework/integration/history/HistoryWritingMessagePostProcessor/postProcessMessage(org.springframework.messaging.Message)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/integration/core/MessagingTemplate/convertSendAndReceive(java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.messaging.core.MessagePostProcessor)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(org.springframework.messaging.Message,java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/springframework/messaging/support/ErrorMessage/ErrorMessage(java.lang.Throwable)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/springframework/messaging/Message/getPayload()|",
      "|java+method:///org/springframework/integration/gateway/MessagingGatewaySupport/initializeIfNecessary()|",
      "|java+method:///org/springframework/messaging/support/ErrorMessage/getPayload()|",
      "|java+method:///org/springframework/integration/gateway/MessagingGatewaySupport/registerReplyMessageCorrelator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/springframework/integration/MessageTimeoutException/MessageTimeoutException(java.lang.String)|",
      "|java+method:///org/springframework/integration/core/MessagingTemplate/sendAndReceive(org.springframework.messaging.MessageChannel,org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/integration/mapping/InboundMessageMapper/toMessage(java.lang.Object)|",
      "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(java.lang.String)|",
      "|java+method:///org/springframework/integration/gateway/MessagingGatewaySupport/rethrow(java.lang.Throwable,java.lang.String)|",
      "|java+method:///org/springframework/integration/gateway/MessagingGatewaySupport/getReplyChannel()|",
      "|java+method:///org/springframework/integration/gateway/MessagingGatewaySupport/getErrorChannel()|",
      "|java+method:///org/springframework/integration/gateway/MessagingGatewaySupport/getRequestChannel()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/springframework/integration/MessageTimeoutException/MessageTimeoutException(org.springframework.messaging.Message,java.lang.String)|",
      "|java+method:///java/lang/Exception/getMessage()|",
      "|java+method:///org/springframework/integration/history/HistoryWritingMessagePostProcessor/postProcessMessage(org.springframework.messaging.Message)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+constructor:///org/springframework/integration/store/MessageGroupMetadata/MessageGroupMetadata(org.springframework.integration.store.MessageGroup,boolean,java.util.UUID)|",
    "called": "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/integration/store/MessageGroup/getTimestamp()|",
      "|java+method:///org/springframework/integration/store/MessageGroup/size()|",
      "|java+method:///org/springframework/integration/store/MessageGroup/isComplete()|",
      "|java+method:///org/springframework/integration/store/MessageGroup/getGroupId()|",
      "|java+method:///org/springframework/integration/store/MessageGroup/getLastReleasedMessageSequenceNumber()|",
      "|java+method:///org/springframework/integration/store/MessageGroup/getLastModified()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/springframework/messaging/MessageHeaders/getId()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/springframework/messaging/Message/getHeaders()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///org/springframework/integration/store/MessageGroup/getMessages()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/integration/store/MessageGroup/getTimestamp()|",
      "|java+method:///org/springframework/integration/store/MessageGroup/isComplete()|",
      "|java+method:///org/springframework/integration/store/MessageGroup/getGroupId()|",
      "|java+method:///org/springframework/integration/store/MessageGroup/getLastReleasedMessageSequenceNumber()|",
      "|java+method:///org/springframework/integration/store/MessageGroup/getLastModified()|",
      "|java+method:///org/springframework/messaging/MessageHeaders/getId()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/springframework/messaging/Message/getHeaders()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///org/springframework/integration/store/MessageGroup/getMessages()|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/config/ConsumerEndpointFactoryBean/afterPropertiesSet()|",
    "called": "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)|",
    "v1Body": [
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/aop/support/AopUtils/canApply(org.springframework.aop.Pointcut,java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/aop/support/AopUtils/isAopProxy(java.lang.Object)|",
      "|java+method:///org/springframework/integration/config/ConsumerEndpointFactoryBean/initializeEndpoint()|",
      "|java+method:///org/springframework/aop/framework/ProxyFactory/getProxy(java.lang.ClassLoader)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object)|",
      "|java+constructor:///org/springframework/aop/support/NameMatchMethodPointcutAdvisor/NameMatchMethodPointcutAdvisor(org.aopalliance.aop.Advice)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/springframework/aop/framework/ProxyFactory/addAdvice(org.aopalliance.aop.Advice)|",
      "|java+method:///org/springframework/aop/support/AopUtils/getTargetClass(java.lang.Object)|",
      "|java+method:///org/springframework/aop/framework/Advised/getTargetSource()|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/springframework/integration/context/IntegrationObjectSupport/setComponentName(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/aop/TargetSource/getTarget()|",
      "|java+method:///org/springframework/aop/framework/Advised/addAdvice(org.aopalliance.aop.Advice)|",
      "|java+constructor:///org/springframework/aop/framework/ProxyFactory/ProxyFactory(java.lang.Object)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///org/springframework/aop/support/NameMatchMethodPointcutAdvisor/getPointcut()|",
      "|java+constructor:///org/springframework/messaging/core/BeanFactoryMessageChannelDestinationResolver/BeanFactoryMessageChannelDestinationResolver(org.springframework.beans.factory.BeanFactory)|",
      "|java+method:///org/springframework/aop/support/NameMatchMethodPointcutAdvisor/addMethodName(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Exception/getMessage()|",
      "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/aop/support/AopUtils/canApply(org.springframework.aop.Pointcut,java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/aop/support/AopUtils/isAopProxy(java.lang.Object)|",
      "|java+method:///org/springframework/integration/config/ConsumerEndpointFactoryBean/initializeEndpoint()|",
      "|java+method:///org/springframework/aop/framework/ProxyFactory/getProxy(java.lang.ClassLoader)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/springframework/aop/support/NameMatchMethodPointcutAdvisor/NameMatchMethodPointcutAdvisor(org.aopalliance.aop.Advice)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/springframework/aop/framework/ProxyFactory/addAdvice(org.aopalliance.aop.Advice)|",
      "|java+method:///org/springframework/aop/support/AopUtils/getTargetClass(java.lang.Object)|",
      "|java+method:///org/springframework/aop/framework/Advised/getTargetSource()|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/springframework/integration/context/IntegrationObjectSupport/setComponentName(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/aop/TargetSource/getTarget()|",
      "|java+method:///org/springframework/aop/framework/Advised/addAdvice(org.aopalliance.aop.Advice)|",
      "|java+constructor:///org/springframework/aop/framework/ProxyFactory/ProxyFactory(java.lang.Object)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///org/springframework/aop/support/NameMatchMethodPointcutAdvisor/getPointcut()|",
      "|java+constructor:///org/springframework/messaging/core/BeanFactoryMessageChannelDestinationResolver/BeanFactoryMessageChannelDestinationResolver(org.springframework.beans.factory.BeanFactory)|",
      "|java+method:///org/springframework/aop/support/NameMatchMethodPointcutAdvisor/addMethodName(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Exception/getMessage()|",
      "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/endpoint/AbstractMessageSource/receive()|",
    "called": "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Map)|",
    "v1Body": [
      "|java+method:///org/springframework/integration/endpoint/AbstractMessageSource/getMessageBuilderFactory()|",
      "|java+method:///org/springframework/integration/endpoint/AbstractMessageSource/evaluateHeaders()|",
      "|java+method:///org/springframework/integration/support/AbstractIntegrationMessageBuilder/copyHeaders(java.util.Map)|",
      "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/springframework/integration/support/AbstractIntegrationMessageBuilder/build()|",
      "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Map)|",
      "|java+method:///org/springframework/integration/endpoint/AbstractMessageSource/doReceive()|",
      "|java+method:///org/springframework/integration/support/MessageBuilderFactory/withPayload(java.lang.Object)|",
      "|java+method:///org/springframework/integration/support/MessageBuilderFactory/fromMessage(org.springframework.messaging.Message)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/integration/endpoint/AbstractMessageSource/getMessageBuilderFactory()|",
      "|java+method:///org/springframework/integration/endpoint/AbstractMessageSource/evaluateHeaders()|",
      "|java+method:///org/springframework/integration/support/AbstractIntegrationMessageBuilder/copyHeaders(java.util.Map)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/incrementAndGet()|",
      "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/springframework/integration/support/AbstractIntegrationMessageBuilder/build()|",
      "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Map)|",
      "|java+method:///org/springframework/integration/endpoint/AbstractMessageSource/doReceive()|",
      "|java+method:///org/springframework/integration/support/MessageBuilderFactory/withPayload(java.lang.Object)|",
      "|java+method:///org/springframework/integration/support/MessageBuilderFactory/fromMessage(org.springframework.messaging.Message)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/config/annotation/SplitterAnnotationPostProcessor/createHandler(java.lang.Object,java.lang.reflect.Method,java.util.List)|",
    "called": "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/integration/splitter/AbstractMessageSplitter/setApplySequence(boolean)|",
      "|java+method:///org/springframework/core/annotation/AnnotatedElementUtils/isAnnotated(java.lang.reflect.AnnotatedElement,java.lang.String)|",
      "|java+method:///org/springframework/integration/config/annotation/SplitterAnnotationPostProcessor/extractTypeIfPossible(java.lang.Object,java.lang.Class)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/springframework/integration/splitter/MethodInvokingSplitter/MethodInvokingSplitter(java.lang.Object)|",
      "|java+method:///org/springframework/util/Assert/hasText(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/integration/config/annotation/SplitterAnnotationPostProcessor/resolveTargetBeanFromMethodWithBeanAnnotation(java.lang.reflect.Method)|",
      "|java+constructor:///org/springframework/integration/splitter/MethodInvokingSplitter/MethodInvokingSplitter(java.lang.Object,java.lang.reflect.Method)|",
      "|java+method:///org/springframework/integration/util/MessagingAnnotationUtils/resolveAttribute(java.util.List,java.lang.String,java.lang.Class)|",
      "|java+method:///org/springframework/integration/config/annotation/SplitterAnnotationPostProcessor/setOutputChannelIfPresent(java.util.List,org.springframework.integration.handler.AbstractReplyProducingMessageHandler)|",
      "|java+method:///org/springframework/beans/factory/config/ConfigurableListableBeanFactory/resolveEmbeddedValue(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/integration/config/annotation/SplitterAnnotationPostProcessor/resolveTargetBeanName(java.lang.reflect.Method)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/integration/config/annotation/SplitterAnnotationPostProcessor/setOutputChannelIfPresent(java.util.List,org.springframework.integration.handler.AbstractReplyProducingMessageHandler)|",
      "|java+method:///org/springframework/integration/config/annotation/SplitterAnnotationPostProcessor/checkMessageHandlerAttributes(java.lang.String,java.util.List)|",
      "|java+method:///org/springframework/integration/splitter/AbstractMessageSplitter/setApplySequence(boolean)|",
      "|java+method:///org/springframework/core/annotation/AnnotatedElementUtils/isAnnotated(java.lang.reflect.AnnotatedElement,java.lang.String)|",
      "|java+method:///org/springframework/integration/config/annotation/SplitterAnnotationPostProcessor/extractTypeIfPossible(java.lang.Object,java.lang.Class)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/springframework/integration/splitter/MethodInvokingSplitter/MethodInvokingSplitter(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/integration/config/annotation/SplitterAnnotationPostProcessor/resolveTargetBeanFromMethodWithBeanAnnotation(java.lang.reflect.Method)|",
      "|java+constructor:///org/springframework/integration/splitter/MethodInvokingSplitter/MethodInvokingSplitter(java.lang.Object,java.lang.reflect.Method)|",
      "|java+method:///org/springframework/integration/util/MessagingAnnotationUtils/resolveAttribute(java.util.List,java.lang.String,java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/springframework/core/env/Environment/resolvePlaceholders(java.lang.String)|",
      "|java+method:///org/springframework/util/Assert/hasText(java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/channel/AbstractPollableChannel/receive(long)|",
    "called": "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)|",
    "v1Body": [
      "|java+method:///org/springframework/integration/channel/AbstractPollableChannel/doReceive(long)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel$ChannelInterceptorList/postReceive(org.springframework.messaging.Message,org.springframework.messaging.MessageChannel)|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel$ChannelInterceptorList/getInterceptors()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/integration/channel/AbstractPollableChannel/getInterceptors()|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel$ChannelInterceptorList/afterReceiveCompletion(org.springframework.messaging.Message,org.springframework.messaging.MessageChannel,java.lang.Exception,java.util.Deque)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel$ChannelInterceptorList/preReceive(org.springframework.messaging.MessageChannel,java.util.Deque)|",
      "|java+constructor:///java/util/ArrayDeque/ArrayDeque()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/commons/logging/Log/trace(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/commons/logging/Log/isTraceEnabled()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/integration/channel/AbstractPollableChannel/doReceive(long)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel$ChannelInterceptorList/postReceive(org.springframework.messaging.Message,org.springframework.messaging.MessageChannel)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/integration/channel/AbstractPollableChannel/getInterceptors()|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel$ChannelInterceptorList/afterReceiveCompletion(org.springframework.messaging.Message,org.springframework.messaging.MessageChannel,java.lang.Exception,java.util.Deque)|",
      "|java+method:///org/springframework/integration/support/management/AbstractMessageChannelMetrics/afterReceive()|",
      "|java+method:///org/springframework/integration/channel/AbstractPollableChannel/isCountsEnabled()|",
      "|java+method:///org/springframework/integration/channel/AbstractPollableChannel/getMetrics()|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel$ChannelInterceptorList/preReceive(org.springframework.messaging.MessageChannel,java.util.Deque)|",
      "|java+constructor:///java/util/ArrayDeque/ArrayDeque()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/commons/logging/Log/trace(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/commons/logging/Log/isTraceEnabled()|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel$ChannelInterceptorList/getSize()|",
      "|java+method:///org/springframework/integration/support/management/AbstractMessageChannelMetrics/afterError()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/handler/AbstractMessageHandler/handleMessage(org.springframework.messaging.Message)|",
    "called": "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+constructor:///org/springframework/messaging/MessageHandlingException/MessageHandlingException(org.springframework.messaging.Message,java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/springframework/messaging/Message/getPayload()|",
      "|java+method:///org/springframework/integration/history/MessageHistory/write(org.springframework.messaging.Message,org.springframework.integration.support.context.NamedComponent,org.springframework.integration.support.MessageBuilderFactory)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/springframework/integration/handler/AbstractMessageHandler/handleMessageInternal(org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/integration/handler/AbstractMessageHandler/getMessageBuilderFactory()|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+constructor:///org/springframework/messaging/MessageHandlingException/MessageHandlingException(org.springframework.messaging.Message,java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/springframework/integration/history/MessageHistory/write(org.springframework.messaging.Message,org.springframework.integration.support.context.NamedComponent,org.springframework.integration.support.MessageBuilderFactory)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/springframework/integration/handler/AbstractMessageHandler/handleMessageInternal(org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/integration/support/management/AbstractMessageHandlerMetrics/beforeHandle()|",
      "|java+method:///org/springframework/integration/handler/AbstractMessageHandler/getMessageBuilderFactory()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/messaging/Message/getPayload()|",
      "|java+method:///org/springframework/integration/support/management/AbstractMessageHandlerMetrics/afterHandle(org.springframework.integration.support.management.MetricsContext,boolean)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/config/annotation/MessagingAnnotationPostProcessor/afterPropertiesSet()|",
    "called": "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/springframework/integration/config/annotation/FilterAnnotationPostProcessor/FilterAnnotationPostProcessor(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)|",
      "|java+constructor:///org/springframework/integration/config/annotation/BridgeFromAnnotationPostProcessor/BridgeFromAnnotationPostProcessor(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)|",
      "|java+constructor:///org/springframework/integration/config/annotation/ServiceActivatorAnnotationPostProcessor/ServiceActivatorAnnotationPostProcessor(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+constructor:///org/springframework/integration/config/annotation/SplitterAnnotationPostProcessor/SplitterAnnotationPostProcessor(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/springframework/integration/config/annotation/InboundChannelAdapterAnnotationPostProcessor/InboundChannelAdapterAnnotationPostProcessor(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)|",
      "|java+constructor:///org/springframework/integration/config/annotation/BridgeToAnnotationPostProcessor/BridgeToAnnotationPostProcessor(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)|",
      "|java+constructor:///org/springframework/integration/config/annotation/TransformerAnnotationPostProcessor/TransformerAnnotationPostProcessor(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)|",
      "|java+constructor:///org/springframework/integration/config/annotation/AggregatorAnnotationPostProcessor/AggregatorAnnotationPostProcessor(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)|",
      "|java+constructor:///org/springframework/integration/config/annotation/RouterAnnotationPostProcessor/RouterAnnotationPostProcessor(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/springframework/integration/config/annotation/FilterAnnotationPostProcessor/FilterAnnotationPostProcessor(org.springframework.beans.factory.ListableBeanFactory,org.springframework.core.env.Environment)|",
      "|java+constructor:///org/springframework/integration/config/annotation/SplitterAnnotationPostProcessor/SplitterAnnotationPostProcessor(org.springframework.beans.factory.ListableBeanFactory,org.springframework.core.env.Environment)|",
      "|java+constructor:///org/springframework/integration/config/annotation/BridgeFromAnnotationPostProcessor/BridgeFromAnnotationPostProcessor(org.springframework.beans.factory.ListableBeanFactory,org.springframework.core.env.Environment)|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+constructor:///org/springframework/integration/config/annotation/ServiceActivatorAnnotationPostProcessor/ServiceActivatorAnnotationPostProcessor(org.springframework.beans.factory.ListableBeanFactory,org.springframework.core.env.Environment)|",
      "|java+constructor:///org/springframework/integration/config/annotation/AggregatorAnnotationPostProcessor/AggregatorAnnotationPostProcessor(org.springframework.beans.factory.ListableBeanFactory,org.springframework.core.env.Environment)|",
      "|java+constructor:///org/springframework/integration/config/annotation/RouterAnnotationPostProcessor/RouterAnnotationPostProcessor(org.springframework.beans.factory.ListableBeanFactory,org.springframework.core.env.Environment)|",
      "|java+constructor:///org/springframework/integration/config/annotation/InboundChannelAdapterAnnotationPostProcessor/InboundChannelAdapterAnnotationPostProcessor(org.springframework.beans.factory.ListableBeanFactory,org.springframework.core.env.Environment)|",
      "|java+constructor:///org/springframework/integration/config/annotation/BridgeToAnnotationPostProcessor/BridgeToAnnotationPostProcessor(org.springframework.beans.factory.ListableBeanFactory,org.springframework.core.env.Environment)|",
      "|java+constructor:///org/springframework/integration/config/annotation/TransformerAnnotationPostProcessor/TransformerAnnotationPostProcessor(org.springframework.beans.factory.ListableBeanFactory,org.springframework.core.env.Environment)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/aop/MessagePublishingInterceptor/publishMessage(java.lang.reflect.Method,org.springframework.expression.spel.support.StandardEvaluationContext)|",
    "called": "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/integration/core/MessagingTemplate/getDefaultDestination()|",
      "|java+method:///org/springframework/integration/core/MessagingTemplate/send(java.lang.Object,org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/integration/aop/PublisherMetadataSource/getChannelName(java.lang.reflect.Method)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/integration/support/AbstractIntegrationMessageBuilder/copyHeaders(java.util.Map)|",
      "|java+method:///org/springframework/integration/core/MessagingTemplate/send(org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/messaging/core/DestinationResolver/resolveDestination(java.lang.String)|",
      "|java+method:///org/springframework/expression/ExpressionParser/parseExpression(java.lang.String)|",
      "|java+method:///org/springframework/expression/Expression/getValue(org.springframework.expression.EvaluationContext)|",
      "|java+method:///org/springframework/integration/support/AbstractIntegrationMessageBuilder/build()|",
      "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|",
      "|java+method:///org/springframework/integration/support/MessageBuilderFactory/withPayload(java.lang.Object)|",
      "|java+method:///org/springframework/integration/core/MessagingTemplate/setDefaultChannel(org.springframework.messaging.MessageChannel)|",
      "|java+method:///org/springframework/integration/support/MessageBuilderFactory/fromMessage(org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/integration/aop/PublisherMetadataSource/getPayloadExpression(java.lang.reflect.Method)|",
      "|java+method:///org/springframework/integration/aop/MessagePublishingInterceptor/evaluateHeaders(java.lang.reflect.Method,org.springframework.expression.spel.support.StandardEvaluationContext)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/integration/core/MessagingTemplate/getDefaultDestination()|",
      "|java+method:///org/springframework/integration/core/MessagingTemplate/send(java.lang.Object,org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/integration/aop/PublisherMetadataSource/getChannelName(java.lang.reflect.Method)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/integration/support/AbstractIntegrationMessageBuilder/copyHeaders(java.util.Map)|",
      "|java+method:///org/springframework/messaging/core/DestinationResolver/resolveDestination(java.lang.String)|",
      "|java+method:///org/springframework/expression/ExpressionParser/parseExpression(java.lang.String)|",
      "|java+method:///org/springframework/expression/Expression/getValue(org.springframework.expression.EvaluationContext)|",
      "|java+method:///org/springframework/integration/support/AbstractIntegrationMessageBuilder/build()|",
      "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|",
      "|java+method:///org/springframework/integration/aop/MessagePublishingInterceptor/getMessageBuilderFactory()|",
      "|java+method:///org/springframework/integration/core/MessagingTemplate/send(org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/integration/support/MessageBuilderFactory/withPayload(java.lang.Object)|",
      "|java+method:///org/springframework/integration/core/MessagingTemplate/setDefaultChannel(org.springframework.messaging.MessageChannel)|",
      "|java+method:///org/springframework/integration/support/MessageBuilderFactory/fromMessage(org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/integration/aop/PublisherMetadataSource/getPayloadExpression(java.lang.reflect.Method)|",
      "|java+method:///org/springframework/integration/aop/MessagePublishingInterceptor/evaluateHeaders(java.lang.reflect.Method,org.springframework.expression.spel.support.StandardEvaluationContext)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/support/channel/BeanFactoryChannelResolver/resolveDestination(java.lang.String)|",
    "called": "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/integration/support/channel/BeanFactoryChannelResolver/resolveDestination(java.lang.String)|",
      "|java+constructor:///org/springframework/messaging/core/DestinationResolutionException/DestinationResolutionException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/beans/factory/BeanFactory/getBean(java.lang.String,java.lang.Class)|",
      "|java+method:///org/springframework/integration/support/channel/HeaderChannelRegistry/channelNameToChannel(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/integration/support/channel/BeanFactoryChannelResolver/resolveDestination(java.lang.String)|",
      "|java+constructor:///org/springframework/messaging/core/DestinationResolutionException/DestinationResolutionException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/beans/factory/BeanFactory/getBean(java.lang.String,java.lang.Class)|",
      "|java+method:///org/springframework/integration/support/channel/HeaderChannelRegistry/channelNameToChannel(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/endpoint/PollingConsumer/handleMessage(org.springframework.messaging.Message)|",
    "called": "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)|",
    "v1Body": [
      "|java+method:///org/springframework/messaging/MessageHandler/handleMessage(org.springframework.messaging.Message)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/integration/channel/ExecutorChannelInterceptorAware/hasExecutorInterceptors()|",
      "|java+constructor:///org/springframework/messaging/MessageDeliveryException/MessageDeliveryException(org.springframework.messaging.Message,java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/integration/endpoint/PollingConsumer/triggerAfterMessageHandled(org.springframework.messaging.Message,java.lang.Exception,java.util.Deque)|",
      "|java+method:///org/springframework/messaging/MessageHandler/handleMessage(org.springframework.messaging.Message)|",
      "|java+constructor:///java/util/ArrayDeque/ArrayDeque()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/integration/endpoint/PollingConsumer/applyBeforeHandle(org.springframework.messaging.Message,java.util.Deque)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/gateway/GatewayProxyFactoryBean/onInit()|",
    "called": "|java+method:///org/springframework/util/ReflectionUtils/getAllDeclaredMethods(java.lang.Class)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/springframework/integration/gateway/GatewayProxyFactoryBean/createGatewayForMethod(java.lang.reflect.Method)|",
      "|java+method:///org/springframework/integration/gateway/GatewayProxyFactoryBean/determineServiceInterface()|",
      "|java+method:///org/springframework/util/ReflectionUtils/getAllDeclaredMethods(java.lang.Class)|",
      "|java+method:///org/springframework/integration/gateway/GatewayProxyFactoryBean/getBeanFactory()|",
      "|java+constructor:///org/springframework/integration/support/channel/BeanFactoryChannelResolver/BeanFactoryChannelResolver(org.springframework.beans.factory.BeanFactory)|",
      "|java+method:///org/springframework/aop/framework/ProxyFactory/getProxy(java.lang.ClassLoader)|",
      "|java+constructor:///org/springframework/aop/framework/ProxyFactory/ProxyFactory(java.lang.Class,org.aopalliance.intercept.Interceptor)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/springframework/core/task/AsyncListenableTaskExecutor/submitListenable(java.util.concurrent.Callable)|",
      "|java+method:///org/springframework/core/task/AsyncTaskExecutor/submit(java.util.concurrent.Callable)|",
      "|java+method:///org/springframework/integration/gateway/GatewayProxyFactoryBean/start()|",
      "|java+constructor:///org/springframework/integration/gateway/GatewayProxyFactoryBean$1/GatewayProxyFactoryBean$1(org.springframework.integration.gateway.GatewayProxyFactoryBean)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/springframework/integration/gateway/GatewayProxyFactoryBean/createGatewayForMethod(java.lang.reflect.Method)|",
      "|java+method:///org/springframework/integration/gateway/GatewayProxyFactoryBean/determineServiceInterface()|",
      "|java+method:///org/springframework/util/ReflectionUtils/getAllDeclaredMethods(java.lang.Class)|",
      "|java+method:///org/springframework/integration/gateway/GatewayProxyFactoryBean/getBeanFactory()|",
      "|java+constructor:///org/springframework/integration/support/channel/BeanFactoryChannelResolver/BeanFactoryChannelResolver(org.springframework.beans.factory.BeanFactory)|",
      "|java+method:///org/springframework/aop/framework/ProxyFactory/getProxy(java.lang.ClassLoader)|",
      "|java+constructor:///org/springframework/integration/gateway/GatewayProxyFactoryBean$1/GatewayProxyFactoryBean$1(org.springframework.integration.gateway.GatewayProxyFactoryBean)|",
      "|java+constructor:///org/springframework/aop/framework/ProxyFactory/ProxyFactory(java.lang.Class,org.aopalliance.intercept.Interceptor)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/springframework/core/task/AsyncListenableTaskExecutor/submitListenable(java.util.concurrent.Callable)|",
      "|java+method:///org/springframework/core/task/AsyncTaskExecutor/submit(java.util.concurrent.Callable)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/aggregator/AbstractAggregatingMessageGroupProcessor/processMessageGroup(org.springframework.integration.store.MessageGroup)|",
    "called": "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/integration/aggregator/AbstractAggregatingMessageGroupProcessor/aggregateHeaders(org.springframework.integration.store.MessageGroup)|",
      "|java+method:///org/springframework/integration/support/AbstractIntegrationMessageBuilder/copyHeadersIfAbsent(java.util.Map)|",
      "|java+method:///org/springframework/integration/support/MessageBuilderFactory/withPayload(java.lang.Object)|",
      "|java+method:///org/springframework/integration/support/MessageBuilderFactory/fromMessage(org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/integration/support/AbstractIntegrationMessageBuilder/popSequenceDetails()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///org/springframework/integration/support/AbstractIntegrationMessageBuilder/build()|",
      "|java+method:///org/springframework/integration/aggregator/AbstractAggregatingMessageGroupProcessor/aggregatePayloads(org.springframework.integration.store.MessageGroup,java.util.Map)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/integration/aggregator/AbstractAggregatingMessageGroupProcessor/getMessageBuilderFactory()|",
      "|java+method:///org/springframework/integration/aggregator/AbstractAggregatingMessageGroupProcessor/aggregateHeaders(org.springframework.integration.store.MessageGroup)|",
      "|java+method:///org/springframework/integration/support/AbstractIntegrationMessageBuilder/copyHeadersIfAbsent(java.util.Map)|",
      "|java+method:///org/springframework/integration/support/MessageBuilderFactory/withPayload(java.lang.Object)|",
      "|java+method:///org/springframework/integration/support/MessageBuilderFactory/fromMessage(org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/integration/support/AbstractIntegrationMessageBuilder/popSequenceDetails()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///org/springframework/integration/support/AbstractIntegrationMessageBuilder/build()|",
      "|java+method:///org/springframework/integration/aggregator/AbstractAggregatingMessageGroupProcessor/aggregatePayloads(org.springframework.integration.store.MessageGroup,java.util.Map)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.2.1.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/gateway/GatewayProxyFactoryBean/invoke(org.aopalliance.intercept.MethodInvocation)|",
    "called": "|java+method:///reactor/rx/Promises/task(reactor.Environment,reactor.fn.Supplier)|",
    "v1Body": [
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///org/aopalliance/intercept/MethodInvocation/getMethod()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///reactor/core/composable/spec/PromiseSpec/env(reactor.core.Environment)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///reactor/function/Functions/supplier(java.util.concurrent.Callable)|",
      "|java+method:///java/lang/reflect/Method/getReturnType()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/springframework/integration/gateway/GatewayProxyFactoryBean$AsyncInvocationTask/GatewayProxyFactoryBean$AsyncInvocationTask(org.springframework.integration.gateway.GatewayProxyFactoryBean,org.aopalliance.intercept.MethodInvocation,org.springframework.integration.gateway.GatewayProxyFactoryBean$1)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///reactor/core/composable/spec/PromiseSpec/get()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///java/lang/Class/getSimpleName()|",
      "|java+method:///org/springframework/core/task/AsyncListenableTaskExecutor/submitListenable(java.util.concurrent.Callable)|",
      "|java+method:///org/springframework/core/task/AsyncTaskExecutor/submit(java.util.concurrent.Callable)|",
      "|java+method:///org/springframework/integration/gateway/GatewayProxyFactoryBean/doInvoke(org.aopalliance.intercept.MethodInvocation)|",
      "|java+method:///reactor/core/composable/spec/Promises/task(reactor.function.Supplier)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///reactor/rx/Promises/task(reactor.Environment,reactor.fn.Supplier)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///java/lang/reflect/Method/getReturnType()|",
      "|java+method:///org/springframework/integration/gateway/GatewayProxyFactoryBean/doInvoke(org.aopalliance.intercept.MethodInvocation,boolean)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/springframework/integration/gateway/GatewayProxyFactoryBean$AsyncInvocationTask/GatewayProxyFactoryBean$AsyncInvocationTask(org.springframework.integration.gateway.GatewayProxyFactoryBean,org.aopalliance.intercept.MethodInvocation,org.springframework.integration.gateway.GatewayProxyFactoryBean$1)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///reactor/fn/Functions/supplier(java.util.concurrent.Callable)|",
      "|java+method:///org/aopalliance/intercept/MethodInvocation/getMethod()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///java/lang/Class/getSimpleName()|",
      "|java+method:///org/springframework/core/task/AsyncListenableTaskExecutor/submitListenable(java.util.concurrent.Callable)|",
      "|java+method:///org/springframework/core/task/AsyncTaskExecutor/submit(java.util.concurrent.Callable)|"
    ],
    "affectedLib": "io.projectreactor:reactor-stream:2.0.5.RELEASE",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/config/annotation/MessagingAnnotationPostProcessor$1/doWith(java.lang.reflect.Method)|",
    "called": "|java+method:///org/springframework/aop/support/AopUtils/isJdkDynamicProxy(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/springframework/integration/config/annotation/MethodAnnotationPostProcessor/shouldCreateEndpoint(java.lang.reflect.Method,java.util.List)|",
      "|java+method:///org/springframework/beans/factory/config/ConfigurableListableBeanFactory/registerSingleton(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/springframework/beans/factory/config/ConfigurableListableBeanFactory/resolveEmbeddedValue(java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///org/springframework/beans/factory/BeanInitializationException/BeanInitializationException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/springframework/integration/config/annotation/MessagingAnnotationPostProcessor/access$200(org.springframework.integration.config.annotation.MessagingAnnotationPostProcessor)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/springframework/integration/config/annotation/MessagingAnnotationPostProcessor/access$500(org.springframework.integration.config.annotation.MessagingAnnotationPostProcessor)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/springframework/integration/endpoint/AbstractEndpoint/isAutoStartup()|",
      "|java+method:///org/springframework/integration/endpoint/AbstractEndpoint/setPhase(int)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/springframework/integration/config/annotation/MessagingAnnotationPostProcessor/access$100(org.springframework.integration.config.annotation.MessagingAnnotationPostProcessor,java.lang.reflect.Method,java.lang.Class)|",
      "|java+method:///org/springframework/integration/util/MessagingAnnotationUtils/resolveAttribute(java.util.List,java.lang.String,java.lang.Class)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/integration/config/annotation/MethodAnnotationPostProcessor/postProcess(java.lang.Object,java.lang.String,java.lang.reflect.Method,java.util.List)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/springframework/integration/endpoint/AbstractEndpoint/setBeanFactory(org.springframework.beans.factory.BeanFactory)|",
      "|java+method:///org/springframework/core/annotation/AnnotatedElementUtils/isAnnotated(java.lang.reflect.AnnotatedElement,java.lang.String)|",
      "|java+method:///org/springframework/integration/endpoint/AbstractEndpoint/afterPropertiesSet()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///org/springframework/integration/config/annotation/MessagingAnnotationPostProcessor/access$000(org.springframework.integration.config.annotation.MessagingAnnotationPostProcessor)|",
      "|java+method:///org/springframework/integration/endpoint/AbstractEndpoint/setBeanName(java.lang.String)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///org/springframework/integration/endpoint/AbstractEndpoint/setAutoStartup(boolean)|",
      "|java+method:///org/springframework/integration/config/annotation/MessagingAnnotationPostProcessor/access$400(org.springframework.integration.config.annotation.MessagingAnnotationPostProcessor)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/springframework/integration/endpoint/AbstractEndpoint/start()|",
      "|java+method:///org/springframework/integration/config/annotation/MessagingAnnotationPostProcessor/access$300(org.springframework.integration.config.annotation.MessagingAnnotationPostProcessor,java.lang.String,java.lang.reflect.Method,java.lang.Class)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/integration/config/annotation/MethodAnnotationPostProcessor/shouldCreateEndpoint(java.lang.reflect.Method,java.util.List)|",
      "|java+method:///org/springframework/beans/factory/config/ConfigurableListableBeanFactory/registerSingleton(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/core/annotation/AnnotationUtils/findAnnotation(java.lang.reflect.Method,java.lang.Class)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/springframework/core/annotation/AnnotatedElementUtils/isAnnotated(java.lang.reflect.AnnotatedElement,java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/springframework/integration/config/annotation/MessagingAnnotationPostProcessor/access$500(org.springframework.integration.config.annotation.MessagingAnnotationPostProcessor)|",
      "|java+method:///java/lang/reflect/Method/getParameterTypes()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/integration/endpoint/AbstractEndpoint/setPhase(int)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/springframework/integration/config/annotation/MessagingAnnotationPostProcessor/access$100(org.springframework.integration.config.annotation.MessagingAnnotationPostProcessor,java.lang.reflect.Method,java.lang.Class)|",
      "|java+method:///org/springframework/integration/util/MessagingAnnotationUtils/resolveAttribute(java.util.List,java.lang.String,java.lang.Class)|",
      "|java+method:///java/lang/Class/getMethod(java.lang.String,java.lang.Class%5B%5D)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/integration/config/annotation/MethodAnnotationPostProcessor/postProcess(java.lang.Object,java.lang.String,java.lang.reflect.Method,java.util.List)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/springframework/util/MultiValueMap/add(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/springframework/integration/annotation/Role/value()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///org/springframework/integration/config/annotation/MessagingAnnotationPostProcessor/access$000(org.springframework.integration.config.annotation.MessagingAnnotationPostProcessor)|",
      "|java+method:///org/springframework/integration/endpoint/AbstractEndpoint/setBeanName(java.lang.String)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///org/springframework/beans/factory/config/ConfigurableListableBeanFactory/initializeBean(java.lang.Object,java.lang.String)|",
      "|java+method:///org/springframework/aop/support/AopUtils/isJdkDynamicProxy(java.lang.Object)|",
      "|java+method:///java/lang/reflect/Method/getName()|",
      "|java+method:///org/springframework/integration/config/annotation/MessagingAnnotationPostProcessor/access$200(org.springframework.integration.config.annotation.MessagingAnnotationPostProcessor)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/integration/endpoint/AbstractEndpoint/setAutoStartup(boolean)|",
      "|java+method:///org/springframework/integration/config/annotation/MessagingAnnotationPostProcessor/access$400(org.springframework.integration.config.annotation.MessagingAnnotationPostProcessor)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/springframework/core/env/Environment/resolvePlaceholders(java.lang.String)|",
      "|java+method:///org/springframework/integration/config/annotation/MessagingAnnotationPostProcessor/access$300(org.springframework.integration.config.annotation.MessagingAnnotationPostProcessor,java.lang.String,java.lang.reflect.Method,java.lang.Class)|"
    ],
    "affectedLib": "org.springframework:spring-aop:4.2.1.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/config/ConsumerEndpointFactoryBean/afterPropertiesSet()|",
    "called": "|java+constructor:///org/springframework/aop/framework/ProxyFactory/ProxyFactory(java.lang.Object)|",
    "v1Body": [
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/aop/support/AopUtils/canApply(org.springframework.aop.Pointcut,java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/aop/support/AopUtils/isAopProxy(java.lang.Object)|",
      "|java+method:///org/springframework/integration/config/ConsumerEndpointFactoryBean/initializeEndpoint()|",
      "|java+method:///org/springframework/aop/framework/ProxyFactory/getProxy(java.lang.ClassLoader)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object)|",
      "|java+constructor:///org/springframework/aop/support/NameMatchMethodPointcutAdvisor/NameMatchMethodPointcutAdvisor(org.aopalliance.aop.Advice)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/springframework/aop/framework/ProxyFactory/addAdvice(org.aopalliance.aop.Advice)|",
      "|java+method:///org/springframework/aop/support/AopUtils/getTargetClass(java.lang.Object)|",
      "|java+method:///org/springframework/aop/framework/Advised/getTargetSource()|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/springframework/integration/context/IntegrationObjectSupport/setComponentName(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/aop/TargetSource/getTarget()|",
      "|java+method:///org/springframework/aop/framework/Advised/addAdvice(org.aopalliance.aop.Advice)|",
      "|java+constructor:///org/springframework/aop/framework/ProxyFactory/ProxyFactory(java.lang.Object)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///org/springframework/aop/support/NameMatchMethodPointcutAdvisor/getPointcut()|",
      "|java+constructor:///org/springframework/messaging/core/BeanFactoryMessageChannelDestinationResolver/BeanFactoryMessageChannelDestinationResolver(org.springframework.beans.factory.BeanFactory)|",
      "|java+method:///org/springframework/aop/support/NameMatchMethodPointcutAdvisor/addMethodName(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Exception/getMessage()|",
      "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/aop/support/AopUtils/canApply(org.springframework.aop.Pointcut,java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/aop/support/AopUtils/isAopProxy(java.lang.Object)|",
      "|java+method:///org/springframework/integration/config/ConsumerEndpointFactoryBean/initializeEndpoint()|",
      "|java+method:///org/springframework/aop/framework/ProxyFactory/getProxy(java.lang.ClassLoader)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/springframework/aop/support/NameMatchMethodPointcutAdvisor/NameMatchMethodPointcutAdvisor(org.aopalliance.aop.Advice)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/springframework/aop/framework/ProxyFactory/addAdvice(org.aopalliance.aop.Advice)|",
      "|java+method:///org/springframework/aop/support/AopUtils/getTargetClass(java.lang.Object)|",
      "|java+method:///org/springframework/aop/framework/Advised/getTargetSource()|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/springframework/integration/context/IntegrationObjectSupport/setComponentName(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/aop/TargetSource/getTarget()|",
      "|java+method:///org/springframework/aop/framework/Advised/addAdvice(org.aopalliance.aop.Advice)|",
      "|java+constructor:///org/springframework/aop/framework/ProxyFactory/ProxyFactory(java.lang.Object)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///org/springframework/aop/support/NameMatchMethodPointcutAdvisor/getPointcut()|",
      "|java+constructor:///org/springframework/messaging/core/BeanFactoryMessageChannelDestinationResolver/BeanFactoryMessageChannelDestinationResolver(org.springframework.beans.factory.BeanFactory)|",
      "|java+method:///org/springframework/aop/support/NameMatchMethodPointcutAdvisor/addMethodName(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Exception/getMessage()|",
      "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)|"
    ],
    "affectedLib": "org.springframework:spring-aop:4.2.1.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/gateway/GatewayProxyFactoryBean/onInit()|",
    "called": "|java+method:///org/springframework/aop/framework/ProxyFactory/getProxy(java.lang.ClassLoader)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/springframework/integration/gateway/GatewayProxyFactoryBean/createGatewayForMethod(java.lang.reflect.Method)|",
      "|java+method:///org/springframework/integration/gateway/GatewayProxyFactoryBean/determineServiceInterface()|",
      "|java+method:///org/springframework/util/ReflectionUtils/getAllDeclaredMethods(java.lang.Class)|",
      "|java+method:///org/springframework/integration/gateway/GatewayProxyFactoryBean/getBeanFactory()|",
      "|java+constructor:///org/springframework/integration/support/channel/BeanFactoryChannelResolver/BeanFactoryChannelResolver(org.springframework.beans.factory.BeanFactory)|",
      "|java+method:///org/springframework/aop/framework/ProxyFactory/getProxy(java.lang.ClassLoader)|",
      "|java+constructor:///org/springframework/aop/framework/ProxyFactory/ProxyFactory(java.lang.Class,org.aopalliance.intercept.Interceptor)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/springframework/core/task/AsyncListenableTaskExecutor/submitListenable(java.util.concurrent.Callable)|",
      "|java+method:///org/springframework/core/task/AsyncTaskExecutor/submit(java.util.concurrent.Callable)|",
      "|java+method:///org/springframework/integration/gateway/GatewayProxyFactoryBean/start()|",
      "|java+constructor:///org/springframework/integration/gateway/GatewayProxyFactoryBean$1/GatewayProxyFactoryBean$1(org.springframework.integration.gateway.GatewayProxyFactoryBean)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/springframework/integration/gateway/GatewayProxyFactoryBean/createGatewayForMethod(java.lang.reflect.Method)|",
      "|java+method:///org/springframework/integration/gateway/GatewayProxyFactoryBean/determineServiceInterface()|",
      "|java+method:///org/springframework/util/ReflectionUtils/getAllDeclaredMethods(java.lang.Class)|",
      "|java+method:///org/springframework/integration/gateway/GatewayProxyFactoryBean/getBeanFactory()|",
      "|java+constructor:///org/springframework/integration/support/channel/BeanFactoryChannelResolver/BeanFactoryChannelResolver(org.springframework.beans.factory.BeanFactory)|",
      "|java+method:///org/springframework/aop/framework/ProxyFactory/getProxy(java.lang.ClassLoader)|",
      "|java+constructor:///org/springframework/integration/gateway/GatewayProxyFactoryBean$1/GatewayProxyFactoryBean$1(org.springframework.integration.gateway.GatewayProxyFactoryBean)|",
      "|java+constructor:///org/springframework/aop/framework/ProxyFactory/ProxyFactory(java.lang.Class,org.aopalliance.intercept.Interceptor)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/springframework/core/task/AsyncListenableTaskExecutor/submitListenable(java.util.concurrent.Callable)|",
      "|java+method:///org/springframework/core/task/AsyncTaskExecutor/submit(java.util.concurrent.Callable)|"
    ],
    "affectedLib": "org.springframework:spring-aop:4.2.1.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/config/annotation/AbstractMethodAnnotationPostProcessor/postProcess(java.lang.Object,java.lang.String,java.lang.reflect.Method,java.util.List)|",
    "called": "|java+constructor:///org/springframework/aop/framework/ProxyFactory/ProxyFactory(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/springframework/aop/support/DefaultBeanFactoryPointcutAdvisor/setBeanFactory(org.springframework.beans.factory.BeanFactory)|",
      "|java+method:///org/springframework/integration/annotation/IdempotentReceiver/value()|",
      "|java+method:///org/springframework/beans/factory/config/ConfigurableListableBeanFactory/registerSingleton(java.lang.String,java.lang.Object)|",
      "|java+method:///org/springframework/integration/config/annotation/AbstractMethodAnnotationPostProcessor/createEndpoint(org.springframework.messaging.MessageHandler,java.lang.reflect.Method,java.util.List)|",
      "|java+constructor:///org/springframework/aop/support/DefaultBeanFactoryPointcutAdvisor/DefaultBeanFactoryPointcutAdvisor()|",
      "|java+method:///org/springframework/core/annotation/AnnotationUtils/findAnnotation(java.lang.reflect.Method,java.lang.Class)|",
      "|java+method:///org/springframework/integration/config/annotation/AbstractMethodAnnotationPostProcessor/resolveTargetBeanFromMethodWithBeanAnnotation(java.lang.reflect.Method)|",
      "|java+method:///org/springframework/integration/config/annotation/AbstractMethodAnnotationPostProcessor/beanAnnotationAware()|",
      "|java+method:///org/springframework/integration/config/annotation/AbstractMethodAnnotationPostProcessor/createHandler(java.lang.Object,java.lang.reflect.Method,java.util.List)|",
      "|java+method:///org/springframework/beans/factory/config/ConfigurableListableBeanFactory/getBeanClassLoader()|",
      "|java+method:///org/springframework/aop/support/DefaultBeanFactoryPointcutAdvisor/setPointcut(org.springframework.aop.Pointcut)|",
      "|java+method:///org/springframework/aop/support/DefaultBeanFactoryPointcutAdvisor/setAdviceBeanName(java.lang.String)|",
      "|java+method:///org/springframework/core/annotation/AnnotationUtils/getAnnotation(java.lang.reflect.Method,java.lang.Class)|",
      "|java+method:///org/springframework/aop/support/NameMatchMethodPointcut/setMappedName(java.lang.String)|",
      "|java+method:///org/springframework/integration/context/Orderable/setOrder(int)|",
      "|java+method:///org/springframework/aop/framework/Advised/addAdvisor(org.springframework.aop.Advisor)|",
      "|java+method:///org/springframework/aop/framework/ProxyFactory/getProxy(java.lang.ClassLoader)|",
      "|java+method:///org/springframework/core/annotation/AnnotatedElementUtils/isAnnotated(java.lang.reflect.AnnotatedElement,java.lang.String)|",
      "|java+method:///org/springframework/integration/config/annotation/AbstractMethodAnnotationPostProcessor/setAdviceChainIfPresent(java.lang.String,java.util.List,org.springframework.messaging.MessageHandler)|",
      "|java+method:///org/springframework/aop/framework/ProxyFactory/addAdvisor(org.springframework.aop.Advisor)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///org/springframework/beans/factory/config/ConfigurableListableBeanFactory/initializeBean(java.lang.Object,java.lang.String)|",
      "|java+method:///org/springframework/integration/config/annotation/AbstractMethodAnnotationPostProcessor/generateHandlerBeanName(java.lang.String,java.lang.reflect.Method)|",
      "|java+method:///org/springframework/core/annotation/Order/value()|",
      "|java+constructor:///org/springframework/aop/framework/ProxyFactory/ProxyFactory(java.lang.Object)|",
      "|java+constructor:///org/springframework/aop/support/NameMatchMethodPointcut/NameMatchMethodPointcut()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/aop/support/DefaultBeanFactoryPointcutAdvisor/setBeanFactory(org.springframework.beans.factory.BeanFactory)|",
      "|java+method:///org/springframework/beans/factory/config/ConfigurableListableBeanFactory/registerSingleton(java.lang.String,java.lang.Object)|",
      "|java+method:///org/springframework/integration/config/annotation/AbstractMethodAnnotationPostProcessor/createEndpoint(org.springframework.messaging.MessageHandler,java.lang.reflect.Method,java.util.List)|",
      "|java+constructor:///org/springframework/aop/support/DefaultBeanFactoryPointcutAdvisor/DefaultBeanFactoryPointcutAdvisor()|",
      "|java+method:///org/springframework/integration/util/MessagingAnnotationUtils/resolveAttribute(java.util.List,java.lang.String,java.lang.Class)|",
      "|java+method:///org/springframework/core/annotation/AnnotationUtils/findAnnotation(java.lang.reflect.Method,java.lang.Class)|",
      "|java+method:///org/springframework/integration/config/annotation/AbstractMethodAnnotationPostProcessor/resolveTargetBeanFromMethodWithBeanAnnotation(java.lang.reflect.Method)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/springframework/integration/config/annotation/AbstractMethodAnnotationPostProcessor/beanAnnotationAware()|",
      "|java+method:///org/springframework/integration/config/annotation/AbstractMethodAnnotationPostProcessor/createHandler(java.lang.Object,java.lang.reflect.Method,java.util.List)|",
      "|java+method:///org/springframework/beans/factory/config/ConfigurableListableBeanFactory/getBeanClassLoader()|",
      "|java+method:///org/springframework/core/annotation/AnnotationUtils/getAnnotation(java.lang.reflect.Method,java.lang.Class)|",
      "|java+method:///java/lang/Long/valueOf(java.lang.String)|",
      "|java+method:///org/springframework/aop/support/NameMatchMethodPointcut/setMappedName(java.lang.String)|",
      "|java+method:///org/springframework/integration/router/AbstractMessageRouter/setTimeout(long)|",
      "|java+method:///org/springframework/integration/annotation/IdempotentReceiver/value()|",
      "|java+method:///org/springframework/integration/context/Orderable/setOrder(int)|",
      "|java+method:///org/springframework/aop/framework/Advised/addAdvisor(org.springframework.aop.Advisor)|",
      "|java+method:///org/springframework/aop/framework/ProxyFactory/getProxy(java.lang.ClassLoader)|",
      "|java+method:///org/springframework/core/annotation/AnnotatedElementUtils/isAnnotated(java.lang.reflect.AnnotatedElement,java.lang.String)|",
      "|java+method:///org/springframework/integration/config/annotation/AbstractMethodAnnotationPostProcessor/setAdviceChainIfPresent(java.lang.String,java.util.List,org.springframework.messaging.MessageHandler)|",
      "|java+method:///org/springframework/aop/framework/ProxyFactory/addAdvisor(org.springframework.aop.Advisor)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///org/springframework/beans/factory/config/ConfigurableListableBeanFactory/initializeBean(java.lang.Object,java.lang.String)|",
      "|java+method:///org/springframework/integration/config/annotation/AbstractMethodAnnotationPostProcessor/generateHandlerBeanName(java.lang.String,java.lang.reflect.Method)|",
      "|java+method:///org/springframework/core/annotation/Order/value()|",
      "|java+constructor:///org/springframework/aop/framework/ProxyFactory/ProxyFactory(java.lang.Object)|",
      "|java+constructor:///org/springframework/aop/support/NameMatchMethodPointcut/NameMatchMethodPointcut()|",
      "|java+method:///org/springframework/integration/handler/AbstractMessageProducingHandler/setSendTimeout(long)|",
      "|java+method:///org/springframework/aop/support/DefaultBeanFactoryPointcutAdvisor/setPointcut(org.springframework.aop.Pointcut)|",
      "|java+method:///org/springframework/core/env/Environment/resolvePlaceholders(java.lang.String)|",
      "|java+method:///org/springframework/aop/support/DefaultBeanFactoryPointcutAdvisor/setAdviceBeanName(java.lang.String)|"
    ],
    "affectedLib": "org.springframework:spring-aop:4.2.1.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/endpoint/AbstractPollingEndpoint/createPoller()|",
    "called": "|java+constructor:///org/springframework/aop/framework/ProxyFactory/ProxyFactory(java.lang.Object)|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/aop/framework/ProxyFactory/getProxy(java.lang.ClassLoader)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/springframework/aop/framework/ProxyFactory/ProxyFactory(java.lang.Object)|",
      "|java+constructor:///org/springframework/integration/endpoint/AbstractPollingEndpoint$Poller/AbstractPollingEndpoint$Poller(org.springframework.integration.endpoint.AbstractPollingEndpoint,java.util.concurrent.Callable)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)|",
      "|java+method:///org/springframework/aop/framework/ProxyFactory/addAdvice(org.aopalliance.aop.Advice)|",
      "|java+constructor:///org/springframework/integration/endpoint/AbstractPollingEndpoint$1/AbstractPollingEndpoint$1(org.springframework.integration.endpoint.AbstractPollingEndpoint)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/springframework/integration/endpoint/AbstractPollingEndpoint/isReceiveOnlyAdvice(org.aopalliance.aop.Advice)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/springframework/aop/framework/ProxyFactory/getProxy(java.lang.ClassLoader)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/springframework/integration/endpoint/AbstractPollingEndpoint/applyReceiveOnlyAdviceChain(java.util.Collection)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/springframework/aop/framework/ProxyFactory/ProxyFactory(java.lang.Object)|",
      "|java+constructor:///org/springframework/integration/endpoint/AbstractPollingEndpoint$Poller/AbstractPollingEndpoint$Poller(org.springframework.integration.endpoint.AbstractPollingEndpoint,java.util.concurrent.Callable)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)|",
      "|java+method:///org/springframework/aop/framework/ProxyFactory/addAdvice(org.aopalliance.aop.Advice)|",
      "|java+constructor:///org/springframework/integration/endpoint/AbstractPollingEndpoint$1/AbstractPollingEndpoint$1(org.springframework.integration.endpoint.AbstractPollingEndpoint)|"
    ],
    "affectedLib": "org.springframework:spring-aop:4.2.1.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/handler/advice/RequestHandlerRetryAdvice/doInvoke(org.springframework.integration.handler.advice.AbstractRequestHandlerAdvice$ExecutionCallback,java.lang.Object,org.springframework.messaging.Message)|",
    "called": "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(org.springframework.messaging.Message,java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///java/lang/ThreadLocal/set(java.lang.Object)|",
      "|java+method:///org/springframework/integration/handler/advice/RetryStateGenerator/determineRetryState(org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/integration/handler/advice/RequestHandlerRetryAdvice/unwrapExceptionIfNecessary(java.lang.Exception)|",
      "|java+method:///org/springframework/messaging/MessagingException/getFailedMessage()|",
      "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(org.springframework.messaging.Message,java.lang.Throwable)|",
      "|java+method:///java/lang/ThreadLocal/remove()|",
      "|java+method:///org/springframework/retry/support/RetryTemplate/execute(org.springframework.retry.RetryCallback,org.springframework.retry.RecoveryCallback,org.springframework.retry.RetryState)|",
      "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(org.springframework.messaging.Message,java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///org/springframework/integration/handler/advice/RequestHandlerRetryAdvice$2/RequestHandlerRetryAdvice$2(org.springframework.integration.handler.advice.RequestHandlerRetryAdvice,org.springframework.integration.handler.advice.AbstractRequestHandlerAdvice$ExecutionCallback)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/ThreadLocal/set(java.lang.Object)|",
      "|java+method:///org/springframework/integration/handler/advice/RetryStateGenerator/determineRetryState(org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/integration/handler/advice/RequestHandlerRetryAdvice/unwrapExceptionIfNecessary(java.lang.Exception)|",
      "|java+method:///org/springframework/messaging/MessagingException/getFailedMessage()|",
      "|java+method:///java/lang/ThreadLocal/remove()|",
      "|java+method:///org/springframework/retry/support/RetryTemplate/execute(org.springframework.retry.RetryCallback,org.springframework.retry.RecoveryCallback,org.springframework.retry.RetryState)|",
      "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(org.springframework.messaging.Message,java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///org/springframework/integration/handler/advice/RequestHandlerRetryAdvice$2/RequestHandlerRetryAdvice$2(org.springframework.integration.handler.advice.RequestHandlerRetryAdvice,org.springframework.integration.handler.advice.AbstractRequestHandlerAdvice$ExecutionCallback)|"
    ],
    "affectedLib": "org.springframework:spring-messaging:4.2.1.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/gateway/GatewayProxyFactoryBean$AsyncInvocationTask/call()|",
    "called": "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/springframework/integration/gateway/GatewayProxyFactoryBean/access$200(org.springframework.integration.gateway.GatewayProxyFactoryBean,org.aopalliance.intercept.MethodInvocation)|",
      "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(java.lang.String,java.lang.Throwable)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/integration/gateway/GatewayProxyFactoryBean/doInvoke(org.aopalliance.intercept.MethodInvocation,boolean)|",
      "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(java.lang.String,java.lang.Throwable)|"
    ],
    "affectedLib": "org.springframework:spring-messaging:4.2.1.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/aggregator/AbstractAggregatingMessageGroupProcessor/aggregateHeaders(org.springframework.integration.store.MessageGroup)|",
    "called": "|java+method:///org/springframework/messaging/MessageHeaders/entrySet()|",
    "v1Body": [
      "|java+method:///org/springframework/messaging/MessageHeaders/get(java.lang.Object)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/springframework/integration/store/MessageGroup/getGroupId()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///org/springframework/integration/store/MessageGroup/getMessages()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///java/util/Map/remove(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/springframework/messaging/Message/getHeaders()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/springframework/messaging/MessageHeaders/keySet()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/springframework/integration/store/MessageGroup/getGroupId()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///org/springframework/integration/store/MessageGroup/getMessages()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///java/util/Map/remove(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/springframework/messaging/Message/getHeaders()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/springframework/messaging/MessageHeaders/entrySet()|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/Map$Entry/getValue()|"
    ],
    "affectedLib": "org.springframework:spring-messaging:4.2.1.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/gateway/MessagingGatewaySupport/doSendAndReceive(java.lang.Object,boolean)|",
    "called": "|java+constructor:///org/springframework/messaging/support/ErrorMessage/ErrorMessage(java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/springframework/integration/core/MessagingTemplate/convertSendAndReceive(java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.messaging.core.MessagePostProcessor)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(org.springframework.messaging.Message,java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/springframework/messaging/support/ErrorMessage/ErrorMessage(java.lang.Throwable)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/springframework/messaging/Message/getPayload()|",
      "|java+method:///org/springframework/integration/gateway/MessagingGatewaySupport/initializeIfNecessary()|",
      "|java+method:///org/springframework/integration/gateway/MessagingGatewaySupport/registerReplyMessageCorrelator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/integration/mapping/InboundMessageMapper/toMessage(java.lang.Object)|",
      "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(java.lang.String)|",
      "|java+method:///org/springframework/integration/gateway/MessagingGatewaySupport/rethrow(java.lang.Throwable,java.lang.String)|",
      "|java+method:///org/springframework/integration/gateway/MessagingGatewaySupport/getReplyChannel()|",
      "|java+method:///org/springframework/integration/gateway/MessagingGatewaySupport/getErrorChannel()|",
      "|java+method:///org/springframework/messaging/support/ErrorMessage/getPayload()|",
      "|java+method:///org/springframework/integration/core/MessagingTemplate/sendAndReceive(java.lang.Object,org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/integration/gateway/MessagingGatewaySupport/getRequestChannel()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Exception/getMessage()|",
      "|java+method:///org/springframework/integration/history/HistoryWritingMessagePostProcessor/postProcessMessage(org.springframework.messaging.Message)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/integration/core/MessagingTemplate/convertSendAndReceive(java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.messaging.core.MessagePostProcessor)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(org.springframework.messaging.Message,java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/springframework/messaging/support/ErrorMessage/ErrorMessage(java.lang.Throwable)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/springframework/messaging/Message/getPayload()|",
      "|java+method:///org/springframework/integration/gateway/MessagingGatewaySupport/initializeIfNecessary()|",
      "|java+method:///org/springframework/messaging/support/ErrorMessage/getPayload()|",
      "|java+method:///org/springframework/integration/gateway/MessagingGatewaySupport/registerReplyMessageCorrelator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/springframework/integration/MessageTimeoutException/MessageTimeoutException(java.lang.String)|",
      "|java+method:///org/springframework/integration/core/MessagingTemplate/sendAndReceive(org.springframework.messaging.MessageChannel,org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/integration/mapping/InboundMessageMapper/toMessage(java.lang.Object)|",
      "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(java.lang.String)|",
      "|java+method:///org/springframework/integration/gateway/MessagingGatewaySupport/rethrow(java.lang.Throwable,java.lang.String)|",
      "|java+method:///org/springframework/integration/gateway/MessagingGatewaySupport/getReplyChannel()|",
      "|java+method:///org/springframework/integration/gateway/MessagingGatewaySupport/getErrorChannel()|",
      "|java+method:///org/springframework/integration/gateway/MessagingGatewaySupport/getRequestChannel()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/springframework/integration/MessageTimeoutException/MessageTimeoutException(org.springframework.messaging.Message,java.lang.String)|",
      "|java+method:///java/lang/Exception/getMessage()|",
      "|java+method:///org/springframework/integration/history/HistoryWritingMessagePostProcessor/postProcessMessage(org.springframework.messaging.Message)|"
    ],
    "affectedLib": "org.springframework:spring-messaging:4.2.1.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/splitter/AbstractMessageSplitter/handleRequestMessage(org.springframework.messaging.Message)|",
    "called": "|java+method:///org/springframework/messaging/MessageHeaders/getId()|",
    "v1Body": [
      "|java+constructor:///org/springframework/integration/util/FunctionIterator/FunctionIterator(java.util.Iterator,reactor.function.Function)|",
      "|java+constructor:///java/util/HashMap/HashMap(java.util.Map)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/springframework/integration/splitter/AbstractMessageSplitter$1/AbstractMessageSplitter$1(org.springframework.integration.splitter.AbstractMessageSplitter,java.util.Map,java.lang.Object,java.util.concurrent.atomic.AtomicInteger,int)|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///org/springframework/messaging/MessageHeaders/getId()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/springframework/integration/splitter/AbstractMessageSplitter/willAddHeaders(org.springframework.messaging.Message)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicInteger/AtomicInteger(int)|",
      "|java+method:///org/springframework/integration/splitter/AbstractMessageSplitter/addHeaders(org.springframework.messaging.Message,java.util.Map)|",
      "|java+method:///org/springframework/integration/splitter/AbstractMessageSplitter/splitMessage(org.springframework.messaging.Message)|",
      "|java+method:///java/lang/Class/isArray()|",
      "|java+method:///org/springframework/messaging/Message/getHeaders()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/util/Collections/singleton(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|"
    ],
    "v2Body": [
      "|java+constructor:///org/springframework/integration/util/FunctionIterator/FunctionIterator(java.util.Iterator,org.springframework.integration.util.Function)|",
      "|java+constructor:///java/util/HashMap/HashMap(java.util.Map)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/springframework/integration/splitter/AbstractMessageSplitter$1/AbstractMessageSplitter$1(org.springframework.integration.splitter.AbstractMessageSplitter,java.util.Map,java.lang.Object,java.util.concurrent.atomic.AtomicInteger,int)|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///org/springframework/messaging/MessageHeaders/getId()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/springframework/integration/splitter/AbstractMessageSplitter/willAddHeaders(org.springframework.messaging.Message)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicInteger/AtomicInteger(int)|",
      "|java+method:///org/springframework/integration/splitter/AbstractMessageSplitter/addHeaders(org.springframework.messaging.Message,java.util.Map)|",
      "|java+method:///org/springframework/integration/splitter/AbstractMessageSplitter/splitMessage(org.springframework.messaging.Message)|",
      "|java+method:///java/lang/Class/isArray()|",
      "|java+method:///org/springframework/messaging/Message/getHeaders()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/util/Collections/singleton(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|"
    ],
    "affectedLib": "org.springframework:spring-messaging:4.2.1.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/dispatcher/BroadcastingDispatcher/invokeHandler(org.springframework.messaging.MessageHandler,org.springframework.messaging.Message)|",
    "called": "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(org.springframework.messaging.Message,java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/apache/commons/logging/Log/warn(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/springframework/messaging/MessageHandler/handleMessage(org.springframework.messaging.Message)|",
      "|java+method:///org/apache/commons/logging/Log/isWarnEnabled()|",
      "|java+method:///org/springframework/messaging/MessagingException/getFailedMessage()|",
      "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(org.springframework.messaging.Message,java.lang.Throwable)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/messaging/MessagingException/getFailedMessage()|",
      "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(org.springframework.messaging.Message,java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/logging/Log/warn(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/springframework/messaging/MessageHandler/handleMessage(org.springframework.messaging.Message)|",
      "|java+method:///org/apache/commons/logging/Log/isWarnEnabled()|"
    ],
    "affectedLib": "org.springframework:spring-messaging:4.2.1.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+constructor:///org/springframework/integration/store/MessageGroupMetadata/MessageGroupMetadata(org.springframework.integration.store.MessageGroup,boolean,java.util.UUID)|",
    "called": "|java+method:///org/springframework/messaging/MessageHeaders/getId()|",
    "v1Body": [
      "|java+method:///org/springframework/integration/store/MessageGroup/getTimestamp()|",
      "|java+method:///org/springframework/integration/store/MessageGroup/size()|",
      "|java+method:///org/springframework/integration/store/MessageGroup/isComplete()|",
      "|java+method:///org/springframework/integration/store/MessageGroup/getGroupId()|",
      "|java+method:///org/springframework/integration/store/MessageGroup/getLastReleasedMessageSequenceNumber()|",
      "|java+method:///org/springframework/integration/store/MessageGroup/getLastModified()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/springframework/messaging/MessageHeaders/getId()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/springframework/messaging/Message/getHeaders()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///org/springframework/integration/store/MessageGroup/getMessages()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/integration/store/MessageGroup/getTimestamp()|",
      "|java+method:///org/springframework/integration/store/MessageGroup/isComplete()|",
      "|java+method:///org/springframework/integration/store/MessageGroup/getGroupId()|",
      "|java+method:///org/springframework/integration/store/MessageGroup/getLastReleasedMessageSequenceNumber()|",
      "|java+method:///org/springframework/integration/store/MessageGroup/getLastModified()|",
      "|java+method:///org/springframework/messaging/MessageHeaders/getId()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/springframework/messaging/Message/getHeaders()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///org/springframework/integration/store/MessageGroup/getMessages()|"
    ],
    "affectedLib": "org.springframework:spring-messaging:4.2.1.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/config/ConsumerEndpointFactoryBean/afterPropertiesSet()|",
    "called": "|java+constructor:///org/springframework/messaging/core/BeanFactoryMessageChannelDestinationResolver/BeanFactoryMessageChannelDestinationResolver(org.springframework.beans.factory.BeanFactory)|",
    "v1Body": [
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/aop/support/AopUtils/canApply(org.springframework.aop.Pointcut,java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/aop/support/AopUtils/isAopProxy(java.lang.Object)|",
      "|java+method:///org/springframework/integration/config/ConsumerEndpointFactoryBean/initializeEndpoint()|",
      "|java+method:///org/springframework/aop/framework/ProxyFactory/getProxy(java.lang.ClassLoader)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object)|",
      "|java+constructor:///org/springframework/aop/support/NameMatchMethodPointcutAdvisor/NameMatchMethodPointcutAdvisor(org.aopalliance.aop.Advice)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/springframework/aop/framework/ProxyFactory/addAdvice(org.aopalliance.aop.Advice)|",
      "|java+method:///org/springframework/aop/support/AopUtils/getTargetClass(java.lang.Object)|",
      "|java+method:///org/springframework/aop/framework/Advised/getTargetSource()|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/springframework/integration/context/IntegrationObjectSupport/setComponentName(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/aop/TargetSource/getTarget()|",
      "|java+method:///org/springframework/aop/framework/Advised/addAdvice(org.aopalliance.aop.Advice)|",
      "|java+constructor:///org/springframework/aop/framework/ProxyFactory/ProxyFactory(java.lang.Object)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///org/springframework/aop/support/NameMatchMethodPointcutAdvisor/getPointcut()|",
      "|java+constructor:///org/springframework/messaging/core/BeanFactoryMessageChannelDestinationResolver/BeanFactoryMessageChannelDestinationResolver(org.springframework.beans.factory.BeanFactory)|",
      "|java+method:///org/springframework/aop/support/NameMatchMethodPointcutAdvisor/addMethodName(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Exception/getMessage()|",
      "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/aop/support/AopUtils/canApply(org.springframework.aop.Pointcut,java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/aop/support/AopUtils/isAopProxy(java.lang.Object)|",
      "|java+method:///org/springframework/integration/config/ConsumerEndpointFactoryBean/initializeEndpoint()|",
      "|java+method:///org/springframework/aop/framework/ProxyFactory/getProxy(java.lang.ClassLoader)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/springframework/aop/support/NameMatchMethodPointcutAdvisor/NameMatchMethodPointcutAdvisor(org.aopalliance.aop.Advice)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/springframework/aop/framework/ProxyFactory/addAdvice(org.aopalliance.aop.Advice)|",
      "|java+method:///org/springframework/aop/support/AopUtils/getTargetClass(java.lang.Object)|",
      "|java+method:///org/springframework/aop/framework/Advised/getTargetSource()|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/springframework/integration/context/IntegrationObjectSupport/setComponentName(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/aop/TargetSource/getTarget()|",
      "|java+method:///org/springframework/aop/framework/Advised/addAdvice(org.aopalliance.aop.Advice)|",
      "|java+constructor:///org/springframework/aop/framework/ProxyFactory/ProxyFactory(java.lang.Object)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///org/springframework/aop/support/NameMatchMethodPointcutAdvisor/getPointcut()|",
      "|java+constructor:///org/springframework/messaging/core/BeanFactoryMessageChannelDestinationResolver/BeanFactoryMessageChannelDestinationResolver(org.springframework.beans.factory.BeanFactory)|",
      "|java+method:///org/springframework/aop/support/NameMatchMethodPointcutAdvisor/addMethodName(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Exception/getMessage()|",
      "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)|"
    ],
    "affectedLib": "org.springframework:spring-messaging:4.2.1.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/dispatcher/BroadcastingDispatcher/dispatch(org.springframework.messaging.Message)|",
    "called": "|java+method:///org/springframework/messaging/MessageHeaders/getId()|",
    "v1Body": [
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/springframework/integration/dispatcher/BroadcastingDispatcher/invokeHandler(org.springframework.messaging.MessageHandler,org.springframework.messaging.Message)|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///org/springframework/messaging/MessageHeaders/getId()|",
      "|java+constructor:///org/springframework/integration/MessageDispatchingException/MessageDispatchingException(org.springframework.messaging.Message,java.lang.String)|",
      "|java+method:///org/springframework/integration/support/MessageBuilderFactory/fromMessage(org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/integration/dispatcher/BroadcastingDispatcher/getHandlers()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///java/util/concurrent/Executor/execute(java.lang.Runnable)|",
      "|java+method:///org/springframework/messaging/Message/getHeaders()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/springframework/integration/dispatcher/BroadcastingDispatcher$1/BroadcastingDispatcher$1(org.springframework.integration.dispatcher.BroadcastingDispatcher,org.springframework.messaging.MessageHandler,org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/integration/support/AbstractIntegrationMessageBuilder/build()|",
      "|java+method:///org/springframework/integration/support/AbstractIntegrationMessageBuilder/pushSequenceDetails(java.lang.Object,int,int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/springframework/integration/dispatcher/BroadcastingDispatcher/invokeHandler(org.springframework.messaging.MessageHandler,org.springframework.messaging.Message)|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///org/springframework/messaging/MessageHeaders/getId()|",
      "|java+constructor:///org/springframework/integration/MessageDispatchingException/MessageDispatchingException(org.springframework.messaging.Message,java.lang.String)|",
      "|java+method:///org/springframework/integration/support/MessageBuilderFactory/fromMessage(org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/integration/dispatcher/BroadcastingDispatcher/getHandlers()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///java/util/concurrent/Executor/execute(java.lang.Runnable)|",
      "|java+method:///org/springframework/messaging/Message/getHeaders()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/springframework/integration/dispatcher/BroadcastingDispatcher/createMessageHandlingTask(org.springframework.messaging.MessageHandler,org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/integration/support/AbstractIntegrationMessageBuilder/build()|",
      "|java+method:///org/springframework/integration/dispatcher/BroadcastingDispatcher/getMessageBuilderFactory()|",
      "|java+method:///org/springframework/integration/support/AbstractIntegrationMessageBuilder/pushSequenceDetails(java.lang.Object,int,int)|"
    ],
    "affectedLib": "org.springframework:spring-messaging:4.2.1.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/endpoint/AbstractMessageSource/receive()|",
    "called": "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/springframework/integration/endpoint/AbstractMessageSource/getMessageBuilderFactory()|",
      "|java+method:///org/springframework/integration/endpoint/AbstractMessageSource/evaluateHeaders()|",
      "|java+method:///org/springframework/integration/support/AbstractIntegrationMessageBuilder/copyHeaders(java.util.Map)|",
      "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/springframework/integration/support/AbstractIntegrationMessageBuilder/build()|",
      "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Map)|",
      "|java+method:///org/springframework/integration/endpoint/AbstractMessageSource/doReceive()|",
      "|java+method:///org/springframework/integration/support/MessageBuilderFactory/withPayload(java.lang.Object)|",
      "|java+method:///org/springframework/integration/support/MessageBuilderFactory/fromMessage(org.springframework.messaging.Message)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/integration/endpoint/AbstractMessageSource/getMessageBuilderFactory()|",
      "|java+method:///org/springframework/integration/endpoint/AbstractMessageSource/evaluateHeaders()|",
      "|java+method:///org/springframework/integration/support/AbstractIntegrationMessageBuilder/copyHeaders(java.util.Map)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/incrementAndGet()|",
      "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/springframework/integration/support/AbstractIntegrationMessageBuilder/build()|",
      "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Map)|",
      "|java+method:///org/springframework/integration/endpoint/AbstractMessageSource/doReceive()|",
      "|java+method:///org/springframework/integration/support/MessageBuilderFactory/withPayload(java.lang.Object)|",
      "|java+method:///org/springframework/integration/support/MessageBuilderFactory/fromMessage(org.springframework.messaging.Message)|"
    ],
    "affectedLib": "org.springframework:spring-messaging:4.2.1.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/endpoint/SourcePollingChannelAdapter/handleMessage(org.springframework.messaging.Message)|",
    "called": "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(org.springframework.messaging.Message,java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(org.springframework.messaging.Message,java.lang.Throwable)|",
      "|java+method:///org/springframework/integration/core/MessagingTemplate/send(java.lang.Object,org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/integration/endpoint/SourcePollingChannelAdapter/getMessageBuilderFactory()|",
      "|java+method:///org/springframework/integration/history/MessageHistory/write(org.springframework.messaging.Message,org.springframework.integration.support.context.NamedComponent,org.springframework.integration.support.MessageBuilderFactory)|"
    ],
    "v2Body": [
      "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(org.springframework.messaging.Message,java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/springframework/integration/core/MessagingTemplate/send(java.lang.Object,org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/integration/endpoint/SourcePollingChannelAdapter/getMessageBuilderFactory()|",
      "|java+method:///org/springframework/integration/history/MessageHistory/write(org.springframework.messaging.Message,org.springframework.integration.support.context.NamedComponent,org.springframework.integration.support.MessageBuilderFactory)|"
    ],
    "affectedLib": "org.springframework:spring-messaging:4.2.1.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/endpoint/MessageProducerSupport/sendMessage(org.springframework.messaging.Message)|",
    "called": "|java+constructor:///org/springframework/messaging/support/ErrorMessage/ErrorMessage(java.lang.Throwable)|",
    "v1Body": [
      "|java+constructor:///org/springframework/messaging/MessageDeliveryException/MessageDeliveryException(org.springframework.messaging.Message,java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/springframework/integration/core/MessagingTemplate/send(java.lang.Object,org.springframework.messaging.Message)|",
      "|java+constructor:///org/springframework/messaging/support/ErrorMessage/ErrorMessage(java.lang.Throwable)|",
      "|java+method:///org/springframework/integration/history/MessageHistory/write(org.springframework.messaging.Message,org.springframework.integration.support.context.NamedComponent,org.springframework.integration.support.MessageBuilderFactory)|",
      "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(java.lang.String)|",
      "|java+method:///org/springframework/integration/endpoint/MessageProducerSupport/getMessageBuilderFactory()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/integration/core/MessagingTemplate/send(java.lang.Object,org.springframework.messaging.Message)|",
      "|java+constructor:///org/springframework/messaging/support/ErrorMessage/ErrorMessage(java.lang.Throwable)|",
      "|java+method:///org/springframework/integration/history/MessageHistory/write(org.springframework.messaging.Message,org.springframework.integration.support.context.NamedComponent,org.springframework.integration.support.MessageBuilderFactory)|",
      "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(java.lang.String)|",
      "|java+method:///org/springframework/integration/endpoint/MessageProducerSupport/getMessageBuilderFactory()|"
    ],
    "affectedLib": "org.springframework:spring-messaging:4.2.1.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/channel/FixedSubscriberChannel/send(org.springframework.messaging.Message,long)|",
    "called": "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(org.springframework.messaging.Message,java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+constructor:///org/springframework/messaging/MessageDeliveryException/MessageDeliveryException(org.springframework.messaging.Message,java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/springframework/integration/channel/FixedSubscriberChannel/getComponentName()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/messaging/MessageHandler/handleMessage(org.springframework.messaging.Message)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/messaging/MessagingException/getFailedMessage()|",
      "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(org.springframework.messaging.Message,java.lang.Throwable)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/messaging/MessagingException/getFailedMessage()|",
      "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(org.springframework.messaging.Message,java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/springframework/messaging/MessageHandler/handleMessage(org.springframework.messaging.Message)|"
    ],
    "affectedLib": "org.springframework:spring-messaging:4.2.1.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/handler/AbstractMessageHandler/handleMessage(org.springframework.messaging.Message)|",
    "called": "|java+constructor:///org/springframework/messaging/MessageHandlingException/MessageHandlingException(org.springframework.messaging.Message,java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+constructor:///org/springframework/messaging/MessageHandlingException/MessageHandlingException(org.springframework.messaging.Message,java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/springframework/messaging/Message/getPayload()|",
      "|java+method:///org/springframework/integration/history/MessageHistory/write(org.springframework.messaging.Message,org.springframework.integration.support.context.NamedComponent,org.springframework.integration.support.MessageBuilderFactory)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/springframework/integration/handler/AbstractMessageHandler/handleMessageInternal(org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/integration/handler/AbstractMessageHandler/getMessageBuilderFactory()|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+constructor:///org/springframework/messaging/MessageHandlingException/MessageHandlingException(org.springframework.messaging.Message,java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/springframework/integration/history/MessageHistory/write(org.springframework.messaging.Message,org.springframework.integration.support.context.NamedComponent,org.springframework.integration.support.MessageBuilderFactory)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/springframework/integration/handler/AbstractMessageHandler/handleMessageInternal(org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/integration/support/management/AbstractMessageHandlerMetrics/beforeHandle()|",
      "|java+method:///org/springframework/integration/handler/AbstractMessageHandler/getMessageBuilderFactory()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/messaging/Message/getPayload()|",
      "|java+method:///org/springframework/integration/support/management/AbstractMessageHandlerMetrics/afterHandle(org.springframework.integration.support.management.MetricsContext,boolean)|"
    ],
    "affectedLib": "org.springframework:spring-messaging:4.2.1.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/support/channel/BeanFactoryChannelResolver/resolveDestination(java.lang.String)|",
    "called": "|java+constructor:///org/springframework/messaging/core/DestinationResolutionException/DestinationResolutionException(java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/integration/support/channel/BeanFactoryChannelResolver/resolveDestination(java.lang.String)|",
      "|java+constructor:///org/springframework/messaging/core/DestinationResolutionException/DestinationResolutionException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/beans/factory/BeanFactory/getBean(java.lang.String,java.lang.Class)|",
      "|java+method:///org/springframework/integration/support/channel/HeaderChannelRegistry/channelNameToChannel(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/integration/support/channel/BeanFactoryChannelResolver/resolveDestination(java.lang.String)|",
      "|java+constructor:///org/springframework/messaging/core/DestinationResolutionException/DestinationResolutionException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/beans/factory/BeanFactory/getBean(java.lang.String,java.lang.Class)|",
      "|java+method:///org/springframework/integration/support/channel/HeaderChannelRegistry/channelNameToChannel(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|"
    ],
    "affectedLib": "org.springframework:spring-messaging:4.2.1.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/channel/AbstractMessageChannel/send(org.springframework.messaging.Message,long)|",
    "called": "|java+constructor:///org/springframework/messaging/MessageDeliveryException/MessageDeliveryException(org.springframework.messaging.Message,java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel/convertPayloadIfNecessary(org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel$ChannelInterceptorList/afterSendCompletion(org.springframework.messaging.Message,org.springframework.messaging.MessageChannel,boolean,java.lang.Exception,java.util.Deque)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+constructor:///org/springframework/messaging/MessageDeliveryException/MessageDeliveryException(org.springframework.messaging.Message,java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/springframework/messaging/Message/getPayload()|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel/getComponentName()|",
      "|java+method:///java/lang/StringBuilder/append(boolean)|",
      "|java+constructor:///java/util/ArrayDeque/ArrayDeque()|",
      "|java+method:///org/springframework/integration/history/MessageHistory/write(org.springframework.messaging.Message,org.springframework.integration.support.context.NamedComponent,org.springframework.integration.support.MessageBuilderFactory)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel$ChannelInterceptorList/postSend(org.springframework.messaging.Message,org.springframework.messaging.MessageChannel,boolean)|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel/getMessageBuilderFactory()|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel/doSend(org.springframework.messaging.Message,long)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel$ChannelInterceptorList/preSend(org.springframework.messaging.Message,org.springframework.messaging.MessageChannel,java.util.Deque)|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel$ChannelInterceptorList/getSize()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel/convertPayloadIfNecessary(org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel$ChannelInterceptorList/afterSendCompletion(org.springframework.messaging.Message,org.springframework.messaging.MessageChannel,boolean,java.lang.Exception,java.util.Deque)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+constructor:///org/springframework/messaging/MessageDeliveryException/MessageDeliveryException(org.springframework.messaging.Message,java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/springframework/integration/support/management/AbstractMessageChannelMetrics/afterSend(org.springframework.integration.support.management.MetricsContext,boolean)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/springframework/messaging/Message/getPayload()|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel/getComponentName()|",
      "|java+method:///java/lang/StringBuilder/append(boolean)|",
      "|java+constructor:///java/util/ArrayDeque/ArrayDeque()|",
      "|java+method:///org/springframework/integration/history/MessageHistory/write(org.springframework.messaging.Message,org.springframework.integration.support.context.NamedComponent,org.springframework.integration.support.MessageBuilderFactory)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/integration/support/management/AbstractMessageChannelMetrics/beforeSend()|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel$ChannelInterceptorList/postSend(org.springframework.messaging.Message,org.springframework.messaging.MessageChannel,boolean)|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel/getMessageBuilderFactory()|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel/doSend(org.springframework.messaging.Message,long)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel$ChannelInterceptorList/preSend(org.springframework.messaging.Message,org.springframework.messaging.MessageChannel,java.util.Deque)|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/springframework/integration/channel/AbstractMessageChannel$ChannelInterceptorList/getSize()|"
    ],
    "affectedLib": "org.springframework:spring-messaging:4.2.1.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/endpoint/PollingConsumer/handleMessage(org.springframework.messaging.Message)|",
    "called": "|java+constructor:///org/springframework/messaging/MessageDeliveryException/MessageDeliveryException(org.springframework.messaging.Message,java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/springframework/messaging/MessageHandler/handleMessage(org.springframework.messaging.Message)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/integration/channel/ExecutorChannelInterceptorAware/hasExecutorInterceptors()|",
      "|java+constructor:///org/springframework/messaging/MessageDeliveryException/MessageDeliveryException(org.springframework.messaging.Message,java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/integration/endpoint/PollingConsumer/triggerAfterMessageHandled(org.springframework.messaging.Message,java.lang.Exception,java.util.Deque)|",
      "|java+method:///org/springframework/messaging/MessageHandler/handleMessage(org.springframework.messaging.Message)|",
      "|java+constructor:///java/util/ArrayDeque/ArrayDeque()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/integration/endpoint/PollingConsumer/applyBeforeHandle(org.springframework.messaging.Message,java.util.Deque)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/util/CollectionUtils/isEmpty(java.util.Collection)|"
    ],
    "affectedLib": "org.springframework:spring-messaging:4.2.1.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/dispatcher/AbstractDispatcher/wrapExceptionIfNecessary(org.springframework.messaging.Message,java.lang.Exception)|",
    "called": "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(org.springframework.messaging.Message,java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+constructor:///org/springframework/messaging/MessageDeliveryException/MessageDeliveryException(org.springframework.messaging.Message,java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/springframework/messaging/MessagingException/getFailedMessage()|",
      "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(org.springframework.messaging.Message,java.lang.Throwable)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/messaging/MessagingException/getFailedMessage()|",
      "|java+constructor:///org/springframework/messaging/MessageDeliveryException/MessageDeliveryException(org.springframework.messaging.Message,java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(org.springframework.messaging.Message,java.lang.String,java.lang.Throwable)|"
    ],
    "affectedLib": "org.springframework:spring-messaging:4.2.1.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/handler/advice/ErrorMessageSendingRecoverer/recover(org.springframework.retry.RetryContext)|",
    "called": "|java+constructor:///org/springframework/messaging/support/ErrorMessage/ErrorMessage(java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///org/springframework/integration/handler/advice/ErrorMessageSendingRecoverer$RetryExceptionNotAvailableException/ErrorMessageSendingRecoverer$RetryExceptionNotAvailableException(org.springframework.messaging.Message,java.lang.String)|",
      "|java+constructor:///org/springframework/messaging/support/ErrorMessage/ErrorMessage(java.lang.Throwable)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/springframework/integration/core/MessagingTemplate/send(org.springframework.messaging.Message)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/retry/RetryContext/getAttribute(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/messaging/MessagingException/getFailedMessage()|",
      "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(org.springframework.messaging.Message,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/retry/RetryContext/getLastThrowable()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/messaging/MessagingException/getFailedMessage()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object,java.lang.Throwable)|",
      "|java+constructor:///org/springframework/messaging/MessagingException/MessagingException(org.springframework.messaging.Message,java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///org/springframework/integration/handler/advice/ErrorMessageSendingRecoverer$RetryExceptionNotAvailableException/ErrorMessageSendingRecoverer$RetryExceptionNotAvailableException(org.springframework.messaging.Message,java.lang.String)|",
      "|java+constructor:///org/springframework/messaging/support/ErrorMessage/ErrorMessage(java.lang.Throwable)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///java/lang/Throwable/getMessage()|",
      "|java+method:///org/springframework/integration/core/MessagingTemplate/send(org.springframework.messaging.Message)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/retry/RetryContext/getAttribute(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/retry/RetryContext/getLastThrowable()|"
    ],
    "affectedLib": "org.springframework:spring-messaging:4.2.1.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/util/AbstractExpressionEvaluator/setBeanFactory(org.springframework.beans.factory.BeanFactory)|",
    "called": "|java+constructor:///org/springframework/context/expression/BeanFactoryResolver/BeanFactoryResolver(org.springframework.beans.factory.BeanFactory)|",
    "v1Body": [
      "|java+method:///org/springframework/expression/spel/support/StandardEvaluationContext/setBeanResolver(org.springframework.expression.BeanResolver)|",
      "|java+constructor:///org/springframework/context/expression/BeanFactoryResolver/BeanFactoryResolver(org.springframework.beans.factory.BeanFactory)|",
      "|java+method:///org/springframework/expression/spel/support/StandardEvaluationContext/getBeanResolver()|",
      "|java+method:///org/springframework/integration/support/utils/IntegrationUtils/getMessageBuilderFactory(org.springframework.beans.factory.BeanFactory)|",
      "|java+method:///org/springframework/integration/util/BeanFactoryTypeConverter/setBeanFactory(org.springframework.beans.factory.BeanFactory)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/expression/spel/support/StandardEvaluationContext/setBeanResolver(org.springframework.expression.BeanResolver)|",
      "|java+constructor:///org/springframework/context/expression/BeanFactoryResolver/BeanFactoryResolver(org.springframework.beans.factory.BeanFactory)|",
      "|java+method:///org/springframework/expression/spel/support/StandardEvaluationContext/getBeanResolver()|",
      "|java+method:///org/springframework/integration/util/BeanFactoryTypeConverter/setBeanFactory(org.springframework.beans.factory.BeanFactory)|"
    ],
    "affectedLib": "org.springframework:spring-context:4.2.1.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework.integration:spring-integration-core:4.1.9.RELEASE",
    "coordinatesV2": "org.springframework.integration:spring-integration-core:4.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/integration/config/annotation/AbstractMethodAnnotationPostProcessor/configurePollingEndpoint(org.springframework.integration.endpoint.AbstractPollingEndpoint,java.util.List)|",
    "called": "|java+constructor:///org/springframework/scheduling/support/CronTrigger/CronTrigger(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/getMaxMessagesPerPoll()|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/setTaskExecutor(java.util.concurrent.Executor)|",
      "|java+method:///org/springframework/integration/annotation/Poller/value()|",
      "|java+method:///org/springframework/util/ObjectUtils/isEmpty(java.lang.Object%5B%5D)|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/setTrigger(org.springframework.scheduling.Trigger)|",
      "|java+method:///org/springframework/beans/factory/config/ConfigurableListableBeanFactory/resolveEmbeddedValue(java.lang.String)|",
      "|java+method:///org/springframework/scheduling/support/PeriodicTrigger/setFixedRate(boolean)|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/setMaxMessagesPerPoll(long)|",
      "|java+method:///org/springframework/integration/endpoint/PollingConsumer/setReceiveTimeout(long)|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/getReceiveTimeout()|",
      "|java+method:///org/springframework/integration/endpoint/AbstractPollingEndpoint/setAdviceChain(java.util.List)|",
      "|java+method:///org/springframework/integration/endpoint/AbstractPollingEndpoint/setTrigger(org.springframework.scheduling.Trigger)|",
      "|java+method:///org/springframework/integration/endpoint/AbstractPollingEndpoint/setMaxMessagesPerPoll(long)|",
      "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/getDefaultPollerMetadata(org.springframework.beans.factory.BeanFactory)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/getTransactionSynchronizationFactory()|",
      "|java+method:///org/springframework/integration/annotation/Poller/fixedRate()|",
      "|java+method:///org/springframework/integration/util/MessagingAnnotationUtils/resolveAttribute(java.util.List,java.lang.String,java.lang.Class)|",
      "|java+method:///org/springframework/beans/factory/config/ConfigurableListableBeanFactory/getBean(java.lang.String,java.lang.Class)|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/getAdviceChain()|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/getTaskExecutor()|",
      "|java+method:///org/springframework/integration/annotation/Poller/maxMessagesPerPoll()|",
      "|java+method:///org/springframework/integration/annotation/Poller/trigger()|",
      "|java+constructor:///org/springframework/scheduling/support/CronTrigger/CronTrigger(java.lang.String)|",
      "|java+method:///org/springframework/integration/annotation/Poller/cron()|",
      "|java+method:///org/springframework/integration/endpoint/AbstractPollingEndpoint/setErrorHandler(org.springframework.util.ErrorHandler)|",
      "|java+method:///org/springframework/integration/annotation/Poller/fixedDelay()|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/getErrorHandler()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///org/springframework/integration/endpoint/AbstractPollingEndpoint/setTaskExecutor(java.util.concurrent.Executor)|",
      "|java+method:///org/springframework/integration/annotation/Poller/taskExecutor()|",
      "|java+constructor:///org/springframework/integration/scheduling/PollerMetadata/PollerMetadata()|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/getTrigger()|",
      "|java+method:///org/springframework/integration/endpoint/AbstractPollingEndpoint/setTransactionSynchronizationFactory(org.springframework.integration.transaction.TransactionSynchronizationFactory)|",
      "|java+constructor:///org/springframework/scheduling/support/PeriodicTrigger/PeriodicTrigger(long)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/getMaxMessagesPerPoll()|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/setTaskExecutor(java.util.concurrent.Executor)|",
      "|java+method:///org/springframework/integration/annotation/Poller/value()|",
      "|java+method:///org/springframework/util/ObjectUtils/isEmpty(java.lang.Object%5B%5D)|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/setTrigger(org.springframework.scheduling.Trigger)|",
      "|java+method:///org/springframework/scheduling/support/PeriodicTrigger/setFixedRate(boolean)|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/setMaxMessagesPerPoll(long)|",
      "|java+method:///org/springframework/integration/endpoint/PollingConsumer/setReceiveTimeout(long)|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/getReceiveTimeout()|",
      "|java+method:///org/springframework/integration/endpoint/AbstractPollingEndpoint/setAdviceChain(java.util.List)|",
      "|java+method:///org/springframework/integration/endpoint/AbstractPollingEndpoint/setMaxMessagesPerPoll(long)|",
      "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/getDefaultPollerMetadata(org.springframework.beans.factory.BeanFactory)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/getTransactionSynchronizationFactory()|",
      "|java+method:///org/springframework/integration/annotation/Poller/fixedRate()|",
      "|java+method:///org/springframework/integration/util/MessagingAnnotationUtils/resolveAttribute(java.util.List,java.lang.String,java.lang.Class)|",
      "|java+method:///org/springframework/beans/factory/config/ConfigurableListableBeanFactory/getBean(java.lang.String,java.lang.Class)|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/getAdviceChain()|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/getTaskExecutor()|",
      "|java+method:///org/springframework/integration/annotation/Poller/maxMessagesPerPoll()|",
      "|java+method:///org/springframework/integration/annotation/Poller/trigger()|",
      "|java+constructor:///org/springframework/scheduling/support/CronTrigger/CronTrigger(java.lang.String)|",
      "|java+method:///org/springframework/integration/annotation/Poller/cron()|",
      "|java+method:///org/springframework/integration/endpoint/AbstractPollingEndpoint/setErrorHandler(org.springframework.util.ErrorHandler)|",
      "|java+method:///org/springframework/integration/annotation/Poller/fixedDelay()|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/getErrorHandler()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///org/springframework/integration/endpoint/AbstractPollingEndpoint/setTaskExecutor(java.util.concurrent.Executor)|",
      "|java+method:///org/springframework/integration/annotation/Poller/taskExecutor()|",
      "|java+constructor:///org/springframework/integration/scheduling/PollerMetadata/PollerMetadata()|",
      "|java+method:///org/springframework/integration/scheduling/PollerMetadata/getTrigger()|",
      "|java+method:///org/springframework/core/env/Environment/resolvePlaceholders(java.lang.String)|",
      "|java+method:///org/springframework/integration/endpoint/AbstractPollingEndpoint/setTrigger(org.springframework.scheduling.Trigger)|",
      "|java+method:///org/springframework/integration/endpoint/AbstractPollingEndpoint/setTransactionSynchronizationFactory(org.springframework.integration.transaction.TransactionSynchronizationFactory)|",
      "|java+constructor:///org/springframework/scheduling/support/PeriodicTrigger/PeriodicTrigger(long)|"
    ],
    "affectedLib": "org.springframework:spring-context:4.2.1.RELEASE",
    "change": "UPDATED"
  }
]