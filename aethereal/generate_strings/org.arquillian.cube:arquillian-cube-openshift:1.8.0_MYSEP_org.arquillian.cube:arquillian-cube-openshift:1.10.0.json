[
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.8.0",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.10.0",
    "caller": "|java+method:///org/arquillian/cube/openshift/impl/requirement/OpenshiftRequirement/check(org.arquillian.cube.openshift.impl.requirement.RequiresOpenshift)|",
    "called": "|java+method:///okhttp3/OkHttpClient/newCall(okhttp3.Request)|",
    "v1Body": [
      "|java+constructor:///okhttp3/Request$Builder/Request$Builder()|",
      "|java+method:///okhttp3/Request$Builder/build()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/KubernetesClient/adapt(java.lang.Class)|",
      "|java+method:///java/net/URL/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///okhttp3/Request$Builder/get()|",
      "|java+method:///okhttp3/Response/isSuccessful()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/KubernetesClient/getMasterUrl()|",
      "|java+constructor:///org/arquillian/cube/spi/requirement/UnsatisfiedRequirementException/UnsatisfiedRequirementException(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///io/fabric8/kubernetes/clnt/v2_5/DefaultKubernetesClient/DefaultKubernetesClient()|",
      "|java+method:///okhttp3/Request$Builder/url(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/utils/URLUtils/join(java.lang.String%5B%5D)|",
      "|java+method:///java/io/IOException/getMessage()|",
      "|java+method:///okhttp3/Response/message()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/KubernetesClient/isAdaptable(java.lang.Class)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///okhttp3/OkHttpClient/newCall(okhttp3.Request)|",
      "|java+method:///okhttp3/Call/execute()|"
    ],
    "v2Body": [
      "|java+method:///okhttp3/Request$Builder/build()|",
      "|java+method:///java/net/URL/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///okhttp3/Request$Builder/get()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/utils/URLUtils/join(java.lang.String%5B%5D)|",
      "|java+method:///okhttp3/Response/isSuccessful()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/KubernetesClient/isAdaptable(java.lang.Class)|",
      "|java+constructor:///org/arquillian/cube/spi/requirement/UnsatisfiedRequirementException/UnsatisfiedRequirementException(java.lang.String)|",
      "|java+method:///okhttp3/Response/message()|",
      "|java+method:///okhttp3/Request$Builder/url(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///okhttp3/Request$Builder/Request$Builder()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/KubernetesClient/adapt(java.lang.Class)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/KubernetesClient/getMasterUrl()|",
      "|java+method:///java/io/IOException/getMessage()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///io/fabric8/kubernetes/clnt/v3_1/DefaultKubernetesClient/DefaultKubernetesClient()|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///okhttp3/OkHttpClient/newCall(okhttp3.Request)|",
      "|java+method:///okhttp3/Call/execute()|"
    ],
    "affectedLib": "com.squareup.okhttp3:okhttp:3.8.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.8.0",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.10.0",
    "caller": "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/fromMap(java.util.Map)|",
    "called": "|java+method:///org/arquillian/cube/impl/util/ConfigUtil/getStringProperty(java.lang.String,java.util.Map,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/CubeOpenShiftConfigurationBuilder()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withDockerRegistry(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withNamespaceCleanupTimeout(long)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/asUrlOrResource(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/parseMap(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withPortForwardBindAddress(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withNamespaceLazyCreateEnabled(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withOpenshiftRouterHttpsPort(int)|",
      "|java+method:///java/lang/System/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withNamespace(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withOpenshiftRouterHttpPort(int)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withDefinitionsFile(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getKubernetesConfigurationUrl(java.util.Map,java.lang.String)|",
      "|java+method:///org/arquillian/cube/impl/util/ConfigUtil/asURL(java.util.List)|",
      "|java+method:///java/io/File/getName()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+constructor:///io/fabric8/kubernetes/clnt/v2_5/ConfigBuilder/ConfigBuilder()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withAnsiLoggerEnabled(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withKeepAliveGitServer(boolean)|",
      "|java+method:///java/io/File/isDirectory()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withNamespaceDestroyConfirmationEnabled(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withMasterUrl(java.net.URL)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withEnvironmentTeardownScriptUrl(java.net.URL)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withDefinitions(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withWaitPollInterval(long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withAutoStartContainers(java.lang.String%5B%5D)|",
      "|java+method:///org/arquillian/cube/impl/util/ConfigUtil/getStringProperty(java.lang.String,java.util.Map,java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withWaitForServiceList(java.util.List)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/net/URI/toURL()|",
      "|java+method:///org/arquillian/cube/impl/util/ConfigUtil/getStringProperty(java.lang.String,java.lang.String,java.util.Map,java.lang.String)|",
      "|java+constructor:///java/net/URL/URL(java.lang.String)|",
      "|java+method:///org/arquillian/cube/impl/util/ConfigUtil/getIntProperty(java.lang.String,java.util.Optional,java.util.Map,int)|",
      "|java+method:///org/arquillian/cube/impl/util/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/Config/getNamespace()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withEnvironmentConfigAdditionalUrls(java.util.List)|",
      "|java+method:///org/arquillian/cube/impl/util/Strings/splitAndTrimAsList(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/UUID/randomUUID()|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///java/util/Optional/of(java.lang.Object)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withNamespaceCleanupConfirmationEnabled(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withKubernetesDomain(java.lang.String)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withScriptEnvironmentVariables(java.util.Map)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withNamespaceDestroyEnabled(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withNamespaceDestroyTimeout(long)|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withProxiedContainerPorts(java.lang.String%5B%5D)|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withEnvironmentSetupScriptUrl(java.net.URL)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withEnvironmentDependencies(java.net.URL%5B%5D)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withEnvironmentConfigUrl(java.net.URL)|",
      "|java+method:///org/arquillian/cube/impl/util/ConfigUtil/getLongProperty(java.lang.String,java.util.Map,java.lang.Long)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/ConfigBuilder/build()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/io/File/toURI()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getDockerRegistry(java.util.Map)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withEnvironmentInitEnabled(boolean)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withSessionId(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withRouterHost(java.lang.String)|",
      "|java+method:///org/arquillian/cube/impl/util/ConfigUtil/getBooleanProperty(java.lang.String,java.util.Map,java.lang.Boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withWaitTimeout(long)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withNamespaceCleanupEnabled(boolean)|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///java/io/File/listFiles()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/split(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/Config/getMasterUrl()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/build()|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/CubeOpenShiftConfigurationBuilder()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withDockerRegistry(java.lang.String)|",
      "|java+method:///org/arquillian/cube/impl/util/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withLogPath(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withProxiedContainerPorts(java.lang.String%5B%5D)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/parseMap(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withPortForwardBindAddress(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withOpenshiftRouterHttpsPort(int)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withNamespace(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withPassword(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withOpenshiftRouterHttpPort(int)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withDefinitionsFile(java.lang.String)|",
      "|java+constructor:///io/fabric8/kubernetes/clnt/v3_1/ConfigBuilder/ConfigBuilder()|",
      "|java+method:///org/arquillian/cube/impl/util/ConfigUtil/asURL(java.util.List)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withApiVersion(java.lang.String)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withAnsiLoggerEnabled(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withRouterSniPort(int)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withKeepAliveGitServer(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withEnableImageStreamDetection(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withNamespaceDestroyConfirmationEnabled(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withMasterUrl(java.net.URL)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withEnvironmentTeardownScriptUrl(java.net.URL)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withDefinitions(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withWaitEnabled(boolean)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withNamespaceCleanupTimeout(long)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withWaitPollInterval(long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/arquillian/cube/impl/util/ConfigUtil/getIntProperty(java.lang.String,java.lang.String,java.util.Map,int)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withAutoStartContainers(java.lang.String%5B%5D)|",
      "|java+method:///org/arquillian/cube/impl/util/ConfigUtil/getStringProperty(java.lang.String,java.util.Map,java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/arquillian/cube/impl/util/ConfigUtil/getBooleanProperty(java.lang.String,java.lang.String,java.util.Map,java.lang.Boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withTemplateParameters(java.lang.String)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/Config/getNamespace()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withLogCopyEnabled(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/asUrlOrResource(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withWaitForServiceList(java.util.List)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/arquillian/cube/impl/util/ConfigUtil/getStringProperty(java.lang.String,java.lang.String,java.util.Map,java.lang.String)|",
      "|java+constructor:///java/net/URL/URL(java.lang.String)|",
      "|java+method:///org/arquillian/cube/impl/util/ConfigUtil/getLongProperty(java.lang.String,java.lang.String,java.util.Map,java.lang.Long)|",
      "|java+method:///org/arquillian/cube/impl/util/Strings/splitAndTrimAsList(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/UUID/randomUUID()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/ConfigBuilder/build()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withNamespaceCleanupConfirmationEnabled(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withKubernetesDomain(java.lang.String)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withScriptEnvironmentVariables(java.util.Map)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withNamespaceDestroyEnabled(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withNamespaceDestroyTimeout(long)|",
      "|java+method:///org/arquillian/cube/impl/util/ConfigUtil/getLongProperty(java.lang.String,java.util.Map,java.lang.Long)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withStartupTimeout(long)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getKubernetesConfigurationUrl(java.util.Map)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withEnvironmentSetupScriptUrl(java.net.URL)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withEnvironmentDependencies(java.net.URL%5B%5D)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withEnvironmentConfigUrl(java.net.URL)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getDockerRegistry(java.util.Map)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withEnvironmentInitEnabled(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withSessionId(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withRouterHost(java.lang.String)|",
      "|java+method:///org/arquillian/cube/impl/util/ConfigUtil/getBooleanProperty(java.lang.String,java.util.Map,java.lang.Boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withTemplateURL(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withWaitTimeout(long)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withNamespaceCleanupEnabled(boolean)|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withUsername(java.lang.String)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/Config/getMasterUrl()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withTrustCerts(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withNamespaceLazyCreateEnabled(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withHttpClientTimeout(long)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/split(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withTemplateProcess(boolean)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/build()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withTemplateLabels(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationBuilder/withToken(java.lang.String)|"
    ],
    "affectedLib": "org.arquillian.cube:arquillian-cube-core:1.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.8.0",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.10.0",
    "caller": "|java+method:///org/arquillian/cube/openshift/impl/enricher/RouteURLEnricher/enrich(java.lang.Object)|",
    "called": "|java+method:///org/arquillian/cube/impl/util/ReflectionUtil/getFieldsWithAnnotation(java.lang.Class,java.lang.Class)|",
    "v1Body": [
      "|java+method:///java/lang/reflect/Field/getAnnotations()|",
      "|java+method:///java/lang/reflect/Field/setAccessible(boolean)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/enricher/RouteURLEnricher/lookup(org.arquillian.cube.openshift.impl.enricher.RouteURL)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/reflect/Field/isAccessible()|",
      "|java+method:///java/lang/reflect/Field/set(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/arquillian/cube/impl/util/ReflectionUtil/getFieldsWithAnnotation(java.lang.Class,java.lang.Class)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/arquillian/cube/openshift/impl/enricher/RouteURLEnricher/getRouteURLAnnotation(java.lang.annotation.Annotation%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/reflect/Field/getAnnotations()|",
      "|java+method:///java/lang/reflect/Field/setAccessible(boolean)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/enricher/RouteURLEnricher/getAnnotation(java.lang.Class,java.lang.annotation.Annotation%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/reflect/Field/getType()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/reflect/Field/isAccessible()|",
      "|java+method:///org/arquillian/cube/openshift/impl/enricher/RouteURLEnricher/awaitRoute(java.lang.Object,org.arquillian.cube.openshift.impl.enricher.AwaitRoute)|",
      "|java+method:///org/arquillian/cube/impl/util/ReflectionUtil/getFieldsWithAnnotation(java.lang.Class,java.lang.Class)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/reflect/Field/set(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/arquillian/cube/openshift/impl/enricher/RouteURLEnricher/lookup(org.arquillian.cube.openshift.impl.enricher.RouteURL,java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|"
    ],
    "affectedLib": "org.arquillian.cube:arquillian-cube-core:1.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.8.0",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.10.0",
    "caller": "|java+method:///org/arquillian/cube/openshift/impl/client/metadata/CopyFromContainer/copyDirectory(java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/arquillian/cube/impl/util/IOUtil/untar(java.io.InputStream,java.io.File)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/dsl/PodResource/exec(java.lang.Object%5B%5D)|",
      "|java+method:///java/nio/file/Path/toString()|",
      "|java+method:///java/nio/file/Path/normalize()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/dsl/ExecWatch/close()|",
      "|java+method:///java/nio/file/FileSystems/getDefault()|",
      "|java+method:///java/nio/file/Path/getParent()|",
      "|java+method:///java/nio/file/FileSystem/getPath(java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///io/fabric8/openshift/clnt/v2_5/NamespacedOpenShiftClient/inNamespace(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/OpenShiftClient/getClient()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///io/fabric8/openshift/clnt/v2_5/NamespacedOpenShiftClient/getNamespace()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/dsl/ExecWatch/getOutput()|",
      "|java+method:///java/nio/file/Paths/get(java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///java/nio/file/Path/toFile()|",
      "|java+method:///io/fabric8/openshift/clnt/v2_5/NamespacedOpenShiftClient/pods()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/dsl/MixedOperation/withName(java.lang.String)|",
      "|java+method:///java/nio/file/Path/getFileName()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/io/File/isFile()|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|",
      "|java+method:///java/nio/file/Files/createDirectories(java.nio.file.Path,java.nio.file.attribute.FileAttribute%5B%5D)|",
      "|java+method:///org/arquillian/cube/impl/util/IOUtil/untar(java.io.InputStream,java.io.File)|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///java/nio/file/Path/toString()|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/dsl/MixedOperation/withName(java.lang.String)|",
      "|java+method:///java/nio/file/FileSystems/getDefault()|",
      "|java+method:///java/nio/file/Path/getFileName()|",
      "|java+method:///io/fabric8/openshift/clnt/v3_1/NamespacedOpenShiftClient/inNamespace(java.lang.String)|",
      "|java+method:///java/nio/file/FileSystem/getPath(java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/dsl/PodResource/exec(java.lang.Object%5B%5D)|",
      "|java+method:///java/nio/file/Path/normalize()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/dsl/ExecWatch/getOutput()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/dsl/ExecWatch/close()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/OpenShiftClient/getClient()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/nio/file/Paths/get(java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///io/fabric8/openshift/clnt/v3_1/NamespacedOpenShiftClient/getNamespace()|",
      "|java+method:///java/nio/file/Path/toFile()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/io/File/isFile()|",
      "|java+method:///io/fabric8/openshift/clnt/v3_1/NamespacedOpenShiftClient/pods()|",
      "|java+method:///java/nio/file/Path/getParent()|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|",
      "|java+method:///java/nio/file/Files/createDirectories(java.nio.file.Path,java.nio.file.attribute.FileAttribute%5B%5D)|",
      "|java+method:///org/arquillian/cube/impl/util/IOUtil/untar(java.io.InputStream,java.io.File)|"
    ],
    "affectedLib": "org.arquillian.cube:arquillian-cube-core:1.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.8.0",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.10.0",
    "caller": "|java+method:///org/arquillian/cube/openshift/impl/install/OpenshiftResourceInstaller/install(java.net.URL)|",
    "called": "|java+method:///org/arquillian/cube/impl/util/SystemEnvironmentVariables/getPropertyOrEnvironmentVariable(java.lang.String)|",
    "v1Body": [
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/dsl/NamespaceListVisitFromServerGetDeleteRecreateWaitApplicable/accept(io.fabric8.kubernetes.api.builder.v2_5.Visitor)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/KubernetesClient/adapt(java.lang.Class)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+method:///java/net/URL/openStream()|",
      "|java+method:///io/fabric8/openshift/clnt/v2_5/OpenShiftClient/resourceList(io.fabric8.kubernetes.api.model.v2_5.KubernetesResourceList)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/dsl/ParameterMixedOperation/load(java.io.InputStream)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///io/fabric8/openshift/clnt/v2_5/OpenShiftClient/templates()|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/dsl/ListVisitFromServerGetDeleteRecreateWaitApplicable/createOrReplace()|",
      "|java+method:///org/arquillian/cube/kubernetes/impl/install/DefaultResourceInstaller/install(java.net.URL)|",
      "|java+method:///io/fabric8/openshift/clnt/v2_5/dsl/TemplateResource/processLocally(java.io.File)|",
      "|java+method:///io/fabric8/openshift/clnt/v2_5/dsl/TemplateResource/processLocally(io.fabric8.openshift.clnt.v2_5.ParameterValue%5B%5D)|",
      "|java+method:///org/jboss/arquillian/core/api/Instance/get()|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/KubernetesClientException/launderThrowable(java.lang.Throwable)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/KubernetesClient/isAdaptable(java.lang.Class)|",
      "|java+method:///java/io/InputStream/close()|",
      "|java+method:///org/jboss/arquillian/core/spi/ServiceLoader/all(java.lang.Class)|",
      "|java+constructor:///org/arquillian/cube/kubernetes/impl/visitor/CompositeVisitor/CompositeVisitor(java.util.List)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/arquillian/cube/impl/util/SystemEnvironmentVariables/getPropertyOrEnvironmentVariable(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///io/fabric8/openshift/clnt/v3_1/OpenShiftClient/resourceList(io.fabric8.kubernetes.api.model.v3_1.KubernetesResourceList)|",
      "|java+method:///java/net/URL/openStream()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/dsl/ParameterMixedOperation/load(java.io.InputStream)|",
      "|java+method:///io/fabric8/openshift/clnt/v3_1/OpenShiftClient/templates()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/KubernetesClientException/launderThrowable(java.lang.Throwable)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/KubernetesClient/isAdaptable(java.lang.Class)|",
      "|java+method:///java/io/InputStream/close()|",
      "|java+method:///org/arquillian/cube/kubernetes/impl/install/DefaultResourceInstaller/install(java.net.URL)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/dsl/ListVisitFromServerGetDeleteRecreateWaitApplicable/createOrReplace()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/KubernetesClient/adapt(java.lang.Class)|",
      "|java+method:///io/fabric8/openshift/clnt/v3_1/dsl/TemplateResource/processLocally(java.io.File)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/dsl/NamespaceListVisitFromServerGetDeleteRecreateWaitApplicable/accept(io.fabric8.kubernetes.api.builder.v3_1.Visitor)|",
      "|java+method:///io/fabric8/openshift/clnt/v3_1/dsl/TemplateResource/processLocally(io.fabric8.openshift.clnt.v3_1.ParameterValue%5B%5D)|",
      "|java+method:///org/jboss/arquillian/core/api/Instance/get()|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///org/jboss/arquillian/core/spi/ServiceLoader/all(java.lang.Class)|",
      "|java+constructor:///org/arquillian/cube/kubernetes/impl/visitor/CompositeVisitor/CompositeVisitor(java.util.List)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/arquillian/cube/impl/util/SystemEnvironmentVariables/getPropertyOrEnvironmentVariable(java.lang.String)|"
    ],
    "affectedLib": "org.arquillian.cube:arquillian-cube-core:1.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.8.0",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.10.0",
    "caller": "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube$PortBindings/podStarted()|",
    "called": "|java+constructor:///org/arquillian/cube/spi/metadata/HasPortBindings$PortAddressImpl/HasPortBindings$PortAddressImpl(java.lang.String,int)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/fabric8/kubernetes/api/model/v2_5/Pod/getSpec()|",
      "|java+method:///io/fabric8/kubernetes/api/model/v2_5/Container/getPorts()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube/access$600(org.arquillian.cube.openshift.impl.model.BuildablePodCube)|",
      "|java+method:///io/fabric8/kubernetes/api/model/v2_5/ContainerPort/getHostPort()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/fabric8/kubernetes/api/model/v2_5/ContainerPort/getContainerPort()|",
      "|java+method:///io/fabric8/kubernetes/api/model/v2_5/ContainerPort/getHostIP()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///org/arquillian/cube/spi/metadata/HasPortBindings$PortAddressImpl/HasPortBindings$PortAddressImpl(java.lang.String,int)|",
      "|java+method:///io/fabric8/kubernetes/api/model/v2_5/PodSpec/getContainers()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube$PortBindings/createProxies()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/OpenShiftClient$ResourceHolder/getPod()|"
    ],
    "v2Body": [
      "|java+method:///io/fabric8/kubernetes/api/model/v3_1/Pod/getSpec()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/fabric8/kubernetes/api/model/v3_1/ContainerPort/getHostPort()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/fabric8/kubernetes/api/model/v3_1/ContainerPort/getHostIP()|",
      "|java+method:///io/fabric8/kubernetes/api/model/v3_1/PodSpec/getContainers()|",
      "|java+constructor:///org/arquillian/cube/spi/metadata/HasPortBindings$PortAddressImpl/HasPortBindings$PortAddressImpl(java.lang.String,int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube/access$600(org.arquillian.cube.openshift.impl.model.BuildablePodCube)|",
      "|java+method:///io/fabric8/kubernetes/api/model/v3_1/Container/getPorts()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///io/fabric8/kubernetes/api/model/v3_1/ContainerPort/getContainerPort()|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube$PortBindings/createProxies()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/OpenShiftClient$ResourceHolder/getPod()|"
    ],
    "affectedLib": "org.arquillian.cube:arquillian-cube-spi:1.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.8.0",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.10.0",
    "caller": "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube/stop()|",
    "called": "|java+constructor:///org/arquillian/cube/spi/event/lifecycle/AfterStop/AfterStop(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/arquillian/cube/spi/CubeControlException/failedStop(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube$PortBindings/access$100(org.arquillian.cube.openshift.impl.model.BuildablePodCube$PortBindings)|",
      "|java+method:///org/jboss/arquillian/core/api/Event/fire(java.lang.Object)|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube/destroyPod(io.fabric8.kubernetes.api.model.v2_5.Pod)|",
      "|java+constructor:///org/arquillian/cube/spi/event/lifecycle/BeforeStop/BeforeStop(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/OpenShiftClient$ResourceHolder/getPod()|",
      "|java+constructor:///org/arquillian/cube/spi/event/lifecycle/AfterStop/AfterStop(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube/getId()|"
    ],
    "v2Body": [
      "|java+method:///org/arquillian/cube/spi/CubeControlException/failedStop(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube$PortBindings/access$100(org.arquillian.cube.openshift.impl.model.BuildablePodCube$PortBindings)|",
      "|java+method:///org/jboss/arquillian/core/api/Event/fire(java.lang.Object)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/OpenShiftClient$ResourceHolder/getPod()|",
      "|java+constructor:///org/arquillian/cube/spi/event/lifecycle/AfterStop/AfterStop(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube/getId()|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube/destroyPod(io.fabric8.kubernetes.api.model.v3_1.Pod)|",
      "|java+constructor:///org/arquillian/cube/spi/event/lifecycle/BeforeStop/BeforeStop(java.lang.String)|"
    ],
    "affectedLib": "org.arquillian.cube:arquillian-cube-spi:1.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.8.0",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.10.0",
    "caller": "|java+method:///org/arquillian/cube/openshift/impl/model/ServiceCube/start()|",
    "called": "|java+method:///org/arquillian/cube/spi/CubeControlException/failedStart(java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/arquillian/cube/openshift/impl/model/ServiceCube/getId()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/OpenShiftClient/create(io.fabric8.kubernetes.api.model.v2_5.Service)|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/ServiceCube$PortBindings/access$000(org.arquillian.cube.openshift.impl.model.ServiceCube$PortBindings)|",
      "|java+method:///org/arquillian/cube/spi/CubeControlException/failedStart(java.lang.String,java.lang.Throwable)|"
    ],
    "v2Body": [
      "|java+method:///org/arquillian/cube/openshift/impl/model/ServiceCube/getId()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/OpenShiftClient/create(io.fabric8.kubernetes.api.model.v3_1.Service)|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/ServiceCube$PortBindings/access$000(org.arquillian.cube.openshift.impl.model.ServiceCube$PortBindings)|",
      "|java+method:///org/arquillian/cube/spi/CubeControlException/failedStart(java.lang.String,java.lang.Throwable)|"
    ],
    "affectedLib": "org.arquillian.cube:arquillian-cube-spi:1.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.8.0",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.10.0",
    "caller": "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube/start()|",
    "called": "|java+method:///org/arquillian/cube/spi/CubeControlException/failedStart(java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+constructor:///org/arquillian/cube/spi/event/lifecycle/BeforeStart/BeforeStart(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube$PortBindings/access$000(org.arquillian.cube.openshift.impl.model.BuildablePodCube$PortBindings)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/OpenShiftClient$ResourceHolder/setPod(io.fabric8.kubernetes.api.model.v2_5.Pod)|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube/getId()|",
      "|java+constructor:///org/arquillian/cube/spi/event/lifecycle/AfterStart/AfterStart(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/OpenShiftClient$ResourceHolder/getPod()|",
      "|java+method:///org/jboss/arquillian/core/api/Event/fire(java.lang.Object)|",
      "|java+method:///org/arquillian/cube/spi/CubeControlException/failedStart(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube/destroyPod(io.fabric8.kubernetes.api.model.v2_5.Pod)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/OpenShiftClient/createAndWait(io.fabric8.kubernetes.api.model.v2_5.Pod)|"
    ],
    "v2Body": [
      "|java+constructor:///org/arquillian/cube/spi/event/lifecycle/BeforeStart/BeforeStart(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube$PortBindings/access$000(org.arquillian.cube.openshift.impl.model.BuildablePodCube$PortBindings)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/dsl/MixedOperation/list()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getRouterHost()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/OpenShiftClient/getClientExt()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/OpenShiftClient$ResourceHolder/setPod(io.fabric8.kubernetes.api.model.v3_1.Pod)|",
      "|java+method:///io/fabric8/openshift/clnt/v3_1/OpenShiftClient/routes()|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube/getId()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/OpenShiftClient$ResourceHolder/getPod()|",
      "|java+method:///org/arquillian/cube/openshift/impl/dns/ArqCubeNameService/setRoutes(io.fabric8.openshift.api.model.v3_1.RouteList,java.lang.String)|",
      "|java+method:///org/jboss/arquillian/core/api/Event/fire(java.lang.Object)|",
      "|java+method:///org/arquillian/cube/spi/CubeControlException/failedStart(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///org/arquillian/cube/spi/event/lifecycle/AfterStart/AfterStart(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/OpenShiftClient/createAndWait(io.fabric8.kubernetes.api.model.v3_1.Pod)|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube/destroyPod(io.fabric8.kubernetes.api.model.v3_1.Pod)|"
    ],
    "affectedLib": "org.arquillian.cube:arquillian-cube-spi:1.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.8.0",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.10.0",
    "caller": "|java+constructor:///org/arquillian/cube/openshift/impl/model/BuildablePodCube$PortBindings/BuildablePodCube$PortBindings(org.arquillian.cube.openshift.impl.model.BuildablePodCube)|",
    "called": "|java+constructor:///org/arquillian/cube/spi/metadata/HasPortBindings$PortAddressImpl/HasPortBindings$PortAddressImpl(java.lang.String,int)|",
    "v1Body": [
      "|java+method:///java/net/InetAddress/getHostAddress()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///io/fabric8/kubernetes/api/model/v2_5/Pod/getSpec()|",
      "|java+method:///io/fabric8/kubernetes/api/model/v2_5/Container/getPorts()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube/access$200(org.arquillian.cube.openshift.impl.model.BuildablePodCube)|",
      "|java+method:///io/fabric8/kubernetes/api/model/v2_5/ContainerPort/getHostPort()|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube$PortBindings/getPortForwardBindAddress()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///io/fabric8/kubernetes/api/model/v2_5/ContainerPort/getContainerPort()|",
      "|java+method:///io/fabric8/kubernetes/api/model/v2_5/ContainerPort/getHostIP()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube$PortBindings/allocateLocalPort(int)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Set/addAll(java.util.Collection)|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube/access$400(org.arquillian.cube.openshift.impl.model.BuildablePodCube)|",
      "|java+constructor:///java/util/LinkedHashSet/LinkedHashSet()|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube/access$300(org.arquillian.cube.openshift.impl.model.BuildablePodCube)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getProxiedContainerPorts()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+constructor:///org/arquillian/cube/spi/metadata/HasPortBindings$PortAddressImpl/HasPortBindings$PortAddressImpl(java.lang.String,int)|",
      "|java+method:///io/fabric8/kubernetes/api/model/v2_5/PodSpec/getContainers()|",
      "|java+constructor:///java/util/LinkedHashMap/LinkedHashMap()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/fabric8/kubernetes/api/model/v3_1/Container/getPorts()|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube$PortBindings/getPortForwardBindAddress()|",
      "|java+method:///io/fabric8/kubernetes/api/model/v3_1/ContainerPort/getHostIP()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///java/net/InetAddress/getHostAddress()|",
      "|java+method:///io/fabric8/kubernetes/api/model/v3_1/Pod/getSpec()|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube$PortBindings/allocateLocalPort(int)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Set/addAll(java.util.Collection)|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube/access$400(org.arquillian.cube.openshift.impl.model.BuildablePodCube)|",
      "|java+constructor:///java/util/LinkedHashSet/LinkedHashSet()|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube/access$300(org.arquillian.cube.openshift.impl.model.BuildablePodCube)|",
      "|java+method:///io/fabric8/kubernetes/api/model/v3_1/ContainerPort/getHostPort()|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube/access$200(org.arquillian.cube.openshift.impl.model.BuildablePodCube)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getProxiedContainerPorts()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///io/fabric8/kubernetes/api/model/v3_1/PodSpec/getContainers()|",
      "|java+constructor:///org/arquillian/cube/spi/metadata/HasPortBindings$PortAddressImpl/HasPortBindings$PortAddressImpl(java.lang.String,int)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///io/fabric8/kubernetes/api/model/v3_1/ContainerPort/getContainerPort()|",
      "|java+constructor:///java/util/LinkedHashMap/LinkedHashMap()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "org.arquillian.cube:arquillian-cube-spi:1.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.8.0",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.10.0",
    "caller": "|java+method:///org/arquillian/cube/openshift/impl/model/ServiceCube/stop()|",
    "called": "|java+method:///org/arquillian/cube/spi/CubeControlException/failedStop(java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/arquillian/cube/openshift/impl/model/ServiceCube/getId()|",
      "|java+method:///org/arquillian/cube/spi/CubeControlException/failedStop(java.lang.String,java.lang.Throwable)|",
      "|java+method:///io/fabric8/kubernetes/api/model/v2_5/Service/getMetadata()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/OpenShiftClient/destroy(io.fabric8.kubernetes.api.model.v2_5.Service)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/isNamespaceCleanupEnabled()|",
      "|java+method:///io/fabric8/kubernetes/api/model/v2_5/ObjectMeta/getName()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/logging/Logger/info(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/arquillian/cube/openshift/impl/model/ServiceCube/getId()|",
      "|java+method:///org/arquillian/cube/spi/CubeControlException/failedStop(java.lang.String,java.lang.Throwable)|",
      "|java+method:///io/fabric8/kubernetes/api/model/v3_1/Service/getMetadata()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/isNamespaceCleanupEnabled()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/OpenShiftClient/destroy(io.fabric8.kubernetes.api.model.v3_1.Service)|",
      "|java+method:///io/fabric8/kubernetes/api/model/v3_1/ObjectMeta/getName()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/logging/Logger/info(java.lang.String)|"
    ],
    "affectedLib": "org.arquillian.cube:arquillian-cube-spi:1.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.8.0",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.10.0",
    "caller": "|java+constructor:///org/arquillian/cube/openshift/impl/model/ServiceCube$PortBindings/ServiceCube$PortBindings(org.arquillian.cube.openshift.impl.model.ServiceCube)|",
    "called": "|java+constructor:///org/arquillian/cube/spi/metadata/HasPortBindings$PortAddressImpl/HasPortBindings$PortAddressImpl(java.lang.String,int)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///java/util/LinkedHashSet/LinkedHashSet()|",
      "|java+method:///io/fabric8/kubernetes/api/model/v2_5/Service/getSpec()|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/ServiceCube/access$100(org.arquillian.cube.openshift.impl.model.ServiceCube)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///io/fabric8/kubernetes/api/model/v2_5/ServicePort/getPort()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///io/fabric8/kubernetes/api/model/v2_5/ServicePort/getNodePort()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///org/arquillian/cube/spi/metadata/HasPortBindings$PortAddressImpl/HasPortBindings$PortAddressImpl(java.lang.String,int)|",
      "|java+method:///io/fabric8/kubernetes/api/model/v2_5/ServiceSpec/getPorts()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///java/util/LinkedHashSet/LinkedHashSet()|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/ServiceCube/access$100(org.arquillian.cube.openshift.impl.model.ServiceCube)|",
      "|java+constructor:///org/arquillian/cube/spi/metadata/HasPortBindings$PortAddressImpl/HasPortBindings$PortAddressImpl(java.lang.String,int)|",
      "|java+method:///io/fabric8/kubernetes/api/model/v3_1/ServicePort/getPort()|",
      "|java+method:///io/fabric8/kubernetes/api/model/v3_1/ServicePort/getNodePort()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///io/fabric8/kubernetes/api/model/v3_1/Service/getSpec()|",
      "|java+method:///io/fabric8/kubernetes/api/model/v3_1/ServiceSpec/getPorts()|",
      "|java+method:///java/lang/Integer/valueOf(int)|"
    ],
    "affectedLib": "org.arquillian.cube:arquillian-cube-spi:1.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.8.0",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.10.0",
    "caller": "|java+method:///org/arquillian/cube/openshift/impl/requirement/OpenshiftRequirement/check(org.arquillian.cube.openshift.impl.requirement.RequiresOpenshift)|",
    "called": "|java+constructor:///org/arquillian/cube/spi/requirement/UnsatisfiedRequirementException/UnsatisfiedRequirementException(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///okhttp3/Request$Builder/Request$Builder()|",
      "|java+method:///okhttp3/Request$Builder/build()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/KubernetesClient/adapt(java.lang.Class)|",
      "|java+method:///java/net/URL/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///okhttp3/Request$Builder/get()|",
      "|java+method:///okhttp3/Response/isSuccessful()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/KubernetesClient/getMasterUrl()|",
      "|java+constructor:///org/arquillian/cube/spi/requirement/UnsatisfiedRequirementException/UnsatisfiedRequirementException(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///io/fabric8/kubernetes/clnt/v2_5/DefaultKubernetesClient/DefaultKubernetesClient()|",
      "|java+method:///okhttp3/Request$Builder/url(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/utils/URLUtils/join(java.lang.String%5B%5D)|",
      "|java+method:///java/io/IOException/getMessage()|",
      "|java+method:///okhttp3/Response/message()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/KubernetesClient/isAdaptable(java.lang.Class)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///okhttp3/OkHttpClient/newCall(okhttp3.Request)|",
      "|java+method:///okhttp3/Call/execute()|"
    ],
    "v2Body": [
      "|java+method:///okhttp3/Request$Builder/build()|",
      "|java+method:///java/net/URL/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///okhttp3/Request$Builder/get()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/utils/URLUtils/join(java.lang.String%5B%5D)|",
      "|java+method:///okhttp3/Response/isSuccessful()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/KubernetesClient/isAdaptable(java.lang.Class)|",
      "|java+constructor:///org/arquillian/cube/spi/requirement/UnsatisfiedRequirementException/UnsatisfiedRequirementException(java.lang.String)|",
      "|java+method:///okhttp3/Response/message()|",
      "|java+method:///okhttp3/Request$Builder/url(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///okhttp3/Request$Builder/Request$Builder()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/KubernetesClient/adapt(java.lang.Class)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/KubernetesClient/getMasterUrl()|",
      "|java+method:///java/io/IOException/getMessage()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///io/fabric8/kubernetes/clnt/v3_1/DefaultKubernetesClient/DefaultKubernetesClient()|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///okhttp3/OkHttpClient/newCall(okhttp3.Request)|",
      "|java+method:///okhttp3/Call/execute()|"
    ],
    "affectedLib": "org.arquillian.cube:arquillian-cube-spi:1.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.8.0",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.10.0",
    "caller": "|java+method:///org/arquillian/cube/openshift/impl/model/ServiceCube$PortBindings/serviceStarted()|",
    "called": "|java+constructor:///org/arquillian/cube/spi/metadata/HasPortBindings$PortAddressImpl/HasPortBindings$PortAddressImpl(java.lang.String,int)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/fabric8/kubernetes/api/model/v2_5/ServiceSpec/getClusterIP()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/fabric8/kubernetes/api/model/v2_5/Service/getSpec()|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/ServiceCube/access$100(org.arquillian.cube.openshift.impl.model.ServiceCube)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///io/fabric8/kubernetes/api/model/v2_5/ServicePort/getPort()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///io/fabric8/kubernetes/api/model/v2_5/ServicePort/getNodePort()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+constructor:///org/arquillian/cube/spi/metadata/HasPortBindings$PortAddressImpl/HasPortBindings$PortAddressImpl(java.lang.String,int)|",
      "|java+method:///io/fabric8/kubernetes/api/model/v2_5/ServiceSpec/getPorts()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/fabric8/kubernetes/api/model/v3_1/ServiceSpec/getClusterIP()|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/ServiceCube/access$100(org.arquillian.cube.openshift.impl.model.ServiceCube)|",
      "|java+constructor:///org/arquillian/cube/spi/metadata/HasPortBindings$PortAddressImpl/HasPortBindings$PortAddressImpl(java.lang.String,int)|",
      "|java+method:///io/fabric8/kubernetes/api/model/v3_1/ServicePort/getPort()|",
      "|java+method:///io/fabric8/kubernetes/api/model/v3_1/ServicePort/getNodePort()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/fabric8/kubernetes/api/model/v3_1/Service/getSpec()|",
      "|java+method:///io/fabric8/kubernetes/api/model/v3_1/ServiceSpec/getPorts()|",
      "|java+method:///java/lang/Integer/valueOf(int)|"
    ],
    "affectedLib": "org.arquillian.cube:arquillian-cube-spi:1.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.8.0",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.10.0",
    "caller": "|java+method:///org/arquillian/cube/openshift/impl/CubeOpenshiftExtension/register(org.jboss.arquillian.core.spi.LoadableExtension$ExtensionBuilder)|",
    "called": "|java+method:///org/jboss/arquillian/core/spi/LoadableExtension$Validate/classExists(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/jboss/arquillian/core/spi/LoadableExtension$ExtensionBuilder/service(java.lang.Class,java.lang.Class)|",
      "|java+method:///org/jboss/arquillian/core/spi/LoadableExtension$ExtensionBuilder/override(java.lang.Class,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/jboss/arquillian/core/spi/LoadableExtension$ExtensionBuilder/observer(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///org/jboss/arquillian/core/spi/LoadableExtension$ExtensionBuilder/service(java.lang.Class,java.lang.Class)|",
      "|java+method:///org/jboss/arquillian/core/spi/LoadableExtension$ExtensionBuilder/override(java.lang.Class,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/arquillian/cube/openshift/impl/CubeOpenshiftExtension/doesNotContainStandaloneExtension()|",
      "|java+method:///org/jboss/arquillian/core/spi/LoadableExtension$ExtensionBuilder/observer(java.lang.Class)|",
      "|java+method:///org/jboss/arquillian/core/spi/LoadableExtension$Validate/classExists(java.lang.String)|"
    ],
    "affectedLib": "org.jboss.arquillian.core:arquillian-core-spi:1.1.15.Final",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.8.0",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.10.0",
    "caller": "|java+method:///org/arquillian/cube/openshift/impl/namespace/OpenshiftNamespaceService$ImmutableOpenshiftNamespaceService/create(java.lang.String,java.util.Map)|",
    "called": "|java+method:///org/arquillian/cube/kubernetes/impl/namespace/DefaultNamespaceService$ImmutableNamespaceService/create(java.lang.String,java.util.Map)|",
    "v1Body": [
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/dsl/Resource/get()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/fabric8/openshift/api/model/v2_5/ProjectRequestFluent$MetadataNested/endMetadata()|",
      "|java+method:///io/fabric8/openshift/api/model/v2_5/ProjectRequestFluent$MetadataNested/withAnnotations(java.util.Map)|",
      "|java+method:///io/fabric8/openshift/clnt/v2_5/OpenShiftClient/projectrequests()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/KubernetesClient/isAdaptable(java.lang.Class)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/fabric8/openshift/api/model/v2_5/ProjectRequestBuilder/withNewMetadata()|",
      "|java+constructor:///io/fabric8/openshift/api/model/v2_5/ProjectRequestBuilder/ProjectRequestBuilder()|",
      "|java+method:///io/fabric8/openshift/clnt/v2_5/OpenShiftClient/namespaces()|",
      "|java+method:///io/fabric8/openshift/api/model/v2_5/ProjectRequestBuilder/build()|",
      "|java+method:///org/arquillian/cube/kubernetes/api/Logger/info(java.lang.String)|",
      "|java+method:///io/fabric8/openshift/api/model/v2_5/ProjectRequestFluent$MetadataNested/addToLabels(java.lang.String,java.lang.String)|",
      "|java+method:///org/arquillian/cube/kubernetes/api/Logger/status(java.lang.String)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/KubernetesClient/adapt(java.lang.Class)|",
      "|java+method:///io/fabric8/openshift/api/model/v2_5/ProjectRequestFluent$MetadataNested/withName(java.lang.String)|",
      "|java+method:///io/fabric8/openshift/clnt/v2_5/dsl/ProjectRequestOperation/create(java.lang.Object%5B%5D)|",
      "|java+method:///io/fabric8/openshift/api/model/v2_5/ProjectRequest/getMetadata()|",
      "|java+method:///org/arquillian/cube/kubernetes/impl/namespace/DefaultNamespaceService$ImmutableNamespaceService/create(java.lang.String,java.util.Map)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/dsl/NonNamespaceOperation/withName(java.lang.String)|",
      "|java+method:///io/fabric8/kubernetes/api/model/v2_5/ObjectMeta/getName()|",
      "|java+method:///io/fabric8/openshift/api/model/v2_5/ProjectRequestFluent$MetadataNested/addToLabels(java.util.Map)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/KubernetesClient/getNamespace()|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/arquillian/cube/kubernetes/api/LabelProvider/getLabels()|"
    ],
    "v2Body": [
      "|java+method:///io/fabric8/openshift/api/model/v3_1/ProjectRequestFluent$MetadataNested/addToLabels(java.lang.String,java.lang.String)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/dsl/Resource/get()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///io/fabric8/openshift/api/model/v3_1/ProjectRequestBuilder/ProjectRequestBuilder()|",
      "|java+method:///io/fabric8/openshift/api/model/v3_1/ProjectRequestBuilder/build()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/KubernetesClient/getNamespace()|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/arquillian/cube/kubernetes/api/Logger/status(java.lang.String)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/KubernetesClient/adapt(java.lang.Class)|",
      "|java+method:///io/fabric8/openshift/api/model/v3_1/ProjectRequestFluent$MetadataNested/endMetadata()|",
      "|java+method:///io/fabric8/openshift/api/model/v3_1/ProjectRequestFluent$MetadataNested/withName(java.lang.String)|",
      "|java+method:///org/arquillian/cube/kubernetes/impl/namespace/DefaultNamespaceService$ImmutableNamespaceService/create(java.lang.String,java.util.Map)|",
      "|java+method:///io/fabric8/openshift/clnt/v3_1/dsl/ProjectRequestOperation/create(java.lang.Object%5B%5D)|",
      "|java+method:///io/fabric8/openshift/clnt/v3_1/OpenShiftClient/projectrequests()|",
      "|java+method:///io/fabric8/openshift/api/model/v3_1/ProjectRequest/getMetadata()|",
      "|java+method:///io/fabric8/openshift/api/model/v3_1/ProjectRequestFluent$MetadataNested/withAnnotations(java.util.Map)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/KubernetesClient/isAdaptable(java.lang.Class)|",
      "|java+method:///io/fabric8/openshift/api/model/v3_1/ProjectRequestBuilder/withNewMetadata()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/dsl/NonNamespaceOperation/withName(java.lang.String)|",
      "|java+method:///io/fabric8/openshift/api/model/v3_1/ProjectRequestFluent$MetadataNested/addToLabels(java.util.Map)|",
      "|java+method:///io/fabric8/kubernetes/api/model/v3_1/ObjectMeta/getName()|",
      "|java+method:///org/arquillian/cube/kubernetes/api/Logger/info(java.lang.String)|",
      "|java+method:///io/fabric8/openshift/clnt/v3_1/OpenShiftClient/namespaces()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/arquillian/cube/kubernetes/api/LabelProvider/getLabels()|"
    ],
    "affectedLib": "org.arquillian.cube:arquillian-cube-kubernetes:1.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.8.0",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.10.0",
    "caller": "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/equals(java.lang.Object)|",
    "called": "|java+method:///org/arquillian/cube/kubernetes/impl/DefaultConfigurationFluentImpl/equals(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/arquillian/cube/kubernetes/impl/DefaultConfigurationFluentImpl/equals(java.lang.Object)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/util/Set/equals(java.lang.Object)|",
      "|java+method:///java/util/List/equals(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/arquillian/cube/kubernetes/impl/DefaultConfigurationFluentImpl/equals(java.lang.Object)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/util/Set/equals(java.lang.Object)|",
      "|java+method:///java/util/List/equals(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|"
    ],
    "affectedLib": "org.arquillian.cube:arquillian-cube-kubernetes:1.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.8.0",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.10.0",
    "caller": "|java+method:///org/arquillian/cube/openshift/impl/client/GitServer/init()|",
    "called": "|java+method:///org/arquillian/cube/kubernetes/impl/portforward/PortForwarder/forwardPort(int,int)|",
    "v1Body": [
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/dsl/PodResource/get()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/dsl/NonNamespaceOperation/create(java.lang.Object%5B%5D)|",
      "|java+method:///org/arquillian/cube/kubernetes/impl/portforward/PortForwarder/close()|",
      "|java+method:///io/fabric8/kubernetes/api/model/v2_5/ObjectMeta/getName()|",
      "|java+method:///io/fabric8/openshift/clnt/v2_5/NamespacedOpenShiftClient/pods()|",
      "|java+method:///org/arquillian/cube/kubernetes/impl/portforward/PortForwarder/forwardPort(int,int)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/dsl/MixedOperation/inNamespace(java.lang.String)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/ResourceUtil/waitForStart(io.fabric8.kubernetes.clnt.v2_5.KubernetesClient,io.fabric8.kubernetes.api.model.v2_5.Pod)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/GitServer/getSpec()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/dsl/NonNamespaceOperation/withName(java.lang.String)|",
      "|java+method:///io/fabric8/kubernetes/api/model/v2_5/Pod/getMetadata()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/GitServer/createService()|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+constructor:///org/arquillian/cube/kubernetes/impl/portforward/PortForwarder/PortForwarder(io.fabric8.kubernetes.clnt.v2_5.Config,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/dsl/PodResource/get()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/ResourceUtil/waitForStart(io.fabric8.kubernetes.clnt.v3_1.KubernetesClient,io.fabric8.kubernetes.api.model.v3_1.Pod)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/GitServer/getSpec()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/dsl/NonNamespaceOperation/withName(java.lang.String)|",
      "|java+method:///io/fabric8/kubernetes/api/model/v3_1/ObjectMeta/getName()|",
      "|java+method:///io/fabric8/kubernetes/api/model/v3_1/Pod/getMetadata()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/GitServer/createService()|",
      "|java+method:///org/arquillian/cube/kubernetes/impl/portforward/PortForwarder/forwardPort(int,int)|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+method:///io/fabric8/openshift/clnt/v3_1/NamespacedOpenShiftClient/pods()|",
      "|java+constructor:///org/arquillian/cube/kubernetes/impl/portforward/PortForwarder/PortForwarder(io.fabric8.kubernetes.clnt.v3_1.Config,java.lang.String)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/dsl/MixedOperation/inNamespace(java.lang.String)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/dsl/NonNamespaceOperation/create(java.lang.Object%5B%5D)|",
      "|java+method:///org/arquillian/cube/kubernetes/impl/portforward/PortForwarder/close()|"
    ],
    "affectedLib": "org.arquillian.cube:arquillian-cube-kubernetes:1.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.8.0",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.10.0",
    "caller": "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube$PortBindings/createProxies()|",
    "called": "|java+method:///org/arquillian/cube/kubernetes/impl/portforward/PortForwarder/forwardPort(int,int)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/arquillian/cube/kubernetes/impl/portforward/PortForwarder/setPortForwardBindAddress(java.net.InetAddress)|",
      "|java+method:///io/fabric8/openshift/clnt/v2_5/NamespacedOpenShiftClient/getConfiguration()|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube$PortBindings/getPortForwardBindAddress()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/arquillian/cube/kubernetes/impl/portforward/PortForwarder/forwardPort(int,int)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube$PortBindings/getContainerIP()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube/access$700(org.arquillian.cube.openshift.impl.model.BuildablePodCube)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/OpenShiftClient/getClient()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/clear()|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube/getId()|",
      "|java+method:///org/arquillian/cube/kubernetes/impl/portforward/PortForwarder$PortForwardServer/getLocalAddress()|",
      "|java+method:///org/xnio/IoUtils/safeClose(java.io.Closeable)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+constructor:///org/arquillian/cube/kubernetes/impl/portforward/PortForwarder/PortForwarder(io.fabric8.kubernetes.clnt.v2_5.Config,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/arquillian/cube/kubernetes/impl/portforward/PortForwarder/setPortForwardBindAddress(java.net.InetAddress)|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube$PortBindings/getPortForwardBindAddress()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/arquillian/cube/kubernetes/impl/portforward/PortForwarder/forwardPort(int,int)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube$PortBindings/getContainerIP()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube/access$700(org.arquillian.cube.openshift.impl.model.BuildablePodCube)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///io/fabric8/openshift/clnt/v3_1/NamespacedOpenShiftClient/getConfiguration()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/OpenShiftClient/getClient()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/clear()|",
      "|java+method:///org/arquillian/cube/openshift/impl/model/BuildablePodCube/getId()|",
      "|java+method:///org/arquillian/cube/kubernetes/impl/portforward/PortForwarder$PortForwardServer/getLocalAddress()|",
      "|java+method:///org/xnio/IoUtils/safeClose(java.io.Closeable)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+constructor:///org/arquillian/cube/kubernetes/impl/portforward/PortForwarder/PortForwarder(io.fabric8.kubernetes.clnt.v3_1.Config,java.lang.String)|"
    ],
    "affectedLib": "org.arquillian.cube:arquillian-cube-kubernetes:1.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.8.0",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.10.0",
    "caller": "|java+method:///org/arquillian/cube/openshift/impl/client/GitServer/shutdown()|",
    "called": "|java+method:///org/arquillian/cube/kubernetes/impl/portforward/PortForwarder/close()|",
    "v1Body": [
      "|java+method:///io/fabric8/kubernetes/api/model/v2_5/Service/getMetadata()|",
      "|java+method:///io/fabric8/openshift/clnt/v2_5/NamespacedOpenShiftClient/services()|",
      "|java+method:///org/arquillian/cube/kubernetes/impl/portforward/PortForwarder/close()|",
      "|java+method:///io/fabric8/kubernetes/api/model/v2_5/ObjectMeta/getName()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/dsl/PodResource/delete()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/dsl/Resource/delete()|",
      "|java+method:///io/fabric8/kubernetes/api/model/v2_5/Pod/getMetadata()|",
      "|java+method:///io/fabric8/openshift/clnt/v2_5/NamespacedOpenShiftClient/pods()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/dsl/MixedOperation/inNamespace(java.lang.String)|",
      "|java+method:///io/fabric8/openshift/clnt/v2_5/NamespacedOpenShiftClient/secrets()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/dsl/NonNamespaceOperation/withName(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///io/fabric8/kubernetes/api/model/v3_1/Service/getMetadata()|",
      "|java+method:///io/fabric8/openshift/clnt/v3_1/NamespacedOpenShiftClient/services()|",
      "|java+method:///io/fabric8/openshift/clnt/v3_1/NamespacedOpenShiftClient/secrets()|",
      "|java+method:///org/arquillian/cube/kubernetes/impl/portforward/PortForwarder/close()|",
      "|java+method:///io/fabric8/kubernetes/api/model/v3_1/ObjectMeta/getName()|",
      "|java+method:///io/fabric8/kubernetes/api/model/v3_1/Pod/getMetadata()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/dsl/PodResource/delete()|",
      "|java+method:///io/fabric8/openshift/clnt/v3_1/NamespacedOpenShiftClient/pods()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/dsl/MixedOperation/inNamespace(java.lang.String)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/dsl/Resource/delete()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/dsl/NonNamespaceOperation/withName(java.lang.String)|"
    ],
    "affectedLib": "org.arquillian.cube:arquillian-cube-kubernetes:1.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.8.0",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.10.0",
    "caller": "|java+method:///org/arquillian/cube/openshift/impl/namespace/OpenshiftNamespaceService$ImmutableOpenshiftNamespaceService/exists(java.lang.String)|",
    "called": "|java+method:///org/arquillian/cube/kubernetes/impl/namespace/DefaultNamespaceService$ImmutableNamespaceService/exists(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/util/stream/Stream/map(java.util.function.Function)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/dsl/NonNamespaceOperation/list()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/KubernetesClient/adapt(java.lang.Class)|",
      "|java+method:///java/util/List/stream()|",
      "|java+method:///java/util/stream/Stream/anyMatch(java.util.function.Predicate)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/KubernetesClient/isAdaptable(java.lang.Class)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///io/fabric8/openshift/clnt/v2_5/OpenShiftClient/projects()|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/arquillian/cube/kubernetes/impl/namespace/DefaultNamespaceService$ImmutableNamespaceService/exists(java.lang.String)|",
      "|java+method:///io/fabric8/openshift/api/model/v2_5/ProjectList/getItems()|",
      "|java+method:///java/util/function/Predicate/isEqual(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///java/util/function/Predicate/isEqual(java.lang.Object)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/dsl/NonNamespaceOperation/list()|",
      "|java+method:///io/fabric8/openshift/api/model/v3_1/ProjectList/getItems()|",
      "|java+method:///java/util/List/stream()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/KubernetesClient/isAdaptable(java.lang.Class)|",
      "|java+method:///java/util/stream/Stream/anyMatch(java.util.function.Predicate)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/arquillian/cube/kubernetes/impl/namespace/DefaultNamespaceService$ImmutableNamespaceService/exists(java.lang.String)|",
      "|java+method:///java/util/stream/Stream/map(java.util.function.Function)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/KubernetesClient/adapt(java.lang.Class)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///io/fabric8/openshift/clnt/v3_1/OpenShiftClient/projects()|"
    ],
    "affectedLib": "org.arquillian.cube:arquillian-cube-kubernetes:1.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.8.0",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.10.0",
    "caller": "|java+method:///org/arquillian/cube/openshift/impl/namespace/OpenshiftNamespaceService$ImmutableOpenshiftNamespaceService/clean(java.lang.String)|",
    "called": "|java+method:///org/arquillian/cube/kubernetes/impl/namespace/DefaultNamespaceService$ImmutableNamespaceService/clean(java.lang.String)|",
    "v1Body": [
      "|java+method:///io/fabric8/openshift/clnt/v2_5/OpenShiftClient/deploymentConfigs()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/KubernetesClient/adapt(java.lang.Class)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/dsl/NonNamespaceOperation/delete()|",
      "|java+method:///org/arquillian/cube/kubernetes/impl/namespace/DefaultNamespaceService$ImmutableNamespaceService/clean(java.lang.String)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/KubernetesClient/isAdaptable(java.lang.Class)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/dsl/MixedOperation/inNamespace(java.lang.String)|",
      "|java+method:///java/lang/Boolean/booleanValue()|"
    ],
    "v2Body": [
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/KubernetesClient/adapt(java.lang.Class)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/KubernetesClient/isAdaptable(java.lang.Class)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/dsl/NonNamespaceOperation/delete()|",
      "|java+method:///org/arquillian/cube/kubernetes/impl/namespace/DefaultNamespaceService$ImmutableNamespaceService/clean(java.lang.String)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/dsl/MixedOperation/inNamespace(java.lang.String)|",
      "|java+method:///io/fabric8/openshift/clnt/v3_1/OpenShiftClient/deploymentConfigs()|"
    ],
    "affectedLib": "org.arquillian.cube:arquillian-cube-kubernetes:1.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.8.0",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.10.0",
    "caller": "|java+method:///org/arquillian/cube/openshift/impl/install/OpenshiftResourceInstaller/install(java.net.URL)|",
    "called": "|java+constructor:///org/arquillian/cube/kubernetes/impl/visitor/CompositeVisitor/CompositeVisitor(java.util.List)|",
    "v1Body": [
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/dsl/NamespaceListVisitFromServerGetDeleteRecreateWaitApplicable/accept(io.fabric8.kubernetes.api.builder.v2_5.Visitor)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/KubernetesClient/adapt(java.lang.Class)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+method:///java/net/URL/openStream()|",
      "|java+method:///io/fabric8/openshift/clnt/v2_5/OpenShiftClient/resourceList(io.fabric8.kubernetes.api.model.v2_5.KubernetesResourceList)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/dsl/ParameterMixedOperation/load(java.io.InputStream)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///io/fabric8/openshift/clnt/v2_5/OpenShiftClient/templates()|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/dsl/ListVisitFromServerGetDeleteRecreateWaitApplicable/createOrReplace()|",
      "|java+method:///org/arquillian/cube/kubernetes/impl/install/DefaultResourceInstaller/install(java.net.URL)|",
      "|java+method:///io/fabric8/openshift/clnt/v2_5/dsl/TemplateResource/processLocally(java.io.File)|",
      "|java+method:///io/fabric8/openshift/clnt/v2_5/dsl/TemplateResource/processLocally(io.fabric8.openshift.clnt.v2_5.ParameterValue%5B%5D)|",
      "|java+method:///org/jboss/arquillian/core/api/Instance/get()|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/KubernetesClientException/launderThrowable(java.lang.Throwable)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/KubernetesClient/isAdaptable(java.lang.Class)|",
      "|java+method:///java/io/InputStream/close()|",
      "|java+method:///org/jboss/arquillian/core/spi/ServiceLoader/all(java.lang.Class)|",
      "|java+constructor:///org/arquillian/cube/kubernetes/impl/visitor/CompositeVisitor/CompositeVisitor(java.util.List)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/arquillian/cube/impl/util/SystemEnvironmentVariables/getPropertyOrEnvironmentVariable(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///io/fabric8/openshift/clnt/v3_1/OpenShiftClient/resourceList(io.fabric8.kubernetes.api.model.v3_1.KubernetesResourceList)|",
      "|java+method:///java/net/URL/openStream()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/dsl/ParameterMixedOperation/load(java.io.InputStream)|",
      "|java+method:///io/fabric8/openshift/clnt/v3_1/OpenShiftClient/templates()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/KubernetesClientException/launderThrowable(java.lang.Throwable)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/KubernetesClient/isAdaptable(java.lang.Class)|",
      "|java+method:///java/io/InputStream/close()|",
      "|java+method:///org/arquillian/cube/kubernetes/impl/install/DefaultResourceInstaller/install(java.net.URL)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/dsl/ListVisitFromServerGetDeleteRecreateWaitApplicable/createOrReplace()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/KubernetesClient/adapt(java.lang.Class)|",
      "|java+method:///io/fabric8/openshift/clnt/v3_1/dsl/TemplateResource/processLocally(java.io.File)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/dsl/NamespaceListVisitFromServerGetDeleteRecreateWaitApplicable/accept(io.fabric8.kubernetes.api.builder.v3_1.Visitor)|",
      "|java+method:///io/fabric8/openshift/clnt/v3_1/dsl/TemplateResource/processLocally(io.fabric8.openshift.clnt.v3_1.ParameterValue%5B%5D)|",
      "|java+method:///org/jboss/arquillian/core/api/Instance/get()|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///org/jboss/arquillian/core/spi/ServiceLoader/all(java.lang.Class)|",
      "|java+constructor:///org/arquillian/cube/kubernetes/impl/visitor/CompositeVisitor/CompositeVisitor(java.util.List)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/arquillian/cube/impl/util/SystemEnvironmentVariables/getPropertyOrEnvironmentVariable(java.lang.String)|"
    ],
    "affectedLib": "org.arquillian.cube:arquillian-cube-kubernetes:1.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.8.0",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.10.0",
    "caller": "|java+constructor:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/CubeOpenShiftConfigurationFluentImpl(org.arquillian.cube.openshift.impl.client.CubeOpenShiftConfiguration)|",
    "called": "|java+constructor:///org/arquillian/cube/kubernetes/impl/DefaultConfigurationFluentImpl/DefaultConfigurationFluentImpl()|",
    "v1Body": [
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getScriptEnvironmentVariables()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getRouterHost()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/isNamespaceCleanupEnabled()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getWaitPollInterval()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getEnvironmentConfigUrl()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getWaitForServiceList()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/isEnvironmentInitEnabled()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withScriptEnvironmentVariables(java.util.Map)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withWaitForServiceList(java.util.List)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withEnvironmentSetupScriptUrl(java.net.URL)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getNamespaceDestroyTimeout()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withEnvironmentInitEnabled(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getKubernetesDomain()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withKubernetesDomain(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getOpenshiftRouterHttpsPort()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getAutoStartContainers()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withNamespaceCleanupConfirmationEnabled(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withNamespaceDestroyEnabled(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withSessionId(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/isNamespaceDestroyConfirmationEnabled()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getEnvironmentTeardownScriptUrl()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withEnvironmentConfigUrl(java.net.URL)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/isAnsiLoggerEnabled()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getOpenshiftRouterHttpPort()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withWaitTimeout(long)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getWaitTimeout()|",
      "|java+constructor:///java/util/LinkedHashSet/LinkedHashSet()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withNamespaceLazyCreateEnabled(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withRouterHost(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/isKeepAliveGitServer()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getPortForwardBindAddress()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getMasterUrl()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withPortForwardBindAddress(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getProxiedContainerPorts()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withNamespace(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withNamespaceCleanupEnabled(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withOpenshiftRouterHttpsPort(int)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getSessionId()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withDefinitionsFile(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withMasterUrl(java.net.URL)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withKeepAliveGitServer(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withDefinitions(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withNamespaceCleanupTimeout(long)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/isNamespaceLazyCreateEnabled()|",
      "|java+constructor:///org/arquillian/cube/kubernetes/impl/DefaultConfigurationFluentImpl/DefaultConfigurationFluentImpl()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withOpenshiftRouterHttpPort(int)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getDockerRegistry()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withDockerRegistry(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getNamespaceCleanupTimeout()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withEnvironmentDependencies(java.util.List)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withAutoStartContainers(java.lang.String%5B%5D)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getEnvironmentSetupScriptUrl()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withAnsiLoggerEnabled(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getNamespace()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withEnvironmentTeardownScriptUrl(java.net.URL)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withNamespaceDestroyConfirmationEnabled(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withEnvironmentConfigAdditionalUrls(java.util.List)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getEnvironmentDependencies()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/isNamespaceDestroyEnabled()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getDefinitionsFile()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/isNamespaceCleanupConfirmationEnabled()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withWaitPollInterval(long)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withProxiedContainerPorts(java.util.Set)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getEnvironmentConfigAdditionalUrls()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getDefinitions()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withNamespaceDestroyTimeout(long)|"
    ],
    "v2Body": [
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/isTemplateProcess()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/isNamespaceCleanupEnabled()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withWaitForServiceList(java.util.List)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withEnvironmentSetupScriptUrl(java.net.URL)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getNamespaceDestroyTimeout()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withEnvironmentInitEnabled(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getKubernetesDomain()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withKubernetesDomain(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getOpenshiftRouterHttpsPort()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getAutoStartContainers()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getClient()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withNamespaceCleanupConfirmationEnabled(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withNamespaceDestroyEnabled(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/isWaitEnabled()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getRouterSniPort()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withSessionId(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/isNamespaceDestroyConfirmationEnabled()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getEnvironmentTeardownScriptUrl()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withStartupTimeout(long)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/isAnsiLoggerEnabled()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/isLogCopyEnabled()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withEnvironmentConfigUrl(java.net.URL)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getLogPath()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getScriptEnvironmentVariables()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getOpenshiftRouterHttpPort()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withTemplateURL(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withWaitTimeout(long)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withTrustCerts(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getRouterHost()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getWaitTimeout()|",
      "|java+constructor:///java/util/LinkedHashSet/LinkedHashSet()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withRouterHost(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withHttpClientTimeout(long)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withNamespaceLazyCreateEnabled(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/isKeepAliveGitServer()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getPortForwardBindAddress()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/isEnableImageStreamDetection()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getMasterUrl()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withPortForwardBindAddress(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withToken(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getProxiedContainerPorts()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getHttpClientTimeout()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getUsername()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withNamespace(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withNamespaceCleanupEnabled(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withOpenshiftRouterHttpsPort(int)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getSessionId()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withDefinitionsFile(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withUsername(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withTemplateProcess(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getWaitPollInterval()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getTemplateLabels()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withTemplateLabels(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getEnvironmentConfigUrl()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withEnableImageStreamDetection(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withMasterUrl(java.net.URL)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getPassword()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getTemplateURL()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withKeepAliveGitServer(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withDefinitions(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withPassword(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withNamespaceCleanupTimeout(long)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/isNamespaceLazyCreateEnabled()|",
      "|java+constructor:///org/arquillian/cube/kubernetes/impl/DefaultConfigurationFluentImpl/DefaultConfigurationFluentImpl()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withOpenshiftRouterHttpPort(int)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/isTrustCerts()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getDockerRegistry()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getApiVersion()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withDockerRegistry(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getNamespaceCleanupTimeout()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withEnvironmentDependencies(java.util.List)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withAutoStartContainers(java.lang.String%5B%5D)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getToken()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withApiVersion(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getWaitForServiceList()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withLogCopyEnabled(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getEnvironmentSetupScriptUrl()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withAnsiLoggerEnabled(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withEnvironmentTeardownScriptUrl(java.net.URL)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withNamespaceDestroyConfirmationEnabled(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withRouterSniPort(int)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getNamespace()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getEnvironmentDependencies()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withWaitEnabled(boolean)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/isNamespaceDestroyEnabled()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getDefinitionsFile()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/isNamespaceCleanupConfirmationEnabled()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withWaitPollInterval(long)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/isEnvironmentInitEnabled()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withClient(org.arquillian.cube.openshift.impl.client.OpenShiftClient)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getTemplateParameters()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withLogPath(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getStartupTimeout()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withScriptEnvironmentVariables(java.util.Map)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withTemplateParameters(java.lang.String)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withProxiedContainerPorts(java.util.Set)|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfiguration/getDefinitions()|",
      "|java+method:///org/arquillian/cube/openshift/impl/client/CubeOpenShiftConfigurationFluentImpl/withNamespaceDestroyTimeout(long)|"
    ],
    "affectedLib": "org.arquillian.cube:arquillian-cube-kubernetes:1.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.8.0",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.10.0",
    "caller": "|java+method:///org/arquillian/cube/openshift/impl/namespace/OpenshiftNamespaceService$ImmutableOpenshiftNamespaceService/annotate(java.lang.String,java.util.Map)|",
    "called": "|java+method:///org/arquillian/cube/kubernetes/impl/namespace/DefaultNamespaceService$ImmutableNamespaceService/annotate(java.lang.String,java.util.Map)|",
    "v1Body": [
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/dsl/Resource/get()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/KubernetesClient/adapt(java.lang.Class)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/dsl/NonNamespaceOperation/withName(java.lang.String)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/KubernetesClient/isAdaptable(java.lang.Class)|",
      "|java+method:///io/fabric8/openshift/clnt/v2_5/OpenShiftClient/namespaces()|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/arquillian/cube/kubernetes/impl/namespace/DefaultNamespaceService$ImmutableNamespaceService/annotate(java.lang.String,java.util.Map)|"
    ],
    "v2Body": [
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/KubernetesClient/adapt(java.lang.Class)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/dsl/Resource/get()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/KubernetesClient/isAdaptable(java.lang.Class)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/dsl/NonNamespaceOperation/withName(java.lang.String)|",
      "|java+method:///io/fabric8/openshift/clnt/v3_1/OpenShiftClient/namespaces()|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/arquillian/cube/kubernetes/impl/namespace/DefaultNamespaceService$ImmutableNamespaceService/annotate(java.lang.String,java.util.Map)|"
    ],
    "affectedLib": "org.arquillian.cube:arquillian-cube-kubernetes:1.10.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.arquillian.cube:arquillian-cube-openshift:1.8.0",
    "coordinatesV2": "org.arquillian.cube:arquillian-cube-openshift:1.10.0",
    "caller": "|java+method:///org/arquillian/cube/openshift/impl/namespace/OpenshiftNamespaceService$ImmutableOpenshiftNamespaceService/delete(java.lang.String)|",
    "called": "|java+method:///org/arquillian/cube/kubernetes/impl/namespace/DefaultNamespaceService$ImmutableNamespaceService/delete(java.lang.String)|",
    "v1Body": [
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/KubernetesClient/adapt(java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/arquillian/cube/kubernetes/impl/namespace/DefaultNamespaceService$ImmutableNamespaceService/delete(java.lang.String)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/dsl/NonNamespaceOperation/withName(java.lang.String)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/KubernetesClient/isAdaptable(java.lang.Class)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v2_5/dsl/Resource/delete()|",
      "|java+method:///io/fabric8/openshift/clnt/v2_5/OpenShiftClient/projects()|",
      "|java+method:///org/arquillian/cube/kubernetes/api/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/KubernetesClient/adapt(java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/arquillian/cube/kubernetes/impl/namespace/DefaultNamespaceService$ImmutableNamespaceService/delete(java.lang.String)|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/KubernetesClient/isAdaptable(java.lang.Class)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/arquillian/cube/kubernetes/api/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/dsl/Resource/delete()|",
      "|java+method:///io/fabric8/kubernetes/clnt/v3_1/dsl/NonNamespaceOperation/withName(java.lang.String)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///io/fabric8/openshift/clnt/v3_1/OpenShiftClient/projects()|"
    ],
    "affectedLib": "org.arquillian.cube:arquillian-cube-kubernetes:1.10.0",
    "change": "UPDATED"
  }
]