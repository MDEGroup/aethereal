[
  {
    "coordinatesV1": "com.corundumstudio.socketio:netty-socketio:1.6.0",
    "coordinatesV2": "com.corundumstudio.socketio:netty-socketio:1.5.4",
    "caller": "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)|",
    "called": "|java+constructor:///io/netty/handler/codec/http/DefaultHttpResponse/DefaultHttpResponse(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus)|",
    "v1Body": [
      "|java+method:///io/netty/channel/ChannelHandlerContext/fireChannelRead(java.lang.Object)|",
      "|java+method:///java/net/URLConnection/getContentLengthLong()|",
      "|java+method:///java/net/URL/openConnection()|",
      "|java+method:///java/net/URLConnection/getContentLength()|",
      "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/sendNotModified(io.netty.channel.ChannelHandlerContext)|",
      "|java+constructor:///io/netty/handler/stream/ChunkedStream/ChunkedStream(java.io.InputStream,int)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/net/URLConnection/getLastModified()|",
      "|java+constructor:///com/corundumstudio/socketio/handler/ResourceHandler$1/ResourceHandler$1(com.corundumstudio.socketio.handler.ResourceHandler,io.netty.channel.ChannelHandlerContext,java.io.InputStream)|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/channel()|",
      "|java+method:///io/netty/channel/ChannelFuture/addListener(io.netty.util.concurrent.GenericFutureListener)|",
      "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/sendError(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.HttpResponseStatus)|",
      "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/isNotModified(io.netty.handler.codec.http.HttpRequest,long)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/release()|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/setContentLength(io.netty.handler.codec.http.HttpMessage,long)|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/write(java.lang.Object)|",
      "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/setContentTypeHeader(io.netty.handler.codec.http.HttpResponse,java.net.URLConnection)|",
      "|java+method:///java/net/URLConnection/getInputStream()|",
      "|java+method:///io/netty/handler/codec/http/QueryStringDecoder/path()|",
      "|java+constructor:///io/netty/handler/codec/http/DefaultHttpResponse/DefaultHttpResponse(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus)|",
      "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/setDateAndCacheHeaders(io.netty.handler.codec.http.HttpResponse,long)|",
      "|java+method:///io/netty/channel/Channel/write(java.lang.Object)|",
      "|java+constructor:///io/netty/handler/codec/http/QueryStringDecoder/QueryStringDecoder(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/getUri()|"
    ],
    "v2Body": [
      "|java+method:///io/netty/channel/ChannelHandlerContext/fireChannelRead(java.lang.Object)|",
      "|java+method:///java/net/URLConnection/getContentLengthLong()|",
      "|java+method:///java/net/URL/openConnection()|",
      "|java+method:///java/net/URLConnection/getContentLength()|",
      "|java+constructor:///io/netty/handler/stream/ChunkedStream/ChunkedStream(java.io.InputStream,int)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/channel()|",
      "|java+method:///io/netty/channel/ChannelFuture/addListener(io.netty.util.concurrent.GenericFutureListener)|",
      "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/sendError(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.HttpResponseStatus)|",
      "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/isNotModified(io.netty.handler.codec.http.HttpRequest,long)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/release()|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/setContentLength(io.netty.handler.codec.http.HttpMessage,long)|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/write(java.lang.Object)|",
      "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/sendNotModified(io.netty.channel.ChannelHandlerContext)|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/pipeline()|",
      "|java+method:///java/net/URLConnection/getLastModified()|",
      "|java+constructor:///io/netty/handler/stream/ChunkedWriteHandler/ChunkedWriteHandler()|",
      "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/setContentTypeHeader(io.netty.handler.codec.http.HttpResponse,java.net.URLConnection)|",
      "|java+method:///java/net/URLConnection/getInputStream()|",
      "|java+method:///io/netty/handler/codec/http/QueryStringDecoder/path()|",
      "|java+constructor:///io/netty/handler/codec/http/DefaultHttpResponse/DefaultHttpResponse(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus)|",
      "|java+method:///io/netty/channel/ChannelPipeline/addBefore(java.lang.String,java.lang.String,io.netty.channel.ChannelHandler)|",
      "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/setDateAndCacheHeaders(io.netty.handler.codec.http.HttpResponse,long)|",
      "|java+method:///io/netty/channel/Channel/write(java.lang.Object)|",
      "|java+constructor:///io/netty/handler/codec/http/QueryStringDecoder/QueryStringDecoder(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/getUri()|"
    ],
    "affectedLib": "io.netty:netty-all:4.0.13.Final",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.corundumstudio.socketio:netty-socketio:1.6.0",
    "coordinatesV2": "com.corundumstudio.socketio:netty-socketio:1.5.4",
    "caller": "|java+method:///com/corundumstudio/socketio/transport/XHRPollingTransport/handleMessage(io.netty.handler.codec.http.FullHttpRequest,io.netty.handler.codec.http.QueryStringDecoder,io.netty.channel.ChannelHandlerContext)|",
    "called": "|java+method:///io/netty/handler/codec/http/HttpMethod/equals(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/netty/channel/Channel/close()|",
      "|java+method:///java/util/UUID/fromString(java.lang.String)|",
      "|java+method:///com/corundumstudio/socketio/transport/XHRPollingTransport/onGet(java.util.UUID,io.netty.channel.ChannelHandlerContext,java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/content()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/channel()|",
      "|java+method:///com/corundumstudio/socketio/transport/BaseClient/onChannelDisconnect()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///io/netty/handler/codec/http/QueryStringDecoder/parameters()|",
      "|java+method:///io/netty/channel/Channel/remoteAddress()|",
      "|java+method:///io/netty/handler/codec/http/HttpMethod/equals(java.lang.Object)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+constructor:///com/corundumstudio/socketio/messages/XHROutMessage/XHROutMessage(java.lang.String,java.util.UUID)|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/get(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/getMethod()|",
      "|java+method:///io/netty/handler/codec/http/QueryStringDecoder/path()|",
      "|java+method:///com/corundumstudio/socketio/transport/XHRPollingTransport/onPost(java.util.UUID,io.netty.channel.ChannelHandlerContext,java.lang.String,io.netty.buffer.ByteBuf)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/headers()|",
      "|java+method:///io/netty/channel/Channel/write(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/netty/channel/Channel/close()|",
      "|java+method:///java/util/UUID/fromString(java.lang.String)|",
      "|java+method:///com/corundumstudio/socketio/transport/XHRPollingTransport/onGet(java.util.UUID,io.netty.channel.ChannelHandlerContext,java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/content()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///com/corundumstudio/socketio/transport/MainBaseClient/onChannelDisconnect()|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/channel()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///io/netty/handler/codec/http/QueryStringDecoder/parameters()|",
      "|java+method:///io/netty/channel/Channel/remoteAddress()|",
      "|java+method:///io/netty/handler/codec/http/HttpMethod/equals(java.lang.Object)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+constructor:///com/corundumstudio/socketio/messages/XHROutMessage/XHROutMessage(java.lang.String,java.util.UUID)|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/get(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/getMethod()|",
      "|java+method:///io/netty/handler/codec/http/QueryStringDecoder/path()|",
      "|java+method:///com/corundumstudio/socketio/transport/XHRPollingTransport/onPost(java.util.UUID,io.netty.channel.ChannelHandlerContext,java.lang.String,io.netty.buffer.ByteBuf)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/headers()|",
      "|java+method:///io/netty/channel/Channel/write(java.lang.Object)|"
    ],
    "affectedLib": "io.netty:netty-all:4.0.13.Final",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.corundumstudio.socketio:netty-socketio:1.6.0",
    "coordinatesV2": "com.corundumstudio.socketio:netty-socketio:1.5.4",
    "caller": "|java+method:///com/corundumstudio/socketio/transport/WebSocketTransport/channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)|",
    "called": "|java+constructor:///io/netty/handler/codec/http/QueryStringDecoder/QueryStringDecoder(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/fireChannelRead(java.lang.Object)|",
      "|java+method:///io/netty/handler/codec/http/websocketx/CloseWebSocketFrame/release()|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/pipeline()|",
      "|java+constructor:///com/corundumstudio/socketio/messages/PacketsMessage/PacketsMessage(com.corundumstudio.socketio.transport.BaseClient,io.netty.buffer.ByteBuf)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/channel()|",
      "|java+method:///com/corundumstudio/socketio/transport/WebSocketTransport/handshake(io.netty.channel.ChannelHandlerContext,java.lang.String,io.netty.handler.codec.http.FullHttpRequest)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/release()|",
      "|java+method:///io/netty/channel/ChannelPipeline/fireChannelRead(java.lang.Object)|",
      "|java+method:///io/netty/handler/codec/http/websocketx/TextWebSocketFrame/content()|",
      "|java+method:///io/netty/channel/Channel/close()|",
      "|java+method:///io/netty/handler/codec/http/QueryStringDecoder/path()|",
      "|java+method:///io/netty/handler/codec/http/websocketx/TextWebSocketFrame/release()|",
      "|java+constructor:///io/netty/handler/codec/http/QueryStringDecoder/QueryStringDecoder(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/getUri()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/fireChannelRead(java.lang.Object)|",
      "|java+method:///io/netty/handler/codec/http/websocketx/CloseWebSocketFrame/release()|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/pipeline()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///com/corundumstudio/socketio/messages/PacketsMessage/PacketsMessage(com.corundumstudio.socketio.transport.MainBaseClient,io.netty.buffer.ByteBuf)|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/channel()|",
      "|java+method:///com/corundumstudio/socketio/transport/WebSocketTransport/handshake(io.netty.channel.ChannelHandlerContext,java.lang.String,io.netty.handler.codec.http.FullHttpRequest)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/release()|",
      "|java+method:///io/netty/channel/ChannelPipeline/fireChannelRead(java.lang.Object)|",
      "|java+method:///io/netty/handler/codec/http/websocketx/TextWebSocketFrame/content()|",
      "|java+method:///io/netty/channel/Channel/close()|",
      "|java+method:///io/netty/handler/codec/http/QueryStringDecoder/path()|",
      "|java+method:///io/netty/handler/codec/http/websocketx/TextWebSocketFrame/release()|",
      "|java+constructor:///io/netty/handler/codec/http/QueryStringDecoder/QueryStringDecoder(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/getUri()|"
    ],
    "affectedLib": "io.netty:netty-all:4.0.13.Final",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.corundumstudio.socketio:netty-socketio:1.6.0",
    "coordinatesV2": "com.corundumstudio.socketio:netty-socketio:1.5.4",
    "caller": "|java+constructor:///com/corundumstudio/socketio/handler/ResourceHandler/ResourceHandler(java.lang.String)|",
    "called": "|java+constructor:///io/netty/handler/stream/ChunkedWriteHandler/ChunkedWriteHandler()|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+constructor:///io/netty/handler/stream/ChunkedWriteHandler/ChunkedWriteHandler()|",
      "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/addResource(java.lang.String,java.lang.String)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+constructor:///io/netty/channel/ChannelInboundHandlerAdapter/ChannelInboundHandlerAdapter()|",
      "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/addResource(java.lang.String,java.lang.String)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "affectedLib": "io.netty:netty-all:4.0.13.Final",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.corundumstudio.socketio:netty-socketio:1.5.4",
    "coordinatesV2": "com.corundumstudio.socketio:netty-socketio:1.6.0",
    "caller": "|java+constructor:///com/corundumstudio/socketio/handler/ResourceHandler/ResourceHandler(java.lang.String)|",
    "called": "|java+constructor:///io/netty/channel/ChannelInboundHandlerAdapter/ChannelInboundHandlerAdapter()|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+constructor:///io/netty/handler/stream/ChunkedWriteHandler/ChunkedWriteHandler()|",
      "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/addResource(java.lang.String,java.lang.String)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+constructor:///io/netty/channel/ChannelInboundHandlerAdapter/ChannelInboundHandlerAdapter()|",
      "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/addResource(java.lang.String,java.lang.String)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "affectedLib": "io.netty:netty-transport:4.0.13.Final",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.corundumstudio.socketio:netty-socketio:1.5.4",
    "coordinatesV2": "com.corundumstudio.socketio:netty-socketio:1.6.0",
    "caller": "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)|",
    "called": "|java+method:///io/netty/handler/codec/http/HttpHeaders/setContentLength(io.netty.handler.codec.http.HttpMessage,long)|",
    "v1Body": [
      "|java+method:///io/netty/channel/ChannelHandlerContext/fireChannelRead(java.lang.Object)|",
      "|java+method:///java/net/URLConnection/getContentLengthLong()|",
      "|java+method:///java/net/URL/openConnection()|",
      "|java+method:///java/net/URLConnection/getContentLength()|",
      "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/sendNotModified(io.netty.channel.ChannelHandlerContext)|",
      "|java+constructor:///io/netty/handler/stream/ChunkedStream/ChunkedStream(java.io.InputStream,int)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/net/URLConnection/getLastModified()|",
      "|java+constructor:///com/corundumstudio/socketio/handler/ResourceHandler$1/ResourceHandler$1(com.corundumstudio.socketio.handler.ResourceHandler,io.netty.channel.ChannelHandlerContext,java.io.InputStream)|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/channel()|",
      "|java+method:///io/netty/channel/ChannelFuture/addListener(io.netty.util.concurrent.GenericFutureListener)|",
      "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/sendError(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.HttpResponseStatus)|",
      "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/isNotModified(io.netty.handler.codec.http.HttpRequest,long)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/release()|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/setContentLength(io.netty.handler.codec.http.HttpMessage,long)|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/write(java.lang.Object)|",
      "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/setContentTypeHeader(io.netty.handler.codec.http.HttpResponse,java.net.URLConnection)|",
      "|java+method:///java/net/URLConnection/getInputStream()|",
      "|java+method:///io/netty/handler/codec/http/QueryStringDecoder/path()|",
      "|java+constructor:///io/netty/handler/codec/http/DefaultHttpResponse/DefaultHttpResponse(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus)|",
      "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/setDateAndCacheHeaders(io.netty.handler.codec.http.HttpResponse,long)|",
      "|java+method:///io/netty/channel/Channel/write(java.lang.Object)|",
      "|java+constructor:///io/netty/handler/codec/http/QueryStringDecoder/QueryStringDecoder(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/getUri()|"
    ],
    "v2Body": [
      "|java+method:///io/netty/channel/ChannelHandlerContext/fireChannelRead(java.lang.Object)|",
      "|java+method:///java/net/URLConnection/getContentLengthLong()|",
      "|java+method:///java/net/URL/openConnection()|",
      "|java+method:///java/net/URLConnection/getContentLength()|",
      "|java+constructor:///io/netty/handler/stream/ChunkedStream/ChunkedStream(java.io.InputStream,int)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/channel()|",
      "|java+method:///io/netty/channel/ChannelFuture/addListener(io.netty.util.concurrent.GenericFutureListener)|",
      "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/sendError(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.HttpResponseStatus)|",
      "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/isNotModified(io.netty.handler.codec.http.HttpRequest,long)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/release()|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/setContentLength(io.netty.handler.codec.http.HttpMessage,long)|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/write(java.lang.Object)|",
      "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/sendNotModified(io.netty.channel.ChannelHandlerContext)|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/pipeline()|",
      "|java+method:///java/net/URLConnection/getLastModified()|",
      "|java+constructor:///io/netty/handler/stream/ChunkedWriteHandler/ChunkedWriteHandler()|",
      "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/setContentTypeHeader(io.netty.handler.codec.http.HttpResponse,java.net.URLConnection)|",
      "|java+method:///java/net/URLConnection/getInputStream()|",
      "|java+method:///io/netty/handler/codec/http/QueryStringDecoder/path()|",
      "|java+constructor:///io/netty/handler/codec/http/DefaultHttpResponse/DefaultHttpResponse(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus)|",
      "|java+method:///io/netty/channel/ChannelPipeline/addBefore(java.lang.String,java.lang.String,io.netty.channel.ChannelHandler)|",
      "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/setDateAndCacheHeaders(io.netty.handler.codec.http.HttpResponse,long)|",
      "|java+method:///io/netty/channel/Channel/write(java.lang.Object)|",
      "|java+constructor:///io/netty/handler/codec/http/QueryStringDecoder/QueryStringDecoder(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/getUri()|"
    ],
    "affectedLib": "io.netty:netty-codec-http:4.0.13.Final",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.corundumstudio.socketio:netty-socketio:1.5.4",
    "coordinatesV2": "com.corundumstudio.socketio:netty-socketio:1.6.0",
    "caller": "|java+method:///com/corundumstudio/socketio/transport/XHRPollingTransport/handleMessage(io.netty.handler.codec.http.FullHttpRequest,io.netty.handler.codec.http.QueryStringDecoder,io.netty.channel.ChannelHandlerContext)|",
    "called": "|java+method:///io/netty/handler/codec/http/HttpMethod/equals(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/netty/channel/Channel/close()|",
      "|java+method:///java/util/UUID/fromString(java.lang.String)|",
      "|java+method:///com/corundumstudio/socketio/transport/XHRPollingTransport/onGet(java.util.UUID,io.netty.channel.ChannelHandlerContext,java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/content()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/channel()|",
      "|java+method:///com/corundumstudio/socketio/transport/BaseClient/onChannelDisconnect()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///io/netty/handler/codec/http/QueryStringDecoder/parameters()|",
      "|java+method:///io/netty/channel/Channel/remoteAddress()|",
      "|java+method:///io/netty/handler/codec/http/HttpMethod/equals(java.lang.Object)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+constructor:///com/corundumstudio/socketio/messages/XHROutMessage/XHROutMessage(java.lang.String,java.util.UUID)|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/get(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/getMethod()|",
      "|java+method:///io/netty/handler/codec/http/QueryStringDecoder/path()|",
      "|java+method:///com/corundumstudio/socketio/transport/XHRPollingTransport/onPost(java.util.UUID,io.netty.channel.ChannelHandlerContext,java.lang.String,io.netty.buffer.ByteBuf)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/headers()|",
      "|java+method:///io/netty/channel/Channel/write(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/netty/channel/Channel/close()|",
      "|java+method:///java/util/UUID/fromString(java.lang.String)|",
      "|java+method:///com/corundumstudio/socketio/transport/XHRPollingTransport/onGet(java.util.UUID,io.netty.channel.ChannelHandlerContext,java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/content()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///com/corundumstudio/socketio/transport/MainBaseClient/onChannelDisconnect()|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/channel()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///io/netty/handler/codec/http/QueryStringDecoder/parameters()|",
      "|java+method:///io/netty/channel/Channel/remoteAddress()|",
      "|java+method:///io/netty/handler/codec/http/HttpMethod/equals(java.lang.Object)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+constructor:///com/corundumstudio/socketio/messages/XHROutMessage/XHROutMessage(java.lang.String,java.util.UUID)|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/get(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/getMethod()|",
      "|java+method:///io/netty/handler/codec/http/QueryStringDecoder/path()|",
      "|java+method:///com/corundumstudio/socketio/transport/XHRPollingTransport/onPost(java.util.UUID,io.netty.channel.ChannelHandlerContext,java.lang.String,io.netty.buffer.ByteBuf)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/headers()|",
      "|java+method:///io/netty/channel/Channel/write(java.lang.Object)|"
    ],
    "affectedLib": "io.netty:netty-codec-http:4.0.13.Final",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.corundumstudio.socketio:netty-socketio:1.5.4",
    "coordinatesV2": "com.corundumstudio.socketio:netty-socketio:1.6.0",
    "caller": "|java+method:///com/corundumstudio/socketio/transport/WebSocketTransport/channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)|",
    "called": "|java+method:///io/netty/handler/codec/http/QueryStringDecoder/path()|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/fireChannelRead(java.lang.Object)|",
      "|java+method:///io/netty/handler/codec/http/websocketx/CloseWebSocketFrame/release()|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/pipeline()|",
      "|java+constructor:///com/corundumstudio/socketio/messages/PacketsMessage/PacketsMessage(com.corundumstudio.socketio.transport.BaseClient,io.netty.buffer.ByteBuf)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/channel()|",
      "|java+method:///com/corundumstudio/socketio/transport/WebSocketTransport/handshake(io.netty.channel.ChannelHandlerContext,java.lang.String,io.netty.handler.codec.http.FullHttpRequest)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/release()|",
      "|java+method:///io/netty/channel/ChannelPipeline/fireChannelRead(java.lang.Object)|",
      "|java+method:///io/netty/handler/codec/http/websocketx/TextWebSocketFrame/content()|",
      "|java+method:///io/netty/channel/Channel/close()|",
      "|java+method:///io/netty/handler/codec/http/QueryStringDecoder/path()|",
      "|java+method:///io/netty/handler/codec/http/websocketx/TextWebSocketFrame/release()|",
      "|java+constructor:///io/netty/handler/codec/http/QueryStringDecoder/QueryStringDecoder(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/getUri()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/fireChannelRead(java.lang.Object)|",
      "|java+method:///io/netty/handler/codec/http/websocketx/CloseWebSocketFrame/release()|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/pipeline()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///com/corundumstudio/socketio/messages/PacketsMessage/PacketsMessage(com.corundumstudio.socketio.transport.MainBaseClient,io.netty.buffer.ByteBuf)|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/channel()|",
      "|java+method:///com/corundumstudio/socketio/transport/WebSocketTransport/handshake(io.netty.channel.ChannelHandlerContext,java.lang.String,io.netty.handler.codec.http.FullHttpRequest)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/release()|",
      "|java+method:///io/netty/channel/ChannelPipeline/fireChannelRead(java.lang.Object)|",
      "|java+method:///io/netty/handler/codec/http/websocketx/TextWebSocketFrame/content()|",
      "|java+method:///io/netty/channel/Channel/close()|",
      "|java+method:///io/netty/handler/codec/http/QueryStringDecoder/path()|",
      "|java+method:///io/netty/handler/codec/http/websocketx/TextWebSocketFrame/release()|",
      "|java+constructor:///io/netty/handler/codec/http/QueryStringDecoder/QueryStringDecoder(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/getUri()|"
    ],
    "affectedLib": "io.netty:netty-codec-http:4.0.13.Final",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.corundumstudio.socketio:netty-socketio:1.5.4",
    "coordinatesV2": "com.corundumstudio.socketio:netty-socketio:1.6.0",
    "caller": "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)|",
    "called": "|java+constructor:///io/netty/handler/stream/ChunkedStream/ChunkedStream(java.io.InputStream,int)|",
    "v1Body": [
      "|java+method:///io/netty/channel/ChannelHandlerContext/fireChannelRead(java.lang.Object)|",
      "|java+method:///java/net/URLConnection/getContentLengthLong()|",
      "|java+method:///java/net/URL/openConnection()|",
      "|java+method:///java/net/URLConnection/getContentLength()|",
      "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/sendNotModified(io.netty.channel.ChannelHandlerContext)|",
      "|java+constructor:///io/netty/handler/stream/ChunkedStream/ChunkedStream(java.io.InputStream,int)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/net/URLConnection/getLastModified()|",
      "|java+constructor:///com/corundumstudio/socketio/handler/ResourceHandler$1/ResourceHandler$1(com.corundumstudio.socketio.handler.ResourceHandler,io.netty.channel.ChannelHandlerContext,java.io.InputStream)|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/channel()|",
      "|java+method:///io/netty/channel/ChannelFuture/addListener(io.netty.util.concurrent.GenericFutureListener)|",
      "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/sendError(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.HttpResponseStatus)|",
      "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/isNotModified(io.netty.handler.codec.http.HttpRequest,long)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/release()|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/setContentLength(io.netty.handler.codec.http.HttpMessage,long)|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/write(java.lang.Object)|",
      "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/setContentTypeHeader(io.netty.handler.codec.http.HttpResponse,java.net.URLConnection)|",
      "|java+method:///java/net/URLConnection/getInputStream()|",
      "|java+method:///io/netty/handler/codec/http/QueryStringDecoder/path()|",
      "|java+constructor:///io/netty/handler/codec/http/DefaultHttpResponse/DefaultHttpResponse(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus)|",
      "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/setDateAndCacheHeaders(io.netty.handler.codec.http.HttpResponse,long)|",
      "|java+method:///io/netty/channel/Channel/write(java.lang.Object)|",
      "|java+constructor:///io/netty/handler/codec/http/QueryStringDecoder/QueryStringDecoder(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/getUri()|"
    ],
    "v2Body": [
      "|java+method:///io/netty/channel/ChannelHandlerContext/fireChannelRead(java.lang.Object)|",
      "|java+method:///java/net/URLConnection/getContentLengthLong()|",
      "|java+method:///java/net/URL/openConnection()|",
      "|java+method:///java/net/URLConnection/getContentLength()|",
      "|java+constructor:///io/netty/handler/stream/ChunkedStream/ChunkedStream(java.io.InputStream,int)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/channel()|",
      "|java+method:///io/netty/channel/ChannelFuture/addListener(io.netty.util.concurrent.GenericFutureListener)|",
      "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/sendError(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.HttpResponseStatus)|",
      "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/isNotModified(io.netty.handler.codec.http.HttpRequest,long)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/release()|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/setContentLength(io.netty.handler.codec.http.HttpMessage,long)|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/write(java.lang.Object)|",
      "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/sendNotModified(io.netty.channel.ChannelHandlerContext)|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/pipeline()|",
      "|java+method:///java/net/URLConnection/getLastModified()|",
      "|java+constructor:///io/netty/handler/stream/ChunkedWriteHandler/ChunkedWriteHandler()|",
      "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/setContentTypeHeader(io.netty.handler.codec.http.HttpResponse,java.net.URLConnection)|",
      "|java+method:///java/net/URLConnection/getInputStream()|",
      "|java+method:///io/netty/handler/codec/http/QueryStringDecoder/path()|",
      "|java+constructor:///io/netty/handler/codec/http/DefaultHttpResponse/DefaultHttpResponse(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus)|",
      "|java+method:///io/netty/channel/ChannelPipeline/addBefore(java.lang.String,java.lang.String,io.netty.channel.ChannelHandler)|",
      "|java+method:///com/corundumstudio/socketio/handler/ResourceHandler/setDateAndCacheHeaders(io.netty.handler.codec.http.HttpResponse,long)|",
      "|java+method:///io/netty/channel/Channel/write(java.lang.Object)|",
      "|java+constructor:///io/netty/handler/codec/http/QueryStringDecoder/QueryStringDecoder(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/getUri()|"
    ],
    "affectedLib": "io.netty:netty-handler:4.0.13.Final",
    "change": "ADDED"
  }
]