[
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/Utils/getIdFromPath(java.lang.String)|",
    "called": "|java+method:///org/apache/commons/codec/binary/Hex/encodeHexString(byte%5B%5D)|",
    "v1Body": [
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/Utils/encodeHexString(byte%5B%5D,java.lang.StringBuilder)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/length()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder(int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/security/MessageDigest/getDigestLength()|",
      "|java+method:///java/lang/String/getBytes(java.nio.charset.Charset)|",
      "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/getName(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/Utils/pathDepth(java.lang.String)|",
      "|java+method:///java/security/MessageDigest/digest(byte%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/getParentPath(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/Utils/isLongPath(java.lang.String)|",
      "|java+method:///java/security/MessageDigest/getInstance(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/getBytes(java.nio.charset.Charset)|",
      "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/getName(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/Utils/pathDepth(java.lang.String)|",
      "|java+method:///java/security/MessageDigest/digest(byte%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/getParentPath(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/Utils/isLongPath(java.lang.String)|",
      "|java+method:///java/security/MessageDigest/getInstance(java.lang.String)|",
      "|java+method:///org/apache/commons/codec/binary/Hex/encodeHexString(byte%5B%5D)|"
    ],
    "affectedLib": "commons-codec:commons-codec:1.11",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeState/builder()|",
    "called": "|java+constructor:///org/apache/jackrabbit/oak/plugins/memory/MemoryNodeBuilder/MemoryNodeBuilder(org.apache.jackrabbit.oak.spi.state.NodeState)|",
    "v1Body": [
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/getBranches()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeState/getPath()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/RevisionVector/getBranchRevision()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Branch/isHead(org.apache.jackrabbit.oak.plugins.document.Revision)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeState/getRootRevision()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/RevisionVector/isBranch()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UnmergedBranches/getBranch(org.apache.jackrabbit.oak.plugins.document.RevisionVector)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/isDisableBranches()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentRootBuilder/DocumentRootBuilder(org.apache.jackrabbit.oak.plugins.document.DocumentNodeState,org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBranch/getCurrentBranch()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/memory/MemoryNodeBuilder/MemoryNodeBuilder(org.apache.jackrabbit.oak.spi.state.NodeState)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/RevisionVector/isBranch()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeState/getPath()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/createBranch(org.apache.jackrabbit.oak.plugins.document.DocumentNodeState)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentRootBuilder/DocumentRootBuilder(org.apache.jackrabbit.oak.plugins.document.DocumentNodeState,org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreBranch)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/memory/MemoryNodeBuilder/MemoryNodeBuilder(org.apache.jackrabbit.oak.spi.state.NodeState)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeState/getRootRevision()|"
    ],
    "affectedLib": "org.apache.jackrabbit:oak-store-spi:1.9.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBranch$InMemory/rebase()|",
    "called": "|java+constructor:///org/apache/jackrabbit/oak/plugins/memory/MemoryNodeBuilder/MemoryNodeBuilder(org.apache.jackrabbit.oak.spi.state.NodeState)|",
    "v1Body": [
      "|java+method:///org/apache/jackrabbit/oak/spi/state/NodeBuilder/getNodeState()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeState/builder()|",
      "|java+method:///org/apache/jackrabbit/oak/spi/state/NodeState/compareAgainstBaseState(org.apache.jackrabbit.oak.spi.state.NodeState,org.apache.jackrabbit.oak.spi.state.NodeStateDiff)|",
      "|java+constructor:///org/apache/jackrabbit/oak/spi/state/ConflictAnnotatingRebaseDiff/ConflictAnnotatingRebaseDiff(org.apache.jackrabbit.oak.spi.state.NodeBuilder)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/getRoot()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/jackrabbit/oak/spi/state/NodeBuilder/getNodeState()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeState/getRootRevision()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/RevisionVector/equals(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBranch$InMemory/newModifiedDocumentNodeState(org.apache.jackrabbit.oak.spi.state.NodeState)|",
      "|java+method:///org/apache/jackrabbit/oak/spi/state/NodeState/compareAgainstBaseState(org.apache.jackrabbit.oak.spi.state.NodeState,org.apache.jackrabbit.oak.spi.state.NodeStateDiff)|",
      "|java+constructor:///org/apache/jackrabbit/oak/spi/state/ConflictAnnotatingRebaseDiff/ConflictAnnotatingRebaseDiff(org.apache.jackrabbit.oak.spi.state.NodeBuilder)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/getRoot()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/memory/MemoryNodeBuilder/MemoryNodeBuilder(org.apache.jackrabbit.oak.spi.state.NodeState)|"
    ],
    "affectedLib": "org.apache.jackrabbit:oak-store-spi:1.9.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/DocumentNodeStore(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreBuilder)|",
    "called": "|java+constructor:///org/apache/jackrabbit/oak/spi/commit/ChangeDispatcher/ChangeDispatcher(org.apache.jackrabbit.oak.spi.state.NodeState)|",
    "v1Body": [
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/VersionGarbageCollector/setGCMonitor(org.apache.jackrabbit.oak.spi.gc.GCMonitor)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/Checkpoints/Checkpoints(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getExecutor()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/CommitValueResolver/CommitValueResolver(int,com.google.common.base.Supplier)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentBroadcastConfig/DocumentBroadcastConfig(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getNodeCachePredicate()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Commit/applyToDocumentStore()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/ReadOnlyDocumentStoreWrapperFactory/getInstance(org.apache.jackrabbit.oak.plugins.document.DocumentStore)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/UnsavedModifications/UnsavedModifications()|",
      "|java+method:///java/lang/System/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/createReferencedBlobs(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/UnmergedBranches/UnmergedBranches()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/isDisableBranches()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/buildNodeCache(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicBoolean/AtomicBoolean()|",
      "|java+method:///java/lang/Boolean/getBoolean(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getClusterId()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeState/getRootRevision()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$4/DocumentNodeStore$4(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,java.lang.String,org.apache.jackrabbit.oak.plugins.document.RevisionVector)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/buildChildrenCache(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/RevisionVector/RevisionVector(org.apache.jackrabbit.oak.plugins.document.Revision%5B%5D)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/bundlor/BundledDocumentDiffer/BundledDocumentDiffer(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/RevisionVector/pmax(org.apache.jackrabbit.oak.plugins.document.RevisionVector)|",
      "|java+constructor:///org/apache/jackrabbit/oak/spi/commit/ChangeDispatcher/ChangeDispatcher(org.apache.jackrabbit.oak.spi.state.NodeState)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getLeaseFailureHandler()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeState/DocumentNodeState(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,java.lang.String,org.apache.jackrabbit.oak.plugins.document.RevisionVector)|",
      "|java+method:///java/lang/Thread/setPriority(int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/isBundlingDisabled()|",
      "|java+constructor:///org/apache/jackrabbit/oak/cache/CacheStats/CacheStats(com.google.common.cache.Cache,java.lang.String,com.google.common.cache.Weigher,long)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$BackgroundSweepOperation/DocumentNodeStore$BackgroundSweepOperation(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,java.util.concurrent.atomic.AtomicBoolean)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getDiffCache()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/isPrefetchExternalChanges()|",
      "|java+method:///java/lang/Thread/start()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentStore/find(org.apache.jackrabbit.oak.plugins.document.Collection,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getGCMonitor()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$BackgroundUpdateOperation/DocumentNodeStore$BackgroundUpdateOperation(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,java.util.concurrent.atomic.AtomicBoolean)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/createMissingLastRevSeeker()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/Commit/Commit(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,org.apache.jackrabbit.oak.plugins.document.Revision,org.apache.jackrabbit.oak.plugins.document.RevisionVector)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/VersionGarbageCollector/setStatisticsProvider(org.apache.jackrabbit.oak.stats.StatisticsProvider)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getLogging()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/RevisionVector/getRevision(int)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/bundlor/BundlingConfigHandler/BundlingConfigHandler()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/ClusterNodeInfo/setLeaseCheckDisabled(boolean)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/BatchCommitQueue/BatchCommitQueue(org.apache.jackrabbit.oak.plugins.document.DocumentStore)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/persistentCache/PersistentCache/setBroadcastConfig(org.apache.jackrabbit.oak.plugins.document.persistentCache.broadcast.DynamicBroadcastConfig)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getReadOnlyMode()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getNodeCacheSize()|",
      "|java+method:///java/lang/Thread/setDaemon(boolean)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UnsavedModifications/put(java.lang.String,org.apache.jackrabbit.oak.plugins.document.Revision)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/VersionGarbageCollector/VersionGarbageCollector(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,org.apache.jackrabbit.oak.plugins.document.VersionGCSupport)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/checkLastRevRecovery()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getAsyncDelay()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/util/LeaseCheckDocumentStoreWrapper/LeaseCheckDocumentStoreWrapper(org.apache.jackrabbit.oak.plugins.document.DocumentStore,org.apache.jackrabbit.oak.plugins.document.ClusterNodeInfo)|",
      "|java+constructor:///java/util/concurrent/locks/ReentrantReadWriteLock/ReentrantReadWriteLock()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getChildrenCacheSize()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/backgroundWrite()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$BackgroundReadOperation/DocumentNodeStore$BackgroundReadOperation(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,java.util.concurrent.atomic.AtomicBoolean)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getBlobStore()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getCommitValueCacheSize()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/renewClusterIdLease()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$1/DocumentNodeStore$1(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Commit/addNode(org.apache.jackrabbit.oak.plugins.document.DocumentNodeState)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getDocumentStore()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/setRoot(org.apache.jackrabbit.oak.plugins.document.RevisionVector)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getTiming()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/CommitQueue/CommitQueue(org.apache.jackrabbit.oak.plugins.document.RevisionContext)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getJournalCache()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$2/DocumentNodeStore$2(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/NodeDocument/getLastRev()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/checkVersion(org.apache.jackrabbit.oak.plugins.document.DocumentStore,boolean)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$BackgroundClusterUpdate/DocumentNodeStore$BackgroundClusterUpdate(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,java.util.concurrent.atomic.AtomicBoolean)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$BackgroundLeaseUpdate/DocumentNodeStore$BackgroundLeaseUpdate(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,java.util.concurrent.atomic.AtomicBoolean)|",
      "|java+constructor:///java/lang/Thread/Thread(java.lang.Runnable,java.lang.String)|",
      "|java+method:///com/google/common/collect/Sets/newConcurrentHashSet()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getWeigher()|",
      "|java+method:///java/lang/Long/getLong(java.lang.String,long)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$3/DocumentNodeStore$3(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UnmergedBranches/init(org.apache.jackrabbit.oak.plugins.document.DocumentStore,org.apache.jackrabbit.oak.plugins.document.RevisionContext)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/ClusterNodeInfo/getId()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getLeaseCheck()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicInteger/AtomicInteger(int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/getRoot()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getPersistentCache()|",
      "|java+method:///com/google/common/collect/Maps/newConcurrentMap()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/util/LoggingDocumentStoreWrapper/LoggingDocumentStoreWrapper(org.apache.jackrabbit.oak.plugins.document.DocumentStore)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/PrefetchDispatcher/PrefetchDispatcher(org.apache.jackrabbit.oak.spi.state.NodeState,java.util.concurrent.Executor)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/ClusterNodeInfo/getInstance(org.apache.jackrabbit.oak.plugins.document.DocumentStore,int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/initializeRootState(org.apache.jackrabbit.oak.plugins.document.NodeDocument)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getJournalPropertyHandlerFactory()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/createVersionGCSupport()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getNodeStoreStatsCollector()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/bundlor/BundlingConfigHandler/initialize(org.apache.jackrabbit.oak.spi.commit.Observable,java.util.concurrent.Executor)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getJournalGCMaxAge()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/newJournalEntry()|",
      "|java+constructor:///java/util/concurrent/locks/ReentrantReadWriteLock/ReentrantReadWriteLock(boolean)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getClock()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/Utils/getIdFromPath(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/newRevision()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/NodeDocument/getSweepRevisions()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getStatisticsProvider()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/isUseSimpleRevision()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/createMBean(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreBuilder)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/LastRevRecoveryAgent/LastRevRecoveryAgent(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,org.apache.jackrabbit.oak.plugins.document.MissingLastRevSeeker)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/JournalGarbageCollector/JournalGarbageCollector(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,long)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/backgroundSweep()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/ClusterNodeInfo/getReadOnlyInstance(org.apache.jackrabbit.oak.plugins.document.DocumentStore)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/util/TimingDocumentStoreWrapper/TimingDocumentStoreWrapper(org.apache.jackrabbit.oak.plugins.document.DocumentStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/ClusterNodeInfo/setLeaseFailureHandler(org.apache.jackrabbit.oak.plugins.document.LeaseFailureHandler)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getUpdateLimit()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/Revision/Revision(long,int,int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/getClusterNodeInfoDisplayString()|",
      "|java+method:///java/lang/Integer/getInteger(java.lang.String,int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/VersionGarbageCollector/setGCMonitor(org.apache.jackrabbit.oak.spi.gc.GCMonitor)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/Checkpoints/Checkpoints(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getExecutor()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/CommitValueResolver/CommitValueResolver(int,com.google.common.base.Supplier)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentBroadcastConfig/DocumentBroadcastConfig(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getNodeCachePredicate()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Commit/applyToDocumentStore()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/ReadOnlyDocumentStoreWrapperFactory/getInstance(org.apache.jackrabbit.oak.plugins.document.DocumentStore)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/UnsavedModifications/UnsavedModifications()|",
      "|java+method:///java/lang/System/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/createReferencedBlobs(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/UnmergedBranches/UnmergedBranches()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/isDisableBranches()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/buildNodeCache(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicBoolean/AtomicBoolean()|",
      "|java+method:///java/lang/Boolean/getBoolean(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getClusterId()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeState/getRootRevision()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$4/DocumentNodeStore$4(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,java.lang.String,org.apache.jackrabbit.oak.plugins.document.RevisionVector)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/buildChildrenCache(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/RevisionVector/RevisionVector(org.apache.jackrabbit.oak.plugins.document.Revision%5B%5D)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/bundlor/BundledDocumentDiffer/BundledDocumentDiffer(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/RevisionVector/pmax(org.apache.jackrabbit.oak.plugins.document.RevisionVector)|",
      "|java+constructor:///org/apache/jackrabbit/oak/spi/commit/ChangeDispatcher/ChangeDispatcher(org.apache.jackrabbit.oak.spi.state.NodeState)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getLeaseFailureHandler()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeState/DocumentNodeState(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,java.lang.String,org.apache.jackrabbit.oak.plugins.document.RevisionVector)|",
      "|java+method:///java/lang/Thread/setPriority(int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/isBundlingDisabled()|",
      "|java+constructor:///org/apache/jackrabbit/oak/cache/CacheStats/CacheStats(com.google.common.cache.Cache,java.lang.String,com.google.common.cache.Weigher,long)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$BackgroundSweepOperation/DocumentNodeStore$BackgroundSweepOperation(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,java.util.concurrent.atomic.AtomicBoolean)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/isPrefetchExternalChanges()|",
      "|java+method:///java/lang/Thread/start()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentStore/find(org.apache.jackrabbit.oak.plugins.document.Collection,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getGCMonitor()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$BackgroundUpdateOperation/DocumentNodeStore$BackgroundUpdateOperation(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,java.util.concurrent.atomic.AtomicBoolean)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/createMissingLastRevSeeker()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/Commit/Commit(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,org.apache.jackrabbit.oak.plugins.document.Revision,org.apache.jackrabbit.oak.plugins.document.RevisionVector)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/VersionGarbageCollector/setStatisticsProvider(org.apache.jackrabbit.oak.stats.StatisticsProvider)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getLogging()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/RevisionVector/getRevision(int)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/bundlor/BundlingConfigHandler/BundlingConfigHandler()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/ClusterNodeInfo/setLeaseCheckDisabled(boolean)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/BatchCommitQueue/BatchCommitQueue(org.apache.jackrabbit.oak.plugins.document.DocumentStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getDiffCache(int)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/persistentCache/PersistentCache/setBroadcastConfig(org.apache.jackrabbit.oak.plugins.document.persistentCache.broadcast.DynamicBroadcastConfig)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getReadOnlyMode()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getNodeCacheSize()|",
      "|java+method:///java/lang/Thread/setDaemon(boolean)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UnsavedModifications/put(java.lang.String,org.apache.jackrabbit.oak.plugins.document.Revision)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/VersionGarbageCollector/VersionGarbageCollector(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,org.apache.jackrabbit.oak.plugins.document.VersionGCSupport)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/checkLastRevRecovery()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getAsyncDelay()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/util/LeaseCheckDocumentStoreWrapper/LeaseCheckDocumentStoreWrapper(org.apache.jackrabbit.oak.plugins.document.DocumentStore,org.apache.jackrabbit.oak.plugins.document.ClusterNodeInfo)|",
      "|java+constructor:///java/util/concurrent/locks/ReentrantReadWriteLock/ReentrantReadWriteLock()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getChildrenCacheSize()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/backgroundWrite()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$BackgroundReadOperation/DocumentNodeStore$BackgroundReadOperation(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,java.util.concurrent.atomic.AtomicBoolean)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getBlobStore()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getCommitValueCacheSize()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/renewClusterIdLease()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$1/DocumentNodeStore$1(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Commit/addNode(org.apache.jackrabbit.oak.plugins.document.DocumentNodeState)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getDocumentStore()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/setRoot(org.apache.jackrabbit.oak.plugins.document.RevisionVector)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getTiming()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/CommitQueue/CommitQueue(org.apache.jackrabbit.oak.plugins.document.RevisionContext)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getJournalCache()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$2/DocumentNodeStore$2(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/NodeDocument/getLastRev()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/checkVersion(org.apache.jackrabbit.oak.plugins.document.DocumentStore,boolean)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$BackgroundClusterUpdate/DocumentNodeStore$BackgroundClusterUpdate(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,java.util.concurrent.atomic.AtomicBoolean)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$BackgroundLeaseUpdate/DocumentNodeStore$BackgroundLeaseUpdate(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,java.util.concurrent.atomic.AtomicBoolean)|",
      "|java+constructor:///java/lang/Thread/Thread(java.lang.Runnable,java.lang.String)|",
      "|java+method:///com/google/common/collect/Sets/newConcurrentHashSet()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getWeigher()|",
      "|java+method:///java/lang/Long/getLong(java.lang.String,long)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$3/DocumentNodeStore$3(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UnmergedBranches/init(org.apache.jackrabbit.oak.plugins.document.DocumentStore,org.apache.jackrabbit.oak.plugins.document.RevisionContext)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/ClusterNodeInfo/getId()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getLeaseCheck()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicInteger/AtomicInteger(int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/getRoot()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getPersistentCache()|",
      "|java+method:///com/google/common/collect/Maps/newConcurrentMap()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/util/LoggingDocumentStoreWrapper/LoggingDocumentStoreWrapper(org.apache.jackrabbit.oak.plugins.document.DocumentStore)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/PrefetchDispatcher/PrefetchDispatcher(org.apache.jackrabbit.oak.spi.state.NodeState,java.util.concurrent.Executor)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/ClusterNodeInfo/getInstance(org.apache.jackrabbit.oak.plugins.document.DocumentStore,int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/initializeRootState(org.apache.jackrabbit.oak.plugins.document.NodeDocument)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getJournalPropertyHandlerFactory()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/createVersionGCSupport()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getNodeStoreStatsCollector()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/bundlor/BundlingConfigHandler/initialize(org.apache.jackrabbit.oak.spi.commit.Observable,java.util.concurrent.Executor)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getJournalGCMaxAge()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/newJournalEntry()|",
      "|java+constructor:///java/util/concurrent/locks/ReentrantReadWriteLock/ReentrantReadWriteLock(boolean)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getClock()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/Utils/getIdFromPath(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/newRevision()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/NodeDocument/getSweepRevisions()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getStatisticsProvider()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/isUseSimpleRevision()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/createMBean(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreBuilder)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/LastRevRecoveryAgent/LastRevRecoveryAgent(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,org.apache.jackrabbit.oak.plugins.document.MissingLastRevSeeker)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/JournalGarbageCollector/JournalGarbageCollector(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,long)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/backgroundSweep()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/ClusterNodeInfo/getReadOnlyInstance(org.apache.jackrabbit.oak.plugins.document.DocumentStore)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/util/TimingDocumentStoreWrapper/TimingDocumentStoreWrapper(org.apache.jackrabbit.oak.plugins.document.DocumentStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/ClusterNodeInfo/setLeaseFailureHandler(org.apache.jackrabbit.oak.plugins.document.LeaseFailureHandler)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getUpdateLimit()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/Revision/Revision(long,int,int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/getClusterNodeInfoDisplayString()|",
      "|java+method:///java/lang/Integer/getInteger(java.lang.String,int)|"
    ],
    "affectedLib": "org.apache.jackrabbit:oak-store-spi:1.9.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/Utils/getIdFromPath(java.lang.String)|",
    "called": "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/getName(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/Utils/encodeHexString(byte%5B%5D,java.lang.StringBuilder)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/length()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder(int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/security/MessageDigest/getDigestLength()|",
      "|java+method:///java/lang/String/getBytes(java.nio.charset.Charset)|",
      "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/getName(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/Utils/pathDepth(java.lang.String)|",
      "|java+method:///java/security/MessageDigest/digest(byte%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/getParentPath(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/Utils/isLongPath(java.lang.String)|",
      "|java+method:///java/security/MessageDigest/getInstance(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/getBytes(java.nio.charset.Charset)|",
      "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/getName(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/Utils/pathDepth(java.lang.String)|",
      "|java+method:///java/security/MessageDigest/digest(byte%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/getParentPath(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/Utils/isLongPath(java.lang.String)|",
      "|java+method:///java/security/MessageDigest/getInstance(java.lang.String)|",
      "|java+method:///org/apache/commons/codec/binary/Hex/encodeHexString(byte%5B%5D)|"
    ],
    "affectedLib": "org.apache.jackrabbit:oak-commons:1.9.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/rdb/RDBDocumentSerializer/fromRow(org.apache.jackrabbit.oak.plugins.document.Collection,org.apache.jackrabbit.oak.plugins.document.rdb.RDBRow)|",
    "called": "|java+constructor:///org/apache/jackrabbit/oak/commons/json/JsopTokenizer/JsopTokenizer(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Collection/newDocument(org.apache.jackrabbit.oak.plugins.document.DocumentStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/rdb/RDBDocumentSerializer/fromBlobData(byte%5B%5D)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/rdb/RDBRow/getData()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/jackrabbit/oak/commons/json/JsopTokenizer/getToken()|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/rdb/RDBRow/hasBinaryProperties()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/rdb/RDBRow/getSdMaxRevTime()|",
      "|java+method:///org/apache/jackrabbit/oak/commons/json/JsopTokenizer/read(int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///org/apache/jackrabbit/oak/commons/json/JsopTokenizer/JsopTokenizer(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/rdb/RDBJSONSupport/parse(org.apache.jackrabbit.oak.commons.json.JsopTokenizer)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/rdb/RDBRow/getModified()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/rdb/RDBRow/getSdType()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Document/put(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/rdb/RDBRow/getBdata()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentStoreException/DocumentStoreException(java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/charAt(int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/rdb/RDBRow/getModcount()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/rdb/RDBRow/getCollisionsModcount()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/rdb/RDBDocumentSerializer/applyUpdate(org.apache.jackrabbit.oak.plugins.document.Document,java.util.List,java.util.List)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/rdb/RDBRow/getSchemaVersion()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/jackrabbit/oak/commons/json/JsopTokenizer/matches(int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/rdb/RDBRow/getId()|",
      "|java+method:///com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentStoreException/DocumentStoreException(java.lang.String)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentStoreException/DocumentStoreException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/apache/jackrabbit/oak/commons/json/JsopTokenizer/read()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/rdb/RDBDocumentSerializer/readDocumentFromJson(org.apache.jackrabbit.oak.commons.json.JsopTokenizer,org.apache.jackrabbit.oak.plugins.document.Document)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/rdb/RDBRow/deletedOnce()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Collection/newDocument(org.apache.jackrabbit.oak.plugins.document.DocumentStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/rdb/RDBDocumentSerializer/fromBlobData(byte%5B%5D)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/rdb/RDBRow/getData()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/jackrabbit/oak/commons/json/JsopTokenizer/getToken()|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/rdb/RDBRow/hasBinaryProperties()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/rdb/RDBRow/getSdMaxRevTime()|",
      "|java+method:///org/apache/jackrabbit/oak/commons/json/JsopTokenizer/read(int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentStoreException/DocumentStoreException(java.lang.String)|",
      "|java+constructor:///org/apache/jackrabbit/oak/commons/json/JsopTokenizer/JsopTokenizer(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/rdb/RDBJSONSupport/parse(org.apache.jackrabbit.oak.commons.json.JsopTokenizer)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/rdb/RDBRow/getModified()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/rdb/RDBRow/getSdType()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Document/put(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/rdb/RDBRow/getBdata()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/charAt(int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/rdb/RDBRow/getModcount()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/rdb/RDBRow/getCollisionsModcount()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/rdb/RDBDocumentSerializer/applyUpdate(org.apache.jackrabbit.oak.plugins.document.Document,java.util.List,java.util.List)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/rdb/RDBJDBCTools/asDocumentStoreException(java.lang.Exception,java.lang.String)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/rdb/RDBRow/getSchemaVersion()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/jackrabbit/oak/commons/json/JsopTokenizer/matches(int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/rdb/RDBRow/getId()|",
      "|java+method:///com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/apache/jackrabbit/oak/commons/json/JsopTokenizer/read()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/rdb/RDBDocumentSerializer/readDocumentFromJson(org.apache.jackrabbit.oak.commons.json.JsopTokenizer,org.apache.jackrabbit.oak.plugins.document.Document)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/rdb/RDBRow/deletedOnce()|"
    ],
    "affectedLib": "org.apache.jackrabbit:oak-commons:1.9.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeState/getChildNodeDoc(java.lang.String)|",
    "called": "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/concat(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/bundlor/Matcher/isMatch()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeState/getSecondaryNodeState()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/bundlor/Matcher/getMatchedPath()|",
      "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/concat(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/spi/state/NodeState/exists()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/getNode(java.lang.String,org.apache.jackrabbit.oak.plugins.document.RevisionVector)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeState/createBundledState(java.lang.String,org.apache.jackrabbit.oak.plugins.document.bundlor.Matcher)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeState$BundlingContext/hasChildNode(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/bundlor/Matcher/next(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/AbstractDocumentNodeState/getChildNode(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeState/getPath()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/bundlor/Matcher/isMatch()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeState/getSecondaryNodeState()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/bundlor/Matcher/getMatchedPath()|",
      "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/concat(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/spi/state/NodeState/exists()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/getNode(java.lang.String,org.apache.jackrabbit.oak.plugins.document.RevisionVector)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeState$BundlingContext/hasChildNode(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/bundlor/Matcher/next(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/AbstractDocumentNodeState/getChildNode(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeState/getPath()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeState/createBundledState(java.lang.String,org.apache.jackrabbit.oak.plugins.document.bundlor.Matcher)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeState$BundlingContext/hasOnlyBundledChildren()|"
    ],
    "affectedLib": "org.apache.jackrabbit:oak-commons:1.9.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+initializer:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBranch/DocumentNodeStoreBranch$initializer|",
    "called": "|java+constructor:///org/apache/jackrabbit/oak/commons/PerfLogger/PerfLogger(org.slf4j.Logger)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+constructor:///org/apache/jackrabbit/oak/commons/PerfLogger/PerfLogger(org.slf4j.Logger)|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/google/common/collect/Maps/newConcurrentMap()|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+constructor:///java/util/Random/Random()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Integer/getInteger(java.lang.String,int)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+constructor:///org/apache/jackrabbit/oak/commons/PerfLogger/PerfLogger(org.slf4j.Logger)|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+constructor:///java/util/Random/Random()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Integer/getInteger(java.lang.String,int)|"
    ],
    "affectedLib": "org.apache.jackrabbit:oak-commons:1.9.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/mark(org.apache.jackrabbit.oak.spi.blob.AbstractBlobStore$BlockId)|",
    "called": "|java+method:///org/apache/jackrabbit/oak/commons/StringUtils/convertBytesToHex(byte%5B%5D)|",
    "v1Body": [
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///com/mongodb/DBCollection/update(com.mongodb.DBObject,com.mongodb.DBObject)|",
      "|java+method:///org/apache/jackrabbit/oak/commons/StringUtils/convertBytesToHex(byte%5B%5D)|",
      "|java+method:///org/apache/jackrabbit/oak/spi/blob/AbstractBlobStore$BlockId/getDigest()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/getBlobCollection()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/getBlobQuery(java.lang.String,long)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/jackrabbit/oak/commons/StringUtils/convertBytesToHex(byte%5B%5D)|",
      "|java+method:///org/apache/jackrabbit/oak/spi/blob/AbstractBlobStore$BlockId/getDigest()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/getBlobCollection()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/getBlobQuery(java.lang.String,long)|",
      "|java+method:///com/mongodb/client/MongoCollection/updateOne(org.bson.conversions.Bson,org.bson.conversions.Bson)|",
      "|java+method:///java/lang/Long/valueOf(long)|"
    ],
    "affectedLib": "org.apache.jackrabbit:oak-commons:1.9.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/storeBlock(byte%5B%5D,int,byte%5B%5D)|",
    "called": "|java+method:///org/apache/jackrabbit/oak/commons/StringUtils/convertBytesToHex(byte%5B%5D)|",
    "v1Body": [
      "|java+method:///org/apache/jackrabbit/oak/cache/CacheLIRS/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///com/mongodb/BasicDBObject/append(java.lang.String,java.lang.Object)|",
      "|java+method:///com/mongodb/WriteResult/isUpdateOfExisting()|",
      "|java+method:///org/apache/jackrabbit/oak/commons/StringUtils/convertBytesToHex(byte%5B%5D)|",
      "|java+method:///com/mongodb/MongoException/getMessage()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)|",
      "|java+method:///com/mongodb/DBCollection/update(com.mongodb.DBObject,com.mongodb.DBObject,boolean,boolean)|",
      "|java+method:///org/slf4j/Logger/trace(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/getBlobCollection()|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/getBlobQuery(java.lang.String,long)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/jackrabbit/oak/cache/CacheLIRS/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/apache/jackrabbit/oak/commons/StringUtils/convertBytesToHex(byte%5B%5D)|",
      "|java+method:///org/slf4j/Logger/trace(java.lang.String,java.lang.Object)|",
      "|java+method:///com/mongodb/MongoException/getMessage()|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)|",
      "|java+method:///com/mongodb/client/result/UpdateResult/getUpsertedId()|",
      "|java+method:///com/mongodb/BasicDBObject/append(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/getBlobCollection()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///com/mongodb/client/model/UpdateOptions/upsert(boolean)|",
      "|java+constructor:///com/mongodb/client/model/UpdateOptions/UpdateOptions()|",
      "|java+method:///com/mongodb/client/MongoCollection/updateOne(org.bson.conversions.Bson,org.bson.conversions.Bson,com.mongodb.client.model.UpdateOptions)|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/getBlobQuery(java.lang.String,long)|"
    ],
    "affectedLib": "org.apache.jackrabbit:oak-commons:1.9.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/DocumentNodeStore(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreBuilder)|",
    "called": "|java+constructor:///org/apache/jackrabbit/oak/cache/CacheStats/CacheStats(com.google.common.cache.Cache,java.lang.String,com.google.common.cache.Weigher,long)|",
    "v1Body": [
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/VersionGarbageCollector/setGCMonitor(org.apache.jackrabbit.oak.spi.gc.GCMonitor)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/Checkpoints/Checkpoints(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getExecutor()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/CommitValueResolver/CommitValueResolver(int,com.google.common.base.Supplier)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentBroadcastConfig/DocumentBroadcastConfig(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getNodeCachePredicate()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Commit/applyToDocumentStore()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/ReadOnlyDocumentStoreWrapperFactory/getInstance(org.apache.jackrabbit.oak.plugins.document.DocumentStore)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/UnsavedModifications/UnsavedModifications()|",
      "|java+method:///java/lang/System/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/createReferencedBlobs(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/UnmergedBranches/UnmergedBranches()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/isDisableBranches()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/buildNodeCache(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicBoolean/AtomicBoolean()|",
      "|java+method:///java/lang/Boolean/getBoolean(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getClusterId()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeState/getRootRevision()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$4/DocumentNodeStore$4(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,java.lang.String,org.apache.jackrabbit.oak.plugins.document.RevisionVector)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/buildChildrenCache(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/RevisionVector/RevisionVector(org.apache.jackrabbit.oak.plugins.document.Revision%5B%5D)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/bundlor/BundledDocumentDiffer/BundledDocumentDiffer(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/RevisionVector/pmax(org.apache.jackrabbit.oak.plugins.document.RevisionVector)|",
      "|java+constructor:///org/apache/jackrabbit/oak/spi/commit/ChangeDispatcher/ChangeDispatcher(org.apache.jackrabbit.oak.spi.state.NodeState)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getLeaseFailureHandler()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeState/DocumentNodeState(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,java.lang.String,org.apache.jackrabbit.oak.plugins.document.RevisionVector)|",
      "|java+method:///java/lang/Thread/setPriority(int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/isBundlingDisabled()|",
      "|java+constructor:///org/apache/jackrabbit/oak/cache/CacheStats/CacheStats(com.google.common.cache.Cache,java.lang.String,com.google.common.cache.Weigher,long)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$BackgroundSweepOperation/DocumentNodeStore$BackgroundSweepOperation(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,java.util.concurrent.atomic.AtomicBoolean)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getDiffCache()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/isPrefetchExternalChanges()|",
      "|java+method:///java/lang/Thread/start()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentStore/find(org.apache.jackrabbit.oak.plugins.document.Collection,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getGCMonitor()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$BackgroundUpdateOperation/DocumentNodeStore$BackgroundUpdateOperation(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,java.util.concurrent.atomic.AtomicBoolean)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/createMissingLastRevSeeker()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/Commit/Commit(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,org.apache.jackrabbit.oak.plugins.document.Revision,org.apache.jackrabbit.oak.plugins.document.RevisionVector)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/VersionGarbageCollector/setStatisticsProvider(org.apache.jackrabbit.oak.stats.StatisticsProvider)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getLogging()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/RevisionVector/getRevision(int)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/bundlor/BundlingConfigHandler/BundlingConfigHandler()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/ClusterNodeInfo/setLeaseCheckDisabled(boolean)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/BatchCommitQueue/BatchCommitQueue(org.apache.jackrabbit.oak.plugins.document.DocumentStore)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/persistentCache/PersistentCache/setBroadcastConfig(org.apache.jackrabbit.oak.plugins.document.persistentCache.broadcast.DynamicBroadcastConfig)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getReadOnlyMode()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getNodeCacheSize()|",
      "|java+method:///java/lang/Thread/setDaemon(boolean)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UnsavedModifications/put(java.lang.String,org.apache.jackrabbit.oak.plugins.document.Revision)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/VersionGarbageCollector/VersionGarbageCollector(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,org.apache.jackrabbit.oak.plugins.document.VersionGCSupport)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/checkLastRevRecovery()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getAsyncDelay()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/util/LeaseCheckDocumentStoreWrapper/LeaseCheckDocumentStoreWrapper(org.apache.jackrabbit.oak.plugins.document.DocumentStore,org.apache.jackrabbit.oak.plugins.document.ClusterNodeInfo)|",
      "|java+constructor:///java/util/concurrent/locks/ReentrantReadWriteLock/ReentrantReadWriteLock()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getChildrenCacheSize()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/backgroundWrite()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$BackgroundReadOperation/DocumentNodeStore$BackgroundReadOperation(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,java.util.concurrent.atomic.AtomicBoolean)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getBlobStore()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getCommitValueCacheSize()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/renewClusterIdLease()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$1/DocumentNodeStore$1(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Commit/addNode(org.apache.jackrabbit.oak.plugins.document.DocumentNodeState)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getDocumentStore()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/setRoot(org.apache.jackrabbit.oak.plugins.document.RevisionVector)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getTiming()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/CommitQueue/CommitQueue(org.apache.jackrabbit.oak.plugins.document.RevisionContext)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getJournalCache()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$2/DocumentNodeStore$2(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/NodeDocument/getLastRev()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/checkVersion(org.apache.jackrabbit.oak.plugins.document.DocumentStore,boolean)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$BackgroundClusterUpdate/DocumentNodeStore$BackgroundClusterUpdate(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,java.util.concurrent.atomic.AtomicBoolean)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$BackgroundLeaseUpdate/DocumentNodeStore$BackgroundLeaseUpdate(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,java.util.concurrent.atomic.AtomicBoolean)|",
      "|java+constructor:///java/lang/Thread/Thread(java.lang.Runnable,java.lang.String)|",
      "|java+method:///com/google/common/collect/Sets/newConcurrentHashSet()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getWeigher()|",
      "|java+method:///java/lang/Long/getLong(java.lang.String,long)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$3/DocumentNodeStore$3(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UnmergedBranches/init(org.apache.jackrabbit.oak.plugins.document.DocumentStore,org.apache.jackrabbit.oak.plugins.document.RevisionContext)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/ClusterNodeInfo/getId()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getLeaseCheck()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicInteger/AtomicInteger(int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/getRoot()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getPersistentCache()|",
      "|java+method:///com/google/common/collect/Maps/newConcurrentMap()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/util/LoggingDocumentStoreWrapper/LoggingDocumentStoreWrapper(org.apache.jackrabbit.oak.plugins.document.DocumentStore)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/PrefetchDispatcher/PrefetchDispatcher(org.apache.jackrabbit.oak.spi.state.NodeState,java.util.concurrent.Executor)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/ClusterNodeInfo/getInstance(org.apache.jackrabbit.oak.plugins.document.DocumentStore,int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/initializeRootState(org.apache.jackrabbit.oak.plugins.document.NodeDocument)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getJournalPropertyHandlerFactory()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/createVersionGCSupport()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getNodeStoreStatsCollector()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/bundlor/BundlingConfigHandler/initialize(org.apache.jackrabbit.oak.spi.commit.Observable,java.util.concurrent.Executor)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getJournalGCMaxAge()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/newJournalEntry()|",
      "|java+constructor:///java/util/concurrent/locks/ReentrantReadWriteLock/ReentrantReadWriteLock(boolean)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getClock()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/Utils/getIdFromPath(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/newRevision()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/NodeDocument/getSweepRevisions()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getStatisticsProvider()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/isUseSimpleRevision()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/createMBean(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreBuilder)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/LastRevRecoveryAgent/LastRevRecoveryAgent(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,org.apache.jackrabbit.oak.plugins.document.MissingLastRevSeeker)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/JournalGarbageCollector/JournalGarbageCollector(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,long)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/backgroundSweep()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/ClusterNodeInfo/getReadOnlyInstance(org.apache.jackrabbit.oak.plugins.document.DocumentStore)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/util/TimingDocumentStoreWrapper/TimingDocumentStoreWrapper(org.apache.jackrabbit.oak.plugins.document.DocumentStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/ClusterNodeInfo/setLeaseFailureHandler(org.apache.jackrabbit.oak.plugins.document.LeaseFailureHandler)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getUpdateLimit()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/Revision/Revision(long,int,int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/getClusterNodeInfoDisplayString()|",
      "|java+method:///java/lang/Integer/getInteger(java.lang.String,int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/VersionGarbageCollector/setGCMonitor(org.apache.jackrabbit.oak.spi.gc.GCMonitor)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/Checkpoints/Checkpoints(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getExecutor()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/CommitValueResolver/CommitValueResolver(int,com.google.common.base.Supplier)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentBroadcastConfig/DocumentBroadcastConfig(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getNodeCachePredicate()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Commit/applyToDocumentStore()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/ReadOnlyDocumentStoreWrapperFactory/getInstance(org.apache.jackrabbit.oak.plugins.document.DocumentStore)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/UnsavedModifications/UnsavedModifications()|",
      "|java+method:///java/lang/System/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/createReferencedBlobs(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/UnmergedBranches/UnmergedBranches()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/isDisableBranches()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/buildNodeCache(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicBoolean/AtomicBoolean()|",
      "|java+method:///java/lang/Boolean/getBoolean(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getClusterId()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeState/getRootRevision()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$4/DocumentNodeStore$4(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,java.lang.String,org.apache.jackrabbit.oak.plugins.document.RevisionVector)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/buildChildrenCache(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/RevisionVector/RevisionVector(org.apache.jackrabbit.oak.plugins.document.Revision%5B%5D)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/bundlor/BundledDocumentDiffer/BundledDocumentDiffer(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/RevisionVector/pmax(org.apache.jackrabbit.oak.plugins.document.RevisionVector)|",
      "|java+constructor:///org/apache/jackrabbit/oak/spi/commit/ChangeDispatcher/ChangeDispatcher(org.apache.jackrabbit.oak.spi.state.NodeState)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getLeaseFailureHandler()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeState/DocumentNodeState(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,java.lang.String,org.apache.jackrabbit.oak.plugins.document.RevisionVector)|",
      "|java+method:///java/lang/Thread/setPriority(int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/isBundlingDisabled()|",
      "|java+constructor:///org/apache/jackrabbit/oak/cache/CacheStats/CacheStats(com.google.common.cache.Cache,java.lang.String,com.google.common.cache.Weigher,long)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$BackgroundSweepOperation/DocumentNodeStore$BackgroundSweepOperation(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,java.util.concurrent.atomic.AtomicBoolean)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/isPrefetchExternalChanges()|",
      "|java+method:///java/lang/Thread/start()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentStore/find(org.apache.jackrabbit.oak.plugins.document.Collection,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getGCMonitor()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$BackgroundUpdateOperation/DocumentNodeStore$BackgroundUpdateOperation(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,java.util.concurrent.atomic.AtomicBoolean)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/createMissingLastRevSeeker()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/Commit/Commit(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,org.apache.jackrabbit.oak.plugins.document.Revision,org.apache.jackrabbit.oak.plugins.document.RevisionVector)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/VersionGarbageCollector/setStatisticsProvider(org.apache.jackrabbit.oak.stats.StatisticsProvider)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getLogging()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/RevisionVector/getRevision(int)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/bundlor/BundlingConfigHandler/BundlingConfigHandler()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/ClusterNodeInfo/setLeaseCheckDisabled(boolean)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/BatchCommitQueue/BatchCommitQueue(org.apache.jackrabbit.oak.plugins.document.DocumentStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getDiffCache(int)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/persistentCache/PersistentCache/setBroadcastConfig(org.apache.jackrabbit.oak.plugins.document.persistentCache.broadcast.DynamicBroadcastConfig)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getReadOnlyMode()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getNodeCacheSize()|",
      "|java+method:///java/lang/Thread/setDaemon(boolean)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UnsavedModifications/put(java.lang.String,org.apache.jackrabbit.oak.plugins.document.Revision)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/VersionGarbageCollector/VersionGarbageCollector(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,org.apache.jackrabbit.oak.plugins.document.VersionGCSupport)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/checkLastRevRecovery()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getAsyncDelay()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/util/LeaseCheckDocumentStoreWrapper/LeaseCheckDocumentStoreWrapper(org.apache.jackrabbit.oak.plugins.document.DocumentStore,org.apache.jackrabbit.oak.plugins.document.ClusterNodeInfo)|",
      "|java+constructor:///java/util/concurrent/locks/ReentrantReadWriteLock/ReentrantReadWriteLock()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getChildrenCacheSize()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/backgroundWrite()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$BackgroundReadOperation/DocumentNodeStore$BackgroundReadOperation(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,java.util.concurrent.atomic.AtomicBoolean)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getBlobStore()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getCommitValueCacheSize()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/renewClusterIdLease()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$1/DocumentNodeStore$1(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Commit/addNode(org.apache.jackrabbit.oak.plugins.document.DocumentNodeState)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getDocumentStore()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/setRoot(org.apache.jackrabbit.oak.plugins.document.RevisionVector)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getTiming()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/CommitQueue/CommitQueue(org.apache.jackrabbit.oak.plugins.document.RevisionContext)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getJournalCache()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$2/DocumentNodeStore$2(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/NodeDocument/getLastRev()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/checkVersion(org.apache.jackrabbit.oak.plugins.document.DocumentStore,boolean)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$BackgroundClusterUpdate/DocumentNodeStore$BackgroundClusterUpdate(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,java.util.concurrent.atomic.AtomicBoolean)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$BackgroundLeaseUpdate/DocumentNodeStore$BackgroundLeaseUpdate(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,java.util.concurrent.atomic.AtomicBoolean)|",
      "|java+constructor:///java/lang/Thread/Thread(java.lang.Runnable,java.lang.String)|",
      "|java+method:///com/google/common/collect/Sets/newConcurrentHashSet()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getWeigher()|",
      "|java+method:///java/lang/Long/getLong(java.lang.String,long)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore$3/DocumentNodeStore$3(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UnmergedBranches/init(org.apache.jackrabbit.oak.plugins.document.DocumentStore,org.apache.jackrabbit.oak.plugins.document.RevisionContext)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/ClusterNodeInfo/getId()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getLeaseCheck()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicInteger/AtomicInteger(int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/getRoot()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getPersistentCache()|",
      "|java+method:///com/google/common/collect/Maps/newConcurrentMap()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/util/LoggingDocumentStoreWrapper/LoggingDocumentStoreWrapper(org.apache.jackrabbit.oak.plugins.document.DocumentStore)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/PrefetchDispatcher/PrefetchDispatcher(org.apache.jackrabbit.oak.spi.state.NodeState,java.util.concurrent.Executor)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/ClusterNodeInfo/getInstance(org.apache.jackrabbit.oak.plugins.document.DocumentStore,int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/initializeRootState(org.apache.jackrabbit.oak.plugins.document.NodeDocument)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getJournalPropertyHandlerFactory()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/createVersionGCSupport()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getNodeStoreStatsCollector()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/bundlor/BundlingConfigHandler/initialize(org.apache.jackrabbit.oak.spi.commit.Observable,java.util.concurrent.Executor)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getJournalGCMaxAge()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/newJournalEntry()|",
      "|java+constructor:///java/util/concurrent/locks/ReentrantReadWriteLock/ReentrantReadWriteLock(boolean)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getClock()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/Utils/getIdFromPath(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/newRevision()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/NodeDocument/getSweepRevisions()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getStatisticsProvider()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/isUseSimpleRevision()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/createMBean(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreBuilder)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/LastRevRecoveryAgent/LastRevRecoveryAgent(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,org.apache.jackrabbit.oak.plugins.document.MissingLastRevSeeker)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/JournalGarbageCollector/JournalGarbageCollector(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore,long)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/backgroundSweep()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/ClusterNodeInfo/getReadOnlyInstance(org.apache.jackrabbit.oak.plugins.document.DocumentStore)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/util/TimingDocumentStoreWrapper/TimingDocumentStoreWrapper(org.apache.jackrabbit.oak.plugins.document.DocumentStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/ClusterNodeInfo/setLeaseFailureHandler(org.apache.jackrabbit.oak.plugins.document.LeaseFailureHandler)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBuilder/getUpdateLimit()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/Revision/Revision(long,int,int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/getClusterNodeInfoDisplayString()|",
      "|java+method:///java/lang/Integer/getInteger(java.lang.String,int)|"
    ],
    "affectedLib": "org.apache.jackrabbit:oak-core-spi:1.9.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/storeBlock(byte%5B%5D,int,byte%5B%5D)|",
    "called": "|java+method:///org/apache/jackrabbit/oak/cache/CacheLIRS/put(java.lang.Object,java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/apache/jackrabbit/oak/cache/CacheLIRS/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///com/mongodb/BasicDBObject/append(java.lang.String,java.lang.Object)|",
      "|java+method:///com/mongodb/WriteResult/isUpdateOfExisting()|",
      "|java+method:///org/apache/jackrabbit/oak/commons/StringUtils/convertBytesToHex(byte%5B%5D)|",
      "|java+method:///com/mongodb/MongoException/getMessage()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)|",
      "|java+method:///com/mongodb/DBCollection/update(com.mongodb.DBObject,com.mongodb.DBObject,boolean,boolean)|",
      "|java+method:///org/slf4j/Logger/trace(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/getBlobCollection()|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/getBlobQuery(java.lang.String,long)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/jackrabbit/oak/cache/CacheLIRS/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/apache/jackrabbit/oak/commons/StringUtils/convertBytesToHex(byte%5B%5D)|",
      "|java+method:///org/slf4j/Logger/trace(java.lang.String,java.lang.Object)|",
      "|java+method:///com/mongodb/MongoException/getMessage()|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)|",
      "|java+method:///com/mongodb/client/result/UpdateResult/getUpsertedId()|",
      "|java+method:///com/mongodb/BasicDBObject/append(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/getBlobCollection()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///com/mongodb/client/model/UpdateOptions/upsert(boolean)|",
      "|java+constructor:///com/mongodb/client/model/UpdateOptions/UpdateOptions()|",
      "|java+method:///com/mongodb/client/MongoCollection/updateOne(org.bson.conversions.Bson,org.bson.conversions.Bson,com.mongodb.client.model.UpdateOptions)|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/getBlobQuery(java.lang.String,long)|"
    ],
    "affectedLib": "org.apache.jackrabbit:oak-core-spi:1.9.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBranch$Persisted/resetBranch(org.apache.jackrabbit.oak.plugins.document.DocumentNodeState,org.apache.jackrabbit.oak.plugins.document.DocumentNodeState)|",
    "called": "|java+constructor:///org/apache/jackrabbit/oak/api/CommitFailedException/CommitFailedException(java.lang.String,int,java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeState/getRootRevision()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/reset(org.apache.jackrabbit.oak.plugins.document.RevisionVector,org.apache.jackrabbit.oak.plugins.document.RevisionVector)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBranch/access$102(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreBranch,org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreBranch$BranchState)|",
      "|java+constructor:///org/apache/jackrabbit/oak/api/CommitFailedException/CommitFailedException(java.lang.String,int,java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBranch$ResetFailed/DocumentNodeStoreBranch$ResetFailed(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreBranch,org.apache.jackrabbit.oak.plugins.document.DocumentNodeState,org.apache.jackrabbit.oak.api.CommitFailedException)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/getRoot(org.apache.jackrabbit.oak.plugins.document.RevisionVector)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeState/getRootRevision()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/reset(org.apache.jackrabbit.oak.plugins.document.RevisionVector,org.apache.jackrabbit.oak.plugins.document.RevisionVector)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBranch/access$102(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreBranch,org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreBranch$BranchState)|",
      "|java+constructor:///org/apache/jackrabbit/oak/api/CommitFailedException/CommitFailedException(java.lang.String,int,java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBranch$ResetFailed/DocumentNodeStoreBranch$ResetFailed(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreBranch,org.apache.jackrabbit.oak.plugins.document.DocumentNodeState,org.apache.jackrabbit.oak.api.CommitFailedException)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeState/asBranchRootState(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreBranch)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/getRoot(org.apache.jackrabbit.oak.plugins.document.RevisionVector)|"
    ],
    "affectedLib": "org.apache.jackrabbit:oak-api:1.9.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBranch$Persisted/checkForConflicts()|",
    "called": "|java+constructor:///org/apache/jackrabbit/oak/api/CommitFailedException/CommitFailedException(java.lang.String,int,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeState/getRootRevision()|",
      "|java+method:///com/google/common/collect/Sets/newHashSet(java.lang.Iterable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/SortedMap/keySet()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UnmergedBranches/getBranch(org.apache.jackrabbit.oak.plugins.document.RevisionVector)|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/NodeDocument/getLocalMap(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBranch$Persisted$2/DocumentNodeStoreBranch$Persisted$2(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreBranch$Persisted)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/getDocumentStore()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/getBranches()|",
      "|java+method:///com/google/common/collect/Sets/intersection(java.util.Set,java.util.Set)|",
      "|java+constructor:///org/apache/jackrabbit/oak/api/CommitFailedException/CommitFailedException(java.lang.String,int,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Branch/getCommits()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/Utils/getRootDocument(org.apache.jackrabbit.oak.plugins.document.DocumentStore)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)|",
      "|java+method:///com/google/common/collect/Sets/newHashSet(java.lang.Iterable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/SortedMap/keySet()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UnmergedBranches/getBranch(org.apache.jackrabbit.oak.plugins.document.RevisionVector)|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/NodeDocument/getLocalMap(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeState/getRootRevision()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBranch$Persisted$1/DocumentNodeStoreBranch$Persisted$1(org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreBranch$Persisted)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/getDocumentStore()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore/getBranches()|",
      "|java+method:///com/google/common/collect/Sets/intersection(java.util.Set,java.util.Set)|",
      "|java+constructor:///org/apache/jackrabbit/oak/api/CommitFailedException/CommitFailedException(java.lang.String,int,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Branch/getCommits()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/Utils/getRootDocument(org.apache.jackrabbit.oak.plugins.document.DocumentStore)|"
    ],
    "affectedLib": "org.apache.jackrabbit:oak-api:1.9.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoStatus/isMajorityReadConcernEnabled()|",
    "called": "|java+method:///com/mongodb/MongoClient/getDatabase(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/mongodb/DBCursor/close()|",
      "|java+method:///com/mongodb/DB/getCollection(java.lang.String)|",
      "|java+constructor:///com/mongodb/client/model/DBCollectionFindOptions/DBCollectionFindOptions()|",
      "|java+method:///com/mongodb/client/model/DBCollectionFindOptions/readConcern(com.mongodb.ReadConcern)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///com/mongodb/DBCursor/hasNext()|",
      "|java+method:///com/mongodb/DBCollection/find(com.mongodb.DBObject,com.mongodb.client.model.DBCollectionFindOptions)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject()|"
    ],
    "v2Body": [
      "|java+method:///com/mongodb/client/MongoCollection/find(org.bson.conversions.Bson)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/mongodb/client/MongoCursor/hasNext()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///com/mongodb/MongoClient/getDatabase(java.lang.String)|",
      "|java+method:///com/mongodb/client/MongoDatabase/getCollection(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///com/mongodb/client/FindIterable/iterator()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///com/mongodb/client/MongoCollection/withReadConcern(com.mongodb.ReadConcern)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/mongodb/client/MongoCursor/close()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject()|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/queryInternal(org.apache.jackrabbit.oak.plugins.document.Collection,java.lang.String,java.lang.String,java.lang.String,long,int,long)|",
    "called": "|java+method:///com/mongodb/client/model/Filters/lt(java.lang.String,java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/convertFromDBObject(org.apache.jackrabbit.oak.plugins.document.Collection,com.mongodb.DBObject)|",
      "|java+method:///com/mongodb/QueryBuilder/start(java.lang.String)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentStoreStatsCollector/doneQuery(long,org.apache.jackrabbit.oak.plugins.document.Collection,java.lang.String,java.lang.String,boolean,int,long,boolean)|",
      "|java+method:///com/mongodb/QueryBuilder/lessThan(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/cache/CacheChangesTracker/close()|",
      "|java+method:///com/mongodb/DBCursor/close()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///com/mongodb/DBCursor/maxTime(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///com/mongodb/DBCursor/setReadPreference(com.mongodb.ReadPreference)|",
      "|java+method:///com/mongodb/QueryBuilder/is(java.lang.Object)|",
      "|java+method:///com/mongodb/DBCursor/sort(com.mongodb.DBObject)|",
      "|java+method:///com/google/common/base/Stopwatch/elapsed(java.util.concurrent.TimeUnit)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/getMongoReadPreference(org.apache.jackrabbit.oak.plugins.document.Collection,java.lang.String,java.lang.String,org.apache.jackrabbit.oak.plugins.document.mongo.MongoDocumentStore$DocumentReadPreference)|",
      "|java+method:///com/mongodb/DBCursor/hint(com.mongodb.DBObject)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/cache/NodeDocumentCache/putNonConflictingDocs(org.apache.jackrabbit.oak.plugins.document.cache.CacheChangesTracker,java.lang.Iterable)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/getDefaultReadPreference(org.apache.jackrabbit.oak.plugins.document.Collection)|",
      "|java+method:///com/mongodb/QueryBuilder/greaterThanEquals(java.lang.Object)|",
      "|java+method:///com/mongodb/ReadPreference/isSlaveOk()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/cache/NodeDocumentCache/registerTracker(java.lang.String,java.lang.String)|",
      "|java+method:///com/mongodb/QueryBuilder/greaterThan(java.lang.Object)|",
      "|java+method:///com/mongodb/DBCursor/limit(int)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/trace(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/mongodb/DBCollection/find(com.mongodb.DBObject)|",
      "|java+method:///com/mongodb/DBCursor/hasNext()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/Utils/getParentIdFromLowerLimit(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/startWatch()|",
      "|java+method:///com/mongodb/QueryBuilder/and(java.lang.String)|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentStoreException/DocumentStoreException(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/getDBCollection(org.apache.jackrabbit.oak.plugins.document.Collection)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/log(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/canUseModifiedTimeIdx(long)|",
      "|java+method:///com/mongodb/DBCursor/next()|",
      "|java+method:///com/mongodb/QueryBuilder/get()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/convertFromDBObject(org.apache.jackrabbit.oak.plugins.document.Collection,com.mongodb.DBObject)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///com/mongodb/client/FindIterable/modifiers(org.bson.conversions.Bson)|",
      "|java+method:///com/mongodb/client/MongoCollection/find(org.bson.conversions.Bson)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///com/mongodb/client/MongoCursor/hasNext()|",
      "|java+method:///com/mongodb/client/FindIterable/limit(int)|",
      "|java+method:///com/mongodb/client/MongoCollection/withReadPreference(com.mongodb.ReadPreference)|",
      "|java+method:///com/mongodb/client/FindIterable/iterator()|",
      "|java+method:///com/mongodb/client/MongoCursor/close()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/cache/CacheChangesTracker/close()|",
      "|java+method:///com/mongodb/client/FindIterable/maxTime(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentStoreStatsCollector/doneQuery(long,org.apache.jackrabbit.oak.plugins.document.Collection,java.lang.String,java.lang.String,boolean,int,long,boolean)|",
      "|java+method:///com/google/common/base/Stopwatch/elapsed(java.util.concurrent.TimeUnit)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/getMongoReadPreference(org.apache.jackrabbit.oak.plugins.document.Collection,java.lang.String,java.lang.String,org.apache.jackrabbit.oak.plugins.document.mongo.MongoDocumentStore$DocumentReadPreference)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///com/mongodb/client/MongoCursor/next()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/cache/NodeDocumentCache/putNonConflictingDocs(org.apache.jackrabbit.oak.plugins.document.cache.CacheChangesTracker,java.lang.Iterable)|",
      "|java+method:///com/mongodb/client/model/Filters/gte(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///com/mongodb/client/FindIterable/sort(org.bson.conversions.Bson)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/getDefaultReadPreference(org.apache.jackrabbit.oak.plugins.document.Collection)|",
      "|java+method:///com/mongodb/client/model/Filters/gt(java.lang.String,java.lang.Object)|",
      "|java+method:///com/mongodb/ReadPreference/isSlaveOk()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/cache/NodeDocumentCache/registerTracker(java.lang.String,java.lang.String)|",
      "|java+method:///com/mongodb/client/model/Filters/eq(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/trace(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///com/mongodb/client/model/Filters/lt(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/mongodb/client/model/Filters/and(java.lang.Iterable)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/Utils/getParentIdFromLowerLimit(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/startWatch()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/DocumentStoreException/DocumentStoreException(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/getDBCollection(org.apache.jackrabbit.oak.plugins.document.Collection)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/log(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/canUseModifiedTimeIdx(long)|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoStatus/getServerStatus()|",
    "called": "|java+method:///com/mongodb/MongoClient/getDatabase(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/mongodb/DB/command(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/mongodb/client/MongoDatabase/runCommand(org.bson.conversions.Bson,java.lang.Class)|",
      "|java+method:///com/mongodb/MongoClient/getDatabase(java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoVersionGCSupport/getOldestDeletedOnceTimestamp(org.apache.jackrabbit.oak.stats.Clock,long)|",
    "called": "|java+method:///com/mongodb/client/model/Filters/eq(java.lang.String,java.lang.Object)|",
    "v1Body": [
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoVersionGCSupport$4/MongoVersionGCSupport$4(org.apache.jackrabbit.oak.plugins.document.mongo.MongoVersionGCSupport)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/CloseableIterable/iterator()|",
      "|java+method:///com/mongodb/DBCursor/limit(int)|",
      "|java+method:///com/mongodb/DBCollection/find(com.mongodb.DBObject)|",
      "|java+method:///org/slf4j/Logger/isDebugEnabled()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/CloseableIterable/wrap(java.lang.Iterable,java.io.Closeable)|",
      "|java+method:///com/mongodb/QueryBuilder/get()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/Utils/closeIfCloseable(java.lang.Object)|",
      "|java+method:///com/mongodb/QueryBuilder/is(java.lang.Object)|",
      "|java+method:///com/mongodb/DBCursor/sort(com.mongodb.DBObject)|",
      "|java+method:///com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)|",
      "|java+method:///java/util/concurrent/TimeUnit/toMillis(long)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/Utils/timestampToString(long)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoVersionGCSupport/getNodeCollection()|",
      "|java+method:///com/mongodb/QueryBuilder/start(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/apache/jackrabbit/oak/stats/Clock/getTime()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/NodeDocument/getModified()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoVersionGCSupport$3/MongoVersionGCSupport$3(org.apache.jackrabbit.oak.plugins.document.mongo.MongoVersionGCSupport,java.util.List)|",
      "|java+method:///com/mongodb/client/FindIterable/limit(int)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/mongodb/client/FindIterable/sort(org.bson.conversions.Bson)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///com/mongodb/client/model/Filters/eq(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoVersionGCSupport/getNodeCollection()|",
      "|java+method:///com/mongodb/client/MongoCollection/find(org.bson.conversions.Bson)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///com/mongodb/client/FindIterable/forEach(com.mongodb.Block)|",
      "|java+method:///org/apache/jackrabbit/oak/stats/Clock/getTime()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+initializer:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/MongoBlobStore$initializer|",
    "called": "|java+method:///org/bson/codecs/configuration/CodecRegistries/fromCodecs(org.bson.codecs.Codec%5B%5D)|",
    "v1Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobCodec/MongoBlobCodec()|",
      "|java+method:///com/mongodb/MongoClient/getDefaultCodecRegistry()|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+method:///org/bson/codecs/configuration/CodecRegistries/fromRegistries(org.bson.codecs.configuration.CodecRegistry%5B%5D)|",
      "|java+method:///org/bson/codecs/configuration/CodecRegistries/fromCodecs(org.bson.codecs.Codec%5B%5D)|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobReferenceIterator/getIteratorOverDocsWithBinaries()|",
    "called": "|java+method:///com/mongodb/client/model/Filters/eq(java.lang.String,java.lang.Object)|",
    "v1Body": [
      "|java+method:///com/mongodb/DBCursor/setReadPreference(com.mongodb.ReadPreference)|",
      "|java+method:///com/mongodb/QueryBuilder/is(java.lang.Object)|",
      "|java+method:///com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)|",
      "|java+method:///com/mongodb/QueryBuilder/start(java.lang.String)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/getConfiguredReadPreference(org.apache.jackrabbit.oak.plugins.document.Collection)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/CloseableIterable/iterator()|",
      "|java+method:///com/mongodb/DBCollection/find(com.mongodb.DBObject)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobReferenceIterator$1/MongoBlobReferenceIterator$1(org.apache.jackrabbit.oak.plugins.document.mongo.MongoBlobReferenceIterator)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/getDBCollection(org.apache.jackrabbit.oak.plugins.document.Collection)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/CloseableIterable/wrap(java.lang.Iterable,java.io.Closeable)|",
      "|java+method:///com/mongodb/QueryBuilder/get()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Iterators/transform(java.util.Iterator,com.google.common.base.Function)|",
      "|java+method:///com/mongodb/client/MongoCollection/find(org.bson.conversions.Bson)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/getConfiguredReadPreference(org.apache.jackrabbit.oak.plugins.document.Collection)|",
      "|java+method:///com/mongodb/client/MongoCollection/withReadPreference(com.mongodb.ReadPreference)|",
      "|java+method:///com/mongodb/client/model/Filters/eq(java.lang.String,java.lang.Object)|",
      "|java+method:///com/mongodb/client/FindIterable/iterator()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/CloseableIterator/wrap(java.util.Iterator,java.io.Closeable)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/getDBCollection(org.apache.jackrabbit.oak.plugins.document.Collection)|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoStatus/getBuildInfo()|",
    "called": "|java+method:///com/mongodb/MongoClient/getDatabase(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/mongodb/DB/command(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/mongodb/client/MongoDatabase/runCommand(org.bson.conversions.Bson,java.lang.Class)|",
      "|java+method:///com/mongodb/MongoClient/getDatabase(java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/createQueryForUpdate(java.lang.String,java.util.Map)|",
    "called": "|java+method:///com/mongodb/client/model/Filters/ne(java.lang.String,java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateOp$Key/toString()|",
      "|java+method:///com/mongodb/QueryBuilder/is(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateOp$Condition$Type/ordinal()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///com/mongodb/QueryBuilder/exists(java.lang.Object)|",
      "|java+method:///com/mongodb/QueryBuilder/and(java.lang.String)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///com/mongodb/QueryBuilder/notEquals(java.lang.Object)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/getByKeyQuery(java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///java/util/Map/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/mongodb/client/model/Filters/eq(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/mongodb/client/model/Filters/and(java.lang.Iterable)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateOp$Key/toString()|",
      "|java+method:///java/lang/Boolean/equals(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/mongodb/client/model/Filters/ne(java.lang.String,java.lang.Object)|",
      "|java+method:///com/mongodb/client/model/Filters/exists(java.lang.String,boolean)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateOp$Condition$Type/ordinal()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/getByKeyQuery(java.lang.String)|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStoreMetrics/getStats(org.apache.jackrabbit.oak.plugins.document.Collection)|",
    "called": "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject(java.util.Map)|",
    "v1Body": [
      "|java+method:///com/mongodb/DB/getCollection(java.lang.String)|",
      "|java+method:///com/mongodb/BasicDBObject/getLong(java.lang.String,long)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Collection/toString()|",
      "|java+method:///com/mongodb/DBCollection/getStats()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStoreMetrics$CollectionStats/MongoDocumentStoreMetrics$CollectionStats(org.apache.jackrabbit.oak.plugins.document.mongo.MongoDocumentStoreMetrics$1)|"
    ],
    "v2Body": [
      "|java+method:///com/mongodb/BasicDBObject/getLong(java.lang.String,long)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Collection/toString()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStoreMetrics$CollectionStats/MongoDocumentStoreMetrics$CollectionStats(org.apache.jackrabbit.oak.plugins.document.mongo.MongoDocumentStoreMetrics$1)|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject(java.util.Map)|",
      "|java+method:///com/mongodb/client/MongoDatabase/runCommand(org.bson.conversions.Bson)|",
      "|java+constructor:///org/bson/Document/Document(java.lang.String,java.lang.Object)|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoMissingLastRevSeeker/getCandidates(long)|",
    "called": "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)|",
    "v1Body": [
      "|java+method:///com/mongodb/DBCursor/sort(com.mongodb.DBObject)|",
      "|java+method:///com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)|",
      "|java+method:///com/mongodb/QueryBuilder/start(java.lang.String)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///com/mongodb/ReadPreference/primary()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoMissingLastRevSeeker/getCandidates(long)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoMissingLastRevSeeker$1/MongoMissingLastRevSeeker$1(org.apache.jackrabbit.oak.plugins.document.mongo.MongoMissingLastRevSeeker)|",
      "|java+method:///com/mongodb/QueryBuilder/greaterThanEquals(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/CloseableIterable/wrap(java.lang.Iterable,java.io.Closeable)|",
      "|java+method:///com/mongodb/QueryBuilder/get()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/NodeDocument/getModifiedInSecs(long)|",
      "|java+method:///com/mongodb/DBCursor/setReadPreference(com.mongodb.ReadPreference)|",
      "|java+method:///com/mongodb/DBCollection/find(com.mongodb.DBObject)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoMissingLastRevSeeker/getNodeCollection()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/NodeDocument/getModifiedInSecs(long)|",
      "|java+method:///com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)|",
      "|java+method:///com/mongodb/client/MongoCollection/find(org.bson.conversions.Bson)|",
      "|java+method:///com/mongodb/ReadPreference/primary()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoMissingLastRevSeeker/getCandidates(long)|",
      "|java+method:///com/mongodb/client/model/Filters/gte(java.lang.String,java.lang.Object)|",
      "|java+method:///com/mongodb/client/FindIterable/sort(org.bson.conversions.Bson)|",
      "|java+method:///com/mongodb/client/MongoCollection/withReadPreference(com.mongodb.ReadPreference)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoMissingLastRevSeeker/getNodeCollection()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/CloseableIterable/wrap(java.lang.Iterable)|",
      "|java+method:///java/lang/Long/valueOf(long)|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/remove(org.apache.jackrabbit.oak.plugins.document.Collection,java.util.List)|",
    "called": "|java+method:///com/mongodb/client/model/Filters/in(java.lang.String,java.lang.Iterable)|",
    "v1Body": [
      "|java+method:///com/mongodb/DBCollection/remove(com.mongodb.DBObject)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/google/common/base/Stopwatch/elapsed(java.util.concurrent.TimeUnit)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentStoreException/convert(java.lang.Throwable,java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/getDBCollection(org.apache.jackrabbit.oak.plugins.document.Collection)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/log(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/mongodb/QueryBuilder/start(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentStoreStatsCollector/doneRemove(long,org.apache.jackrabbit.oak.plugins.document.Collection,int)|",
      "|java+method:///com/google/common/collect/Lists/partition(java.util.List,int)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/invalidateCache(org.apache.jackrabbit.oak.plugins.document.Collection,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/startWatch()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/mongodb/QueryBuilder/in(java.lang.Object)|",
      "|java+method:///com/mongodb/QueryBuilder/get()|"
    ],
    "v2Body": [
      "|java+method:///com/mongodb/client/model/Filters/in(java.lang.String,java.lang.Iterable)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/google/common/base/Stopwatch/elapsed(java.util.concurrent.TimeUnit)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentStoreException/convert(java.lang.Throwable,java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/mongodb/client/MongoCollection/deleteMany(org.bson.conversions.Bson)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/getDBCollection(org.apache.jackrabbit.oak.plugins.document.Collection)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/log(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentStoreStatsCollector/doneRemove(long,org.apache.jackrabbit.oak.plugins.document.Collection,int)|",
      "|java+method:///com/google/common/collect/Lists/partition(java.util.List,int)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/invalidateCache(org.apache.jackrabbit.oak.plugins.document.Collection,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/startWatch()|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/getBlobQuery(java.lang.String,long)|",
    "called": "|java+method:///com/mongodb/client/model/Filters/lt(java.lang.String,java.lang.Object)|",
    "v1Body": [
      "|java+method:///com/mongodb/QueryBuilder/is(java.lang.Object)|",
      "|java+method:///com/mongodb/QueryBuilder/lessThan(java.lang.Object)|",
      "|java+method:///com/mongodb/QueryBuilder/and(java.lang.String)|",
      "|java+method:///com/mongodb/QueryBuilder/get()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+constructor:///com/mongodb/QueryBuilder/QueryBuilder()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///com/mongodb/client/model/Filters/eq(java.lang.String,java.lang.Object)|",
      "|java+method:///com/mongodb/client/model/Filters/lt(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/mongodb/client/model/Filters/and(java.lang.Iterable)|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/getByKeyQuery(java.lang.String)|",
    "called": "|java+method:///com/mongodb/client/model/Filters/eq(java.lang.String,java.lang.Object)|",
    "v1Body": [
      "|java+method:///com/mongodb/QueryBuilder/is(java.lang.Object)|",
      "|java+method:///com/mongodb/QueryBuilder/start(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/mongodb/client/model/Filters/eq(java.lang.String,java.lang.Object)|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoMissingLastRevSeeker/isRecoveryNeeded()|",
    "called": "|java+method:///com/mongodb/client/model/Filters/and(org.bson.conversions.Bson%5B%5D)|",
    "v1Body": [
      "|java+method:///com/mongodb/QueryBuilder/is(java.lang.Object)|",
      "|java+method:///com/mongodb/QueryBuilder/start(java.lang.String)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///com/mongodb/QueryBuilder/put(java.lang.String)|",
      "|java+method:///com/mongodb/QueryBuilder/lessThan(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/ClusterNodeInfo$ClusterNodeState/name()|",
      "|java+method:///org/apache/jackrabbit/oak/stats/Clock/getTime()|",
      "|java+method:///com/mongodb/QueryBuilder/get()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoMissingLastRevSeeker/getClusterNodeCollection()|",
      "|java+method:///com/mongodb/DBCollection/findOne(com.mongodb.DBObject)|"
    ],
    "v2Body": [
      "|java+method:///com/mongodb/client/MongoCollection/find(org.bson.conversions.Bson)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///com/mongodb/client/MongoCursor/hasNext()|",
      "|java+method:///com/mongodb/client/FindIterable/iterator()|",
      "|java+method:///com/mongodb/client/model/Filters/lt(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/ClusterNodeInfo$ClusterNodeState/name()|",
      "|java+method:///org/apache/jackrabbit/oak/stats/Clock/getTime()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoMissingLastRevSeeker/getClusterNodeCollection()|",
      "|java+method:///com/mongodb/client/model/Filters/and(org.bson.conversions.Bson%5B%5D)|",
      "|java+method:///com/mongodb/client/model/Filters/eq(java.lang.String,java.lang.Object)|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoVersionGCSupport/createQuery(java.util.Set,org.apache.jackrabbit.oak.plugins.document.RevisionVector,long)|",
    "called": "|java+method:///com/mongodb/client/model/Filters/and(org.bson.conversions.Bson%5B%5D)|",
    "v1Body": [
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/NodeDocument$SplitDocType/typeCode()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/NodeDocument/getModifiedInSecs(long)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///com/mongodb/QueryBuilder/or(com.mongodb.DBObject%5B%5D)|",
      "|java+method:///com/mongodb/QueryBuilder/start()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoVersionGCSupport/queriesForType(org.apache.jackrabbit.oak.plugins.document.NodeDocument$SplitDocType,org.apache.jackrabbit.oak.plugins.document.RevisionVector)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///com/mongodb/QueryBuilder/lessThan(java.lang.Object)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/mongodb/QueryBuilder/start(java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/mongodb/QueryBuilder/and(com.mongodb.DBObject%5B%5D)|",
      "|java+method:///com/mongodb/QueryBuilder/in(java.lang.Object)|",
      "|java+method:///com/mongodb/QueryBuilder/get()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/NodeDocument$SplitDocType/typeCode()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/NodeDocument/getModifiedInSecs(long)|",
      "|java+method:///com/mongodb/client/model/Filters/in(java.lang.String,java.lang.Iterable)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/mongodb/client/model/Filters/and(org.bson.conversions.Bson%5B%5D)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoVersionGCSupport/queriesForType(org.apache.jackrabbit.oak.plugins.document.NodeDocument$SplitDocType,org.apache.jackrabbit.oak.plugins.document.RevisionVector)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/mongodb/client/model/Filters/or(java.lang.Iterable)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///com/mongodb/client/model/Filters/lt(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/Set/iterator()|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/sendBulkUpdate(org.apache.jackrabbit.oak.plugins.document.Collection,java.util.Collection,java.util.Map)|",
    "called": "|java+method:///com/mongodb/client/model/Filters/and(org.bson.conversions.Bson%5B%5D)|",
    "v1Body": [
      "|java+method:///com/mongodb/BulkWriteError/getIndex()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore$BulkUpdateResult/MongoDocumentStore$BulkUpdateResult(java.util.Set,java.util.Set,org.apache.jackrabbit.oak.plugins.document.mongo.MongoDocumentStore$1)|",
      "|java+method:///com/mongodb/BulkWriteOperation/execute()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/mongodb/BulkWriteRequestBuilder/upsert()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/mongodb/BulkWriteException/getWriteErrors()|",
      "|java+method:///com/mongodb/QueryBuilder/exists(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateOp/getId()|",
      "|java+method:///com/mongodb/BulkWriteResult/getUpserts()|",
      "|java+method:///com/mongodb/BulkWriteOperation/find(com.mongodb.DBObject)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Document/getModCount()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/createQueryForUpdate(java.lang.String,java.util.Map)|",
      "|java+method:///com/mongodb/QueryBuilder/get()|",
      "|java+method:///com/mongodb/BulkWriteException/getWriteResult()|",
      "|java+method:///com/mongodb/QueryBuilder/is(java.lang.Object)|",
      "|java+method:///com/mongodb/BulkWriteUpsert/getIndex()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateOp/getConditions()|",
      "|java+method:///com/mongodb/BulkUpdateRequestBuilder/updateOne(com.mongodb.DBObject)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///com/mongodb/DBCollection/initializeUnorderedBulkOperation()|",
      "|java+method:///com/mongodb/QueryBuilder/and(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/getDBCollection(org.apache.jackrabbit.oak.plugins.document.Collection)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/createUpdate(org.apache.jackrabbit.oak.plugins.document.UpdateOp,boolean)|"
    ],
    "v2Body": [
      "|java+method:///com/mongodb/bulk/BulkWriteResult/getUpserts()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore$BulkUpdateResult/MongoDocumentStore$BulkUpdateResult(java.util.Set,java.util.Set,org.apache.jackrabbit.oak.plugins.document.mongo.MongoDocumentStore$1)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///com/mongodb/MongoBulkWriteException/getWriteResult()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/mongodb/client/model/Filters/exists(java.lang.String,boolean)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///com/mongodb/client/model/UpdateOneModel/UpdateOneModel(org.bson.conversions.Bson,org.bson.conversions.Bson,com.mongodb.client.model.UpdateOptions)|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///com/mongodb/client/MongoCollection/bulkWrite(java.util.List,com.mongodb.client.model.BulkWriteOptions)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/mongodb/MongoBulkWriteException/getWriteErrors()|",
      "|java+method:///com/mongodb/bulk/BulkWriteError/getIndex()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/createQueryForUpdate(java.lang.String,java.util.Map)|",
      "|java+constructor:///com/mongodb/client/model/BulkWriteOptions/BulkWriteOptions()|",
      "|java+method:///com/mongodb/client/model/Filters/and(org.bson.conversions.Bson%5B%5D)|",
      "|java+method:///com/mongodb/client/model/Filters/eq(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateOp/getConditions()|",
      "|java+method:///com/mongodb/client/model/BulkWriteOptions/ordered(boolean)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateOp/getId()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Document/getModCount()|",
      "|java+method:///com/mongodb/client/model/UpdateOptions/upsert(boolean)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/getDBCollection(org.apache.jackrabbit.oak.plugins.document.Collection)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+constructor:///com/mongodb/client/model/UpdateOptions/UpdateOptions()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/createUpdate(org.apache.jackrabbit.oak.plugins.document.UpdateOp,boolean)|",
      "|java+method:///com/mongodb/bulk/BulkWriteUpsert/getIndex()|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/findDocuments(org.apache.jackrabbit.oak.plugins.document.Collection,java.util.Set)|",
    "called": "|java+method:///com/mongodb/client/model/Filters/or(java.lang.Iterable)|",
    "v1Body": [
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/convertFromDBObject(org.apache.jackrabbit.oak.plugins.document.Collection,com.mongodb.DBObject)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///com/mongodb/QueryBuilder/QueryBuilder()|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/getByKeyQuery(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/getDBCollection(org.apache.jackrabbit.oak.plugins.document.Collection)|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Document/getId()|",
      "|java+method:///com/mongodb/QueryBuilder/or(com.mongodb.DBObject%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///com/mongodb/DBCollection/find(com.mongodb.DBObject)|",
      "|java+method:///com/mongodb/DBCursor/hasNext()|",
      "|java+method:///com/mongodb/DBCursor/next()|",
      "|java+method:///com/mongodb/QueryBuilder/get()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/convertFromDBObject(org.apache.jackrabbit.oak.plugins.document.Collection,com.mongodb.DBObject)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///com/mongodb/client/model/Filters/or(java.lang.Iterable)|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+method:///com/mongodb/client/FindIterable/iterator()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/getByKeyQuery(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/getDBCollection(org.apache.jackrabbit.oak.plugins.document.Collection)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/mongodb/client/MongoCollection/find(org.bson.conversions.Bson)|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Document/getId()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoVersionGCSupport/getPossiblyDeletedDocs(long,long)|",
    "called": "|java+method:///com/mongodb/client/model/Filters/and(org.bson.conversions.Bson%5B%5D)|",
    "v1Body": [
      "|java+method:///com/mongodb/QueryBuilder/is(java.lang.Object)|",
      "|java+method:///com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///com/mongodb/QueryBuilder/greaterThanEquals(java.lang.Object)|",
      "|java+method:///com/mongodb/DBCursor/batchSize(int)|",
      "|java+method:///com/mongodb/QueryBuilder/put(java.lang.String)|",
      "|java+method:///com/mongodb/QueryBuilder/lessThan(java.lang.Object)|",
      "|java+method:///com/mongodb/DBCollection/find(com.mongodb.DBObject)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoVersionGCSupport/getPossiblyDeletedDocs(long,long)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/CloseableIterable/wrap(java.lang.Iterable,java.io.Closeable)|",
      "|java+method:///com/mongodb/QueryBuilder/get()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/NodeDocument/getModifiedInSecs(long)|",
      "|java+method:///com/mongodb/DBCursor/setReadPreference(com.mongodb.ReadPreference)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoVersionGCSupport/getNodeCollection()|",
      "|java+method:///com/mongodb/QueryBuilder/start(java.lang.String)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoVersionGCSupport$1/MongoVersionGCSupport$1(org.apache.jackrabbit.oak.plugins.document.mongo.MongoVersionGCSupport)|",
      "|java+method:///com/mongodb/ReadPreference/secondaryPreferred()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/NodeDocument/getModifiedInSecs(long)|",
      "|java+method:///com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)|",
      "|java+method:///com/mongodb/client/FindIterable/batchSize(int)|",
      "|java+method:///com/mongodb/client/model/Filters/gte(java.lang.String,java.lang.Object)|",
      "|java+method:///com/mongodb/client/MongoCollection/withReadPreference(com.mongodb.ReadPreference)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoVersionGCSupport/getPossiblyDeletedDocs(long,long)|",
      "|java+method:///com/mongodb/ReadPreference/secondaryPreferred()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoVersionGCSupport/getNodeCollection()|",
      "|java+method:///com/mongodb/client/MongoCollection/find(org.bson.conversions.Bson)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/CloseableIterable/wrap(java.lang.Iterable)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///com/mongodb/client/model/Filters/and(org.bson.conversions.Bson%5B%5D)|",
      "|java+method:///com/mongodb/client/model/Filters/eq(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///com/mongodb/client/model/Filters/lt(java.lang.String,java.lang.Object)|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/MongoConnection/hasSufficientReadConcern(com.mongodb.DB)|",
    "called": "|java+method:///com/mongodb/DB/getReadConcern()|",
    "v1Body": [
      "|java+method:///com/mongodb/DB/getMongo()|",
      "|java+method:///com/mongodb/Mongo/getReplicaSetStatus()|",
      "|java+method:///com/google/common/base/Preconditions/checkNotNull(java.lang.Object)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/MongoConnection/readConcernLevel(com.mongodb.ReadConcern)|",
      "|java+method:///com/mongodb/DB/getReadConcern()|"
    ],
    "v2Body": [
      "|java+method:///com/mongodb/DB/getMongo()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/MongoConnection/isSufficientReadConcern(com.mongodb.Mongo,com.mongodb.ReadConcern)|",
      "|java+method:///com/google/common/base/Preconditions/checkNotNull(java.lang.Object)|",
      "|java+method:///com/mongodb/DB/getReadConcern()|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/remove(org.apache.jackrabbit.oak.plugins.document.Collection,java.lang.String,long,long)|",
    "called": "|java+method:///com/mongodb/client/model/Filters/and(org.bson.conversions.Bson%5B%5D)|",
    "v1Body": [
      "|java+method:///com/mongodb/DBCollection/remove(com.mongodb.DBObject)|",
      "|java+method:///com/mongodb/QueryBuilder/start(java.lang.String)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentStoreStatsCollector/doneRemove(long,org.apache.jackrabbit.oak.plugins.document.Collection,int)|",
      "|java+method:///com/google/common/base/Stopwatch/elapsed(java.util.concurrent.TimeUnit)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentStoreException/convert(java.lang.Throwable,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/getDBCollection(org.apache.jackrabbit.oak.plugins.document.Collection)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/log(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/invalidateCache()|",
      "|java+method:///com/mongodb/WriteResult/getN()|",
      "|java+method:///com/mongodb/QueryBuilder/greaterThan(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/mongodb/QueryBuilder/lessThan(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/startWatch()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/mongodb/QueryBuilder/get()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Math/min(long,long)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentStoreStatsCollector/doneRemove(long,org.apache.jackrabbit.oak.plugins.document.Collection,int)|",
      "|java+method:///com/google/common/base/Stopwatch/elapsed(java.util.concurrent.TimeUnit)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentStoreException/convert(java.lang.Throwable,java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/mongodb/client/result/DeleteResult/getDeletedCount()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/getDBCollection(org.apache.jackrabbit.oak.plugins.document.Collection)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/log(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/mongodb/client/model/Filters/gt(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/invalidateCache()|",
      "|java+method:///com/mongodb/client/model/Filters/and(org.bson.conversions.Bson%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///com/mongodb/client/MongoCollection/deleteMany(org.bson.conversions.Bson)|",
      "|java+method:///com/mongodb/client/model/Filters/lt(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/startWatch()|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/create(org.apache.jackrabbit.oak.plugins.document.Collection,java.util.List)|",
    "called": "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject()|",
    "v1Body": [
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateOp$Key/toString()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///com/mongodb/DBObject/containsField(java.lang.String)|",
      "|java+method:///com/google/common/base/Stopwatch/elapsed(java.util.concurrent.TimeUnit)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateOp$Key/getRevision()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/getDBCollection(org.apache.jackrabbit.oak.plugins.document.Collection)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateOp$Operation$Type/ordinal()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateUtils/assertUnconditional(org.apache.jackrabbit.oak.plugins.document.UpdateOp)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Collection/newDocument(org.apache.jackrabbit.oak.plugins.document.DocumentStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateOp$Key/getName()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/mongo/RevisionEntry/RevisionEntry(org.apache.jackrabbit.oak.plugins.document.Revision,java.lang.Object)|",
      "|java+method:///com/mongodb/DBObject/get(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateUtils/applyChanges(org.apache.jackrabbit.oak.plugins.document.Document,org.apache.jackrabbit.oak.plugins.document.UpdateOp)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/mongodb/DBObject/keySet()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Document/put(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/updateLocalChanges(org.apache.jackrabbit.oak.plugins.document.NodeDocument)|",
      "|java+method:///com/mongodb/DBObject/put(java.lang.String,java.lang.Object)|",
      "|java+method:///com/google/common/collect/Lists/newArrayListWithCapacity(int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Revision/toString()|",
      "|java+method:///com/mongodb/DBCollection/insert(com.mongodb.DBObject%5B%5D)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateOp/getId()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/startWatch()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentStoreStatsCollector/doneCreate(long,org.apache.jackrabbit.oak.plugins.document.Collection,java.util.List,boolean)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/log(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateOp/getChanges()|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/cache/NodeDocumentCache/putIfAbsent(org.apache.jackrabbit.oak.plugins.document.NodeDocument)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateOp$Key/toString()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateUtils/applyChanges(org.apache.jackrabbit.oak.plugins.document.Document,org.apache.jackrabbit.oak.plugins.document.UpdateOp)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/updateLocalChanges(org.apache.jackrabbit.oak.plugins.document.NodeDocument)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Revision/toString()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateOp$Key/getRevision()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/getDBCollection(org.apache.jackrabbit.oak.plugins.document.Collection)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateUtils/assertUnconditional(org.apache.jackrabbit.oak.plugins.document.UpdateOp)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Collection/newDocument(org.apache.jackrabbit.oak.plugins.document.DocumentStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateOp$Key/getName()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Document/put(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///com/mongodb/BasicDBObject/containsKey(java.lang.String)|",
      "|java+method:///com/google/common/base/Stopwatch/elapsed(java.util.concurrent.TimeUnit)|",
      "|java+method:///com/mongodb/client/MongoCollection/insertMany(java.util.List)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateOp/getId()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/startWatch()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentStoreStatsCollector/doneCreate(long,org.apache.jackrabbit.oak.plugins.document.Collection,java.util.List,boolean)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/log(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateOp/getChanges()|",
      "|java+method:///com/mongodb/BasicDBObject/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/mongodb/BasicDBObject/get(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateOp$Operation$Type/ordinal()|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/cache/NodeDocumentCache/putIfAbsent(org.apache.jackrabbit.oak.plugins.document.NodeDocument)|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoVersionGCSupport/queriesForType(org.apache.jackrabbit.oak.plugins.document.NodeDocument$SplitDocType,org.apache.jackrabbit.oak.plugins.document.RevisionVector)|",
    "called": "|java+method:///com/mongodb/client/model/Filters/and(org.bson.conversions.Bson%5B%5D)|",
    "v1Body": [
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/NodeDocument$SplitDocType/typeCode()|",
      "|java+method:///com/mongodb/QueryBuilder/is(java.lang.Object)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/RevisionVector/iterator()|",
      "|java+method:///com/mongodb/QueryBuilder/start()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///com/mongodb/QueryBuilder/regex(java.util.regex.Pattern)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/Utils/getPreviousIdFor(java.lang.String,org.apache.jackrabbit.oak.plugins.document.Revision,int)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/mongodb/QueryBuilder/and(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/NodeDocument/getModifiedInSecs(long)|",
      "|java+method:///java/util/regex/Pattern/compile(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/mongodb/QueryBuilder/start(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/mongodb/QueryBuilder/or(com.mongodb.DBObject%5B%5D)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/mongodb/QueryBuilder/lessThan(java.lang.Object)|",
      "|java+method:///java/lang/String/lastIndexOf(int)|",
      "|java+method:///com/mongodb/QueryBuilder/and(com.mongodb.DBObject%5B%5D)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Revision/getTimestamp()|",
      "|java+method:///com/mongodb/QueryBuilder/get()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/NodeDocument$SplitDocType/typeCode()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/RevisionVector/iterator()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/Utils/getPreviousIdFor(java.lang.String,org.apache.jackrabbit.oak.plugins.document.Revision,int)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/mongodb/client/model/Filters/lt(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/mongodb/client/model/Filters/or(org.bson.conversions.Bson%5B%5D)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/NodeDocument/getModifiedInSecs(long)|",
      "|java+method:///java/util/regex/Pattern/compile(java.lang.String)|",
      "|java+method:///com/mongodb/client/model/Filters/regex(java.lang.String,java.util.regex.Pattern)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///com/mongodb/client/model/Filters/and(org.bson.conversions.Bson%5B%5D)|",
      "|java+method:///com/mongodb/client/model/Filters/eq(java.lang.String,java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/lastIndexOf(int)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Revision/getTimestamp()|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/getAllChunkIds(long)|",
    "called": "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)|",
    "v1Body": [
      "|java+method:///com/mongodb/DBObject/put(java.lang.String,java.lang.Object)|",
      "|java+method:///com/mongodb/DBCursor/hint(com.mongodb.DBObject)|",
      "|java+method:///com/mongodb/QueryBuilder/lessThanEquals(java.lang.Object)|",
      "|java+method:///com/mongodb/DBCursor/addOption(int)|",
      "|java+method:///com/mongodb/QueryBuilder/and(java.lang.String)|",
      "|java+method:///com/mongodb/DBCollection/find(com.mongodb.DBObject,com.mongodb.DBObject)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+constructor:///com/mongodb/QueryBuilder/QueryBuilder()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore$1/MongoBlobStore$1(org.apache.jackrabbit.oak.plugins.document.mongo.MongoBlobStore,com.mongodb.DBCursor)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/getBlobCollection()|",
      "|java+method:///com/mongodb/QueryBuilder/get()|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject()|"
    ],
    "v2Body": [
      "|java+method:///com/mongodb/client/FindIterable/modifiers(org.bson.conversions.Bson)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore$1/MongoBlobStore$1(org.apache.jackrabbit.oak.plugins.document.mongo.MongoBlobStore,com.mongodb.client.MongoCursor)|",
      "|java+method:///com/mongodb/client/MongoCollection/find(org.bson.conversions.Bson)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///com/mongodb/client/model/Filters/lte(java.lang.String,java.lang.Object)|",
      "|java+method:///com/mongodb/client/FindIterable/iterator()|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)|",
      "|java+constructor:///org/bson/Document/Document()|",
      "|java+method:///com/mongodb/client/FindIterable/projection(org.bson.conversions.Bson)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/getBlobCollection()|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/determineServerTimeDifferenceMillis()|",
    "called": "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/mongodb/CommandResult/getDate(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Date/getTime()|",
      "|java+method:///com/mongodb/CommandResult/getException()|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///com/mongodb/DB/command(java.lang.String)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/mongodb/CommandResult/getErrorMessage()|"
    ],
    "v2Body": [
      "|java+method:///com/mongodb/client/MongoDatabase/runCommand(org.bson.conversions.Bson,java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/mongodb/BasicDBObject/getDate(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/Date/getTime()|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Exception/getMessage()|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/getBlob(java.lang.String,long)|",
    "called": "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)|",
    "v1Body": [
      "|java+method:///com/mongodb/DBCollection/findOne(com.mongodb.DBObject,com.mongodb.DBObject,com.mongodb.ReadPreference)|",
      "|java+method:///com/mongodb/ReadPreference/primary()|",
      "|java+method:///com/mongodb/DBObject/put(java.lang.String,java.lang.Object)|",
      "|java+method:///com/mongodb/ReadPreference/secondaryPreferred()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/getBlobCollection()|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/getBlobQuery(java.lang.String,long)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///com/mongodb/client/MongoCollection/find(org.bson.conversions.Bson)|",
      "|java+method:///com/mongodb/client/FindIterable/into(java.util.Collection)|",
      "|java+method:///com/mongodb/ReadPreference/primary()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/mongodb/client/MongoCollection/withReadPreference(com.mongodb.ReadPreference)|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)|",
      "|java+method:///com/mongodb/ReadPreference/secondaryPreferred()|",
      "|java+method:///com/mongodb/client/FindIterable/projection(org.bson.conversions.Bson)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/getBlobQuery(java.lang.String,long)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/getBlobCollection()|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/setReadWriteMode(java.lang.String)|",
    "called": "|java+method:///com/mongodb/MongoClientURI/getOptions()|",
    "v1Body": [
      "|java+constructor:///com/mongodb/MongoClientURI/MongoClientURI(java.lang.String)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/mongodb/DBCollection/getWriteConcern()|",
      "|java+method:///com/mongodb/MongoClientOptions/getWriteConcern()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///com/mongodb/DBCollection/getReadPreference()|",
      "|java+method:///com/mongodb/MongoClientURI/getOptions()|",
      "|java+method:///com/mongodb/MongoClientOptions/getReadPreference()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/mongodb/DBCollection/setReadPreference(com.mongodb.ReadPreference)|",
      "|java+method:///com/mongodb/DBCollection/setWriteConcern(com.mongodb.WriteConcern)|",
      "|java+method:///com/mongodb/WriteConcern/equals(java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+constructor:///com/mongodb/MongoClientURI/MongoClientURI(java.lang.String)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/mongodb/MongoClientOptions/getWriteConcern()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///com/mongodb/MongoClientOptions/getReadPreference()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/mongodb/client/MongoCollection/getReadPreference()|",
      "|java+method:///com/mongodb/WriteConcern/equals(java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/mongodb/client/MongoCollection/withReadPreference(com.mongodb.ReadPreference)|",
      "|java+method:///com/mongodb/client/MongoCollection/withWriteConcern(com.mongodb.WriteConcern)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///com/mongodb/MongoClientURI/getOptions()|",
      "|java+method:///com/mongodb/client/MongoCollection/getWriteConcern()|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/getModStamps(java.lang.Iterable)|",
    "called": "|java+method:///com/mongodb/client/model/Filters/in(java.lang.String,java.lang.Iterable)|",
    "v1Body": [
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/mongodb/DBCursor/setReadPreference(com.mongodb.ReadPreference)|",
      "|java+method:///com/mongodb/ReadPreference/primary()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/mongodb/DBCursor/iterator()|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)|",
      "|java+method:///com/mongodb/DBCollection/find(com.mongodb.DBObject,com.mongodb.DBObject)|",
      "|java+method:///com/mongodb/BasicDBObject/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/mongodb/DBObject/get(java.lang.String)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/cache/ModificationStamp/ModificationStamp(long,long)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/mongodb/QueryBuilder/start(java.lang.String)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/Utils/asLong(java.lang.Number)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///com/mongodb/QueryBuilder/in(java.lang.Object)|",
      "|java+method:///com/mongodb/QueryBuilder/get()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///com/mongodb/client/model/Filters/in(java.lang.String,java.lang.Iterable)|",
      "|java+method:///com/mongodb/client/MongoCollection/find(org.bson.conversions.Bson)|",
      "|java+method:///com/mongodb/client/FindIterable/forEach(com.mongodb.Block)|",
      "|java+method:///com/mongodb/ReadPreference/primary()|",
      "|java+method:///com/mongodb/client/MongoCollection/withReadPreference(com.mongodb.ReadPreference)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)|",
      "|java+method:///com/mongodb/client/FindIterable/projection(org.bson.conversions.Bson)|",
      "|java+method:///com/mongodb/BasicDBObject/put(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/findAndModify(org.apache.jackrabbit.oak.plugins.document.Collection,org.apache.jackrabbit.oak.plugins.document.UpdateOp,boolean,boolean)|",
    "called": "|java+method:///com/mongodb/client/model/Filters/and(org.bson.conversions.Bson%5B%5D)|",
    "v1Body": [
      "|java+method:///java/util/concurrent/locks/Lock/unlock()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/updateLocalChanges(org.apache.jackrabbit.oak.plugins.document.NodeDocument)|",
      "|java+method:///com/google/common/base/Stopwatch/elapsed(java.util.concurrent.TimeUnit)|",
      "|java+method:///com/mongodb/DBCollection/update(com.mongodb.DBObject,com.mongodb.DBObject)|",
      "|java+method:///com/mongodb/WriteResult/getN()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/locks/NodeDocumentLocks/acquire(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentStoreStatsCollector/doneFindAndModify(long,org.apache.jackrabbit.oak.plugins.document.Collection,java.lang.String,boolean,boolean,int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/cache/NodeDocumentCache/put(org.apache.jackrabbit.oak.plugins.document.NodeDocument)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateOp/getId()|",
      "|java+method:///com/mongodb/QueryBuilder/and(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/createQueryForUpdate(java.lang.String,java.util.Map)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/convertFromDBObject(org.apache.jackrabbit.oak.plugins.document.Collection,com.mongodb.DBObject)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Collection/newDocument(org.apache.jackrabbit.oak.plugins.document.DocumentStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateUtils/applyChanges(org.apache.jackrabbit.oak.plugins.document.Document,org.apache.jackrabbit.oak.plugins.document.UpdateOp)|",
      "|java+method:///com/mongodb/QueryBuilder/is(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/cache/NodeDocumentCache/getIfPresent(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateOp/copy()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateUtils/checkConditions(org.apache.jackrabbit.oak.plugins.document.Document,java.util.Map)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/applyChanges(org.apache.jackrabbit.oak.plugins.document.Collection,org.apache.jackrabbit.oak.plugins.document.Document,org.apache.jackrabbit.oak.plugins.document.UpdateOp)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateOp/getConditions()|",
      "|java+method:///com/mongodb/DBCollection/findAndModify(com.mongodb.DBObject,com.mongodb.DBObject,com.mongodb.DBObject,boolean,com.mongodb.DBObject,boolean,boolean)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/startWatch()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Document/getModCount()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Document/seal()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/getDBCollection(org.apache.jackrabbit.oak.plugins.document.Collection)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/createUpdate(org.apache.jackrabbit.oak.plugins.document.UpdateOp,boolean)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/handleException(java.lang.Exception,org.apache.jackrabbit.oak.plugins.document.Collection,java.lang.String)|",
      "|java+method:///com/mongodb/QueryBuilder/get()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/cache/NodeDocumentCache/putIfAbsent(org.apache.jackrabbit.oak.plugins.document.NodeDocument)|"
    ],
    "v2Body": [
      "|java+method:///java/util/concurrent/locks/Lock/unlock()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateUtils/applyChanges(org.apache.jackrabbit.oak.plugins.document.Document,org.apache.jackrabbit.oak.plugins.document.UpdateOp)|",
      "|java+method:///com/mongodb/client/MongoCollection/updateOne(org.bson.conversions.Bson,org.bson.conversions.Bson)|",
      "|java+constructor:///com/mongodb/client/model/FindOneAndUpdateOptions/FindOneAndUpdateOptions()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/updateLocalChanges(org.apache.jackrabbit.oak.plugins.document.NodeDocument)|",
      "|java+method:///com/mongodb/client/MongoCollection/findOneAndUpdate(org.bson.conversions.Bson,org.bson.conversions.Bson,com.mongodb.client.model.FindOneAndUpdateOptions)|",
      "|java+method:///com/google/common/base/Stopwatch/elapsed(java.util.concurrent.TimeUnit)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/handleException(java.lang.Throwable,org.apache.jackrabbit.oak.plugins.document.Collection,java.lang.String)|",
      "|java+method:///com/mongodb/client/model/FindOneAndUpdateOptions/upsert(boolean)|",
      "|java+method:///com/mongodb/client/model/FindOneAndUpdateOptions/returnDocument(com.mongodb.client.model.ReturnDocument)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentStoreStatsCollector/doneFindAndModify(long,org.apache.jackrabbit.oak.plugins.document.Collection,java.lang.String,boolean,boolean,int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateOp/getConditions()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/cache/NodeDocumentCache/put(org.apache.jackrabbit.oak.plugins.document.NodeDocument)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateOp/getId()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/createUpdate(org.apache.jackrabbit.oak.plugins.document.UpdateOp,boolean)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/createQueryForUpdate(java.lang.String,java.util.Map)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/cache/NodeDocumentCache/putIfAbsent(org.apache.jackrabbit.oak.plugins.document.NodeDocument)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/convertFromDBObject(org.apache.jackrabbit.oak.plugins.document.Collection,com.mongodb.DBObject)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Collection/newDocument(org.apache.jackrabbit.oak.plugins.document.DocumentStore)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/cache/NodeDocumentCache/getIfPresent(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateOp/copy()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateUtils/checkConditions(org.apache.jackrabbit.oak.plugins.document.Document,java.util.Map)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/applyChanges(org.apache.jackrabbit.oak.plugins.document.Collection,org.apache.jackrabbit.oak.plugins.document.Document,org.apache.jackrabbit.oak.plugins.document.UpdateOp)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/locks/NodeDocumentLocks/acquire(java.lang.String)|",
      "|java+method:///com/mongodb/client/model/Filters/and(org.bson.conversions.Bson%5B%5D)|",
      "|java+method:///com/mongodb/client/model/Filters/eq(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/startWatch()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Document/getModCount()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Document/seal()|",
      "|java+method:///com/mongodb/client/result/UpdateResult/getModifiedCount()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/getDBCollection(org.apache.jackrabbit.oak.plugins.document.Collection)|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentNodeStoreBuilderBase/setMongoDB(java.lang.String,java.lang.String,int)|",
    "called": "|java+method:///com/mongodb/MongoClient/getDatabase(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/MongoConnection/hasReadConcern(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoStatus/isMajorityReadConcernEnabled()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/MongoConnection/getDB(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/MongoConnection/getDefaultBuilder()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoStatus/isMajorityReadConcernSupported()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/util/MongoConnection/MongoConnection(java.lang.String,com.mongodb.MongoClientOptions$Builder)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/MongoConnection/hasWriteConcern(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/MongoConnection/getDefaultReadConcern(com.mongodb.DB)|",
      "|java+method:///com/mongodb/DB/setReadConcern(com.mongodb.ReadConcern)|",
      "|java+method:///com/mongodb/MongoClientOptions$Builder/socketKeepAlive(boolean)|",
      "|java+method:///com/mongodb/DB/setWriteConcern(com.mongodb.WriteConcern)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoStatus/MongoStatus(com.mongodb.DB)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/MongoConnection/getDefaultWriteConcern(com.mongodb.DB)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentNodeStoreBuilderBase/setMongoDB(com.mongodb.DB,org.apache.jackrabbit.oak.plugins.document.mongo.MongoStatus,int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentNodeStoreBuilderBase/thisBuilder()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoStatus/isMajorityReadConcernEnabled()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoClusterListener/MongoClusterListener()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/MongoConnection/getDefaultReadConcern(com.mongodb.Mongo,com.mongodb.client.MongoDatabase)|",
      "|java+method:///com/mongodb/MongoClient/getDatabase(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/MongoConnection/hasWriteConcern(java.lang.String)|",
      "|java+method:///com/mongodb/MongoClientOptions$Builder/socketKeepAlive(boolean)|",
      "|java+method:///com/mongodb/client/MongoDatabase/withReadConcern(com.mongodb.ReadConcern)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/MongoConnection/hasReadConcern(java.lang.String)|",
      "|java+constructor:///com/mongodb/MongoClientURI/MongoClientURI(java.lang.String,com.mongodb.MongoClientOptions$Builder)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoStatus/MongoStatus(com.mongodb.MongoClient,java.lang.String,org.apache.jackrabbit.oak.plugins.document.mongo.ClusterDescriptionProvider)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/MongoConnection/getDefaultBuilder()|",
      "|java+constructor:///com/mongodb/MongoClient/MongoClient(com.mongodb.MongoClientURI)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoStatus/isMajorityReadConcernSupported()|",
      "|java+method:///com/mongodb/client/MongoDatabase/withWriteConcern(com.mongodb.WriteConcern)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentNodeStoreBuilderBase/thisBuilder()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/MongoConnection/getDefaultWriteConcern(com.mongodb.Mongo)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentNodeStoreBuilderBase/setMongoDB(com.mongodb.MongoClient,com.mongodb.client.MongoDatabase,org.apache.jackrabbit.oak.plugins.document.mongo.MongoStatus,int)|",
      "|java+method:///com/mongodb/MongoClientOptions$Builder/addClusterListener(com.mongodb.event.ClusterListener)|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/remove(org.apache.jackrabbit.oak.plugins.document.Collection,java.util.Map)|",
    "called": "|java+method:///com/mongodb/client/model/Filters/or(java.lang.Iterable)|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentStoreException/convert(java.lang.Throwable,java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/clear()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/getDBCollection(org.apache.jackrabbit.oak.plugins.document.Collection)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/createQueryForUpdate(java.lang.String,java.util.Map)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateOp$Condition/newEqualsCondition(java.lang.Object)|",
      "|java+method:///com/mongodb/DBCollection/remove(com.mongodb.DBObject)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentStoreStatsCollector/doneRemove(long,org.apache.jackrabbit.oak.plugins.document.Collection,int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/invalidateCache(java.lang.Iterable)|",
      "|java+method:///com/mongodb/DBObject/put(java.lang.String,java.lang.Object)|",
      "|java+method:///com/google/common/base/Stopwatch/elapsed(java.util.concurrent.TimeUnit)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/mongodb/WriteResult/getN()|",
      "|java+method:///java/util/Collections/singletonMap(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/startWatch()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/log(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/mongodb/QueryBuilder/get()|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/UpdateOp$Condition/newEqualsCondition(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentStoreException/convert(java.lang.Throwable,java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/clear()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/mongodb/client/result/DeleteResult/getDeletedCount()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/getDBCollection(org.apache.jackrabbit.oak.plugins.document.Collection)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/createQueryForUpdate(java.lang.String,java.util.Map)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/DocumentStoreStatsCollector/doneRemove(long,org.apache.jackrabbit.oak.plugins.document.Collection,int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/invalidateCache(java.lang.Iterable)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///com/mongodb/client/model/Filters/or(java.lang.Iterable)|",
      "|java+method:///com/google/common/base/Stopwatch/elapsed(java.util.concurrent.TimeUnit)|",
      "|java+method:///com/mongodb/client/MongoCollection/deleteMany(org.bson.conversions.Bson)|",
      "|java+method:///java/util/Collections/singletonMap(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/startWatch()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoDocumentStore/log(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/MongoConnection/hasSufficientWriteConcern(com.mongodb.DB)|",
    "called": "|java+method:///com/mongodb/DB/getWriteConcern()|",
    "v1Body": [
      "|java+method:///com/mongodb/DB/getMongo()|",
      "|java+method:///com/mongodb/DB/getWriteConcern()|",
      "|java+method:///java/lang/Number/intValue()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/mongodb/Mongo/getReplicaSetStatus()|",
      "|java+method:///com/google/common/base/Preconditions/checkNotNull(java.lang.Object)|",
      "|java+method:///com/mongodb/WriteConcern/getWString()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/mongodb/WriteConcern/getWObject()|"
    ],
    "v2Body": [
      "|java+method:///com/mongodb/DB/getMongo()|",
      "|java+method:///com/mongodb/DB/getWriteConcern()|",
      "|java+method:///com/google/common/base/Preconditions/checkNotNull(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/MongoConnection/isSufficientWriteConcern(com.mongodb.Mongo,com.mongodb.WriteConcern)|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/mark(org.apache.jackrabbit.oak.spi.blob.AbstractBlobStore$BlockId)|",
    "called": "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)|",
    "v1Body": [
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///com/mongodb/DBCollection/update(com.mongodb.DBObject,com.mongodb.DBObject)|",
      "|java+method:///org/apache/jackrabbit/oak/commons/StringUtils/convertBytesToHex(byte%5B%5D)|",
      "|java+method:///org/apache/jackrabbit/oak/spi/blob/AbstractBlobStore$BlockId/getDigest()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/getBlobCollection()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/getBlobQuery(java.lang.String,long)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/jackrabbit/oak/commons/StringUtils/convertBytesToHex(byte%5B%5D)|",
      "|java+method:///org/apache/jackrabbit/oak/spi/blob/AbstractBlobStore$BlockId/getDigest()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/getBlobCollection()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/getBlobQuery(java.lang.String,long)|",
      "|java+method:///com/mongodb/client/MongoCollection/updateOne(org.bson.conversions.Bson,org.bson.conversions.Bson)|",
      "|java+method:///java/lang/Long/valueOf(long)|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/util/MongoConnection/isMajorityWriteConcern(com.mongodb.DB)|",
    "called": "|java+method:///com/mongodb/WriteConcern/getWString()|",
    "v1Body": [
      "|java+method:///com/mongodb/DB/getWriteConcern()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///com/mongodb/WriteConcern/getWObject()|"
    ],
    "v2Body": [
      "|java+method:///com/mongodb/DB/getWriteConcern()|",
      "|java+method:///com/mongodb/WriteConcern/getWString()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///com/mongodb/WriteConcern/getWObject()|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/countDeleteChunks(java.util.List,long)|",
    "called": "|java+method:///com/mongodb/client/model/Filters/and(org.bson.conversions.Bson%5B%5D)|",
    "v1Body": [
      "|java+method:///com/mongodb/DBCollection/remove(com.mongodb.DBObject)|",
      "|java+method:///com/mongodb/WriteResult/getN()|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///com/mongodb/QueryBuilder/lessThan(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/getBlobCollection()|",
      "|java+method:///com/mongodb/QueryBuilder/and(java.lang.String)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+constructor:///com/mongodb/QueryBuilder/QueryBuilder()|",
      "|java+method:///com/mongodb/QueryBuilder/in(java.lang.Object)|",
      "|java+method:///com/mongodb/QueryBuilder/get()|"
    ],
    "v2Body": [
      "|java+method:///com/mongodb/client/model/Filters/in(java.lang.String,java.lang.Iterable)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///com/mongodb/client/model/Filters/and(org.bson.conversions.Bson%5B%5D)|",
      "|java+constructor:///org/bson/Document/Document()|",
      "|java+method:///com/mongodb/client/MongoCollection/deleteMany(org.bson.conversions.Bson)|",
      "|java+method:///com/mongodb/client/model/Filters/lt(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/getBlobCollection()|",
      "|java+method:///com/mongodb/client/result/DeleteResult/getDeletedCount()|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/storeBlock(byte%5B%5D,int,byte%5B%5D)|",
    "called": "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject()|",
    "v1Body": [
      "|java+method:///org/apache/jackrabbit/oak/cache/CacheLIRS/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///com/mongodb/BasicDBObject/append(java.lang.String,java.lang.Object)|",
      "|java+method:///com/mongodb/WriteResult/isUpdateOfExisting()|",
      "|java+method:///org/apache/jackrabbit/oak/commons/StringUtils/convertBytesToHex(byte%5B%5D)|",
      "|java+method:///com/mongodb/MongoException/getMessage()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)|",
      "|java+method:///com/mongodb/DBCollection/update(com.mongodb.DBObject,com.mongodb.DBObject,boolean,boolean)|",
      "|java+method:///org/slf4j/Logger/trace(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/getBlobCollection()|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/getBlobQuery(java.lang.String,long)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/jackrabbit/oak/cache/CacheLIRS/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/apache/jackrabbit/oak/commons/StringUtils/convertBytesToHex(byte%5B%5D)|",
      "|java+method:///org/slf4j/Logger/trace(java.lang.String,java.lang.Object)|",
      "|java+method:///com/mongodb/MongoException/getMessage()|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)|",
      "|java+method:///com/mongodb/client/result/UpdateResult/getUpsertedId()|",
      "|java+method:///com/mongodb/BasicDBObject/append(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/getBlobCollection()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///com/mongodb/client/model/UpdateOptions/upsert(boolean)|",
      "|java+constructor:///com/mongodb/client/model/UpdateOptions/UpdateOptions()|",
      "|java+method:///com/mongodb/client/MongoCollection/updateOne(org.bson.conversions.Bson,org.bson.conversions.Bson,com.mongodb.client.model.UpdateOptions)|",
      "|java+constructor:///com/mongodb/BasicDBObject/BasicDBObject()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/getBlobQuery(java.lang.String,long)|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoVersionGCSupport/getDeletedOnceCount()|",
    "called": "|java+method:///com/mongodb/client/model/Filters/eq(java.lang.String,java.lang.Object)|",
    "v1Body": [
      "|java+method:///com/mongodb/QueryBuilder/is(java.lang.Object)|",
      "|java+method:///com/mongodb/DBCollection/count(com.mongodb.DBObject,com.mongodb.ReadPreference)|",
      "|java+method:///com/mongodb/ReadPreference/secondaryPreferred()|",
      "|java+method:///com/mongodb/QueryBuilder/get()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoVersionGCSupport/getNodeCollection()|",
      "|java+method:///com/mongodb/QueryBuilder/start(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoVersionGCSupport/getNodeCollection()|",
      "|java+method:///com/mongodb/client/MongoCollection/withReadPreference(com.mongodb.ReadPreference)|",
      "|java+method:///com/mongodb/client/model/Filters/eq(java.lang.String,java.lang.Object)|",
      "|java+method:///com/mongodb/ReadPreference/secondaryPreferred()|",
      "|java+method:///com/mongodb/client/MongoCollection/count(org.bson.conversions.Bson)|"
    ],
    "affectedLib": "org.mongodb:mongo-java-driver:3.6.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+initializer:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobStore/MongoBlobStore$initializer|",
    "called": "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoBlobCodec/MongoBlobCodec()|",
      "|java+method:///com/mongodb/MongoClient/getDefaultCodecRegistry()|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+method:///org/bson/codecs/configuration/CodecRegistries/fromRegistries(org.bson.codecs.configuration.CodecRegistry%5B%5D)|",
      "|java+method:///org/bson/codecs/configuration/CodecRegistries/fromCodecs(org.bson.codecs.Codec%5B%5D)|"
    ],
    "affectedLib": "org.slf4j:slf4j-api:1.7.25",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+initializer:///org/apache/jackrabbit/oak/plugins/document/DocumentNodeStoreBranch/DocumentNodeStoreBranch$initializer|",
    "called": "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+constructor:///org/apache/jackrabbit/oak/commons/PerfLogger/PerfLogger(org.slf4j.Logger)|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/google/common/collect/Maps/newConcurrentMap()|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+constructor:///java/util/Random/Random()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Integer/getInteger(java.lang.String,int)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+constructor:///org/apache/jackrabbit/oak/commons/PerfLogger/PerfLogger(org.slf4j.Logger)|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+constructor:///java/util/Random/Random()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Integer/getInteger(java.lang.String,int)|"
    ],
    "affectedLib": "org.slf4j:slf4j-api:1.7.25",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+initializer:///org/apache/jackrabbit/oak/plugins/document/mongo/MongoVersionGCSupport/MongoVersionGCSupport$initializer|",
    "called": "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
    "v1Body": [
      "|java+method:///com/mongodb/QueryBuilder/is(java.lang.Object)|",
      "|java+method:///com/mongodb/QueryBuilder/start(java.lang.String)|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/mongodb/QueryBuilder/get()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|"
    ],
    "affectedLib": "org.slf4j:slf4j-api:1.7.25",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-store-document:1.8.7",
    "coordinatesV2": "org.apache.jackrabbit:oak-store-document:1.9.0",
    "caller": "|java+initializer:///org/apache/jackrabbit/oak/plugins/document/util/Utils/Utils$initializer|",
    "called": "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Revision/toString()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/util/Utils$1/Utils$1()|",
      "|java+method:///java/lang/String/toCharArray()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///java/nio/charset/Charset/forName(java.lang.String)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+method:///java/lang/Integer/getInteger(java.lang.String,int)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/Revision/Revision(long,int,int)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/jackrabbit/oak/plugins/document/Revision/toString()|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/util/Utils$1/Utils$1()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///java/nio/charset/Charset/forName(java.lang.String)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+method:///java/lang/Integer/getInteger(java.lang.String,int)|",
      "|java+constructor:///org/apache/jackrabbit/oak/plugins/document/Revision/Revision(long,int,int)|"
    ],
    "affectedLib": "org.slf4j:slf4j-api:1.7.25",
    "change": "UPDATED"
  }
]