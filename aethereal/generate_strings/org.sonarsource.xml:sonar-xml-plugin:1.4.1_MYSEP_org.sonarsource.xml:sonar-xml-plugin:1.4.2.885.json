[
  {
    "coordinatesV1": "org.sonarsource.xml:sonar-xml-plugin:1.4.1",
    "coordinatesV2": "org.sonarsource.xml:sonar-xml-plugin:1.4.2.885",
    "caller": "|java+method:///org/sonar/plugins/xml/checks/NewlineCheck/validateNewline(org.w3c.dom.Node)|",
    "called": "|java+method:///org/apache/commons/lang/StringUtils/isWhitespace(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/w3c/dom/Node/getNextSibling()|",
      "|java+method:///org/sonar/plugins/xml/checks/NewlineCheck/validateNewline(org.w3c.dom.Node)|",
      "|java+method:///org/sonar/plugins/xml/checks/NewlineCheck/createViolation(java.lang.Integer,java.lang.String)|",
      "|java+method:///org/sonar/plugins/xml/checks/NewlineCheck/getWebSourceCode()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/String/contains(java.lang.CharSequence)|",
      "|java+method:///org/w3c/dom/Node/getFirstChild()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isWhitespace(java.lang.String)|",
      "|java+method:///org/sonar/plugins/xml/checks/XmlSourceCode/getLineForNode(org.w3c.dom.Node)|",
      "|java+method:///org/sonar/plugins/xml/checks/NewlineCheck/validateLastChild(boolean,org.w3c.dom.Node)|",
      "|java+method:///org/w3c/dom/Node/getTextContent()|",
      "|java+method:///org/w3c/dom/Node/getNodeType()|"
    ],
    "v2Body": [
      "|java+method:///org/w3c/dom/Node/getNextSibling()|",
      "|java+method:///org/sonar/plugins/xml/checks/NewlineCheck/createViolation(java.lang.Integer,java.lang.String)|",
      "|java+method:///org/sonar/plugins/xml/checks/NewlineCheck/getWebSourceCode()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/String/contains(java.lang.CharSequence)|",
      "|java+method:///org/sonar/plugins/xml/checks/NewlineCheck/checkChildElements(org.w3c.dom.Node)|",
      "|java+method:///org/w3c/dom/Node/getFirstChild()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isWhitespace(java.lang.String)|",
      "|java+method:///org/sonar/plugins/xml/checks/XmlSourceCode/getLineForNode(org.w3c.dom.Node)|",
      "|java+method:///org/sonar/plugins/xml/checks/NewlineCheck/validateLastChild(boolean,org.w3c.dom.Node)|",
      "|java+method:///org/w3c/dom/Node/getTextContent()|",
      "|java+method:///org/w3c/dom/Node/getNodeType()|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.xml:sonar-xml-plugin:1.4.1",
    "coordinatesV2": "org.sonarsource.xml:sonar-xml-plugin:1.4.2.885",
    "caller": "|java+method:///org/sonar/plugins/xml/checks/XmlSchemaCheck/autodetectSchemaAndValidate()|",
    "called": "|java+method:///org/apache/commons/lang/StringUtils/isEmpty(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/plugins/xml/checks/XmlSchemaCheck/validate(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/io/IOUtils/closeQuietly(java.io.InputStream)|",
      "|java+method:///org/sonar/plugins/xml/parsers/DetectSchemaParser$Doctype/getNamespace()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isEmpty(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/sonar/plugins/xml/schemas/SchemaResolver/getBuiltinSchema(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+method:///org/sonar/plugins/xml/checks/XmlSchemaCheck/detectSchema()|",
      "|java+method:///org/sonar/plugins/xml/checks/XmlSchemaCheck/getWebSourceCode()|",
      "|java+method:///org/sonar/plugins/xml/checks/XmlSourceCode/toString()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/sonar/plugins/xml/parsers/DetectSchemaParser$Doctype/getDtd()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/plugins/xml/checks/XmlSchemaCheck/validate(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/io/IOUtils/closeQuietly(java.io.InputStream)|",
      "|java+method:///org/sonar/plugins/xml/parsers/DetectSchemaParser$Doctype/getNamespace()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isEmpty(java.lang.String)|",
      "|java+method:///org/sonar/plugins/xml/schemas/SchemaResolver/getBuiltinSchema(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/log/Logger/error(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/sonar/plugins/xml/checks/XmlSchemaCheck/detectSchema()|",
      "|java+method:///org/sonar/api/utils/log/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/sonar/plugins/xml/checks/XmlSchemaCheck/getWebSourceCode()|",
      "|java+method:///org/sonar/plugins/xml/parsers/DetectSchemaParser$Doctype/getDtd()|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.xml:sonar-xml-plugin:1.4.1",
    "coordinatesV2": "org.sonarsource.xml:sonar-xml-plugin:1.4.2.885",
    "caller": "|java+method:///org/sonar/plugins/xml/checks/XmlSchemaCheck/validate()|",
    "called": "|java+method:///org/apache/commons/lang/StringUtils/split(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/commons/lang/StringUtils/split(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/plugins/xml/checks/XmlSchemaCheck/autodetectSchemaAndValidate()|",
      "|java+method:///org/sonar/plugins/xml/checks/XmlSchemaCheck/validate(java.lang.String%5B%5D)|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/utils/log/Logger/warn(java.lang.String,java.lang.Object)|",
      "|java+method:///org/sonar/plugins/xml/checks/XmlSchemaCheck$SchemaNotFoundException/toString()|",
      "|java+method:///org/apache/commons/lang/StringUtils/split(java.lang.String,java.lang.String)|",
      "|java+method:///org/sonar/plugins/xml/checks/XmlSchemaCheck/getWebSourceCode()|",
      "|java+method:///org/sonar/plugins/xml/checks/XmlSchemaCheck/autodetectSchemaAndValidate()|",
      "|java+method:///org/sonar/plugins/xml/checks/XmlSchemaCheck/validate(java.lang.String%5B%5D)|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.xml:sonar-xml-plugin:1.4.1",
    "coordinatesV2": "org.sonarsource.xml:sonar-xml-plugin:1.4.2.885",
    "caller": "|java+method:///org/sonar/plugins/xml/checks/XmlSchemaCheck/validate(java.lang.String%5B%5D)|",
    "called": "|java+method:///org/apache/commons/lang/StringUtils/join(java.lang.Object%5B%5D,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///org/sonar/plugins/xml/checks/XmlSchemaCheck/containsMessage(org.xml.sax.SAXException)|",
      "|java+method:///org/sonar/plugins/xml/checks/XmlSchemaCheck/createViolation(java.lang.Integer,java.lang.String)|",
      "|java+constructor:///org/sonar/plugins/xml/checks/XmlSchemaCheck$MessageHandler/XmlSchemaCheck$MessageHandler(org.sonar.plugins.xml.checks.XmlSchemaCheck,org.sonar.plugins.xml.checks.XmlSchemaCheck$1)|",
      "|java+method:///org/sonar/plugins/xml/checks/XmlSchemaCheck/createSchema(java.lang.String%5B%5D)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/xml/sax/SAXException/getMessage()|",
      "|java+constructor:///javax/xml/transform/stream/StreamSource/StreamSource(java.io.InputStream)|",
      "|java+method:///org/sonar/plugins/xml/checks/XmlSourceCode/createInputStream()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/sonar/plugins/xml/schemas/SchemaResolver/SchemaResolver()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/sonar/plugins/xml/checks/XmlSchemaCheck/getWebSourceCode()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/sonar/plugins/xml/checks/XmlSchemaCheck/setFeature(javax.xml.validation.Validator,java.lang.String,boolean)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///javax/xml/validation/Validator/validate(javax.xml.transform.Source)|",
      "|java+method:///javax/xml/validation/Validator/setResourceResolver(org.w3c.dom.ls.LSResourceResolver)|",
      "|java+method:///org/apache/commons/lang/StringUtils/join(java.lang.Object%5B%5D,java.lang.String)|",
      "|java+method:///javax/xml/validation/Validator/setErrorHandler(org.xml.sax.ErrorHandler)|",
      "|java+method:///javax/xml/validation/Schema/newValidator()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/utils/log/Logger/warn(java.lang.String,java.lang.Object)|",
      "|java+method:///org/sonar/plugins/xml/checks/XmlSchemaCheck/containsMessage(org.xml.sax.SAXException)|",
      "|java+method:///org/sonar/plugins/xml/checks/XmlSchemaCheck/createViolation(java.lang.Integer,java.lang.String)|",
      "|java+constructor:///org/sonar/plugins/xml/checks/XmlSchemaCheck$MessageHandler/XmlSchemaCheck$MessageHandler(org.sonar.plugins.xml.checks.XmlSchemaCheck,org.sonar.plugins.xml.checks.XmlSchemaCheck$1)|",
      "|java+method:///javax/xml/validation/Validator/validate(javax.xml.transform.Source)|",
      "|java+method:///org/sonar/plugins/xml/checks/XmlSchemaCheck/createSchema(java.lang.String%5B%5D)|",
      "|java+method:///java/io/IOException/getMessage()|",
      "|java+constructor:///javax/xml/transform/stream/StreamSource/StreamSource(java.io.InputStream)|",
      "|java+method:///org/sonar/plugins/xml/checks/XmlSourceCode/createInputStream()|",
      "|java+constructor:///org/sonar/plugins/xml/schemas/SchemaResolver/SchemaResolver()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/sonar/plugins/xml/checks/XmlSchemaCheck/getWebSourceCode()|",
      "|java+method:///org/sonar/plugins/xml/checks/XmlSchemaCheck/setFeature(javax.xml.validation.Validator,java.lang.String,boolean)|",
      "|java+method:///org/xml/sax/SAXException/getMessage()|",
      "|java+method:///org/sonar/api/utils/log/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///javax/xml/validation/Validator/setResourceResolver(org.w3c.dom.ls.LSResourceResolver)|",
      "|java+method:///org/apache/commons/lang/StringUtils/join(java.lang.Object%5B%5D,java.lang.String)|",
      "|java+method:///javax/xml/validation/Validator/setErrorHandler(org.xml.sax.ErrorHandler)|",
      "|java+method:///javax/xml/validation/Schema/newValidator()|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.xml:sonar-xml-plugin:1.4.1",
    "coordinatesV2": "org.sonarsource.xml:sonar-xml-plugin:1.4.2.885",
    "caller": "|java+method:///org/sonar/plugins/xml/checks/XmlSchemaCheck/createSchema(java.lang.String%5B%5D)|",
    "called": "|java+method:///org/apache/commons/lang/StringUtils/join(java.lang.Object%5B%5D,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///javax/xml/transform/stream/StreamSource/StreamSource(java.io.InputStream)|",
      "|java+method:///org/apache/commons/lang/StringUtils/join(java.lang.Object%5B%5D,java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///javax/xml/validation/SchemaFactory/setResourceResolver(org.w3c.dom.ls.LSResourceResolver)|",
      "|java+method:///javax/xml/validation/SchemaFactory/newSchema(javax.xml.transform.Source%5B%5D)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/plugins/xml/schemas/SchemaResolver/getBuiltinSchema(java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/sonar/plugins/xml/schemas/SchemaResolver/SchemaResolver()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///javax/xml/validation/SchemaFactory/newInstance(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/utils/log/Logger/warn(java.lang.String,java.lang.Object)|",
      "|java+constructor:///org/sonar/plugins/xml/checks/XmlSchemaCheck$SchemaNotFoundException/XmlSchemaCheck$SchemaNotFoundException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/xml/sax/SAXException/toString()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///javax/xml/transform/stream/StreamSource/StreamSource(java.io.InputStream)|",
      "|java+method:///org/apache/commons/lang/StringUtils/join(java.lang.Object%5B%5D,java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/plugins/xml/checks/XmlSchemaCheck/getWebSourceCode()|",
      "|java+method:///javax/xml/validation/SchemaFactory/setResourceResolver(org.w3c.dom.ls.LSResourceResolver)|",
      "|java+method:///javax/xml/validation/SchemaFactory/newSchema(javax.xml.transform.Source%5B%5D)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/sonar/plugins/xml/schemas/SchemaResolver/getBuiltinSchema(java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/sonar/plugins/xml/schemas/SchemaResolver/SchemaResolver()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///javax/xml/validation/SchemaFactory/newInstance(java.lang.String)|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.xml:sonar-xml-plugin:1.4.1",
    "coordinatesV2": "org.sonarsource.xml:sonar-xml-plugin:1.4.2.885",
    "caller": "|java+method:///org/sonar/plugins/xml/schemas/SchemaResolver/resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/apache/commons/lang/StringUtils/startsWithIgnoreCase(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/sonar/plugins/xml/schemas/SchemaResolver/createLSInput(java.io.InputStream)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/plugins/xml/schemas/SchemaResolver/getBuiltinDTDByFileName(java.lang.String)|",
      "|java+method:///org/sonar/plugins/xml/schemas/SchemaResolver/getBuiltinDTD(java.lang.String)|",
      "|java+method:///org/sonar/plugins/xml/schemas/SchemaResolver/getBuiltinSchemaByFileName(java.lang.String)|",
      "|java+method:///java/lang/String/contains(java.lang.CharSequence)|",
      "|java+method:///org/sonar/plugins/xml/schemas/SchemaResolver/getBuiltinSchemaByNamespace(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/commons/lang/StringUtils/startsWithIgnoreCase(java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/plugins/xml/schemas/SchemaResolver/createLSInput(java.io.InputStream)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/plugins/xml/schemas/SchemaResolver/getBuiltinDTDByFileName(java.lang.String)|",
      "|java+method:///org/sonar/plugins/xml/schemas/SchemaResolver/getBuiltinDTD(java.lang.String)|",
      "|java+method:///org/sonar/plugins/xml/schemas/SchemaResolver/getBuiltinSchemaByFileName(java.lang.String)|",
      "|java+method:///java/lang/String/contains(java.lang.CharSequence)|",
      "|java+method:///org/sonar/plugins/xml/schemas/SchemaResolver/getBuiltinSchemaByNamespace(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/commons/lang/StringUtils/startsWithIgnoreCase(java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.xml:sonar-xml-plugin:1.4.1",
    "coordinatesV2": "org.sonarsource.xml:sonar-xml-plugin:1.4.2.885",
    "caller": "|java+constructor:///org/sonar/plugins/xml/rules/XmlRulesDefinition/XmlRulesDefinition()|",
    "called": "|java+constructor:///com/google/gson/Gson/Gson()|",
    "v1Body": [
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+constructor:///com/google/gson/Gson/Gson()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "com.google.code.gson:gson:2.8.0",
    "change": "ADDED"
  }
]