[
  {
    "coordinatesV1": "com.madgag:play-git-hub_2.11:3.3",
    "coordinatesV2": "com.madgag:play-git-hub_2.11:3.4",
    "caller": "|java+method:///com/madgag/scalagithub/model/CanList$class/list(com.madgag.scalagithub.model.CanList,scala.collection.immutable.Map,com.madgag.scalagithub.GitHub,scala.concurrent.ExecutionContext)|",
    "called": "|java+method:///com/squareup/okhttp/HttpUrl$Builder/build()|",
    "v1Body": [
      "|java+constructor:///com/madgag/scalagithub/model/CanList$$anonfun$list$1/CanList$$anonfun$list$1(com.madgag.scalagithub.model.CanList,com.squareup.okhttp.HttpUrl$Builder)|",
      "|java+method:///com/madgag/scalagithub/model/CanList/link()|",
      "|java+method:///com/madgag/scalagithub/model/Link/listUrl()|",
      "|java+method:///play/api/libs/json/Reads$/traversableReads(scala.collection.generic.CanBuildFrom,play.api.libs.json.Reads)|",
      "|java+method:///com/madgag/scalagithub/GitHub/addAuthAndCaching(com.squareup.okhttp.Request$Builder)|",
      "|java+method:///com/squareup/okhttp/HttpUrl$Builder/build()|",
      "|java+method:///scala/collection/immutable/Map/foreach(scala.Function1)|",
      "|java+method:///com/madgag/scalagithub/GitHub/executeAndReadJson(com.squareup.okhttp.Request,play.api.libs.json.Reads,scala.concurrent.ExecutionContext)|",
      "|java+constructor:///com/squareup/okhttp/Request$Builder/Request$Builder()|",
      "|java+method:///com/squareup/okhttp/HttpUrl/newBuilder()|",
      "|java+method:///com/squareup/okhttp/Request$Builder/url(com.squareup.okhttp.HttpUrl)|",
      "|java+method:///com/squareup/okhttp/HttpUrl/parse(java.lang.String)|",
      "|java+method:///com/madgag/scalagithub/model/CanList/readsT()|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|"
    ],
    "v2Body": [
      "|java+method:///com/squareup/okhttp/HttpUrl/parse(java.lang.String)|",
      "|java+method:///com/madgag/scalagithub/model/CanList/readsT()|",
      "|java+constructor:///com/madgag/scalagithub/model/CanList$$anonfun$list$1/CanList$$anonfun$list$1(com.madgag.scalagithub.model.CanList,com.squareup.okhttp.HttpUrl$Builder)|",
      "|java+method:///com/madgag/scalagithub/model/CanList/link()|",
      "|java+method:///com/madgag/scalagithub/model/Link/listUrl()|",
      "|java+method:///com/madgag/scalagithub/GitHub/followAndEnumerate(com.squareup.okhttp.HttpUrl,play.api.libs.json.Reads,scala.concurrent.ExecutionContext)|",
      "|java+method:///com/squareup/okhttp/HttpUrl$Builder/build()|",
      "|java+method:///scala/collection/immutable/Map/foreach(scala.Function1)|",
      "|java+method:///com/squareup/okhttp/HttpUrl/newBuilder()|"
    ],
    "affectedLib": "com.squareup.okhttp:okhttp:2.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.madgag:play-git-hub_2.11:3.3",
    "coordinatesV2": "com.madgag:play-git-hub_2.11:3.4",
    "caller": "|java+method:///com/madgag/scalagithub/GitHub$$anonfun$executeAndReadJson$1/apply(com.squareup.okhttp.Response)|",
    "called": "|java+method:///com/squareup/okhttp/ResponseBody/byteStream()|",
    "v1Body": [
      "|java+method:///play/api/libs/json/JsSuccess/value()|",
      "|java+method:///com/squareup/okhttp/Request/httpUrl()|",
      "|java+method:///com/madgag/scalagithub/GitHub$/logger()|",
      "|java+method:///play/api/Logger/warn(scala.Function0)|",
      "|java+method:///com/squareup/okhttp/Response/body()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///com/squareup/okhttp/ResponseBody/byteStream()|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///play/api/libs/json/Json$/parse(java.io.InputStream)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+constructor:///com/madgag/scalagithub/GitHub$$anonfun$executeAndReadJson$1$$anonfun$apply$3/GitHub$$anonfun$executeAndReadJson$1$$anonfun$apply$3(com.madgag.scalagithub.GitHub$$anonfun$executeAndReadJson$1,play.api.libs.json.JsValue,java.lang.String)|",
      "|java+method:///com/squareup/okhttp/Request/method()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///com/madgag/scalagithub/ResponseMeta$/from(com.squareup.okhttp.Response)|",
      "|java+constructor:///com/madgag/scalagithub/GitHub$$anonfun$executeAndReadJson$1$$anonfun$apply$2/GitHub$$anonfun$executeAndReadJson$1$$anonfun$apply$2(com.madgag.scalagithub.GitHub$$anonfun$executeAndReadJson$1,play.api.libs.json.JsValue)|",
      "|java+method:///play/api/libs/json/JsValue/validate(play.api.libs.json.Reads)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///com/madgag/scalagithub/GitHubResponse/GitHubResponse(com.madgag.scalagithub.ResponseMeta,java.lang.Object)|",
      "|java+method:///play/api/Logger/debug(scala.Function0)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+constructor:///com/madgag/scalagithub/GitHub$$anonfun$executeAndReadJson$1$$anonfun$apply$1/GitHub$$anonfun$executeAndReadJson$1$$anonfun$apply$1(com.madgag.scalagithub.GitHub$$anonfun$executeAndReadJson$1,com.madgag.scalagithub.ResponseMeta,com.squareup.okhttp.Response)|"
    ],
    "v2Body": [
      "|java+method:///play/api/libs/json/JsSuccess/value()|",
      "|java+method:///com/squareup/okhttp/Request/httpUrl()|",
      "|java+constructor:///com/madgag/scalagithub/GitHub$$anonfun$executeAndReadJson$1$$anonfun$apply$6/GitHub$$anonfun$executeAndReadJson$1$$anonfun$apply$6(com.madgag.scalagithub.GitHub$$anonfun$executeAndReadJson$1,com.madgag.scalagithub.ResponseMeta,com.squareup.okhttp.Response)|",
      "|java+method:///com/madgag/scalagithub/GitHub$/logger()|",
      "|java+method:///play/api/libs/json/JsValue/validate(play.api.libs.json.Reads)|",
      "|java+method:///play/api/Logger/warn(scala.Function0)|",
      "|java+method:///com/squareup/okhttp/Response/body()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///com/squareup/okhttp/ResponseBody/byteStream()|",
      "|java+constructor:///com/madgag/scalagithub/GitHub$$anonfun$executeAndReadJson$1$$anonfun$apply$8/GitHub$$anonfun$executeAndReadJson$1$$anonfun$apply$8(com.madgag.scalagithub.GitHub$$anonfun$executeAndReadJson$1,play.api.libs.json.JsValue,java.lang.String)|",
      "|java+method:///play/api/libs/json/Json$/parse(java.io.InputStream)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///com/squareup/okhttp/Request/method()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///com/madgag/scalagithub/ResponseMeta$/from(com.squareup.okhttp.Response)|",
      "|java+constructor:///com/madgag/scalagithub/GitHub$$anonfun$executeAndReadJson$1$$anonfun$apply$7/GitHub$$anonfun$executeAndReadJson$1$$anonfun$apply$7(com.madgag.scalagithub.GitHub$$anonfun$executeAndReadJson$1,play.api.libs.json.JsValue)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///com/madgag/scalagithub/GitHubResponse/GitHubResponse(com.madgag.scalagithub.ResponseMeta,java.lang.Object)|",
      "|java+method:///play/api/Logger/debug(scala.Function0)|"
    ],
    "affectedLib": "com.squareup.okhttp:okhttp:2.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.madgag:play-git-hub_2.11:3.3",
    "coordinatesV2": "com.madgag:play-git-hub_2.11:3.4",
    "caller": "|java+method:///com/madgag/scalagithub/GitHub/listRepos(java.lang.String,java.lang.String,scala.concurrent.ExecutionContext)|",
    "called": "|java+method:///com/squareup/okhttp/HttpUrl$Builder/build()|",
    "v1Body": [
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///play/api/libs/json/Reads$/traversableReads(scala.collection.generic.CanBuildFrom,play.api.libs.json.Reads)|",
      "|java+method:///com/squareup/okhttp/HttpUrl$Builder/addPathSegment(java.lang.String)|",
      "|java+method:///com/madgag/scalagithub/GitHub/addAuthAndCaching(com.squareup.okhttp.Request$Builder)|",
      "|java+method:///com/squareup/okhttp/HttpUrl$Builder/build()|",
      "|java+method:///com/madgag/scalagithub/GitHub/executeAndReadJson(com.squareup.okhttp.Request,play.api.libs.json.Reads,scala.concurrent.ExecutionContext)|",
      "|java+method:///com/madgag/scalagithub/model/Repo$/readsRepo()|",
      "|java+constructor:///com/squareup/okhttp/Request$Builder/Request$Builder()|",
      "|java+method:///com/squareup/okhttp/Request$Builder/url(com.squareup.okhttp.HttpUrl)|",
      "|java+method:///com/madgag/scalagithub/GitHub/apiUrlBuilder()|"
    ],
    "v2Body": [
      "|java+method:///com/madgag/scalagithub/GitHub/apiUrlBuilder()|",
      "|java+method:///com/madgag/scalagithub/GitHub/followAndEnumerate(com.squareup.okhttp.HttpUrl,play.api.libs.json.Reads,scala.concurrent.ExecutionContext)|",
      "|java+method:///com/squareup/okhttp/HttpUrl$Builder/addPathSegment(java.lang.String)|",
      "|java+method:///com/squareup/okhttp/HttpUrl$Builder/build()|",
      "|java+method:///com/madgag/scalagithub/model/Repo$/readsRepo()|"
    ],
    "affectedLib": "com.squareup.okhttp:okhttp:2.7.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.madgag:play-git-hub_2.11:3.3",
    "coordinatesV2": "com.madgag:play-git-hub_2.11:3.4",
    "caller": "|java+method:///com/madgag/scalagithub/GitHub$$anonfun$executeAndReadJson$1/apply(com.squareup.okhttp.Response)|",
    "called": "|java+method:///play/api/Logger/debug(scala.Function0)|",
    "v1Body": [
      "|java+method:///play/api/libs/json/JsSuccess/value()|",
      "|java+method:///com/squareup/okhttp/Request/httpUrl()|",
      "|java+method:///com/madgag/scalagithub/GitHub$/logger()|",
      "|java+method:///play/api/Logger/warn(scala.Function0)|",
      "|java+method:///com/squareup/okhttp/Response/body()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///com/squareup/okhttp/ResponseBody/byteStream()|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///play/api/libs/json/Json$/parse(java.io.InputStream)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+constructor:///com/madgag/scalagithub/GitHub$$anonfun$executeAndReadJson$1$$anonfun$apply$3/GitHub$$anonfun$executeAndReadJson$1$$anonfun$apply$3(com.madgag.scalagithub.GitHub$$anonfun$executeAndReadJson$1,play.api.libs.json.JsValue,java.lang.String)|",
      "|java+method:///com/squareup/okhttp/Request/method()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///com/madgag/scalagithub/ResponseMeta$/from(com.squareup.okhttp.Response)|",
      "|java+constructor:///com/madgag/scalagithub/GitHub$$anonfun$executeAndReadJson$1$$anonfun$apply$2/GitHub$$anonfun$executeAndReadJson$1$$anonfun$apply$2(com.madgag.scalagithub.GitHub$$anonfun$executeAndReadJson$1,play.api.libs.json.JsValue)|",
      "|java+method:///play/api/libs/json/JsValue/validate(play.api.libs.json.Reads)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///com/madgag/scalagithub/GitHubResponse/GitHubResponse(com.madgag.scalagithub.ResponseMeta,java.lang.Object)|",
      "|java+method:///play/api/Logger/debug(scala.Function0)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+constructor:///com/madgag/scalagithub/GitHub$$anonfun$executeAndReadJson$1$$anonfun$apply$1/GitHub$$anonfun$executeAndReadJson$1$$anonfun$apply$1(com.madgag.scalagithub.GitHub$$anonfun$executeAndReadJson$1,com.madgag.scalagithub.ResponseMeta,com.squareup.okhttp.Response)|"
    ],
    "v2Body": [
      "|java+method:///play/api/libs/json/JsSuccess/value()|",
      "|java+method:///com/squareup/okhttp/Request/httpUrl()|",
      "|java+constructor:///com/madgag/scalagithub/GitHub$$anonfun$executeAndReadJson$1$$anonfun$apply$6/GitHub$$anonfun$executeAndReadJson$1$$anonfun$apply$6(com.madgag.scalagithub.GitHub$$anonfun$executeAndReadJson$1,com.madgag.scalagithub.ResponseMeta,com.squareup.okhttp.Response)|",
      "|java+method:///com/madgag/scalagithub/GitHub$/logger()|",
      "|java+method:///play/api/libs/json/JsValue/validate(play.api.libs.json.Reads)|",
      "|java+method:///play/api/Logger/warn(scala.Function0)|",
      "|java+method:///com/squareup/okhttp/Response/body()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///com/squareup/okhttp/ResponseBody/byteStream()|",
      "|java+constructor:///com/madgag/scalagithub/GitHub$$anonfun$executeAndReadJson$1$$anonfun$apply$8/GitHub$$anonfun$executeAndReadJson$1$$anonfun$apply$8(com.madgag.scalagithub.GitHub$$anonfun$executeAndReadJson$1,play.api.libs.json.JsValue,java.lang.String)|",
      "|java+method:///play/api/libs/json/Json$/parse(java.io.InputStream)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///com/squareup/okhttp/Request/method()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///com/madgag/scalagithub/ResponseMeta$/from(com.squareup.okhttp.Response)|",
      "|java+constructor:///com/madgag/scalagithub/GitHub$$anonfun$executeAndReadJson$1$$anonfun$apply$7/GitHub$$anonfun$executeAndReadJson$1$$anonfun$apply$7(com.madgag.scalagithub.GitHub$$anonfun$executeAndReadJson$1,play.api.libs.json.JsValue)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///com/madgag/scalagithub/GitHubResponse/GitHubResponse(com.madgag.scalagithub.ResponseMeta,java.lang.Object)|",
      "|java+method:///play/api/Logger/debug(scala.Function0)|"
    ],
    "affectedLib": "com.typesafe.play:play_2.11:2.4.6",
    "change": "UPDATED"
  }
]