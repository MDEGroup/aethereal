[
  {
    "coordinatesV1": "io.snappydata:snappydata-core_2.11:0.6.1",
    "coordinatesV2": "io.snappydata:snappydata-core_2.11:0.7",
    "caller": "|java+method:///org/apache/spark/sql/store/StoreUtils$/getPartitionsReplicatedTable(org.apache.spark.sql.SnappySession,com.gemstone.gemfire.internal.cache.CacheDistributionAdvisee)|",
    "called": "|java+method:///com/pivotal/gemfirexd/internal/engine/Misc/getGemFireCache()|",
    "v1Body": [
      "|java+constructor:///org/apache/spark/sql/store/StoreUtils$$anonfun$4/StoreUtils$$anonfun$4()|",
      "|java+method:///org/apache/spark/sql/SnappySession/sparkContext()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/CacheDistributionAdvisor/adviseInitializedReplicates()|",
      "|java+method:///scala/collection/Set$/canBuildFrom()|",
      "|java+method:///scala/Predef$/Set()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/InternalDistributedSystem/getDistributedMember()|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///scala/collection/immutable/Set$/empty()|",
      "|java+constructor:///org/apache/spark/sql/collection/MultiBucketExecutorPartition/MultiBucketExecutorPartition(int,scala.collection.immutable.Set,scala.collection.Seq)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/Misc/getGemFireCache()|",
      "|java+method:///org/apache/spark/sql/collection/Utils$/isLoner(org.apache.spark.SparkContext)|",
      "|java+method:///scala/collection/immutable/Set$/apply(scala.collection.Seq)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/CacheDistributionAdvisee/getCacheDistributionAdvisor()|",
      "|java+method:///scala/collection/SetLike/toSeq()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getDistributedSystem()|",
      "|java+method:///scala/collection/JavaConverters$/asScalaSetConverter(java.util.Set)|",
      "|java+method:///scala/collection/Set/collect(scala.PartialFunction,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/spark/sql/store/StoreUtils$$anonfun$4/StoreUtils$$anonfun$4()|",
      "|java+method:///org/apache/spark/sql/SnappySession/sparkContext()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/CacheDistributionAdvisor/adviseInitializedReplicates()|",
      "|java+method:///scala/collection/Set$/canBuildFrom()|",
      "|java+method:///scala/Predef$/Set()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/InternalDistributedSystem/getDistributedMember()|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+constructor:///org/apache/spark/sql/collection/MultiBucketExecutorPartition/MultiBucketExecutorPartition(int,scala.collection.mutable.ArrayBuffer,int,scala.collection.Seq)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/Misc/getGemFireCache()|",
      "|java+method:///org/apache/spark/sql/collection/Utils$/isLoner(org.apache.spark.SparkContext)|",
      "|java+method:///scala/collection/immutable/Set$/apply(scala.collection.Seq)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/CacheDistributionAdvisee/getCacheDistributionAdvisor()|",
      "|java+method:///scala/collection/SetLike/toSeq()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getDistributedSystem()|",
      "|java+method:///scala/collection/JavaConverters$/asScalaSetConverter(java.util.Set)|",
      "|java+method:///scala/collection/Set/collect(scala.PartialFunction,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "io.snappydata:snappydata-store-core:1.5.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappydata-core_2.11:0.6.1",
    "coordinatesV2": "io.snappydata:snappydata-core_2.11:0.7",
    "caller": "|java+method:///org/apache/spark/sql/execution/row/RowFormatScanRDD/getPartitions()|",
    "called": "|java+method:///com/pivotal/gemfirexd/internal/engine/Misc/getRegionForTable(java.lang.String,boolean)|",
    "v1Body": [
      "|java+method:///org/apache/spark/sql/sources/ConnectionProperties/connProps()|",
      "|java+method:///org/apache/spark/sql/sources/ConnectionProperties/dialect()|",
      "|java+method:///org/apache/spark/sql/execution/ConnectionPool$/getPoolConnection(java.lang.String,org.apache.spark.sql.jdbc.JdbcDialect,scala.collection.immutable.Map,java.util.Properties,boolean)|",
      "|java+method:///org/apache/spark/sql/SnappySession/sessionState()|",
      "|java+method:///org/apache/spark/sql/execution/columnar/ExternalStoreUtils$/lookupName(java.lang.String,java.lang.String)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/Misc/getRegionForTable(java.lang.String,boolean)|",
      "|java+method:///java/sql/Connection/getSchema()|",
      "|java+method:///java/sql/Connection/close()|",
      "|java+method:///org/apache/spark/sql/sources/ConnectionProperties/poolProps()|",
      "|java+method:///org/apache/spark/sql/sources/ConnectionProperties/hikariCP()|",
      "|java+method:///org/apache/spark/sql/internal/SnappySessionState/getTablePartitions(com.gemstone.gemfire.internal.cache.CacheDistributionAdvisee)|",
      "|java+method:///org/apache/spark/sql/execution/row/RowFormatScanRDD/session()|",
      "|java+method:///org/apache/spark/sql/internal/SnappySessionState/getTablePartitions(com.gemstone.gemfire.internal.cache.PartitionedRegion)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/spark/sql/sources/ConnectionProperties/connProps()|",
      "|java+method:///org/apache/spark/sql/sources/ConnectionProperties/dialect()|",
      "|java+method:///org/apache/spark/sql/SnappySession/sessionState()|",
      "|java+method:///org/apache/spark/sql/execution/columnar/ExternalStoreUtils$/lookupName(java.lang.String,java.lang.String)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/Misc/getRegionForTable(java.lang.String,boolean)|",
      "|java+method:///org/apache/spark/sql/execution/row/RowFormatScanRDD/connProperties()|",
      "|java+method:///java/sql/Connection/getSchema()|",
      "|java+method:///java/sql/Connection/close()|",
      "|java+method:///org/apache/spark/sql/sources/ConnectionProperties/poolProps()|",
      "|java+method:///org/apache/spark/sql/sources/ConnectionProperties/hikariCP()|",
      "|java+method:///org/apache/spark/sql/internal/SnappySessionState/getTablePartitions(com.gemstone.gemfire.internal.cache.CacheDistributionAdvisee)|",
      "|java+method:///org/apache/spark/sql/execution/row/RowFormatScanRDD/session()|",
      "|java+method:///org/apache/spark/sql/internal/SnappySessionState/getTablePartitions(com.gemstone.gemfire.internal.cache.PartitionedRegion)|",
      "|java+method:///org/apache/spark/sql/execution/row/RowFormatScanRDD/tableName()|",
      "|java+method:///org/apache/spark/sql/execution/row/RowFormatScanRDD/parts()|",
      "|java+method:///org/apache/spark/sql/execution/ConnectionPool$/getPoolConnection(java.lang.String,org.apache.spark.sql.jdbc.JdbcDialect,scala.collection.immutable.Map,java.util.Properties,boolean)|"
    ],
    "affectedLib": "io.snappydata:snappydata-store-core:1.5.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappydata-core_2.11:0.6.1",
    "coordinatesV2": "io.snappydata:snappydata-core_2.11:0.7",
    "caller": "|java+method:///org/apache/spark/sql/execution/CompactExecRowToMutableRow/createInternalRow(com.pivotal.gemfirexd.internal.engine.store.AbstractCompactExecRow,org.apache.spark.sql.catalyst.expressions.SpecificMutableRow)|",
    "called": "|java+method:///com/pivotal/gemfirexd/internal/engine/store/AbstractCompactExecRow/getAsDouble(int,com.pivotal.gemfirexd.internal.engine.store.ResultWasNull)|",
    "v1Body": [
      "|java+method:///org/apache/spark/sql/store/StoreUtils$/LONG_TYPE()|",
      "|java+method:///scala/Predef$/byteArrayOps(byte%5B%5D)|",
      "|java+method:///org/apache/spark/unsafe/types/UTF8String/fromString(java.lang.String)|",
      "|java+constructor:///org/apache/spark/sql/catalyst/expressions/UnsafeRow/UnsafeRow(int)|",
      "|java+method:///org/apache/spark/sql/store/StoreUtils$/STRUCT_TYPE()|",
      "|java+method:///org/apache/spark/sql/store/StoreUtils$/ARRAY_TYPE()|",
      "|java+method:///org/apache/spark/sql/execution/CompactExecRowToMutableRow/wasNull()|",
      "|java+method:///org/apache/spark/sql/store/StoreUtils$/DECIMAL_TYPE()|",
      "|java+method:///org/apache/spark/sql/store/StoreUtils$/INT_TYPE()|",
      "|java+method:///org/apache/spark/sql/catalyst/expressions/UnsafeArrayData/pointTo(java.lang.Object,long,int)|",
      "|java+method:///org/apache/spark/sql/types/Decimal$/apply(java.math.BigDecimal,int,int)|",
      "|java+method:///org/apache/spark/sql/catalyst/expressions/SpecificMutableRow/update(int,java.lang.Object)|",
      "|java+method:///org/apache/spark/sql/store/StoreUtils$/BOOLEAN_TYPE()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/store/AbstractCompactExecRow/getAsString(int,com.pivotal.gemfirexd.internal.engine.store.ResultWasNull)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/store/AbstractCompactExecRow/getAsDouble(int,com.pivotal.gemfirexd.internal.engine.store.ResultWasNull)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/store/AbstractCompactExecRow/getAsBigDecimal(int,com.pivotal.gemfirexd.internal.engine.store.ResultWasNull)|",
      "|java+method:///scala/collection/mutable/ArrayOps/size()|",
      "|java+method:///org/apache/spark/sql/store/StoreUtils$/BINARY_TYPE()|",
      "|java+method:///org/apache/spark/sql/types/StructType/length()|",
      "|java+method:///org/apache/spark/sql/types/DecimalType/scale()|",
      "|java+method:///org/apache/spark/sql/execution/CompactExecRowToMutableRow/defaultCal()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/store/AbstractCompactExecRow/getAsShort(int,com.pivotal.gemfirexd.internal.engine.store.ResultWasNull)|",
      "|java+method:///org/apache/spark/sql/catalyst/expressions/UnsafeRow/pointTo(java.lang.Object,long,int)|",
      "|java+method:///org/apache/spark/sql/catalyst/expressions/SpecificMutableRow/setInt(int,int)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/store/AbstractCompactExecRow/getAsFloat(int,com.pivotal.gemfirexd.internal.engine.store.ResultWasNull)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/store/AbstractCompactExecRow/getAsByte(int,com.pivotal.gemfirexd.internal.engine.store.ResultWasNull)|",
      "|java+method:///org/apache/spark/sql/types/StructField/dataType()|",
      "|java+method:///org/apache/spark/sql/catalyst/expressions/SpecificMutableRow/setNullAt(int)|",
      "|java+method:///org/apache/spark/sql/catalyst/expressions/SpecificMutableRow/setShort(int,short)|",
      "|java+method:///org/apache/spark/sql/catalyst/expressions/SpecificMutableRow/setFloat(int,float)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/spark/sql/store/StoreUtils$/FLOAT_TYPE()|",
      "|java+method:///org/apache/spark/sql/store/StoreUtils$/MAP_TYPE()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/store/AbstractCompactExecRow/getAsTimestamp(int,java.util.Calendar,com.pivotal.gemfirexd.internal.engine.store.ResultWasNull)|",
      "|java+method:///org/apache/spark/sql/store/StoreUtils$/SHORT_TYPE()|",
      "|java+method:///org/apache/spark/sql/store/StoreUtils$/BINARY_LONG_TYPE()|",
      "|java+constructor:///org/apache/spark/sql/catalyst/expressions/UnsafeArrayData/UnsafeArrayData()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/store/AbstractCompactExecRow/getAsInt(int,com.pivotal.gemfirexd.internal.engine.store.ResultWasNull)|",
      "|java+method:///org/apache/spark/sql/store/StoreUtils$/STRING_TYPE()|",
      "|java+method:///org/apache/spark/sql/store/StoreUtils$/DOUBLE_TYPE()|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///org/apache/spark/sql/store/StoreUtils$/TIMESTAMP_TYPE()|",
      "|java+method:///org/apache/spark/sql/catalyst/expressions/SpecificMutableRow/setBoolean(int,boolean)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/store/AbstractCompactExecRow/getAsDate(int,java.util.Calendar,com.pivotal.gemfirexd.internal.engine.store.ResultWasNull)|",
      "|java+method:///org/apache/spark/sql/execution/CompactExecRowToMutableRow/fieldTypes()|",
      "|java+method:///org/apache/spark/sql/store/StoreUtils$/DATE_TYPE()|",
      "|java+constructor:///org/apache/spark/sql/catalyst/expressions/UnsafeMapData/UnsafeMapData()|",
      "|java+method:///org/apache/spark/sql/types/StructType/fields()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/store/AbstractCompactExecRow/getAsBytes(int,com.pivotal.gemfirexd.internal.engine.store.ResultWasNull)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/store/AbstractCompactExecRow/getAsLong(int,com.pivotal.gemfirexd.internal.engine.store.ResultWasNull)|",
      "|java+method:///org/apache/spark/sql/types/DecimalType/precision()|",
      "|java+method:///org/apache/spark/sql/execution/CompactExecRowToMutableRow/schema()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///org/apache/spark/sql/catalyst/expressions/SpecificMutableRow/setDouble(int,double)|",
      "|java+method:///org/apache/spark/sql/catalyst/expressions/SpecificMutableRow/setByte(int,byte)|",
      "|java+method:///org/apache/spark/sql/catalyst/expressions/UnsafeMapData/pointTo(java.lang.Object,long,int)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/store/AbstractCompactExecRow/getAsBoolean(int,com.pivotal.gemfirexd.internal.engine.store.ResultWasNull)|",
      "|java+method:///org/apache/spark/sql/catalyst/util/DateTimeUtils$/fromJavaDate(java.sql.Date)|",
      "|java+method:///org/apache/spark/sql/catalyst/expressions/SpecificMutableRow/setLong(int,long)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/apache/spark/sql/store/StoreUtils$/BYTE_TYPE()|",
      "|java+method:///org/apache/spark/sql/catalyst/util/DateTimeUtils$/fromJavaTimestamp(java.sql.Timestamp)|",
      "|java+method:///org/apache/spark/sql/execution/CompactExecRowToMutableRow/wasNull_$eq(boolean)|",
      "|java+method:///java/util/GregorianCalendar/clear()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/spark/sql/store/StoreUtils$/LONG_TYPE()|",
      "|java+method:///scala/Predef$/byteArrayOps(byte%5B%5D)|",
      "|java+method:///org/apache/spark/unsafe/types/UTF8String/fromString(java.lang.String)|",
      "|java+constructor:///org/apache/spark/sql/catalyst/expressions/UnsafeRow/UnsafeRow(int)|",
      "|java+method:///org/apache/spark/sql/store/StoreUtils$/STRUCT_TYPE()|",
      "|java+method:///org/apache/spark/sql/store/StoreUtils$/ARRAY_TYPE()|",
      "|java+method:///org/apache/spark/sql/execution/CompactExecRowToMutableRow/wasNull()|",
      "|java+method:///org/apache/spark/sql/store/StoreUtils$/DECIMAL_TYPE()|",
      "|java+method:///org/apache/spark/sql/store/StoreUtils$/INT_TYPE()|",
      "|java+method:///org/apache/spark/sql/execution/CompactExecRowToMutableRow/wasNull_$eq(boolean)|",
      "|java+method:///org/apache/spark/sql/types/Decimal$/apply(java.math.BigDecimal,int,int)|",
      "|java+method:///org/apache/spark/sql/catalyst/expressions/SpecificMutableRow/update(int,java.lang.Object)|",
      "|java+method:///org/apache/spark/sql/store/StoreUtils$/BOOLEAN_TYPE()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/store/AbstractCompactExecRow/getAsString(int,com.pivotal.gemfirexd.internal.engine.store.ResultWasNull)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/store/AbstractCompactExecRow/getAsDouble(int,com.pivotal.gemfirexd.internal.engine.store.ResultWasNull)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/store/AbstractCompactExecRow/getAsBigDecimal(int,com.pivotal.gemfirexd.internal.engine.store.ResultWasNull)|",
      "|java+method:///scala/collection/mutable/ArrayOps/size()|",
      "|java+method:///org/apache/spark/sql/store/StoreUtils$/BINARY_TYPE()|",
      "|java+method:///org/apache/spark/sql/types/StructType/length()|",
      "|java+method:///org/apache/spark/sql/types/DecimalType/scale()|",
      "|java+method:///org/apache/spark/sql/execution/CompactExecRowToMutableRow/defaultCal()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/store/AbstractCompactExecRow/getAsShort(int,com.pivotal.gemfirexd.internal.engine.store.ResultWasNull)|",
      "|java+method:///org/apache/spark/sql/catalyst/expressions/UnsafeRow/pointTo(java.lang.Object,long,int)|",
      "|java+method:///org/apache/spark/sql/catalyst/expressions/SpecificMutableRow/setInt(int,int)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/store/AbstractCompactExecRow/getAsFloat(int,com.pivotal.gemfirexd.internal.engine.store.ResultWasNull)|",
      "|java+method:///org/apache/spark/sql/execution/CompactExecRowToMutableRow/defaultTZ()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/store/AbstractCompactExecRow/getAsByte(int,com.pivotal.gemfirexd.internal.engine.store.ResultWasNull)|",
      "|java+method:///org/apache/spark/sql/types/StructField/dataType()|",
      "|java+method:///org/apache/spark/sql/catalyst/expressions/SpecificMutableRow/setNullAt(int)|",
      "|java+method:///org/apache/spark/sql/catalyst/expressions/SpecificMutableRow/setShort(int,short)|",
      "|java+method:///org/apache/spark/sql/catalyst/expressions/SpecificMutableRow/setFloat(int,float)|",
      "|java+method:///org/apache/spark/sql/store/StoreUtils$/SHORT_TYPE()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/spark/sql/store/StoreUtils$/FLOAT_TYPE()|",
      "|java+method:///org/apache/spark/sql/store/StoreUtils$/MAP_TYPE()|",
      "|java+method:///org/apache/spark/sql/store/StoreUtils$/BINARY_LONG_TYPE()|",
      "|java+constructor:///org/apache/spark/sql/catalyst/expressions/UnsafeArrayData/UnsafeArrayData()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/store/AbstractCompactExecRow/getAsInt(int,com.pivotal.gemfirexd.internal.engine.store.ResultWasNull)|",
      "|java+method:///org/apache/spark/sql/store/StoreUtils$/STRING_TYPE()|",
      "|java+method:///org/apache/spark/sql/store/StoreUtils$/DOUBLE_TYPE()|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///org/apache/spark/sql/store/StoreUtils$/TIMESTAMP_TYPE()|",
      "|java+method:///org/apache/spark/sql/catalyst/expressions/SpecificMutableRow/setBoolean(int,boolean)|",
      "|java+method:///org/apache/spark/sql/execution/CompactExecRowToMutableRow/fieldTypes()|",
      "|java+method:///org/apache/spark/sql/store/StoreUtils$/DATE_TYPE()|",
      "|java+constructor:///org/apache/spark/sql/catalyst/expressions/UnsafeMapData/UnsafeMapData()|",
      "|java+method:///org/apache/spark/sql/types/StructType/fields()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/store/AbstractCompactExecRow/getAsBytes(int,com.pivotal.gemfirexd.internal.engine.store.ResultWasNull)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/store/AbstractCompactExecRow/getAsLong(int,com.pivotal.gemfirexd.internal.engine.store.ResultWasNull)|",
      "|java+method:///org/apache/spark/sql/collection/Utils$/millisToDays(long,java.util.TimeZone)|",
      "|java+method:///org/apache/spark/sql/types/DecimalType/precision()|",
      "|java+method:///org/apache/spark/sql/execution/CompactExecRowToMutableRow/schema()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///org/apache/spark/sql/catalyst/expressions/SpecificMutableRow/setDouble(int,double)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/store/AbstractCompactExecRow/getAsDateMillis(int,java.util.Calendar,com.pivotal.gemfirexd.internal.engine.store.ResultWasNull)|",
      "|java+method:///org/apache/spark/sql/catalyst/expressions/SpecificMutableRow/setByte(int,byte)|",
      "|java+method:///org/apache/spark/sql/catalyst/expressions/UnsafeMapData/pointTo(java.lang.Object,long,int)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/store/AbstractCompactExecRow/getAsBoolean(int,com.pivotal.gemfirexd.internal.engine.store.ResultWasNull)|",
      "|java+method:///org/apache/spark/sql/catalyst/expressions/SpecificMutableRow/setLong(int,long)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/apache/spark/sql/store/StoreUtils$/BYTE_TYPE()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/store/AbstractCompactExecRow/getAsTimestampMicros(int,java.util.Calendar,com.pivotal.gemfirexd.internal.engine.store.ResultWasNull)|",
      "|java+method:///org/apache/spark/sql/catalyst/expressions/UnsafeArrayData/pointTo(java.lang.Object,long,int)|",
      "|java+method:///java/util/GregorianCalendar/clear()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|"
    ],
    "affectedLib": "io.snappydata:snappydata-store-core:1.5.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappydata-core_2.11:0.6.1",
    "coordinatesV2": "io.snappydata:snappydata-core_2.11:0.7",
    "caller": "|java+method:///io/snappydata/SnappyTableStatsProviderService$/start(org.apache.spark.SparkContext)|",
    "called": "|java+method:///com/pivotal/gemfirexd/internal/engine/Misc/getGemFireCache()|",
    "v1Body": [
      "|java+method:///org/apache/spark/SparkContext/getConf()|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///io/snappydata/SnappyTableStatsProviderService$$anonfun$1/SnappyTableStatsProviderService$$anonfun$1()|",
      "|java+method:///org/apache/spark/SparkConf/getOption(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/SystemTimer/schedule(com.gemstone.gemfire.internal.SystemTimer$SystemTimerTask,long,long)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/Misc/getGemFireCache()|",
      "|java+method:///scala/collection/immutable/StringOps/toLong()|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getCCPTimer()|",
      "|java+constructor:///io/snappydata/SnappyTableStatsProviderService$$anon$1/SnappyTableStatsProviderService$$anon$1(org.apache.spark.SparkContext)|"
    ],
    "v2Body": [
      "|java+method:///io/snappydata/Constant$/SPARK_SNAPPY_PREFIX()|",
      "|java+method:///org/apache/spark/SparkContext/getConf()|",
      "|java+method:///io/snappydata/Constant$/DEFAULT_CALC_TABLE_SIZE_SERVICE_INTERVAL()|",
      "|java+method:///io/snappydata/SnappyTableStatsProviderService$/io$snappydata$SnappyTableStatsProviderService$$doRun_$eq(boolean)|",
      "|java+method:///org/apache/spark/SparkConf/getLong(java.lang.String,long)|",
      "|java+method:///com/gemstone/gemfire/internal/SystemTimer/schedule(com.gemstone.gemfire.internal.SystemTimer$SystemTimerTask,long,long)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/Misc/getGemFireCache()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getCCPTimer()|",
      "|java+constructor:///io/snappydata/SnappyTableStatsProviderService$$anon$1/SnappyTableStatsProviderService$$anon$1()|"
    ],
    "affectedLib": "io.snappydata:snappydata-store-core:1.5.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappydata-core_2.11:0.6.1",
    "coordinatesV2": "io.snappydata:snappydata-core_2.11:0.7",
    "caller": "|java+method:///org/apache/spark/sql/execution/columnar/impl/JDBCSourceAsColumnarStore/getPartitionID(java.lang.String,int)|",
    "called": "|java+method:///com/pivotal/gemfirexd/internal/engine/Misc/getRegionForTable(java.lang.String,boolean)|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegionDataStore/getAllLocalPrimaryBucketIdArray()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/apache/spark/sql/execution/columnar/impl/JDBCSourceAsColumnarStore/rand()|",
      "|java+method:///scala/util/Random/nextInt(int)|",
      "|java+method:///org/apache/spark/sql/execution/columnar/impl/JDBCSourceAsColumnarStore/getConnection(java.lang.String,boolean)|",
      "|java+method:///com/gemstone/gnu/trove/TIntArrayList/size()|",
      "|java+method:///org/apache/spark/sql/execution/columnar/ExternalStoreUtils$/lookupName(java.lang.String,java.lang.String)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/Misc/getRegionForTable(java.lang.String,boolean)|",
      "|java+method:///org/apache/spark/sql/execution/columnar/ConnectionType$/Embedded()|",
      "|java+method:///java/sql/Connection/getSchema()|",
      "|java+method:///java/sql/Connection/close()|",
      "|java+method:///com/gemstone/gnu/trove/TIntArrayList/getQuick(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getDataStore()|",
      "|java+method:///org/apache/spark/sql/execution/columnar/impl/JDBCSourceAsColumnarStore/connectionType()|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegionDataStore/getAllLocalPrimaryBucketIdArray()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/apache/spark/sql/execution/columnar/impl/JDBCSourceAsColumnarStore/rand()|",
      "|java+method:///scala/util/Random/nextInt(int)|",
      "|java+method:///org/apache/spark/sql/execution/columnar/impl/JDBCSourceAsColumnarStore/getConnection(java.lang.String,boolean)|",
      "|java+method:///com/gemstone/gnu/trove/TIntArrayList/size()|",
      "|java+method:///org/apache/spark/sql/execution/columnar/ExternalStoreUtils$/lookupName(java.lang.String,java.lang.String)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/Misc/getRegionForTable(java.lang.String,boolean)|",
      "|java+method:///org/apache/spark/sql/execution/columnar/ConnectionType$/Embedded()|",
      "|java+method:///java/sql/Connection/getSchema()|",
      "|java+method:///java/sql/Connection/close()|",
      "|java+method:///com/gemstone/gnu/trove/TIntArrayList/getQuick(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getDataStore()|",
      "|java+method:///org/apache/spark/sql/execution/columnar/impl/JDBCSourceAsColumnarStore/connectionType()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getTotalNumberOfBuckets()|"
    ],
    "affectedLib": "io.snappydata:snappydata-store-core:1.5.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappydata-core_2.11:0.6.1",
    "coordinatesV2": "io.snappydata:snappydata-core_2.11:0.7",
    "caller": "|java+method:///org/apache/spark/sql/execution/row/RowFormatScanRDD/compute(org.apache.spark.Partition,org.apache.spark.TaskContext)|",
    "called": "|java+method:///com/pivotal/gemfirexd/internal/engine/distributed/utils/GemFireXDUtils/getGemFireContainer(java.lang.String,boolean)|",
    "v1Body": [
      "|java+constructor:///org/apache/spark/sql/execution/row/CompactExecRowIteratorOnScan/CompactExecRowIteratorOnScan(com.pivotal.gemfirexd.internal.engine.store.GemFireContainer,scala.collection.Set)|",
      "|java+method:///org/apache/spark/sql/execution/row/RowFormatScanRDD/filterWhereClause()|",
      "|java+method:///scala/Predef$/Set()|",
      "|java+method:///scala/Tuple3/_1()|",
      "|java+method:///scala/Tuple3/_2()|",
      "|java+method:///scala/Tuple3/_3()|",
      "|java+constructor:///org/apache/spark/sql/execution/row/ResultSetTraversal/ResultSetTraversal(java.sql.Connection,java.sql.Statement,java.sql.ResultSet,org.apache.spark.TaskContext)|",
      "|java+method:///org/apache/spark/sql/execution/row/RowFormatScanRDD/useResultSet()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/distributed/utils/GemFireXDUtils/getGemFireContainer(java.lang.String,boolean)|",
      "|java+method:///scala/Predef$/wrapIntArray(int%5B%5D)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///org/apache/spark/sql/execution/row/CompactExecRowIteratorOnRS/CompactExecRowIteratorOnRS(java.sql.Connection,java.sql.Statement,com.pivotal.gemfirexd.internal.impl.jdbc.EmbedResultSet,org.apache.spark.TaskContext)|",
      "|java+method:///org/apache/spark/Partition/index()|",
      "|java+method:///org/apache/spark/sql/execution/row/RowFormatScanRDD/pushProjections()|",
      "|java+method:///org/apache/spark/sql/collection/MultiBucketExecutorPartition/buckets()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///scala/Tuple3/Tuple3(java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/spark/sql/execution/row/RowFormatScanRDD/computeResultSet(org.apache.spark.Partition)|",
      "|java+method:///scala/collection/immutable/Set$/apply(scala.collection.Seq)|"
    ],
    "v2Body": [
      "|java+method:///scala/Tuple3/_1()|",
      "|java+method:///scala/Tuple3/_2()|",
      "|java+method:///scala/Tuple3/_3()|",
      "|java+constructor:///org/apache/spark/sql/execution/row/ResultSetTraversal/ResultSetTraversal(java.sql.Connection,java.sql.Statement,java.sql.ResultSet,org.apache.spark.TaskContext)|",
      "|java+method:///org/apache/spark/sql/execution/row/RowFormatScanRDD/useResultSet()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/distributed/utils/GemFireXDUtils/getGemFireContainer(java.lang.String,boolean)|",
      "|java+method:///org/apache/spark/sql/execution/row/RowFormatScanRDD/computeResultSet(org.apache.spark.Partition)|",
      "|java+method:///org/apache/spark/sql/execution/row/RowFormatScanRDD/filterWhereClause()|",
      "|java+method:///java/lang/reflect/Field/get(java.lang.Object)|",
      "|java+method:///org/apache/spark/sql/execution/row/RowFormatScanRDD/isPartitioned()|",
      "|java+method:///org/apache/spark/sql/execution/row/RowFormatScanRDD/resultSetField()|",
      "|java+method:///org/apache/spark/sql/execution/row/RowFormatScanRDD/pushProjections()|",
      "|java+method:///org/apache/spark/sql/collection/MultiBucketExecutorPartition/buckets()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///scala/Tuple3/Tuple3(java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/spark/sql/execution/row/CompactExecRowIteratorOnScan/CompactExecRowIteratorOnScan(com.pivotal.gemfirexd.internal.engine.store.GemFireContainer,java.util.Set)|",
      "|java+method:///java/util/Collections/singleton(java.lang.Object)|",
      "|java+constructor:///org/apache/spark/sql/execution/row/CompactExecRowIteratorOnRS/CompactExecRowIteratorOnRS(java.sql.Connection,java.sql.Statement,com.pivotal.gemfirexd.internal.impl.jdbc.EmbedResultSet,org.apache.spark.TaskContext)|",
      "|java+method:///org/apache/spark/sql/execution/row/RowFormatScanRDD/tableName()|",
      "|java+method:///org/apache/spark/Partition/index()|"
    ],
    "affectedLib": "io.snappydata:snappydata-store-core:1.5.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappydata-core_2.11:0.6.1",
    "coordinatesV2": "io.snappydata:snappydata-core_2.11:0.7",
    "caller": "|java+method:///org/apache/spark/sql/execution/columnar/impl/StoreCallbacksImpl$/createCachedBatch(com.gemstone.gemfire.internal.cache.BucketRegion,java.util.UUID,int)|",
    "called": "|java+method:///com/pivotal/gemfirexd/internal/impl/jdbc/EmbedConnection/getLanguageConnectionContext()|",
    "v1Body": [
      "|java+method:///scala/collection/concurrent/TrieMap/get(java.lang.Object)|",
      "|java+method:///com/pivotal/gemfirexd/internal/iapi/store/access/TransactionController/openScan(long,boolean,int,int,int,com.pivotal.gemfirexd.internal.iapi.services.io.FormatableBitSet,com.pivotal.gemfirexd.internal.iapi.types.DataValueDescriptor%5B%5D,int,com.pivotal.gemfirexd.internal.iapi.store.access.Qualifier%5B%5D%5B%5D,com.pivotal.gemfirexd.internal.iapi.types.DataValueDescriptor%5B%5D,int,com.pivotal.gemfirexd.internal.iapi.sql.Activation)|",
      "|java+method:///scala/Option/isDefined()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/store/GemFireContainer/getId()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/distributed/utils/GemFireXDUtils/getTSSConnection(boolean,boolean,boolean)|",
      "|java+method:///org/apache/spark/sql/execution/columnar/impl/StoreCallbacksImpl$/cachedBatchSize()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/store/GemFireContainer/newTemplateRow()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/Misc/getLanguageConnectionContext()|",
      "|java+method:///com/pivotal/gemfirexd/internal/impl/jdbc/EmbedConnection/getLanguageConnectionContext()|",
      "|java+constructor:///org/apache/spark/sql/execution/columnar/CachedBatchCreator/CachedBatchCreator(java.lang.String,java.lang.String,org.apache.spark.sql.types.StructType,org.apache.spark.sql.execution.columnar.ExternalStore,int,boolean)|",
      "|java+method:///com/pivotal/gemfirexd/internal/impl/jdbc/TransactionResourceImpl/setupContextStack()|",
      "|java+method:///com/pivotal/gemfirexd/internal/iapi/store/raw/ContainerKey/getContainerId()|",
      "|java+method:///com/pivotal/gemfirexd/internal/iapi/sql/conn/LanguageConnectionContext/getTransactionExecute()|",
      "|java+method:///com/gemstone/gemfire/CancelCriterion/checkCancelInProgress(java.lang.Throwable)|",
      "|java+method:///org/apache/spark/sql/execution/columnar/CachedBatchCreator/createAndStoreBatch(com.pivotal.gemfirexd.internal.iapi.store.access.ScanController,com.pivotal.gemfirexd.internal.engine.store.AbstractCompactExecRow,java.util.UUID,int)|",
      "|java+method:///java/util/Collections/emptySet()|",
      "|java+method:///com/pivotal/gemfirexd/internal/iapi/sql/conn/LanguageConnectionContext/setExecuteLocally(java.util.Set,com.gemstone.gemfire.cache.Region,boolean,com.gemstone.gemfire.internal.cache.Checkpoint)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/getPartitionedRegion()|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///com/pivotal/gemfirexd/internal/impl/jdbc/EmbedConnection/getTR()|",
      "|java+method:///org/apache/spark/sql/execution/columnar/impl/StoreCallbacksImpl$/stores()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/store/GemFireContainer/getQualifiedTableName()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getUserAttribute()|",
      "|java+method:///org/apache/spark/sql/execution/columnar/impl/ColumnFormatRelation$/cachedBatchTableName(java.lang.String)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/Misc/getGemFireCache()|",
      "|java+method:///com/pivotal/gemfirexd/internal/impl/jdbc/TransactionResourceImpl/restoreContextStack()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getCancelCriterion()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///scala/Predef$/int2Integer(int)|",
      "|java+method:///java/util/Collections/singleton(java.lang.Object)|",
      "|java+method:///org/apache/spark/sql/execution/columnar/impl/StoreCallbacksImpl$/useCompression()|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/Option/get()|"
    ],
    "v2Body": [
      "|java+method:///com/pivotal/gemfirexd/internal/impl/jdbc/EmbedConnection/getLanguageConnectionContext()|",
      "|java+method:///org/apache/spark/sql/execution/columnar/impl/StoreCallbacksImpl$/executorCatalog()|",
      "|java+method:///scala/collection/concurrent/TrieMap/get(java.lang.Object)|",
      "|java+method:///com/pivotal/gemfirexd/internal/iapi/store/access/TransactionController/openScan(long,boolean,int,int,int,com.pivotal.gemfirexd.internal.iapi.services.io.FormatableBitSet,com.pivotal.gemfirexd.internal.iapi.types.DataValueDescriptor%5B%5D,int,com.pivotal.gemfirexd.internal.iapi.store.access.Qualifier%5B%5D%5B%5D,com.pivotal.gemfirexd.internal.iapi.types.DataValueDescriptor%5B%5D,int,com.pivotal.gemfirexd.internal.iapi.sql.Activation)|",
      "|java+method:///scala/collection/Seq$/empty()|",
      "|java+method:///scala/Option/isDefined()|",
      "|java+method:///scala/collection/mutable/ArrayBuffer/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///com/pivotal/gemfirexd/internal/impl/jdbc/EmbedConnection/getTR()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/store/GemFireContainer/getId()|",
      "|java+method:///org/apache/spark/sql/execution/columnar/impl/StoreCallbacksImpl$ExecutorCatalogEntry/schema()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/distributed/utils/GemFireXDUtils/getTSSConnection(boolean,boolean,boolean)|",
      "|java+method:///org/apache/spark/sql/execution/columnar/impl/StoreCallbacksImpl$/cachedBatchSize()|",
      "|java+method:///scala/Predef$/int2Integer(int)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/store/GemFireContainer/newTemplateRow()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/Misc/getLanguageConnectionContext()|",
      "|java+method:///org/apache/spark/sql/execution/columnar/impl/StoreCallbacksImpl$ExecutorCatalogEntry/externalStore()|",
      "|java+method:///scala/Option/get()|",
      "|java+method:///scala/collection/mutable/ArrayBuffer/nonEmpty()|",
      "|java+method:///org/apache/spark/sql/execution/columnar/impl/StoreCallbacksImpl$ExecutorCatalogEntry/dependents()|",
      "|java+method:///com/pivotal/gemfirexd/internal/impl/jdbc/TransactionResourceImpl/setupContextStack()|",
      "|java+method:///com/pivotal/gemfirexd/internal/iapi/store/raw/ContainerKey/getContainerId()|",
      "|java+method:///com/pivotal/gemfirexd/internal/iapi/sql/conn/LanguageConnectionContext/getTransactionExecute()|",
      "|java+method:///com/gemstone/gemfire/CancelCriterion/checkCancelInProgress(java.lang.Throwable)|",
      "|java+method:///org/apache/spark/sql/execution/columnar/CachedBatchCreator/createAndStoreBatch(com.pivotal.gemfirexd.internal.iapi.store.access.ScanController,com.pivotal.gemfirexd.internal.engine.store.AbstractCompactExecRow,java.util.UUID,int)|",
      "|java+method:///java/util/Collections/emptySet()|",
      "|java+method:///com/pivotal/gemfirexd/internal/iapi/sql/conn/LanguageConnectionContext/setExecuteLocally(java.util.Set,com.gemstone.gemfire.cache.Region,boolean,com.gemstone.gemfire.internal.cache.Checkpoint)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/getPartitionedRegion()|",
      "|java+constructor:///org/apache/spark/sql/execution/columnar/impl/StoreCallbacksImpl$$anonfun$1/StoreCallbacksImpl$$anonfun$1()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/store/GemFireContainer/getQualifiedTableName()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getUserAttribute()|",
      "|java+method:///org/apache/spark/sql/execution/columnar/impl/ColumnFormatRelation$/cachedBatchTableName(java.lang.String)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/Misc/getGemFireCache()|",
      "|java+constructor:///org/apache/spark/sql/execution/columnar/CachedBatchCreator/CachedBatchCreator(java.lang.String,java.lang.String,org.apache.spark.sql.types.StructType,org.apache.spark.sql.execution.columnar.ExternalStore,scala.collection.Seq,int,boolean)|",
      "|java+method:///scala/collection/mutable/ArrayBuffer$/canBuildFrom()|",
      "|java+method:///com/pivotal/gemfirexd/internal/impl/jdbc/TransactionResourceImpl/restoreContextStack()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getCancelCriterion()|",
      "|java+method:///java/util/Collections/singleton(java.lang.Object)|",
      "|java+method:///org/apache/spark/sql/execution/columnar/impl/StoreCallbacksImpl$/useCompression()|"
    ],
    "affectedLib": "io.snappydata:snappydata-store-core:1.5.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappydata-core_2.11:0.6.1",
    "coordinatesV2": "io.snappydata:snappydata-core_2.11:0.7",
    "caller": "|java+method:///org/apache/spark/sql/store/StoreInitRDD/compute(org.apache.spark.Partition,org.apache.spark.TaskContext)|",
    "called": "|java+method:///com/pivotal/gemfirexd/internal/engine/Misc/createReservoirRegionForSampleTable(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/collection/IterableLike/iterator()|",
      "|java+method:///org/apache/spark/storage/BlockManager/blockManagerId()|",
      "|java+method:///scala/Predef$/ArrowAssoc(java.lang.Object)|",
      "|java+method:///org/apache/spark/sql/store/StoreInitRDD/columnBatchSize()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getDataPolicy()|",
      "|java+method:///org/apache/spark/SparkEnv$/get()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/Misc/getRegionForTable(java.lang.String,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getMyId()|",
      "|java+method:///com/gemstone/gemfire/cache/Region/getAttributes()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/Misc/getGemFireCache()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///org/apache/spark/sql/execution/columnar/impl/StoreCallbacksImpl$/registerExternalStoreAndSchema(org.apache.spark.sql.SQLContext,java.lang.String,org.apache.spark.sql.types.StructType,org.apache.spark.sql.execution.columnar.ExternalStore,int,boolean)|",
      "|java+method:///org/apache/spark/sql/store/StoreInitRDD/userCompression()|",
      "|java+method:///scala/Some/x()|",
      "|java+method:///io/snappydata/Constant$/COLUMN_MIN_BATCH_SIZE()|",
      "|java+method:///scala/collection/Seq$/apply(scala.collection.Seq)|",
      "|java+method:///org/apache/spark/SparkEnv/blockManager()|",
      "|java+method:///scala/Predef$ArrowAssoc$/$minus$greater$extension(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/cache/DataPolicy/withReplication()|",
      "|java+method:///org/apache/spark/sql/store/StoreInitRDD/sqlContext()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/setColumnBatchSizes(int,int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/setIsUsedForUserReplicatedTable(boolean)|",
      "|java+constructor:///org/apache/spark/sql/execution/columnar/impl/JDBCSourceAsColumnarStore/JDBCSourceAsColumnarStore(org.apache.spark.sql.sources.ConnectionProperties,int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/spark/sql/execution/columnar/impl/StoreCallbacksImpl$/registerExternalStoreAndSchema(org.apache.spark.sql.execution.columnar.impl.StoreCallbacksImpl$ExecutorCatalogEntry)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/collection/IterableLike/iterator()|",
      "|java+method:///org/apache/spark/sql/store/StoreInitRDD/columnBatchSize()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getDataPolicy()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/Misc/getRegionForTable(java.lang.String,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getMyId()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/setColumnBatchSizes(int,int)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/Misc/getGemFireCache()|",
      "|java+method:///scala/collection/mutable/ArrayOps/last()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/Misc/createReservoirRegionForSampleTable(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/spark/sql/store/StoreInitRDD/userCompression()|",
      "|java+method:///scala/Some/x()|",
      "|java+method:///io/snappydata/Constant$/COLUMN_MIN_BATCH_SIZE()|",
      "|java+method:///org/apache/spark/storage/BlockManager/blockManagerId()|",
      "|java+method:///org/apache/spark/sql/store/StoreInitRDD/keepReservoirInRegion()|",
      "|java+method:///scala/Predef$/assert(boolean)|",
      "|java+method:///org/apache/spark/sql/types/StructField/dataType()|",
      "|java+method:///scala/Predef$/ArrowAssoc(java.lang.Object)|",
      "|java+method:///org/apache/spark/SparkEnv$/get()|",
      "|java+method:///org/apache/spark/sql/execution/columnar/ExternalStoreUtils$/lookupName(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/spark/sql/types/StructField/name()|",
      "|java+method:///com/gemstone/gemfire/cache/Region/getAttributes()|",
      "|java+method:///scala/collection/Seq$/apply(scala.collection.Seq)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/Misc/getReservoirRegionNameForSampleTable(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/spark/SparkEnv/blockManager()|",
      "|java+method:///com/gemstone/gemfire/cache/DataPolicy/withReplication()|",
      "|java+method:///io/snappydata/Constant$/DEFAULT_SCHEMA()|",
      "|java+method:///scala/Predef$ArrowAssoc$/$minus$greater$extension(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/spark/sql/execution/columnar/impl/StoreCallbacksImpl$ExecutorCatalogEntry$/apply$default$8()|",
      "|java+constructor:///org/apache/spark/sql/execution/columnar/impl/JDBCSourceAsColumnarStore/JDBCSourceAsColumnarStore(org.apache.spark.sql.sources.ConnectionProperties,int)|",
      "|java+method:///org/apache/spark/sql/types/StructType/fields()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/setIsUsedForUserReplicatedTable(boolean)|",
      "|java+constructor:///org/apache/spark/sql/execution/columnar/impl/StoreCallbacksImpl$ExecutorCatalogEntry/StoreCallbacksImpl$ExecutorCatalogEntry(java.lang.String,org.apache.spark.sql.types.StructType,org.apache.spark.sql.execution.columnar.ExternalStore,int,boolean,scala.Option,scala.collection.mutable.ArrayBuffer,scala.collection.mutable.ArrayBuffer)|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "io.snappydata:snappydata-store-core:1.5.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappydata-core_2.11:0.6.1",
    "coordinatesV2": "io.snappydata:snappydata-core_2.11:0.7",
    "caller": "|java+method:///org/apache/spark/sql/execution/columnar/CachedBatchCreator/createAndStoreBatch(com.pivotal.gemfirexd.internal.iapi.store.access.ScanController,com.pivotal.gemfirexd.internal.engine.store.AbstractCompactExecRow,java.util.UUID,int)|",
    "called": "|java+method:///com/pivotal/gemfirexd/internal/engine/access/heap/MemHeapScanController/fetchNext(com.pivotal.gemfirexd.internal.iapi.sql.execute.ExecRow)|",
    "v1Body": [
      "|java+constructor:///org/apache/spark/sql/execution/columnar/CachedBatchCreator$$anonfun$2/CachedBatchCreator$$anonfun$2(org.apache.spark.sql.execution.columnar.CachedBatchCreator,java.util.UUID,int)|",
      "|java+constructor:///org/apache/spark/sql/execution/columnar/CachedBatchHolder/CachedBatchHolder(scala.Function0,int,int,scala.Function1)|",
      "|java+method:///org/apache/spark/sql/execution/columnar/CachedBatchHolder/appendRow(org.apache.spark.sql.catalyst.InternalRow)|",
      "|java+method:///java/util/HashSet/add(java.lang.Object)|",
      "|java+method:///org/apache/spark/sql/execution/columnar/CachedBatchCreator/dataTypes()|",
      "|java+method:///java/util/TreeSet/first()|",
      "|java+method:///com/pivotal/gemfirexd/internal/iapi/store/access/ScanController/close()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/store/AbstractCompactExecRow/getAllRegionAndKeyInfo()|",
      "|java+method:///org/apache/spark/sql/execution/columnar/CachedBatchCreator/createInternalRow(com.pivotal.gemfirexd.internal.engine.store.AbstractCompactExecRow,org.apache.spark.sql.catalyst.expressions.SpecificMutableRow)|",
      "|java+constructor:///org/apache/spark/sql/execution/columnar/CachedBatchCreator$$anonfun$1/CachedBatchCreator$$anonfun$1(org.apache.spark.sql.execution.columnar.CachedBatchCreator)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/distributed/metadata/RegionAndKey/getKey()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/access/heap/MemHeapScanController/setAddRegionAndKey()|",
      "|java+constructor:///org/apache/spark/sql/catalyst/expressions/SpecificMutableRow/SpecificMutableRow(scala.collection.Seq)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/access/heap/MemHeapScanController/fetchNext(com.pivotal.gemfirexd.internal.iapi.sql.execute.ExecRow)|",
      "|java+method:///org/apache/spark/sql/execution/columnar/CachedBatchHolder/forceEndOfBatch()|",
      "|java+constructor:///java/util/HashSet/HashSet()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/spark/sql/execution/columnar/CachedBatchCreator/dependents()|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///org/apache/spark/sql/execution/columnar/CachedBatchCreator/createInternalRow(com.pivotal.gemfirexd.internal.engine.store.AbstractCompactExecRow,org.apache.spark.sql.catalyst.expressions.SpecificMutableRow)|",
      "|java+constructor:///org/apache/spark/sql/execution/columnar/CachedBatchCreator$$anonfun$2/CachedBatchCreator$$anonfun$2(org.apache.spark.sql.execution.columnar.CachedBatchCreator)|",
      "|java+method:///org/apache/spark/sql/execution/columnar/CachedBatchHolder/appendRow(org.apache.spark.sql.catalyst.InternalRow)|",
      "|java+method:///java/util/HashSet/add(java.lang.Object)|",
      "|java+method:///org/apache/spark/sql/execution/columnar/CachedBatchCreator/dataTypes()|",
      "|java+method:///org/apache/spark/sql/execution/columnar/CachedBatchCreator/tableName()|",
      "|java+constructor:///org/apache/spark/sql/execution/columnar/CachedBatchCreator$$anonfun$3/CachedBatchCreator$$anonfun$3(org.apache.spark.sql.execution.columnar.CachedBatchCreator,java.util.UUID,int,org.apache.spark.sql.execution.columnar.ConnectedExternalStore,scala.collection.Seq)|",
      "|java+method:///java/util/TreeSet/first()|",
      "|java+method:///com/pivotal/gemfirexd/internal/iapi/store/access/ScanController/close()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/store/AbstractCompactExecRow/getAllRegionAndKeyInfo()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/distributed/metadata/RegionAndKey/getKey()|",
      "|java+constructor:///org/apache/spark/sql/execution/columnar/CachedBatchCreator$$anonfun$1/CachedBatchCreator$$anonfun$1(org.apache.spark.sql.execution.columnar.CachedBatchCreator,org.apache.spark.sql.execution.columnar.ConnectedExternalStore)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/access/heap/MemHeapScanController/setAddRegionAndKey()|",
      "|java+constructor:///org/apache/spark/sql/execution/columnar/CachedBatchHolder/CachedBatchHolder(scala.Function0,int,int,org.apache.spark.sql.types.StructType,scala.Function1,scala.collection.Seq)|",
      "|java+method:///org/apache/spark/sql/execution/columnar/ConnectedExternalStore/commitAndClose(boolean)|",
      "|java+method:///org/apache/spark/sql/execution/columnar/CachedBatchCreator/schema()|",
      "|java+constructor:///org/apache/spark/sql/catalyst/expressions/SpecificMutableRow/SpecificMutableRow(scala.collection.Seq)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/access/heap/MemHeapScanController/fetchNext(com.pivotal.gemfirexd.internal.iapi.sql.execute.ExecRow)|",
      "|java+method:///org/apache/spark/sql/execution/columnar/CachedBatchHolder/forceEndOfBatch()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///scala/collection/Seq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///org/apache/spark/sql/execution/columnar/CachedBatchCreator/externalStore()|",
      "|java+method:///org/apache/spark/sql/execution/columnar/ExternalStore/getConnectedExternalStore(java.lang.String,boolean)|"
    ],
    "affectedLib": "io.snappydata:snappydata-store-core:1.5.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappydata-core_2.11:0.6.1",
    "coordinatesV2": "io.snappydata:snappydata-core_2.11:0.7",
    "caller": "|java+method:///org/apache/spark/sql/execution/columnar/impl/ColumnarStorePartitionedRDD/compute(org.apache.spark.Partition,org.apache.spark.TaskContext)|",
    "called": "|java+method:///com/pivotal/gemfirexd/internal/engine/store/GemFireContainer/isOffHeap()|",
    "v1Body": [
      "|java+method:///scala/Predef$/Set()|",
      "|java+method:///org/apache/spark/sql/collection/MultiBucketExecutorPartition/buckets()|",
      "|java+method:///scala/Predef$/wrapIntArray(int%5B%5D)|",
      "|java+constructor:///org/apache/spark/sql/execution/columnar/ByteArraysIteratorOnScan/ByteArraysIteratorOnScan(com.pivotal.gemfirexd.internal.engine.store.GemFireContainer,scala.collection.Set)|",
      "|java+method:///scala/collection/immutable/Set$/apply(scala.collection.Seq)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/store/GemFireContainer/isOffHeap()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/distributed/utils/GemFireXDUtils/getGemFireContainer(java.lang.String,boolean)|",
      "|java+constructor:///org/apache/spark/sql/execution/columnar/OffHeapLobsIteratorOnScan/OffHeapLobsIteratorOnScan(com.pivotal.gemfirexd.internal.engine.store.GemFireContainer,scala.collection.Set)|",
      "|java+method:///org/apache/spark/Partition/index()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/spark/sql/execution/columnar/impl/ColumnarStorePartitionedRDD/org$apache$spark$sql$execution$columnar$impl$ColumnarStorePartitionedRDD$$tableName()|",
      "|java+constructor:///org/apache/spark/sql/execution/columnar/ByteArraysIteratorOnScan/ByteArraysIteratorOnScan(com.pivotal.gemfirexd.internal.engine.store.GemFireContainer,java.util.Set)|",
      "|java+method:///org/apache/spark/sql/collection/MultiBucketExecutorPartition/buckets()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///org/apache/spark/sql/execution/columnar/OffHeapLobsIteratorOnScan/OffHeapLobsIteratorOnScan(com.pivotal.gemfirexd.internal.engine.store.GemFireContainer,java.util.Set)|",
      "|java+method:///java/util/Collections/singleton(java.lang.Object)|",
      "|java+method:///org/apache/spark/Partition/index()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/store/GemFireContainer/isOffHeap()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/distributed/utils/GemFireXDUtils/getGemFireContainer(java.lang.String,boolean)|"
    ],
    "affectedLib": "io.snappydata:snappydata-store-core:1.5.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappydata-core_2.11:0.6.1",
    "coordinatesV2": "io.snappydata:snappydata-core_2.11:0.7",
    "caller": "|java+method:///org/apache/spark/sql/execution/columnar/impl/StoreCallbacksImpl$/cleanUpCachedObjects(java.lang.String,java.lang.Boolean)|",
    "called": "|java+method:///com/pivotal/gemfirexd/internal/engine/distributed/utils/GemFireXDUtils/getGfxdAdvisor()|",
    "v1Body": [
      "|java+method:///org/apache/spark/sql/SnappySession$/getOrCreate(org.apache.spark.SparkContext)|",
      "|java+constructor:///org/apache/spark/SparkException/SparkException(java.lang.String)|",
      "|java+method:///scala/collection/concurrent/TrieMap/remove(java.lang.Object)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/distributed/GfxdDistributionAdvisor$GfxdProfile/hasSparkURL()|",
      "|java+method:///org/apache/spark/sql/store/StoreUtils$/removeCachedObjects(org.apache.spark.sql.SQLContext,java.lang.String,boolean)|",
      "|java+method:///org/apache/spark/sql/SnappySession/sqlContext()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/distributed/GfxdDistributionAdvisor/getMyProfile()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/spark/sql/hive/SnappyStoreHiveCatalog$/registerRelationDestroy()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///org/apache/spark/sql/execution/columnar/impl/StoreCallbacksImpl$/stores()|",
      "|java+method:///org/apache/spark/sql/SnappyContext$/globalSparkContext()|",
      "|java+method:///org/apache/spark/sql/SnappyContext$/getClusterMode(org.apache.spark.SparkContext)|",
      "|java+method:///scala/Predef$/Boolean2boolean(java.lang.Boolean)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/distributed/utils/GemFireXDUtils/getGfxdAdvisor()|",
      "|java+method:///org/apache/spark/sql/execution/columnar/ExternalStoreUtils$/removeCachedObjects(java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/spark/SparkException/SparkException(java.lang.String)|",
      "|java+method:///scala/collection/concurrent/TrieMap/remove(java.lang.Object)|",
      "|java+method:///org/apache/spark/sql/SnappyContext$/globalSparkContext()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/distributed/GfxdDistributionAdvisor$GfxdProfile/hasSparkURL()|",
      "|java+method:///org/apache/spark/sql/store/StoreUtils$/removeCachedObjects(org.apache.spark.sql.SQLContext,java.lang.String,boolean)|",
      "|java+method:///org/apache/spark/sql/SnappySession/sqlContext()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/distributed/GfxdDistributionAdvisor/getMyProfile()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/spark/sql/hive/SnappyStoreHiveCatalog$/registerRelationDestroy()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///org/apache/spark/sql/execution/columnar/impl/StoreCallbacksImpl$/executorCatalog()|",
      "|java+method:///org/apache/spark/sql/SnappySession$/getOrCreate(org.apache.spark.SparkContext)|",
      "|java+method:///org/apache/spark/sql/SnappyContext$/getClusterMode(org.apache.spark.SparkContext)|",
      "|java+method:///scala/Predef$/Boolean2boolean(java.lang.Boolean)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/distributed/utils/GemFireXDUtils/getGfxdAdvisor()|",
      "|java+method:///org/apache/spark/sql/execution/columnar/ExternalStoreUtils$/removeCachedObjects(java.lang.String)|"
    ],
    "affectedLib": "io.snappydata:snappydata-store-core:1.5.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappydata-core_2.11:0.6.1",
    "coordinatesV2": "io.snappydata:snappydata-core_2.11:0.7",
    "caller": "|java+method:///io/snappydata/SnappyTableStatsProviderService$/getTableStatsFromAllServers()|",
    "called": "|java+method:///com/pivotal/gemfirexd/internal/engine/distributed/GfxdMessage/getAllDataStores()|",
    "v1Body": [
      "|java+method:///scala/collection/mutable/Buffer$/canBuildFrom()|",
      "|java+method:///scala/collection/mutable/Buffer/flatMap(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///com/gemstone/gemfire/cache/execute/FunctionService/onMembers(java.util.Set)|",
      "|java+constructor:///io/snappydata/SnappyTableStatsProviderService$$anonfun$getTableStatsFromAllServers$1/SnappyTableStatsProviderService$$anonfun$getTableStatsFromAllServers$1()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/distributed/GfxdMessage/getAllDataStores()|",
      "|java+constructor:///com/pivotal/gemfirexd/internal/engine/distributed/GfxdListResultCollector/GfxdListResultCollector()|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///scala/collection/JavaConverters$/asScalaBufferConverter(java.util.List)|",
      "|java+method:///com/gemstone/gemfire/cache/execute/ResultCollector/getResult()|",
      "|java+method:///com/gemstone/gemfire/cache/execute/Execution/withCollector(com.gemstone.gemfire.cache.execute.ResultCollector)|",
      "|java+method:///com/gemstone/gemfire/cache/execute/Execution/execute(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///scala/collection/mutable/Buffer$/canBuildFrom()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///scala/collection/mutable/Buffer/flatMap(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///com/gemstone/gemfire/cache/execute/FunctionService/onMembers(java.util.Set)|",
      "|java+constructor:///io/snappydata/SnappyTableStatsProviderService$$anonfun$getTableStatsFromAllServers$1/SnappyTableStatsProviderService$$anonfun$getTableStatsFromAllServers$1()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/distributed/GfxdMessage/getAllDataStores()|",
      "|java+constructor:///com/pivotal/gemfirexd/internal/engine/distributed/GfxdListResultCollector/GfxdListResultCollector()|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///scala/collection/JavaConverters$/asScalaBufferConverter(java.util.List)|",
      "|java+method:///com/gemstone/gemfire/cache/execute/ResultCollector/getResult()|",
      "|java+method:///com/gemstone/gemfire/cache/execute/Execution/withCollector(com.gemstone.gemfire.cache.execute.ResultCollector)|",
      "|java+method:///com/gemstone/gemfire/cache/execute/Execution/execute(java.lang.String)|"
    ],
    "affectedLib": "io.snappydata:snappydata-store-core:1.5.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappydata-core_2.11:0.6.1",
    "coordinatesV2": "io.snappydata:snappydata-core_2.11:0.7",
    "caller": "|java+method:///io/snappydata/SnappyTableStatsProviderService$$anonfun$getAggregatedTableStatsOnDemand$1/apply(com.pivotal.gemfirexd.internal.engine.ui.SnappyRegionStats)|",
    "called": "|java+method:///com/pivotal/gemfirexd/internal/engine/ui/SnappyRegionStats/getCombinedStats(com.pivotal.gemfirexd.internal.engine.ui.SnappyRegionStats)|",
    "v1Body": [
      "|java+method:///scala/collection/Seq/contains(java.lang.Object)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/ui/SnappyRegionStats/getCombinedStats(com.pivotal.gemfirexd.internal.engine.ui.SnappyRegionStats)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/ui/SnappyRegionStats/getRegionName()|",
      "|java+method:///scala/Option/isDefined()|",
      "|java+method:///scala/collection/mutable/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/collection/mutable/Map/get(java.lang.Object)|",
      "|java+method:///scala/Option/get()|"
    ],
    "v2Body": [
      "|java+method:///scala/Some/x()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/ui/SnappyRegionStats/getCombinedStats(com.pivotal.gemfirexd.internal.engine.ui.SnappyRegionStats)|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/ui/SnappyRegionStats/getRegionName()|",
      "|java+method:///scala/collection/mutable/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///scala/collection/mutable/Map/get(java.lang.Object)|"
    ],
    "affectedLib": "io.snappydata:snappydata-store-core:1.5.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappydata-core_2.11:0.6.1",
    "coordinatesV2": "io.snappydata:snappydata-core_2.11:0.7",
    "caller": "|java+method:///org/apache/spark/sql/SnappyContext$/initMemberBlockMap(org.apache.spark.SparkContext)|",
    "called": "|java+method:///com/pivotal/gemfirexd/internal/engine/Misc/getGemFireCacheNoThrow()|",
    "v1Body": [
      "|java+method:///org/apache/spark/SparkEnv$/get()|",
      "|java+method:///org/apache/spark/SparkEnv/blockManager()|",
      "|java+constructor:///org/apache/spark/sql/BlockAndExecutorId/BlockAndExecutorId(org.apache.spark.storage.BlockManagerId,int)|",
      "|java+method:///org/apache/spark/sql/collection/Utils$/isLoner(org.apache.spark.SparkContext)|",
      "|java+method:///scala/collection/concurrent/TrieMap/update(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/InternalDistributedMember/toString()|",
      "|java+method:///org/apache/spark/storage/BlockManager/blockManagerId()|",
      "|java+method:///org/apache/spark/SparkContext/schedulerBackend()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/Misc/getGemFireCacheNoThrow()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getMyId()|",
      "|java+method:///org/apache/spark/scheduler/SchedulerBackend/defaultParallelism()|"
    ],
    "v2Body": [
      "|java+method:///java/util/concurrent/atomic/AtomicInteger/addAndGet(int)|",
      "|java+method:///org/apache/spark/sql/SnappyContext$/totalCoreCount()|",
      "|java+method:///org/apache/spark/sql/SnappySession$/clearAllCache()|",
      "|java+method:///org/apache/spark/SparkEnv$/get()|",
      "|java+method:///org/apache/spark/SparkEnv/blockManager()|",
      "|java+constructor:///org/apache/spark/sql/BlockAndExecutorId/BlockAndExecutorId(org.apache.spark.storage.BlockManagerId,int,int)|",
      "|java+method:///org/apache/spark/sql/BlockAndExecutorId/numProcessors()|",
      "|java+method:///org/apache/spark/sql/collection/Utils$/isLoner(org.apache.spark.SparkContext)|",
      "|java+method:///scala/collection/concurrent/TrieMap/update(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/InternalDistributedMember/toString()|",
      "|java+method:///org/apache/spark/storage/BlockManager/blockManagerId()|",
      "|java+method:///org/apache/spark/SparkContext/schedulerBackend()|",
      "|java+method:///com/pivotal/gemfirexd/internal/engine/Misc/getGemFireCacheNoThrow()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getMyId()|",
      "|java+method:///org/apache/spark/scheduler/SchedulerBackend/defaultParallelism()|"
    ],
    "affectedLib": "io.snappydata:snappydata-store-core:1.5.3",
    "change": "UPDATED"
  }
]