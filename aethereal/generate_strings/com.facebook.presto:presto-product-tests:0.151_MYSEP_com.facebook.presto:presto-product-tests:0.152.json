[
  {
    "coordinatesV1": "com.facebook.presto:presto-product-tests:0.151",
    "coordinatesV2": "com.facebook.presto:presto-product-tests:0.152",
    "caller": "|java+method:///com/facebook/presto/tests/hive/TestInsertIntoHiveTable/testInsertIntoValuesToHiveTableAllHiveSimpleTypes()|",
    "called": "|java+method:///com/teradata/tempto/assertions/QueryAssert$Row/row(java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///com/teradata/tempto/query/QueryExecutor/query(java.lang.String,com.teradata.tempto.query.QueryExecutor$QueryParam%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///java/lang/String/getBytes()|",
      "|java+method:///com/teradata/tempto/fulfillment/table/MutableTablesState/get(java.lang.String)|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///com/teradata/tempto/assertions/QueryAssert/containsOnly(com.teradata.tempto.assertions.QueryAssert$Row%5B%5D)|",
      "|java+method:///java/sql/Date/valueOf(java.lang.String)|",
      "|java+method:///com/teradata/tempto/fulfillment/table/MutableTablesState/mutableTablesState()|",
      "|java+method:///com/teradata/tempto/assertions/QueryAssert/assertThat(com.teradata.tempto.query.QueryResult)|",
      "|java+method:///com/teradata/tempto/fulfillment/table/TableInstance/getNameInDatabase()|",
      "|java+method:///java/sql/Timestamp/valueOf(java.lang.String)|",
      "|java+method:///com/teradata/tempto/assertions/QueryAssert/hasNoRows()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/teradata/tempto/assertions/QueryAssert$Row/row(java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///com/teradata/tempto/query/QueryExecutor/query(java.lang.String,com.teradata.tempto.query.QueryExecutor$QueryParam%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/math/BigDecimal/BigDecimal(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///java/lang/String/getBytes()|",
      "|java+method:///com/teradata/tempto/fulfillment/table/MutableTablesState/get(java.lang.String)|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///com/teradata/tempto/assertions/QueryAssert/containsOnly(com.teradata.tempto.assertions.QueryAssert$Row%5B%5D)|",
      "|java+method:///java/sql/Date/valueOf(java.lang.String)|",
      "|java+method:///com/teradata/tempto/fulfillment/table/MutableTablesState/mutableTablesState()|",
      "|java+method:///com/teradata/tempto/assertions/QueryAssert/assertThat(com.teradata.tempto.query.QueryResult)|",
      "|java+method:///com/teradata/tempto/fulfillment/table/TableInstance/getNameInDatabase()|",
      "|java+method:///java/sql/Timestamp/valueOf(java.lang.String)|",
      "|java+method:///com/teradata/tempto/assertions/QueryAssert/hasNoRows()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/teradata/tempto/assertions/QueryAssert$Row/row(java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "com.teradata.tempto:tempto-core:1.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.facebook.presto:presto-product-tests:0.151",
    "coordinatesV2": "com.facebook.presto:presto-product-tests:0.152",
    "caller": "|java+method:///com/facebook/presto/tests/hive/TestInsertIntoHiveTable/testInsertIntoSelectToHiveTableAllHiveSimpleTypes()|",
    "called": "|java+method:///com/teradata/tempto/assertions/QueryAssert$Row/row(java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///com/teradata/tempto/assertions/QueryAssert/containsExactly(com.teradata.tempto.assertions.QueryAssert$Row%5B%5D)|",
      "|java+method:///com/teradata/tempto/query/QueryExecutor/query(java.lang.String,com.teradata.tempto.query.QueryExecutor$QueryParam%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///java/lang/String/getBytes()|",
      "|java+method:///com/teradata/tempto/fulfillment/table/MutableTablesState/get(java.lang.String)|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///com/teradata/tempto/assertions/QueryAssert/containsOnly(com.teradata.tempto.assertions.QueryAssert$Row%5B%5D)|",
      "|java+method:///java/sql/Date/valueOf(java.lang.String)|",
      "|java+method:///com/teradata/tempto/fulfillment/table/MutableTablesState/mutableTablesState()|",
      "|java+method:///com/teradata/tempto/assertions/QueryAssert/assertThat(com.teradata.tempto.query.QueryResult)|",
      "|java+method:///com/teradata/tempto/fulfillment/table/TableInstance/getNameInDatabase()|",
      "|java+method:///java/sql/Timestamp/valueOf(java.lang.String)|",
      "|java+method:///com/teradata/tempto/assertions/QueryAssert/hasNoRows()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/teradata/tempto/assertions/QueryAssert$Row/row(java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///com/teradata/tempto/assertions/QueryAssert/containsExactly(com.teradata.tempto.assertions.QueryAssert$Row%5B%5D)|",
      "|java+method:///com/teradata/tempto/query/QueryExecutor/query(java.lang.String,com.teradata.tempto.query.QueryExecutor$QueryParam%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/math/BigDecimal/BigDecimal(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///java/lang/String/getBytes()|",
      "|java+method:///com/teradata/tempto/fulfillment/table/MutableTablesState/get(java.lang.String)|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///com/teradata/tempto/assertions/QueryAssert/containsOnly(com.teradata.tempto.assertions.QueryAssert$Row%5B%5D)|",
      "|java+method:///java/sql/Date/valueOf(java.lang.String)|",
      "|java+method:///com/teradata/tempto/fulfillment/table/MutableTablesState/mutableTablesState()|",
      "|java+method:///com/teradata/tempto/assertions/QueryAssert/assertThat(com.teradata.tempto.query.QueryResult)|",
      "|java+method:///com/teradata/tempto/fulfillment/table/TableInstance/getNameInDatabase()|",
      "|java+method:///java/sql/Timestamp/valueOf(java.lang.String)|",
      "|java+method:///com/teradata/tempto/assertions/QueryAssert/hasNoRows()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/teradata/tempto/assertions/QueryAssert$Row/row(java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "com.teradata.tempto:tempto-core:1.12",
    "change": "UPDATED"
  }
]