[
  {
    "coordinatesV1": "org.springframework.data:spring-data-gemfire:1.1.2.RELEASE",
    "coordinatesV2": "org.springframework.data:spring-data-gemfire:1.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/data/gemfire/config/ParsingUtils/parseEviction(org.springframework.beans.factory.xml.ParserContext,org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)|",
    "called": "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyValue(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/String/toUpperCase()|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/data/gemfire/config/ParsingUtils/setPropertyValue(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.String)|",
      "|java+method:///org/springframework/data/gemfire/config/ParsingUtils/parseRefOrNestedBeanDeclaration(org.springframework.beans.factory.xml.ParserContext,org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/genericBeanDefinition(java.lang.Class)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/getBeanDefinition()|",
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElementByTagName(org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///org/springframework/data/gemfire/config/EvictionType/valueOf(java.lang.String)|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/data/gemfire/config/ParsingUtils/setPropertyValue(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyValue(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/String/toUpperCase()|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/data/gemfire/config/ParsingUtils/parseRefOrNestedBeanDeclaration(org.springframework.beans.factory.xml.ParserContext,org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/genericBeanDefinition(java.lang.Class)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/getBeanDefinition()|",
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElementByTagName(org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///org/springframework/data/gemfire/config/EvictionType/valueOf(java.lang.String)|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|"
    ],
    "affectedLib": "org.springframework:spring-core:3.1.2.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework.data:spring-data-gemfire:1.1.2.RELEASE",
    "coordinatesV2": "org.springframework.data:spring-data-gemfire:1.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/data/gemfire/RegionFactoryBean/lookupFallback(com.gemstone.gemfire.cache.GemFireCache,java.lang.String)|",
    "called": "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/cache/Cache/createRegionFactory()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionFactory/setDataPolicy(com.gemstone.gemfire.cache.DataPolicy)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/cache/Region/loadSnapshot(java.io.InputStream)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/data/gemfire/RegionFactoryBean/postProcess(com.gemstone.gemfire.cache.AttributesFactory)|",
      "|java+method:///org/springframework/util/ObjectUtils/isEmpty(java.lang.Object%5B%5D)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionFactory/create(java.lang.String)|",
      "|java+method:///org/springframework/util/Assert/isTrue(boolean,java.lang.String)|",
      "|java+method:///org/springframework/core/io/Resource/getInputStream()|",
      "|java+method:///org/apache/commons/logging/Log/info(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/cache/AttributesFactory/validateAttributes(com.gemstone.gemfire.cache.RegionAttributes)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionFactory/setScope(com.gemstone.gemfire.cache.Scope)|",
      "|java+method:///org/springframework/data/gemfire/RegionFactoryBean/findAttrFactory(com.gemstone.gemfire.cache.RegionFactory)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionFactory/setCacheLoader(com.gemstone.gemfire.cache.CacheLoader)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionFactory/setCacheWriter(com.gemstone.gemfire.cache.CacheWriter)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionFactory/addCacheListener(com.gemstone.gemfire.cache.CacheListener)|",
      "|java+method:///com/gemstone/gemfire/cache/Cache/createRegionFactory(com.gemstone.gemfire.cache.RegionAttributes)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/data/gemfire/RegionFactoryBean/resolveDataPolicy(com.gemstone.gemfire.cache.RegionFactory,java.lang.Boolean,java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/isLockGrantor()|",
      "|java+method:///com/gemstone/gemfire/cache/Cache/createRegionFactory()|",
      "|java+method:///com/gemstone/gemfire/cache/Scope/isGlobal()|",
      "|java+method:///org/springframework/data/gemfire/RegionFactoryBean/isNotPersistent()|",
      "|java+method:///com/gemstone/gemfire/cache/Region/becomeLockGrantor()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/cache/Region/loadSnapshot(java.io.InputStream)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/springframework/data/gemfire/RegionFactoryBean/postProcess(com.gemstone.gemfire.cache.AttributesFactory)|",
      "|java+method:///org/springframework/util/ObjectUtils/isEmpty(java.lang.Object%5B%5D)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionFactory/setEnableGateway(boolean)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionFactory/setGatewayHubId(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionFactory/create(java.lang.String)|",
      "|java+method:///org/springframework/util/Assert/isTrue(boolean,java.lang.String)|",
      "|java+method:///org/springframework/core/io/Resource/getInputStream()|",
      "|java+method:///org/apache/commons/logging/Log/info(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/cache/AttributesFactory/validateAttributes(com.gemstone.gemfire.cache.RegionAttributes)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionFactory/setScope(com.gemstone.gemfire.cache.Scope)|",
      "|java+method:///org/springframework/data/gemfire/RegionFactoryBean/findAttrFactory(com.gemstone.gemfire.cache.RegionFactory)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionFactory/setCacheLoader(com.gemstone.gemfire.cache.CacheLoader)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionFactory/setCacheWriter(com.gemstone.gemfire.cache.CacheWriter)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionFactory/addCacheListener(com.gemstone.gemfire.cache.CacheListener)|",
      "|java+method:///com/gemstone/gemfire/cache/Cache/createRegionFactory(com.gemstone.gemfire.cache.RegionAttributes)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionFactory/setDiskStoreName(java.lang.String)|"
    ],
    "affectedLib": "org.springframework:spring-core:3.1.2.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework.data:spring-data-gemfire:1.1.2.RELEASE",
    "coordinatesV2": "org.springframework.data:spring-data-gemfire:1.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/data/gemfire/client/ClientCacheFactoryBean/initializePool(com.gemstone.gemfire.cache.client.ClientCacheFactory)|",
    "called": "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getPRSingleHopEnabled()|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getIdleTimeout()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolServerGroup(java.lang.String)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/addPoolServer(java.lang.String,int)|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getLocators()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolPRSingleHopEnabled(boolean)|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getMinConnections()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolSubscriptionEnabled(boolean)|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getReadTimeout()|",
      "|java+method:///java/net/InetSocketAddress/getHostName()|",
      "|java+method:///java/util/Properties/setProperty(java.lang.String,java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getRetryAttempts()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolSocketBufferSize(int)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/addPoolLocator(java.lang.String,int)|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getServers()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolLoadConditioningInterval(int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getSubscriptionAckInterval()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolMaxConnections(int)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolFreeConnectionTimeout(int)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolIdleTimeout(long)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolStatisticInterval(int)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolMultiuserAuthentication(boolean)|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getStatisticInterval()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolThreadLocalConnections(boolean)|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getFreeConnectionTimeout()|",
      "|java+method:///org/springframework/util/Assert/isTrue(boolean,java.lang.String)|",
      "|java+method:///org/springframework/data/gemfire/client/ClientCacheFactoryBean/getBeanFactory()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolSubscriptionAckInterval(int)|",
      "|java+method:///com/gemstone/gemfire/cache/client/PoolManager/find(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/net/InetSocketAddress/getPort()|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getMaxConnections()|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getLoadConditioningInterval()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolRetryAttempts(int)|",
      "|java+method:///org/springframework/beans/factory/BeanFactory/isTypeMatch(java.lang.String,java.lang.Class)|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getServerGroup()|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getMultiuserAuthentication()|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getThreadLocalConnections()|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getSocketBufferSize()|",
      "|java+method:///com/gemstone/gemfire/distributed/DistributedSystem/connect(java.util.Properties)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolReadTimeout(int)|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getPingInterval()|",
      "|java+method:///org/springframework/beans/factory/BeanFactory/getBean(java.lang.String,java.lang.Class)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolMinConnections(int)|",
      "|java+method:///org/springframework/data/gemfire/client/ClientCacheFactoryBean/mergeProperties()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolPingInterval(long)|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getSubscriptionRedundancy()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolSubscriptionMessageTrackingTimeout(int)|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getSubscriptionEnabled()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getSubscriptionMessageTrackingTimeout()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolSubscriptionRedundancy(int)|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getPRSingleHopEnabled()|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getIdleTimeout()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/data/gemfire/client/ClientCacheFactoryBean/mergeProperties()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/addPoolServer(java.lang.String,int)|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getLocators()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolPRSingleHopEnabled(boolean)|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getMinConnections()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolSubscriptionEnabled(boolean)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getReadTimeout()|",
      "|java+method:///java/net/InetSocketAddress/getHostName()|",
      "|java+method:///java/util/Properties/setProperty(java.lang.String,java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getRetryAttempts()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolSocketBufferSize(int)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/addPoolLocator(java.lang.String,int)|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getServers()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolLoadConditioningInterval(int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getSubscriptionAckInterval()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolMaxConnections(int)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolFreeConnectionTimeout(int)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolIdleTimeout(long)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolStatisticInterval(int)|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getName()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolMultiuserAuthentication(boolean)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getStatisticInterval()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolThreadLocalConnections(boolean)|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getFreeConnectionTimeout()|",
      "|java+method:///org/springframework/data/gemfire/client/ClientCacheFactoryBean/getBeanFactory()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolSubscriptionAckInterval(int)|",
      "|java+method:///com/gemstone/gemfire/cache/client/PoolManager/find(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/BeanFactory/getBean(java.lang.Class)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolServerGroup(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/net/InetSocketAddress/getPort()|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getMaxConnections()|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getLoadConditioningInterval()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolRetryAttempts(int)|",
      "|java+method:///org/springframework/beans/factory/BeanFactory/isTypeMatch(java.lang.String,java.lang.Class)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getServerGroup()|",
      "|java+constructor:///org/springframework/beans/factory/BeanInitializationException/BeanInitializationException(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getMultiuserAuthentication()|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getThreadLocalConnections()|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getSocketBufferSize()|",
      "|java+method:///com/gemstone/gemfire/distributed/DistributedSystem/connect(java.util.Properties)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolReadTimeout(int)|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getPingInterval()|",
      "|java+method:///org/springframework/beans/factory/BeanFactory/getBean(java.lang.String,java.lang.Class)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolMinConnections(int)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolPingInterval(long)|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getSubscriptionRedundancy()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolSubscriptionMessageTrackingTimeout(int)|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getSubscriptionEnabled()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getSubscriptionMessageTrackingTimeout()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCacheFactory/setPoolSubscriptionRedundancy(int)|"
    ],
    "affectedLib": "org.springframework:spring-core:3.1.2.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework.data:spring-data-gemfire:1.1.2.RELEASE",
    "coordinatesV2": "org.springframework.data:spring-data-gemfire:1.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/data/gemfire/config/TransactionManagerParser/resolveId(org.w3c.dom.Element,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.factory.xml.ParserContext)|",
    "called": "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/xml/AbstractSingleBeanDefinitionParser/resolveId(org.w3c.dom.Element,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.factory.xml.ParserContext)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionRegistry/registerAlias(java.lang.String,java.lang.String)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/xml/AbstractSingleBeanDefinitionParser/resolveId(org.w3c.dom.Element,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.factory.xml.ParserContext)|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/getRegistry()|"
    ],
    "affectedLib": "org.springframework:spring-core:3.1.2.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework.data:spring-data-gemfire:1.1.2.RELEASE",
    "coordinatesV2": "org.springframework.data:spring-data-gemfire:1.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/data/gemfire/client/ClientRegionFactoryBean/lookupFallback(com.gemstone.gemfire.cache.GemFireCache,java.lang.String)|",
    "called": "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/setRegionTimeToLive(com.gemstone.gemfire.cache.ExpirationAttributes)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getConcurrencyLevel()|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getLoadFactor()|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getEvictionAttributes()|",
      "|java+method:///org/springframework/util/ObjectUtils/isEmpty(java.lang.Object%5B%5D)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getEntryIdleTimeout()|",
      "|java+method:///org/springframework/beans/factory/BeanFactory/isTypeMatch(java.lang.String,java.lang.Class)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getDiskStoreName()|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getRegionTimeToLive()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/isClient()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/setLoadFactor(float)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/setCustomEntryIdleTimeout(com.gemstone.gemfire.cache.CustomExpiry)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getKeyConstraint()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/setEvictionAttributes(com.gemstone.gemfire.cache.EvictionAttributes)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/setStatisticsEnabled(boolean)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getInitialCapacity()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getStatisticsEnabled()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/setDiskStoreName(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/setKeyConstraint(java.lang.Class)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCache/createClientRegionFactory(com.gemstone.gemfire.cache.client.ClientRegionShortcut)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/setRegionIdleTimeout(com.gemstone.gemfire.cache.ExpirationAttributes)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getEntryTimeToLive()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/setEntryIdleTimeout(com.gemstone.gemfire.cache.ExpirationAttributes)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getCacheListeners()|",
      "|java+method:///org/springframework/util/Assert/isTrue(boolean,java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/setConcurrencyLevel(int)|",
      "|java+method:///org/springframework/core/io/Resource/getInputStream()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/setCustomEntryTimeToLive(com.gemstone.gemfire.cache.CustomExpiry)|",
      "|java+method:///org/apache/commons/logging/Log/info(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getValueConstraint()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/setDiskSynchronous(boolean)|",
      "|java+method:///org/springframework/beans/factory/BeanFactory/getBean(java.lang.String,java.lang.Class)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/setValueConstraint(java.lang.Class)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getCloningEnabled()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/create(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getPoolName()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/setPoolName(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/cache/Region/loadSnapshot(java.io.InputStream)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/setInitialCapacity(int)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getCustomEntryTimeToLive()|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getCustomEntryIdleTimeout()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/setEntryTimeToLive(com.gemstone.gemfire.cache.ExpirationAttributes)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/isDiskSynchronous()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getRegionIdleTimeout()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/setCloningEnabled(boolean)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/addCacheListener(com.gemstone.gemfire.cache.CacheListener)|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/setRegionTimeToLive(com.gemstone.gemfire.cache.ExpirationAttributes)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getConcurrencyLevel()|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getLoadFactor()|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getEvictionAttributes()|",
      "|java+method:///org/springframework/util/ObjectUtils/isEmpty(java.lang.Object%5B%5D)|",
      "|java+method:///com/gemstone/gemfire/cache/client/Pool/getName()|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getEntryIdleTimeout()|",
      "|java+method:///org/springframework/beans/factory/BeanFactory/isTypeMatch(java.lang.String,java.lang.Class)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getDiskStoreName()|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getRegionTimeToLive()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/isClient()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/setLoadFactor(float)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/setCustomEntryIdleTimeout(com.gemstone.gemfire.cache.CustomExpiry)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getKeyConstraint()|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/setEvictionAttributes(com.gemstone.gemfire.cache.EvictionAttributes)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/setStatisticsEnabled(boolean)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getInitialCapacity()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getStatisticsEnabled()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/setDiskStoreName(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/setKeyConstraint(java.lang.Class)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientCache/createClientRegionFactory(com.gemstone.gemfire.cache.client.ClientRegionShortcut)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/setRegionIdleTimeout(com.gemstone.gemfire.cache.ExpirationAttributes)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getEntryTimeToLive()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/setEntryIdleTimeout(com.gemstone.gemfire.cache.ExpirationAttributes)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getCacheListeners()|",
      "|java+method:///org/springframework/util/Assert/isTrue(boolean,java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/setConcurrencyLevel(int)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/setCustomEntryTimeToLive(com.gemstone.gemfire.cache.CustomExpiry)|",
      "|java+method:///org/apache/commons/logging/Log/info(java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/BeanFactory/getBean(java.lang.Class)|",
      "|java+method:///org/springframework/core/io/Resource/getInputStream()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getValueConstraint()|",
      "|java+constructor:///org/springframework/data/gemfire/DataPolicyConverter/DataPolicyConverter()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/setDiskSynchronous(boolean)|",
      "|java+method:///org/springframework/beans/factory/BeanFactory/getBean(java.lang.String,java.lang.Class)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/setValueConstraint(java.lang.Class)|",
      "|java+method:///org/springframework/data/gemfire/DataPolicyConverter/convert(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getCloningEnabled()|",
      "|java+method:///org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/create(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getPoolName()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/setPoolName(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/cache/Region/loadSnapshot(java.io.InputStream)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/setInitialCapacity(int)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getCustomEntryTimeToLive()|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getCustomEntryIdleTimeout()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/setEntryTimeToLive(com.gemstone.gemfire.cache.ExpirationAttributes)|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/isDiskSynchronous()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getRegionIdleTimeout()|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/setCloningEnabled(boolean)|",
      "|java+method:///com/gemstone/gemfire/cache/client/ClientRegionFactory/addCacheListener(com.gemstone.gemfire.cache.CacheListener)|"
    ],
    "affectedLib": "org.springframework:spring-core:3.1.2.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework.data:spring-data-gemfire:1.1.2.RELEASE",
    "coordinatesV2": "org.springframework.data:spring-data-gemfire:1.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/data/gemfire/config/PoolParser/resolveId(org.w3c.dom.Element,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.factory.xml.ParserContext)|",
    "called": "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/xml/AbstractSimpleBeanDefinitionParser/resolveId(org.w3c.dom.Element,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.factory.xml.ParserContext)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionRegistry/registerAlias(java.lang.String,java.lang.String)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/xml/AbstractSimpleBeanDefinitionParser/resolveId(org.w3c.dom.Element,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.factory.xml.ParserContext)|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/getRegistry()|"
    ],
    "affectedLib": "org.springframework:spring-core:3.1.2.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework.data:spring-data-gemfire:1.1.2.RELEASE",
    "coordinatesV2": "org.springframework.data:spring-data-gemfire:1.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/data/gemfire/config/ClientRegionParser/doParseInternal(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)|",
    "called": "|java+method:///org/springframework/util/xml/DomUtils/getChildElements(org.w3c.dom.Element)|",
    "v1Body": [
      "|java+method:///org/springframework/data/gemfire/config/ParsingUtils/parseDiskStorage(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/getBeanDefinition()|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///org/springframework/data/gemfire/config/ParsingUtils/parseStatistics(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/w3c/dom/Element/getLocalName()|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyReference(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/genericBeanDefinition(java.lang.Class)|",
      "|java+method:///org/springframework/beans/factory/support/ManagedList/add(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyValue(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/springframework/data/gemfire/config/ClientRegionParser/parseRegexInterest(org.springframework.beans.factory.xml.ParserContext,org.w3c.dom.Element)|",
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElements(org.w3c.dom.Element)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/springframework/data/gemfire/config/ClientRegionParser/parseCacheListener(org.springframework.beans.factory.xml.ParserContext,org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)|",
      "|java+method:///org/springframework/data/gemfire/config/AliasReplacingBeanDefinitionParser/doParse(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)|",
      "|java+method:///org/springframework/data/gemfire/config/ParsingUtils/setPropertyValue(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.String)|",
      "|java+constructor:///org/springframework/beans/factory/support/ManagedList/ManagedList()|",
      "|java+method:///org/springframework/data/gemfire/config/ClientRegionParser/parseKeyInterest(org.springframework.beans.factory.xml.ParserContext,org.w3c.dom.Element)|",
      "|java+method:///org/springframework/data/gemfire/config/ParsingUtils/parseEviction(org.springframework.beans.factory.xml.ParserContext,org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/data/gemfire/config/ParsingUtils/setPropertyValue(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/getBeanDefinition()|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///org/springframework/data/gemfire/config/ParsingUtils/parseStatistics(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/addDependsOn(java.lang.String)|",
      "|java+method:///org/w3c/dom/Element/getLocalName()|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyReference(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/genericBeanDefinition(java.lang.Class)|",
      "|java+method:///org/springframework/beans/factory/support/ManagedList/add(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyValue(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/springframework/data/gemfire/config/ClientRegionParser/parseRegexInterest(org.springframework.beans.factory.xml.ParserContext,org.w3c.dom.Element)|",
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElements(org.w3c.dom.Element)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/springframework/data/gemfire/config/ClientRegionParser/parseCacheListener(org.springframework.beans.factory.xml.ParserContext,org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)|",
      "|java+method:///org/springframework/data/gemfire/config/AliasReplacingBeanDefinitionParser/doParse(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)|",
      "|java+method:///org/springframework/data/gemfire/config/ParsingUtils/setPropertyValue(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.String)|",
      "|java+constructor:///org/springframework/beans/factory/support/ManagedList/ManagedList()|",
      "|java+method:///org/springframework/data/gemfire/config/ClientRegionParser/parseKeyInterest(org.springframework.beans.factory.xml.ParserContext,org.w3c.dom.Element)|",
      "|java+method:///org/springframework/data/gemfire/config/ParsingUtils/parseEviction(org.springframework.beans.factory.xml.ParserContext,org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)|"
    ],
    "affectedLib": "org.springframework:spring-core:3.1.2.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework.data:spring-data-gemfire:1.1.2.RELEASE",
    "coordinatesV2": "org.springframework.data:spring-data-gemfire:1.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/data/gemfire/CacheFactoryBean/afterPropertiesSet()|",
    "called": "|java+method:///org/springframework/util/ClassUtils/isPresent(java.lang.String,java.lang.ClassLoader)|",
    "v1Body": [
      "|java+method:///org/springframework/data/gemfire/CacheFactoryBean/applyPdxOptions(java.lang.Object)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/data/gemfire/GemfireBeanFactoryLocator/afterPropertiesSet()|",
      "|java+method:///com/gemstone/gemfire/distributed/DistributedMember/getHost()|",
      "|java+method:///org/springframework/util/ClassUtils/isPresent(java.lang.String,java.lang.ClassLoader)|",
      "|java+method:///com/gemstone/gemfire/cache/GemFireCache/getName()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/data/gemfire/CacheFactoryBean/mergeProperties()|",
      "|java+method:///com/gemstone/gemfire/distributed/DistributedMember/getId()|",
      "|java+method:///java/lang/Thread/getContextClassLoader()|",
      "|java+method:///com/gemstone/gemfire/distributed/DistributedSystem/getName()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/distributed/DistributedSystem/getDistributedMember()|",
      "|java+method:///com/gemstone/gemfire/cache/CacheFactory/getVersion()|",
      "|java+method:///com/gemstone/gemfire/cache/GemFireCache/getDistributedSystem()|",
      "|java+method:///org/springframework/data/gemfire/CacheFactoryBean/createFactory(java.util.Properties)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/Thread/setContextClassLoader(java.lang.ClassLoader)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///org/springframework/util/Assert/isTrue(boolean,java.lang.String)|",
      "|java+constructor:///org/springframework/data/gemfire/GemfireBeanFactoryLocator/GemfireBeanFactoryLocator()|",
      "|java+method:///org/springframework/core/io/Resource/getInputStream()|",
      "|java+method:///org/apache/commons/logging/Log/info(java.lang.Object)|",
      "|java+method:///org/springframework/data/gemfire/CacheFactoryBean/fetchCache()|",
      "|java+method:///com/gemstone/gemfire/cache/GemFireCache/loadCacheXml(java.io.InputStream)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/springframework/data/gemfire/GemfireBeanFactoryLocator/setBeanFactory(org.springframework.beans.factory.BeanFactory)|",
      "|java+method:///org/springframework/data/gemfire/GemfireBeanFactoryLocator/setBeanName(java.lang.String)|",
      "|java+method:///org/springframework/data/gemfire/CacheFactoryBean/createCache(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/data/gemfire/CacheFactoryBean/applyPdxOptions(java.lang.Object)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/data/gemfire/GemfireBeanFactoryLocator/afterPropertiesSet()|",
      "|java+method:///com/gemstone/gemfire/distributed/DistributedMember/getHost()|",
      "|java+method:///org/springframework/util/ClassUtils/isPresent(java.lang.String,java.lang.ClassLoader)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/distributed/DistributedMember/getId()|",
      "|java+method:///org/springframework/data/gemfire/CacheFactoryBean/registerTransactionWriter()|",
      "|java+method:///java/lang/Thread/getContextClassLoader()|",
      "|java+method:///com/gemstone/gemfire/distributed/DistributedSystem/getName()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/distributed/DistributedSystem/getDistributedMember()|",
      "|java+method:///com/gemstone/gemfire/cache/CacheFactory/getVersion()|",
      "|java+method:///com/gemstone/gemfire/cache/GemFireCache/getDistributedSystem()|",
      "|java+method:///com/gemstone/gemfire/cache/GemFireCache/setCopyOnRead(boolean)|",
      "|java+method:///org/springframework/data/gemfire/CacheFactoryBean/createFactory(java.util.Properties)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/Thread/setContextClassLoader(java.lang.ClassLoader)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///com/gemstone/gemfire/cache/GemFireCache/getName()|",
      "|java+method:///org/springframework/data/gemfire/CacheFactoryBean/registerJndiDataSources()|",
      "|java+method:///org/springframework/util/Assert/isTrue(boolean,java.lang.String)|",
      "|java+constructor:///org/springframework/data/gemfire/GemfireBeanFactoryLocator/GemfireBeanFactoryLocator()|",
      "|java+method:///org/springframework/core/io/Resource/getInputStream()|",
      "|java+method:///org/springframework/data/gemfire/CacheFactoryBean/registerTransactionListeners()|",
      "|java+method:///org/apache/commons/logging/Log/info(java.lang.Object)|",
      "|java+method:///org/springframework/data/gemfire/CacheFactoryBean/initializeDynamicRegionFactory()|",
      "|java+method:///org/springframework/data/gemfire/CacheFactoryBean/applyInternalCacheOptions()|",
      "|java+method:///org/springframework/data/gemfire/CacheFactoryBean/fetchCache()|",
      "|java+method:///com/gemstone/gemfire/cache/GemFireCache/loadCacheXml(java.io.InputStream)|",
      "|java+method:///org/springframework/data/gemfire/CacheFactoryBean/mergeProperties()|",
      "|java+method:///org/springframework/data/gemfire/CacheFactoryBean/setHeapPercentages()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/springframework/data/gemfire/GemfireBeanFactoryLocator/setBeanFactory(org.springframework.beans.factory.BeanFactory)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/springframework/data/gemfire/GemfireBeanFactoryLocator/setBeanName(java.lang.String)|",
      "|java+method:///org/springframework/data/gemfire/CacheFactoryBean/createCache(java.lang.Object)|"
    ],
    "affectedLib": "org.springframework:spring-core:3.1.2.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework.data:spring-data-gemfire:1.1.2.RELEASE",
    "coordinatesV2": "org.springframework.data:spring-data-gemfire:1.2.0.RELEASE",
    "caller": "|java+method:///org/springframework/data/gemfire/config/CacheParser/resolveId(org.w3c.dom.Element,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.factory.xml.ParserContext)|",
    "called": "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/xml/AbstractSingleBeanDefinitionParser/resolveId(org.w3c.dom.Element,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.factory.xml.ParserContext)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/beans/factory/support/BeanDefinitionRegistry/registerAlias(java.lang.String,java.lang.String)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/xml/AbstractSimpleBeanDefinitionParser/resolveId(org.w3c.dom.Element,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.factory.xml.ParserContext)|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/getRegistry()|"
    ],
    "affectedLib": "org.springframework:spring-core:3.1.2.RELEASE",
    "change": "UPDATED"
  }
]