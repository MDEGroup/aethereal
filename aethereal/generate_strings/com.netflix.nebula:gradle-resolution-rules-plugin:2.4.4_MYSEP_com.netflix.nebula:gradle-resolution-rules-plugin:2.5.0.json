[
  {
    "coordinatesV1": "com.netflix.nebula:gradle-resolution-rules-plugin:2.4.4",
    "coordinatesV2": "com.netflix.nebula:gradle-resolution-rules-plugin:2.5.0",
    "caller": "|java+method:///nebula/plugin/resolutionrules/SubstituteRule$apply$2/execute(org.gradle.api.artifacts.DependencySubstitutions)|",
    "called": "|java+method:///com/netflix/nebula/dependencybase/DependencyManagement/addReason(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/gradle/api/artifacts/DependencySubstitutions$Substitution/with(org.gradle.api.artifacts.component.ComponentSelector)|",
      "|java+method:///org/gradle/api/artifacts/DependencySubstitutions/substitute(org.gradle.api.artifacts.component.ComponentSelector)|"
    ],
    "v2Body": [
      "|java+method:///org/gradle/api/artifacts/Configuration/getName()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/gradle/api/artifacts/DependencySubstitutions$Substitution/with(org.gradle.api.artifacts.component.ComponentSelector)|",
      "|java+method:///org/gradle/api/artifacts/DependencySubstitutions/substitute(org.gradle.api.artifacts.component.ComponentSelector)|",
      "|java+method:///com/netflix/nebula/dependencybase/DependencyManagement/addReason(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///nebula/plugin/resolutionrules/ResolutionRulesPlugin$Constants/getInsight()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/gradle/api/artifacts/component/ModuleComponentSelector/getGroup()|",
      "|java+method:///kotlin/jvm/internal/Intrinsics/checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/gradle/api/artifacts/component/ModuleComponentSelector/getModule()|",
      "|java+method:///nebula/plugin/resolutionrules/SubstituteRule/getReason()|"
    ],
    "affectedLib": "com.netflix.nebula:nebula-dependency-base-plugin:0.1.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.netflix.nebula:gradle-resolution-rules-plugin:2.4.4",
    "coordinatesV2": "com.netflix.nebula:gradle-resolution-rules-plugin:2.5.0",
    "caller": "|java+method:///nebula/plugin/resolutionrules/ReplaceRule$apply$1/execute(org.gradle.api.artifacts.ComponentModuleMetadata)|",
    "called": "|java+method:///com/netflix/nebula/dependencybase/DependencyManagement/addReason(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///kotlin/TypeCastException/TypeCastException(java.lang.String)|",
      "|java+method:///nebula/plugin/resolutionrules/ModuleIdentifier/toString()|",
      "|java+method:///org/gradle/api/artifacts/ComponentModuleMetadataDetails/replacedBy(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/gradle/api/artifacts/Configuration/getName()|",
      "|java+method:///org/gradle/api/artifacts/ModuleIdentifier/getName()|",
      "|java+constructor:///kotlin/TypeCastException/TypeCastException(java.lang.String)|",
      "|java+method:///com/netflix/nebula/dependencybase/DependencyManagement/addReason(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///nebula/plugin/resolutionrules/ModuleIdentifier/getName()|",
      "|java+method:///org/gradle/api/artifacts/ComponentModuleMetadataDetails/replacedBy(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///nebula/plugin/resolutionrules/ModuleIdentifier/getOrganization()|",
      "|java+method:///kotlin/jvm/internal/Intrinsics/checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)|",
      "|java+method:///org/gradle/api/artifacts/ModuleIdentifier/getGroup()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/gradle/api/artifacts/ComponentModuleMetadataDetails/getId()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///nebula/plugin/resolutionrules/ModuleIdentifier/toString()|",
      "|java+method:///nebula/plugin/resolutionrules/ResolutionRulesPlugin$Constants/getInsight()|"
    ],
    "affectedLib": "com.netflix.nebula:nebula-dependency-base-plugin:0.1.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.netflix.nebula:gradle-resolution-rules-plugin:2.4.4",
    "coordinatesV2": "com.netflix.nebula:gradle-resolution-rules-plugin:2.5.0",
    "caller": "|java+method:///nebula/plugin/resolutionrules/AlignRules$applyAligns$1/execute(org.gradle.api.artifacts.DependencyResolveDetails)|",
    "called": "|java+method:///com/netflix/nebula/dependencybase/DependencyManagement/addReason(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/gradle/api/artifacts/DependencyResolveDetails/getRequested()|",
      "|java+method:///nebula/plugin/resolutionrules/AlignRule/ruleMatches(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///nebula/plugin/resolutionrules/AlignRules$AlignedVersion/component1()|",
      "|java+method:///org/gradle/api/artifacts/ModuleVersionSelector/getGroup()|",
      "|java+method:///java/util/Collection/isEmpty()|",
      "|java+method:///org/gradle/api/logging/Logger/debug(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///nebula/plugin/resolutionrules/AlignRules/matchedVersion(nebula.plugin.resolutionrules.AlignRule,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/gradle/api/artifacts/ModuleVersionSelector/getVersion()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///nebula/plugin/resolutionrules/AlignRules$AlignedVersion/component2()|",
      "|java+method:///kotlin/collections/CollectionsKt/first(java.util.List)|",
      "|java+method:///kotlin/jvm/internal/Intrinsics/areEqual(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///nebula/plugin/resolutionrules/AlignRules/getLogger()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/gradle/api/artifacts/DependencyResolveDetails/useVersion(java.lang.String)|",
      "|java+method:///org/gradle/api/artifacts/DependencyResolveDetails/getTarget()|",
      "|java+method:///nebula/plugin/resolutionrules/AlignRules$AlignedVersion/getRule()|",
      "|java+method:///org/gradle/api/artifacts/ModuleVersionSelector/getName()|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///kotlin/jvm/internal/Intrinsics/checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/gradle/api/artifacts/DependencyResolveDetails/getRequested()|",
      "|java+method:///nebula/plugin/resolutionrules/AlignRule/ruleMatches(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///nebula/plugin/resolutionrules/AlignRules$AlignedVersion/component1()|",
      "|java+method:///org/gradle/api/artifacts/ModuleVersionSelector/getGroup()|",
      "|java+method:///java/util/Collection/isEmpty()|",
      "|java+method:///org/gradle/api/logging/Logger/debug(java.lang.String)|",
      "|java+method:///com/netflix/nebula/dependencybase/DependencyManagement/addReason(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///nebula/plugin/resolutionrules/ResolutionRulesPlugin$Constants/getInsight()|",
      "|java+method:///nebula/plugin/resolutionrules/AlignRules/matchedVersion(nebula.plugin.resolutionrules.AlignRule,java.lang.String)|",
      "|java+method:///org/gradle/api/artifacts/Configuration/getName()|",
      "|java+method:///org/gradle/api/artifacts/ModuleVersionSelector/getVersion()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///nebula/plugin/resolutionrules/AlignRules$AlignedVersion/component2()|",
      "|java+method:///kotlin/collections/CollectionsKt/first(java.util.List)|",
      "|java+method:///kotlin/jvm/internal/Intrinsics/areEqual(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///nebula/plugin/resolutionrules/AlignRules/getLogger()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/gradle/api/artifacts/DependencyResolveDetails/useVersion(java.lang.String)|",
      "|java+method:///org/gradle/api/artifacts/DependencyResolveDetails/getTarget()|",
      "|java+method:///nebula/plugin/resolutionrules/AlignRules$AlignedVersion/getRule()|",
      "|java+method:///org/gradle/api/artifacts/ModuleVersionSelector/getName()|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///kotlin/jvm/internal/Intrinsics/checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///nebula/plugin/resolutionrules/AlignRule/getName()|"
    ],
    "affectedLib": "com.netflix.nebula:nebula-dependency-base-plugin:0.1.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.netflix.nebula:gradle-resolution-rules-plugin:2.4.4",
    "coordinatesV2": "com.netflix.nebula:gradle-resolution-rules-plugin:2.5.0",
    "caller": "|java+method:///nebula/plugin/resolutionrules/SubstituteRule$apply$$inlined$action$1/execute(java.lang.Object)|",
    "called": "|java+method:///com/netflix/nebula/dependencybase/DependencyManagement/addReason(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///nebula/plugin/resolutionrules/RulesKt/getVersionScheme()|",
      "|java+method:///org/gradle/api/artifacts/component/ModuleComponentSelector/getVersion()|",
      "|java+method:///kotlin/jvm/internal/Intrinsics/areEqual(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/gradle/api/artifacts/component/ModuleComponentSelector/getGroup()|",
      "|java+method:///org/gradle/api/artifacts/DependencySubstitution/getRequested()|",
      "|java+method:///org/gradle/api/internal/artifacts/ivyservice/ivyresolve/strategy/VersionSelector/accept(java.lang.String)|",
      "|java+constructor:///kotlin/TypeCastException/TypeCastException(java.lang.String)|",
      "|java+method:///org/gradle/api/artifacts/component/ModuleComponentSelector/getModule()|",
      "|java+method:///org/gradle/api/internal/artifacts/ivyservice/ivyresolve/strategy/DefaultVersionSelectorScheme/parseSelector(java.lang.String)|",
      "|java+method:///org/gradle/api/artifacts/DependencySubstitution/useTarget(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///nebula/plugin/resolutionrules/RulesKt/getVersionScheme()|",
      "|java+method:///org/gradle/api/artifacts/Configuration/getName()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/netflix/nebula/dependencybase/DependencyManagement/addReason(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/gradle/api/artifacts/component/ModuleComponentSelector/getVersion()|",
      "|java+method:///nebula/plugin/resolutionrules/ResolutionRulesPlugin$Constants/getInsight()|",
      "|java+method:///kotlin/jvm/internal/Intrinsics/areEqual(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/gradle/api/artifacts/component/ModuleComponentSelector/getGroup()|",
      "|java+method:///org/gradle/api/artifacts/DependencySubstitution/getRequested()|",
      "|java+method:///org/gradle/api/internal/artifacts/ivyservice/ivyresolve/strategy/VersionSelector/accept(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///kotlin/TypeCastException/TypeCastException(java.lang.String)|",
      "|java+method:///org/gradle/api/artifacts/component/ModuleComponentSelector/getModule()|",
      "|java+method:///nebula/plugin/resolutionrules/SubstituteRule/getReason()|",
      "|java+method:///kotlin/jvm/internal/Intrinsics/checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)|",
      "|java+method:///org/gradle/api/internal/artifacts/ivyservice/ivyresolve/strategy/DefaultVersionSelectorScheme/parseSelector(java.lang.String)|",
      "|java+method:///org/gradle/api/artifacts/DependencySubstitution/useTarget(java.lang.Object)|"
    ],
    "affectedLib": "com.netflix.nebula:nebula-dependency-base-plugin:0.1.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.netflix.nebula:gradle-resolution-rules-plugin:2.4.4",
    "coordinatesV2": "com.netflix.nebula:gradle-resolution-rules-plugin:2.5.0",
    "caller": "|java+method:///nebula/plugin/resolutionrules/ResolutionRulesPlugin/rulesFromConfiguration(org.gradle.api.artifacts.Configuration,nebula.plugin.resolutionrules.NebulaResolutionRulesExtension)|",
    "called": "|java+method:///com/netflix/nebula/dependencybase/DependencyManagement/addPluginMessage(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/gradle/api/artifacts/Configuration/getName()|",
      "|java+method:///nebula/plugin/resolutionrules/RulesKt/flatten(java.util.Collection)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///kotlin/jvm/internal/Intrinsics/checkParameterIsNotNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/util/zip/ZipEntry/getName()|",
      "|java+method:///java/util/zip/ZipFile/entries()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/LinkedHashMap/values()|",
      "|java+method:///kotlin/text/StringsKt/endsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)|",
      "|java+method:///java/io/Closeable/close()|",
      "|java+method:///java/util/Enumeration/nextElement()|",
      "|java+constructor:///java/util/LinkedHashMap/LinkedHashMap()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///nebula/plugin/resolutionrules/ResolutionRulesPlugin/isIncludedRuleFile(java.lang.String,nebula.plugin.resolutionrules.NebulaResolutionRulesExtension)|",
      "|java+method:///java/io/File/getName()|",
      "|java+constructor:///java/util/zip/ZipFile/ZipFile(java.io.File)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/gradle/api/artifacts/Configuration/resolve()|",
      "|java+method:///org/gradle/api/logging/Logger/debug(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///kotlin/jvm/internal/Intrinsics/checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)|",
      "|java+method:///nebula/plugin/resolutionrules/ResolutionRulesPlugin/parseJsonFile(java.io.File)|",
      "|java+method:///org/gradle/api/logging/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/Enumeration/hasMoreElements()|",
      "|java+method:///nebula/plugin/resolutionrules/ResolutionRulesPlugin/putRules(java.util.Map,nebula.plugin.resolutionrules.RuleSet)|",
      "|java+method:///nebula/plugin/resolutionrules/ResolutionRulesPlugin/parseJsonStream(java.util.zip.ZipFile,java.util.zip.ZipEntry)|"
    ],
    "v2Body": [
      "|java+method:///org/gradle/api/artifacts/Configuration/getName()|",
      "|java+method:///nebula/plugin/resolutionrules/RulesKt/flatten(java.util.Collection)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///kotlin/jvm/internal/Intrinsics/checkParameterIsNotNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/util/zip/ZipEntry/getName()|",
      "|java+method:///java/util/zip/ZipFile/entries()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/LinkedHashMap/values()|",
      "|java+method:///kotlin/text/StringsKt/endsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)|",
      "|java+method:///java/io/Closeable/close()|",
      "|java+constructor:///java/util/LinkedHashMap/LinkedHashMap()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///nebula/plugin/resolutionrules/ResolutionRulesPlugin/isIncludedRuleFile(java.lang.String,nebula.plugin.resolutionrules.NebulaResolutionRulesExtension)|",
      "|java+method:///java/io/File/getName()|",
      "|java+constructor:///java/util/zip/ZipFile/ZipFile(java.io.File)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/gradle/api/artifacts/Configuration/resolve()|",
      "|java+method:///org/gradle/api/logging/Logger/debug(java.lang.String)|",
      "|java+method:///nebula/plugin/resolutionrules/ResolutionRulesPlugin$Constants/getInsight()|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///kotlin/jvm/internal/Intrinsics/checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)|",
      "|java+method:///nebula/plugin/resolutionrules/ResolutionRulesPlugin/parseJsonFile(java.io.File)|",
      "|java+method:///org/gradle/api/logging/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/Enumeration/hasMoreElements()|",
      "|java+method:///nebula/plugin/resolutionrules/ResolutionRulesPlugin/putRules(java.util.Map,nebula.plugin.resolutionrules.RuleSet)|",
      "|java+method:///nebula/plugin/resolutionrules/ResolutionRulesPlugin/parseJsonStream(java.util.zip.ZipFile,java.util.zip.ZipEntry)|",
      "|java+method:///java/util/Enumeration/nextElement()|",
      "|java+method:///com/netflix/nebula/dependencybase/DependencyManagement/addPluginMessage(java.lang.String)|"
    ],
    "affectedLib": "com.netflix.nebula:nebula-dependency-base-plugin:0.1.0",
    "change": "ADDED"
  }
]