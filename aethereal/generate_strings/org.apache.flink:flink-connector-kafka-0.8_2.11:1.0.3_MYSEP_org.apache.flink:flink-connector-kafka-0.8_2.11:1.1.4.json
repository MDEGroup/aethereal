[
  {
    "coordinatesV1": "org.apache.flink:flink-connector-kafka-0.8_2.11:1.0.3",
    "coordinatesV2": "org.apache.flink:flink-connector-kafka-0.8_2.11:1.1.4",
    "caller": "|java+method:///org/apache/flink/streaming/connectors/kafka/FlinkKafkaConsumer08/getPartitionsForTopic(java.util.List,java.util.Properties)|",
    "called": "|java+constructor:///org/apache/flink/streaming/connectors/kafka/internals/KafkaTopicPartitionLeader/KafkaTopicPartitionLeader(org.apache.flink.streaming.connectors.kafka.internals.KafkaTopicPartition,org.apache.kafka.common.Node)|",
    "v1Body": [
      "|java+method:///kafka/javaapi/consumer/SimpleConsumer/send(kafka.javaapi.TopicMetadataRequest)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///kafka/javaapi/TopicMetadata/partitionsMetadata()|",
      "|java+method:///kafka/javaapi/PartitionMetadata/partitionId()|",
      "|java+method:///java/util/Random/nextInt(int)|",
      "|java+method:///java/lang/Throwable/getMessage()|",
      "|java+method:///org/apache/flink/streaming/connectors/kafka/util/KafkaUtils/getIntFromConfig(java.util.Properties,java.lang.String,int)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/clear()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///kafka/javaapi/TopicMetadataResponse/topicsMetadata()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Throwable)|",
      "|java+method:///kafka/javaapi/TopicMetadata/errorCode()|",
      "|java+method:///java/lang/Thread/sleep(long)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/util/Objects/requireNonNull(java.lang.Object,java.lang.String)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+constructor:///org/apache/flink/streaming/connectors/kafka/internals/KafkaTopicPartitionLeader/KafkaTopicPartitionLeader(org.apache.flink.streaming.connectors.kafka.internals.KafkaTopicPartition,org.apache.kafka.common.Node)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///kafka/javaapi/consumer/SimpleConsumer/close()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/flink/streaming/connectors/kafka/FlinkKafkaConsumer08/brokerToNode(kafka.cluster.Broker)|",
      "|java+method:///kafka/common/ErrorMapping/exceptionFor(short)|",
      "|java+method:///org/apache/flink/util/NetUtils/getCorrectHostnamePort(java.lang.String)|",
      "|java+method:///java/net/URL/getPort()|",
      "|java+constructor:///java/util/Random/Random()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///kafka/javaapi/TopicMetadataRequest/TopicMetadataRequest(java.util.List)|",
      "|java+method:///kafka/common/ErrorMapping/NoError()|",
      "|java+constructor:///org/apache/flink/streaming/connectors/kafka/internals/KafkaTopicPartition/KafkaTopicPartition(java.lang.String,int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/contains(java.lang.Object)|",
      "|java+method:///kafka/javaapi/PartitionMetadata/leader()|",
      "|java+method:///java/net/URL/getHost()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///kafka/javaapi/TopicMetadata/topic()|",
      "|java+constructor:///kafka/javaapi/consumer/SimpleConsumer/SimpleConsumer(java.lang.String,int,int,int,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Exception/getMessage()|"
    ],
    "v2Body": [
      "|java+method:///kafka/javaapi/consumer/SimpleConsumer/send(kafka.javaapi.TopicMetadataRequest)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///kafka/javaapi/TopicMetadata/partitionsMetadata()|",
      "|java+method:///kafka/javaapi/PartitionMetadata/partitionId()|",
      "|java+method:///java/util/Random/nextInt(int)|",
      "|java+method:///java/lang/Throwable/getMessage()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/clear()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///kafka/javaapi/TopicMetadataResponse/topicsMetadata()|",
      "|java+method:///org/apache/flink/util/PropertiesUtil/getInt(java.util.Properties,java.lang.String,int)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Throwable)|",
      "|java+method:///kafka/javaapi/TopicMetadata/errorCode()|",
      "|java+method:///java/lang/Thread/sleep(long)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+constructor:///org/apache/flink/streaming/connectors/kafka/internals/KafkaTopicPartitionLeader/KafkaTopicPartitionLeader(org.apache.flink.streaming.connectors.kafka.internals.KafkaTopicPartition,org.apache.kafka.common.Node)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///org/apache/flink/util/Preconditions/checkNotNull(java.lang.Object,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///kafka/javaapi/consumer/SimpleConsumer/close()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/flink/streaming/connectors/kafka/FlinkKafkaConsumer08/brokerToNode(kafka.cluster.Broker)|",
      "|java+method:///kafka/common/ErrorMapping/exceptionFor(short)|",
      "|java+method:///org/apache/flink/util/NetUtils/getCorrectHostnamePort(java.lang.String)|",
      "|java+method:///java/net/URL/getPort()|",
      "|java+constructor:///java/util/Random/Random()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///kafka/javaapi/TopicMetadataRequest/TopicMetadataRequest(java.util.List)|",
      "|java+method:///kafka/common/ErrorMapping/NoError()|",
      "|java+constructor:///org/apache/flink/streaming/connectors/kafka/internals/KafkaTopicPartition/KafkaTopicPartition(java.lang.String,int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/contains(java.lang.Object)|",
      "|java+method:///kafka/javaapi/PartitionMetadata/leader()|",
      "|java+method:///java/net/URL/getHost()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///kafka/javaapi/TopicMetadata/topic()|",
      "|java+constructor:///kafka/javaapi/consumer/SimpleConsumer/SimpleConsumer(java.lang.String,int,int,int,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Exception/getMessage()|"
    ],
    "affectedLib": "org.apache.flink:flink-connector-kafka-base_2.11:1.1.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.flink:flink-connector-kafka-0.8_2.11:1.0.3",
    "coordinatesV2": "org.apache.flink:flink-connector-kafka-0.8_2.11:1.1.4",
    "caller": "|java+constructor:///org/apache/flink/streaming/connectors/kafka/FlinkKafkaConsumer08/FlinkKafkaConsumer08(java.util.List,org.apache.flink.streaming.util.serialization.KeyedDeserializationSchema,java.util.Properties)|",
    "called": "|java+method:///org/apache/flink/streaming/connectors/kafka/internals/KafkaTopicPartition/dropLeaderData(java.util.List)|",
    "v1Body": [
      "|java+method:///org/apache/flink/streaming/connectors/kafka/internals/KafkaTopicPartition/dropLeaderData(java.util.List)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///org/apache/flink/streaming/connectors/kafka/FlinkKafkaConsumerBase/FlinkKafkaConsumerBase(org.apache.flink.streaming.util.serialization.KeyedDeserializationSchema,java.util.Properties)|",
      "|java+method:///org/apache/flink/streaming/connectors/kafka/FlinkKafkaConsumer08/getPartitionsForTopic(java.util.List,java.util.Properties)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/isInfoEnabled()|",
      "|java+method:///org/apache/flink/streaming/connectors/kafka/FlinkKafkaConsumer08/logPartitionInfo(java.util.List)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/util/Objects/requireNonNull(java.lang.Object,java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/flink/streaming/connectors/kafka/FlinkKafkaConsumer08/validateZooKeeperConfig(java.util.Properties)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/flink/util/Preconditions/checkNotNull(java.lang.Object,java.lang.String)|",
      "|java+method:///org/apache/flink/streaming/connectors/kafka/internals/KafkaTopicPartition/dropLeaderData(java.util.List)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/flink/util/PropertiesUtil/getLong(java.util.Properties,java.lang.String,long)|",
      "|java+method:///org/apache/flink/streaming/connectors/kafka/FlinkKafkaConsumer08/getPartitionsForTopic(java.util.List,java.util.Properties)|",
      "|java+method:///org/apache/flink/streaming/connectors/kafka/FlinkKafkaConsumer08/setSubscribedPartitions(java.util.List)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/isInfoEnabled()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/flink/streaming/connectors/kafka/FlinkKafkaConsumerBase/FlinkKafkaConsumerBase(org.apache.flink.streaming.util.serialization.KeyedDeserializationSchema)|",
      "|java+method:///org/apache/flink/streaming/connectors/kafka/FlinkKafkaConsumer08/logPartitionInfo(org.slf4j.Logger,java.util.List)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/flink/streaming/connectors/kafka/FlinkKafkaConsumer08/validateZooKeeperConfig(java.util.Properties)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/flink/streaming/connectors/kafka/FlinkKafkaConsumer08/getInvalidOffsetBehavior(java.util.Properties)|"
    ],
    "affectedLib": "org.apache.flink:flink-connector-kafka-base_2.11:1.1.4",
    "change": "UPDATED"
  }
]