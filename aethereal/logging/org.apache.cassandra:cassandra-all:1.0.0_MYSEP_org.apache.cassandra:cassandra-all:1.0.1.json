[
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.0",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.0.1",
    "caller": "|java+constructor:///org/apache/cassandra/hadoop/ColumnFamilyRecordWriter/ColumnFamilyRecordWriter(org.apache.hadoop.conf.Configuration)|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/RecordWriter/RecordWriter()|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getWriteConsistencyLevel(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInitialAddress(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/mapreduce/RecordWriter/RecordWriter()|",
      "|java+method:///org/apache/cassandra/thrift/ConsistencyLevel/valueOf(java.lang.String)|",
      "|java+method:///java/lang/Runtime/availableProcessors()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getInt(java.lang.String,int)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getRpcPort(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getLong(java.lang.String,long)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getOutputKeyspace(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/Runtime/getRuntime()|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getPartitioner(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///org/apache/cassandra/client/RingCache/RingCache(java.lang.String,org.apache.cassandra.dht.IPartitioner,java.lang.String,int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getWriteConsistencyLevel(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/RecordWriter/RecordWriter()|",
      "|java+constructor:///org/apache/cassandra/client/RingCache/RingCache(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/thrift/ConsistencyLevel/valueOf(java.lang.String)|",
      "|java+method:///java/lang/Runtime/availableProcessors()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getInt(java.lang.String,int)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getLong(java.lang.String,long)|",
      "|java+method:///java/lang/Runtime/getRuntime()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.203.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.0",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.0.1",
    "caller": "|java+method:///org/apache/cassandra/thrift/CassandraServer/describe_ring(java.lang.String)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/TokenRange/TokenRange(java.lang.String,java.lang.String,java.util.List)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/Schema/getNonSystemTables()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/net/InetAddress/getHostAddress()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getRpcaddress(java.net.InetAddress)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/List/contains(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///org/apache/cassandra/thrift/TokenRange/TokenRange(java.lang.String,java.lang.String,java.util.List)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getRangeToAddressMap(java.lang.String)|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getTokenFactory()|",
      "|java+method:///org/apache/cassandra/dht/Token$TokenFactory/toString(org.apache.cassandra.dht.Token)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/cassandra/config/Schema/getNonSystemTables()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/getBroadcastAddress()|",
      "|java+method:///org/apache/cassandra/gms/EndpointState/getApplicationState(org.apache.cassandra.gms.ApplicationState)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRpcAddress()|",
      "|java+method:///org/apache/cassandra/thrift/TokenRange/setRpc_endpoints(java.util.List)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/net/InetAddress/equals(java.lang.Object)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/net/InetAddress/getHostAddress()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getRpcaddress(java.net.InetAddress)|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/TokenRange/setEndpoint_details(java.util.List)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/locator/IEndpointSnitch/getDatacenter(java.net.InetAddress)|",
      "|java+constructor:///org/apache/cassandra/thrift/EndpointDetails/EndpointDetails()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/contains(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getEndpointSnitch()|",
      "|java+constructor:///org/apache/cassandra/thrift/TokenRange/TokenRange(java.lang.String,java.lang.String,java.util.List)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getRangeToAddressMap(java.lang.String)|",
      "|java+method:///org/apache/cassandra/gms/Gossiper/getEndpointStateForEndpoint(java.net.InetAddress)|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getTokenFactory()|",
      "|java+method:///org/apache/cassandra/dht/Token$TokenFactory/toString(org.apache.cassandra.dht.Token)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.0.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.0",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.0.1",
    "caller": "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyInputFormat/getRangeMap(org.apache.hadoop.conf.Configuration)|",
    "called": "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_ring(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInitialAddress(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getRpcPort(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_ring(java.lang.String)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputKeyspace(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyInputFormat/createConnection(java.lang.String,java.lang.Integer,boolean)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getClientFromAddressList(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_ring(java.lang.String)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputKeyspace(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.0.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.0",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.0.1",
    "caller": "|java+method:///org/apache/cassandra/cli/CliClient/executeAddColumnFamily(org.antlr.runtime.tree.Tree)|",
    "called": "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/system_add_column_family(org.apache.cassandra.thrift.CfDef)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_keyspace(java.lang.String)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/CfDef/CfDef(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliUtils/unescapeSQLString(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/hasKeySpace()|",
      "|java+method:///org/apache/cassandra/cli/CliMain/isConnected()|",
      "|java+method:///org/antlr/runtime/tree/Tree/getText()|",
      "|java+method:///java/lang/Exception/getMessage()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/updateCfDefAttributes(org.antlr.runtime.tree.Tree,org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getChild(int)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/system_add_column_family(org.apache.cassandra.thrift.CfDef)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/InvalidRequestException/getWhy()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/validateSchemaIsSettled(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_keyspace(java.lang.String)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/CfDef/CfDef(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/hasKeySpace()|",
      "|java+method:///org/apache/cassandra/cli/CliMain/isConnected()|",
      "|java+method:///org/antlr/runtime/tree/Tree/getText()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/validateSchemaIsSettled(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/updateCfDefAttributes(org.antlr.runtime.tree.Tree,org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/cli/CliUtils/unescapeSQLString(java.lang.String)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getChild(int)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/system_add_column_family(org.apache.cassandra.thrift.CfDef)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.0.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.0",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.0.1",
    "caller": "|java+method:///org/apache/cassandra/cql/QueryProcessor/process(java.lang.String,org.apache.cassandra.service.ClientState)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/CqlMetadata/CqlMetadata(java.util.Map,java.util.Map,java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/bytes(long)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getColumnDefinition(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/cql/BatchStatement/getConsistencyLevel()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getColumnFamily()|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/truncateBlocking(java.lang.String,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getColumnNames()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql/CreateKeyspaceStatement/getStrategyOptions()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getKeyFinish()|",
      "|java+constructor:///org/apache/cassandra/db/migration/UpdateColumnFamily/UpdateColumnFamily(org.apache.cassandra.db.migration.avro.CfDef)|",
      "|java+method:///org/apache/cassandra/cql/CreateKeyspaceStatement/validate()|",
      "|java+method:///org/apache/cassandra/cql/DeleteStatement/getConsistencyLevel()|",
      "|java+method:///java/util/Collections/emptyMap()|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql/CreateIndexStatement/getColumnFamily()|",
      "|java+method:///org/apache/cassandra/cql/BatchStatement/isSetTimestamp()|",
      "|java+method:///org/apache/cassandra/cql/Term/getByteBuffer(org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///java/nio/ByteBuffer/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKsDef(org.apache.cassandra.thrift.KsDef)|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/multiRangeSlice(java.lang.String,org.apache.cassandra.cql.SelectStatement)|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/setStrategy_options(java.util.Map)|",
      "|java+method:///org/apache/cassandra/cql/UpdateStatement/getConsistencyLevel()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/isColumnsReversed()|",
      "|java+method:///org/apache/cassandra/cql/Term/getByteBuffer()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/extractKeyAliasFromColumns(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/getStatement(java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/marshal/AbstractType/getString(java.nio.ByteBuffer)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Collections/reverse(java.util.List)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/setIndex_type(org.apache.cassandra.thrift.IndexType)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/getSortedColumns()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasKeyspaceSchemaAccess(org.apache.cassandra.auth.Permission)|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/isCountOperation()|",
      "|java+method:///org/apache/cassandra/cql/DropIndexStatement/generateMutation(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/db/migration/AddKeyspace/AddKeyspace(org.apache.cassandra.config.KSMetaData)|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/applyMigrationOnStage(org.apache.cassandra.db.migration.Migration)|",
      "|java+method:///java/io/IOException/toString()|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/getKeyString(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/cql/AlterTableStatement/getCfDef(java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/IColumn/name()|",
      "|java+method:///org/apache/cassandra/cql/CreateIndexStatement/getIndexName()|",
      "|java+method:///org/apache/cassandra/cql/CreateKeyspaceStatement/getName()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/isWildcard()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/cql/Term/getText()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql/BatchStatement/getStatements()|",
      "|java+method:///org/apache/cassandra/cql/CreateIndexStatement/getColumnName()|",
      "|java+constructor:///org/apache/cassandra/db/migration/DropColumnFamily/DropColumnFamily(java.lang.String,java.lang.String)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError(java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/thrift/TimedOutException/TimedOutException()|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/getSlice(java.lang.String,org.apache.cassandra.cql.SelectStatement)|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/getIndexedSlices(java.lang.String,org.apache.cassandra.cql.SelectStatement)|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+method:///org/apache/cassandra/thrift/Column/setValue(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/isColumnRange()|",
      "|java+method:///java/io/IOException/getMessage()|",
      "|java+constructor:///org/apache/cassandra/thrift/Column/Column(java.nio.ByteBuffer)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/mutate(java.util.List,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/toString()|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/getValidator()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/isKeyRange()|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/batchUpdate(org.apache.cassandra.service.ClientState,java.util.List,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///org/apache/cassandra/thrift/CqlResult/CqlResult()|",
      "|java+method:///org/apache/cassandra/thrift/Column/setName(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getColumnRelations()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/fromThrift(org.apache.cassandra.thrift.CfDef)|",
      "|java+constructor:///org/apache/cassandra/db/migration/AddColumnFamily/AddColumnFamily(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/thriftify(org.apache.cassandra.db.IColumn)|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/getMessage()|",
      "|java+constructor:///org/apache/cassandra/thrift/CqlMetadata/CqlMetadata(java.util.Map,java.util.Map,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/getColumn(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/Column/setTimestamp(long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getDefaultValidator()|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasColumnFamilyAccess(java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/cql/BatchStatement/getMutations(java.lang.String,org.apache.cassandra.service.ClientState)|",
      "|java+method:///java/util/EnumSet/contains(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/validateSelect(java.lang.String,org.apache.cassandra.cql.SelectStatement)|",
      "|java+method:///org/slf4j/Logger/trace(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/db/IColumn/isMarkedForDelete()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/toAvro()|",
      "|java+method:///org/apache/cassandra/db/marshal/AbstractType/toString()|",
      "|java+method:///org/apache/cassandra/config/Schema/getCFMetaData(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql/DeleteStatement/prepareRowMutations(java.lang.String,org.apache.cassandra.service.ClientState)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getKeyValidator()|",
      "|java+method:///org/apache/cassandra/thrift/InvalidRequestException/initCause(java.lang.Throwable)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/thrift/KsDef/KsDef(java.lang.String,java.lang.String,java.util.List)|",
      "|java+method:///org/apache/cassandra/service/ClientState/getKeyspace()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getKeyAlias()|",
      "|java+method:///org/apache/cassandra/cql/StatementType/ordinal()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKeyspaceNotYetExisting(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/validateSchemaAgreement()|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/validateCountOperation(org.apache.cassandra.cql.SelectStatement)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/setIndex_name(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/db/migration/DropKeyspace/DropKeyspace(java.lang.String)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/bytes(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/UnavailableException/UnavailableException()|",
      "|java+constructor:///org/apache/cassandra/thrift/Column/Column()|",
      "|java+constructor:///org/apache/cassandra/thrift/CqlRow/CqlRow()|",
      "|java+method:///org/apache/cassandra/cql/CreateColumnFamilyStatement/getCFMetaData(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getKeys()|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasColumnFamilySchemaAccess(org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/cql/BatchStatement/getTimeToLive()|",
      "|java+method:///org/apache/cassandra/config/KSMetaData/fromThrift(org.apache.cassandra.thrift.KsDef,org.apache.cassandra.config.CFMetaData%5B%5D)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/cassandra/cql/AbstractModification/isSetTimestamp()|",
      "|java+method:///org/apache/cassandra/cql/CreateKeyspaceStatement/getStrategyClass()|",
      "|java+method:///org/apache/cassandra/cql/StatementType/toString()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/toThrift()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateCfDef(org.apache.cassandra.thrift.CfDef,org.apache.cassandra.config.CFMetaData)|",
      "|java+constructor:///org/apache/cassandra/thrift/CqlRow/CqlRow(java.nio.ByteBuffer,java.util.List)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getKeyName()|",
      "|java+method:///org/apache/cassandra/cql/AbstractModification/isSetConsistencyLevel()|",
      "|java+method:///org/apache/cassandra/db/marshal/TypeParser/getShortName(org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///org/apache/cassandra/thrift/UnavailableException/initCause(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/addDefaultIndexNames(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///org/apache/cassandra/service/ClientState/setKeyspace(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/validateKeyAlias(org.apache.cassandra.config.CFMetaData,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/bytes(long)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getColumnDefinition(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/isSetKeyspace()|",
      "|java+method:///org/apache/cassandra/cql/BatchStatement/getConsistencyLevel()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getColumnFamily()|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/truncateBlocking(java.lang.String,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getColumnNames()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/multiRangeSlice(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.cql.SelectStatement)|",
      "|java+method:///org/apache/cassandra/cql/CreateKeyspaceStatement/getStrategyOptions()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getKeyFinish()|",
      "|java+constructor:///org/apache/cassandra/db/migration/UpdateColumnFamily/UpdateColumnFamily(org.apache.cassandra.db.migration.avro.CfDef)|",
      "|java+method:///org/apache/cassandra/cql/CreateKeyspaceStatement/validate()|",
      "|java+method:///org/apache/cassandra/cql/DeleteStatement/getConsistencyLevel()|",
      "|java+method:///java/util/Collections/emptyMap()|",
      "|java+constructor:///org/apache/cassandra/thrift/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql/CreateIndexStatement/getColumnFamily()|",
      "|java+method:///org/apache/cassandra/cql/BatchStatement/isSetTimestamp()|",
      "|java+method:///org/apache/cassandra/cql/Term/getByteBuffer(org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///java/nio/ByteBuffer/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKsDef(org.apache.cassandra.thrift.KsDef)|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/setStrategy_options(java.util.Map)|",
      "|java+method:///org/apache/cassandra/cql/UpdateStatement/getConsistencyLevel()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/isColumnsReversed()|",
      "|java+method:///org/apache/cassandra/cql/Term/getByteBuffer()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/extractKeyAliasFromColumns(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/getStatement(java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/marshal/AbstractType/getString(java.nio.ByteBuffer)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Collections/reverse(java.util.List)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/setIndex_type(org.apache.cassandra.thrift.IndexType)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/getSortedColumns()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasKeyspaceSchemaAccess(org.apache.cassandra.auth.Permission)|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/isCountOperation()|",
      "|java+method:///org/apache/cassandra/cql/DropIndexStatement/generateMutation(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/db/migration/AddKeyspace/AddKeyspace(org.apache.cassandra.config.KSMetaData)|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/applyMigrationOnStage(org.apache.cassandra.db.migration.Migration)|",
      "|java+method:///java/io/IOException/toString()|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/getSlice(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.cql.SelectStatement)|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/getIndexedSlices(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.cql.SelectStatement)|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/getKeyString(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateTable(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql/AlterTableStatement/getCfDef(java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/IColumn/name()|",
      "|java+method:///org/apache/cassandra/cql/CreateIndexStatement/getIndexName()|",
      "|java+method:///org/apache/cassandra/cql/CreateKeyspaceStatement/getName()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/isWildcard()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/cql/Term/getText()|",
      "|java+method:///org/apache/cassandra/cli/CliUtils/unescapeSQLString(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql/BatchStatement/getStatements()|",
      "|java+method:///org/apache/cassandra/cql/CreateIndexStatement/getColumnName()|",
      "|java+constructor:///org/apache/cassandra/db/migration/DropColumnFamily/DropColumnFamily(java.lang.String,java.lang.String)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError(java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/thrift/TimedOutException/TimedOutException()|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+method:///org/apache/cassandra/thrift/Column/setValue(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/isColumnRange()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getKeyspace()|",
      "|java+method:///java/io/IOException/getMessage()|",
      "|java+constructor:///org/apache/cassandra/thrift/Column/Column(java.nio.ByteBuffer)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/mutate(java.util.List,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/toString()|",
      "|java+method:///org/apache/cassandra/config/ColumnDefinition/getValidator()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/isKeyRange()|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/batchUpdate(org.apache.cassandra.service.ClientState,java.util.List,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///org/apache/cassandra/thrift/CqlResult/CqlResult()|",
      "|java+method:///org/apache/cassandra/thrift/Column/setName(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getColumnRelations()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/fromThrift(org.apache.cassandra.thrift.CfDef)|",
      "|java+constructor:///org/apache/cassandra/db/migration/AddColumnFamily/AddColumnFamily(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/thriftify(org.apache.cassandra.db.IColumn)|",
      "|java+method:///org/apache/cassandra/config/ConfigurationException/getMessage()|",
      "|java+constructor:///org/apache/cassandra/thrift/CqlMetadata/CqlMetadata(java.util.Map,java.util.Map,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/getColumn(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/Column/setTimestamp(long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getDefaultValidator()|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasColumnFamilyAccess(java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/cql/BatchStatement/getMutations(java.lang.String,org.apache.cassandra.service.ClientState)|",
      "|java+method:///java/util/EnumSet/contains(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/validateSelect(java.lang.String,org.apache.cassandra.cql.SelectStatement)|",
      "|java+method:///org/apache/cassandra/service/ClientState/getRawKeyspace()|",
      "|java+method:///org/slf4j/Logger/trace(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/db/IColumn/isMarkedForDelete()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/toAvro()|",
      "|java+method:///org/apache/cassandra/db/marshal/AbstractType/toString()|",
      "|java+method:///org/apache/cassandra/config/Schema/getCFMetaData(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql/DeleteStatement/prepareRowMutations(java.lang.String,org.apache.cassandra.service.ClientState)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getKeyValidator()|",
      "|java+method:///org/apache/cassandra/thrift/InvalidRequestException/initCause(java.lang.Throwable)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/thrift/KsDef/KsDef(java.lang.String,java.lang.String,java.util.List)|",
      "|java+method:///org/apache/cassandra/service/ClientState/getKeyspace()|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getKeyAlias()|",
      "|java+method:///org/apache/cassandra/cql/StatementType/ordinal()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKeyspaceNotYetExisting(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/validateSchemaAgreement()|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/validateCountOperation(org.apache.cassandra.cql.SelectStatement)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/setIndex_name(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/db/migration/DropKeyspace/DropKeyspace(java.lang.String)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/bytes(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/UnavailableException/UnavailableException()|",
      "|java+constructor:///org/apache/cassandra/thrift/Column/Column()|",
      "|java+constructor:///org/apache/cassandra/thrift/CqlRow/CqlRow()|",
      "|java+method:///org/apache/cassandra/cql/CreateColumnFamilyStatement/getCFMetaData(java.lang.String)|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasColumnFamilyAccess(java.lang.String,java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/cql/SelectStatement/getKeys()|",
      "|java+method:///org/apache/cassandra/service/ClientState/hasColumnFamilySchemaAccess(org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/cql/BatchStatement/getTimeToLive()|",
      "|java+method:///org/apache/cassandra/config/KSMetaData/fromThrift(org.apache.cassandra.thrift.KsDef,org.apache.cassandra.config.CFMetaData%5B%5D)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/cassandra/cql/AbstractModification/isSetTimestamp()|",
      "|java+method:///org/apache/cassandra/cql/CreateKeyspaceStatement/getStrategyClass()|",
      "|java+method:///org/apache/cassandra/cql/StatementType/toString()|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/toThrift()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateCfDef(org.apache.cassandra.thrift.CfDef,org.apache.cassandra.config.CFMetaData)|",
      "|java+constructor:///org/apache/cassandra/thrift/CqlRow/CqlRow(java.nio.ByteBuffer,java.util.List)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/getKeyName()|",
      "|java+method:///org/apache/cassandra/cql/AbstractModification/isSetConsistencyLevel()|",
      "|java+method:///org/apache/cassandra/db/marshal/TypeParser/getShortName(org.apache.cassandra.db.marshal.AbstractType)|",
      "|java+method:///org/apache/cassandra/thrift/UnavailableException/initCause(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/config/CFMetaData/addDefaultIndexNames(org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///org/apache/cassandra/service/ClientState/setKeyspace(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/cql/QueryProcessor/validateKeyAlias(org.apache.cassandra.config.CFMetaData,java.lang.String)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.0.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.0",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.0.1",
    "caller": "|java+method:///org/apache/cassandra/cli/CliClient/executeGetWithConditions(org.antlr.runtime.tree.Tree)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/IndexExpression/IndexExpression(java.nio.ByteBuffer,org.apache.cassandra.thrift.IndexOperator,java.nio.ByteBuffer)|",
    "v1Body": [
      "|java+constructor:///org/apache/cassandra/thrift/IndexExpression/IndexExpression(java.nio.ByteBuffer,org.apache.cassandra.thrift.IndexOperator,java.nio.ByteBuffer)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getType()|",
      "|java+method:///org/apache/cassandra/thrift/IndexClause/setCount(int)|",
      "|java+method:///org/apache/cassandra/cli/CliUtils/unescapeSQLString(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/hasKeySpace()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/cli/CliCompiler/getColumnFamily(org.antlr.runtime.tree.Tree,java.util.List)|",
      "|java+constructor:///org/apache/cassandra/thrift/ColumnParent/ColumnParent(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/IndexClause/addToExpressions(org.apache.cassandra.thrift.IndexExpression)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/columnNameAsBytes(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/SliceRange/setFinish(byte%5B%5D)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getText()|",
      "|java+method:///java/lang/Exception/getMessage()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/convertValueByFunction(org.antlr.runtime.tree.Tree,org.apache.cassandra.thrift.CfDef,java.nio.ByteBuffer)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getChildCount()|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/get_indexed_slices(org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.IndexClause,org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/cli/CliUtils/getIndexOperator(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/printSliceList(org.apache.cassandra.thrift.CfDef,java.util.List)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/columnValueAsBytes(java.nio.ByteBuffer,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getCfDef(java.lang.String)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getChild(int)|",
      "|java+method:///org/apache/cassandra/thrift/SlicePredicate/setSlice_range(org.apache.cassandra.thrift.SliceRange)|",
      "|java+method:///org/apache/cassandra/cli/CliMain/isConnected()|",
      "|java+method:///org/apache/cassandra/thrift/IndexClause/setStart_key(byte%5B%5D)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/SliceRange/SliceRange()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/SlicePredicate/SlicePredicate()|",
      "|java+method:///org/apache/cassandra/thrift/InvalidRequestException/getWhy()|",
      "|java+constructor:///org/apache/cassandra/thrift/IndexClause/IndexClause()|",
      "|java+method:///org/apache/cassandra/thrift/SliceRange/setStart(byte%5B%5D)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/cassandra/thrift/IndexExpression/IndexExpression(java.nio.ByteBuffer,org.apache.cassandra.thrift.IndexOperator,java.nio.ByteBuffer)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getType()|",
      "|java+method:///org/apache/cassandra/thrift/IndexClause/setCount(int)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/hasKeySpace()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/cli/CliCompiler/getColumnFamily(org.antlr.runtime.tree.Tree,java.util.List)|",
      "|java+constructor:///org/apache/cassandra/thrift/ColumnParent/ColumnParent(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/IndexClause/addToExpressions(org.apache.cassandra.thrift.IndexExpression)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/columnNameAsBytes(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/SliceRange/setFinish(byte%5B%5D)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getText()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/convertValueByFunction(org.antlr.runtime.tree.Tree,org.apache.cassandra.thrift.CfDef,java.nio.ByteBuffer)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getChildCount()|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/get_indexed_slices(org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.IndexClause,org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/cli/CliUtils/getIndexOperator(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/cli/CliUtils/unescapeSQLString(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/printSliceList(org.apache.cassandra.thrift.CfDef,java.util.List)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/columnValueAsBytes(java.nio.ByteBuffer,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getCfDef(java.lang.String)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getChild(int)|",
      "|java+method:///org/apache/cassandra/thrift/SlicePredicate/setSlice_range(org.apache.cassandra.thrift.SliceRange)|",
      "|java+method:///org/apache/cassandra/cli/CliMain/isConnected()|",
      "|java+method:///org/apache/cassandra/thrift/IndexClause/setStart_key(byte%5B%5D)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/SliceRange/SliceRange()|",
      "|java+constructor:///org/apache/cassandra/thrift/SlicePredicate/SlicePredicate()|",
      "|java+constructor:///org/apache/cassandra/thrift/IndexClause/IndexClause()|",
      "|java+method:///org/apache/cassandra/thrift/SliceRange/setStart(byte%5B%5D)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.0.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.0",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.0.1",
    "caller": "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/keyRangeFromString(java.lang.String)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/KeyRange/KeyRange()|",
    "v1Body": [
      "|java+constructor:///org/apache/cassandra/thrift/TBinaryProtocol$Factory/TBinaryProtocol$Factory()|",
      "|java+method:///org/apache/thrift/TDeserializer/deserialize(org.apache.thrift.TBase,byte%5B%5D)|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/hexToBytes(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+constructor:///org/apache/cassandra/thrift/KeyRange/KeyRange()|",
      "|java+constructor:///org/apache/thrift/TDeserializer/TDeserializer(org.apache.thrift.protocol.TProtocolFactory)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/cassandra/thrift/TBinaryProtocol$Factory/TBinaryProtocol$Factory()|",
      "|java+method:///org/apache/thrift/TDeserializer/deserialize(org.apache.thrift.TBase,byte%5B%5D)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+constructor:///org/apache/cassandra/thrift/KeyRange/KeyRange()|",
      "|java+method:///org/apache/cassandra/utils/Hex/hexToBytes(java.lang.String)|",
      "|java+constructor:///org/apache/thrift/TDeserializer/TDeserializer(org.apache.thrift.protocol.TProtocolFactory)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.0.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.0",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.0.1",
    "caller": "|java+method:///org/apache/cassandra/cli/CliClient/columnValueAsBytes(java.nio.ByteBuffer,java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/apache/cassandra/thrift/ColumnDef/getName()|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/thrift/CfDef/getColumn_metadata()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/getName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getFormatType(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/bytes(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/Exception/getMessage()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/getValidation_class()|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/compare(byte%5B%5D,java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getCfDef(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getBytesAccordingToType(java.lang.String,org.apache.cassandra.db.marshal.AbstractType)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/thrift/CfDef/getColumn_metadata()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/getName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getFormatType(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/bytes(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/getValidation_class()|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/compare(byte%5B%5D,java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getCfDef(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getBytesAccordingToType(java.lang.String,org.apache.cassandra.db.marshal.AbstractType)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.0.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.0",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.0.1",
    "caller": "|java+constructor:///org/apache/cassandra/thrift/CassandraDaemon$ThriftServer/CassandraDaemon$ThriftServer(java.net.InetAddress,int)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/Cassandra$Processor/Cassandra$Processor(org.apache.cassandra.thrift.Cassandra$Iface)|",
    "v1Body": [
      "|java+constructor:///java/util/concurrent/LinkedBlockingQueue/LinkedBlockingQueue()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/thrift/server/TThreadPoolServer$Args/outputProtocolFactory(org.apache.thrift.protocol.TProtocolFactory)|",
      "|java+method:///org/apache/thrift/server/TNonblockingServer$Args/processor(org.apache.thrift.TProcessor)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraDaemon/access$000()|",
      "|java+constructor:///org/apache/cassandra/service/AbstractCassandraDaemon$CleaningThreadPool/AbstractCassandraDaemon$CleaningThreadPool(java.lang.ThreadLocal,int,int)|",
      "|java+constructor:///org/apache/thrift/server/TThreadPoolServer$Args/TThreadPoolServer$Args(org.apache.thrift.transport.TServerTransport)|",
      "|java+constructor:///org/apache/cassandra/thrift/CustomTHsHaServer/CustomTHsHaServer(org.apache.thrift.server.TNonblockingServer$Args,java.util.concurrent.ExecutorService,int)|",
      "|java+method:///org/apache/thrift/server/TThreadPoolServer$Args/inputProtocolFactory(org.apache.thrift.protocol.TProtocolFactory)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///org/apache/cassandra/thrift/Cassandra$Processor/Cassandra$Processor(org.apache.cassandra.thrift.Cassandra$Iface)|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/apache/thrift/server/TNonblockingServer$Args/inputProtocolFactory(org.apache.thrift.protocol.TProtocolFactory)|",
      "|java+method:///org/apache/thrift/server/TThreadPoolServer$Args/minWorkerThreads(int)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRpcMaxThreads()|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRpcRecvBufferSize()|",
      "|java+method:///java/lang/Runtime/getRuntime()|",
      "|java+constructor:///java/net/InetSocketAddress/InetSocketAddress(java.net.InetAddress,int)|",
      "|java+constructor:///org/apache/cassandra/thrift/TCustomServerSocket/TCustomServerSocket(java.net.InetSocketAddress,boolean,java.lang.Integer,java.lang.Integer)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRpcSendBufferSize()|",
      "|java+constructor:///org/apache/cassandra/thrift/CustomTThreadPoolServer/CustomTThreadPoolServer(org.apache.thrift.server.TThreadPoolServer$Args,java.util.concurrent.ExecutorService)|",
      "|java+method:///org/apache/thrift/server/TNonblockingServer$Args/outputTransportFactory(org.apache.thrift.transport.TTransportFactory)|",
      "|java+constructor:///org/apache/cassandra/thrift/TBinaryProtocol$Factory/TBinaryProtocol$Factory(boolean,boolean,int)|",
      "|java+method:///org/apache/thrift/server/TThreadPoolServer$Args/inputTransportFactory(org.apache.thrift.transport.TTransportFactory)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///org/apache/cassandra/thrift/CassandraServer/CassandraServer()|",
      "|java+constructor:///org/apache/cassandra/thrift/TCustomNonblockingServerSocket/TCustomNonblockingServerSocket(java.net.InetSocketAddress,boolean,java.lang.Integer,java.lang.Integer)|",
      "|java+method:///org/apache/thrift/server/TNonblockingServer$Args/outputProtocolFactory(org.apache.thrift.protocol.TProtocolFactory)|",
      "|java+method:///org/apache/thrift/server/TThreadPoolServer$Args/processor(org.apache.thrift.TProcessor)|",
      "|java+constructor:///org/apache/cassandra/concurrent/NamedThreadFactory/NamedThreadFactory(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/CustomTNonBlockingServer/CustomTNonBlockingServer(org.apache.thrift.server.TNonblockingServer$Args)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getThriftFramedTransportSize()|",
      "|java+method:///org/apache/thrift/server/TThreadPoolServer$Args/maxWorkerThreads(int)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRpcMinThreads()|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRpcTimeout()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///org/apache/thrift/transport/TFramedTransport$Factory/TFramedTransport$Factory(int)|",
      "|java+constructor:///org/apache/thrift/server/TNonblockingServer$Args/TNonblockingServer$Args(org.apache.thrift.transport.TNonblockingServerTransport)|",
      "|java+method:///org/apache/thrift/server/TThreadPoolServer$Args/outputTransportFactory(org.apache.thrift.transport.TTransportFactory)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/concurrent/JMXEnabledThreadPoolExecutor/JMXEnabledThreadPoolExecutor(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,org.apache.cassandra.concurrent.NamedThreadFactory,java.lang.String)|",
      "|java+method:///java/lang/Runtime/availableProcessors()|",
      "|java+method:///org/apache/thrift/server/TNonblockingServer$Args/inputTransportFactory(org.apache.thrift.transport.TTransportFactory)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getThriftMaxMessageLength()|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRpcServerType()|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRpcKeepAlive()|",
      "|java+constructor:///java/lang/Thread/Thread()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/thrift/server/TThreadPoolServer$Args/outputProtocolFactory(org.apache.thrift.protocol.TProtocolFactory)|",
      "|java+method:///org/apache/thrift/server/TNonblockingServer$Args/processor(org.apache.thrift.TProcessor)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraDaemon/access$000()|",
      "|java+constructor:///org/apache/cassandra/service/AbstractCassandraDaemon$CleaningThreadPool/AbstractCassandraDaemon$CleaningThreadPool(java.lang.ThreadLocal,int,int)|",
      "|java+constructor:///org/apache/thrift/server/TThreadPoolServer$Args/TThreadPoolServer$Args(org.apache.thrift.transport.TServerTransport)|",
      "|java+constructor:///org/apache/cassandra/thrift/CustomTHsHaServer/CustomTHsHaServer(org.apache.thrift.server.TNonblockingServer$Args,java.util.concurrent.ExecutorService,int)|",
      "|java+method:///org/apache/thrift/server/TThreadPoolServer$Args/inputProtocolFactory(org.apache.thrift.protocol.TProtocolFactory)|",
      "|java+constructor:///org/apache/cassandra/thrift/Cassandra$Processor/Cassandra$Processor(org.apache.cassandra.thrift.Cassandra$Iface)|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/apache/thrift/server/TNonblockingServer$Args/inputProtocolFactory(org.apache.thrift.protocol.TProtocolFactory)|",
      "|java+method:///org/apache/thrift/server/TThreadPoolServer$Args/minWorkerThreads(int)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRpcMaxThreads()|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRpcRecvBufferSize()|",
      "|java+method:///java/lang/Runtime/getRuntime()|",
      "|java+constructor:///java/net/InetSocketAddress/InetSocketAddress(java.net.InetAddress,int)|",
      "|java+constructor:///org/apache/cassandra/thrift/TCustomServerSocket/TCustomServerSocket(java.net.InetSocketAddress,boolean,java.lang.Integer,java.lang.Integer)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRpcSendBufferSize()|",
      "|java+constructor:///org/apache/cassandra/thrift/CustomTThreadPoolServer/CustomTThreadPoolServer(org.apache.thrift.server.TThreadPoolServer$Args,java.util.concurrent.ExecutorService)|",
      "|java+method:///org/apache/thrift/server/TNonblockingServer$Args/outputTransportFactory(org.apache.thrift.transport.TTransportFactory)|",
      "|java+constructor:///org/apache/cassandra/thrift/TBinaryProtocol$Factory/TBinaryProtocol$Factory(boolean,boolean,int)|",
      "|java+method:///org/apache/thrift/server/TThreadPoolServer$Args/inputTransportFactory(org.apache.thrift.transport.TTransportFactory)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///org/apache/cassandra/thrift/CassandraServer/CassandraServer()|",
      "|java+constructor:///org/apache/cassandra/thrift/TCustomNonblockingServerSocket/TCustomNonblockingServerSocket(java.net.InetSocketAddress,boolean,java.lang.Integer,java.lang.Integer)|",
      "|java+method:///org/apache/thrift/server/TNonblockingServer$Args/outputProtocolFactory(org.apache.thrift.protocol.TProtocolFactory)|",
      "|java+method:///org/apache/thrift/server/TThreadPoolServer$Args/processor(org.apache.thrift.TProcessor)|",
      "|java+constructor:///org/apache/cassandra/concurrent/NamedThreadFactory/NamedThreadFactory(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/CustomTNonBlockingServer/CustomTNonBlockingServer(org.apache.thrift.server.TNonblockingServer$Args)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getThriftFramedTransportSize()|",
      "|java+method:///org/apache/thrift/server/TThreadPoolServer$Args/maxWorkerThreads(int)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRpcMinThreads()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///java/util/concurrent/SynchronousQueue/SynchronousQueue()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///org/apache/thrift/transport/TFramedTransport$Factory/TFramedTransport$Factory(int)|",
      "|java+constructor:///org/apache/thrift/server/TNonblockingServer$Args/TNonblockingServer$Args(org.apache.thrift.transport.TNonblockingServerTransport)|",
      "|java+method:///org/apache/thrift/server/TThreadPoolServer$Args/outputTransportFactory(org.apache.thrift.transport.TTransportFactory)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/concurrent/JMXEnabledThreadPoolExecutor/JMXEnabledThreadPoolExecutor(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,org.apache.cassandra.concurrent.NamedThreadFactory,java.lang.String)|",
      "|java+method:///java/lang/Runtime/availableProcessors()|",
      "|java+method:///org/apache/thrift/server/TNonblockingServer$Args/inputTransportFactory(org.apache.thrift.transport.TTransportFactory)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getThriftMaxMessageLength()|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRpcServerType()|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getRpcKeepAlive()|",
      "|java+constructor:///java/lang/Thread/Thread()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.0.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.0",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.0.1",
    "caller": "|java+method:///org/apache/cassandra/cli/CliClient/executeDescribeCluster()|",
    "called": "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_partitioner()|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_snitch()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_partitioner()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/cassandra/cli/CliMain/isConnected()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/InvalidRequestException/getWhy()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_schema_versions()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Exception/getMessage()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_snitch()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_partitioner()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/cassandra/cli/CliMain/isConnected()|",
      "|java+method:///org/apache/cassandra/thrift/InvalidRequestException/getWhy()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_schema_versions()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Exception/getMessage()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.0.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.0",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.0.1",
    "caller": "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyInputFormat/getSubSplits(java.lang.String,java.lang.String,org.apache.cassandra.thrift.TokenRange,org.apache.hadoop.conf.Configuration)|",
    "called": "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_splits(java.lang.String,java.lang.String,java.lang.String,int)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/commons/lang/StringUtils/join(java.util.Collection,java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/set_keyspace(java.lang.String)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyInputFormat/createConnection(java.lang.String,java.lang.Integer,boolean)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputSplitSize(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_splits(java.lang.String,java.lang.String,java.lang.String,int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getRpcPort(org.apache.hadoop.conf.Configuration)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/createConnection(java.lang.String,java.lang.Integer,boolean)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/commons/lang/StringUtils/join(java.util.Collection,java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/set_keyspace(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputSplitSize(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_splits(java.lang.String,java.lang.String,java.lang.String,int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getRpcPort(org.apache.hadoop.conf.Configuration)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.0.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.0",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.0.1",
    "caller": "|java+method:///org/apache/cassandra/cli/CliClient/executeIncr(org.antlr.runtime.tree.Tree,long)|",
    "called": "|java+method:///org/apache/cassandra/thrift/ColumnParent/setSuper_column(byte%5B%5D)|",
    "v1Body": [
      "|java+method:///org/antlr/runtime/tree/Tree/getChildCount()|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliCompiler/numColumnSpecifiers(org.antlr.runtime.tree.Tree)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/hasKeySpace()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/cli/CliMain/isConnected()|",
      "|java+method:///java/lang/Exception/getMessage()|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/CounterColumn/CounterColumn(java.nio.ByteBuffer,long)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/add(java.nio.ByteBuffer,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.CounterColumn,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getSubColumnName(java.lang.String,org.antlr.runtime.tree.Tree)|",
      "|java+method:///org/apache/cassandra/cli/CliCompiler/getColumnFamily(org.antlr.runtime.tree.Tree,java.util.List)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getCfDef(java.lang.String)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getChild(int)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getKeyAsBytes(java.lang.String,org.antlr.runtime.tree.Tree)|",
      "|java+constructor:///org/apache/cassandra/thrift/ColumnParent/ColumnParent(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnParent/setSuper_column(byte%5B%5D)|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///java/io/PrintStream/printf(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getColumnName(java.lang.String,org.antlr.runtime.tree.Tree)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getText()|"
    ],
    "v2Body": [
      "|java+method:///org/antlr/runtime/tree/Tree/getChildCount()|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/hasKeySpace()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/cli/CliMain/isConnected()|",
      "|java+method:///java/io/PrintStream/printf(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/CounterColumn/CounterColumn(java.nio.ByteBuffer,long)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/cli/CliCompiler/numColumnSpecifiers(org.antlr.runtime.tree.Tree)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/add(java.nio.ByteBuffer,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.CounterColumn,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getSubColumnName(java.lang.String,org.antlr.runtime.tree.Tree)|",
      "|java+method:///org/apache/cassandra/cli/CliCompiler/getColumnFamily(org.antlr.runtime.tree.Tree,java.util.List)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getCfDef(java.lang.String)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getChild(int)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getKeyAsBytes(java.lang.String,org.antlr.runtime.tree.Tree)|",
      "|java+constructor:///org/apache/cassandra/thrift/ColumnParent/ColumnParent(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnParent/setSuper_column(byte%5B%5D)|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getColumnName(java.lang.String,org.antlr.runtime.tree.Tree)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getText()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.0.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.0",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.0.1",
    "caller": "|java+method:///org/apache/cassandra/cli/CliClient/executeAddKeySpace(org.antlr.runtime.tree.Tree)|",
    "called": "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/system_add_keyspace(org.apache.cassandra.thrift.KsDef)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_keyspace(java.lang.String)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/updateKsDefAttributes(org.antlr.runtime.tree.Tree,org.apache.cassandra.thrift.KsDef)|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///org/antlr/runtime/tree/Tree/getChild(int)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getText()|",
      "|java+method:///java/lang/Exception/getMessage()|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/system_add_keyspace(org.apache.cassandra.thrift.KsDef)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/thrift/KsDef/KsDef(java.lang.String,java.lang.String,java.util.List)|",
      "|java+method:///org/apache/cassandra/cli/CliMain/isConnected()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/InvalidRequestException/getWhy()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/validateSchemaIsSettled(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_keyspace(java.lang.String)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/updateKsDefAttributes(org.antlr.runtime.tree.Tree,org.apache.cassandra.thrift.KsDef)|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///org/antlr/runtime/tree/Tree/getChild(int)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getText()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/validateSchemaIsSettled(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/system_add_keyspace(org.apache.cassandra.thrift.KsDef)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/thrift/KsDef/KsDef(java.lang.String,java.lang.String,java.util.List)|",
      "|java+method:///org/apache/cassandra/cli/CliMain/isConnected()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.0.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.0",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.0.1",
    "caller": "|java+method:///org/apache/cassandra/client/RingCache/refreshEndpointMap()|",
    "called": "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_ring(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/thrift/TException/getMessage()|",
      "|java+constructor:///org/apache/cassandra/thrift/Cassandra$Client/Cassandra$Client(org.apache.thrift.protocol.TProtocol)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/dht/Token$TokenFactory/fromString(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError(java.lang.Object)|",
      "|java+method:///com/google/common/collect/ArrayListMultimap/create()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/thrift/transport/TSocket/open()|",
      "|java+constructor:///org/apache/thrift/transport/TFramedTransport/TFramedTransport(org.apache.thrift.transport.TTransport)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getTokenFactory()|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_ring(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/thrift/transport/TSocket/TSocket(java.lang.String,int)|",
      "|java+constructor:///org/apache/cassandra/thrift/TBinaryProtocol/TBinaryProtocol(org.apache.thrift.transport.TTransport)|",
      "|java+constructor:///org/apache/cassandra/dht/Range/Range(org.apache.cassandra.dht.Token,org.apache.cassandra.dht.Token,org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/net/InetAddress/getByName(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/thrift/TException/getMessage()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError(java.lang.Object)|",
      "|java+method:///com/google/common/collect/ArrayListMultimap/create()|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInitialAddress(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getClientFromAddressList(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getTokenFactory()|",
      "|java+method:///org/apache/cassandra/dht/Token$TokenFactory/fromString(java.lang.String)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getOutputKeyspace(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_ring(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+constructor:///org/apache/cassandra/dht/Range/Range(org.apache.cassandra.dht.Token,org.apache.cassandra.dht.Token,org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/net/InetAddress/getByName(java.lang.String)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.0.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.0",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.0.1",
    "caller": "|java+method:///org/apache/cassandra/db/IndexScanCommand$IndexScanCommandSerializer/deserialize(java.io.DataInput)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/SlicePredicate/SlicePredicate()|",
    "v1Body": [
      "|java+constructor:///org/apache/cassandra/thrift/TBinaryProtocol$Factory/TBinaryProtocol$Factory()|",
      "|java+method:///java/io/DataInput/readUTF()|",
      "|java+method:///org/apache/cassandra/dht/AbstractBounds/serializer()|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/deserialize(org.apache.thrift.TDeserializer,org.apache.thrift.TBase,java.io.DataInput)|",
      "|java+method:///org/apache/cassandra/db/IndexScanCommand$IndexScanCommandSerializer/deserialize(java.io.DataInput)|",
      "|java+constructor:///org/apache/cassandra/db/IndexScanCommand/IndexScanCommand(java.lang.String,java.lang.String,org.apache.cassandra.thrift.IndexClause,org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.dht.AbstractBounds)|",
      "|java+constructor:///org/apache/cassandra/thrift/SlicePredicate/SlicePredicate()|",
      "|java+method:///org/apache/cassandra/io/ICompactSerializer2/deserialize(java.io.DataInput)|",
      "|java+constructor:///org/apache/thrift/TDeserializer/TDeserializer(org.apache.thrift.protocol.TProtocolFactory)|",
      "|java+constructor:///org/apache/cassandra/thrift/IndexClause/IndexClause()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/cassandra/thrift/TBinaryProtocol$Factory/TBinaryProtocol$Factory()|",
      "|java+method:///java/io/DataInput/readUTF()|",
      "|java+method:///org/apache/cassandra/dht/AbstractBounds/serializer()|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/deserialize(org.apache.thrift.TDeserializer,org.apache.thrift.TBase,java.io.DataInput)|",
      "|java+method:///org/apache/cassandra/db/IndexScanCommand$IndexScanCommandSerializer/deserialize(java.io.DataInput)|",
      "|java+constructor:///org/apache/cassandra/db/IndexScanCommand/IndexScanCommand(java.lang.String,java.lang.String,org.apache.cassandra.thrift.IndexClause,org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.dht.AbstractBounds)|",
      "|java+constructor:///org/apache/cassandra/thrift/SlicePredicate/SlicePredicate()|",
      "|java+method:///org/apache/cassandra/dht/AbstractBounds$AbstractBoundsSerializer/deserialize(java.io.DataInput)|",
      "|java+constructor:///org/apache/thrift/TDeserializer/TDeserializer(org.apache.thrift.protocol.TProtocolFactory)|",
      "|java+constructor:///org/apache/cassandra/thrift/IndexClause/IndexClause()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.0.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.0",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.0.1",
    "caller": "|java+method:///org/apache/cassandra/cli/CliClient/describeColumnFamily(org.apache.cassandra.thrift.KsDef,org.apache.cassandra.thrift.CfDef,org.apache.cassandra.tools.NodeProbe)|",
    "called": "|java+method:///org/apache/cassandra/thrift/CfDef/getColumn_metadataSize()|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/getIndex_type()|",
      "|java+method:///org/apache/cassandra/thrift/IndexType/name()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/getColumn_metadataSize()|",
      "|java+method:///org/apache/cassandra/db/marshal/AbstractType/getString(java.nio.ByteBuffer)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/getValidation_class()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStoreMBean/getBuiltIndexes()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/getIndex_name()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/db/marshal/UTF8Type/getString(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/getName()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/io/PrintStream/printf(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/apache/cassandra/tools/NodeProbe/getCfsProxy(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/getColumn_metadata()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/isSetIndex_type()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getFormatType(java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/getName()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/isSetIndex_name()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///java/util/Set/iterator()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/getIndex_type()|",
      "|java+method:///org/apache/cassandra/thrift/IndexType/name()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/getColumn_metadataSize()|",
      "|java+method:///org/apache/cassandra/db/marshal/AbstractType/getString(java.nio.ByteBuffer)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/getValidation_class()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStoreMBean/getBuiltIndexes()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/getIndex_name()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/db/marshal/UTF8Type/getString(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/getName()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/io/PrintStream/printf(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/apache/cassandra/tools/NodeProbe/getCfsProxy(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/getColumn_metadata()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/isSetIndex_type()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getFormatType(java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/getName()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/isSetIndex_name()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/getRow_cache_provider()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.0.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.0",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.0.1",
    "caller": "|java+method:///org/apache/cassandra/cli/CliClient/getCFColumnMetaFromTree(org.apache.cassandra.thrift.CfDef,org.antlr.runtime.tree.Tree)|",
    "called": "|java+method:///org/apache/cassandra/thrift/ColumnDef/setName(byte%5B%5D)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/setIndex_type(org.apache.cassandra.thrift.IndexType)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/validate()|",
      "|java+method:///org/apache/cassandra/cli/CliUtils/unescapeSQLString(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getStrategyOptionsFromTree(org.antlr.runtime.tree.Tree)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getChild(int)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getText()|",
      "|java+method:///org/apache/thrift/TException/getMessage()|",
      "|java+method:///org/antlr/runtime/tree/Tree/getChildCount()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/setName(byte%5B%5D)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/columnNameAsByteArray(java.lang.String,org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/setIndex_options(java.util.Map)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/subColumnNameAsByteArray(java.lang.String,org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/setValidation_class(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getIndexTypeFromString(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/setIndex_name(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/ColumnDef/ColumnDef()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|"
    ],
    "v2Body": [
      "|java+method:///org/antlr/runtime/tree/Tree/getChildCount()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/setIndex_type(org.apache.cassandra.thrift.IndexType)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/validate()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getStrategyOptionsFromTree(org.antlr.runtime.tree.Tree)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getChild(int)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/thrift/ColumnDef/ColumnDef()|",
      "|java+method:///org/antlr/runtime/tree/Tree/getText()|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/setName(byte%5B%5D)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/columnNameAsByteArray(java.lang.String,org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/setIndex_options(java.util.Map)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/subColumnNameAsByteArray(java.lang.String,org.apache.cassandra.thrift.CfDef)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/cli/CliUtils/unescapeSQLString(java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/setValidation_class(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getIndexTypeFromString(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnDef/setIndex_name(java.lang.String)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.0.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.0",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.0.1",
    "caller": "|java+method:///org/apache/cassandra/cli/CliClient/executeUpdateKeySpace(org.antlr.runtime.tree.Tree)|",
    "called": "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_keyspace(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_keyspace(java.lang.String)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_keyspaces()|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/system_update_keyspace(org.apache.cassandra.thrift.KsDef)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/updateKsDefAttributes(org.antlr.runtime.tree.Tree,org.apache.cassandra.thrift.KsDef)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getKSMetaData(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliMain/isConnected()|",
      "|java+method:///org/apache/cassandra/cli/CliCompiler/getKeySpace(org.antlr.runtime.tree.Tree,java.util.List)|",
      "|java+method:///java/lang/Exception/getMessage()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/InvalidRequestException/getWhy()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/validateSchemaIsSettled(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_keyspace(java.lang.String)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_keyspaces()|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/updateKsDefAttributes(org.antlr.runtime.tree.Tree,org.apache.cassandra.thrift.KsDef)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getKSMetaData(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliMain/isConnected()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/validateSchemaIsSettled(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliCompiler/getKeySpace(org.antlr.runtime.tree.Tree,java.util.List)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/system_update_keyspace(org.apache.cassandra.thrift.KsDef)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.0.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.0",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.0.1",
    "caller": "|java+method:///org/apache/cassandra/cli/CliClient/updateKsDefAttributes(org.antlr.runtime.tree.Tree,org.apache.cassandra.thrift.KsDef)|",
    "called": "|java+method:///org/apache/cassandra/thrift/KsDef/setDurable_writes(boolean)|",
    "v1Body": [
      "|java+method:///org/antlr/runtime/tree/Tree/getChildCount()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/cli/CliUtils/unescapeSQLString(java.lang.String)|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///org/apache/cassandra/cli/CliClient$AddKeyspaceArgument/valueOf(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/setCf_defs(java.util.List)|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/setStrategy_options(java.util.Map)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///java/lang/String/toUpperCase()|",
      "|java+method:///java/net/InetAddress/getLocalHost()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getStrategyOptionsFromTree(org.antlr.runtime.tree.Tree)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///org/apache/cassandra/locator/SimpleSnitch/getDatacenter(java.net.InetAddress)|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///org/antlr/runtime/tree/Tree/getChild(int)|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/setDurable_writes(boolean)|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/getStrategy_class()|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/getStrategy_options()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/setStrategy_class(java.lang.String)|",
      "|java+method:///java/lang/String/contains(java.lang.CharSequence)|",
      "|java+constructor:///org/apache/cassandra/locator/SimpleSnitch/SimpleSnitch()|",
      "|java+constructor:///org/apache/cassandra/thrift/KsDef/KsDef(org.apache.cassandra.thrift.KsDef)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getText()|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/unsetReplication_factor()|",
      "|java+method:///org/apache/cassandra/cli/CliClient$AddKeyspaceArgument/ordinal()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///java/net/UnknownHostException/getMessage()|"
    ],
    "v2Body": [
      "|java+method:///org/antlr/runtime/tree/Tree/getChildCount()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///org/apache/cassandra/cli/CliClient$AddKeyspaceArgument/valueOf(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/setCf_defs(java.util.List)|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/getStrategy_options()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/setStrategy_options(java.util.Map)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///java/lang/String/toUpperCase()|",
      "|java+method:///java/net/InetAddress/getLocalHost()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/cli/CliUtils/unescapeSQLString(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getStrategyOptionsFromTree(org.antlr.runtime.tree.Tree)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///org/apache/cassandra/locator/SimpleSnitch/getDatacenter(java.net.InetAddress)|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///org/antlr/runtime/tree/Tree/getChild(int)|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/setDurable_writes(boolean)|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/getStrategy_class()|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/setStrategy_class(java.lang.String)|",
      "|java+method:///java/lang/String/contains(java.lang.CharSequence)|",
      "|java+constructor:///org/apache/cassandra/locator/SimpleSnitch/SimpleSnitch()|",
      "|java+constructor:///org/apache/cassandra/thrift/KsDef/KsDef(org.apache.cassandra.thrift.KsDef)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getText()|",
      "|java+method:///org/apache/cassandra/thrift/KsDef/unsetReplication_factor()|",
      "|java+method:///org/apache/cassandra/cli/CliClient$AddKeyspaceArgument/ordinal()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.0.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.0",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.0.1",
    "caller": "|java+method:///org/apache/cassandra/cli/CliClient/executeSet(org.antlr.runtime.tree.Tree)|",
    "called": "|java+method:///org/apache/cassandra/thrift/ColumnParent/setSuper_column(byte%5B%5D)|",
    "v1Body": [
      "|java+method:///org/antlr/runtime/tree/Tree/getChildCount()|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/timestampMicros()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/convertValueByFunction(org.antlr.runtime.tree.Tree,org.apache.cassandra.thrift.CfDef,java.nio.ByteBuffer,boolean)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/columnValueAsBytes(java.nio.ByteBuffer,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getType()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliUtils/unescapeSQLString(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliCompiler/numColumnSpecifiers(org.antlr.runtime.tree.Tree)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/hasKeySpace()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/Column/setValue(java.nio.ByteBuffer)|",
      "|java+constructor:///org/apache/cassandra/thrift/Column/Column(java.nio.ByteBuffer)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getSubColumnName(java.lang.String,org.antlr.runtime.tree.Tree)|",
      "|java+method:///org/apache/cassandra/cli/CliCompiler/getColumnFamily(org.antlr.runtime.tree.Tree,java.util.List)|",
      "|java+method:///org/apache/cassandra/thrift/Column/setTtl(int)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getCfDef(java.lang.String)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getChild(int)|",
      "|java+method:///org/apache/cassandra/thrift/Column/setTimestamp(long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getKeyAsBytes(java.lang.String,org.antlr.runtime.tree.Tree)|",
      "|java+constructor:///org/apache/cassandra/thrift/ColumnParent/ColumnParent(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnParent/setSuper_column(byte%5B%5D)|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliMain/isConnected()|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/insert(java.nio.ByteBuffer,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.Column,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getColumnName(java.lang.String,org.antlr.runtime.tree.Tree)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getText()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Exception/getMessage()|"
    ],
    "v2Body": [
      "|java+method:///org/antlr/runtime/tree/Tree/getChildCount()|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/timestampMicros()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/convertValueByFunction(org.antlr.runtime.tree.Tree,org.apache.cassandra.thrift.CfDef,java.nio.ByteBuffer,boolean)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/columnValueAsBytes(java.nio.ByteBuffer,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/antlr/runtime/tree/Tree/getType()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/cli/CliUtils/unescapeSQLString(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliCompiler/numColumnSpecifiers(org.antlr.runtime.tree.Tree)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/hasKeySpace()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/thrift/Column/setValue(java.nio.ByteBuffer)|",
      "|java+constructor:///org/apache/cassandra/thrift/Column/Column(java.nio.ByteBuffer)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getSubColumnName(java.lang.String,org.antlr.runtime.tree.Tree)|",
      "|java+method:///org/apache/cassandra/cli/CliCompiler/getColumnFamily(org.antlr.runtime.tree.Tree,java.util.List)|",
      "|java+method:///org/apache/cassandra/thrift/Column/setTtl(int)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getCfDef(java.lang.String)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getChild(int)|",
      "|java+method:///org/apache/cassandra/thrift/Column/setTimestamp(long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getKeyAsBytes(java.lang.String,org.antlr.runtime.tree.Tree)|",
      "|java+constructor:///org/apache/cassandra/thrift/ColumnParent/ColumnParent(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ColumnParent/setSuper_column(byte%5B%5D)|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliMain/isConnected()|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/insert(java.nio.ByteBuffer,org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.Column,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getColumnName(java.lang.String,org.antlr.runtime.tree.Tree)|",
      "|java+method:///org/antlr/runtime/tree/Tree/getText()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.0.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.0",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.0.1",
    "caller": "|java+method:///org/apache/cassandra/cli/CliClient/executeUpdateColumnFamily(org.antlr.runtime.tree.Tree)|",
    "called": "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/system_update_column_family(org.apache.cassandra.thrift.CfDef)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_keyspace(java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/cli/CliCompiler/getColumnFamily(org.antlr.runtime.tree.Tree,java.util.List)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/cli/CliMain/isConnected()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/updateCfDefAttributes(org.antlr.runtime.tree.Tree,org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/hasKeySpace()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getCfDef(org.apache.cassandra.thrift.KsDef,java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/system_update_column_family(org.apache.cassandra.thrift.CfDef)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/InvalidRequestException/getWhy()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/validateSchemaIsSettled(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Exception/getMessage()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/describe_keyspace(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/cli/CliCompiler/getColumnFamily(org.antlr.runtime.tree.Tree,java.util.List)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/cli/CliMain/isConnected()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/validateSchemaIsSettled(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/updateCfDefAttributes(org.antlr.runtime.tree.Tree,org.apache.cassandra.thrift.CfDef)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///org/apache/cassandra/cli/CliClient/hasKeySpace()|",
      "|java+method:///org/apache/cassandra/cli/CliClient/getCfDef(org.apache.cassandra.thrift.KsDef,java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/system_update_column_family(org.apache.cassandra.thrift.CfDef)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.0.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.0",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.0.1",
    "caller": "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/predicateFromString(java.lang.String)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/SlicePredicate/SlicePredicate()|",
    "v1Body": [
      "|java+constructor:///org/apache/cassandra/thrift/TBinaryProtocol$Factory/TBinaryProtocol$Factory()|",
      "|java+method:///org/apache/thrift/TDeserializer/deserialize(org.apache.thrift.TBase,byte%5B%5D)|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/hexToBytes(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+constructor:///org/apache/cassandra/thrift/SlicePredicate/SlicePredicate()|",
      "|java+constructor:///org/apache/thrift/TDeserializer/TDeserializer(org.apache.thrift.protocol.TProtocolFactory)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/cassandra/thrift/TBinaryProtocol$Factory/TBinaryProtocol$Factory()|",
      "|java+method:///org/apache/thrift/TDeserializer/deserialize(org.apache.thrift.TBase,byte%5B%5D)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+constructor:///org/apache/cassandra/thrift/SlicePredicate/SlicePredicate()|",
      "|java+method:///org/apache/cassandra/utils/Hex/hexToBytes(java.lang.String)|",
      "|java+constructor:///org/apache/thrift/TDeserializer/TDeserializer(org.apache.thrift.protocol.TProtocolFactory)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.0.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.0",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.0.1",
    "caller": "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader$RowIterator/maybeInit()|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/ColumnParent/ColumnParent(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/thrift/KeyRange/setEnd_token(java.lang.String)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/access$100(org.apache.cassandra.hadoop.ColumnFamilyRecordReader)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/access$300(org.apache.cassandra.hadoop.ColumnFamilyRecordReader)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/access$600(org.apache.cassandra.hadoop.ColumnFamilyRecordReader)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilySplit/getStartToken()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/get_range_slices(org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.thrift.KeyRange,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getToken(java.nio.ByteBuffer)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/access$400(org.apache.cassandra.hadoop.ColumnFamilyRecordReader)|",
      "|java+method:///org/apache/cassandra/thrift/KeyRange/setStart_token(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/access$500(org.apache.cassandra.hadoop.ColumnFamilyRecordReader)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/access$700(org.apache.cassandra.hadoop.ColumnFamilyRecordReader)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+constructor:///org/apache/cassandra/thrift/KeyRange/KeyRange(int)|",
      "|java+constructor:///org/apache/cassandra/thrift/ColumnParent/ColumnParent(java.lang.String)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilySplit/getEndToken()|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getTokenFactory()|",
      "|java+method:///org/apache/cassandra/dht/Token$TokenFactory/toString(org.apache.cassandra.dht.Token)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/remove()|",
      "|java+method:///org/apache/cassandra/thrift/KeyRange/setEnd_token(java.lang.String)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/access$300(org.apache.cassandra.hadoop.ColumnFamilyRecordReader)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/access$600(org.apache.cassandra.hadoop.ColumnFamilyRecordReader)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilySplit/getStartToken()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/access$800(org.apache.cassandra.hadoop.ColumnFamilyRecordReader,org.apache.cassandra.thrift.SlicePredicate)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getToken(java.nio.ByteBuffer)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/access$100(org.apache.cassandra.hadoop.ColumnFamilyRecordReader)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/access$400(org.apache.cassandra.hadoop.ColumnFamilyRecordReader)|",
      "|java+method:///org/apache/cassandra/thrift/KeyRange/setStart_token(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/access$500(org.apache.cassandra.hadoop.ColumnFamilyRecordReader)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilyRecordReader/access$700(org.apache.cassandra.hadoop.ColumnFamilyRecordReader)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+constructor:///org/apache/cassandra/thrift/KeyRange/KeyRange(int)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/thrift/Cassandra$Client/get_range_slices(org.apache.cassandra.thrift.ColumnParent,org.apache.cassandra.thrift.SlicePredicate,org.apache.cassandra.thrift.KeyRange,org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+constructor:///org/apache/cassandra/thrift/ColumnParent/ColumnParent(java.lang.String)|",
      "|java+method:///org/apache/cassandra/hadoop/ColumnFamilySplit/getEndToken()|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getTokenFactory()|",
      "|java+method:///org/apache/cassandra/dht/Token$TokenFactory/toString(org.apache.cassandra.dht.Token)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.0.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:1.0.0",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:1.0.1",
    "caller": "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateMinMaxCompactionThresholds(org.apache.cassandra.thrift.CfDef)|",
    "called": "|java+method:///org/apache/cassandra/thrift/CfDef/isSetMax_compaction_threshold()|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetMin_compaction_threshold()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetMax_compaction_threshold()|",
      "|java+constructor:///org/apache/cassandra/config/ConfigurationException/ConfigurationException(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateMinCompactionThreshold(int,int)|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetMin_compaction_threshold()|",
      "|java+method:///org/apache/cassandra/thrift/CfDef/isSetMax_compaction_threshold()|",
      "|java+constructor:///org/apache/cassandra/config/ConfigurationException/ConfigurationException(java.lang.String)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:1.0.1",
    "change": "UPDATED"
  }
]