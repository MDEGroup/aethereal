[
  {
    "coordinatesV1": "io.georocket:georocket-server:1.0.0",
    "coordinatesV2": "io.georocket:georocket-server:1.1.0",
    "caller": "|java+method:///io/georocket/util/QuotedStringSplitter/split(java.lang.String)|",
    "called": "|java+method:///org/apache/commons/text/StringEscapeUtils/unescapeJava(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/commons/lang3/StringEscapeUtils/unescapeJava(java.lang.String)|",
      "|java+method:///java/util/regex/Matcher/group()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/regex/Matcher/find()|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|"
    ],
    "v2Body": [
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/commons/text/StringEscapeUtils/unescapeJava(java.lang.String)|",
      "|java+method:///java/util/regex/Matcher/group()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/regex/Matcher/find()|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|"
    ],
    "affectedLib": "org.apache.commons:commons-text:1.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.0.0",
    "coordinatesV2": "io.georocket:georocket-server:1.1.0",
    "caller": "|java+method:///io/georocket/http/StoreEndpoint/onPost(io.vertx.ext.web.RoutingContext)|",
    "called": "|java+method:///org/apache/commons/text/StringEscapeUtils/unescapeJava(java.lang.String)|",
    "v1Body": [
      "|java+method:///io/vertx/core/http/HttpServerRequest/getParam(java.lang.String)|",
      "|java+method:///io/vertx/core/logging/Logger/info(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/on(char)|",
      "|java+method:///io/vertx/core/file/FileSystem/mkdirs(java.lang.String,io.vertx.core.Handler)|",
      "|java+method:///io/vertx/core/Vertx/fileSystem()|",
      "|java+method:///io/georocket/http/StoreEndpoint/getStorePath(io.vertx.ext.web.RoutingContext)|",
      "|java+method:///org/bson/types/ObjectId/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/flatMap(rx.functions.Func1)|",
      "|java+method:///io/vertx/core/http/HttpServerRequest/pause()|",
      "|java+method:///com/google/common/base/Splitter/splitToList(java.lang.CharSequence)|",
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+constructor:///org/bson/types/ObjectId/ObjectId()|",
      "|java+method:///com/google/common/base/Splitter/trimResults()|",
      "|java+method:///rx/Observable/flatMap(rx.functions.Func1)|",
      "|java+method:///rx/Observable/subscribe(rx.functions.Action1,rx.functions.Action1)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/vertx/ext/web/RoutingContext/request()|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/core/http/HttpServerRequest/getParam(java.lang.String)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/on(char)|",
      "|java+method:///io/vertx/core/file/FileSystem/mkdirs(java.lang.String,io.vertx.core.Handler)|",
      "|java+method:///java/util/UUID/randomUUID()|",
      "|java+method:///io/georocket/http/StoreEndpoint/onReceivingFileStarted(java.lang.String,java.lang.String,long)|",
      "|java+method:///org/bson/types/ObjectId/toString()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/vertx/core/http/HttpServerResponse/setStatusCode(int)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/flatMap(rx.functions.Func1)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///io/vertx/core/http/HttpServerRequest/pause()|",
      "|java+method:///com/google/common/base/Splitter/splitToList(java.lang.CharSequence)|",
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+constructor:///org/bson/types/ObjectId/ObjectId()|",
      "|java+method:///org/apache/commons/text/StringEscapeUtils/unescapeJava(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///io/georocket/http/StoreEndpoint/getEndpointPath(io.vertx.ext.web.RoutingContext)|",
      "|java+method:///com/google/common/base/Splitter/trimResults()|",
      "|java+method:///rx/Observable/flatMap(rx.functions.Func1)|",
      "|java+method:///java/util/regex/Pattern/quote(java.lang.String)|",
      "|java+method:///io/vertx/core/Vertx/fileSystem()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///io/vertx/core/http/HttpServerRequest/response()|",
      "|java+method:///rx/Observable/subscribe(rx.functions.Action1,rx.functions.Action1)|",
      "|java+method:///io/vertx/core/http/HttpServerResponse/end(java.lang.String)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/vertx/ext/web/RoutingContext/request()|"
    ],
    "affectedLib": "org.apache.commons:commons-text:1.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.0.0",
    "coordinatesV2": "io.georocket:georocket-server:1.1.0",
    "caller": "|java+method:///io/georocket/http/StoreEndpoint/createRouter()|",
    "called": "|java+method:///io/vertx/ext/web/Router/router(io.vertx.core.Vertx)|",
    "v1Body": [
      "|java+method:///io/vertx/ext/web/Router/delete(java.lang.String)|",
      "|java+method:///io/vertx/ext/web/Router/router(io.vertx.core.Vertx)|",
      "|java+method:///io/vertx/ext/web/Route/handler(io.vertx.core.Handler)|",
      "|java+method:///io/vertx/ext/web/Router/get(java.lang.String)|",
      "|java+method:///io/vertx/ext/web/Router/post(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/ext/web/Router/delete(java.lang.String)|",
      "|java+method:///io/vertx/ext/web/Router/router(io.vertx.core.Vertx)|",
      "|java+method:///io/vertx/ext/web/Route/handler(io.vertx.core.Handler)|",
      "|java+method:///io/vertx/ext/web/Router/put(java.lang.String)|",
      "|java+method:///io/vertx/ext/web/Router/get(java.lang.String)|",
      "|java+method:///io/vertx/ext/web/Router/post(java.lang.String)|"
    ],
    "affectedLib": "io.vertx:vertx-web:3.4.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.0.0",
    "coordinatesV2": "io.georocket:georocket-server:1.1.0",
    "caller": "|java+method:///io/georocket/GeoRocket/createRouter()|",
    "called": "|java+method:///io/vertx/ext/web/Router/router(io.vertx.core.Vertx)|",
    "v1Body": [
      "|java+method:///io/georocket/http/Endpoint/createRouter()|",
      "|java+method:///io/vertx/ext/web/Router/router(io.vertx.core.Vertx)|",
      "|java+method:///io/georocket/GeoRocket/createStoreEndpoint()|",
      "|java+method:///io/vertx/ext/web/Router/mountSubRouter(java.lang.String,io.vertx.ext.web.Router)|",
      "|java+method:///io/georocket/GeoRocket/createGeneralEndpoint()|"
    ],
    "v2Body": [
      "|java+method:///io/georocket/http/Endpoint/createRouter()|",
      "|java+method:///io/vertx/ext/web/Router/router(io.vertx.core.Vertx)|",
      "|java+method:///io/georocket/GeoRocket/createStoreEndpoint()|",
      "|java+method:///io/vertx/ext/web/Route/handler(io.vertx.core.Handler)|",
      "|java+method:///io/vertx/ext/web/Router/route()|",
      "|java+method:///io/vertx/ext/web/Router/mountSubRouter(java.lang.String,io.vertx.ext.web.Router)|",
      "|java+method:///io/georocket/GeoRocket/createGeneralEndpoint()|"
    ],
    "affectedLib": "io.vertx:vertx-web:3.4.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.0.0",
    "coordinatesV2": "io.georocket:georocket-server:1.1.0",
    "caller": "|java+method:///io/georocket/util/service/DefaultService/unpublish(io.vertx.rxjava.servicediscovery.ServiceDiscovery)|",
    "called": "|java+method:///io/vertx/rxjava/servicediscovery/ServiceDiscovery/rxUnpublish(java.lang.String)|",
    "v1Body": [
      "|java+method:///io/vertx/rxjava/servicediscovery/ServiceDiscovery/unpublishObservable(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/rxjava/servicediscovery/ServiceDiscovery/rxUnpublish(java.lang.String)|"
    ],
    "affectedLib": "io.vertx:vertx-service-discovery:3.4.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.0.0",
    "coordinatesV2": "io.georocket:georocket-server:1.1.0",
    "caller": "|java+method:///io/georocket/util/service/Service/discover(java.lang.String,io.vertx.rxjava.servicediscovery.ServiceDiscovery,io.vertx.rxjava.core.Vertx)|",
    "called": "|java+method:///io/vertx/rxjava/servicediscovery/ServiceDiscovery/rxGetRecords(java.util.function.Function)|",
    "v1Body": [
      "|java+method:///rx/Observable/map(rx.functions.Func1)|",
      "|java+method:///rx/Observable/flatMap(rx.functions.Func1)|",
      "|java+method:///io/vertx/rxjava/servicediscovery/ServiceDiscovery/getRecordsObservable(java.util.function.Function)|"
    ],
    "v2Body": [
      "|java+method:///rx/Observable/map(rx.functions.Func1)|",
      "|java+method:///rx/Single/flatMapObservable(rx.functions.Func1)|",
      "|java+method:///io/vertx/rxjava/servicediscovery/ServiceDiscovery/rxGetRecords(java.util.function.Function)|"
    ],
    "affectedLib": "io.vertx:vertx-service-discovery:3.4.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.0.0",
    "coordinatesV2": "io.georocket:georocket-server:1.1.0",
    "caller": "|java+method:///io/georocket/util/service/Service/publishOnce(java.lang.String,java.lang.String,io.vertx.rxjava.servicediscovery.ServiceDiscovery,io.vertx.rxjava.core.Vertx)|",
    "called": "|java+constructor:///io/vertx/servicediscovery/Record/Record()|",
    "v1Body": [
      "|java+method:///io/vertx/servicediscovery/Record/setLocation(io.vertx.core.json.JsonObject)|",
      "|java+method:///io/vertx/servicediscovery/Record/setName(java.lang.String)|",
      "|java+method:///io/georocket/util/service/Service/publishOnce(io.vertx.servicediscovery.Record,io.vertx.rxjava.servicediscovery.ServiceDiscovery,io.vertx.rxjava.core.Vertx)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///io/vertx/core/json/JsonObject/JsonObject()|",
      "|java+method:///java/lang/String/trim()|",
      "|java+constructor:///io/vertx/servicediscovery/Record/Record()|",
      "|java+method:///io/vertx/core/json/JsonObject/put(java.lang.String,java.lang.String)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///rx/Observable/error(java.lang.Throwable)|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/servicediscovery/Record/setLocation(io.vertx.core.json.JsonObject)|",
      "|java+method:///io/vertx/servicediscovery/Record/setName(java.lang.String)|",
      "|java+method:///io/georocket/util/service/Service/publishOnce(io.vertx.servicediscovery.Record,io.vertx.rxjava.servicediscovery.ServiceDiscovery,io.vertx.rxjava.core.Vertx)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///rx/Single/error(java.lang.Throwable)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+constructor:///io/vertx/core/json/JsonObject/JsonObject()|",
      "|java+method:///java/lang/String/trim()|",
      "|java+constructor:///io/vertx/servicediscovery/Record/Record()|",
      "|java+method:///io/vertx/core/json/JsonObject/put(java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "io.vertx:vertx-service-discovery:3.4.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.0.0",
    "coordinatesV2": "io.georocket:georocket-server:1.1.0",
    "caller": "|java+method:///io/georocket/index/generic/DefaultMetaIndexer/onIndexChunk(java.lang.String,io.georocket.storage.ChunkMeta,io.georocket.storage.IndexMeta)|",
    "called": "|java+method:///io/georocket/storage/ChunkMeta/toJsonObject()|",
    "v1Body": [
      "|java+method:///io/georocket/storage/IndexMeta/getTags()|",
      "|java+method:///io/georocket/storage/ChunkMeta/toJsonObject()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///io/georocket/storage/IndexMeta/getProperties()|",
      "|java+method:///io/georocket/storage/IndexMeta/getTags()|",
      "|java+method:///io/georocket/storage/ChunkMeta/toJsonObject()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "io.georocket:georocket-server-api:1.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.0.0",
    "coordinatesV2": "io.georocket:georocket-server:1.1.0",
    "caller": "|java+method:///io/georocket/storage/indexed/IndexedStore/lambda$add$0(io.vertx.core.Handler,io.georocket.storage.ChunkMeta,io.georocket.storage.IndexMeta,io.vertx.core.AsyncResult)|",
    "called": "|java+method:///io/georocket/storage/ChunkMeta/toJsonObject()|",
    "v1Body": [
      "|java+method:///io/vertx/core/json/JsonObject/put(java.lang.String,java.lang.Long)|",
      "|java+method:///io/vertx/core/json/JsonObject/put(java.lang.String,io.vertx.core.json.JsonObject)|",
      "|java+constructor:///io/vertx/core/json/JsonObject/JsonObject()|",
      "|java+method:///io/vertx/core/json/JsonObject/put(java.lang.String,io.vertx.core.json.JsonArray)|",
      "|java+method:///io/georocket/storage/IndexMeta/getTags()|",
      "|java+method:///io/vertx/core/eventbus/EventBus/send(java.lang.String,java.lang.Object)|",
      "|java+constructor:///io/vertx/core/json/JsonArray/JsonArray(java.util.List)|",
      "|java+method:///io/vertx/core/json/JsonObject/put(java.lang.String,java.lang.String)|",
      "|java+method:///io/vertx/core/AsyncResult/cause()|",
      "|java+method:///io/vertx/core/Handler/handle(java.lang.Object)|",
      "|java+method:///io/georocket/storage/IndexMeta/getTimestamp()|",
      "|java+method:///io/georocket/storage/IndexMeta/getCorrelationId()|",
      "|java+method:///io/georocket/storage/ChunkMeta/toJsonObject()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/vertx/core/Vertx/eventBus()|",
      "|java+method:///io/vertx/core/AsyncResult/result()|",
      "|java+method:///io/vertx/core/AsyncResult/failed()|",
      "|java+method:///io/vertx/core/Future/failedFuture(java.lang.Throwable)|",
      "|java+method:///io/vertx/core/Future/succeededFuture()|",
      "|java+method:///io/georocket/storage/IndexMeta/getFallbackCRSString()|",
      "|java+method:///io/georocket/storage/IndexMeta/getFilename()|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/core/json/JsonObject/put(java.lang.String,io.vertx.core.json.JsonObject)|",
      "|java+constructor:///io/vertx/core/json/JsonObject/JsonObject()|",
      "|java+method:///io/vertx/core/json/JsonObject/put(java.lang.String,io.vertx.core.json.JsonArray)|",
      "|java+method:///io/georocket/storage/IndexMeta/getTags()|",
      "|java+method:///io/vertx/core/eventbus/EventBus/send(java.lang.String,java.lang.Object)|",
      "|java+constructor:///io/vertx/core/json/JsonArray/JsonArray(java.util.List)|",
      "|java+method:///io/vertx/core/json/JsonObject/put(java.lang.String,java.lang.String)|",
      "|java+method:///io/vertx/core/Handler/handle(java.lang.Object)|",
      "|java+method:///io/georocket/storage/IndexMeta/getTimestamp()|",
      "|java+method:///io/georocket/storage/IndexMeta/getCorrelationId()|",
      "|java+method:///io/georocket/storage/ChunkMeta/toJsonObject()|",
      "|java+method:///io/georocket/storage/IndexMeta/getProperties()|",
      "|java+method:///io/vertx/core/json/JsonObject/put(java.lang.String,java.lang.Long)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/vertx/core/Vertx/eventBus()|",
      "|java+method:///io/vertx/core/AsyncResult/result()|",
      "|java+method:///io/vertx/core/AsyncResult/failed()|",
      "|java+constructor:///io/vertx/core/json/JsonObject/JsonObject(java.util.Map)|",
      "|java+method:///io/vertx/core/AsyncResult/cause()|",
      "|java+method:///io/vertx/core/Future/failedFuture(java.lang.Throwable)|",
      "|java+method:///io/vertx/core/Future/succeededFuture()|",
      "|java+method:///io/georocket/storage/IndexMeta/getFallbackCRSString()|",
      "|java+method:///io/georocket/storage/IndexMeta/getFilename()|"
    ],
    "affectedLib": "io.georocket:georocket-server-api:1.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.0.0",
    "coordinatesV2": "io.georocket:georocket-server:1.1.0",
    "caller": "|java+method:///io/georocket/util/ThrowableHelper/throwableToMessage(java.lang.Throwable,java.lang.String)|",
    "called": "|java+method:///io/georocket/ServerAPIException/toJson()|",
    "v1Body": [
      "|java+method:///java/lang/Throwable/getMessage()|"
    ],
    "v2Body": [
      "|java+method:///io/georocket/ServerAPIException/toJson()|",
      "|java+method:///io/vertx/core/json/JsonObject/toString()|",
      "|java+method:///java/lang/Throwable/getMessage()|"
    ],
    "affectedLib": "io.georocket:georocket-server-api:1.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.0.0",
    "coordinatesV2": "io.georocket:georocket-server:1.1.0",
    "caller": "|java+method:///io/georocket/index/IndexerVerticle/lambda$onAdd$37(io.vertx.rxjava.core.eventbus.Message)|",
    "called": "|java+constructor:///io/georocket/storage/IndexMeta/IndexMeta(java.lang.String,java.lang.String,long,java.util.List,java.util.Map,java.lang.String)|",
    "v1Body": [
      "|java+method:///io/georocket/index/IndexerVerticle/getMeta(io.vertx.core.json.JsonObject)|",
      "|java+method:///io/vertx/core/json/JsonObject/getLong(java.lang.String,java.lang.Long)|",
      "|java+method:///io/vertx/core/json/JsonArray/stream()|",
      "|java+method:///rx/Observable/map(rx.functions.Func1)|",
      "|java+method:///rx/Observable/empty()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/vertx/rxjava/core/eventbus/Message/body()|",
      "|java+constructor:///io/georocket/storage/IndexMeta/IndexMeta(java.lang.String,java.lang.String,long,java.util.List,java.lang.String)|",
      "|java+method:///java/util/stream/Stream/flatMap(java.util.function.Function)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///io/vertx/core/logging/Logger/trace(java.lang.Object)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/stream/Stream/collect(java.util.stream.Collector)|",
      "|java+method:///io/georocket/index/IndexerVerticle/openChunkToDocument(java.lang.String,io.georocket.storage.ChunkMeta,io.georocket.storage.IndexMeta)|",
      "|java+method:///java/util/stream/Collectors/toList()|",
      "|java+method:///io/vertx/rxjava/core/eventbus/Message/fail(int,java.lang.String)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///io/vertx/core/json/JsonObject/getJsonArray(java.lang.String)|",
      "|java+method:///rx/Observable/onErrorResumeNext(rx.functions.Func1)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/vertx/core/json/JsonObject/getJsonObject(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/core/json/JsonObject/getLong(java.lang.String,java.lang.Long)|",
      "|java+method:///io/vertx/core/json/JsonArray/stream()|",
      "|java+method:///rx/Observable/map(rx.functions.Func1)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/vertx/rxjava/core/eventbus/Message/body()|",
      "|java+method:///java/util/stream/Stream/flatMap(java.util.function.Function)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///io/vertx/core/logging/Logger/trace(java.lang.Object)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/georocket/index/IndexerVerticle/getMeta(io.vertx.core.json.JsonObject)|",
      "|java+method:///io/vertx/core/json/JsonObject/getMap()|",
      "|java+method:///rx/Observable/empty()|",
      "|java+constructor:///io/georocket/storage/IndexMeta/IndexMeta(java.lang.String,java.lang.String,long,java.util.List,java.util.Map,java.lang.String)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/stream/Stream/collect(java.util.stream.Collector)|",
      "|java+method:///io/georocket/index/IndexerVerticle/openChunkToDocument(java.lang.String,io.georocket.storage.ChunkMeta,io.georocket.storage.IndexMeta)|",
      "|java+method:///java/util/stream/Collectors/toList()|",
      "|java+method:///io/vertx/rxjava/core/eventbus/Message/fail(int,java.lang.String)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///io/vertx/core/json/JsonObject/getJsonArray(java.lang.String)|",
      "|java+method:///rx/Observable/onErrorResumeNext(rx.functions.Func1)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/vertx/core/json/JsonObject/getJsonObject(java.lang.String)|"
    ],
    "affectedLib": "io.georocket:georocket-server-api:1.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.0.0",
    "coordinatesV2": "io.georocket:georocket-server:1.1.0",
    "caller": "|java+method:///io/georocket/index/generic/BoundingBoxIndexerFactory/compileQuery(java.lang.String)|",
    "called": "|java+method:///io/georocket/query/ElasticsearchQueryHelper/shape(java.lang.String,io.vertx.core.json.JsonArray)|",
    "v1Body": [
      "|java+method:///io/georocket/query/ElasticsearchQueryHelper/geoShapeQuery(java.lang.String,io.vertx.core.json.JsonObject,java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/split(java.lang.CharSequence)|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///com/google/common/base/Splitter/on(char)|",
      "|java+constructor:///io/vertx/core/json/JsonArray/JsonArray()|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/trimResults()|",
      "|java+method:///io/vertx/core/json/JsonArray/add(io.vertx.core.json.JsonArray)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/vertx/core/json/JsonArray/add(java.lang.Double)|",
      "|java+method:///io/georocket/query/ElasticsearchQueryHelper/shape(java.lang.String,io.vertx.core.json.JsonArray)|",
      "|java+method:///java/lang/Iterable/iterator()|"
    ],
    "v2Body": [
      "|java+method:///java/util/stream/Stream/map(java.util.function.Function)|",
      "|java+method:///io/georocket/query/ElasticsearchQueryHelper/geoShapeQuery(java.lang.String,io.vertx.core.json.JsonObject,java.lang.String)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///java/util/stream/Stream/mapToDouble(java.util.function.ToDoubleFunction)|",
      "|java+constructor:///io/vertx/core/json/JsonArray/JsonArray()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/vertx/core/json/JsonArray/add(java.lang.Double)|",
      "|java+method:///org/geotools/referencing/CRS/decode(java.lang.String)|",
      "|java+method:///java/lang/String/lastIndexOf(int)|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/Arrays/stream(java.lang.Object%5B%5D)|",
      "|java+method:///org/opengis/referencing/FactoryException/getMessage()|",
      "|java+method:///io/georocket/util/CoordinateTransformer/transform(double%5B%5D,int)|",
      "|java+method:///io/vertx/core/json/JsonArray/add(io.vertx.core.json.JsonArray)|",
      "|java+method:///java/util/stream/DoubleStream/toArray()|",
      "|java+method:///io/georocket/util/CoordinateTransformer/decode(java.lang.String)|",
      "|java+method:///io/georocket/query/ElasticsearchQueryHelper/shape(java.lang.String,io.vertx.core.json.JsonArray)|",
      "|java+method:///java/lang/String/substring(int,int)|",
      "|java+method:///org/opengis/referencing/operation/TransformException/getMessage()|",
      "|java+constructor:///io/georocket/util/CoordinateTransformer/CoordinateTransformer(org.opengis.referencing.crs.CoordinateReferenceSystem)|"
    ],
    "affectedLib": "io.georocket:georocket-server-api:1.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.0.0",
    "coordinatesV2": "io.georocket:georocket-server:1.1.0",
    "caller": "|java+method:///io/georocket/index/IndexerVerticle/start(io.vertx.core.Future)|",
    "called": "|java+method:///io/georocket/query/DefaultQueryCompiler/setQueryCompilers(java.util.Collection)|",
    "v1Body": [
      "|java+constructor:///io/georocket/storage/RxStore/RxStore(io.georocket.storage.Store)|",
      "|java+method:///rx/Observable/flatMap(rx.functions.Func1)|",
      "|java+method:///org/jooq/lambda/Seq/filter(java.util.function.Predicate)|",
      "|java+method:///org/jooq/lambda/Seq/cast(java.lang.Class)|",
      "|java+method:///com/google/common/collect/ImmutableList/copyOf(java.lang.Iterable)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///rx/Observable/subscribe(rx.functions.Action1,rx.functions.Action1)|",
      "|java+method:///io/georocket/index/elasticsearch/ElasticsearchClientFactory/createElasticsearchClient(java.lang.String)|",
      "|java+method:///java/util/ServiceLoader/load(java.lang.Class)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///io/georocket/index/IndexerVerticle/createQueryCompiler()|",
      "|java+method:///io/georocket/index/IndexerVerticle/getVertx()|",
      "|java+method:///io/georocket/index/IndexerVerticle/config()|",
      "|java+method:///org/jooq/lambda/Seq/seq(java.lang.Iterable)|",
      "|java+method:///rx/Observable/doOnNext(rx.functions.Action1)|",
      "|java+method:///io/georocket/query/DefaultQueryCompiler/setQueryCompilers(java.util.Collection)|",
      "|java+method:///io/georocket/storage/StoreFactory/createStore(io.vertx.core.Vertx)|",
      "|java+method:///io/vertx/core/json/JsonObject/getBoolean(java.lang.String,java.lang.Boolean)|",
      "|java+constructor:///io/georocket/index/elasticsearch/ElasticsearchClientFactory/ElasticsearchClientFactory(io.vertx.rxjava.core.Vertx)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///io/georocket/storage/RxStore/RxStore(io.georocket.storage.Store)|",
      "|java+method:///rx/Observable/flatMap(rx.functions.Func1)|",
      "|java+method:///org/jooq/lambda/Seq/filter(java.util.function.Predicate)|",
      "|java+method:///org/jooq/lambda/Seq/cast(java.lang.Class)|",
      "|java+method:///com/google/common/collect/ImmutableList/copyOf(java.lang.Iterable)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///rx/Observable/subscribe(rx.functions.Action1,rx.functions.Action1)|",
      "|java+method:///java/util/ServiceLoader/load(java.lang.Class)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///io/georocket/index/IndexerVerticle/createQueryCompiler()|",
      "|java+method:///io/georocket/index/IndexerVerticle/getVertx()|",
      "|java+method:///io/georocket/index/elasticsearch/ElasticsearchClientFactory/createElasticsearchClient(java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///io/georocket/index/IndexerVerticle/config()|",
      "|java+method:///org/jooq/lambda/Seq/seq(java.lang.Iterable)|",
      "|java+method:///rx/Observable/doOnNext(rx.functions.Action1)|",
      "|java+method:///io/georocket/query/DefaultQueryCompiler/setQueryCompilers(java.util.Collection)|",
      "|java+method:///io/georocket/storage/StoreFactory/createStore(io.vertx.core.Vertx)|",
      "|java+method:///io/vertx/core/json/JsonObject/getInteger(java.lang.String,java.lang.Integer)|",
      "|java+method:///io/vertx/core/json/JsonObject/getBoolean(java.lang.String,java.lang.Boolean)|",
      "|java+constructor:///io/georocket/index/elasticsearch/ElasticsearchClientFactory/ElasticsearchClientFactory(io.vertx.rxjava.core.Vertx)|"
    ],
    "affectedLib": "io.georocket:georocket-common:1.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.0.0",
    "coordinatesV2": "io.georocket:georocket-server:1.1.0",
    "caller": "|java+method:///io/georocket/index/IndexerVerticle/onQuery(io.vertx.core.json.JsonObject)|",
    "called": "|java+method:///io/georocket/query/DefaultQueryCompiler/compileQuery(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///rx/Observable/map(rx.functions.Func1)|",
      "|java+method:///io/georocket/query/DefaultQueryCompiler/compileQuery(java.lang.String,java.lang.String)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String)|",
      "|java+method:///io/vertx/core/json/JsonObject/getInteger(java.lang.String,java.lang.Integer)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///io/georocket/index/elasticsearch/ElasticsearchClient/continueScroll(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///io/georocket/index/elasticsearch/ElasticsearchClient/beginScroll(java.lang.String,io.vertx.core.json.JsonObject,io.vertx.core.json.JsonObject,int,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///rx/Observable/map(rx.functions.Func1)|",
      "|java+method:///io/georocket/index/elasticsearch/ElasticsearchClient/beginScroll(java.lang.String,io.vertx.core.json.JsonObject,io.vertx.core.json.JsonObject,io.vertx.core.json.JsonObject,java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///rx/Observable/error(java.lang.Throwable)|",
      "|java+method:///io/georocket/query/DefaultQueryCompiler/compileQuery(java.lang.String,java.lang.String)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String)|",
      "|java+method:///io/vertx/core/json/JsonObject/getInteger(java.lang.String,java.lang.Integer)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///io/georocket/index/elasticsearch/ElasticsearchClient/continueScroll(java.lang.String,java.lang.String)|",
      "|java+constructor:///io/vertx/core/json/JsonObject/JsonObject()|",
      "|java+method:///io/vertx/core/json/JsonObject/put(java.lang.String,java.lang.Integer)|"
    ],
    "affectedLib": "io.georocket:georocket-common:1.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.0.0",
    "coordinatesV2": "io.georocket:georocket-server:1.1.0",
    "caller": "|java+method:///io/georocket/index/generic/BoundingBoxIndexerFactory/compileQuery(java.lang.String)|",
    "called": "|java+method:///io/georocket/util/CoordinateTransformer/decode(java.lang.String)|",
    "v1Body": [
      "|java+method:///io/georocket/query/ElasticsearchQueryHelper/geoShapeQuery(java.lang.String,io.vertx.core.json.JsonObject,java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/split(java.lang.CharSequence)|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///com/google/common/base/Splitter/on(char)|",
      "|java+constructor:///io/vertx/core/json/JsonArray/JsonArray()|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/trimResults()|",
      "|java+method:///io/vertx/core/json/JsonArray/add(io.vertx.core.json.JsonArray)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/vertx/core/json/JsonArray/add(java.lang.Double)|",
      "|java+method:///io/georocket/query/ElasticsearchQueryHelper/shape(java.lang.String,io.vertx.core.json.JsonArray)|",
      "|java+method:///java/lang/Iterable/iterator()|"
    ],
    "v2Body": [
      "|java+method:///java/util/stream/Stream/map(java.util.function.Function)|",
      "|java+method:///io/georocket/query/ElasticsearchQueryHelper/geoShapeQuery(java.lang.String,io.vertx.core.json.JsonObject,java.lang.String)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///java/util/stream/Stream/mapToDouble(java.util.function.ToDoubleFunction)|",
      "|java+constructor:///io/vertx/core/json/JsonArray/JsonArray()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/vertx/core/json/JsonArray/add(java.lang.Double)|",
      "|java+method:///org/geotools/referencing/CRS/decode(java.lang.String)|",
      "|java+method:///java/lang/String/lastIndexOf(int)|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/Arrays/stream(java.lang.Object%5B%5D)|",
      "|java+method:///org/opengis/referencing/FactoryException/getMessage()|",
      "|java+method:///io/georocket/util/CoordinateTransformer/transform(double%5B%5D,int)|",
      "|java+method:///io/vertx/core/json/JsonArray/add(io.vertx.core.json.JsonArray)|",
      "|java+method:///java/util/stream/DoubleStream/toArray()|",
      "|java+method:///io/georocket/util/CoordinateTransformer/decode(java.lang.String)|",
      "|java+method:///io/georocket/query/ElasticsearchQueryHelper/shape(java.lang.String,io.vertx.core.json.JsonArray)|",
      "|java+method:///java/lang/String/substring(int,int)|",
      "|java+method:///org/opengis/referencing/operation/TransformException/getMessage()|",
      "|java+constructor:///io/georocket/util/CoordinateTransformer/CoordinateTransformer(org.opengis.referencing.crs.CoordinateReferenceSystem)|"
    ],
    "affectedLib": "io.georocket:georocket-common:1.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.0.0",
    "coordinatesV2": "io.georocket:georocket-server:1.1.0",
    "caller": "|java+method:///io/georocket/GeoRocket/loadGeoRocketConfiguration()|",
    "called": "|java+method:///io/georocket/util/JsonUtils/flatten(io.vertx.core.json.JsonObject)|",
    "v1Body": [
      "|java+method:///io/georocket/GeoRocket/replaceConfVariables(io.vertx.core.json.JsonObject)|",
      "|java+constructor:///io/vertx/core/json/JsonObject/JsonObject(java.lang.String)|",
      "|java+method:///java/io/File/getName()|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///io/vertx/core/logging/Logger/info(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/yaml/snakeyaml/Yaml/Yaml()|",
      "|java+method:///java/io/File/getCanonicalFile()|",
      "|java+constructor:///io/vertx/core/json/JsonObject/JsonObject(java.util.Map)|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///org/yaml/snakeyaml/Yaml/loadAs(java.lang.String,java.lang.Class)|",
      "|java+method:///io/georocket/util/JsonUtils/flatten(io.vertx.core.json.JsonObject)|",
      "|java+method:///io/georocket/GeoRocket/setDefaultConf(io.vertx.core.json.JsonObject)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///org/apache/commons/io/FileUtils/readFileToString(java.io.File,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/System/getenv(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///io/georocket/GeoRocket/replaceConfVariables(io.vertx.core.json.JsonObject)|",
      "|java+constructor:///io/vertx/core/json/JsonObject/JsonObject(java.lang.String)|",
      "|java+method:///java/io/File/getName()|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/yaml/snakeyaml/Yaml/Yaml()|",
      "|java+method:///java/io/File/getCanonicalFile()|",
      "|java+constructor:///io/vertx/core/json/JsonObject/JsonObject(java.util.Map)|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///org/yaml/snakeyaml/Yaml/loadAs(java.lang.String,java.lang.Class)|",
      "|java+method:///io/georocket/util/JsonUtils/flatten(io.vertx.core.json.JsonObject)|",
      "|java+method:///io/georocket/GeoRocket/setDefaultConf(io.vertx.core.json.JsonObject)|",
      "|java+method:///io/georocket/GeoRocket/overwriteWithEnvironmentVariables(io.vertx.core.json.JsonObject)|",
      "|java+method:///io/vertx/core/logging/Logger/info(java.lang.Object)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///org/apache/commons/io/FileUtils/readFileToString(java.io.File,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/System/getenv(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|"
    ],
    "affectedLib": "io.georocket:georocket-common:1.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.0.0",
    "coordinatesV2": "io.georocket:georocket-server:1.1.0",
    "caller": "|java+method:///io/georocket/index/IndexerVerticle/lambda$null$17(io.vertx.rxjava.core.eventbus.Message,java.lang.Throwable)|",
    "called": "|java+method:///io/vertx/rxjava/core/eventbus/Message/fail(int,java.lang.String)|",
    "v1Body": [
      "|java+method:///io/vertx/rxjava/core/eventbus/Message/fail(int,java.lang.String)|",
      "|java+method:///java/lang/Throwable/getMessage()|",
      "|java+method:///io/georocket/util/ThrowableHelper/throwableToCode(java.lang.Throwable)|",
      "|java+method:///io/vertx/core/logging/Logger/error(java.lang.Object,java.lang.Throwable)|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/rxjava/core/eventbus/Message/fail(int,java.lang.String)|",
      "|java+method:///io/georocket/util/ThrowableHelper/throwableToCode(java.lang.Throwable)|",
      "|java+method:///io/georocket/util/ThrowableHelper/throwableToMessage(java.lang.Throwable,java.lang.String)|",
      "|java+method:///io/vertx/core/logging/Logger/error(java.lang.Object,java.lang.Throwable)|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.4.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.0.0",
    "coordinatesV2": "io.georocket:georocket-server:1.1.0",
    "caller": "|java+method:///io/georocket/http/StoreEndpoint/onPost(io.vertx.ext.web.RoutingContext)|",
    "called": "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
    "v1Body": [
      "|java+method:///io/vertx/core/http/HttpServerRequest/getParam(java.lang.String)|",
      "|java+method:///io/vertx/core/logging/Logger/info(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/on(char)|",
      "|java+method:///io/vertx/core/file/FileSystem/mkdirs(java.lang.String,io.vertx.core.Handler)|",
      "|java+method:///io/vertx/core/Vertx/fileSystem()|",
      "|java+method:///io/georocket/http/StoreEndpoint/getStorePath(io.vertx.ext.web.RoutingContext)|",
      "|java+method:///org/bson/types/ObjectId/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/flatMap(rx.functions.Func1)|",
      "|java+method:///io/vertx/core/http/HttpServerRequest/pause()|",
      "|java+method:///com/google/common/base/Splitter/splitToList(java.lang.CharSequence)|",
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+constructor:///org/bson/types/ObjectId/ObjectId()|",
      "|java+method:///com/google/common/base/Splitter/trimResults()|",
      "|java+method:///rx/Observable/flatMap(rx.functions.Func1)|",
      "|java+method:///rx/Observable/subscribe(rx.functions.Action1,rx.functions.Action1)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/vertx/ext/web/RoutingContext/request()|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/core/http/HttpServerRequest/getParam(java.lang.String)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/on(char)|",
      "|java+method:///io/vertx/core/file/FileSystem/mkdirs(java.lang.String,io.vertx.core.Handler)|",
      "|java+method:///java/util/UUID/randomUUID()|",
      "|java+method:///io/georocket/http/StoreEndpoint/onReceivingFileStarted(java.lang.String,java.lang.String,long)|",
      "|java+method:///org/bson/types/ObjectId/toString()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/vertx/core/http/HttpServerResponse/setStatusCode(int)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/flatMap(rx.functions.Func1)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///io/vertx/core/http/HttpServerRequest/pause()|",
      "|java+method:///com/google/common/base/Splitter/splitToList(java.lang.CharSequence)|",
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+constructor:///org/bson/types/ObjectId/ObjectId()|",
      "|java+method:///org/apache/commons/text/StringEscapeUtils/unescapeJava(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///io/georocket/http/StoreEndpoint/getEndpointPath(io.vertx.ext.web.RoutingContext)|",
      "|java+method:///com/google/common/base/Splitter/trimResults()|",
      "|java+method:///rx/Observable/flatMap(rx.functions.Func1)|",
      "|java+method:///java/util/regex/Pattern/quote(java.lang.String)|",
      "|java+method:///io/vertx/core/Vertx/fileSystem()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///io/vertx/core/http/HttpServerRequest/response()|",
      "|java+method:///rx/Observable/subscribe(rx.functions.Action1,rx.functions.Action1)|",
      "|java+method:///io/vertx/core/http/HttpServerResponse/end(java.lang.String)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/vertx/ext/web/RoutingContext/request()|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.4.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.0.0",
    "coordinatesV2": "io.georocket:georocket-server:1.1.0",
    "caller": "|java+method:///io/georocket/index/elasticsearch/ElasticsearchInstaller/extractArchive(java.lang.String,java.lang.String,boolean)|",
    "called": "|java+method:///io/vertx/rxjava/core/Vertx/executeBlocking(io.vertx.core.Handler,io.vertx.core.Handler)|",
    "v1Body": [
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/doOnNext(rx.functions.Action1)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|",
      "|java+method:///io/vertx/rxjava/core/Vertx/executeBlocking(io.vertx.core.Handler,io.vertx.core.Handler)|"
    ],
    "v2Body": [
      "|java+method:///rx/Observable/toSingle()|",
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/doOnNext(rx.functions.Action1)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|",
      "|java+method:///io/vertx/rxjava/core/Vertx/executeBlocking(io.vertx.core.Handler,io.vertx.core.Handler)|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.4.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.0.0",
    "coordinatesV2": "io.georocket:georocket-server:1.1.0",
    "caller": "|java+method:///io/georocket/index/elasticsearch/ElasticsearchInstaller/doDownload(java.lang.String,io.vertx.rxjava.core.file.AsyncFile)|",
    "called": "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/handler(io.vertx.core.Handler)|",
    "v1Body": [
      "|java+constructor:///io/vertx/core/http/HttpClientOptions/HttpClientOptions()|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClient/getAbs(java.lang.String)|",
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/exceptionHandler(io.vertx.core.Handler)|",
      "|java+method:///io/vertx/rxjava/core/Vertx/createHttpClient(io.vertx.core.http.HttpClientOptions)|",
      "|java+method:///io/vertx/core/http/HttpClientOptions/setSsl(boolean)|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/handler(io.vertx.core.Handler)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/end()|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|"
    ],
    "v2Body": [
      "|java+constructor:///io/vertx/core/http/HttpClientOptions/HttpClientOptions()|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClient/getAbs(java.lang.String)|",
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/exceptionHandler(io.vertx.core.Handler)|",
      "|java+method:///io/vertx/rxjava/core/Vertx/createHttpClient(io.vertx.core.http.HttpClientOptions)|",
      "|java+method:///io/vertx/core/http/HttpClientOptions/setSsl(boolean)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toSingle()|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/handler(io.vertx.core.Handler)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/end()|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.4.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.0.0",
    "coordinatesV2": "io.georocket:georocket-server:1.1.0",
    "caller": "|java+method:///io/georocket/index/IndexerVerticle/lambda$null$36(io.vertx.rxjava.core.eventbus.Message,java.lang.Throwable)|",
    "called": "|java+method:///io/vertx/rxjava/core/eventbus/Message/fail(int,java.lang.String)|",
    "v1Body": [
      "|java+method:///rx/Observable/empty()|",
      "|java+method:///io/vertx/rxjava/core/eventbus/Message/fail(int,java.lang.String)|",
      "|java+method:///java/lang/Throwable/getMessage()|",
      "|java+method:///io/georocket/util/ThrowableHelper/throwableToCode(java.lang.Throwable)|"
    ],
    "v2Body": [
      "|java+method:///rx/Observable/empty()|",
      "|java+method:///io/vertx/rxjava/core/eventbus/Message/fail(int,java.lang.String)|",
      "|java+method:///io/georocket/util/ThrowableHelper/throwableToCode(java.lang.Throwable)|",
      "|java+method:///io/georocket/util/ThrowableHelper/throwableToMessage(java.lang.Throwable,java.lang.String)|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.4.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.0.0",
    "coordinatesV2": "io.georocket:georocket-server:1.1.0",
    "caller": "|java+method:///io/georocket/ImporterVerticle/lambda$null$8(java.lang.String,io.vertx.rxjava.core.file.AsyncFile,io.vertx.rxjava.core.file.FileSystem)|",
    "called": "|java+method:///io/vertx/rxjava/core/file/AsyncFile/rxClose()|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///rx/Observable/flatMap(rx.functions.Func1)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///rx/Observable/subscribe(rx.functions.Action1,rx.functions.Action1)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/vertx/core/logging/Logger/info(java.lang.Object)|",
      "|java+method:///io/vertx/rxjava/core/file/AsyncFile/closeObservable()|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/core/logging/Logger/info(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///rx/Single/flatMap(rx.functions.Func1)|",
      "|java+method:///rx/Single/subscribe(rx.functions.Action1,rx.functions.Action1)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/vertx/rxjava/core/file/AsyncFile/rxClose()|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.4.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.0.0",
    "coordinatesV2": "io.georocket:georocket-server:1.1.0",
    "caller": "|java+method:///io/georocket/index/elasticsearch/ElasticsearchInstaller/download(java.lang.String,java.lang.String,boolean)|",
    "called": "|java+method:///io/vertx/rxjava/core/Vertx/fileSystem()|",
    "v1Body": [
      "|java+method:///io/vertx/rxjava/core/file/FileSystem/existsObservable(java.lang.String)|",
      "|java+method:///io/vertx/rxjava/core/Vertx/fileSystem()|",
      "|java+method:///rx/Observable/flatMap(rx.functions.Func1)|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/rxjava/core/file/FileSystem/rxExists(java.lang.String)|",
      "|java+method:///io/vertx/rxjava/core/Vertx/fileSystem()|",
      "|java+method:///rx/Single/flatMap(rx.functions.Func1)|",
      "|java+method:///rx/Single/toObservable()|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.4.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.0.0",
    "coordinatesV2": "io.georocket:georocket-server:1.1.0",
    "caller": "|java+method:///io/georocket/ImporterVerticle/start()|",
    "called": "|java+method:///io/vertx/rxjava/core/eventbus/EventBus/localConsumer(java.lang.String)|",
    "v1Body": [
      "|java+method:///io/georocket/ImporterVerticle/config()|",
      "|java+method:///io/georocket/ImporterVerticle/getVertx()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///rx/Observable/subscribe(rx.functions.Action1,rx.functions.Action1)|",
      "|java+method:///io/vertx/rxjava/core/eventbus/MessageConsumer/toObservable()|",
      "|java+method:///io/vertx/rxjava/core/eventbus/EventBus/localConsumer(java.lang.String)|",
      "|java+method:///io/georocket/storage/StoreFactory/createStore(io.vertx.core.Vertx)|",
      "|java+constructor:///io/georocket/storage/RxStore/RxStore(io.georocket.storage.Store)|",
      "|java+method:///io/vertx/rxjava/core/Vertx/eventBus()|",
      "|java+method:///io/vertx/core/logging/Logger/info(java.lang.Object)|",
      "|java+method:///rx/Observable/flatMap(rx.functions.Func1,int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///rx/Observable/onBackpressureBuffer()|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/vertx/core/json/JsonObject/getBoolean(java.lang.String,java.lang.Boolean)|"
    ],
    "v2Body": [
      "|java+method:///io/georocket/ImporterVerticle/config()|",
      "|java+method:///io/vertx/core/logging/Logger/info(java.lang.Object)|",
      "|java+method:///io/georocket/ImporterVerticle/getVertx()|",
      "|java+method:///rx/Observable/flatMapSingle(rx.functions.Func1,boolean,int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///rx/Observable/subscribe(rx.functions.Action1,rx.functions.Action1)|",
      "|java+method:///io/vertx/rxjava/core/eventbus/MessageConsumer/toObservable()|",
      "|java+method:///io/vertx/rxjava/core/eventbus/EventBus/localConsumer(java.lang.String)|",
      "|java+method:///io/georocket/storage/StoreFactory/createStore(io.vertx.core.Vertx)|",
      "|java+constructor:///io/georocket/storage/RxStore/RxStore(io.georocket.storage.Store)|",
      "|java+method:///io/vertx/rxjava/core/Vertx/eventBus()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///rx/Observable/onBackpressureBuffer()|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/vertx/core/json/JsonObject/getBoolean(java.lang.String,java.lang.Boolean)|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.4.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.0.0",
    "coordinatesV2": "io.georocket:georocket-server:1.1.0",
    "caller": "|java+method:///io/georocket/index/elasticsearch/ElasticsearchRunner/runElasticsearch(java.lang.String,int,java.lang.String)|",
    "called": "|java+method:///io/vertx/rxjava/core/Context/config()|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/vertx/rxjava/core/Vertx/executeBlockingObservable(io.vertx.core.Handler)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/vertx/rxjava/core/Vertx/getOrCreateContext()|",
      "|java+method:///io/vertx/rxjava/core/Context/config()|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/rxjava/core/Vertx/rxExecuteBlocking(io.vertx.core.Handler)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///rx/Single/toObservable()|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/vertx/rxjava/core/Vertx/getOrCreateContext()|",
      "|java+method:///io/vertx/rxjava/core/Context/config()|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.4.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.0.0",
    "coordinatesV2": "io.georocket:georocket-server:1.1.0",
    "caller": "|java+method:///io/georocket/index/elasticsearch/ElasticsearchInstaller/downloadArchive(java.lang.String)|",
    "called": "|java+method:///io/vertx/rxjava/core/file/FileSystem/rxOpen(java.lang.String,io.vertx.core.file.OpenOptions)|",
    "v1Body": [
      "|java+method:///io/vertx/core/file/OpenOptions/setTruncateExisting(boolean)|",
      "|java+constructor:///io/vertx/core/file/OpenOptions/OpenOptions()|",
      "|java+method:///rx/Observable/flatMap(rx.functions.Func1)|",
      "|java+method:///io/vertx/core/file/OpenOptions/setWrite(boolean)|",
      "|java+method:///rx/Observable/error(java.lang.Throwable)|",
      "|java+method:///java/io/File/createTempFile(java.lang.String,java.lang.String)|",
      "|java+method:///io/vertx/rxjava/core/file/FileSystem/openObservable(java.lang.String,io.vertx.core.file.OpenOptions)|",
      "|java+method:///io/vertx/rxjava/core/Vertx/fileSystem()|",
      "|java+method:///io/vertx/core/file/OpenOptions/setCreate(boolean)|",
      "|java+method:///java/io/File/getAbsolutePath()|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/core/file/OpenOptions/setTruncateExisting(boolean)|",
      "|java+method:///io/vertx/rxjava/core/Vertx/fileSystem()|",
      "|java+method:///rx/Single/flatMap(rx.functions.Func1)|",
      "|java+method:///rx/Single/error(java.lang.Throwable)|",
      "|java+method:///io/vertx/core/file/OpenOptions/setWrite(boolean)|",
      "|java+method:///java/io/File/createTempFile(java.lang.String,java.lang.String)|",
      "|java+constructor:///io/vertx/core/file/OpenOptions/OpenOptions()|",
      "|java+method:///io/vertx/rxjava/core/file/FileSystem/rxOpen(java.lang.String,io.vertx.core.file.OpenOptions)|",
      "|java+method:///io/vertx/core/file/OpenOptions/setCreate(boolean)|",
      "|java+method:///java/io/File/getAbsolutePath()|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.4.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.0.0",
    "coordinatesV2": "io.georocket:georocket-server:1.1.0",
    "caller": "|java+method:///io/georocket/index/IndexerVerticle/lambda$null$14(io.vertx.rxjava.core.eventbus.Message,java.lang.Throwable)|",
    "called": "|java+method:///io/vertx/rxjava/core/eventbus/Message/fail(int,java.lang.String)|",
    "v1Body": [
      "|java+method:///io/vertx/rxjava/core/eventbus/Message/fail(int,java.lang.String)|",
      "|java+method:///java/lang/Throwable/getMessage()|",
      "|java+method:///io/georocket/util/ThrowableHelper/throwableToCode(java.lang.Throwable)|",
      "|java+method:///io/vertx/core/logging/Logger/error(java.lang.Object,java.lang.Throwable)|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/rxjava/core/eventbus/Message/fail(int,java.lang.String)|",
      "|java+method:///io/georocket/util/ThrowableHelper/throwableToCode(java.lang.Throwable)|",
      "|java+method:///io/georocket/util/ThrowableHelper/throwableToMessage(java.lang.Throwable,java.lang.String)|",
      "|java+method:///io/vertx/core/logging/Logger/error(java.lang.Object,java.lang.Throwable)|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.4.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.0.0",
    "coordinatesV2": "io.georocket:georocket-server:1.1.0",
    "caller": "|java+method:///io/georocket/util/service/Service/publishOnce(io.vertx.servicediscovery.Record,io.vertx.rxjava.servicediscovery.ServiceDiscovery,io.vertx.rxjava.core.Vertx)|",
    "called": "|java+method:///io/vertx/rxjava/core/Vertx/sharedData()|",
    "v1Body": [
      "|java+method:///io/vertx/servicediscovery/Record/getName()|",
      "|java+method:///io/vertx/rxjava/core/Vertx/sharedData()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/vertx/rxjava/core/shareddata/SharedData/getCounterObservable(java.lang.String)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///rx/Observable/flatMap(rx.functions.Func1)|",
      "|java+method:///io/vertx/servicediscovery/Record/getLocation()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///rx/Observable/error(java.lang.Throwable)|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/servicediscovery/Record/getName()|",
      "|java+method:///io/vertx/servicediscovery/Record/getLocation()|",
      "|java+method:///io/vertx/rxjava/core/Vertx/sharedData()|",
      "|java+method:///rx/Single/flatMap(rx.functions.Func1)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///io/vertx/rxjava/core/shareddata/SharedData/rxGetCounter(java.lang.String)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///rx/Single/error(java.lang.Throwable)|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.4.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.0.0",
    "coordinatesV2": "io.georocket:georocket-server:1.1.0",
    "caller": "|java+method:///io/georocket/ImporterVerticle/onImport(io.vertx.rxjava.core.eventbus.Message)|",
    "called": "|java+method:///io/vertx/rxjava/core/eventbus/Message/body()|",
    "v1Body": [
      "|java+method:///io/georocket/ImporterVerticle/onImportingStarted(java.lang.String,java.lang.String,java.lang.String,long)|",
      "|java+method:///io/vertx/core/json/JsonArray/stream()|",
      "|java+method:///rx/Observable/map(rx.functions.Func1)|",
      "|java+constructor:///io/vertx/core/file/OpenOptions/OpenOptions()|",
      "|java+method:///java/util/stream/Stream/collect(java.util.stream.Collector)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///rx/Observable/flatMap(rx.functions.Func1)|",
      "|java+method:///java/util/stream/Collectors/toList()|",
      "|java+method:///io/vertx/core/json/JsonObject/getJsonArray(java.lang.String)|",
      "|java+method:///io/vertx/rxjava/core/eventbus/Message/body()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/vertx/core/file/OpenOptions/setCreate(boolean)|",
      "|java+method:///io/vertx/core/file/OpenOptions/setWrite(boolean)|",
      "|java+method:///java/util/stream/Stream/flatMap(java.util.function.Function)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/vertx/rxjava/core/file/FileSystem/openObservable(java.lang.String,io.vertx.core.file.OpenOptions)|",
      "|java+method:///io/vertx/rxjava/core/Vertx/fileSystem()|",
      "|java+method:///rx/Observable/doOnError(rx.functions.Action1)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///rx/Observable/doOnNext(rx.functions.Action1)|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/core/json/JsonObject/getMap()|",
      "|java+method:///io/vertx/core/json/JsonArray/stream()|",
      "|java+method:///java/util/stream/Stream/collect(java.util.stream.Collector)|",
      "|java+method:///io/vertx/rxjava/core/Vertx/fileSystem()|",
      "|java+method:///java/util/stream/Collectors/toList()|",
      "|java+method:///rx/Single/flatMap(rx.functions.Func1)|",
      "|java+method:///io/vertx/core/json/JsonObject/getJsonArray(java.lang.String)|",
      "|java+method:///io/vertx/rxjava/core/eventbus/Message/body()|",
      "|java+method:///io/vertx/core/file/OpenOptions/setCreate(boolean)|",
      "|java+method:///io/vertx/core/file/OpenOptions/setWrite(boolean)|",
      "|java+method:///java/util/stream/Stream/flatMap(java.util.function.Function)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///rx/Single/doOnError(rx.functions.Action1)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/georocket/ImporterVerticle/onImportingStarted(java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.vertx.core.json.JsonArray,long)|",
      "|java+constructor:///io/vertx/core/file/OpenOptions/OpenOptions()|",
      "|java+method:///io/vertx/rxjava/core/file/FileSystem/rxOpen(java.lang.String,io.vertx.core.file.OpenOptions)|",
      "|java+method:///rx/Single/map(rx.functions.Func1)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/vertx/core/json/JsonObject/getJsonObject(java.lang.String)|",
      "|java+method:///rx/Single/doOnSuccess(rx.functions.Action1)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.4.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.0.0",
    "coordinatesV2": "io.georocket:georocket-server:1.1.0",
    "caller": "|java+method:///io/georocket/index/IndexerVerticle/lambda$onAdd$37(io.vertx.rxjava.core.eventbus.Message)|",
    "called": "|java+method:///io/vertx/rxjava/core/eventbus/Message/body()|",
    "v1Body": [
      "|java+method:///io/georocket/index/IndexerVerticle/getMeta(io.vertx.core.json.JsonObject)|",
      "|java+method:///io/vertx/core/json/JsonObject/getLong(java.lang.String,java.lang.Long)|",
      "|java+method:///io/vertx/core/json/JsonArray/stream()|",
      "|java+method:///rx/Observable/map(rx.functions.Func1)|",
      "|java+method:///rx/Observable/empty()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/vertx/rxjava/core/eventbus/Message/body()|",
      "|java+constructor:///io/georocket/storage/IndexMeta/IndexMeta(java.lang.String,java.lang.String,long,java.util.List,java.lang.String)|",
      "|java+method:///java/util/stream/Stream/flatMap(java.util.function.Function)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///io/vertx/core/logging/Logger/trace(java.lang.Object)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/stream/Stream/collect(java.util.stream.Collector)|",
      "|java+method:///io/georocket/index/IndexerVerticle/openChunkToDocument(java.lang.String,io.georocket.storage.ChunkMeta,io.georocket.storage.IndexMeta)|",
      "|java+method:///java/util/stream/Collectors/toList()|",
      "|java+method:///io/vertx/rxjava/core/eventbus/Message/fail(int,java.lang.String)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///io/vertx/core/json/JsonObject/getJsonArray(java.lang.String)|",
      "|java+method:///rx/Observable/onErrorResumeNext(rx.functions.Func1)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/vertx/core/json/JsonObject/getJsonObject(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/core/json/JsonObject/getLong(java.lang.String,java.lang.Long)|",
      "|java+method:///io/vertx/core/json/JsonArray/stream()|",
      "|java+method:///rx/Observable/map(rx.functions.Func1)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/vertx/rxjava/core/eventbus/Message/body()|",
      "|java+method:///java/util/stream/Stream/flatMap(java.util.function.Function)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///io/vertx/core/logging/Logger/trace(java.lang.Object)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/georocket/index/IndexerVerticle/getMeta(io.vertx.core.json.JsonObject)|",
      "|java+method:///io/vertx/core/json/JsonObject/getMap()|",
      "|java+method:///rx/Observable/empty()|",
      "|java+constructor:///io/georocket/storage/IndexMeta/IndexMeta(java.lang.String,java.lang.String,long,java.util.List,java.util.Map,java.lang.String)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/stream/Stream/collect(java.util.stream.Collector)|",
      "|java+method:///io/georocket/index/IndexerVerticle/openChunkToDocument(java.lang.String,io.georocket.storage.ChunkMeta,io.georocket.storage.IndexMeta)|",
      "|java+method:///java/util/stream/Collectors/toList()|",
      "|java+method:///io/vertx/rxjava/core/eventbus/Message/fail(int,java.lang.String)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///io/vertx/core/json/JsonObject/getJsonArray(java.lang.String)|",
      "|java+method:///rx/Observable/onErrorResumeNext(rx.functions.Func1)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/vertx/core/json/JsonObject/getJsonObject(java.lang.String)|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.4.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.0.0",
    "coordinatesV2": "io.georocket:georocket-server:1.1.0",
    "caller": "|java+method:///io/georocket/GeoRocket/deployHttpServer()|",
    "called": "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+method:///io/vertx/core/http/HttpServer/requestHandler(io.vertx.core.Handler)|",
      "|java+method:///io/georocket/GeoRocket/createHttpServerOptions()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/vertx/core/http/HttpServer/listen(int,java.lang.String,io.vertx.core.Handler)|",
      "|java+method:///io/georocket/GeoRocket/createRouter()|",
      "|java+method:///io/vertx/core/json/JsonObject/getInteger(java.lang.String,java.lang.Integer)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String,java.lang.String)|",
      "|java+method:///io/vertx/core/Vertx/createHttpServer(io.vertx.core.http.HttpServerOptions)|",
      "|java+method:///io/georocket/GeoRocket/config()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+method:///io/vertx/core/http/HttpServer/requestHandler(io.vertx.core.Handler)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toSingle()|",
      "|java+method:///io/georocket/GeoRocket/createHttpServerOptions()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/vertx/core/http/HttpServer/listen(int,java.lang.String,io.vertx.core.Handler)|",
      "|java+method:///io/georocket/GeoRocket/createRouter()|",
      "|java+method:///io/vertx/core/json/JsonObject/getInteger(java.lang.String,java.lang.Integer)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String,java.lang.String)|",
      "|java+method:///io/vertx/core/Vertx/createHttpServer(io.vertx.core.http.HttpServerOptions)|",
      "|java+method:///io/georocket/GeoRocket/config()|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.4.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.0.0",
    "coordinatesV2": "io.georocket:georocket-server:1.1.0",
    "caller": "|java+method:///io/georocket/GeoRocket/deployVerticle(java.lang.Class)|",
    "called": "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
    "v1Body": [
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+constructor:///io/vertx/core/DeploymentOptions/DeploymentOptions()|",
      "|java+method:///io/vertx/core/DeploymentOptions/setConfig(io.vertx.core.json.JsonObject)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|",
      "|java+method:///io/georocket/GeoRocket/config()|",
      "|java+method:///io/vertx/core/Vertx/deployVerticle(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+constructor:///io/vertx/core/DeploymentOptions/DeploymentOptions()|",
      "|java+method:///io/vertx/core/DeploymentOptions/setConfig(io.vertx.core.json.JsonObject)|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toSingle()|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|",
      "|java+method:///io/georocket/GeoRocket/config()|",
      "|java+method:///io/vertx/core/Vertx/deployVerticle(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.4.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.0.0",
    "coordinatesV2": "io.georocket:georocket-server:1.1.0",
    "caller": "|java+method:///io/georocket/ImporterVerticle/lambda$null$5(io.vertx.rxjava.core.file.FileSystem,java.lang.String,java.lang.Void)|",
    "called": "|java+method:///io/vertx/rxjava/core/file/FileSystem/rxDelete(java.lang.String)|",
    "v1Body": [
      "|java+method:///io/vertx/rxjava/core/file/FileSystem/deleteObservable(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/rxjava/core/file/FileSystem/rxDelete(java.lang.String)|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.4.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.georocket:georocket-server:1.0.0",
    "coordinatesV2": "io.georocket:georocket-server:1.1.0",
    "caller": "|java+method:///io/georocket/index/elasticsearch/RemoteElasticsearchClient/performRequest(io.vertx.rxjava.core.http.HttpClientRequest,java.lang.String)|",
    "called": "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/handler(io.vertx.core.Handler)|",
    "v1Body": [
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/putHeader(java.lang.String,java.lang.String)|",
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/exceptionHandler(io.vertx.core.Handler)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/end(java.lang.String)|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/handler(io.vertx.core.Handler)|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/setChunked(boolean)|",
      "|java+method:///java/lang/String/valueOf(int)|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/end()|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/end(io.vertx.rxjava.core.buffer.Buffer)|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/putHeader(java.lang.String,java.lang.String)|",
      "|java+method:///io/vertx/rx/java/RxHelper/observableFuture()|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/exceptionHandler(io.vertx.core.Handler)|",
      "|java+method:///io/vertx/rxjava/core/buffer/Buffer/buffer(java.lang.String)|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/handler(io.vertx.core.Handler)|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/setChunked(boolean)|",
      "|java+method:///io/vertx/rxjava/core/buffer/Buffer/length()|",
      "|java+method:///java/lang/String/valueOf(int)|",
      "|java+method:///io/vertx/rxjava/core/http/HttpClientRequest/end()|",
      "|java+method:///io/vertx/rx/java/ObservableFuture/toHandler()|"
    ],
    "affectedLib": "io.vertx:vertx-rx-java:3.4.1",
    "change": "UPDATED"
  }
]