[
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.6",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/registerHiddenStateNames(java.lang.String%5B%5D)|",
    "called": "|java+constructor:///org/apache/commons/collections/bidimap/TreeBidiMap/TreeBidiMap()|",
    "v1Body": [
      "|java+constructor:///org/apache/commons/collections/bidimap/TreeBidiMap/TreeBidiMap()|",
      "|java+method:///org/apache/commons/collections/BidiMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/BiMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/google/common/collect/HashBiMap/create()|"
    ],
    "affectedLib": "commons-collections:commons-collections:3.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.6",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/registerOutputStateNames(java.util.Map)|",
    "called": "|java+constructor:///org/apache/commons/collections/bidimap/TreeBidiMap/TreeBidiMap(java.util.Map)|",
    "v1Body": [
      "|java+constructor:///org/apache/commons/collections/bidimap/TreeBidiMap/TreeBidiMap(java.util.Map)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/HashBiMap/create(java.util.Map)|"
    ],
    "affectedLib": "commons-collections:commons-collections:3.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.6",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/registerHiddenStateNames(java.util.Map)|",
    "called": "|java+constructor:///org/apache/commons/collections/bidimap/TreeBidiMap/TreeBidiMap(java.util.Map)|",
    "v1Body": [
      "|java+constructor:///org/apache/commons/collections/bidimap/TreeBidiMap/TreeBidiMap(java.util.Map)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/HashBiMap/create(java.util.Map)|"
    ],
    "affectedLib": "commons-collections:commons-collections:3.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.6",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/clone()|",
    "called": "|java+constructor:///org/apache/commons/collections/bidimap/TreeBidiMap/TreeBidiMap(java.util.Map)|",
    "v1Body": [
      "|java+constructor:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/HmmModel(org.apache.mahout.math.Matrix,org.apache.mahout.math.Matrix,org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/clone()|",
      "|java+method:///org/apache/mahout/math/Matrix/clone()|",
      "|java+method:///org/apache/mahout/math/Vector/clone()|",
      "|java+constructor:///org/apache/commons/collections/bidimap/TreeBidiMap/TreeBidiMap(java.util.Map)|",
      "|java+method:///java/lang/Object/clone()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/HmmModel(org.apache.mahout.math.Matrix,org.apache.mahout.math.Matrix,org.apache.mahout.math.Vector)|",
      "|java+method:///com/google/common/collect/HashBiMap/create(java.util.Map)|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/clone()|",
      "|java+method:///org/apache/mahout/math/Matrix/clone()|",
      "|java+method:///org/apache/mahout/math/Vector/clone()|"
    ],
    "affectedLib": "commons-collections:commons-collections:3.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.6",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.5",
    "caller": "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/registerOutputStateNames(java.lang.String%5B%5D)|",
    "called": "|java+constructor:///org/apache/commons/collections/bidimap/TreeBidiMap/TreeBidiMap()|",
    "v1Body": [
      "|java+constructor:///org/apache/commons/collections/bidimap/TreeBidiMap/TreeBidiMap()|",
      "|java+method:///org/apache/commons/collections/BidiMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/BiMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/google/common/collect/HashBiMap/create()|"
    ],
    "affectedLib": "commons-collections:commons-collections:3.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPGrowth/generateFList(java.util.Iterator,int)|",
    "called": "|java+constructor:///org/apache/commons/lang/mutable/MutableLong/MutableLong(java.lang.Number)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/CountDescendingPairComparator/CountDescendingPairComparator()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///org/apache/commons/lang/mutable/MutableLong/MutableLong(java.lang.Number)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/commons/lang/mutable/MutableLong/add(long)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Collections/sort(java.util.List,java.util.Comparator)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|",
      "|java+method:///org/apache/commons/lang/mutable/MutableLong/longValue()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+constructor:///org/apache/mahout/common/Pair/Pair(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/CountDescendingPairComparator/CountDescendingPairComparator()|",
      "|java+constructor:///org/apache/commons/lang/mutable/MutableLong/MutableLong(java.lang.Number)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/commons/lang/mutable/MutableLong/add(long)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Collections/sort(java.util.List,java.util.Comparator)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|",
      "|java+method:///org/apache/commons/lang/mutable/MutableLong/longValue()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+constructor:///org/apache/mahout/common/Pair/Pair(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper/map(org.apache.hadoop.io.Text,org.apache.hadoop.io.Text,org.apache.hadoop.mapred.OutputCollector,org.apache.hadoop.mapred.Reporter)|",
    "called": "|java+constructor:///org/apache/commons/lang/mutable/MutableDouble/MutableDouble(double)|",
    "v1Body": [
      "|java+method:///com/google/common/collect/Iterators/forArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$1/BayesFeatureMapper$1(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,org.apache.commons.lang.mutable.MutableDouble)|",
      "|java+method:///org/apache/lucene/analysis/tokenattributes/TermAttribute/term()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/getAttribute(java.lang.Class)|",
      "|java+method:///java/lang/String/length()|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$2/BayesFeatureMapper$2(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,java.lang.String,double,org.apache.hadoop.mapred.OutputCollector)|",
      "|java+constructor:///org/apache/mahout/math/map/OpenObjectIntHashMap/OpenObjectIntHashMap(int)|",
      "|java+method:///org/apache/commons/lang/mutable/MutableDouble/doubleValue()|",
      "|java+method:///org/apache/mahout/common/StringTuple/add(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/common/StringTuple/StringTuple()|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/incrementToken()|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/Math/sqrt(double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/forEachPair(org.apache.mahout.math.function.ObjectIntProcedure)|",
      "|java+method:///org/apache/hadoop/mapred/Reporter/setStatus(java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/split(java.lang.CharSequence)|",
      "|java+constructor:///org/apache/commons/lang/mutable/MutableDouble/MutableDouble(double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/put(java.lang.Object,int)|",
      "|java+constructor:///org/apache/lucene/analysis/shingle/ShingleFilter/ShingleFilter(org.apache.lucene.analysis.TokenStream,int)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/get(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/mahout/common/lucene/IteratorTokenStream/IteratorTokenStream(java.util.Iterator)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$3/BayesFeatureMapper$3(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,java.lang.String,org.apache.hadoop.mapred.OutputCollector)|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Iterators/forArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$1/BayesFeatureMapper$1(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,org.apache.commons.lang.mutable.MutableDouble)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/getAttribute(java.lang.Class)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$2/BayesFeatureMapper$2(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,java.lang.String,double,org.apache.hadoop.mapred.OutputCollector)|",
      "|java+constructor:///org/apache/mahout/math/map/OpenObjectIntHashMap/OpenObjectIntHashMap(int)|",
      "|java+method:///org/apache/commons/lang/mutable/MutableDouble/doubleValue()|",
      "|java+method:///org/apache/mahout/common/StringTuple/add(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/common/StringTuple/StringTuple()|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/incrementToken()|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/Math/sqrt(double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/forEachPair(org.apache.mahout.math.function.ObjectIntProcedure)|",
      "|java+method:///org/apache/hadoop/mapred/Reporter/setStatus(java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/split(java.lang.CharSequence)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///org/apache/commons/lang/mutable/MutableDouble/MutableDouble(double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/put(java.lang.Object,int)|",
      "|java+constructor:///org/apache/lucene/analysis/shingle/ShingleFilter/ShingleFilter(org.apache.lucene.analysis.TokenStream,int)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/get(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/mahout/common/lucene/IteratorTokenStream/IteratorTokenStream(java.util.Iterator)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$3/BayesFeatureMapper$3(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,java.lang.String,org.apache.hadoop.mapred.OutputCollector)|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/classifier/ResultAnalyzer/toString()|",
    "called": "|java+method:///org/apache/commons/lang/StringUtils/rightPad(java.lang.String,int)|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/text/DecimalFormat/DecimalFormat(java.lang.String)|",
      "|java+method:///java/lang/Integer/toString(int)|",
      "|java+method:///org/apache/commons/lang/StringUtils/leftPad(java.lang.String,int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(char)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/text/NumberFormat/format(double)|",
      "|java+method:///org/apache/commons/lang/StringUtils/rightPad(java.lang.String,int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/stats/OnlineSummarizer/getMean()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/text/DecimalFormat/DecimalFormat(java.lang.String)|",
      "|java+method:///java/lang/Integer/toString(int)|",
      "|java+method:///org/apache/commons/lang/StringUtils/leftPad(java.lang.String,int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/math/stats/OnlineSummarizer/getQuartile(int)|",
      "|java+method:///java/lang/StringBuilder/append(char)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/text/NumberFormat/format(double)|",
      "|java+method:///java/lang/StringBuilder/append(double)|",
      "|java+method:///org/apache/commons/lang/StringUtils/rightPad(java.lang.String,int)|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/BtJob$BtMapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+method:///org/apache/commons/lang/Validate/notNull(java.lang.Object,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/FileOutputFormat/getUniqueFile(org.apache.hadoop.mapreduce.TaskAttemptContext,java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Reader/SequenceFile$Reader(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Arrays/sort(java.lang.Object%5B%5D,java.util.Comparator)|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/next()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/UpperTriangular/UpperTriangular(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/GivensThinSolver/mergeR(org.apache.mahout.math.hadoop.stochasticsvd.UpperTriangular,org.apache.mahout.math.hadoop.stochasticsvd.UpperTriangular)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/SequenceFileValueIterator(org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskAttemptID/getTaskID()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getTaskAttemptID()|",
      "|java+constructor:///org/apache/hadoop/mapred/lib/MultipleOutputs/MultipleOutputs(org.apache.hadoop.mapred.JobConf)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/close()|",
      "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskID/getId()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/lang/Validate/isTrue(boolean,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/FileOutputFormat/getUniqueFile(org.apache.hadoop.mapreduce.TaskAttemptContext,java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/common/IOUtils$MultipleOutputsCloseableAdapter/IOUtils$MultipleOutputsCloseableAdapter(org.apache.hadoop.mapred.lib.MultipleOutputs)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/commons/lang/Validate/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterator/SequenceFileDirValueIterator(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,java.util.Comparator,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/BtJob$BtMapper$1/BtJob$BtMapper$1(org.apache.mahout.math.hadoop.stochasticsvd.BtJob$BtMapper)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterator/SequenceFileDirValueIterator(org.apache.hadoop.fs.Path%5B%5D,java.util.Comparator,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/SequenceFileValueIterator(org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskAttemptID/getTaskID()|",
      "|java+method:///java/util/Deque/addFirst(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/qr/QRLastStep/QRLastStep(java.util.Iterator,java.util.Iterator,int)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterator/close()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getTaskAttemptID()|",
      "|java+constructor:///org/apache/hadoop/mapred/lib/MultipleOutputs/MultipleOutputs(org.apache.hadoop.mapred.JobConf)|",
      "|java+method:///java/util/Deque/remove(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/filecache/DistributedCache/getLocalCacheFiles(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getInt(java.lang.String,int)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskID/getId()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/SparseRowBlockAccumulator/SparseRowBlockAccumulator(int,org.apache.hadoop.mapred.OutputCollector)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterator/hasNext()|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPGrowth/fpGrowth(org.apache.mahout.fpm.pfpgrowth.fpgrowth.FPTree,long,int,java.util.Collection,org.apache.mahout.fpm.pfpgrowth.convertors.TopKPatternsOutputConverter,org.apache.mahout.fpm.pfpgrowth.convertors.StatusUpdater)|",
    "called": "|java+constructor:///org/apache/commons/lang/mutable/MutableLong/MutableLong(long)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPTree/getAttributeAtIndex(int)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPTreeDepthCache/FPTreeDepthCache()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/convertors/TopKPatternsOutputConverter/collect(java.lang.Integer,org.apache.mahout.fpm.pfpgrowth.fpgrowth.FrequentPatternMaxHeap)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPGrowth/growth(org.apache.mahout.fpm.pfpgrowth.fpgrowth.FPTree,org.apache.commons.lang.mutable.MutableLong,int,org.apache.mahout.fpm.pfpgrowth.fpgrowth.FPTreeDepthCache,int,int,org.apache.mahout.fpm.pfpgrowth.convertors.StatusUpdater)|",
      "|java+method:///org/apache/commons/lang/mutable/MutableLong/longValue()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FrequentPatternMaxHeap/leastSupport()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPTree/getHeaderTableCount()|",
      "|java+constructor:///org/apache/commons/lang/mutable/MutableLong/MutableLong(long)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPTreeDepthCache/getHits()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FrequentPatternMaxHeap/count()|",
      "|java+method:///java/lang/Math/max(long,long)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPTreeDepthCache/getMisses()|",
      "|java+method:///java/util/Collection/contains(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPTree/getAttributeAtIndex(int)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPTreeDepthCache/FPTreeDepthCache()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/convertors/TopKPatternsOutputConverter/collect(java.lang.Integer,org.apache.mahout.fpm.pfpgrowth.fpgrowth.FrequentPatternMaxHeap)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPGrowth/growth(org.apache.mahout.fpm.pfpgrowth.fpgrowth.FPTree,org.apache.commons.lang.mutable.MutableLong,int,org.apache.mahout.fpm.pfpgrowth.fpgrowth.FPTreeDepthCache,int,int,org.apache.mahout.fpm.pfpgrowth.convertors.StatusUpdater)|",
      "|java+method:///org/apache/commons/lang/mutable/MutableLong/longValue()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FrequentPatternMaxHeap/leastSupport()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPTree/getHeaderTableCount()|",
      "|java+constructor:///org/apache/commons/lang/mutable/MutableLong/MutableLong(long)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPTreeDepthCache/getHits()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FrequentPatternMaxHeap/count()|",
      "|java+method:///java/lang/Math/max(long,long)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPTreeDepthCache/getMisses()|",
      "|java+method:///java/util/Collection/contains(java.lang.Object)|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/classifier/ConfusionMatrix/toString()|",
    "called": "|java+method:///org/apache/commons/lang/StringUtils/rightPad(java.lang.String,int)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/classifier/ConfusionMatrix/getCount(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/lang/StringBuilder/append(char)|",
      "|java+method:///org/apache/commons/lang/StringUtils/rightPad(java.lang.String,int)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/lang/Integer/toString(int)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///org/apache/mahout/classifier/ConfusionMatrix/getSmallLabel(int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder(int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/String/valueOf(int)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///java/lang/Integer/toString(int)|",
      "|java+method:///org/apache/mahout/classifier/ConfusionMatrix/getCount(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/lang/StringBuilder/append(char)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///org/apache/mahout/classifier/ConfusionMatrix/getSmallLabel(int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder(int)|",
      "|java+method:///org/apache/commons/lang/StringUtils/rightPad(java.lang.String,int)|",
      "|java+method:///org/apache/mahout/classifier/ConfusionMatrix/getTotal(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/String/valueOf(int)|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/TransactionTree/generateFList()|",
    "called": "|java+constructor:///org/apache/commons/lang/mutable/MutableLong/MutableLong(long)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///org/apache/commons/lang/mutable/MutableLong/MutableLong(long)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/TransactionTree/iterator()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/commons/lang/mutable/MutableLong/add(java.lang.Number)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///org/apache/mahout/math/list/IntArrayList/get(int)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///org/apache/commons/lang/mutable/MutableLong/MutableLong(long)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/TransactionTree/iterator()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/mahout/math/list/IntArrayList/size()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/commons/lang/mutable/MutableLong/add(java.lang.Number)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterable/iterator()|",
    "called": "|java+method:///org/apache/hadoop/fs/Path/toString()|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterator/SequenceFileDirValueIterator(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,java.util.Comparator,boolean,org.apache.hadoop.conf.Configuration)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterator/SequenceFileDirValueIterator(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,java.util.Comparator,boolean,org.apache.hadoop.conf.Configuration)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/cf/taste/hadoop/item/AggregateAndRecommendReducer/setup(org.apache.hadoop.mapreduce.Reducer$Context)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/getConfiguration()|",
      "|java+method:///org/apache/hadoop/io/IOUtils/closeStream(java.io.Closeable)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/open(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/Path/makeQualified(org.apache.hadoop.fs.FileSystem)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/TasteHadoopUtils/readItemIDIndexMap(java.lang.String,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/common/FastIDSet/add(long)|",
      "|java+constructor:///org/apache/mahout/cf/taste/impl/common/FastIDSet/FastIDSet()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/mahout/common/iterator/FileLineIterable/FileLineIterable(java.io.InputStream)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/mahout/common/iterator/FileLineIterable/iterator()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getBoolean(java.lang.String,boolean)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getInt(java.lang.String,int)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/mahout/cf/taste/impl/common/FastIDSet/FastIDSet()|",
      "|java+method:///org/apache/mahout/common/HadoopUtil/openStream(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/getConfiguration()|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/TasteHadoopUtils/readItemIDIndexMap(java.lang.String,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/common/FastIDSet/add(long)|",
      "|java+constructor:///org/apache/mahout/common/iterator/FileLineIterable/FileLineIterable(java.io.InputStream)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/mahout/common/iterator/FileLineIterable/iterator()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getBoolean(java.lang.String,boolean)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getInt(java.lang.String,int)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+constructor:///org/apache/mahout/clustering/kmeans/KMeansClusterMapper/KMeansClusterMapper()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansReducer/setup(org.apache.hadoop.mapreduce.Reducer$Context)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansClusterer/FuzzyKMeansClusterer(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansUtil/configureWithClusterInfo(org.apache.hadoop.fs.Path,java.util.Collection)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/getConfiguration()|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer/setup(org.apache.hadoop.mapreduce.Reducer$Context)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansReducer/setClusterMap(java.util.Collection)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/util/Map/isEmpty()|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansClusterer/FuzzyKMeansClusterer(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansUtil/configureWithClusterInfo(org.apache.hadoop.fs.Path,java.util.Collection)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer/setup(org.apache.hadoop.mapreduce.Reducer$Context)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansReducer/setClusterMap(java.util.Collection)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/getConfiguration()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/spectral/common/VectorMatrixMultiplicationJob/runJob(org.apache.hadoop.fs.Path,org.apache.mahout.math.Vector,org.apache.hadoop.fs.Path)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapreduce/Job/waitForCompletion(boolean)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputFormatClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/clustering/spectral/common/VectorCache/save(org.apache.hadoop.io.Writable,org.apache.mahout.math.Vector,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapperClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setInputFormatClass(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int)|",
      "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable(int)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setNumReduceTasks(int)|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Job/Job(org.apache.hadoop.conf.Configuration,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/FileOutputFormat/setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputKeyClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/Vector/size()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/makeQualified(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/input/FileInputFormat/addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/spectral/common/VectorMatrixMultiplicationJob/runJob(org.apache.hadoop.fs.Path,org.apache.mahout.math.Vector,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/spectral/common/VectorCache/save(org.apache.hadoop.io.Writable,org.apache.mahout.math.Vector,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration,boolean,boolean)|",
    "called": "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/common/HadoopUtil/delete(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/hadoop/filecache/DistributedCache/setCacheFiles(java.net.URI%5B%5D,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/deleteOnExit(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/makeQualified(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/close()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/common/HadoopUtil/delete(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///org/apache/hadoop/filecache/DistributedCache/setCacheFiles(java.net.URI%5B%5D,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/deleteOnExit(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/makeQualified(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/spectral/common/AffinityMatrixInputJob/runJob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int)|",
    "called": "|java+method:///org/apache/hadoop/mapreduce/Job/waitForCompletion(boolean)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapOutputKeyClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/waitForCompletion(boolean)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setReducerClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/setInt(java.lang.String,int)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapOutputValueClass(java.lang.Class)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputFormatClass(java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputKeyClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapperClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/HadoopUtil/delete(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Job/Job(org.apache.hadoop.conf.Configuration,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/FileOutputFormat/setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/input/FileInputFormat/addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapOutputKeyClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/waitForCompletion(boolean)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setReducerClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapOutputValueClass(java.lang.Class)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputFormatClass(java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputKeyClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapperClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/HadoopUtil/delete(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setJarByClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/setInt(java.lang.String,int)|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Job/Job(org.apache.hadoop.conf.Configuration,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/FileOutputFormat/setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/input/FileInputFormat/addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansClusterMapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansClusterer/FuzzyKMeansClusterer(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansUtil/configureWithClusterInfo(org.apache.hadoop.fs.Path,java.util.Collection)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/lang/String/length()|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansClusterer/FuzzyKMeansClusterer(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansUtil/configureWithClusterInfo(org.apache.hadoop.fs.Path,java.util.Collection)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/TimesSquaredJob$TimesSquaredMapper/configure(org.apache.hadoop.mapred.JobConf)|",
    "called": "|java+method:///org/apache/hadoop/filecache/DistributedCache/getCacheFiles(org.apache.hadoop.conf.Configuration)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/SequenceFileValueIterator(org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/close()|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(int)|",
      "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(int,int)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/getBoolean(java.lang.String,boolean)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/getInt(java.lang.String,int)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/next()|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///java/net/URI/getPath()|",
      "|java+method:///org/apache/hadoop/filecache/DistributedCache/getCacheFiles(org.apache.hadoop.conf.Configuration)|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/SequenceFileValueIterator(org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(int)|",
      "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(int,int)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/getBoolean(java.lang.String,boolean)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/getInt(java.lang.String,int)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/next()|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///java/net/URI/getPath()|",
      "|java+method:///org/apache/hadoop/filecache/DistributedCache/getCacheFiles(org.apache.hadoop.conf.Configuration)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/common/AbstractJob/parseArguments(java.lang.String%5B%5D)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/commons/cli2/OptionException/getMessage()|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/common/AbstractJob/addOption(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelpWithGenericOptions(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/AbstractJob/maybePut(java.util.Map,org.apache.commons.cli2.CommandLine,org.apache.commons.cli2.Option%5B%5D)|",
      "|java+method:///java/lang/IllegalArgumentException/getMessage()|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/helpOption()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setHelpOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|",
      "|java+method:///java/lang/String/valueOf(int)|",
      "|java+method:///org/apache/mahout/common/AbstractJob/addOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///java/util/TreeMap/TreeMap()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelpWithGenericOptions(org.apache.commons.cli2.Group,org.apache.commons.cli2.OptionException)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/AbstractJob/parseDirectories(org.apache.commons.cli2.CommandLine)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/cli2/OptionException/getMessage()|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/common/AbstractJob/addOption(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelpWithGenericOptions(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/AbstractJob/maybePut(java.util.Map,org.apache.commons.cli2.CommandLine,org.apache.commons.cli2.Option%5B%5D)|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/helpOption()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|",
      "|java+method:///java/lang/String/valueOf(int)|",
      "|java+method:///org/apache/mahout/common/AbstractJob/addOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///java/lang/IllegalArgumentException/getMessage()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///java/util/TreeMap/TreeMap()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelpWithGenericOptions(org.apache.commons.cli2.Group,org.apache.commons.cli2.OptionException)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/AbstractJob/parseDirectories(org.apache.commons.cli2.CommandLine)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setHelpOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesTfIdfMapper/configure(org.apache.hadoop.mapred.JobConf)|",
    "called": "|java+method:///org/apache/hadoop/io/DefaultStringifier/fromString(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/util/GenericsUtil/getClass(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/DefaultStringifier/fromString(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/DefaultStringifier/DefaultStringifier(org.apache.hadoop.conf.Configuration,java.lang.Class)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectDoubleHashMap/put(java.lang.Object,double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectDoubleHashMap/clear()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/get(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/io/DefaultStringifier/toString(java.lang.Object)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/io/IOException/toString()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/lang/Double/doubleValue()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/io/DefaultStringifier/fromString(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/DefaultStringifier/DefaultStringifier(org.apache.hadoop.conf.Configuration,java.lang.Class)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectDoubleHashMap/put(java.lang.Object,double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectDoubleHashMap/clear()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/get(java.lang.String,java.lang.String)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///org/apache/hadoop/util/GenericsUtil/getClass(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/io/DefaultStringifier/toString(java.lang.Object)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/io/IOException/toString()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Double/doubleValue()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansClusterer/emitPointProbToCluster(org.apache.mahout.math.Vector,java.util.List,org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/mahout/common/distance/DistanceMeasure/distance(org.apache.mahout.math.Vector,org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/SoftCluster/getCenter()|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/SoftCluster/getIdentifier()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansClusterer/computeProbWeight(double,java.lang.Iterable)|",
      "|java+method:///java/lang/Double/doubleValue()|",
      "|java+constructor:///org/apache/mahout/clustering/ClusterObservations/ClusterObservations(double,org.apache.mahout.math.Vector,org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/Vector/times(org.apache.mahout.math.Vector)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/mahout/common/distance/DistanceMeasure/distance(org.apache.mahout.math.Vector,org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/SoftCluster/getCenter()|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/SoftCluster/getIdentifier()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansClusterer/computeProbWeight(double,java.lang.Iterable)|",
      "|java+method:///java/lang/Double/doubleValue()|",
      "|java+constructor:///org/apache/mahout/clustering/ClusterObservations/ClusterObservations(double,org.apache.mahout.math.Vector,org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/Vector/times(org.apache.mahout.math.Vector)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/bayes/BayesClassifierMapper/map(org.apache.hadoop.io.Text,org.apache.hadoop.io.Text,org.apache.hadoop.mapred.OutputCollector,org.apache.hadoop.mapred.Reporter)|",
    "called": "|java+method:///org/apache/hadoop/io/Text/toString()|",
    "v1Body": [
      "|java+method:///org/apache/mahout/classifier/bayes/model/ClassifierContext/classifyDocument(java.lang.String%5B%5D,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/common/nlp/NGrams/NGrams(java.lang.String,int)|",
      "|java+method:///org/apache/mahout/common/nlp/NGrams/generateNGramsWithoutLabel()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+constructor:///org/apache/mahout/common/StringTuple/StringTuple(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/StringTuple/add(java.lang.String)|",
      "|java+method:///org/apache/mahout/classifier/ClassifierResult/getLabel()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.Throwable)|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/mahout/common/nlp/NGrams/NGrams(java.lang.String,int)|",
      "|java+method:///org/apache/mahout/common/nlp/NGrams/generateNGramsWithoutLabel()|",
      "|java+method:///org/apache/mahout/classifier/bayes/ClassifierContext/classifyDocument(java.lang.String%5B%5D,java.lang.String)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+constructor:///org/apache/mahout/common/StringTuple/StringTuple(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/StringTuple/add(java.lang.String)|",
      "|java+method:///org/apache/mahout/classifier/ClassifierResult/getLabel()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.Throwable)|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/dirichlet/DirichletDriver/buildClustersSeq(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.mahout.clustering.dirichlet.models.DistributionDescription,int,int,double,org.apache.hadoop.fs.Path)|",
    "called": "|java+method:///org/apache/hadoop/fs/Path/toString()|",
    "v1Body": [
      "|java+method:///org/apache/mahout/clustering/dirichlet/DirichletState/getModels()|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/clustering/dirichlet/DirichletClusterer/observe(org.apache.mahout.clustering.Model%5B%5D,org.apache.mahout.math.VectorWritable)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/mahout/clustering/dirichlet/DirichletClusterer/updateModels(org.apache.mahout.clustering.Cluster%5B%5D)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/Cluster/configure(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/logsCRCFilter()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterable/SequenceFileDirValueIterable(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/clustering/dirichlet/DirichletMapper/loadState(org.apache.hadoop.conf.Configuration,java.lang.String,org.apache.mahout.clustering.dirichlet.models.DistributionDescription,double,int)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/mahout/clustering/dirichlet/DirichletDriver/writeState(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,org.apache.mahout.clustering.dirichlet.DirichletState)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterable/iterator()|",
      "|java+constructor:///org/apache/mahout/clustering/dirichlet/DirichletClusterer/DirichletClusterer(org.apache.mahout.clustering.dirichlet.DirichletState)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/mahout/clustering/dirichlet/DirichletState/getClusters()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/mahout/clustering/ModelDistribution/sampleFromPosterior(org.apache.mahout.clustering.Model%5B%5D)|",
      "|java+method:///org/apache/mahout/clustering/dirichlet/DirichletState/getModelFactory()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/mahout/clustering/dirichlet/DirichletCluster/getModel()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/clustering/dirichlet/DirichletState/getModels()|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/clustering/dirichlet/DirichletClusterer/observe(org.apache.mahout.clustering.Model%5B%5D,org.apache.mahout.math.VectorWritable)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/Cluster/configure(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/logsCRCFilter()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterable/SequenceFileDirValueIterable(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/clustering/dirichlet/DirichletMapper/loadState(org.apache.hadoop.conf.Configuration,java.lang.String,org.apache.mahout.clustering.dirichlet.models.DistributionDescription,double,int)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/mahout/clustering/dirichlet/DirichletDriver/writeState(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,org.apache.mahout.clustering.dirichlet.DirichletState)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterable/iterator()|",
      "|java+constructor:///org/apache/mahout/clustering/dirichlet/DirichletClusterer/DirichletClusterer(org.apache.mahout.clustering.dirichlet.DirichletState)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/mahout/clustering/dirichlet/DirichletState/getClusters()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/mahout/clustering/ModelDistribution/sampleFromPosterior(org.apache.mahout.clustering.Model%5B%5D)|",
      "|java+method:///org/apache/mahout/clustering/dirichlet/DirichletState/getModelFactory()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/rename(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/clustering/dirichlet/DirichletClusterer/updateModels(org.apache.mahout.clustering.Cluster%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/mahout/clustering/dirichlet/DirichletCluster/getModel()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/kmeans/KMeansDriver/buildClustersMR(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.mahout.common.distance.DistanceMeasure,int,java.lang.String)|",
    "called": "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
    "v1Body": [
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansDriver/runIteration(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.lang.String,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/rename(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansDriver/runIteration(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.lang.String,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/common/AbstractJob/prepareJob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class)|",
    "called": "|java+method:///org/apache/hadoop/mapreduce/Job/setJobName(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapOutputKeyClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setReducerClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/getConfiguration()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/AbstractJob/getCustomJobName(org.apache.hadoop.mapreduce.JobContext,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputFormatClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/AbstractJob/getConf()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputKeyClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapperClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setInputFormatClass(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Job/Job(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setJobName(java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setJarByClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/setBoolean(java.lang.String,boolean)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/common/HadoopUtil/getCustomJobName(java.lang.String,org.apache.hadoop.mapreduce.JobContext,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/HadoopUtil/prepareJob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/Class/getSimpleName()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setJobName(java.lang.String)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/apache/mahout/common/AbstractJob/getConf()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+constructor:///org/apache/mahout/clustering/meanshift/MeanShiftCanopyClusterer/MeanShiftCanopyClusterer(org.apache.hadoop.conf.Configuration)|",
    "called": "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///org/apache/mahout/common/distance/DistanceMeasure/configure(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///java/lang/Class/asSubclass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/common/distance/DistanceMeasure/configure(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/common/ClassUtils/instantiateAs(java.lang.String,java.lang.Class)|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getBoolean(java.lang.String,boolean)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/vectorizer/collocations/llr/LLRReducer/reduce(org.apache.mahout.vectorizer.collocations.llr.Gram,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)|",
    "called": "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/getCounter(java.lang.Enum)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/IllegalArgumentException/getMessage()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/mahout/vectorizer/collocations/llr/Gram/getType()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(char)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/mahout/vectorizer/collocations/llr/LLRReducer$LLCallback/logLikelihoodRatio(int,int,int,int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/mahout/vectorizer/collocations/llr/Gram/getString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable(double)|",
      "|java+method:///org/apache/mahout/vectorizer/collocations/llr/Gram/getFrequency()|",
      "|java+method:///org/apache/hadoop/mapreduce/Counter/increment(long)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/getCounter(java.lang.Enum)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/apache/mahout/vectorizer/collocations/llr/Gram/getString()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/mahout/vectorizer/collocations/llr/Gram/getType()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///org/apache/mahout/vectorizer/collocations/llr/LLRReducer$LLCallback/logLikelihoodRatio(long,long,long,long)|",
      "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable(double)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/vectorizer/collocations/llr/Gram/getFrequency()|",
      "|java+method:///org/apache/hadoop/mapreduce/Counter/increment(long)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/spectral/eigencuts/EigencutsDriver/performEigenDecomposition(org.apache.hadoop.conf.Configuration,org.apache.mahout.math.hadoop.DistributedRowMatrix,org.apache.mahout.math.decomposer.lanczos.LanczosState,int,int,org.apache.hadoop.fs.Path)|",
    "called": "|java+method:///org/apache/hadoop/fs/Path/toString()|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/getCleanedEigensPath()|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/runJob(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,boolean,double,double,int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/getRowPath()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/runJob(org.apache.hadoop.conf.Configuration,org.apache.mahout.math.decomposer.lanczos.LanczosState,int,boolean,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/numRows()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/EigenVerificationJob()|",
      "|java+constructor:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/DistributedLanczosSolver()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/getCleanedEigensPath()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/getRowPath()|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/runJob(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,boolean,double,int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/runJob(org.apache.hadoop.conf.Configuration,org.apache.mahout.math.decomposer.lanczos.LanczosState,int,boolean,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/numRows()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/EigenVerificationJob()|",
      "|java+constructor:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/DistributedLanczosSolver()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/canopy/CanopyDriver/clusterDataSeq(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.mahout.common.distance.DistanceMeasure,double,double)|",
    "called": "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/next(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/mahout/clustering/canopy/Canopy/getId()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+constructor:///org/apache/mahout/clustering/canopy/CanopyClusterer/CanopyClusterer(org.apache.mahout.common.distance.DistanceMeasure,double,double)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/getKeyClass()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///java/lang/Class/asSubclass(java.lang.Class)|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/getValueClass()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Reader/SequenceFile$Reader(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/close()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/logsCRCFilter()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterable/SequenceFileDirValueIterable(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable(int)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterable/iterator()|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/clustering/canopy/CanopyClusterer/findClosestCanopy(org.apache.mahout.math.Vector,java.lang.Iterable)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|",
      "|java+constructor:///org/apache/mahout/clustering/WeightedVectorWritable/WeightedVectorWritable(double,org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/close()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/next(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/clustering/canopy/Canopy/getId()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/clustering/WeightedVectorWritable/WeightedVectorWritable(double,org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/getKeyClassName()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Reader/SequenceFile$Reader(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/logsCRCFilter()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/getValueClassName()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterable/SequenceFileDirValueIterable(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable(int)|",
      "|java+method:///org/apache/mahout/common/ClassUtils/instantiateAs(java.lang.String,java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+constructor:///org/apache/mahout/clustering/canopy/CanopyClusterer/CanopyClusterer(org.apache.mahout.common.distance.DistanceMeasure,double,double)|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterable/iterator()|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/clustering/canopy/CanopyClusterer/findClosestCanopy(org.apache.mahout.math.Vector,java.lang.Iterable)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/next(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/readFList(org.apache.mahout.common.Parameters)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/CountDescendingPairComparator/CountDescendingPairComparator()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirIterable/SequenceFileDirIterable(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,java.util.Comparator,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/io/LongWritable/get()|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/PriorityQueue/add(java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirIterable/iterator()|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String)|",
      "|java+constructor:///java/util/PriorityQueue/PriorityQueue(int,java.util.Comparator)|",
      "|java+method:///java/util/PriorityQueue/poll()|",
      "|java+method:///java/util/PriorityQueue/isEmpty()|",
      "|java+constructor:///org/apache/mahout/common/Pair/Pair(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+method:///org/apache/hadoop/io/LongWritable/get()|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/PriorityQueue/add(java.lang.Object)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirIterable/SequenceFileDirIterable(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,java.util.Comparator,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirIterable/iterator()|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth$1/PFPGrowth$1()|",
      "|java+constructor:///java/util/PriorityQueue/PriorityQueue(int,java.util.Comparator)|",
      "|java+method:///java/util/PriorityQueue/poll()|",
      "|java+method:///java/util/PriorityQueue/isEmpty()|",
      "|java+constructor:///org/apache/mahout/common/Pair/Pair(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/cbayes/CBayesThetaNormalizerMapper/map(org.apache.mahout.common.StringTuple,org.apache.hadoop.io.DoubleWritable,org.apache.hadoop.mapred.OutputCollector,org.apache.hadoop.mapred.Reporter)|",
    "called": "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable(double)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapred/Reporter/setStatus(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable(double)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectDoubleHashMap/size()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/mahout/common/StringTuple/StringTuple(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/StringTuple/add(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectDoubleHashMap/forEachPair(org.apache.mahout.math.function.ObjectDoubleProcedure)|",
      "|java+method:///org/apache/hadoop/io/DoubleWritable/get()|",
      "|java+method:///java/lang/Math/log(double)|",
      "|java+method:///org/apache/mahout/common/StringTuple/stringAt(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/cbayes/CBayesThetaNormalizerMapper$1/CBayesThetaNormalizerMapper$1(org.apache.mahout.classifier.bayes.mapreduce.cbayes.CBayesThetaNormalizerMapper,org.apache.hadoop.io.DoubleWritable,org.apache.hadoop.mapred.Reporter,org.apache.hadoop.mapred.OutputCollector)|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/mapred/Reporter/setStatus(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable(double)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectDoubleHashMap/size()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/mahout/common/StringTuple/StringTuple(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/StringTuple/stringAt(int)|",
      "|java+method:///java/lang/StringBuilder/append(double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectDoubleHashMap/forEachPair(org.apache.mahout.math.function.ObjectDoubleProcedure)|",
      "|java+method:///org/apache/hadoop/io/DoubleWritable/get()|",
      "|java+method:///java/lang/Math/log1p(double)|",
      "|java+method:///org/apache/mahout/common/StringTuple/add(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/cbayes/CBayesThetaNormalizerMapper$1/CBayesThetaNormalizerMapper$1(org.apache.mahout.classifier.bayes.mapreduce.cbayes.CBayesThetaNormalizerMapper,org.apache.hadoop.io.DoubleWritable,org.apache.hadoop.mapred.Reporter,org.apache.hadoop.mapred.OutputCollector)|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/bayes/BayesClassifierDriver/runJob(org.apache.mahout.common.Parameters)|",
    "called": "|java+method:///org/apache/hadoop/mapred/JobConf/setOutputValueClass(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/common/Parameters/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/FileInputFormat/setInputPaths(org.apache.hadoop.mapred.JobConf,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setReducerClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setCombinerClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setJobName(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setInputFormat(java.lang.Class)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setOutputKeyClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/HadoopUtil/delete(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+method:///org/apache/hadoop/mapred/JobClient/runJob(org.apache.hadoop.mapred.JobConf)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setOutputFormat(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configurable/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapred/FileOutputFormat/setOutputPath(org.apache.hadoop.mapred.JobConf,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/bayes/BayesClassifierDriver/readResult(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration,org.apache.mahout.common.Parameters)|",
      "|java+constructor:///org/apache/hadoop/mapred/JobClient/JobClient()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setMapperClass(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/common/Parameters/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/FileInputFormat/setInputPaths(org.apache.hadoop.mapred.JobConf,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setReducerClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setCombinerClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setJobName(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setInputFormat(java.lang.Class)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/bayes/BayesClassifierDriver/confusionMatrixSeqFileExport(org.apache.mahout.common.Parameters,org.apache.mahout.classifier.ConfusionMatrix)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setOutputKeyClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/HadoopUtil/delete(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+method:///org/apache/hadoop/mapred/JobClient/runJob(org.apache.hadoop.mapred.JobConf)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setOutputFormat(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configurable/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapred/FileOutputFormat/setOutputPath(org.apache.hadoop.mapred.JobConf,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/bayes/BayesClassifierDriver/readResult(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration,org.apache.mahout.common.Parameters)|",
      "|java+constructor:///org/apache/hadoop/mapred/JobClient/JobClient()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setMapperClass(java.lang.Class)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/convertors/integer/IntegerStringOutputConverter/collect(java.lang.Integer,java.util.List)|",
    "called": "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/convertors/string/TopKStringPatterns/TopKStringPatterns(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///org/apache/mahout/common/Pair/Pair(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/convertors/string/TopKStringPatterns/TopKStringPatterns(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///org/apache/mahout/common/Pair/Pair(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/spectral/common/VectorCache/load(org.apache.hadoop.conf.Configuration)|",
    "called": "|java+method:///org/apache/hadoop/filecache/DistributedCache/getCacheFiles(org.apache.hadoop.conf.Configuration)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/clustering/spectral/common/VectorCache/load(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///java/net/URI/getPath()|",
      "|java+method:///org/apache/hadoop/filecache/DistributedCache/getCacheFiles(org.apache.hadoop.conf.Configuration)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Arrays/toString(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/mahout/clustering/spectral/common/VectorCache/load(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///java/net/URI/getPath()|",
      "|java+method:///org/apache/hadoop/filecache/DistributedCache/getCacheFiles(org.apache.hadoop.conf.Configuration)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/runJob(org.apache.hadoop.conf.Configuration,org.apache.mahout.math.decomposer.lanczos.LanczosState,int,boolean,java.lang.String)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/solve(org.apache.mahout.math.decomposer.lanczos.LanczosState,int,boolean)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/decomposer/lanczos/LanczosState/getCorpus()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/serializeOutput(org.apache.mahout.math.decomposer.lanczos.LanczosState,org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/solve(org.apache.mahout.math.decomposer.lanczos.LanczosState,int,boolean)|",
      "|java+method:///org/apache/mahout/math/decomposer/lanczos/LanczosState/getCorpus()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/serializeOutput(org.apache.mahout.math.decomposer.lanczos.LanczosState,org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configurable/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/setConf(org.apache.hadoop.conf.Configuration)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver/run(java.lang.String%5B%5D)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/maxIterationsOption()|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver/addOption(java.lang.String,java.lang.String,java.lang.String,boolean)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver/getConf()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/methodOption()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver/addOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver/getInputPath()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/HadoopUtil/delete(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/RandomSeedGenerator/buildRandom(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,org.apache.mahout.common.distance.DistanceMeasure)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver/hasOption(java.lang.String)|",
      "|java+method:///java/lang/Float/parseFloat(java.lang.String)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/numClustersOption()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/emitMostLikelyOption()|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver/addOutputOption()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/clustersInOption()|",
      "|java+method:///java/lang/ClassLoader/loadClass(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver/getOutputPath()|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///java/lang/Class/asSubclass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.mahout.common.distance.DistanceMeasure,double,int,float,boolean,boolean,double,boolean)|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/distanceMeasureOption()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/overwriteOption()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/thresholdOption()|",
      "|java+method:///java/lang/Thread/getContextClassLoader()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/clusteringOption()|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver/getOption(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver/parseArguments(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver/addInputOption()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/convergenceOption()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/maxIterationsOption()|",
      "|java+method:///org/apache/mahout/common/ClassUtils/instantiateAs(java.lang.String,java.lang.Class)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver/addOption(java.lang.String,java.lang.String,java.lang.String,boolean)|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/numClustersOption()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver/getConf()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/clustersInOption()|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.mahout.common.distance.DistanceMeasure,double,int,float,boolean,boolean,double,boolean)|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/methodOption()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver/addOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver/getInputPath()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/clusteringOption()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/HadoopUtil/delete(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/RandomSeedGenerator/buildRandom(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,org.apache.mahout.common.distance.DistanceMeasure)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver/hasOption(java.lang.String)|",
      "|java+method:///java/lang/Float/parseFloat(java.lang.String)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/emitMostLikelyOption()|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver/addOutputOption()|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver/getOutputPath()|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/distanceMeasureOption()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/overwriteOption()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/thresholdOption()|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver/getOption(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver/parseArguments(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver/addInputOption()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/convergenceOption()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/ClusterIterator/writeClassifier(org.apache.mahout.clustering.ClusterClassifier,org.apache.hadoop.fs.Path,java.lang.String)|",
    "called": "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/close()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/ParallelCountingMapper/map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/regex/Pattern/split(java.lang.CharSequence)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/setStatus(java.lang.String)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/regex/Pattern/split(java.lang.CharSequence)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/setStatus(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+method:///java/lang/String/isEmpty()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/kmeans/KMeansDriver/clusterDataSeq(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.mahout.common.distance.DistanceMeasure)|",
    "called": "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/mahout/clustering/kmeans/KMeansClusterer/KMeansClusterer(org.apache.mahout.common.distance.DistanceMeasure)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterable/iterator()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///java/util/Collection/isEmpty()|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansClusterer/emitPointToNearestCluster(org.apache.mahout.math.Vector,java.lang.Iterable,org.apache.hadoop.io.SequenceFile$Writer)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansUtil/configureWithClusterInfo(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.util.Collection)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/close()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/logsCRCFilter()|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterable/SequenceFileValueIterable(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/mahout/clustering/kmeans/KMeansClusterer/KMeansClusterer(org.apache.mahout.common.distance.DistanceMeasure)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterable/iterator()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansClusterer/emitPointToNearestCluster(org.apache.mahout.math.Vector,java.lang.Iterable,org.apache.hadoop.io.SequenceFile$Writer)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansUtil/configureWithClusterInfo(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.util.Collection)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/logsCRCFilter()|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Collection/isEmpty()|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterable/SequenceFileValueIterable(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$2/apply(java.lang.String,int)|",
    "called": "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable(double)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable(double)|",
      "|java+method:///org/apache/mahout/common/StringTuple/add(java.lang.String)|",
      "|java+method:///java/lang/Math/log(double)|",
      "|java+constructor:///org/apache/mahout/common/StringTuple/StringTuple()|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable(double)|",
      "|java+constructor:///org/apache/mahout/common/StringTuple/StringTuple()|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Math/log1p(double)|",
      "|java+method:///org/apache/mahout/common/StringTuple/add(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/canopy/CanopyMapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/apache/mahout/clustering/canopy/CanopyClusterer/CanopyClusterer(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/mahout/clustering/canopy/CanopyClusterer/CanopyClusterer(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/kmeans/RandomSeedGenerator/buildRandom(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,org.apache.mahout.common.distance.DistanceMeasure)|",
    "called": "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/common/HadoopUtil/delete(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/getFileStatus(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/isDir()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileIterable/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/clustering/kmeans/Cluster/Cluster(org.apache.mahout.math.Vector,int,org.apache.mahout.common.distance.DistanceMeasure)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile/createWriter(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileIterable/SequenceFileIterable(org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/remove(int)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/close()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/logsCRCFilter()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/createNewFile(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/util/Random/nextInt(int)|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/Cluster/observe(org.apache.mahout.math.Vector,double)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/common/HadoopUtil/delete(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/getFileStatus(org.apache.hadoop.fs.Path)|",
      "|java+method:///com/google/common/collect/Lists/newArrayListWithCapacity(int)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileIterable/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/clustering/kmeans/Cluster/Cluster(org.apache.mahout.math.Vector,int,org.apache.mahout.common.distance.DistanceMeasure)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile/createWriter(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileIterable/SequenceFileIterable(org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/remove(int)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/logsCRCFilter()|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/isDir()|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/createNewFile(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/util/Random/nextInt(int)|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/Cluster/observe(org.apache.mahout.math.Vector,double)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/canopy/ClusterMapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path%5B%5D,org.apache.hadoop.fs.PathFilter)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterable/iterator()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path%5B%5D,org.apache.hadoop.fs.PathFilter)|",
      "|java+constructor:///org/apache/mahout/clustering/canopy/CanopyClusterer/CanopyClusterer(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/partFilter()|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/util/Collection/isEmpty()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterable/SequenceFileValueIterable(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/fs/FileUtil/stat2Paths(org.apache.hadoop.fs.FileStatus%5B%5D)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterable/iterator()|",
      "|java+method:///java/util/Collection/isEmpty()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path%5B%5D,org.apache.hadoop.fs.PathFilter)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///org/apache/mahout/clustering/canopy/CanopyClusterer/CanopyClusterer(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/partFilter()|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterable/SequenceFileValueIterable(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/fs/FileUtil/stat2Paths(org.apache.hadoop.fs.FileStatus%5B%5D)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/setIOSort(org.apache.hadoop.mapreduce.JobContext)|",
    "called": "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/compile(java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/setInt(java.lang.String,int)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///java/util/regex/Matcher/find()|",
      "|java+method:///org/apache/hadoop/mapreduce/JobContext/getConfiguration()|"
    ],
    "v2Body": [
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/compile(java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/setInt(java.lang.String,int)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///java/util/regex/Matcher/find()|",
      "|java+method:///org/apache/hadoop/mapreduce/JobContext/getConfiguration()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+method:///java/lang/Math/min(int,int)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/vectorizer/SparseVectorsFromSequenceFiles/run(java.lang.String%5B%5D)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withName(java.lang.String)|",
      "|java+method:///java/lang/Float/valueOf(float)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/create()|",
      "|java+constructor:///org/apache/commons/cli2/builder/ArgumentBuilder/ArgumentBuilder()|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/HadoopUtil/delete(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///java/lang/Float/parseFloat(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/apache/mahout/vectorizer/tfidf/TFIDFConverter/processTfIdf(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration,int,int,int,float,boolean,boolean,boolean,int)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMaximum(int)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withRequired(boolean)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///org/apache/mahout/vectorizer/DictionaryVectorizer/createTermFrequencyVectors(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration,int,int,float,float,boolean,int,int,boolean,boolean)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelp(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/mahout/vectorizer/SparseVectorsFromSequenceFiles/getConf()|",
      "|java+constructor:///org/apache/commons/cli2/OptionException/OptionException(org.apache.commons.cli2.Option)|",
      "|java+method:///java/lang/Class/asSubclass(java.lang.Class)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/mahout/vectorizer/DocumentProcessor/tokenizeDocuments(org.apache.hadoop.fs.Path,java.lang.Class,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMinimum(int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withArgument(org.apache.commons.cli2.Argument)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withLongName(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setHelpOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+constructor:///org/apache/commons/cli2/builder/DefaultOptionBuilder/DefaultOptionBuilder()|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/common/ClassUtils/instantiateAs(java.lang.Class,java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/outputOption()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/create()|",
      "|java+constructor:///org/apache/commons/cli2/builder/ArgumentBuilder/ArgumentBuilder()|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/HadoopUtil/delete(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///java/lang/Float/parseFloat(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMaximum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withRequired(boolean)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/hadoop/stats/BasicStats/stdDevForGivenMean(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,double,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/vectorizer/HighDFWordsPruner/pruneVectors(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,long,org.apache.hadoop.conf.Configuration,org.apache.mahout.common.Pair,float,boolean,int)|",
      "|java+method:///org/apache/mahout/vectorizer/tfidf/TFIDFConverter/calculateDF(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration,int)|",
      "|java+method:///java/lang/Float/valueOf(float)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelp(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/mahout/vectorizer/SparseVectorsFromSequenceFiles/getConf()|",
      "|java+constructor:///org/apache/commons/cli2/OptionException/OptionException(org.apache.commons.cli2.Option)|",
      "|java+method:///java/lang/Class/asSubclass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/vectorizer/DictionaryVectorizer/createTermFrequencyVectors(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.lang.String,org.apache.hadoop.conf.Configuration,int,int,float,float,boolean,int,int,boolean,boolean)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/inputOption()|",
      "|java+method:///org/apache/mahout/vectorizer/DocumentProcessor/tokenizeDocuments(org.apache.hadoop.fs.Path,java.lang.Class,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/vectorizer/tfidf/TFIDFConverter/processTfIdf(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration,org.apache.mahout.common.Pair,int,long,float,boolean,boolean,boolean,int)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMinimum(int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withArgument(org.apache.commons.cli2.Argument)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withLongName(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setHelpOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+constructor:///org/apache/commons/cli2/builder/DefaultOptionBuilder/DefaultOptionBuilder()|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/lda/LDADriver/findLL(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
    "called": "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/common/IntPairWritable/getFirst()|",
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileIterator/close()|",
      "|java+method:///org/apache/hadoop/io/DoubleWritable/get()|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileIterator/SequenceFileIterator(org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileIterator/next()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileIterator/hasNext()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/common/IntPairWritable/getFirst()|",
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/io/DoubleWritable/get()|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileIterator/SequenceFileIterator(org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileIterator/next()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileIterator/hasNext()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJob/run(java.lang.String%5B%5D)|",
    "called": "|java+method:///org/apache/hadoop/mapreduce/Job/waitForCompletion(boolean)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJob/pathToM(int)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJob/addOutputOption()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJob/getOutputPath()|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJob/parseArguments(java.lang.String%5B%5D)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJob/pathToUserRatings()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJob/pathToU(int)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJob/iterate(int,int,double)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJob/addOption(java.lang.String,java.lang.String,java.lang.String,boolean)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/waitForCompletion(boolean)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJob/getInputPath()|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJob/addInputOption()|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJob/prepareJob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJob/pathToItemRatings()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/getConfiguration()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/setBoolean(java.lang.String,boolean)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/setInt(java.lang.String,int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJob/pathToM(int)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJob/addOutputOption()|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJob/getConf()|",
      "|java+method:///java/lang/String/valueOf(boolean)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJob/parseArguments(java.lang.String%5B%5D)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setCombinerClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJob/pathToUserRatings()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJob/runSolver(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/als/ALSUtils/readFirstRow(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/waitForCompletion(boolean)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJob/getInputPath()|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJob/addInputOption()|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJob/prepareJob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJob/pathToItemRatings()|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJob/initializeM(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJob/getTempPath(java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJob/pathToU(int)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJob/prepareJob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJob/addOption(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/valueOf(int)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJob/addOption(java.lang.String,java.lang.String,java.lang.String,boolean)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/cf/taste/hadoop/slopeone/SlopeOnePrefsToDiffsReducer/reduce(org.apache.mahout.math.VarLongWritable,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)|",
    "called": "|java+constructor:///org/apache/hadoop/io/FloatWritable/FloatWritable(float)|",
    "v1Body": [
      "|java+constructor:///org/apache/hadoop/io/FloatWritable/FloatWritable(float)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/EntityPrefWritable/getID()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/cf/taste/hadoop/EntityEntityWritable/EntityEntityWritable(long,long)|",
      "|java+constructor:///org/apache/mahout/cf/taste/hadoop/EntityPrefWritable/EntityPrefWritable(org.apache.mahout.cf.taste.hadoop.EntityPrefWritable)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/slopeone/ByItemIDComparator/getInstance()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Collections/sort(java.util.List,java.util.Comparator)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/EntityPrefWritable/getPrefValue()|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/io/FloatWritable/FloatWritable(float)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/EntityPrefWritable/getID()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/cf/taste/hadoop/EntityEntityWritable/EntityEntityWritable(long,long)|",
      "|java+constructor:///org/apache/mahout/cf/taste/hadoop/EntityPrefWritable/EntityPrefWritable(org.apache.mahout.cf.taste.hadoop.EntityPrefWritable)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/slopeone/ByItemIDComparator/getInstance()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Collections/sort(java.util.List,java.util.Comparator)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/EntityPrefWritable/getPrefValue()|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/canopy/CanopyReducer/reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)|",
    "called": "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/mahout/clustering/canopy/Canopy/getIdentifier()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/clustering/canopy/CanopyClusterer/addPointToCanopies(org.apache.mahout.math.Vector,java.util.Collection)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/mahout/clustering/canopy/Canopy/computeParameters()|",
      "|java+method:///java/lang/Iterable/iterator()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/mahout/clustering/canopy/Canopy/getIdentifier()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/canopy/Canopy/getNumPoints()|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/clustering/canopy/CanopyClusterer/addPointToCanopies(org.apache.mahout.math.Vector,java.util.Collection)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/mahout/clustering/canopy/Canopy/computeParameters()|",
      "|java+method:///java/lang/Iterable/iterator()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelpWithGenericOptions(org.apache.commons.cli2.Group,org.apache.commons.cli2.OptionException)|",
    "called": "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
    "v1Body": [
      "|java+constructor:///org/apache/commons/cli/Options/Options()|",
      "|java+constructor:///org/apache/hadoop/util/GenericOptionsParser/GenericOptionsParser(org.apache.hadoop.conf.Configuration,org.apache.commons.cli.Options,java.lang.String%5B%5D)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/commons/cli2/util/HelpFormatter/setException(org.apache.commons.cli2.OptionException)|",
      "|java+method:///org/apache/commons/cli/HelpFormatter/printHelp(java.lang.String,java.lang.String,org.apache.commons.cli.Options,java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/util/HelpFormatter/print()|",
      "|java+constructor:///org/apache/commons/cli2/util/HelpFormatter/HelpFormatter()|",
      "|java+constructor:///org/apache/commons/cli/HelpFormatter/HelpFormatter()|",
      "|java+method:///java/io/PrintWriter/flush()|",
      "|java+method:///org/apache/commons/cli2/util/HelpFormatter/setPrintWriter(java.io.PrintWriter)|",
      "|java+constructor:///java/io/PrintWriter/PrintWriter(java.io.OutputStream)|",
      "|java+method:///org/apache/commons/cli2/util/HelpFormatter/setGroup(org.apache.commons.cli2.Group)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/commons/cli/Options/Options()|",
      "|java+constructor:///org/apache/hadoop/util/GenericOptionsParser/GenericOptionsParser(org.apache.hadoop.conf.Configuration,org.apache.commons.cli.Options,java.lang.String%5B%5D)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/commons/cli2/util/HelpFormatter/setException(org.apache.commons.cli2.OptionException)|",
      "|java+method:///org/apache/commons/cli/HelpFormatter/printHelp(java.lang.String,java.lang.String,org.apache.commons.cli.Options,java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/util/HelpFormatter/print()|",
      "|java+constructor:///org/apache/commons/cli2/util/HelpFormatter/HelpFormatter()|",
      "|java+constructor:///org/apache/commons/cli/HelpFormatter/HelpFormatter()|",
      "|java+method:///org/apache/commons/cli2/util/HelpFormatter/setGroup(org.apache.commons.cli2.Group)|",
      "|java+constructor:///java/io/PrintWriter/PrintWriter(java.io.OutputStream,boolean)|",
      "|java+method:///java/io/PrintWriter/flush()|",
      "|java+method:///org/apache/commons/cli2/util/HelpFormatter/setPrintWriter(java.io.PrintWriter)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/minhash/MinHashReducer/reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)|",
    "called": "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///org/apache/mahout/math/Vector/clone()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/getCounter(java.lang.Enum)|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///org/apache/hadoop/mapreduce/Counter/increment(long)|",
      "|java+method:///java/util/Collection/iterator()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///org/apache/mahout/math/Vector/clone()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/getCounter(java.lang.Enum)|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///org/apache/hadoop/mapreduce/Counter/increment(long)|",
      "|java+method:///java/util/Collection/iterator()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper/map(org.apache.hadoop.io.Text,org.apache.hadoop.io.Text,org.apache.hadoop.mapred.OutputCollector,org.apache.hadoop.mapred.Reporter)|",
    "called": "|java+method:///org/apache/hadoop/io/Text/toString()|",
    "v1Body": [
      "|java+method:///com/google/common/collect/Iterators/forArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$1/BayesFeatureMapper$1(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,org.apache.commons.lang.mutable.MutableDouble)|",
      "|java+method:///org/apache/lucene/analysis/tokenattributes/TermAttribute/term()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/getAttribute(java.lang.Class)|",
      "|java+method:///java/lang/String/length()|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$2/BayesFeatureMapper$2(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,java.lang.String,double,org.apache.hadoop.mapred.OutputCollector)|",
      "|java+constructor:///org/apache/mahout/math/map/OpenObjectIntHashMap/OpenObjectIntHashMap(int)|",
      "|java+method:///org/apache/commons/lang/mutable/MutableDouble/doubleValue()|",
      "|java+method:///org/apache/mahout/common/StringTuple/add(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/common/StringTuple/StringTuple()|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/incrementToken()|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/Math/sqrt(double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/forEachPair(org.apache.mahout.math.function.ObjectIntProcedure)|",
      "|java+method:///org/apache/hadoop/mapred/Reporter/setStatus(java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/split(java.lang.CharSequence)|",
      "|java+constructor:///org/apache/commons/lang/mutable/MutableDouble/MutableDouble(double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/put(java.lang.Object,int)|",
      "|java+constructor:///org/apache/lucene/analysis/shingle/ShingleFilter/ShingleFilter(org.apache.lucene.analysis.TokenStream,int)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/get(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/mahout/common/lucene/IteratorTokenStream/IteratorTokenStream(java.util.Iterator)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$3/BayesFeatureMapper$3(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,java.lang.String,org.apache.hadoop.mapred.OutputCollector)|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Iterators/forArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$1/BayesFeatureMapper$1(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,org.apache.commons.lang.mutable.MutableDouble)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/getAttribute(java.lang.Class)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$2/BayesFeatureMapper$2(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,java.lang.String,double,org.apache.hadoop.mapred.OutputCollector)|",
      "|java+constructor:///org/apache/mahout/math/map/OpenObjectIntHashMap/OpenObjectIntHashMap(int)|",
      "|java+method:///org/apache/commons/lang/mutable/MutableDouble/doubleValue()|",
      "|java+method:///org/apache/mahout/common/StringTuple/add(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/common/StringTuple/StringTuple()|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/incrementToken()|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/Math/sqrt(double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/forEachPair(org.apache.mahout.math.function.ObjectIntProcedure)|",
      "|java+method:///org/apache/hadoop/mapred/Reporter/setStatus(java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/split(java.lang.CharSequence)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///org/apache/commons/lang/mutable/MutableDouble/MutableDouble(double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/put(java.lang.Object,int)|",
      "|java+constructor:///org/apache/lucene/analysis/shingle/ShingleFilter/ShingleFilter(org.apache.lucene.analysis.TokenStream,int)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/get(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/mahout/common/lucene/IteratorTokenStream/IteratorTokenStream(java.util.Iterator)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$3/BayesFeatureMapper$3(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,java.lang.String,org.apache.hadoop.mapred.OutputCollector)|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/vectorizer/DictionaryVectorizer/createDictionaryChunks(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration,int,int%5B%5D)|",
    "called": "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirIterable/iterator()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/close()|",
      "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable(int)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///java/lang/String/length()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirIterable/SequenceFileDirIterable(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,java.util.Comparator,boolean,org.apache.hadoop.conf.Configuration)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirIterable/iterator()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable(int)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirIterable/SequenceFileDirIterable(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,java.util.Comparator,boolean,org.apache.hadoop.conf.Configuration)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/meanshift/MeanShiftCanopyDriver/clusterDataSeq(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
    "called": "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/clustering/meanshift/MeanShiftCanopy/getCenter()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileIterable/iterator()|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/clustering/WeightedVectorWritable/WeightedVectorWritable(double,org.apache.mahout.math.Vector)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileIterable/SequenceFileIterable(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///org/apache/mahout/clustering/meanshift/MeanShiftCanopy/getId()|",
      "|java+method:///org/apache/mahout/clustering/meanshift/MeanShiftCanopyClusterer/findCoveringCanopy(org.apache.mahout.clustering.meanshift.MeanShiftCanopy,java.lang.Iterable)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/close()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/logsCRCFilter()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterable/SequenceFileDirValueIterable(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable(int)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterable/iterator()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/clustering/meanshift/MeanShiftCanopy/getCenter()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileIterable/SequenceFileIterable(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileIterable/iterator()|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/clustering/WeightedVectorWritable/WeightedVectorWritable(double,org.apache.mahout.math.Vector)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///org/apache/mahout/clustering/meanshift/MeanShiftCanopy/getId()|",
      "|java+method:///org/apache/mahout/clustering/meanshift/MeanShiftCanopyClusterer/findCoveringCanopy(org.apache.mahout.clustering.meanshift.MeanShiftCanopy,java.lang.Iterable)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/logsCRCFilter()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterable/SequenceFileDirValueIterable(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable(int)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterable/iterator()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/QJob$QMapper/QJob$QMapper()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable()|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/QJob$QJobKeyWritable/QJob$QJobKeyWritable()|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/DenseBlockWritable/DenseBlockWritable()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+constructor:///org/apache/mahout/clustering/meanshift/MeanShiftCanopyReducer/MeanShiftCanopyReducer()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterator$1/apply(org.apache.hadoop.fs.FileStatus)|",
    "called": "|java+method:///org/apache/hadoop/fs/Path/toString()|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/SequenceFileValueIterator(org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterator/access$000(org.apache.mahout.common.iterator.sequencefile.SequenceFileDirValueIterator)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/SequenceFileValueIterator(org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/cbayes/CBayesThetaNormalizerMapper/configure(org.apache.hadoop.mapred.JobConf)|",
    "called": "|java+method:///org/apache/hadoop/io/DefaultStringifier/fromString(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/util/GenericsUtil/getClass(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/DefaultStringifier/fromString(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/DefaultStringifier/DefaultStringifier(org.apache.hadoop.conf.Configuration,java.lang.Class)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectDoubleHashMap/put(java.lang.Object,double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectDoubleHashMap/clear()|",
      "|java+method:///java/lang/Double/valueOf(java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/get(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/io/DefaultStringifier/toString(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/common/Parameters/Parameters(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/io/IOException/toString()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/lang/Double/doubleValue()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/io/DefaultStringifier/fromString(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/DefaultStringifier/DefaultStringifier(org.apache.hadoop.conf.Configuration,java.lang.Class)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectDoubleHashMap/put(java.lang.Object,double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectDoubleHashMap/clear()|",
      "|java+method:///java/lang/Double/valueOf(java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/get(java.lang.String,java.lang.String)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///org/apache/hadoop/util/GenericsUtil/getClass(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/io/DefaultStringifier/toString(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/common/Parameters/Parameters(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/io/IOException/toString()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Double/doubleValue()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/vectorizer/document/SequenceFileTokenizerMapper/map(org.apache.hadoop.io.Text,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+method:///org/apache/hadoop/io/Text/toString()|",
    "v1Body": [
      "|java+constructor:///java/lang/String/String(char%5B%5D,int,int)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/lucene/analysis/tokenattributes/CharTermAttribute/buffer()|",
      "|java+constructor:///java/io/StringReader/StringReader(java.lang.String)|",
      "|java+method:///org/apache/lucene/analysis/tokenattributes/CharTermAttribute/length()|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+constructor:///org/apache/mahout/common/StringTuple/StringTuple()|",
      "|java+method:///org/apache/lucene/analysis/Analyzer/tokenStream(java.lang.String,java.io.Reader)|",
      "|java+method:///org/apache/lucene/analysis/TokenStream/incrementToken()|",
      "|java+method:///org/apache/lucene/analysis/TokenStream/addAttribute(java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/StringTuple/add(java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/String/String(char%5B%5D,int,int)|",
      "|java+method:///org/apache/lucene/analysis/tokenattributes/CharTermAttribute/buffer()|",
      "|java+constructor:///java/io/StringReader/StringReader(java.lang.String)|",
      "|java+method:///org/apache/lucene/analysis/tokenattributes/CharTermAttribute/length()|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+method:///org/apache/lucene/analysis/TokenStream/reset()|",
      "|java+method:///org/apache/lucene/analysis/TokenStream/incrementToken()|",
      "|java+constructor:///org/apache/mahout/common/StringTuple/StringTuple()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/lucene/analysis/Analyzer/reusableTokenStream(java.lang.String,java.io.Reader)|",
      "|java+method:///org/apache/lucene/analysis/TokenStream/addAttribute(java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/StringTuple/add(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/cf/taste/hadoop/item/UserVectorSplitterMapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+method:///org/apache/hadoop/fs/Path/makeQualified(org.apache.hadoop.fs.FileSystem)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/cf/taste/impl/common/FastIDSet/add(long)|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/hadoop/io/IOUtils/closeStream(java.io.Closeable)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/open(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///org/apache/hadoop/fs/Path/makeQualified(org.apache.hadoop.fs.FileSystem)|",
      "|java+constructor:///org/apache/mahout/cf/taste/impl/common/FastIDSet/FastIDSet()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/mahout/common/iterator/FileLineIterable/FileLineIterable(java.io.InputStream)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/mahout/common/iterator/FileLineIterable/iterator()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getInt(java.lang.String,int)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/cf/taste/impl/common/FastIDSet/add(long)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/open(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///org/apache/hadoop/fs/Path/makeQualified(org.apache.hadoop.fs.FileSystem)|",
      "|java+constructor:///org/apache/mahout/cf/taste/impl/common/FastIDSet/FastIDSet()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/mahout/common/iterator/FileLineIterable/FileLineIterable(java.io.InputStream)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/mahout/common/iterator/FileLineIterable/iterator()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getInt(java.lang.String,int)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/MatrixMultiplicationJob/run(java.lang.String%5B%5D)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/MatrixMultiplicationJob/parseArguments(java.lang.String%5B%5D)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/hadoop/MatrixMultiplicationJob/getConf()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/hadoop/MatrixMultiplicationJob/addOption(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/times(org.apache.mahout.math.hadoop.DistributedRowMatrix)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/MatrixMultiplicationJob/parseArguments(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/times(org.apache.mahout.math.hadoop.DistributedRowMatrix)|",
      "|java+method:///org/apache/mahout/math/hadoop/MatrixMultiplicationJob/getConf()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/hadoop/MatrixMultiplicationJob/addOption(java.lang.String,java.lang.String,java.lang.String,boolean)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/runJob(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int,boolean,int,java.lang.String)|",
    "called": "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration(org.apache.hadoop.conf.Configuration)|",
    "v1Body": [
      "|java+constructor:///org/apache/mahout/math/decomposer/lanczos/LanczosState/LanczosState(org.apache.mahout.math.VectorIterable,int,int,org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/runJob(org.apache.hadoop.conf.Configuration,org.apache.mahout.math.decomposer.lanczos.LanczosState,int,boolean,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/getInitialVector(org.apache.mahout.math.VectorIterable)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/runJob(org.apache.hadoop.conf.Configuration,org.apache.mahout.math.decomposer.lanczos.LanczosState,int,boolean,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/getInitialVector(org.apache.mahout.math.VectorIterable)|",
      "|java+constructor:///org/apache/mahout/math/decomposer/lanczos/LanczosState/LanczosState(org.apache.mahout.math.VectorIterable,int,org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver/buildClustersSeq(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.mahout.common.distance.DistanceMeasure,double,int,float)|",
    "called": "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/fs/Path/getName()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/SoftCluster/getCenter()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/SoftCluster/getId()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/close()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/logsCRCFilter()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterable/SequenceFileDirValueIterable(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansClusterer/testConvergence(java.lang.Iterable)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansUtil/configureWithClusterInfo(org.apache.hadoop.fs.Path,java.util.Collection)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansClusterer/addPointToClusters(java.util.List,org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/clustering/AbstractCluster/formatVector(org.apache.mahout.math.Vector,java.lang.String%5B%5D)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterable/iterator()|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/SoftCluster/getIdentifier()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/SoftCluster/getNumPoints()|",
      "|java+constructor:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansClusterer/FuzzyKMeansClusterer(org.apache.mahout.common.distance.DistanceMeasure,double,double)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/SoftCluster/getRadius()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/getName()|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/SoftCluster/getId()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/clustering/AbstractCluster/formatVector(org.apache.mahout.math.Vector,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/rename(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/logsCRCFilter()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterable/SequenceFileDirValueIterable(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansClusterer/testConvergence(java.lang.Iterable)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansUtil/configureWithClusterInfo(org.apache.hadoop.fs.Path,java.util.Collection)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansClusterer/addPointToClusters(java.util.List,org.apache.mahout.math.Vector)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterable/iterator()|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/SoftCluster/getIdentifier()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/SoftCluster/getNumPoints()|",
      "|java+constructor:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansClusterer/FuzzyKMeansClusterer(org.apache.mahout.common.distance.DistanceMeasure,double,double)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/SoftCluster/getRadius()|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/SoftCluster/getCenter()|",
      "|java+method:///org/slf4j/Logger/isDebugEnabled()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelpWithGenericOptions(org.apache.commons.cli2.Group)|",
    "called": "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
    "v1Body": [
      "|java+constructor:///org/apache/commons/cli/Options/Options()|",
      "|java+constructor:///org/apache/hadoop/util/GenericOptionsParser/GenericOptionsParser(org.apache.hadoop.conf.Configuration,org.apache.commons.cli.Options,java.lang.String%5B%5D)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/commons/cli2/util/HelpFormatter/printFooter()|",
      "|java+method:///org/apache/commons/cli/HelpFormatter/printHelp(java.lang.String,java.lang.String,org.apache.commons.cli.Options,java.lang.String)|",
      "|java+constructor:///org/apache/commons/cli2/util/HelpFormatter/HelpFormatter()|",
      "|java+constructor:///org/apache/commons/cli/HelpFormatter/HelpFormatter()|",
      "|java+method:///org/apache/commons/cli2/util/HelpFormatter/setFooter(java.lang.String)|",
      "|java+method:///java/io/PrintWriter/flush()|",
      "|java+method:///org/apache/commons/cli2/util/HelpFormatter/setPrintWriter(java.io.PrintWriter)|",
      "|java+method:///org/apache/commons/cli2/util/HelpFormatter/printHelp()|",
      "|java+constructor:///java/io/PrintWriter/PrintWriter(java.io.OutputStream)|",
      "|java+method:///org/apache/commons/cli2/util/HelpFormatter/setGroup(org.apache.commons.cli2.Group)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/commons/cli/Options/Options()|",
      "|java+constructor:///org/apache/hadoop/util/GenericOptionsParser/GenericOptionsParser(org.apache.hadoop.conf.Configuration,org.apache.commons.cli.Options,java.lang.String%5B%5D)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/commons/cli2/util/HelpFormatter/printFooter()|",
      "|java+method:///org/apache/commons/cli/HelpFormatter/printHelp(java.lang.String,java.lang.String,org.apache.commons.cli.Options,java.lang.String)|",
      "|java+constructor:///org/apache/commons/cli2/util/HelpFormatter/HelpFormatter()|",
      "|java+constructor:///org/apache/commons/cli/HelpFormatter/HelpFormatter()|",
      "|java+method:///org/apache/commons/cli2/util/HelpFormatter/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///java/io/PrintWriter/flush()|",
      "|java+method:///org/apache/commons/cli2/util/HelpFormatter/setPrintWriter(java.io.PrintWriter)|",
      "|java+method:///org/apache/commons/cli2/util/HelpFormatter/printHelp()|",
      "|java+method:///org/apache/commons/cli2/util/HelpFormatter/setFooter(java.lang.String)|",
      "|java+constructor:///java/io/PrintWriter/PrintWriter(java.io.OutputStream,boolean)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/FPGrowthDriver/main(java.lang.String%5B%5D)|",
    "called": "|java+method:///org/apache/hadoop/util/ToolRunner/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.util.Tool,java.lang.String%5B%5D)|",
    "v1Body": [
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelp(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withLongName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/create()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/runPFPGrowth(org.apache.mahout.common.Parameters)|",
      "|java+method:///org/apache/mahout/common/HadoopUtil/delete(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMaximum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withRequired(boolean)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+constructor:///org/apache/mahout/common/Parameters/Parameters()|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/helpOption()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/outputOption()|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMinimum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withArgument(org.apache.commons.cli2.Argument)|",
      "|java+constructor:///org/apache/commons/cli2/builder/ArgumentBuilder/ArgumentBuilder()|",
      "|java+method:///org/apache/mahout/common/Parameters/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/FPGrowthDriver/runFPGrowth(org.apache.mahout.common.Parameters)|",
      "|java+constructor:///org/apache/commons/cli2/builder/DefaultOptionBuilder/DefaultOptionBuilder()|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/FPGrowthDriver/FPGrowthDriver()|",
      "|java+method:///org/apache/hadoop/util/ToolRunner/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.util.Tool,java.lang.String%5B%5D)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/ParallelFPGrowthReducer/ParallelFPGrowthReducer()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/mahout/math/map/OpenLongObjectHashMap/OpenLongObjectHashMap()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|",
      "|java+constructor:///org/apache/mahout/math/map/OpenObjectIntHashMap/OpenObjectIntHashMap()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/mahout/math/list/LongArrayList/LongArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/lda/LDADriver/writeInitialState(org.apache.hadoop.fs.Path,int,int)|",
    "called": "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/mahout/common/IntPairWritable/IntPairWritable(int,int)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///java/util/Random/nextDouble()|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Math/log(double)|",
      "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/io/DoubleWritable/set(double)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/close()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/mahout/common/IntPairWritable/IntPairWritable(int,int)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Math/log(double)|",
      "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/io/DoubleWritable/set(double)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///java/util/Random/nextDouble()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/kmeans/KMeansReducer/setup(org.apache.hadoop.mapreduce.Reducer$Context)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansUtil/configureWithClusterInfo(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.util.Collection)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+constructor:///org/apache/mahout/clustering/kmeans/KMeansClusterer/KMeansClusterer(org.apache.mahout.common.distance.DistanceMeasure)|",
      "|java+method:///org/apache/mahout/common/distance/DistanceMeasure/configure(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/lang/ClassLoader/loadClass(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansReducer/setClusterMap(java.util.Collection)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer/setup(org.apache.hadoop.mapreduce.Reducer$Context)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///java/lang/Class/asSubclass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/getConfiguration()|",
      "|java+method:///java/lang/Thread/getContextClassLoader()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansUtil/configureWithClusterInfo(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.util.Collection)|",
      "|java+constructor:///org/apache/mahout/clustering/kmeans/KMeansClusterer/KMeansClusterer(org.apache.mahout.common.distance.DistanceMeasure)|",
      "|java+method:///org/apache/mahout/common/distance/DistanceMeasure/configure(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/common/ClassUtils/instantiateAs(java.lang.String,java.lang.Class)|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansReducer/setClusterMap(java.util.Collection)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer/setup(org.apache.hadoop.mapreduce.Reducer$Context)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/getConfiguration()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/readFrequentPattern(org.apache.mahout.common.Parameters)|",
    "called": "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPGrowth/readFrequentPattern(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPGrowth/readFrequentPattern(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/vectorizer/collocations/llr/LLRReducer/setup(org.apache.hadoop.mapreduce.Reducer$Context)|",
    "called": "|java+method:///org/apache/hadoop/conf/Configuration/getLong(java.lang.String,long)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///java/lang/Float/valueOf(float)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/getConfiguration()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer/setup(org.apache.hadoop.mapreduce.Reducer$Context)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/isInfoEnabled()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getLong(java.lang.String,long)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getBoolean(java.lang.String,boolean)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getFloat(java.lang.String,float)|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///java/lang/Float/valueOf(float)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/getConfiguration()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer/setup(org.apache.hadoop.mapreduce.Reducer$Context)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getLong(java.lang.String,long)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getBoolean(java.lang.String,boolean)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getFloat(java.lang.String,float)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/common/StringTuple/readFields(java.io.DataInput)|",
    "called": "|java+method:///org/apache/hadoop/io/Text/readFields(java.io.DataInput)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///java/io/DataInput/readInt()|",
      "|java+method:///org/apache/hadoop/io/Text/readFields(java.io.DataInput)|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text()|"
    ],
    "v2Body": [
      "|java+method:///java/io/DataInput/readInt()|",
      "|java+method:///com/google/common/collect/Lists/newArrayListWithCapacity(int)|",
      "|java+method:///org/apache/hadoop/io/Text/readFields(java.io.DataInput)|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansMapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansClusterer/FuzzyKMeansClusterer(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansUtil/configureWithClusterInfo(org.apache.hadoop.fs.Path,java.util.Collection)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/lang/String/length()|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansClusterer/FuzzyKMeansClusterer(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansUtil/configureWithClusterInfo(org.apache.hadoop.fs.Path,java.util.Collection)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansClusterer/configure(org.apache.hadoop.conf.Configuration)|",
    "called": "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///org/apache/mahout/common/distance/DistanceMeasure/configure(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///java/lang/ClassLoader/loadClass(java.lang.String)|",
      "|java+method:///java/lang/Class/asSubclass(java.lang.Class)|",
      "|java+method:///java/lang/Thread/getContextClassLoader()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/distance/DistanceMeasure/configure(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/common/ClassUtils/instantiateAs(java.lang.String,java.lang.Class)|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/ClusterIterator/readClassifier(org.apache.hadoop.fs.Path)|",
    "called": "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/next(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
    "v1Body": [
      "|java+constructor:///org/apache/mahout/clustering/ClusterClassifier/ClusterClassifier()|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Reader/SequenceFile$Reader(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/close()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/next(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/mahout/clustering/ClusterClassifier/ClusterClassifier()|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Reader/SequenceFile$Reader(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/next(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterator/SequenceFileDirValueIterator(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,java.util.Comparator,boolean,org.apache.hadoop.conf.Configuration)|",
    "called": "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path)|",
    "v1Body": [
      "|java+method:///com/google/common/collect/Iterators/forArray(java.lang.Object%5B%5D)|",
      "|java+method:///com/google/common/collect/Iterators/transform(java.util.Iterator,com.google.common.base.Function)|",
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Arrays/sort(java.lang.Object%5B%5D,java.util.Comparator)|",
      "|java+method:///com/google/common/collect/Iterators/concat(java.util.Iterator)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterator$1/SequenceFileDirValueIterator$1(org.apache.mahout.common.iterator.sequencefile.SequenceFileDirValueIterator,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///com/google/common/collect/ForwardingIterator/ForwardingIterator()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterator/init(org.apache.hadoop.fs.FileStatus%5B%5D,java.util.Comparator,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+constructor:///com/google/common/collect/ForwardingIterator/ForwardingIterator()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/common/Parameters/parseParams(java.lang.String)|",
    "called": "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/util/GenericsUtil/getClass(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/DefaultStringifier/fromString(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/DefaultStringifier/DefaultStringifier(org.apache.hadoop.conf.Configuration,java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+constructor:///java/util/HashMap/HashMap()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/io/DefaultStringifier/fromString(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/DefaultStringifier/DefaultStringifier(org.apache.hadoop.conf.Configuration,java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///org/apache/hadoop/util/GenericsUtil/getClass(java.lang.Object)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/kmeans/KMeansClusterMapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansUtil/configureWithClusterInfo(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.util.Collection)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+constructor:///org/apache/mahout/clustering/kmeans/KMeansClusterer/KMeansClusterer(org.apache.mahout.common.distance.DistanceMeasure)|",
      "|java+method:///org/apache/mahout/common/distance/DistanceMeasure/configure(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/ClassLoader/loadClass(java.lang.String)|",
      "|java+method:///java/lang/Class/asSubclass(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///java/util/Collection/isEmpty()|",
      "|java+method:///java/lang/Thread/getContextClassLoader()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansUtil/configureWithClusterInfo(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.util.Collection)|",
      "|java+constructor:///org/apache/mahout/clustering/kmeans/KMeansClusterer/KMeansClusterer(org.apache.mahout.common.distance.DistanceMeasure)|",
      "|java+method:///org/apache/mahout/common/distance/DistanceMeasure/configure(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/common/ClassUtils/instantiateAs(java.lang.String,java.lang.Class)|",
      "|java+method:///java/util/Collection/isEmpty()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+constructor:///org/apache/mahout/clustering/canopy/ClusterMapper/ClusterMapper()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/vectorizer/term/TFPartialVectorReducer/reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)|",
    "called": "|java+method:///org/apache/hadoop/io/Text/toString()|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/Vector/getQuick(int)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/lucene/analysis/shingle/ShingleFilter/ShingleFilter(org.apache.lucene.analysis.TokenStream,int)|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/getAttribute(java.lang.Class)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/apache/mahout/common/lucene/IteratorTokenStream/IteratorTokenStream(java.util.Iterator)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/Vector/getNumNondefaultElements()|",
      "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(int,int)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/containsKey(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/math/SequentialAccessSparseVector/SequentialAccessSparseVector(org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/getCounter(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/get(java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/StringTuple/getEntries()|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/mahout/math/Vector/setQuick(int,double)|",
      "|java+method:///org/apache/hadoop/mapreduce/Counter/increment(long)|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/incrementToken()|",
      "|java+constructor:///org/apache/mahout/math/NamedVector/NamedVector(org.apache.mahout.math.Vector,java.lang.String)|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/close()|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/end()|",
      "|java+method:///org/apache/mahout/common/StringTuple/length()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/Vector/getQuick(int)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/lucene/analysis/shingle/ShingleFilter/ShingleFilter(org.apache.lucene.analysis.TokenStream,int)|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/getAttribute(java.lang.Class)|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/apache/mahout/common/lucene/IteratorTokenStream/IteratorTokenStream(java.util.Iterator)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/Vector/getNumNondefaultElements()|",
      "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(int,int)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/containsKey(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/math/SequentialAccessSparseVector/SequentialAccessSparseVector(org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/getCounter(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/get(java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/StringTuple/getEntries()|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/mahout/math/Vector/setQuick(int,double)|",
      "|java+method:///org/apache/hadoop/mapreduce/Counter/increment(long)|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/incrementToken()|",
      "|java+constructor:///org/apache/mahout/math/NamedVector/NamedVector(org.apache.mahout.math.Vector,java.lang.String)|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/end()|",
      "|java+method:///org/apache/mahout/common/StringTuple/length()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/TransactionTree/write(java.io.DataOutput)|",
    "called": "|java+constructor:///org/apache/hadoop/io/VIntWritable/VIntWritable()|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/io/VLongWritable/write(java.io.DataOutput)|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/io/DataOutput/writeBoolean(boolean)|",
      "|java+method:///org/apache/hadoop/io/VIntWritable/write(java.io.DataOutput)|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|",
      "|java+method:///org/apache/hadoop/io/VIntWritable/set(int)|",
      "|java+constructor:///org/apache/hadoop/io/VLongWritable/VLongWritable()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/hadoop/io/VLongWritable/set(long)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///org/apache/hadoop/io/VIntWritable/VIntWritable()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/io/VLongWritable/write(java.io.DataOutput)|",
      "|java+constructor:///org/apache/hadoop/io/VLongWritable/VLongWritable()|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///org/apache/mahout/math/list/IntArrayList/get(int)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/io/DataOutput/writeBoolean(boolean)|",
      "|java+method:///org/apache/hadoop/io/VIntWritable/write(java.io.DataOutput)|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|",
      "|java+method:///org/apache/hadoop/io/VIntWritable/set(int)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/hadoop/io/VLongWritable/set(long)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///org/apache/hadoop/io/VIntWritable/VIntWritable()|",
      "|java+method:///org/apache/mahout/math/list/IntArrayList/size()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/meanshift/MeanShiftCanopyDriver/createCanopyFromVectorsSeq(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.mahout.common.distance.DistanceMeasure)|",
    "called": "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterable/iterator()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/mahout/clustering/meanshift/MeanShiftCanopy/initialCanopy(org.apache.mahout.math.Vector,int,org.apache.mahout.common.distance.DistanceMeasure)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/close()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/logsCRCFilter()|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterable/SequenceFileValueIterable(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterable/iterator()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///org/apache/mahout/clustering/meanshift/MeanShiftCanopy/initialCanopy(org.apache.mahout.math.Vector,int,org.apache.mahout.common.distance.DistanceMeasure)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/logsCRCFilter()|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterable/SequenceFileValueIterable(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/ga/watchmaker/OutputUtils/listOutputFiles(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)|",
    "called": "|java+method:///org/apache/hadoop/fs/Path/getName()|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/isDir()|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///java/util/Collection/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/getName()|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/logsCRCFilter()|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///java/util/Collection/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/isDir()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/ParallelFPGrowthMapper/ParallelFPGrowthMapper()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|",
    "v1Body": [
      "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|",
      "|java+constructor:///org/apache/mahout/math/map/OpenIntLongHashMap/OpenIntLongHashMap()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|",
      "|java+constructor:///org/apache/mahout/math/map/OpenObjectIntHashMap/OpenObjectIntHashMap()|",
      "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/runPFPGrowth(org.apache.mahout.common.Parameters)|",
    "called": "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/startParallelCounting(org.apache.mahout.common.Parameters)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/startParallelFPGrowth(org.apache.mahout.common.Parameters)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/startTransactionSorting(org.apache.mahout.common.Parameters)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/startGroupingItems(org.apache.mahout.common.Parameters)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/startAggregating(org.apache.mahout.common.Parameters)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/saveFList(java.lang.Iterable,org.apache.mahout.common.Parameters,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/common/Parameters/getInt(java.lang.String,int)|",
      "|java+method:///java/lang/Integer/toString(int)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/startParallelFPGrowth(org.apache.mahout.common.Parameters,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/readFList(org.apache.mahout.common.Parameters)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/startParallelCounting(org.apache.mahout.common.Parameters,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/common/Parameters/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/startAggregating(org.apache.mahout.common.Parameters,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/canopy/CanopyClusterer/configure(org.apache.hadoop.conf.Configuration)|",
    "called": "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///org/apache/mahout/common/distance/DistanceMeasure/configure(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///java/lang/ClassLoader/loadClass(java.lang.String)|",
      "|java+method:///java/lang/Class/asSubclass(java.lang.Class)|",
      "|java+method:///java/lang/Thread/getContextClassLoader()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/common/distance/DistanceMeasure/configure(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/common/ClassUtils/instantiateAs(java.lang.String,java.lang.Class)|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansUtil/configureWithClusterInfo(org.apache.hadoop.fs.Path,java.util.Collection)|",
    "called": "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterable/iterator()|",
      "|java+method:///org/apache/mahout/clustering/canopy/Canopy/getMeasure()|",
      "|java+method:///org/apache/mahout/clustering/kmeans/Cluster/getCenter()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path%5B%5D,org.apache.hadoop.fs.PathFilter)|",
      "|java+constructor:///org/apache/mahout/clustering/fuzzykmeans/SoftCluster/SoftCluster(org.apache.mahout.math.Vector,int,org.apache.mahout.common.distance.DistanceMeasure)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/partFilter()|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+method:///org/apache/mahout/clustering/canopy/Canopy/getCenter()|",
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/canopy/Canopy/getId()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterable/SequenceFileValueIterable(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/clustering/kmeans/Cluster/getId()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/Cluster/getMeasure()|",
      "|java+method:///org/apache/hadoop/fs/FileUtil/stat2Paths(org.apache.hadoop.fs.FileStatus%5B%5D)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/makeQualified(org.apache.hadoop.fs.Path)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterable/SequenceFileDirValueIterable(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/clustering/canopy/Canopy/getMeasure()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/apache/mahout/clustering/fuzzykmeans/SoftCluster/SoftCluster(org.apache.mahout.math.Vector,int,org.apache.mahout.common.distance.DistanceMeasure)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/partFilter()|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/Cluster/getMeasure()|",
      "|java+method:///org/apache/mahout/clustering/canopy/Canopy/getCenter()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/canopy/Canopy/getId()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterable/iterator()|",
      "|java+method:///org/apache/mahout/clustering/kmeans/Cluster/getCenter()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/clustering/kmeans/Cluster/getId()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/canopy/CanopyMapper/cleanup(org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/clustering/canopy/Canopy/computeCentroid()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper/cleanup(org.apache.hadoop.mapreduce.Mapper$Context)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/mahout/clustering/canopy/Canopy/computeParameters()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/canopy/Canopy/getNumPoints()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/mahout/clustering/canopy/Canopy/getCenter()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper/cleanup(org.apache.hadoop.mapreduce.Mapper$Context)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/kmeans/KMeansMapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansUtil/configureWithClusterInfo(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.util.Collection)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+constructor:///org/apache/mahout/clustering/kmeans/KMeansClusterer/KMeansClusterer(org.apache.mahout.common.distance.DistanceMeasure)|",
      "|java+method:///org/apache/mahout/common/distance/DistanceMeasure/configure(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/ClassLoader/loadClass(java.lang.String)|",
      "|java+method:///java/lang/Class/asSubclass(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///java/util/Collection/isEmpty()|",
      "|java+method:///java/lang/Thread/getContextClassLoader()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansUtil/configureWithClusterInfo(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.util.Collection)|",
      "|java+constructor:///org/apache/mahout/clustering/kmeans/KMeansClusterer/KMeansClusterer(org.apache.mahout.common.distance.DistanceMeasure)|",
      "|java+method:///org/apache/mahout/common/distance/DistanceMeasure/configure(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/common/ClassUtils/instantiateAs(java.lang.String,java.lang.Class)|",
      "|java+method:///java/util/Collection/isEmpty()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/ParallelFPGrowthMapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/put(java.lang.Object,int)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/get(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/mahout/common/Parameters/Parameters(java.lang.String)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/deserializeList(org.apache.mahout.common.Parameters,java.lang.String,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/map/OpenIntLongHashMap/put(int,long)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+constructor:///org/apache/mahout/math/map/OpenObjectIntHashMap/OpenObjectIntHashMap()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/deserializeMap(org.apache.mahout.common.Parameters,java.lang.String,org.apache.hadoop.conf.Configuration)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/util/regex/Pattern/compile(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/put(java.lang.Object,int)|",
      "|java+method:///org/apache/mahout/common/Parameters/getInt(java.lang.String,int)|",
      "|java+method:///java/util/regex/Pattern/toString()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/readFList(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/mahout/common/Parameters/Parameters(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/TimesSquaredJob/retrieveTimesSquaredOutputVector(org.apache.hadoop.conf.Configuration)|",
    "called": "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(org.apache.hadoop.conf.Configuration)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapred/FileOutputFormat/getOutputPath(org.apache.hadoop.mapred.JobConf)|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/next()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/SequenceFileValueIterator(org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/close()|",
      "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(org.apache.hadoop.conf.Configuration)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/mapred/FileOutputFormat/getOutputPath(org.apache.hadoop.mapred.JobConf)|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/next()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/SequenceFileValueIterator(org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/iterateAll()|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///com/google/common/collect/Iterators/transform(java.util.Iterator,com.google.common.base.Function)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirIterator/SequenceFileDirIterator(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,java.util.Comparator,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix$1/DistributedRowMatrix$1(org.apache.mahout.math.hadoop.DistributedRowMatrix)|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///com/google/common/collect/Iterators/transform(java.util.Iterator,com.google.common.base.Function)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/logsCRCFilter()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirIterator/SequenceFileDirIterator(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,java.util.Comparator,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix$1/DistributedRowMatrix$1(org.apache.mahout.math.hadoop.DistributedRowMatrix)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/run(java.lang.String%5B%5D)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/handleArgs(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/runJob(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,boolean,double,double,int)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/getConf()|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/getOutputPath()|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/handleArgs(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/getConf()|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/getOutputPath()|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/runJob(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,boolean,double,int)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/saveCleanEigens(org.apache.hadoop.conf.Configuration,java.util.Collection)|",
    "called": "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/decomposer/EigenStatus/getEigenValue()|",
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/decomposer/EigenVector/EigenVector(org.apache.mahout.math.Vector,double,double,int)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/mahout/math/MatrixSlice/vector()|",
      "|java+method:///org/apache/mahout/math/decomposer/EigenStatus/getCosAngle()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/math/MatrixSlice/index()|",
      "|java+method:///java/lang/Math/abs(double)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/close()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/io/IntWritable/set(int)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/decomposer/EigenStatus/getEigenValue()|",
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/decomposer/EigenVector/EigenVector(org.apache.mahout.math.Vector,double,double,int)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/mahout/math/MatrixSlice/vector()|",
      "|java+method:///org/apache/mahout/math/decomposer/EigenStatus/getCosAngle()|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/math/MatrixSlice/index()|",
      "|java+method:///java/lang/Math/abs(double)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/io/IntWritable/set(int)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/lda/LDADriver/writeState(org.apache.hadoop.conf.Configuration,org.apache.mahout.clustering.lda.LDAState,org.apache.hadoop.fs.Path)|",
    "called": "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/mahout/common/IntPairWritable/IntPairWritable(int,int)|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAState/getNumTopics()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAState/getLogLikelihood()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable()|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAState/getLogTotal(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/io/DoubleWritable/set(double)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/close()|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAState/getNumWords()|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAState/logProbWordGivenTopic(int,int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/mahout/common/IntPairWritable/IntPairWritable(int,int)|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAState/getNumTopics()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAState/getLogLikelihood()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable()|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAState/getLogTotal(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/io/DoubleWritable/set(double)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAState/getNumWords()|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAState/logProbWordGivenTopic(int,int)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/spectral/eigencuts/EigencutsSensitivityMapper/map(org.apache.hadoop.io.IntWritable,org.apache.mahout.math.VectorWritable,org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable(int)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/function/DoubleFunction/apply(double)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Math/abs(double)|",
      "|java+method:///org/apache/mahout/math/Vector/get(int)|",
      "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable(int)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///java/util/Map/values()|",
      "|java+constructor:///org/apache/mahout/clustering/spectral/eigencuts/EigencutsSensitivityNode/EigencutsSensitivityNode(int,int,double)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/mahout/clustering/spectral/eigencuts/EigencutsSensitivityMapper/performSensitivityCalculation(double,double,double,double,double)|",
      "|java+method:///java/util/Map/remove(java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/Vector/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///org/apache/mahout/clustering/spectral/eigencuts/EigencutsSensitivityNode/getRow()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/mahout/clustering/spectral/eigencuts/EigencutsSensitivityNode/getSensitivity()|",
      "|java+method:///org/apache/hadoop/io/IntWritable/get()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/function/DoubleFunction/apply(double)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Math/abs(double)|",
      "|java+method:///org/apache/mahout/math/Vector/get(int)|",
      "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable(int)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/apache/mahout/clustering/spectral/eigencuts/EigencutsSensitivityNode/EigencutsSensitivityNode(int,int,double)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/mahout/clustering/spectral/eigencuts/EigencutsSensitivityMapper/performSensitivityCalculation(double,double,double,double,double)|",
      "|java+method:///java/util/Map/remove(java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/Vector/size()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///org/apache/mahout/clustering/spectral/eigencuts/EigencutsSensitivityNode/getRow()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/mahout/clustering/spectral/eigencuts/EigencutsSensitivityNode/getSensitivity()|",
      "|java+method:///org/apache/hadoop/io/IntWritable/get()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/bayes/BayesThetaNormalizerMapper/configure(org.apache.hadoop.mapred.JobConf)|",
    "called": "|java+method:///org/apache/hadoop/io/DefaultStringifier/fromString(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/util/GenericsUtil/getClass(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/DefaultStringifier/fromString(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/DefaultStringifier/DefaultStringifier(org.apache.hadoop.conf.Configuration,java.lang.Class)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectDoubleHashMap/put(java.lang.Object,double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectDoubleHashMap/clear()|",
      "|java+method:///java/lang/Double/valueOf(java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/get(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/io/DefaultStringifier/toString(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/common/Parameters/Parameters(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/io/IOException/toString()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/lang/Double/doubleValue()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/io/DefaultStringifier/fromString(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/DefaultStringifier/DefaultStringifier(org.apache.hadoop.conf.Configuration,java.lang.Class)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectDoubleHashMap/put(java.lang.Object,double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectDoubleHashMap/clear()|",
      "|java+method:///java/lang/Double/valueOf(java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/get(java.lang.String,java.lang.String)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///org/apache/hadoop/util/GenericsUtil/getClass(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/io/DefaultStringifier/toString(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/common/Parameters/Parameters(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/io/IOException/toString()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Double/doubleValue()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/FPGrowthDriver/runFPGrowth(org.apache.mahout.common.Parameters)|",
    "called": "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPGrowth/readFrequentPattern(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/mahout/common/iterator/FileLineIterable/FileLineIterable(java.io.File,java.nio.charset.Charset,boolean)|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPGrowth/FPGrowth()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/convertors/SequenceFileOutputCollector/SequenceFileOutputCollector(org.apache.hadoop.io.SequenceFile$Writer)|",
      "|java+constructor:///org/apache/mahout/common/iterator/StringRecordIterator/StringRecordIterator(java.lang.Iterable,java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPGrowth/generateFList(java.util.Iterator,int)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/convertors/string/StringOutputConverter/StringOutputConverter(org.apache.hadoop.mapred.OutputCollector)|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/convertors/ContextStatusUpdater/ContextStatusUpdater(org.apache.hadoop.mapreduce.Reducer$Context)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPGrowth/generateTopKFrequentPatterns(java.util.Iterator,java.util.Collection,long,int,java.util.Collection,org.apache.hadoop.mapred.OutputCollector,org.apache.mahout.fpm.pfpgrowth.convertors.StatusUpdater)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/close()|",
      "|java+method:///java/util/regex/Pattern/toString()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/nio/charset/Charset/forName(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPGrowth/readFrequentPattern(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPGrowth/FPGrowth()|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth2/FPGrowthObj/generateTopKFrequentPatterns(java.util.Iterator,java.util.Collection,long,int,java.util.Collection,org.apache.hadoop.mapred.OutputCollector,org.apache.mahout.fpm.pfpgrowth.convertors.StatusUpdater)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/common/iterator/StringRecordIterator/StringRecordIterator(java.lang.Iterable,java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/fpgrowth2/FPGrowthObj/FPGrowthObj()|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPGrowth/generateFList(java.util.Iterator,int)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/convertors/string/StringOutputConverter/StringOutputConverter(org.apache.hadoop.mapred.OutputCollector)|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/convertors/ContextStatusUpdater/ContextStatusUpdater(org.apache.hadoop.mapreduce.Reducer$Context)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth/FPGrowth/generateTopKFrequentPatterns(java.util.Iterator,java.util.Collection,long,int,java.util.Collection,org.apache.hadoop.mapred.OutputCollector,org.apache.mahout.fpm.pfpgrowth.convertors.StatusUpdater)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/fpgrowth2/FPGrowthObj/generateFList(java.util.Iterator,int)|",
      "|java+constructor:///org/apache/mahout/common/iterator/FileLineIterable/FileLineIterable(java.io.File,java.nio.charset.Charset,boolean)|",
      "|java+method:///java/util/regex/Pattern/toString()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/convertors/SequenceFileOutputCollector/SequenceFileOutputCollector(org.apache.hadoop.io.SequenceFile$Writer)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/nio/charset/Charset/forName(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/vectorizer/tfidf/TFIDFConverter/createDictionaryChunks(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration,int)|",
    "called": "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirIterable/SequenceFileDirIterable(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,java.util.Comparator,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirIterable/iterator()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/Math/max(long,long)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/IntWritable/get()|",
      "|java+constructor:///org/apache/mahout/common/Pair/Pair(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/close()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/io/LongWritable/get()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirIterable/iterator()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/Math/max(long,long)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/IntWritable/get()|",
      "|java+constructor:///org/apache/mahout/common/Pair/Pair(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirIterable/SequenceFileDirIterable(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,java.util.Comparator,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/io/LongWritable/get()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/driver/MahoutDriver/main(java.lang.String%5B%5D)|",
    "called": "|java+constructor:///org/apache/hadoop/util/ProgramDriver/ProgramDriver()|",
    "v1Body": [
      "|java+method:///java/util/Properties/stringPropertyNames()|",
      "|java+method:///org/apache/mahout/driver/MahoutDriver/addClass(org.apache.hadoop.util.ProgramDriver,java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///org/apache/hadoop/util/ProgramDriver/ProgramDriver()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/mahout/driver/MahoutDriver/shift(java.lang.String%5B%5D)|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///java/util/Properties/Properties()|",
      "|java+method:///org/apache/mahout/driver/MahoutDriver/loadProperties(java.lang.String)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(char)|",
      "|java+method:///org/apache/hadoop/util/ProgramDriver/driver(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/mahout/driver/MahoutDriver/shortName(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/List/add(int,java.lang.Object)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/slf4j/Logger/isInfoEnabled()|",
      "|java+method:///java/util/Properties/keySet()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Properties/stringPropertyNames()|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///org/apache/mahout/driver/MahoutDriver/addClass(org.apache.hadoop.util.ProgramDriver,java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/apache/hadoop/util/ProgramDriver/ProgramDriver()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/mahout/driver/MahoutDriver/shift(java.lang.String%5B%5D)|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///java/util/Properties/Properties()|",
      "|java+method:///org/apache/mahout/driver/MahoutDriver/loadProperties(java.lang.String)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(char)|",
      "|java+method:///org/apache/hadoop/util/ProgramDriver/driver(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/mahout/driver/MahoutDriver/shortName(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/List/add(int,java.lang.Object)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/slf4j/Logger/isInfoEnabled()|",
      "|java+method:///java/util/Properties/keySet()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterable/iterator()|",
    "called": "|java+method:///org/apache/hadoop/fs/Path/toString()|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/SequenceFileValueIterator(org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/SequenceFileValueIterator(org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+constructor:///org/apache/mahout/clustering/canopy/CanopyReducer/CanopyReducer()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver/buildClustersMR(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.mahout.common.distance.DistanceMeasure,double,int,float)|",
    "called": "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver/runIteration(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.lang.String,double,float)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver/runIteration(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.lang.String,double,float)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/rename(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/cf/taste/hadoop/pseudo/UserIDsMapper/map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+method:///org/apache/hadoop/io/Text/toString()|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/VarLongWritable/VarLongWritable(long)|",
      "|java+method:///java/lang/String/indexOf(int)|",
      "|java+method:///org/apache/hadoop/io/NullWritable/get()|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+method:///java/lang/String/substring(int,int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/regex/Pattern/split(java.lang.CharSequence)|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+constructor:///org/apache/mahout/math/VarLongWritable/VarLongWritable(long)|",
      "|java+method:///org/apache/hadoop/io/NullWritable/get()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/classifier/bayes/TrainClassifier/main(java.lang.String%5B%5D)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/common/BayesParameters/BayesParameters()|",
      "|java+method:///org/apache/mahout/classifier/bayes/common/BayesParameters/setGramSize(int)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelp(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/helpOption()|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withLongName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/create()|",
      "|java+constructor:///org/apache/commons/cli2/builder/ArgumentBuilder/ArgumentBuilder()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
      "|java+method:///org/apache/mahout/classifier/bayes/common/BayesParameters/setMinDF(int)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMaximum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withRequired(boolean)|",
      "|java+method:///org/apache/mahout/classifier/bayes/common/BayesParameters/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/classifier/bayes/common/BayesParameters/setMinSupport(int)|",
      "|java+method:///org/apache/mahout/classifier/bayes/TrainClassifier/trainNaiveBayes(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.mahout.classifier.bayes.common.BayesParameters)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/mahout/classifier/bayes/common/BayesParameters/setSkipCleanup(boolean)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMinimum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withArgument(org.apache.commons.cli2.Argument)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setHelpOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+constructor:///org/apache/commons/cli2/builder/DefaultOptionBuilder/DefaultOptionBuilder()|",
      "|java+method:///org/apache/mahout/classifier/bayes/TrainClassifier/trainCNaiveBayes(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.mahout.classifier.bayes.common.BayesParameters)|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/mahout/classifier/bayes/BayesParameters/setSkipCleanup(boolean)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelp(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/create()|",
      "|java+constructor:///org/apache/commons/cli2/builder/ArgumentBuilder/ArgumentBuilder()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/BayesParameters/BayesParameters()|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMaximum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withRequired(boolean)|",
      "|java+method:///org/apache/mahout/classifier/bayes/TrainClassifier/trainCNaiveBayes(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.mahout.classifier.bayes.BayesParameters)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///org/apache/mahout/classifier/bayes/BayesParameters/setMinSupport(int)|",
      "|java+method:///org/apache/mahout/classifier/bayes/BayesParameters/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/helpOption()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/outputOption()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/mahout/classifier/bayes/BayesParameters/setGramSize(int)|",
      "|java+method:///org/apache/mahout/classifier/bayes/BayesParameters/setMinDF(int)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/inputOption()|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMinimum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withArgument(org.apache.commons.cli2.Argument)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withLongName(java.lang.String)|",
      "|java+method:///org/apache/mahout/classifier/bayes/TrainClassifier/trainNaiveBayes(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.mahout.classifier.bayes.BayesParameters)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setHelpOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+constructor:///org/apache/commons/cli2/builder/DefaultOptionBuilder/DefaultOptionBuilder()|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/kmeans/KMeansClusterer/outputPointWithClusterInfo(org.apache.mahout.math.Vector,java.lang.Iterable,org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/Vector/getLengthSquared()|",
      "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable(int)|",
      "|java+method:///org/apache/mahout/clustering/AbstractCluster/getId()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+constructor:///org/apache/mahout/clustering/WeightedVectorWritable/WeightedVectorWritable(double,org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/common/distance/DistanceMeasure/distance(double,org.apache.mahout.math.Vector,org.apache.mahout.math.Vector)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/clustering/AbstractCluster/getCenter()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/String/valueOf(double)|",
      "|java+constructor:///org/apache/mahout/clustering/WeightedPropertyVectorWritable/WeightedPropertyVectorWritable(double,org.apache.mahout.math.Vector,java.util.Map)|",
      "|java+method:///org/apache/mahout/math/Vector/getLengthSquared()|",
      "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable(int)|",
      "|java+method:///org/apache/mahout/clustering/AbstractCluster/getId()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/distance/DistanceMeasure/distance(double,org.apache.mahout.math.Vector,org.apache.mahout.math.Vector)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/clustering/AbstractCluster/getCenter()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+constructor:///org/apache/mahout/clustering/kmeans/KMeansMapper/KMeansMapper()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+constructor:///org/apache/mahout/clustering/canopy/CanopyMapper/CanopyMapper()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileIterable/iterator()|",
    "called": "|java+method:///org/apache/hadoop/fs/Path/toString()|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileIterator/SequenceFileIterator(org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileIterator/SequenceFileIterator(org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/cf/taste/hadoop/similarity/item/ItemSimilarityJob/run(java.lang.String%5B%5D)|",
    "called": "|java+method:///org/apache/hadoop/mapreduce/Job/waitForCompletion(boolean)|",
    "v1Body": [
      "|java+method:///java/lang/Boolean/toString()|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+constructor:///org/apache/mahout/math/hadoop/similarity/RowSimilarityJob/RowSimilarityJob()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/getConfiguration()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setCombinerClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/similarity/item/ItemSimilarityJob/parseArguments(java.lang.String%5B%5D)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/similarity/item/ItemSimilarityJob/addInputOption()|",
      "|java+method:///java/lang/StringBuilder/append(char)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setGroupingComparatorClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/similarity/item/ItemSimilarityJob/getConf()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/similarity/item/ItemSimilarityJob/getOutputPath()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/waitForCompletion(boolean)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/similarity/item/ItemSimilarityJob/addOption(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/similarity/item/ItemSimilarityJob/shouldRunNextPhase(java.util.Map,java.util.concurrent.atomic.AtomicInteger)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicInteger/AtomicInteger()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/similarity/item/ItemSimilarityJob/getInputPath()|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/similarity/item/ItemSimilarityJob/addOption(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/setBoolean(java.lang.String,boolean)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/setInt(java.lang.String,int)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/similarity/item/ItemSimilarityJob/addOutputOption()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setPartitionerClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/math/hadoop/similarity/SimilarityType/listEnumNames()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/hadoop/util/ToolRunner/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.util.Tool,java.lang.String%5B%5D)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/TasteHadoopUtils/readIntFromFile(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/String/valueOf(int)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/similarity/item/ItemSimilarityJob/prepareJob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///java/lang/String/valueOf(boolean)|",
      "|java+method:///java/lang/String/valueOf(double)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/similarity/item/ItemSimilarityJob/getTempPath(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/similarity/cooccurrence/RowSimilarityJob/RowSimilarityJob()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/getConfiguration()|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/setInt(java.lang.String,int)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/similarity/item/ItemSimilarityJob/parseArguments(java.lang.String%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(char)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/similarity/item/ItemSimilarityJob/getConf()|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/similarity/item/ItemSimilarityJob/getOutputPath()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/waitForCompletion(boolean)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/similarity/item/ItemSimilarityJob/addOption(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/valueOf(java.lang.Object)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/similarity/item/ItemSimilarityJob/shouldRunNextPhase(java.util.Map,java.util.concurrent.atomic.AtomicInteger)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicInteger/AtomicInteger()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/similarity/item/ItemSimilarityJob/getTempPath()|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/similarity/item/ItemSimilarityJob/getInputPath()|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/similarity/item/ItemSimilarityJob/addOption(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/similarity/item/ItemSimilarityJob/addOption(java.lang.String,java.lang.String,java.lang.String,boolean)|",
      "|java+constructor:///org/apache/mahout/cf/taste/hadoop/preparation/PreparePreferenceMatrixJob/PreparePreferenceMatrixJob()|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/similarity/item/ItemSimilarityJob/addInputOption()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/similarity/item/ItemSimilarityJob/addOutputOption()|",
      "|java+method:///org/apache/mahout/math/hadoop/similarity/cooccurrence/measures/VectorSimilarityMeasures/list()|",
      "|java+method:///org/apache/mahout/common/HadoopUtil/readInt(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/util/ToolRunner/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.util.Tool,java.lang.String%5B%5D)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/String/valueOf(int)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/similarity/item/ItemSimilarityJob/prepareJob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/kmeans/KMeansDriver/isConverged(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FileSystem)|",
    "called": "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/close()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/next()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/partFilter()|",
      "|java+method:///org/apache/mahout/clustering/kmeans/Cluster/isConverged()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/hasNext()|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/SequenceFileValueIterator(org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/next()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/partFilter()|",
      "|java+method:///org/apache/mahout/clustering/kmeans/Cluster/isConverged()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/hasNext()|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/SequenceFileValueIterator(org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirIterator$1/apply(org.apache.hadoop.fs.FileStatus)|",
    "called": "|java+method:///org/apache/hadoop/fs/Path/toString()|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileIterator/SequenceFileIterator(org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirIterator/access$000(org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterator)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileIterator/SequenceFileIterator(org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirIterable/iterator()|",
    "called": "|java+method:///org/apache/hadoop/fs/Path/toString()|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirIterator/SequenceFileDirIterator(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,java.util.Comparator,boolean,org.apache.hadoop.conf.Configuration)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirIterator/SequenceFileDirIterator(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,java.util.Comparator,boolean,org.apache.hadoop.conf.Configuration)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/TimesSquaredJob/createTimesSquaredJobConf(org.apache.hadoop.conf.Configuration,org.apache.mahout.math.Vector,int,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
    "called": "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(org.apache.hadoop.conf.Configuration,java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapred/JobConf/setOutputKeyClass(java.lang.Class)|",
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setOutputFormat(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///java/net/URI/toString()|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setCombinerClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setMapOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setInputFormat(java.lang.Class)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(org.apache.hadoop.conf.Configuration,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/FileInputFormat/addInputPath(org.apache.hadoop.mapred.JobConf,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setMapOutputKeyClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/close()|",
      "|java+method:///org/apache/mahout/math/Vector/isDense()|",
      "|java+method:///org/apache/hadoop/mapred/FileOutputFormat/setOutputPath(org.apache.hadoop.mapred.JobConf,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setReducerClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/filecache/DistributedCache/setCacheFiles(java.net.URI%5B%5D,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setJobName(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setBoolean(java.lang.String,boolean)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setInt(java.lang.String,int)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setMapperClass(java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/makeQualified(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/io/NullWritable/get()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/mapred/JobConf/setOutputKeyClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setOutputFormat(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///java/net/URI/toString()|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setCombinerClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setMapOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setInputFormat(java.lang.Class)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(org.apache.hadoop.conf.Configuration,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/FileInputFormat/addInputPath(org.apache.hadoop.mapred.JobConf,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setMapOutputKeyClass(java.lang.Class)|",
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|",
      "|java+method:///com/google/common/io/Closeables/close(java.io.Closeable,boolean)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/mahout/math/Vector/isDense()|",
      "|java+method:///org/apache/hadoop/mapred/FileOutputFormat/setOutputPath(org.apache.hadoop.mapred.JobConf,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setReducerClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/filecache/DistributedCache/setCacheFiles(java.net.URI%5B%5D,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setJobName(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setBoolean(java.lang.String,boolean)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setInt(java.lang.String,int)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setMapperClass(java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/makeQualified(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/io/NullWritable/get()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/kmeans/KMeansDriver/buildClustersSeq(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.mahout.common.distance.DistanceMeasure,int,java.lang.String)|",
    "called": "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/fs/Path/getName()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/Cluster/getRadius()|",
      "|java+method:///java/util/Collection/isEmpty()|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/mahout/clustering/kmeans/Cluster/getIdentifier()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansClusterer/testConvergence(java.lang.Iterable,double)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansUtil/configureWithClusterInfo(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.util.Collection)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/clustering/kmeans/Cluster/getNumPoints()|",
      "|java+constructor:///org/apache/mahout/clustering/kmeans/KMeansClusterer/KMeansClusterer(org.apache.mahout.common.distance.DistanceMeasure)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/logsCRCFilter()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/close()|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansClusterer/addPointToNearestCluster(org.apache.mahout.math.Vector,java.lang.Iterable)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterable/SequenceFileDirValueIterable(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/mahout/clustering/AbstractCluster/formatVector(org.apache.mahout.math.Vector,java.lang.String%5B%5D)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterable/iterator()|",
      "|java+method:///org/apache/mahout/clustering/kmeans/Cluster/getCenter()|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/clustering/kmeans/Cluster/getId()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/getName()|",
      "|java+method:///org/apache/mahout/clustering/kmeans/Cluster/getIdentifier()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/Cluster/getRadius()|",
      "|java+method:///org/apache/mahout/clustering/AbstractCluster/formatVector(org.apache.mahout.math.Vector,java.lang.String%5B%5D)|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/slf4j/Logger/isDebugEnabled()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/rename(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansClusterer/testConvergence(java.lang.Iterable,double)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansUtil/configureWithClusterInfo(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.util.Collection)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/clustering/kmeans/Cluster/getNumPoints()|",
      "|java+constructor:///org/apache/mahout/clustering/kmeans/KMeansClusterer/KMeansClusterer(org.apache.mahout.common.distance.DistanceMeasure)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansClusterer/addPointToNearestCluster(org.apache.mahout.math.Vector,java.lang.Iterable)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/logsCRCFilter()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterable/SequenceFileDirValueIterable(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Collection/isEmpty()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterable/iterator()|",
      "|java+method:///org/apache/mahout/clustering/kmeans/Cluster/getCenter()|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/clustering/kmeans/Cluster/getId()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/spectral/eigencuts/EigencutsDriver/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int,double,double,double)|",
    "called": "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration(org.apache.hadoop.conf.Configuration)|",
    "v1Body": [
      "|java+constructor:///org/apache/mahout/math/decomposer/lanczos/LanczosState/LanczosState(org.apache.mahout.math.VectorIterable,int,int,org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/decomposer/lanczos/LanczosState/getSingularValue(int)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/clustering/spectral/common/MatrixDiagonalizeJob/runJob(org.apache.hadoop.fs.Path,int)|",
      "|java+method:///org/apache/mahout/clustering/spectral/eigencuts/EigencutsDriver/median(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/clustering/spectral/eigencuts/EigencutsSensitivityJob/runJob(org.apache.mahout.math.Vector,org.apache.mahout.math.Vector,org.apache.hadoop.fs.Path,double,double,double,double,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/getRowPath()|",
      "|java+method:///java/util/List/set(int,java.lang.Object)|",
      "|java+method:///org/apache/mahout/clustering/spectral/common/VectorMatrixMultiplicationJob/runJob(org.apache.hadoop.fs.Path,org.apache.mahout.math.Vector,org.apache.hadoop.fs.Path)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/DistributedLanczosSolver()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/clustering/spectral/common/AffinityMatrixInputJob/runJob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int)|",
      "|java+method:///java/lang/Long/toString(long)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/clustering/spectral/eigencuts/EigencutsDriver/performEigenDecomposition(org.apache.hadoop.conf.Configuration,org.apache.mahout.math.hadoop.DistributedRowMatrix,org.apache.mahout.math.decomposer.lanczos.LanczosState,int,int,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/clustering/spectral/eigencuts/EigencutsDriver/listToVector(java.util.Collection)|",
      "|java+method:///org/apache/mahout/clustering/spectral/eigencuts/EigencutsAffinityCutsJob/runjob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/getInitialVector(org.apache.mahout.math.VectorIterable)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/clustering/spectral/common/VectorMatrixMultiplicationJob/runJob(org.apache.hadoop.fs.Path,org.apache.mahout.math.Vector,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/math/decomposer/lanczos/LanczosState/getSingularValue(int)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/clustering/spectral/common/MatrixDiagonalizeJob/runJob(org.apache.hadoop.fs.Path,int)|",
      "|java+method:///org/apache/mahout/clustering/spectral/eigencuts/EigencutsDriver/median(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/clustering/spectral/eigencuts/EigencutsSensitivityJob/runJob(org.apache.mahout.math.Vector,org.apache.mahout.math.Vector,org.apache.hadoop.fs.Path,double,double,double,double,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/getRowPath()|",
      "|java+method:///java/util/List/set(int,java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/math/decomposer/lanczos/LanczosState/LanczosState(org.apache.mahout.math.VectorIterable,int,org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/DistributedLanczosSolver()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/clustering/spectral/common/AffinityMatrixInputJob/runJob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int)|",
      "|java+method:///java/lang/Long/toString(long)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/apache/mahout/clustering/spectral/eigencuts/EigencutsDriver/performEigenDecomposition(org.apache.hadoop.conf.Configuration,org.apache.mahout.math.hadoop.DistributedRowMatrix,org.apache.mahout.math.decomposer.lanczos.LanczosState,int,int,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/clustering/spectral/eigencuts/EigencutsDriver/listToVector(java.util.Collection)|",
      "|java+method:///org/apache/mahout/clustering/spectral/eigencuts/EigencutsAffinityCutsJob/runjob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/getInitialVector(org.apache.mahout.math.VectorIterable)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/loadDistributedRowMatrix(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
    "called": "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Arrays/sort(java.lang.Object%5B%5D,java.util.Comparator)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterable/SequenceFileValueIterable(org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/math/Vector/size()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterable/iterator()|",
      "|java+method:///org/apache/mahout/math/Vector/get(int)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Arrays/sort(java.lang.Object%5B%5D,java.util.Comparator)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/math/Vector/size()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterable/iterator()|",
      "|java+method:///org/apache/mahout/math/Vector/get(int)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterable/SequenceFileValueIterable(org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/meanshift/MeanShiftCanopyClusterMapper/getCanopies(org.apache.hadoop.conf.Configuration)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/logsCRCFilter()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterable/SequenceFileDirValueIterable(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterable/iterator()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/logsCRCFilter()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterable/SequenceFileDirValueIterable(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterable/iterator()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/TransposeJob/run(java.lang.String%5B%5D)|",
    "called": "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration(org.apache.hadoop.conf.Configuration)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/hadoop/TransposeJob/parseArguments(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/mahout/math/hadoop/TransposeJob/addOption(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/math/hadoop/TransposeJob/addInputOption()|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/TransposeJob/getConf()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/transpose()|",
      "|java+method:///org/apache/mahout/math/hadoop/TransposeJob/getInputPath()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/hadoop/TransposeJob/getTempPath()|",
      "|java+method:///org/apache/mahout/math/hadoop/TransposeJob/parseArguments(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/mahout/math/hadoop/TransposeJob/addOption(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/math/hadoop/TransposeJob/addInputOption()|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/TransposeJob/getConf()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/transpose()|",
      "|java+method:///org/apache/mahout/math/hadoop/TransposeJob/getInputPath()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/dirichlet/DirichletDriver/writeState(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,org.apache.mahout.clustering.dirichlet.DirichletState)|",
    "called": "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///java/lang/Integer/toString(int)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/clustering/dirichlet/DirichletState/getClusters()|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/close()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/clustering/dirichlet/DirichletState/getClusters()|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///java/lang/Integer/toString(int)|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/meanshift/MeanShiftCanopyCreatorMapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///java/util/regex/Pattern/split(java.lang.CharSequence)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///java/lang/ClassLoader/loadClass(java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/lang/Class/asSubclass(java.lang.Class)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///java/lang/Thread/getContextClassLoader()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/util/regex/Pattern/split(java.lang.CharSequence)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/mahout/common/ClassUtils/instantiateAs(java.lang.String,java.lang.Class)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/BtJob$OuterProductReducer/BtJob$OuterProductReducer()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|",
    "v1Body": [
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|",
      "|java+constructor:///java/util/ArrayDeque/ArrayDeque()|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/SparseRowBlockWritable/SparseRowBlockWritable()|",
      "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/run(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int,boolean,int)|",
    "called": "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration(org.apache.hadoop.conf.Configuration)|",
    "v1Body": [
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/getConf()|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/serializeOutput(org.apache.mahout.math.decomposer.lanczos.LanczosState,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/solve(org.apache.mahout.math.decomposer.lanczos.LanczosState,int,boolean)|",
      "|java+constructor:///org/apache/mahout/math/decomposer/lanczos/LanczosState/LanczosState(org.apache.mahout.math.VectorIterable,int,int,org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/decomposer/HdfsBackedLanczosState/HdfsBackedLanczosState(org.apache.mahout.math.VectorIterable,int,int,org.apache.mahout.math.Vector,org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/HdfsBackedLanczosState/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/getInitialVector(org.apache.mahout.math.VectorIterable)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/getConf()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/solve(org.apache.mahout.math.decomposer.lanczos.LanczosState,int,boolean)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/decomposer/HdfsBackedLanczosState/HdfsBackedLanczosState(org.apache.mahout.math.VectorIterable,int,org.apache.mahout.math.Vector,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/getConf()|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/serializeOutput(org.apache.mahout.math.decomposer.lanczos.LanczosState,org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/mahout/math/decomposer/lanczos/LanczosState/LanczosState(org.apache.mahout.math.VectorIterable,int,org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/HdfsBackedLanczosState/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/getInitialVector(org.apache.mahout.math.VectorIterable)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/getConf()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/run()|",
    "called": "|java+method:///org/apache/hadoop/fs/Path/toString()|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/UpperTriangular/columnSize()|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///org/apache/mahout/common/IOUtils/close(java.util.Collection)|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/loadUpperTriangularMatrix(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///org/apache/mahout/math/ssvd/EigenSolverWrapper/getEigenValues()|",
      "|java+method:///java/util/Random/nextLong()|",
      "|java+method:///java/util/Deque/remove(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/VectorWritable/set(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/sniffInputLabelType(org.apache.hadoop.fs.Path%5B%5D,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/ssvd/EigenSolverWrapper/EigenSolverWrapper(double%5B%5D%5B%5D)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/Deque/addFirst(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/BBtJob/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/close()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/BtJob/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int,int,int,java.lang.Class)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/VJob/start(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int,boolean)|",
      "|java+method:///org/apache/hadoop/io/IntWritable/set(int)|",
      "|java+method:///org/apache/mahout/math/ssvd/EigenSolverWrapper/getUHat()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/UpperTriangular/getQuick(int,int)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/UJob/start(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int,java.lang.Class,boolean)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/VJob/VJob()|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/UJob/UJob()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile/createWriter(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,org.apache.hadoop.io.SequenceFile$CompressionType)|",
      "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/QJob/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D,org.apache.hadoop.fs.Path,int,int,int,int,long,int)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/VJob/waitForCompletion()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/UJob/waitForCompletion()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/delete(org.apache.hadoop.fs.Path,boolean)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///java/lang/Math/sqrt(double)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.Throwable)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/mkdirs(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(double%5B%5D,boolean)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/UpperTriangular/columnSize()|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/ABtDenseOutJob/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int,int,int,int,int,boolean)|",
      "|java+method:///org/apache/mahout/common/IOUtils/close(java.util.Collection)|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/loadAndSumUpperTriangularMatrices(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/BtJob/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int,int,int,int,boolean,java.lang.Class,boolean)|",
      "|java+method:///org/apache/mahout/math/ssvd/EigenSolverWrapper/getEigenValues()|",
      "|java+method:///java/util/Random/nextLong()|",
      "|java+method:///java/util/Deque/remove(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/VectorWritable/set(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/sniffInputLabelType(org.apache.hadoop.fs.Path%5B%5D,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/ssvd/EigenSolverWrapper/EigenSolverWrapper(double%5B%5D%5B%5D)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/Deque/addFirst(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/VJob/start(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int,boolean)|",
      "|java+method:///org/apache/hadoop/io/IntWritable/set(int)|",
      "|java+method:///org/apache/mahout/math/ssvd/EigenSolverWrapper/getUHat()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/UpperTriangular/getQuick(int,int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/google/common/collect/Lists/newLinkedList()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/UJob/start(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int,java.lang.Class,boolean)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/VJob/VJob()|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/UJob/UJob()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile/createWriter(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,org.apache.hadoop.io.SequenceFile$CompressionType)|",
      "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/QJob/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D,org.apache.hadoop.fs.Path,int,int,int,int,long,int)|",
      "|java+method:///java/lang/Math/min(int,int)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/VJob/waitForCompletion()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/UJob/waitForCompletion()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/delete(org.apache.hadoop.fs.Path,boolean)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///java/lang/Math/sqrt(double)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.Throwable)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/mkdirs(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(double%5B%5D,boolean)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/meanshift/MeanShiftCanopyMapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/apache/mahout/clustering/meanshift/MeanShiftCanopyClusterer/MeanShiftCanopyClusterer(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/mahout/clustering/meanshift/MeanShiftCanopyClusterer/MeanShiftCanopyClusterer(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+constructor:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansClusterMapper/FuzzyKMeansClusterMapper()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/decomposer/HdfsBackedLanczosState/persistVector(org.apache.hadoop.fs.Path,int,org.apache.mahout.math.Vector)|",
    "called": "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable(int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/delete(org.apache.hadoop.fs.Path,boolean)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/close()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable(int)|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/delete(org.apache.hadoop.fs.Path,boolean)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/lda/LDADriver/computeDocumentTopicProbabilitiesSequential(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
    "called": "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|",
      "|java+method:///org/apache/mahout/clustering/lda/LDADriver/peekAtSequenceFileForKeyType(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAInference/infer(org.apache.mahout.math.Vector)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/util/ReflectionUtils/newInstance(java.lang.Class,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/close()|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|",
      "|java+method:///org/apache/mahout/clustering/lda/LDADriver/peekAtSequenceFileForKeyType(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAInference/infer(org.apache.mahout.math.Vector)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/util/ReflectionUtils/newInstance(java.lang.Class,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+constructor:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansReducer/FuzzyKMeansReducer()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|",
    "v1Body": [
      "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|",
      "|java+constructor:///java/util/HashMap/HashMap()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Reducer/Reducer()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/vectorizer/collocations/llr/CollocDriver/run(java.lang.String%5B%5D)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/vectorizer/collocations/llr/CollocDriver/generateCollocations(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration,boolean,int,int,int)|",
      "|java+method:///org/apache/mahout/vectorizer/collocations/llr/CollocDriver/addInputOption()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///org/apache/mahout/vectorizer/collocations/llr/CollocDriver/addOutputOption()|",
      "|java+method:///org/apache/mahout/vectorizer/DocumentProcessor/tokenizeDocuments(org.apache.hadoop.fs.Path,java.lang.Class,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/vectorizer/collocations/llr/CollocDriver/getInputPath()|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///org/apache/mahout/vectorizer/collocations/llr/CollocDriver/parseArguments(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/mahout/common/HadoopUtil/delete(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+method:///java/lang/Float/parseFloat(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/mahout/vectorizer/collocations/llr/CollocDriver/getConf()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/Float/valueOf(float)|",
      "|java+method:///org/apache/mahout/vectorizer/collocations/llr/CollocDriver/getOutputPath()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///java/lang/String/valueOf(float)|",
      "|java+method:///org/apache/mahout/vectorizer/collocations/llr/CollocDriver/addOption(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/vectorizer/collocations/llr/CollocDriver/addOption(org.apache.commons.cli2.Option)|",
      "|java+method:///java/lang/Class/asSubclass(java.lang.Class)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/overwriteOption()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/numReducersOption()|",
      "|java+method:///org/apache/mahout/vectorizer/collocations/llr/CollocDriver/addFlag(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/String/valueOf(int)|",
      "|java+method:///org/apache/mahout/vectorizer/collocations/llr/CollocDriver/computeNGramsPruneByLLR(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration,long,boolean,float,int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/vectorizer/collocations/llr/CollocDriver/generateCollocations(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration,boolean,int,int,int)|",
      "|java+method:///org/apache/mahout/vectorizer/collocations/llr/CollocDriver/addInputOption()|",
      "|java+method:///org/apache/mahout/common/ClassUtils/instantiateAs(java.lang.Class,java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/mahout/vectorizer/collocations/llr/CollocDriver/addOutputOption()|",
      "|java+method:///org/apache/mahout/vectorizer/DocumentProcessor/tokenizeDocuments(org.apache.hadoop.fs.Path,java.lang.Class,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/vectorizer/collocations/llr/CollocDriver/getInputPath()|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///org/apache/mahout/vectorizer/collocations/llr/CollocDriver/parseArguments(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/mahout/common/HadoopUtil/delete(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+method:///java/lang/Float/parseFloat(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/mahout/vectorizer/collocations/llr/CollocDriver/getConf()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/Float/valueOf(float)|",
      "|java+method:///org/apache/mahout/vectorizer/collocations/llr/CollocDriver/getOutputPath()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///java/lang/String/valueOf(float)|",
      "|java+method:///org/apache/mahout/vectorizer/collocations/llr/CollocDriver/addOption(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/vectorizer/collocations/llr/CollocDriver/addOption(org.apache.commons.cli2.Option)|",
      "|java+method:///java/lang/Class/asSubclass(java.lang.Class)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/overwriteOption()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/numReducersOption()|",
      "|java+method:///org/apache/mahout/vectorizer/collocations/llr/CollocDriver/addFlag(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/String/valueOf(int)|",
      "|java+method:///org/apache/mahout/vectorizer/collocations/llr/CollocDriver/computeNGramsPruneByLLR(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration,long,boolean,float,int)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/ga/watchmaker/MahoutEvaluator/storePopulation(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,java.lang.Iterable)|",
    "called": "|java+method:///org/apache/hadoop/fs/FileSystem/create(org.apache.hadoop.fs.Path)|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/common/StringUtils/toString(java.lang.Object)|",
      "|java+method:///java/io/BufferedWriter/newLine()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/io/BufferedWriter/close()|",
      "|java+constructor:///java/io/OutputStreamWriter/OutputStreamWriter(java.io.OutputStream)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/create(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///java/io/BufferedWriter/BufferedWriter(java.io.Writer)|",
      "|java+method:///java/io/BufferedWriter/write(java.lang.String)|",
      "|java+method:///java/lang/Iterable/iterator()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/common/StringUtils/toString(java.lang.Object)|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///java/io/BufferedWriter/newLine()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/io/OutputStreamWriter/OutputStreamWriter(java.io.OutputStream)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/create(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///java/io/BufferedWriter/BufferedWriter(java.io.Writer)|",
      "|java+method:///java/io/BufferedWriter/write(java.lang.String)|",
      "|java+method:///java/lang/Iterable/iterator()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/run(java.lang.String%5B%5D)|",
    "called": "|java+method:///org/apache/hadoop/conf/Configuration/setBoolean(java.lang.String,boolean)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/similarity/RowSimilarityJob/RowSimilarityJob()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/addOutputOption()|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/addInputOption()|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/shouldRunNextPhase(java.util.Map,java.util.concurrent.atomic.AtomicInteger)|",
      "|java+method:///java/lang/Boolean/toString()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/waitForCompletion(boolean)|",
      "|java+method:///java/lang/String/valueOf(java.lang.Object)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/addOption(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/setIOSort(org.apache.hadoop.mapreduce.JobContext)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/getConfiguration()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicInteger/AtomicInteger()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/setBoolean(java.lang.String,boolean)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/setInt(java.lang.String,int)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/getConf()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setCombinerClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/getOutputPath()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setPartitionerClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/getInputPath()|",
      "|java+method:///java/lang/StringBuilder/append(char)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/input/FileInputFormat/setInputPaths(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/prepareJob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setGroupingComparatorClass(java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/parseArguments(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/mahout/math/hadoop/similarity/SimilarityType/listEnumNames()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/hadoop/util/ToolRunner/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.util.Tool,java.lang.String%5B%5D)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/TasteHadoopUtils/readIntFromFile(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/String/valueOf(int)|",
      "|java+method:///org/apache/hadoop/fs/Path/makeQualified(org.apache.hadoop.fs.FileSystem)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/common/HadoopUtil/countRecords(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/String/valueOf(boolean)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/similarity/cooccurrence/RowSimilarityJob/RowSimilarityJob()|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/getConf()|",
      "|java+constructor:///org/apache/mahout/cf/taste/hadoop/preparation/PreparePreferenceMatrixJob/PreparePreferenceMatrixJob()|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/prepareJob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/addInputOption()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/shouldRunNextPhase(java.util.Map,java.util.concurrent.atomic.AtomicInteger)|",
      "|java+method:///java/lang/Boolean/toString()|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/getTempPath(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///java/lang/Boolean/valueOf(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/waitForCompletion(boolean)|",
      "|java+method:///java/lang/String/valueOf(java.lang.Object)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/getTempPath()|",
      "|java+method:///java/lang/String/valueOf(double)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/addOption(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/setIOSort(org.apache.hadoop.mapreduce.JobContext)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/addOption(java.lang.String,java.lang.String,java.lang.String,boolean)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/getConfiguration()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicInteger/AtomicInteger()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/addOutputOption()|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/setBoolean(java.lang.String,boolean)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/setInt(java.lang.String,int)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/getOutputPath()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/getInputPath()|",
      "|java+method:///java/lang/StringBuilder/append(char)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/hadoop/similarity/cooccurrence/measures/VectorSimilarityMeasures/list()|",
      "|java+method:///org/apache/mahout/common/HadoopUtil/readInt(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/parseArguments(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/item/RecommenderJob/setS3SafeCombinedInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/util/ToolRunner/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.util.Tool,java.lang.String%5B%5D)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/String/valueOf(int)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/dirichlet/DirichletMapper/getDirichletState(org.apache.hadoop.conf.Configuration)|",
    "called": "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/clustering/dirichlet/DirichletMapper/loadState(org.apache.hadoop.conf.Configuration,java.lang.String,org.apache.mahout.clustering.dirichlet.models.DistributionDescription,double,int)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/dirichlet/models/DistributionDescription/fromString(java.lang.String)|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/clustering/dirichlet/models/DistributionDescription/fromString(java.lang.CharSequence)|",
      "|java+method:///org/apache/mahout/clustering/dirichlet/DirichletMapper/loadState(org.apache.hadoop.conf.Configuration,java.lang.String,org.apache.mahout.clustering.dirichlet.models.DistributionDescription,double,int)|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/meanshift/MeanShiftCanopyMapper/cleanup(org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/mahout/clustering/meanshift/MeanShiftCanopyClusterer/shiftToMean(org.apache.mahout.clustering.meanshift.MeanShiftCanopy)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper/cleanup(org.apache.hadoop.mapreduce.Mapper$Context)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper/cleanup(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///java/lang/String/valueOf(int)|",
      "|java+method:///org/apache/mahout/clustering/meanshift/MeanShiftCanopyClusterer/shiftToMean(org.apache.mahout.clustering.meanshift.MeanShiftCanopy)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/minhash/MinHashMapper/map(org.apache.hadoop.io.Text,org.apache.mahout.math.VectorWritable,org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/mahout/math/Vector/iterator()|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///org/apache/mahout/math/Vector/clone()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(char)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/math/Vector$Element/get()|",
      "|java+method:///org/apache/mahout/clustering/minhash/HashFunction/hash(byte%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+method:///java/lang/String/substring(int,int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/lastIndexOf(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/mahout/math/Vector/size()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/mahout/math/Vector/iterator()|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/math/Vector/clone()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(char)|",
      "|java+method:///java/lang/StringBuilder/length()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/math/Vector$Element/get()|",
      "|java+method:///org/apache/mahout/clustering/minhash/HashFunction/hash(byte%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/StringBuilder/deleteCharAt(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/mahout/math/Vector/size()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+constructor:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansMapper/FuzzyKMeansMapper()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/BtJob$BtMapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(org.apache.hadoop.conf.Configuration)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/FileOutputFormat/getUniqueFile(org.apache.hadoop.mapreduce.TaskAttemptContext,java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Reader/SequenceFile$Reader(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Arrays/sort(java.lang.Object%5B%5D,java.util.Comparator)|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/next()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/UpperTriangular/UpperTriangular(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/GivensThinSolver/mergeR(org.apache.mahout.math.hadoop.stochasticsvd.UpperTriangular,org.apache.mahout.math.hadoop.stochasticsvd.UpperTriangular)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/SequenceFileValueIterator(org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskAttemptID/getTaskID()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getTaskAttemptID()|",
      "|java+constructor:///org/apache/hadoop/mapred/lib/MultipleOutputs/MultipleOutputs(org.apache.hadoop.mapred.JobConf)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/close()|",
      "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskID/getId()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/lang/Validate/isTrue(boolean,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/FileOutputFormat/getUniqueFile(org.apache.hadoop.mapreduce.TaskAttemptContext,java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/common/IOUtils$MultipleOutputsCloseableAdapter/IOUtils$MultipleOutputsCloseableAdapter(org.apache.hadoop.mapred.lib.MultipleOutputs)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/commons/lang/Validate/notNull(java.lang.Object,java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterator/SequenceFileDirValueIterator(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,java.util.Comparator,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/BtJob$BtMapper$1/BtJob$BtMapper$1(org.apache.mahout.math.hadoop.stochasticsvd.BtJob$BtMapper)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterator/SequenceFileDirValueIterator(org.apache.hadoop.fs.Path%5B%5D,java.util.Comparator,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/SequenceFileValueIterator(org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskAttemptID/getTaskID()|",
      "|java+method:///java/util/Deque/addFirst(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/qr/QRLastStep/QRLastStep(java.util.Iterator,java.util.Iterator,int)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterator/close()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getTaskAttemptID()|",
      "|java+constructor:///org/apache/hadoop/mapred/lib/MultipleOutputs/MultipleOutputs(org.apache.hadoop.mapred.JobConf)|",
      "|java+method:///java/util/Deque/remove(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/filecache/DistributedCache/getLocalCacheFiles(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getInt(java.lang.String,int)|",
      "|java+method:///org/apache/hadoop/mapreduce/TaskID/getId()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/SparseRowBlockAccumulator/SparseRowBlockAccumulator(int,org.apache.hadoop.mapred.OutputCollector)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileDirValueIterator/hasNext()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/kmeans/KMeansDriver/run(java.lang.String%5B%5D)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansDriver/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansDriver/hasOption(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///java/lang/Class/asSubclass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansDriver/addInputOption()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/convergenceOption()|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansDriver/getOption(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/HadoopUtil/delete(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/RandomSeedGenerator/buildRandom(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,org.apache.mahout.common.distance.DistanceMeasure)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansDriver/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.mahout.common.distance.DistanceMeasure,double,int,boolean,boolean)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/maxIterationsOption()|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/numClustersOption()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/clustersInOption()|",
      "|java+method:///java/lang/ClassLoader/loadClass(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansDriver/addOutputOption()|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansDriver/getConf()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/methodOption()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansDriver/getInputPath()|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansDriver/getOutputPath()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/distanceMeasureOption()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansDriver/parseArguments(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/overwriteOption()|",
      "|java+method:///java/lang/Thread/getContextClassLoader()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/clusteringOption()|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansDriver/addOption(org.apache.commons.cli2.Option)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansDriver/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansDriver/hasOption(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansDriver/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.mahout.common.distance.DistanceMeasure,double,int,boolean,boolean)|",
      "|java+method:///org/apache/mahout/common/ClassUtils/instantiateAs(java.lang.String,java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/numClustersOption()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansDriver/addInputOption()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/convergenceOption()|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansDriver/getOption(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/HadoopUtil/delete(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/RandomSeedGenerator/buildRandom(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,org.apache.mahout.common.distance.DistanceMeasure)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/maxIterationsOption()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/clustersInOption()|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansDriver/addOutputOption()|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansDriver/getConf()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/methodOption()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansDriver/getInputPath()|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansDriver/getOutputPath()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/distanceMeasureOption()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansDriver/parseArguments(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/overwriteOption()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/clusteringOption()|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansDriver/addOption(org.apache.commons.cli2.Option)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver/clusterDataSeq(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.mahout.common.distance.DistanceMeasure,double,float)|",
    "called": "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterable/iterator()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansUtil/configureWithClusterInfo(org.apache.hadoop.fs.Path,java.util.Collection)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansClusterer/emitPointToClusters(org.apache.mahout.math.VectorWritable,java.util.List,org.apache.hadoop.io.SequenceFile$Writer)|",
      "|java+constructor:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansClusterer/FuzzyKMeansClusterer(org.apache.mahout.common.distance.DistanceMeasure,double,double)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/close()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/logsCRCFilter()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterable/SequenceFileValueIterable(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterable/iterator()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansUtil/configureWithClusterInfo(org.apache.hadoop.fs.Path,java.util.Collection)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansClusterer/emitPointToClusters(org.apache.mahout.math.VectorWritable,java.util.List,org.apache.hadoop.io.SequenceFile$Writer)|",
      "|java+constructor:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansClusterer/FuzzyKMeansClusterer(org.apache.mahout.common.distance.DistanceMeasure,double,double)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/logsCRCFilter()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterable/SequenceFileValueIterable(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/sniffInputLabelType(org.apache.hadoop.fs.Path%5B%5D,org.apache.hadoop.conf.Configuration)|",
    "called": "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Reader/SequenceFile$Reader(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/getKeyClass()|",
      "|java+method:///java/lang/Class/asSubclass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/close()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Reader/SequenceFile$Reader(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/logsCRCFilter()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Reader/getKeyClass()|",
      "|java+method:///java/lang/Class/asSubclass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/isDir()|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/QJob$QMapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(org.apache.hadoop.conf.Configuration)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/QJob$QMapper$1/QJob$QMapper$1(org.apache.mahout.math.hadoop.stochasticsvd.QJob$QMapper)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/GivensThinSolver/GivensThinSolver(int,int)|",
      "|java+constructor:///org/apache/hadoop/mapred/lib/MultipleOutputs/MultipleOutputs(org.apache.hadoop.mapred.JobConf)|",
      "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+method:///java/util/Deque/addFirst(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/Omega/Omega(long,int,int)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/mapred/lib/MultipleOutputs/MultipleOutputs(org.apache.hadoop.mapred.JobConf)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/SplitPartitionedWritable/SplitPartitionedWritable(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/qr/QRFirstStep/QRFirstStep(org.apache.hadoop.conf.Configuration,org.apache.hadoop.mapred.OutputCollector,org.apache.hadoop.mapred.OutputCollector)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(int)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+method:///java/util/Deque/addFirst(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/QJob$QMapper$2/QJob$QMapper$2(org.apache.mahout.math.hadoop.stochasticsvd.QJob$QMapper)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/QJob$QMapper$3/QJob$QMapper$3(org.apache.mahout.math.hadoop.stochasticsvd.QJob$QMapper)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/QJob$QMapper$1/QJob$QMapper$1(org.apache.mahout.math.hadoop.stochasticsvd.QJob$QMapper)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/Omega/Omega(long,int,int)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/TransposeJob/buildTransposeJobConf(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int)|",
    "called": "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(org.apache.hadoop.conf.Configuration,java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapred/JobConf/setOutputKeyClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setOutputFormat(java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/FileOutputFormat/setOutputPath(org.apache.hadoop.mapred.JobConf,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setReducerClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setMapOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setJobName(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setInputFormat(java.lang.Class)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setInt(java.lang.String,int)|",
      "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(org.apache.hadoop.conf.Configuration,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/FileInputFormat/addInputPath(org.apache.hadoop.mapred.JobConf,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setMapOutputKeyClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setMapperClass(java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/makeQualified(org.apache.hadoop.fs.Path)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/mapred/JobConf/setOutputKeyClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/FileOutputFormat/setOutputPath(org.apache.hadoop.mapred.JobConf,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setReducerClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setCombinerClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setMapOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setJobName(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setInputFormat(java.lang.Class)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setInt(java.lang.String,int)|",
      "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(org.apache.hadoop.conf.Configuration,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/FileInputFormat/addInputPath(org.apache.hadoop.mapred.JobConf,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setMapOutputKeyClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setOutputFormat(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/setMapperClass(java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/makeQualified(org.apache.hadoop.fs.Path)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/run(java.lang.String%5B%5D)|",
    "called": "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/getConf()|",
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/setcUHalfSigma(boolean)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/getSingularValues()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/addOption(java.lang.String,java.lang.String,java.lang.String,boolean)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/setOverwrite(boolean)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/addOption(org.apache.commons.cli2.Option)|",
      "|java+method:///java/util/Arrays/copyOf(double%5B%5D,int)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/setMinSplitSize(int)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/close()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/parseArguments(java.lang.String%5B%5D)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/addInputOption()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/setcVHalfSigma(boolean)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/run()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/getUPath()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/keyFor(java.lang.String)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/getVPath()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/setComputeV(boolean)|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/overwriteOption()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/setComputeU(boolean)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile/createWriter(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/addOutputOption()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/SSVDSolver(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D,org.apache.hadoop.fs.Path,int,int,int,int)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/rename(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/addOption(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/mkdirs(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/io/NullWritable/get()|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(double%5B%5D,boolean)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/getConf()|",
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/getOutputPath()|",
      "|java+method:///java/lang/String/valueOf(boolean)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/getInputPath()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/getSingularValues()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/addOption(java.lang.String,java.lang.String,java.lang.String,boolean)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/setOverwrite(boolean)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/addOption(org.apache.commons.cli2.Option)|",
      "|java+method:///java/util/Arrays/copyOf(double%5B%5D,int)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/setMinSplitSize(int)|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/parseArguments(java.lang.String%5B%5D)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/addInputOption()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/setBroadcast(boolean)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/setcUHalfSigma(boolean)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/setAbtBlockHeight(int)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/setcVHalfSigma(boolean)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/run()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/getTempPath()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/getUPath()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/keyFor(java.lang.String)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/getVPath()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/setQ(int)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/setOuterBlockHeight(int)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/setComputeV(boolean)|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/overwriteOption()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/setComputeU(boolean)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/addOutputOption()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile/createWriter(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/getOutputPath(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/SSVDSolver(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D,org.apache.hadoop.fs.Path,int,int,int,int)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/rename(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/addOption(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/mkdirs(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/String/valueOf(int)|",
      "|java+method:///org/apache/hadoop/io/NullWritable/get()|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(double%5B%5D,boolean)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/spectral/common/MatrixDiagonalizeJob/runJob(org.apache.hadoop.fs.Path,int)|",
    "called": "|java+method:///org/apache/hadoop/mapreduce/Job/setInputFormatClass(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapOutputKeyClass(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/waitForCompletion(boolean)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setReducerClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/clustering/spectral/common/VectorCache/load(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/setInt(java.lang.String,int)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputFormatClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputKeyClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/input/FileInputFormat/addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapperClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/HadoopUtil/delete(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setInputFormatClass(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Job/Job(org.apache.hadoop.conf.Configuration,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/FileOutputFormat/setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapOutputKeyClass(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/waitForCompletion(boolean)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setReducerClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/clustering/spectral/common/VectorCache/load(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputFormatClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputKeyClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/input/FileInputFormat/addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/Path/getParent()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapperClass(java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/HadoopUtil/delete(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setInputFormatClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setJarByClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/setInt(java.lang.String,int)|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Job/Job(org.apache.hadoop.conf.Configuration,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/FileOutputFormat/setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/spectral/common/UnitVectorizerJob/runJob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
    "called": "|java+method:///org/apache/hadoop/mapreduce/Job/setInputFormatClass(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapreduce/Job/waitForCompletion(boolean)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setNumReduceTasks(int)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputFormatClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputKeyClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/input/FileInputFormat/addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapperClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setInputFormatClass(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Job/Job(org.apache.hadoop.conf.Configuration,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/FileOutputFormat/setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/mapreduce/Job/waitForCompletion(boolean)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setNumReduceTasks(int)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputValueClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setJarByClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputFormatClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setOutputKeyClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/input/FileInputFormat/addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setMapperClass(java.lang.Class)|",
      "|java+method:///org/apache/hadoop/mapreduce/Job/setInputFormatClass(java.lang.Class)|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Job/Job(org.apache.hadoop.conf.Configuration,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/lib/output/FileOutputFormat/setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/BtJob$BtMapper/BtJob$BtMapper()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|",
      "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|",
      "|java+constructor:///java/util/ArrayDeque/ArrayDeque()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/common/JobExecutor/execute(java.lang.String%5B%5D,org.apache.mahout.classifier.bayes.mapreduce.common.BayesJob)|",
    "called": "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/commons/cli2/OptionException/getMessage()|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/common/BayesParameters/BayesParameters()|",
      "|java+method:///org/apache/mahout/classifier/bayes/common/BayesParameters/setGramSize(int)|",
      "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesJob/runJob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.mahout.classifier.bayes.common.BayesParameters)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelp(org.apache.commons.cli2.Group)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/helpOption()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/outputOption()|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/inputOption()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/common/CommandLineUtil/printHelp(org.apache.commons.cli2.Group)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+method:///org/apache/mahout/classifier/bayes/BayesParameters/setGramSize(int)|",
      "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesJob/runJob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.mahout.classifier.bayes.BayesParameters)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/BayesParameters/BayesParameters()|",
      "|java+method:///org/apache/commons/cli2/OptionException/getMessage()|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/helpOption()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/outputOption()|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/inputOption()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/vectorizer/document/SequenceFileTokenizerMapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///java/lang/ClassLoader/loadClass(java.lang.String)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Thread/getContextClassLoader()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/common/ClassUtils/instantiateAs(java.lang.String,java.lang.Class)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/AggregatorMapper/map(org.apache.hadoop.io.Text,org.apache.mahout.fpm.pfpgrowth.convertors.string.TopKStringPatterns,org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/setStatus(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/convertors/string/TopKStringPatterns/TopKStringPatterns(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/convertors/string/TopKStringPatterns/getPatterns()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/setStatus(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+constructor:///org/apache/mahout/fpm/pfpgrowth/convertors/string/TopKStringPatterns/TopKStringPatterns(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/convertors/string/TopKStringPatterns/getPatterns()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/spectral/common/AffinityMatrixInputMapper/map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+method:///org/apache/hadoop/io/Text/toString()|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/regex/Pattern/split(java.lang.CharSequence)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix$MatrixEntryWritable/setVal(double)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix$MatrixEntryWritable/setCol(int)|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix$MatrixEntryWritable/setRow(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable(int)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///java/lang/Double/doubleValue()|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix$MatrixEntryWritable/DistributedRowMatrix$MatrixEntryWritable()|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+method:///java/lang/Double/valueOf(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/io/LongWritable/get()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/regex/Pattern/split(java.lang.CharSequence)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix$MatrixEntryWritable/setVal(double)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix$MatrixEntryWritable/setCol(int)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix$MatrixEntryWritable/setRow(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable(int)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///java/lang/Double/doubleValue()|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix$MatrixEntryWritable/DistributedRowMatrix$MatrixEntryWritable()|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+method:///java/lang/Double/valueOf(java.lang.String)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/io/LongWritable/get()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+constructor:///org/apache/mahout/clustering/meanshift/MeanShiftCanopyMapper/MeanShiftCanopyMapper()|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/Mapper/Mapper()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/ParallelFPGrowthReducer/setup(org.apache.hadoop.mapreduce.Reducer$Context)|",
    "called": "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/deserializeList(org.apache.mahout.common.Parameters,java.lang.String,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer/setup(org.apache.hadoop.mapreduce.Reducer$Context)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/deserializeMap(org.apache.mahout.common.Parameters,java.lang.String,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/mahout/common/Parameters/Parameters(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/put(java.lang.Object,int)|",
      "|java+constructor:///org/apache/mahout/math/list/IntArrayList/IntArrayList()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/get(java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/map/OpenLongObjectHashMap/get(long)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/getConfiguration()|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/apache/mahout/math/list/IntArrayList/add(int)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/mahout/math/map/OpenLongObjectHashMap/put(long,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Parameters/getInt(java.lang.String,int)|",
      "|java+method:///org/apache/mahout/common/Parameters/get(java.lang.String)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/getConfiguration()|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer/setup(org.apache.hadoop.mapreduce.Reducer$Context)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/mahout/fpm/pfpgrowth/PFPGrowth/readFList(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/list/LongArrayList/add(long)|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/mahout/common/Parameters/Parameters(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/dirichlet/DirichletDriver/buildClustersMR(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.mahout.clustering.dirichlet.models.DistributionDescription,int,int,double,org.apache.hadoop.fs.Path)|",
    "called": "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
    "v1Body": [
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/mahout/clustering/dirichlet/DirichletDriver/runIteration(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.mahout.clustering.dirichlet.models.DistributionDescription,int,double)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/mahout/clustering/dirichlet/DirichletDriver/runIteration(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.mahout.clustering.dirichlet.models.DistributionDescription,int,double)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/rename(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/common/distance/MahalanobisDistanceMeasure/configure(org.apache.hadoop.conf.Configuration)|",
    "called": "|java+method:///org/apache/hadoop/fs/Path/toString()|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///org/apache/mahout/common/parameters/Parametered$ParameteredGeneralizations/configureParameters(org.apache.mahout.common.parameters.Parametered,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/io/DataInputStream/close()|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/mahout/common/parameters/ClassParameter/get()|",
      "|java+method:///org/apache/mahout/math/MatrixWritable/readFields(java.io.DataInput)|",
      "|java+method:///org/apache/mahout/math/VectorWritable/readFields(java.io.DataInput)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/open(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///java/io/FileNotFoundException/FileNotFoundException(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/parameters/Parameter/get()|",
      "|java+method:///org/apache/mahout/math/MatrixWritable/get()|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///org/apache/mahout/common/ClassUtils/instantiateAs(java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/parameters/Parametered$ParameteredGeneralizations/configureParameters(org.apache.mahout.common.parameters.Parametered,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/mahout/math/MatrixWritable/readFields(java.io.DataInput)|",
      "|java+method:///org/apache/mahout/math/VectorWritable/readFields(java.io.DataInput)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/open(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///java/io/FileNotFoundException/FileNotFoundException(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/parameters/Parameter/get()|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///org/apache/mahout/math/MatrixWritable/get()|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/common/parameters/ClassParameter/get()|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/cf/taste/hadoop/ToEntityPrefsMapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/conf/Configuration/getBoolean(java.lang.String,boolean)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Float/parseFloat(java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getBoolean(java.lang.String,boolean)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/common/distance/WeightedDistanceMeasure/configure(org.apache.hadoop.conf.Configuration)|",
    "called": "|java+method:///org/apache/hadoop/fs/Path/toString()|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///org/apache/mahout/common/parameters/Parametered$ParameteredGeneralizations/configureParameters(org.apache.mahout.common.parameters.Parametered,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/io/DataInputStream/close()|",
      "|java+method:///org/apache/mahout/common/parameters/Parameter/get()|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/mahout/common/parameters/ClassParameter/get()|",
      "|java+method:///org/apache/mahout/math/VectorWritable/readFields(java.io.DataInput)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/open(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///java/io/FileNotFoundException/FileNotFoundException(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///org/apache/mahout/common/ClassUtils/instantiateAs(java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/parameters/Parametered$ParameteredGeneralizations/configureParameters(org.apache.mahout.common.parameters.Parametered,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/exists(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/mahout/common/parameters/ClassParameter/get()|",
      "|java+method:///org/apache/mahout/math/VectorWritable/readFields(java.io.DataInput)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/open(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///java/io/FileNotFoundException/FileNotFoundException(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/parameters/Parameter/get()|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/fpm/pfpgrowth/TransactionTree/readFields(java.io.DataInput)|",
    "called": "|java+constructor:///org/apache/hadoop/io/VIntWritable/VIntWritable()|",
    "v1Body": [
      "|java+constructor:///org/apache/hadoop/io/VLongWritable/VLongWritable()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/io/DataInput/readBoolean()|",
      "|java+method:///org/apache/hadoop/io/VLongWritable/readFields(java.io.DataInput)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/hadoop/io/VIntWritable/get()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/io/VIntWritable/VIntWritable()|",
      "|java+constructor:///org/apache/mahout/common/Pair/Pair(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/VLongWritable/get()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/hadoop/io/VIntWritable/readFields(java.io.DataInput)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/io/VLongWritable/VLongWritable()|",
      "|java+method:///java/io/DataInput/readBoolean()|",
      "|java+method:///org/apache/hadoop/io/VLongWritable/readFields(java.io.DataInput)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/apache/hadoop/io/VIntWritable/get()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/VIntWritable/readFields(java.io.DataInput)|",
      "|java+constructor:///org/apache/mahout/math/list/IntArrayList/IntArrayList(int%5B%5D)|",
      "|java+constructor:///org/apache/hadoop/io/VIntWritable/VIntWritable()|",
      "|java+constructor:///org/apache/mahout/common/Pair/Pair(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/VLongWritable/get()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver/isConverged(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FileSystem)|",
    "called": "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path%5B%5D,org.apache.hadoop.fs.PathFilter)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/SoftCluster/isConverged()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/close()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/partFilter()|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/makeQualified(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/hasNext()|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/SequenceFileValueIterator(org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path%5B%5D,org.apache.hadoop.fs.PathFilter)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/next()|",
      "|java+method:///org/apache/hadoop/fs/FileUtil/stat2Paths(org.apache.hadoop.fs.FileStatus%5B%5D)|",
      "|java+method:///java/util/Collection/iterator()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/partFilter()|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/makeQualified(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/hasNext()|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/SequenceFileValueIterator(org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/SoftCluster/isConverged()|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path%5B%5D,org.apache.hadoop.fs.PathFilter)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/next()|",
      "|java+method:///org/apache/hadoop/fs/FileUtil/stat2Paths(org.apache.hadoop.fs.FileStatus%5B%5D)|",
      "|java+method:///java/util/Collection/iterator()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/spectral/kmeans/SpectralKMeansDriver/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int,org.apache.mahout.common.distance.DistanceMeasure,double,int)|",
    "called": "|java+method:///org/apache/hadoop/fs/Path/toString()|",
    "v1Body": [
      "|java+method:///org/apache/mahout/clustering/kmeans/RandomSeedGenerator/buildRandom(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,org.apache.mahout.common.distance.DistanceMeasure)|",
      "|java+constructor:///org/apache/mahout/math/decomposer/lanczos/LanczosState/LanczosState(org.apache.mahout.math.VectorIterable,int,int,org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/getCleanedEigensPath()|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileIterable/iterator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/clustering/spectral/common/MatrixDiagonalizeJob/runJob(org.apache.hadoop.fs.Path,int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/getRowPath()|",
      "|java+method:///org/apache/hadoop/io/IntWritable/get()|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/transpose()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileIterable/SequenceFileIterable(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/runJob(org.apache.hadoop.conf.Configuration,org.apache.mahout.math.decomposer.lanczos.LanczosState,int,boolean,java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/spectral/common/VectorMatrixMultiplicationJob/runJob(org.apache.hadoop.fs.Path,org.apache.mahout.math.Vector,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int)|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+constructor:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/EigenVerificationJob()|",
      "|java+constructor:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/DistributedLanczosSolver()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/clustering/spectral/common/UnitVectorizerJob/runJob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/runJob(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,boolean,double,double,int)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansDriver/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.mahout.common.distance.DistanceMeasure,double,int,boolean,boolean)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/spectral/common/AffinityMatrixInputJob/runJob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/getInitialVector(org.apache.mahout.math.VectorIterable)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/clustering/kmeans/RandomSeedGenerator/buildRandom(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,org.apache.mahout.common.distance.DistanceMeasure)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/getCleanedEigensPath()|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/clustering/spectral/common/MatrixDiagonalizeJob/runJob(org.apache.hadoop.fs.Path,int)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/getRowPath()|",
      "|java+method:///org/apache/mahout/clustering/spectral/common/VectorMatrixMultiplicationJob/runJob(org.apache.hadoop.fs.Path,org.apache.mahout.math.Vector,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/runJob(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,boolean,double,int)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/transpose()|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/runJob(org.apache.hadoop.conf.Configuration,org.apache.mahout.math.decomposer.lanczos.LanczosState,int,boolean,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+constructor:///org/apache/mahout/math/decomposer/lanczos/LanczosState/LanczosState(org.apache.mahout.math.VectorIterable,int,org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/EigenVerificationJob()|",
      "|java+constructor:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/DistributedLanczosSolver()|",
      "|java+method:///org/apache/mahout/clustering/spectral/common/UnitVectorizerJob/runJob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansDriver/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.mahout.common.distance.DistanceMeasure,double,int,boolean,boolean)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/spectral/common/AffinityMatrixInputJob/runJob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/getInitialVector(org.apache.mahout.math.VectorIterable)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/canopy/CanopyReducer/setup(org.apache.hadoop.mapreduce.Reducer$Context)|",
    "called": "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/apache/mahout/clustering/canopy/CanopyClusterer/CanopyClusterer(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer/setup(org.apache.hadoop.mapreduce.Reducer$Context)|",
      "|java+method:///org/apache/mahout/clustering/canopy/CanopyClusterer/useT3T4()|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/getConfiguration()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/mahout/clustering/canopy/CanopyClusterer/CanopyClusterer(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer/setup(org.apache.hadoop.mapreduce.Reducer$Context)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/canopy/CanopyClusterer/useT3T4()|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/getConfiguration()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/dirichlet/DirichletDriver/clusterDataSeq(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,boolean,double)|",
    "called": "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterable/iterator()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/mahout/clustering/dirichlet/DirichletClusterer/emitPointToClusters(org.apache.mahout.math.VectorWritable,java.util.List,org.apache.hadoop.io.SequenceFile$Writer)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///org/apache/mahout/clustering/dirichlet/DirichletClusterer/DirichletClusterer(boolean,double)|",
      "|java+method:///org/apache/mahout/clustering/dirichlet/DirichletClusterMapper/loadClusters(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///org/apache/mahout/clustering/Cluster/configure(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/close()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/logsCRCFilter()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterable/SequenceFileValueIterable(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/mahout/clustering/dirichlet/DirichletCluster/getModel()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterable/iterator()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///org/apache/mahout/clustering/dirichlet/DirichletClusterer/DirichletClusterer(boolean,double)|",
      "|java+method:///org/apache/mahout/clustering/dirichlet/DirichletClusterMapper/loadClusters(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///org/apache/mahout/clustering/Cluster/configure(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/logsCRCFilter()|",
      "|java+method:///org/apache/mahout/clustering/dirichlet/DirichletClusterer/emitPointToClusters(org.apache.mahout.math.VectorWritable,java.util.List,org.apache.hadoop.io.SequenceFile$Writer)|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterable/SequenceFileValueIterable(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/listStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/mahout/clustering/dirichlet/DirichletCluster/getModel()|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/serializeOutput(org.apache.mahout.math.decomposer.lanczos.LanczosState,org.apache.hadoop.fs.Path)|",
    "called": "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/decomposer/lanczos/LanczosState/getSingularValue(int)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/IntWritable/set(int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/getConf()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable()|",
      "|java+constructor:///org/apache/mahout/math/NamedVector/NamedVector(org.apache.mahout.math.Vector,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/close()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/mahout/math/decomposer/lanczos/LanczosState/getRightSingularVector(int)|",
      "|java+method:///org/apache/mahout/math/decomposer/lanczos/LanczosState/getIterationNumber()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/decomposer/lanczos/LanczosState/getSingularValue(int)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/IntWritable/set(int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/getConf()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable()|",
      "|java+constructor:///org/apache/mahout/math/NamedVector/NamedVector(org.apache.mahout.math.Vector,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/mahout/math/decomposer/lanczos/LanczosState/getRightSingularVector(int)|",
      "|java+method:///org/apache/mahout/math/decomposer/lanczos/LanczosState/getIterationNumber()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:0.20.204.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+initializer:///org/apache/mahout/cf/taste/hadoop/item/AggregateAndRecommendReducer/AggregateAndRecommendReducer$initializer|",
    "called": "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///org/apache/mahout/cf/taste/hadoop/item/AggregateAndRecommendReducer$1/AggregateAndRecommendReducer$1()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+constructor:///org/apache/mahout/cf/taste/hadoop/item/AggregateAndRecommendReducer$2/AggregateAndRecommendReducer$2()|",
      "|java+constructor:///org/apache/mahout/cf/taste/hadoop/item/AggregateAndRecommendReducer$1/AggregateAndRecommendReducer$1()|"
    ],
    "affectedLib": "org.slf4j:slf4j-api:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+initializer:///org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJob/ParallelALSFactorizationJob$initializer|",
    "called": "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "affectedLib": "org.slf4j:slf4j-api:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+initializer:///org/apache/mahout/cf/taste/impl/recommender/TreeClusteringRecommender/TreeClusteringRecommender$initializer|",
    "called": "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|"
    ],
    "affectedLib": "org.slf4j:slf4j-api:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+initializer:///org/apache/mahout/cf/taste/impl/recommender/slopeone/file/FileDiffStorage/FileDiffStorage$initializer|",
    "called": "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///java/util/regex/Pattern/compile(java.lang.String)|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|"
    ],
    "affectedLib": "org.slf4j:slf4j-api:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+initializer:///org/apache/mahout/cf/taste/hadoop/item/AggregateAndRecommendReducer/AggregateAndRecommendReducer$initializer|",
    "called": "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///org/apache/mahout/cf/taste/hadoop/item/AggregateAndRecommendReducer$1/AggregateAndRecommendReducer$1()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+constructor:///org/apache/mahout/cf/taste/hadoop/item/AggregateAndRecommendReducer$2/AggregateAndRecommendReducer$2()|",
      "|java+constructor:///org/apache/mahout/cf/taste/hadoop/item/AggregateAndRecommendReducer$1/AggregateAndRecommendReducer$1()|"
    ],
    "affectedLib": "org.slf4j:slf4j-api:1.6.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+initializer:///org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJob/ParallelALSFactorizationJob$initializer|",
    "called": "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "affectedLib": "org.slf4j:slf4j-api:1.6.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+initializer:///org/apache/mahout/cf/taste/impl/recommender/TreeClusteringRecommender/TreeClusteringRecommender$initializer|",
    "called": "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|"
    ],
    "affectedLib": "org.slf4j:slf4j-api:1.6.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+initializer:///org/apache/mahout/cf/taste/impl/recommender/slopeone/file/FileDiffStorage/FileDiffStorage$initializer|",
    "called": "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///java/util/regex/Pattern/compile(java.lang.String)|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|"
    ],
    "affectedLib": "org.slf4j:slf4j-api:1.6.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+constructor:///org/apache/mahout/cf/taste/impl/recommender/TreeClusteringRecommender/TreeClusteringRecommender(org.apache.mahout.cf.taste.model.DataModel,org.apache.mahout.cf.taste.impl.recommender.ClusterSimilarity,double,double)|",
    "called": "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
    "v1Body": [
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/common/RefreshHelper/addDependency(org.apache.mahout.cf.taste.common.Refreshable)|",
      "|java+method:///java/lang/Double/isNaN(double)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/cf/taste/impl/recommender/TreeClusteringRecommender$2/TreeClusteringRecommender$2(org.apache.mahout.cf.taste.impl.recommender.TreeClusteringRecommender)|",
      "|java+constructor:///org/apache/mahout/cf/taste/impl/common/RefreshHelper/RefreshHelper(java.util.concurrent.Callable)|",
      "|java+constructor:///org/apache/mahout/cf/taste/impl/recommender/AbstractRecommender/AbstractRecommender(org.apache.mahout.cf.taste.model.DataModel)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/TreeClusteringRecommender/buildClusters()|",
      "|java+method:///java/lang/Double/valueOf(double)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/common/RefreshHelper/addDependency(org.apache.mahout.cf.taste.common.Refreshable)|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
      "|java+method:///java/lang/Double/isNaN(double)|",
      "|java+method:///com/google/common/base/Preconditions/checkNotNull(java.lang.Object)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/cf/taste/impl/recommender/TreeClusteringRecommender$2/TreeClusteringRecommender$2(org.apache.mahout.cf.taste.impl.recommender.TreeClusteringRecommender)|",
      "|java+constructor:///org/apache/mahout/cf/taste/impl/common/RefreshHelper/RefreshHelper(java.util.concurrent.Callable)|",
      "|java+constructor:///org/apache/mahout/cf/taste/impl/recommender/AbstractRecommender/AbstractRecommender(org.apache.mahout.cf.taste.model.DataModel)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/TreeClusteringRecommender/buildClusters()|",
      "|java+method:///java/lang/Double/valueOf(double)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/run()|",
    "called": "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(double%5B%5D,boolean)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/UpperTriangular/columnSize()|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///org/apache/mahout/common/IOUtils/close(java.util.Collection)|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/loadUpperTriangularMatrix(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///org/apache/mahout/math/ssvd/EigenSolverWrapper/getEigenValues()|",
      "|java+method:///java/util/Random/nextLong()|",
      "|java+method:///java/util/Deque/remove(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/VectorWritable/set(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/sniffInputLabelType(org.apache.hadoop.fs.Path%5B%5D,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/ssvd/EigenSolverWrapper/EigenSolverWrapper(double%5B%5D%5B%5D)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/Deque/addFirst(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/BBtJob/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/close()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/BtJob/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int,int,int,java.lang.Class)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/VJob/start(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int,boolean)|",
      "|java+method:///org/apache/hadoop/io/IntWritable/set(int)|",
      "|java+method:///org/apache/mahout/math/ssvd/EigenSolverWrapper/getUHat()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/UpperTriangular/getQuick(int,int)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/UJob/start(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int,java.lang.Class,boolean)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/VJob/VJob()|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/UJob/UJob()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile/createWriter(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,org.apache.hadoop.io.SequenceFile$CompressionType)|",
      "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/QJob/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D,org.apache.hadoop.fs.Path,int,int,int,int,long,int)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/VJob/waitForCompletion()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/UJob/waitForCompletion()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/delete(org.apache.hadoop.fs.Path,boolean)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///java/lang/Math/sqrt(double)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.Throwable)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/mkdirs(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(double%5B%5D,boolean)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/UpperTriangular/columnSize()|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/ABtDenseOutJob/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int,int,int,int,int,boolean)|",
      "|java+method:///org/apache/mahout/common/IOUtils/close(java.util.Collection)|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/loadAndSumUpperTriangularMatrices(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/BtJob/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int,int,int,int,boolean,java.lang.Class,boolean)|",
      "|java+method:///org/apache/mahout/math/ssvd/EigenSolverWrapper/getEigenValues()|",
      "|java+method:///java/util/Random/nextLong()|",
      "|java+method:///java/util/Deque/remove(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/VectorWritable/set(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/sniffInputLabelType(org.apache.hadoop.fs.Path%5B%5D,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/ssvd/EigenSolverWrapper/EigenSolverWrapper(double%5B%5D%5B%5D)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/Deque/addFirst(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/VJob/start(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int,boolean)|",
      "|java+method:///org/apache/hadoop/io/IntWritable/set(int)|",
      "|java+method:///org/apache/mahout/math/ssvd/EigenSolverWrapper/getUHat()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/UpperTriangular/getQuick(int,int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/google/common/collect/Lists/newLinkedList()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/UJob/start(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int,java.lang.Class,boolean)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/VJob/VJob()|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/UJob/UJob()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile/createWriter(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,org.apache.hadoop.io.SequenceFile$CompressionType)|",
      "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/QJob/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D,org.apache.hadoop.fs.Path,int,int,int,int,long,int)|",
      "|java+method:///java/lang/Math/min(int,int)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/VJob/waitForCompletion()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/UJob/waitForCompletion()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/delete(org.apache.hadoop.fs.Path,boolean)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///java/lang/Math/sqrt(double)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.Throwable)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/mkdirs(org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(double%5B%5D,boolean)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+constructor:///org/apache/mahout/common/iterator/SamplingIterator/SamplingIterator(java.util.Iterator,double)|",
    "called": "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
    "v1Body": [
      "|java+constructor:///com/google/common/collect/AbstractIterator/AbstractIterator()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
      "|java+constructor:///com/google/common/collect/AbstractIterator/AbstractIterator()|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/AbstractCluster/computeParameters()|",
    "called": "|java+constructor:///org/apache/mahout/math/function/SquareRootFunction/SquareRootFunction()|",
    "v1Body": [
      "|java+constructor:///org/apache/mahout/math/function/SquareRootFunction/SquareRootFunction()|",
      "|java+method:///org/apache/mahout/math/Vector/divide(double)|",
      "|java+method:///org/apache/mahout/math/Vector/times(double)|",
      "|java+method:///org/apache/mahout/math/Vector/minus(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/Vector/assign(org.apache.mahout.math.function.DoubleFunction)|",
      "|java+method:///org/apache/mahout/math/Vector/times(org.apache.mahout.math.Vector)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/clustering/AbstractCluster/setS1(org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/mahout/math/function/SquareRootFunction/SquareRootFunction()|",
      "|java+method:///org/apache/mahout/clustering/AbstractCluster/setRadius(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/Vector/times(double)|",
      "|java+method:///org/apache/mahout/clustering/AbstractCluster/getS0()|",
      "|java+method:///org/apache/mahout/clustering/AbstractCluster/getS1()|",
      "|java+method:///org/apache/mahout/clustering/AbstractCluster/getS2()|",
      "|java+method:///org/apache/mahout/math/Vector/minus(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/Vector/assign(org.apache.mahout.math.function.DoubleFunction)|",
      "|java+method:///org/apache/mahout/math/Vector/times(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/clustering/AbstractCluster/setS2(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/Vector/divide(double)|",
      "|java+method:///org/apache/mahout/clustering/AbstractCluster/setNumPoints(long)|",
      "|java+method:///org/apache/mahout/clustering/AbstractCluster/setCenter(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/clustering/AbstractCluster/setS0(double)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/minhash/HashFactory/createHashFunctions(org.apache.mahout.clustering.minhash.HashFactory$HashType,int)|",
    "called": "|java+method:///org/apache/mahout/common/RandomUtils/getRandom(long)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/minhash/HashFactory$HashType/ordinal()|",
      "|java+constructor:///org/apache/mahout/clustering/minhash/HashFactory$PolynomialHash/HashFactory$PolynomialHash(int,int,int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/clustering/minhash/HashFactory$LinearHash/HashFactory$LinearHash(int,int)|",
      "|java+method:///java/util/Random/nextInt()|",
      "|java+constructor:///org/apache/mahout/clustering/minhash/HashFactory$MurmurHashWrapper/HashFactory$MurmurHashWrapper(int)|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom(long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/minhash/HashFactory$HashType/ordinal()|",
      "|java+constructor:///org/apache/mahout/clustering/minhash/HashFactory$PolynomialHash/HashFactory$PolynomialHash(int,int,int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/clustering/minhash/HashFactory$LinearHash/HashFactory$LinearHash(int,int)|",
      "|java+method:///java/util/Random/nextInt()|",
      "|java+constructor:///org/apache/mahout/clustering/minhash/HashFactory$MurmurHash3Wrapper/HashFactory$MurmurHash3Wrapper(int)|",
      "|java+constructor:///org/apache/mahout/clustering/minhash/HashFactory$MurmurHashWrapper/HashFactory$MurmurHashWrapper(int)|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom(long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/TimesSquaredJob$TimesSquaredMapper/map(org.apache.hadoop.io.WritableComparable,org.apache.mahout.math.VectorWritable,org.apache.hadoop.mapred.OutputCollector,org.apache.hadoop.mapred.Reporter)|",
    "called": "|java+method:///org/apache/mahout/math/function/Functions/plusMult(double)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/Vector/assign(org.apache.mahout.math.Vector,org.apache.mahout.math.function.DoubleDoubleFunction)|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///org/apache/mahout/math/function/Functions/plusMult(double)|",
      "|java+method:///org/apache/mahout/math/hadoop/TimesSquaredJob$TimesSquaredMapper/scale(org.apache.mahout.math.VectorWritable)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/Vector/assign(org.apache.mahout.math.Vector,org.apache.mahout.math.function.DoubleDoubleFunction)|",
      "|java+method:///org/apache/mahout/math/hadoop/TimesSquaredJob$TimesSquaredMapper/setOut(org.apache.hadoop.mapred.OutputCollector)|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///org/apache/mahout/math/function/Functions/plusMult(double)|",
      "|java+method:///org/apache/mahout/math/hadoop/TimesSquaredJob$TimesSquaredMapper/scale(org.apache.mahout.math.VectorWritable)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/MatrixWritable/readMatrix(java.io.DataInput)|",
    "called": "|java+constructor:///org/apache/mahout/math/DenseMatrix/DenseMatrix(int,int)|",
    "v1Body": [
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///org/apache/mahout/math/SparseRowMatrix/SparseRowMatrix(int%5B%5D,boolean)|",
      "|java+method:///java/lang/Integer/toString(int,int)|",
      "|java+method:///java/io/DataInput/readInt()|",
      "|java+method:///org/apache/mahout/math/VectorWritable/readVector(java.io.DataInput)|",
      "|java+method:///org/apache/mahout/math/Matrix/viewRow(int)|",
      "|java+method:///org/apache/mahout/math/Vector/assign(org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/mahout/math/DenseMatrix/DenseMatrix(int,int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/Matrix/setColumnLabelBindings(java.util.Map)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///org/apache/mahout/math/SparseRowMatrix/SparseRowMatrix(int,int,boolean)|",
      "|java+method:///java/lang/Integer/toString(int,int)|",
      "|java+method:///org/apache/mahout/math/VectorWritable/readVector(java.io.DataInput)|",
      "|java+method:///org/apache/mahout/math/MatrixWritable/readLabels(java.io.DataInput,java.util.Map,java.util.Map)|",
      "|java+method:///org/apache/mahout/math/Vector/assign(org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/mahout/math/DenseMatrix/DenseMatrix(int,int)|",
      "|java+method:///org/apache/mahout/math/Matrix/setRowLabelBindings(java.util.Map)|",
      "|java+method:///java/io/DataInput/readInt()|",
      "|java+method:///org/apache/mahout/math/Matrix/viewRow(int)|",
      "|java+method:///java/util/Map/isEmpty()|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDPrototype/testBlockQrWithSSVD(int,int,int,long)|",
    "called": "|java+method:///org/apache/mahout/math/DenseMatrix/viewRow(int)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/DenseMatrix/getRow(int)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDPrototype/SSVDPrototype(long,int,int)|",
      "|java+method:///org/apache/mahout/math/Vector/getQuick(int)|",
      "|java+constructor:///org/apache/mahout/math/SingularValueDecomposition/SingularValueDecomposition(org.apache.mahout.math.Matrix)|",
      "|java+constructor:///org/apache/mahout/math/ssvd/EigenSolverWrapper/EigenSolverWrapper(double%5B%5D%5B%5D)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/PartialRowEmitter/emitRow(int,org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/DenseMatrix/columnSize()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDPrototype/firstPass(org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDPrototype$3/SSVDPrototype$3(java.util.Map)|",
      "|java+method:///java/io/PrintStream/printf(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/apache/mahout/math/Vector/size()|",
      "|java+method:///java/util/Random/nextDouble()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/Vector/times(double)|",
      "|java+method:///java/io/PrintStream/println()|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///org/apache/mahout/math/SingularValueDecomposition/getSingularValues()|",
      "|java+method:///org/apache/mahout/math/DenseMatrix/setQuick(int,int,double)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDPrototype$4/SSVDPrototype$4(java.util.Map)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDPrototype/finishFirstPass()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDPrototype/secondPass(org.apache.mahout.math.Vector,org.apache.mahout.math.hadoop.stochasticsvd.PartialRowEmitter)|",
      "|java+method:///org/apache/mahout/math/ssvd/EigenSolverWrapper/getEigenValues()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///org/apache/mahout/math/DenseMatrix/DenseMatrix(int,int)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/apache/mahout/math/DenseMatrix/set(int,int,double)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///java/lang/Math/sqrt(double)|",
      "|java+method:///org/apache/mahout/math/DenseMatrix/rowSize()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/Vector/getQuick(int)|",
      "|java+constructor:///org/apache/mahout/math/SingularValueDecomposition/SingularValueDecomposition(org.apache.mahout.math.Matrix)|",
      "|java+constructor:///org/apache/mahout/math/ssvd/EigenSolverWrapper/EigenSolverWrapper(double%5B%5D%5B%5D)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/PartialRowEmitter/emitRow(int,org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/DenseMatrix/columnSize()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDPrototype/firstPass(org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDPrototype$3/SSVDPrototype$3(java.util.Map)|",
      "|java+method:///java/io/PrintStream/printf(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDPrototype/SSVDPrototype(long,int,int)|",
      "|java+method:///java/util/Random/nextDouble()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/Vector/times(double)|",
      "|java+method:///java/io/PrintStream/println()|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
      "|java+method:///org/apache/mahout/math/SingularValueDecomposition/getSingularValues()|",
      "|java+method:///org/apache/mahout/math/DenseMatrix/setQuick(int,int,double)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDPrototype$4/SSVDPrototype$4(java.util.Map)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDPrototype/finishFirstPass()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDPrototype/secondPass(org.apache.mahout.math.Vector,org.apache.mahout.math.hadoop.stochasticsvd.PartialRowEmitter)|",
      "|java+method:///org/apache/mahout/math/ssvd/EigenSolverWrapper/getEigenValues()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///org/apache/mahout/math/DenseMatrix/DenseMatrix(int,int)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/apache/mahout/math/DenseMatrix/set(int,int,double)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///java/lang/Math/sqrt(double)|",
      "|java+method:///org/apache/mahout/math/DenseMatrix/rowSize()|",
      "|java+method:///org/apache/mahout/math/Vector/size()|",
      "|java+method:///org/apache/mahout/math/DenseMatrix/viewRow(int)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/BtJob$BtMapper/map(org.apache.hadoop.io.Writable,org.apache.mahout.math.VectorWritable,org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(int)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/Vector/iterator()|",
      "|java+method:///org/apache/mahout/math/Vector/isDense()|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/BtJob$BtMapper/outputQRow(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///org/apache/mahout/math/Vector/setQuick(int,double)|",
      "|java+method:///org/apache/mahout/math/Vector/size()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/BtJob$BtMapper/loadNextQt()|",
      "|java+method:///org/apache/mahout/math/Vector/getQuick(int)|",
      "|java+method:///org/apache/mahout/math/Vector$Element/index()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/math/Vector$Element/get()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/io/IntWritable/set(int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/VectorWritable/set(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/qr/QRLastStep/next()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/apache/mahout/math/Vector/isDense()|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(int)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/BtJob$BtMapper/outputQRow(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///org/apache/mahout/math/Vector/iterateNonZero()|",
      "|java+method:///org/apache/mahout/math/Vector/setQuick(int,double)|",
      "|java+method:///org/apache/mahout/math/Vector/size()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SparseRowBlockAccumulator/collect(java.lang.Long,org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/Vector/getQuick(int)|",
      "|java+method:///org/apache/mahout/math/Vector$Element/index()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/math/Vector$Element/get()|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/UpperTriangular/like(int,int)|",
    "called": "|java+constructor:///org/apache/mahout/math/DenseMatrix/DenseMatrix(int,int)|",
    "v1Body": [
      "|java+constructor:///java/lang/UnsupportedOperationException/UnsupportedOperationException()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/mahout/math/DenseMatrix/DenseMatrix(int,int)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/vectorizer/encoders/FeatureVectorEncoder/hash(java.lang.String,int,int)|",
    "called": "|java+method:///org/apache/mahout/math/MurmurHash/hash64A(byte%5B%5D,int)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/vectorizer/encoders/FeatureVectorEncoder/bytesForString(java.lang.String)|",
      "|java+method:///org/apache/mahout/vectorizer/encoders/MurmurHash/hash64A(byte%5B%5D,int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/vectorizer/encoders/FeatureVectorEncoder/bytesForString(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/MurmurHash/hash64A(byte%5B%5D,int)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/runJob(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int,boolean,int,java.lang.String)|",
    "called": "|java+constructor:///org/apache/mahout/math/decomposer/lanczos/LanczosState/LanczosState(org.apache.mahout.math.VectorIterable,int,org.apache.mahout.math.Vector)|",
    "v1Body": [
      "|java+constructor:///org/apache/mahout/math/decomposer/lanczos/LanczosState/LanczosState(org.apache.mahout.math.VectorIterable,int,int,org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/runJob(org.apache.hadoop.conf.Configuration,org.apache.mahout.math.decomposer.lanczos.LanczosState,int,boolean,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/getInitialVector(org.apache.mahout.math.VectorIterable)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/runJob(org.apache.hadoop.conf.Configuration,org.apache.mahout.math.decomposer.lanczos.LanczosState,int,boolean,java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/getInitialVector(org.apache.mahout.math.VectorIterable)|",
      "|java+constructor:///org/apache/mahout/math/decomposer/lanczos/LanczosState/LanczosState(org.apache.mahout.math.VectorIterable,int,org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/common/distance/MahalanobisDistanceMeasure/distance(org.apache.mahout.math.Vector,org.apache.mahout.math.Vector)|",
    "called": "|java+constructor:///org/apache/mahout/math/CardinalityException/CardinalityException(int,int)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/Algebra/mult(org.apache.mahout.math.Matrix,org.apache.mahout.math.Vector)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/Vector/minus(org.apache.mahout.math.Vector)|",
      "|java+method:///java/lang/Math/sqrt(double)|",
      "|java+method:///org/apache/mahout/math/Vector/size()|",
      "|java+constructor:///org/apache/mahout/math/CardinalityException/CardinalityException(int,int)|",
      "|java+method:///org/apache/mahout/math/Vector/dot(org.apache.mahout.math.Vector)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/Algebra/mult(org.apache.mahout.math.Matrix,org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/Vector/minus(org.apache.mahout.math.Vector)|",
      "|java+method:///java/lang/Math/sqrt(double)|",
      "|java+method:///org/apache/mahout/math/Vector/size()|",
      "|java+constructor:///org/apache/mahout/math/CardinalityException/CardinalityException(int,int)|",
      "|java+method:///org/apache/mahout/math/Vector/dot(org.apache.mahout.math.Vector)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/TimesSquaredJob$TimesSquaredMapper/configure(org.apache.hadoop.mapred.JobConf)|",
    "called": "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(int,int)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/SequenceFileValueIterator(org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/close()|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(int)|",
      "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(int,int)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/getBoolean(java.lang.String,boolean)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/getInt(java.lang.String,int)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/next()|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///java/net/URI/getPath()|",
      "|java+method:///org/apache/hadoop/filecache/DistributedCache/getCacheFiles(org.apache.hadoop.conf.Configuration)|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/SequenceFileValueIterator(org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(int)|",
      "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(int,int)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/getBoolean(java.lang.String,boolean)|",
      "|java+method:///org/apache/hadoop/mapred/JobConf/getInt(java.lang.String,int)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileValueIterator/next()|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///java/net/URI/getPath()|",
      "|java+method:///org/apache/hadoop/filecache/DistributedCache/getCacheFiles(org.apache.hadoop.conf.Configuration)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/common/distance/MahalanobisDistanceMeasure/setCovarianceMatrix(org.apache.mahout.math.Matrix)|",
    "called": "|java+constructor:///org/apache/mahout/math/CardinalityException/CardinalityException(int,int)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/Matrix/times(org.apache.mahout.math.Matrix)|",
      "|java+method:///org/apache/mahout/math/Matrix/get(int,int)|",
      "|java+method:///org/apache/mahout/math/Matrix/set(int,int,double)|",
      "|java+method:///org/apache/mahout/math/SingularValueDecomposition/getU()|",
      "|java+method:///org/apache/mahout/math/Matrix/numRows()|",
      "|java+constructor:///org/apache/mahout/math/CardinalityException/CardinalityException(int,int)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/SingularValueDecomposition/SingularValueDecomposition(org.apache.mahout.math.Matrix)|",
      "|java+method:///org/apache/mahout/math/Matrix/transpose()|",
      "|java+method:///org/apache/mahout/math/SingularValueDecomposition/getS()|",
      "|java+method:///org/apache/mahout/math/Matrix/numCols()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/Matrix/times(org.apache.mahout.math.Matrix)|",
      "|java+method:///org/apache/mahout/math/Matrix/get(int,int)|",
      "|java+method:///org/apache/mahout/math/Matrix/set(int,int,double)|",
      "|java+method:///org/apache/mahout/math/SingularValueDecomposition/getU()|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/Matrix/numRows()|",
      "|java+constructor:///org/apache/mahout/math/CardinalityException/CardinalityException(int,int)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/SingularValueDecomposition/SingularValueDecomposition(org.apache.mahout.math.Matrix)|",
      "|java+method:///org/apache/mahout/math/Matrix/transpose()|",
      "|java+method:///org/apache/mahout/math/SingularValueDecomposition/getS()|",
      "|java+method:///org/apache/mahout/math/Matrix/numCols()|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/lda/LDADriver/writeInitialState(org.apache.hadoop.fs.Path,int,int)|",
    "called": "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/mahout/common/IntPairWritable/IntPairWritable(int,int)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///java/util/Random/nextDouble()|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Math/log(double)|",
      "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/io/DoubleWritable/set(double)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/close()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/mahout/common/IntPairWritable/IntPairWritable(int,int)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Math/log(double)|",
      "|java+constructor:///org/apache/hadoop/io/DoubleWritable/DoubleWritable()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/io/DoubleWritable/set(double)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///java/util/Random/nextDouble()|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/prepareEigens(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,boolean)|",
    "called": "|java+constructor:///org/apache/mahout/math/SparseRowMatrix/SparseRowMatrix(int,int,org.apache.mahout.math.Vector%5B%5D,boolean,boolean)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int)|",
      "|java+method:///org/apache/mahout/math/MatrixSlice/vector()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/mahout/math/SparseRowMatrix/SparseRowMatrix(int%5B%5D,org.apache.mahout.math.Vector%5B%5D,boolean,boolean)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/apache/mahout/math/Vector/size()|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/iterator()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int)|",
      "|java+method:///org/apache/mahout/math/MatrixSlice/vector()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/mahout/math/SparseRowMatrix/SparseRowMatrix(int,int,org.apache.mahout.math.Vector%5B%5D,boolean,boolean)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/apache/mahout/math/Vector/size()|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/iterator()|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmUtils/truncateModel(org.apache.mahout.classifier.sequencelearning.hmm.HmmModel,double)|",
    "called": "|java+constructor:///org/apache/mahout/math/SparseMatrix/SparseMatrix(int,int)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/registerHiddenStateNames(java.util.Map)|",
      "|java+constructor:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/HmmModel(org.apache.mahout.math.Matrix,org.apache.mahout.math.Matrix,org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/getNrOfOutputStates()|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/getHiddenStateNames()|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/registerOutputStateNames(java.util.Map)|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmUtils/normalizeModel(org.apache.mahout.classifier.sequencelearning.hmm.HmmModel)|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/getNrOfHiddenStates()|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/getEmissionMatrix()|",
      "|java+method:///org/apache/mahout/math/RandomAccessSparseVector/setQuick(int,double)|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/getInitialProbabilities()|",
      "|java+constructor:///org/apache/mahout/math/SparseMatrix/SparseMatrix(int%5B%5D)|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/getTransitionMatrix()|",
      "|java+method:///org/apache/mahout/math/SparseMatrix/setQuick(int,int,double)|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/getOutputStateNames()|",
      "|java+method:///org/apache/mahout/math/Vector/getQuick(int)|",
      "|java+method:///org/apache/mahout/math/Matrix/getQuick(int,int)|",
      "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/registerHiddenStateNames(java.util.Map)|",
      "|java+constructor:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/HmmModel(org.apache.mahout.math.Matrix,org.apache.mahout.math.Matrix,org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/getNrOfOutputStates()|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/getHiddenStateNames()|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/registerOutputStateNames(java.util.Map)|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmUtils/normalizeModel(org.apache.mahout.classifier.sequencelearning.hmm.HmmModel)|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/getNrOfHiddenStates()|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/getEmissionMatrix()|",
      "|java+method:///org/apache/mahout/math/RandomAccessSparseVector/setQuick(int,double)|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/getInitialProbabilities()|",
      "|java+constructor:///org/apache/mahout/math/SparseMatrix/SparseMatrix(int,int)|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/getTransitionMatrix()|",
      "|java+method:///org/apache/mahout/math/SparseMatrix/setQuick(int,int,double)|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/getOutputStateNames()|",
      "|java+method:///org/apache/mahout/math/Vector/getQuick(int)|",
      "|java+method:///org/apache/mahout/math/Matrix/getQuick(int,int)|",
      "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(int)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDPrototype$1/emitRow(int,org.apache.mahout.math.Vector)|",
    "called": "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(org.apache.mahout.math.Vector)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/Vector/addTo(org.apache.mahout.math.Vector)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(org.apache.mahout.math.Vector)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/Vector/assign(org.apache.mahout.math.Vector,org.apache.mahout.math.function.DoubleDoubleFunction)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(org.apache.mahout.math.Vector)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/minhash/HashFactory$MurmurHashWrapper/hash(byte%5B%5D)|",
    "called": "|java+method:///org/apache/mahout/math/MurmurHash/hash64A(byte%5B%5D,int)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/vectorizer/encoders/MurmurHash/hash64A(byte%5B%5D,int)|",
      "|java+method:///java/lang/Math/abs(int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/MurmurHash/hash64A(byte%5B%5D,int)|",
      "|java+method:///java/lang/Math/abs(int)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/UpperTriangular/assignRow(int,org.apache.mahout.math.Vector)|",
    "called": "|java+constructor:///org/apache/mahout/math/IndexException/IndexException(int,int)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/Vector/getQuick(int)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/UpperTriangular/setQuick(int,int,double)|",
      "|java+method:///org/apache/mahout/math/Vector/get(int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/UpperTriangular/columnSize()|",
      "|java+method:///org/apache/mahout/math/Vector/getQuick(int)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/UpperTriangular/numCols()|",
      "|java+method:///java/lang/Math/abs(double)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/IndexException/IndexException(int,int)|",
      "|java+method:///org/apache/mahout/math/Vector/size()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/UpperTriangular/setQuick(int,int,double)|",
      "|java+method:///org/apache/mahout/math/Vector/get(int)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/vectorizer/encoders/FeatureVectorEncoder/hash(byte%5B%5D,byte%5B%5D,int,int)|",
    "called": "|java+method:///org/apache/mahout/math/MurmurHash/hash64A(byte%5B%5D,int)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/vectorizer/encoders/MurmurHash/hash64A(byte%5B%5D,int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/MurmurHash/hash64A(byte%5B%5D,int)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ExpectationMaximizationSVDFactorizer/factorize()|",
    "called": "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
    "v1Body": [
      "|java+method:///org/apache/mahout/cf/taste/model/DataModel/getMaxPreference()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ExpectationMaximizationSVDFactorizer/userIndex(long)|",
      "|java+method:///java/util/Random/nextDouble()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ExpectationMaximizationSVDFactorizer/buildCache(int,int,int,org.apache.mahout.cf.taste.impl.recommender.svd.SVDPreference)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ExpectationMaximizationSVDFactorizer/train(int,int,int,org.apache.mahout.cf.taste.impl.recommender.svd.SVDPreference)|",
      "|java+method:///org/apache/mahout/cf/taste/model/DataModel/getNumUsers()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ExpectationMaximizationSVDFactorizer/getAveragePreference()|",
      "|java+method:///java/util/Collections/shuffle(java.util.List,java.util.Random)|",
      "|java+method:///java/lang/Math/sqrt(double)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ExpectationMaximizationSVDFactorizer/createFactorization(double%5B%5D%5B%5D,double%5B%5D%5B%5D)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ExpectationMaximizationSVDFactorizer/itemIndex(long)|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/SVDPreference/getUserID()|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ExpectationMaximizationSVDFactorizer/cachePreferences()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/mahout/cf/taste/model/DataModel/getMinPreference()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/SVDPreference/getItemID()|",
      "|java+method:///org/apache/mahout/cf/taste/model/DataModel/getNumItems()|",
      "|java+method:///java/lang/Math/pow(double,double)|",
      "|java+method:///java/util/List/iterator()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/cf/taste/model/DataModel/getMaxPreference()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ExpectationMaximizationSVDFactorizer/userIndex(long)|",
      "|java+method:///com/google/common/collect/Lists/newArrayListWithCapacity(int)|",
      "|java+method:///java/util/Random/nextDouble()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ExpectationMaximizationSVDFactorizer/buildCache(int,int,int,org.apache.mahout.cf.taste.impl.recommender.svd.SVDPreference)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ExpectationMaximizationSVDFactorizer/train(int,int,int,org.apache.mahout.cf.taste.impl.recommender.svd.SVDPreference)|",
      "|java+method:///org/apache/mahout/cf/taste/model/DataModel/getNumUsers()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ExpectationMaximizationSVDFactorizer/getAveragePreference()|",
      "|java+method:///java/util/Collections/shuffle(java.util.List,java.util.Random)|",
      "|java+method:///java/lang/Math/sqrt(double)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ExpectationMaximizationSVDFactorizer/createFactorization(double%5B%5D%5B%5D,double%5B%5D%5B%5D)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ExpectationMaximizationSVDFactorizer/itemIndex(long)|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/SVDPreference/getUserID()|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ExpectationMaximizationSVDFactorizer/cachePreferences()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/mahout/cf/taste/model/DataModel/getMinPreference()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/SVDPreference/getItemID()|",
      "|java+method:///org/apache/mahout/cf/taste/model/DataModel/getNumItems()|",
      "|java+method:///java/lang/Math/pow(double,double)|",
      "|java+method:///java/util/List/iterator()|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/UpperTriangular/viewPart(int%5B%5D,int%5B%5D)|",
    "called": "|java+constructor:///org/apache/mahout/math/MatrixView/MatrixView(org.apache.mahout.math.Matrix,int%5B%5D,int%5B%5D)|",
    "v1Body": [
      "|java+constructor:///java/lang/UnsupportedOperationException/UnsupportedOperationException()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/mahout/math/MatrixView/MatrixView(org.apache.mahout.math.Matrix,int%5B%5D,int%5B%5D)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+constructor:///org/apache/mahout/cf/taste/impl/recommender/TreeClusteringRecommender/TreeClusteringRecommender(org.apache.mahout.cf.taste.model.DataModel,org.apache.mahout.cf.taste.impl.recommender.ClusterSimilarity,int,double)|",
    "called": "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
    "v1Body": [
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/common/RefreshHelper/addDependency(org.apache.mahout.cf.taste.common.Refreshable)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/cf/taste/impl/common/RefreshHelper/RefreshHelper(java.util.concurrent.Callable)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/TreeClusteringRecommender/buildClusters()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+constructor:///org/apache/mahout/cf/taste/impl/recommender/AbstractRecommender/AbstractRecommender(org.apache.mahout.cf.taste.model.DataModel)|",
      "|java+constructor:///org/apache/mahout/cf/taste/impl/recommender/TreeClusteringRecommender$1/TreeClusteringRecommender$1(org.apache.mahout.cf.taste.impl.recommender.TreeClusteringRecommender)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/common/RefreshHelper/addDependency(org.apache.mahout.cf.taste.common.Refreshable)|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
      "|java+method:///com/google/common/base/Preconditions/checkNotNull(java.lang.Object)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/cf/taste/impl/common/RefreshHelper/RefreshHelper(java.util.concurrent.Callable)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/TreeClusteringRecommender/buildClusters()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+constructor:///org/apache/mahout/cf/taste/impl/recommender/AbstractRecommender/AbstractRecommender(org.apache.mahout.cf.taste.model.DataModel)|",
      "|java+constructor:///org/apache/mahout/cf/taste/impl/recommender/TreeClusteringRecommender$1/TreeClusteringRecommender$1(org.apache.mahout.cf.taste.impl.recommender.TreeClusteringRecommender)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer$1/run()|",
    "called": "|java+method:///org/apache/mahout/math/als/AlternatingLeastSquaresSolver/solve(java.lang.Iterable,org.apache.mahout.math.Vector,double,int)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer/access$200(org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer)|",
      "|java+method:///org/apache/mahout/math/als/AlternateLeastSquaresSolver/solve(java.util.List,org.apache.mahout.math.Vector,double,int)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/common/LongPrimitiveIterator/nextLong()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer/ratingVector(org.apache.mahout.cf.taste.model.PreferenceArray)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer/itemIndex(long)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer/userIndex(long)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer/access$100(org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/common/LongPrimitiveIterator/hasNext()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer$Features/setFeatureColumnInU(int,org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer$Features/getItemFeatureColumn(int)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer/access$200(org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/apache/mahout/math/als/AlternatingLeastSquaresSolver/solve(java.lang.Iterable,org.apache.mahout.math.Vector,double,int)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/common/LongPrimitiveIterator/nextLong()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer/ratingVector(org.apache.mahout.cf.taste.model.PreferenceArray)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer/itemIndex(long)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer/userIndex(long)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer/access$100(org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/common/LongPrimitiveIterator/hasNext()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer$Features/setFeatureColumnInU(int,org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer$Features/getItemFeatureColumn(int)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+constructor:///org/apache/mahout/common/iterator/StableFixedSizeSamplingIterator/StableFixedSizeSamplingIterator(int,java.util.Iterator)|",
    "called": "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
    "v1Body": [
      "|java+method:///com/google/common/collect/Iterators/transform(java.util.Iterator,com.google.common.base.Function)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///com/google/common/collect/ForwardingIterator/ForwardingIterator()|",
      "|java+method:///java/util/Collections/sort(java.util.List)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///org/apache/mahout/common/Pair/Pair(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Random/nextInt(int)|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/apache/mahout/common/iterator/StableFixedSizeSamplingIterator$1/StableFixedSizeSamplingIterator$1(org.apache.mahout.common.iterator.StableFixedSizeSamplingIterator)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/List/set(int,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Iterators/transform(java.util.Iterator,com.google.common.base.Function)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/google/common/collect/Lists/newArrayListWithCapacity(int)|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///com/google/common/collect/ForwardingIterator/ForwardingIterator()|",
      "|java+method:///java/util/Collections/sort(java.util.List)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///org/apache/mahout/common/Pair/Pair(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Random/nextInt(int)|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/apache/mahout/common/iterator/StableFixedSizeSamplingIterator$1/StableFixedSizeSamplingIterator$1(org.apache.mahout.common.iterator.StableFixedSizeSamplingIterator)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/List/set(int,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/QJob$QMapper/setup(org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(int)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/QJob$QMapper$1/QJob$QMapper$1(org.apache.mahout.math.hadoop.stochasticsvd.QJob$QMapper)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/GivensThinSolver/GivensThinSolver(int,int)|",
      "|java+constructor:///org/apache/hadoop/mapred/lib/MultipleOutputs/MultipleOutputs(org.apache.hadoop.mapred.JobConf)|",
      "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+method:///java/util/Deque/addFirst(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/Omega/Omega(long,int,int)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/hadoop/mapred/lib/MultipleOutputs/MultipleOutputs(org.apache.hadoop.mapred.JobConf)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/SplitPartitionedWritable/SplitPartitionedWritable(org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+constructor:///org/apache/hadoop/mapred/JobConf/JobConf(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/qr/QRFirstStep/QRFirstStep(org.apache.hadoop.conf.Configuration,org.apache.hadoop.mapred.OutputCollector,org.apache.hadoop.mapred.OutputCollector)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(int)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getConfiguration()|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+method:///java/util/Deque/addFirst(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/QJob$QMapper$2/QJob$QMapper$2(org.apache.mahout.math.hadoop.stochasticsvd.QJob$QMapper)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/QJob$QMapper$3/QJob$QMapper$3(org.apache.mahout.math.hadoop.stochasticsvd.QJob$QMapper)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/QJob$QMapper$1/QJob$QMapper$1(org.apache.mahout.math.hadoop.stochasticsvd.QJob$QMapper)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/Omega/Omega(long,int,int)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/get(java.lang.String)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/classifier/discriminative/LinearTrainer/train(org.apache.mahout.math.Vector,org.apache.mahout.math.Matrix)|",
    "called": "|java+constructor:///org/apache/mahout/math/CardinalityException/CardinalityException(int,int)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/Matrix/size()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/Vector/get(int)|",
      "|java+method:///org/apache/mahout/classifier/discriminative/LinearModel/classify(org.apache.mahout.math.Vector)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/math/Matrix/getColumn(int)|",
      "|java+constructor:///org/apache/mahout/classifier/discriminative/TrainingException/TrainingException(java.lang.String)|",
      "|java+method:///org/apache/mahout/classifier/discriminative/LinearTrainer/update(double,org.apache.mahout.math.Vector,org.apache.mahout.classifier.discriminative.LinearModel)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/math/CardinalityException/CardinalityException(int,int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/mahout/math/Vector/size()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/Vector/get(int)|",
      "|java+method:///org/apache/mahout/classifier/discriminative/LinearModel/classify(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/Matrix/columnSize()|",
      "|java+constructor:///org/apache/mahout/classifier/discriminative/TrainingException/TrainingException(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/CardinalityException/CardinalityException(int,int)|",
      "|java+method:///org/apache/mahout/classifier/discriminative/LinearTrainer/update(double,org.apache.mahout.math.Vector,org.apache.mahout.classifier.discriminative.LinearModel)|",
      "|java+method:///org/apache/mahout/math/Matrix/viewColumn(int)|",
      "|java+method:///org/apache/mahout/math/Vector/size()|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDPrototype$3/emitRow(int,org.apache.mahout.math.Vector)|",
    "called": "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(org.apache.mahout.math.Vector)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/Vector/addTo(org.apache.mahout.math.Vector)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(org.apache.mahout.math.Vector)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/Vector/assign(org.apache.mahout.math.Vector,org.apache.mahout.math.function.DoubleDoubleFunction)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(org.apache.mahout.math.Vector)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/lda/LDAInference/createPhiMatrix(int)|",
    "called": "|java+method:///org/apache/mahout/math/DenseMatrix/assign(double)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/DenseMatrix/getRow(int)|",
      "|java+method:///org/apache/mahout/clustering/lda/LDAState/getNumTopics()|",
      "|java+method:///org/apache/mahout/math/DenseMatrix/assign(double)|",
      "|java+constructor:///org/apache/mahout/math/DenseMatrix/DenseMatrix(int,int)|",
      "|java+method:///org/apache/mahout/math/Vector/size()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/clustering/lda/LDAState/getNumTopics()|",
      "|java+method:///org/apache/mahout/math/DenseMatrix/assign(double)|",
      "|java+constructor:///org/apache/mahout/math/DenseMatrix/DenseMatrix(int,int)|",
      "|java+method:///org/apache/mahout/math/DenseMatrix/rowSize()|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/run(java.lang.String%5B%5D)|",
    "called": "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(double%5B%5D,boolean)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/getConf()|",
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/setcUHalfSigma(boolean)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/getSingularValues()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/addOption(java.lang.String,java.lang.String,java.lang.String,boolean)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/setOverwrite(boolean)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/addOption(org.apache.commons.cli2.Option)|",
      "|java+method:///java/util/Arrays/copyOf(double%5B%5D,int)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/setMinSplitSize(int)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/close()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/parseArguments(java.lang.String%5B%5D)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/addInputOption()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/setcVHalfSigma(boolean)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/run()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/getUPath()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/keyFor(java.lang.String)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/getVPath()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/setComputeV(boolean)|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/overwriteOption()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/setComputeU(boolean)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile/createWriter(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/addOutputOption()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/SSVDSolver(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D,org.apache.hadoop.fs.Path,int,int,int,int)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/rename(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/addOption(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/mkdirs(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/io/NullWritable/get()|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(double%5B%5D,boolean)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/getConf()|",
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/getOutputPath()|",
      "|java+method:///java/lang/String/valueOf(boolean)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/getInputPath()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/getSingularValues()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/addOption(java.lang.String,java.lang.String,java.lang.String,boolean)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/setOverwrite(boolean)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/addOption(org.apache.commons.cli2.Option)|",
      "|java+method:///java/util/Arrays/copyOf(double%5B%5D,int)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/setMinSplitSize(int)|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/parseArguments(java.lang.String%5B%5D)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/addInputOption()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/setBroadcast(boolean)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/setcUHalfSigma(boolean)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/setAbtBlockHeight(int)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/setcVHalfSigma(boolean)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/run()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/getTempPath()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/getUPath()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/keyFor(java.lang.String)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/getVPath()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/setQ(int)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/setOuterBlockHeight(int)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/setComputeV(boolean)|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/overwriteOption()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/setComputeU(boolean)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/addOutputOption()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(java.lang.String)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile/createWriter(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/getOutputPath(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver/SSVDSolver(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D,org.apache.hadoop.fs.Path,int,int,int,int)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/rename(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli/addOption(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/mkdirs(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/lang/String/valueOf(int)|",
      "|java+method:///org/apache/hadoop/io/NullWritable/get()|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(double%5B%5D,boolean)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/vectorizer/encoders/FeatureVectorEncoder/hash(java.lang.String,java.lang.String,int,int)|",
    "called": "|java+method:///org/apache/mahout/math/MurmurHash/hash64A(byte%5B%5D,int)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/vectorizer/encoders/FeatureVectorEncoder/bytesForString(java.lang.String)|",
      "|java+method:///org/apache/mahout/vectorizer/encoders/MurmurHash/hash64A(byte%5B%5D,int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/vectorizer/encoders/FeatureVectorEncoder/bytesForString(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/MurmurHash/hash64A(byte%5B%5D,int)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/vectorizer/encoders/FeatureVectorEncoder/hash(byte%5B%5D,int,int)|",
    "called": "|java+method:///org/apache/mahout/math/MurmurHash/hash64A(byte%5B%5D,int)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/vectorizer/encoders/MurmurHash/hash64A(byte%5B%5D,int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/MurmurHash/hash64A(byte%5B%5D,int)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/cf/taste/hadoop/item/ItemFilterAsVectorAndPrefsReducer/reduce(org.apache.mahout.math.VarLongWritable,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)|",
    "called": "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(int,int)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/mahout/cf/taste/hadoop/TasteHadoopUtils/idToIndex(long)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/apache/mahout/math/Vector/set(int,double)|",
      "|java+method:///java/lang/Float/valueOf(float)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(int,int)|",
      "|java+method:///org/apache/mahout/math/VarLongWritable/get()|",
      "|java+constructor:///org/apache/mahout/math/VarIntWritable/VarIntWritable(int)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/apache/mahout/cf/taste/hadoop/item/VectorAndPrefsWritable/VectorAndPrefsWritable(org.apache.mahout.math.Vector,java.util.List,java.util.List)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/cf/taste/hadoop/TasteHadoopUtils/idToIndex(long)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/Float/valueOf(float)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(int,int)|",
      "|java+method:///org/apache/mahout/math/VarLongWritable/get()|",
      "|java+constructor:///org/apache/mahout/math/VarIntWritable/VarIntWritable(int)|",
      "|java+method:///org/apache/mahout/math/Vector/set(int,double)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/apache/mahout/cf/taste/hadoop/item/VectorAndPrefsWritable/VectorAndPrefsWritable(org.apache.mahout.math.Vector,java.util.List,java.util.List)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/vectorizer/encoders/CachingValueEncoder/cacheProbeLocations(int)|",
    "called": "|java+method:///org/apache/mahout/math/MurmurHash/hash64A(byte%5B%5D,int)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/vectorizer/encoders/CachingValueEncoder/getProbes()|",
      "|java+method:///org/apache/mahout/vectorizer/encoders/MurmurHash/hash64A(byte%5B%5D,int)|",
      "|java+method:///org/apache/mahout/vectorizer/encoders/CachingValueEncoder/getName()|",
      "|java+method:///org/apache/mahout/vectorizer/encoders/CachingValueEncoder/bytesForString(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/vectorizer/encoders/CachingValueEncoder/getProbes()|",
      "|java+method:///org/apache/mahout/math/MurmurHash/hash64A(byte%5B%5D,int)|",
      "|java+method:///org/apache/mahout/vectorizer/encoders/CachingValueEncoder/getName()|",
      "|java+method:///org/apache/mahout/vectorizer/encoders/CachingValueEncoder/bytesForString(java.lang.String)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/classifier/ResultAnalyzer/addInstance(java.lang.String,org.apache.mahout.classifier.ClassifierResult)|",
    "called": "|java+method:///org/apache/mahout/math/stats/OnlineSummarizer/add(double)|",
    "v1Body": [
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/mahout/classifier/ConfusionMatrix/addInstance(java.lang.String,org.apache.mahout.classifier.ClassifierResult)|",
      "|java+method:///org/apache/mahout/classifier/ClassifierResult/getLabel()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/mahout/classifier/ConfusionMatrix/addInstance(java.lang.String,org.apache.mahout.classifier.ClassifierResult)|",
      "|java+method:///org/apache/mahout/math/stats/OnlineSummarizer/add(double)|",
      "|java+method:///org/apache/mahout/classifier/ClassifierResult/getLogLikelihood()|",
      "|java+method:///org/apache/mahout/classifier/ClassifierResult/getLabel()|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmTrainer/trainBaumWelch(org.apache.mahout.classifier.sequencelearning.hmm.HmmModel,int%5B%5D,double,int,boolean)|",
    "called": "|java+constructor:///org/apache/mahout/math/DenseMatrix/DenseMatrix(int,int)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/Vector/getQuick(int)|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmAlgorithms/forwardAlgorithm(org.apache.mahout.math.Matrix,org.apache.mahout.classifier.sequencelearning.hmm.HmmModel,int%5B%5D,boolean)|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/assign(org.apache.mahout.classifier.sequencelearning.hmm.HmmModel)|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmTrainer/checkConvergence(org.apache.mahout.classifier.sequencelearning.hmm.HmmModel,org.apache.mahout.classifier.sequencelearning.hmm.HmmModel,double)|",
      "|java+constructor:///org/apache/mahout/math/DenseMatrix/DenseMatrix(int,int)|",
      "|java+method:///org/apache/mahout/math/Vector/setQuick(int,double)|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/getTransitionMatrix()|",
      "|java+method:///org/apache/mahout/math/Matrix/setQuick(int,int,double)|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/getNrOfOutputStates()|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmTrainer/logScaledBaumWelch(int%5B%5D,org.apache.mahout.classifier.sequencelearning.hmm.HmmModel,org.apache.mahout.math.Matrix,org.apache.mahout.math.Matrix)|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/clone()|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/getNrOfHiddenStates()|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/getEmissionMatrix()|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmAlgorithms/backwardAlgorithm(org.apache.mahout.math.Matrix,org.apache.mahout.classifier.sequencelearning.hmm.HmmModel,int%5B%5D,boolean)|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/getInitialProbabilities()|",
      "|java+constructor:///java/lang/UnknownError/UnknownError(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/Matrix/getQuick(int,int)|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmTrainer/unscaledBaumWelch(int%5B%5D,org.apache.mahout.classifier.sequencelearning.hmm.HmmModel,org.apache.mahout.math.Matrix,org.apache.mahout.math.Matrix)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/Vector/getQuick(int)|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmAlgorithms/forwardAlgorithm(org.apache.mahout.math.Matrix,org.apache.mahout.classifier.sequencelearning.hmm.HmmModel,int%5B%5D,boolean)|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/assign(org.apache.mahout.classifier.sequencelearning.hmm.HmmModel)|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmTrainer/checkConvergence(org.apache.mahout.classifier.sequencelearning.hmm.HmmModel,org.apache.mahout.classifier.sequencelearning.hmm.HmmModel,double)|",
      "|java+constructor:///org/apache/mahout/math/DenseMatrix/DenseMatrix(int,int)|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/getInitialProbabilities()|",
      "|java+method:///org/apache/mahout/math/Vector/setQuick(int,double)|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/getTransitionMatrix()|",
      "|java+method:///org/apache/mahout/math/Matrix/setQuick(int,int,double)|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/getNrOfOutputStates()|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmTrainer/logScaledBaumWelch(int%5B%5D,org.apache.mahout.classifier.sequencelearning.hmm.HmmModel,org.apache.mahout.math.Matrix,org.apache.mahout.math.Matrix)|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/clone()|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/getNrOfHiddenStates()|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmModel/getEmissionMatrix()|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmAlgorithms/backwardAlgorithm(org.apache.mahout.math.Matrix,org.apache.mahout.classifier.sequencelearning.hmm.HmmModel,int%5B%5D,boolean)|",
      "|java+method:///org/apache/mahout/math/Matrix/getQuick(int,int)|",
      "|java+method:///org/apache/mahout/classifier/sequencelearning/hmm/HmmTrainer/unscaledBaumWelch(int%5B%5D,org.apache.mahout.classifier.sequencelearning.hmm.HmmModel,org.apache.mahout.math.Matrix,org.apache.mahout.math.Matrix)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+constructor:///org/apache/mahout/common/iterator/FixedSizeSamplingIterator/FixedSizeSamplingIterator(int,java.util.Iterator)|",
    "called": "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///com/google/common/collect/ForwardingIterator/ForwardingIterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/Random/nextInt(int)|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/List/set(int,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/google/common/collect/Lists/newArrayListWithCapacity(int)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///com/google/common/collect/ForwardingIterator/ForwardingIterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/Random/nextInt(int)|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/List/set(int,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/UpperTriangular/UpperTriangular(int)|",
    "called": "|java+constructor:///org/apache/mahout/math/AbstractMatrix/AbstractMatrix(int,int)|",
    "v1Body": [
      "|java+constructor:///org/apache/mahout/math/AbstractMatrix/AbstractMatrix()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/mahout/math/AbstractMatrix/AbstractMatrix(int,int)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+constructor:///org/apache/mahout/clustering/AbstractCluster/AbstractCluster(org.apache.mahout.math.Vector,org.apache.mahout.math.Vector,int)|",
    "called": "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(org.apache.mahout.math.Vector)|",
    "v1Body": [
      "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(org.apache.mahout.math.Vector)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/clustering/AbstractCluster/setNumPoints(long)|",
      "|java+method:///org/apache/mahout/clustering/AbstractCluster/setCenter(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/clustering/AbstractCluster/setRadius(org.apache.mahout.math.Vector)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDPrototype$4/emitRow(int,org.apache.mahout.math.Vector)|",
    "called": "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(org.apache.mahout.math.Vector)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/Vector/addTo(org.apache.mahout.math.Vector)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(org.apache.mahout.math.Vector)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/Vector/assign(org.apache.mahout.math.Vector,org.apache.mahout.math.function.DoubleDoubleFunction)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(org.apache.mahout.math.Vector)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/vectorizer/encoders/FeatureVectorEncoder/hash(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int)|",
    "called": "|java+method:///org/apache/mahout/math/MurmurHash/hash64A(byte%5B%5D,int)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/vectorizer/encoders/FeatureVectorEncoder/bytesForString(java.lang.String)|",
      "|java+method:///org/apache/mahout/vectorizer/encoders/MurmurHash/hash64A(byte%5B%5D,int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/vectorizer/encoders/FeatureVectorEncoder/bytesForString(java.lang.String)|",
      "|java+method:///org/apache/mahout/math/MurmurHash/hash64A(byte%5B%5D,int)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+constructor:///org/apache/mahout/clustering/AbstractCluster/AbstractCluster(org.apache.mahout.math.Vector,int)|",
    "called": "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(org.apache.mahout.math.Vector)|",
    "v1Body": [
      "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/Vector/like()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/clustering/AbstractCluster/setNumPoints(long)|",
      "|java+method:///org/apache/mahout/clustering/AbstractCluster/setCenter(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/clustering/AbstractCluster/setRadius(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/Vector/like()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/ClusterClassifier/classify(org.apache.mahout.math.Vector)|",
    "called": "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(int)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/mahout/math/Vector/assign(org.apache.mahout.math.function.DoubleDoubleFunction,double)|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/apache/mahout/math/Vector/set(int,double)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/SoftCluster/getMeasure()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/mahout/math/Vector/zSum()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/mahout/common/distance/DistanceMeasure/distance(org.apache.mahout.math.Vector,org.apache.mahout.math.Vector)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansClusterer/computePi(java.util.Collection,java.util.List)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/mahout/math/function/TimesFunction/TimesFunction()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansClusterer/FuzzyKMeansClusterer()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(int)|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+method:///org/apache/mahout/clustering/Cluster/pdf(java.lang.Object)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/SoftCluster/getCenter()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/Vector/assign(org.apache.mahout.math.function.DoubleDoubleFunction,double)|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/SoftCluster/getMeasure()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/mahout/math/Vector/zSum()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/mahout/common/distance/DistanceMeasure/distance(org.apache.mahout.math.Vector,org.apache.mahout.math.Vector)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansClusterer/computePi(java.util.Collection,java.util.List)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/mahout/math/function/TimesFunction/TimesFunction()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansClusterer/FuzzyKMeansClusterer()|",
      "|java+method:///org/apache/mahout/math/Vector/set(int,double)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(int)|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+method:///org/apache/mahout/clustering/Cluster/pdf(java.lang.Object)|",
      "|java+method:///org/apache/mahout/clustering/fuzzykmeans/SoftCluster/getCenter()|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/classifier/AbstractVectorClassifier/classify(org.apache.mahout.math.Matrix)|",
    "called": "|java+constructor:///org/apache/mahout/math/DenseMatrix/DenseMatrix(int,int)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/classifier/AbstractVectorClassifier/classify(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/classifier/AbstractVectorClassifier/numCategories()|",
      "|java+method:///org/apache/mahout/math/Matrix/getRow(int)|",
      "|java+method:///org/apache/mahout/math/Matrix/numRows()|",
      "|java+method:///org/apache/mahout/math/Matrix/assignRow(int,org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/mahout/math/DenseMatrix/DenseMatrix(int,int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/classifier/AbstractVectorClassifier/classify(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/classifier/AbstractVectorClassifier/numCategories()|",
      "|java+method:///org/apache/mahout/math/Matrix/viewRow(int)|",
      "|java+method:///org/apache/mahout/math/Matrix/numRows()|",
      "|java+method:///org/apache/mahout/math/Matrix/assignRow(int,org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/mahout/math/DenseMatrix/DenseMatrix(int,int)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/classifier/ResultAnalyzer/toString()|",
    "called": "|java+method:///org/apache/mahout/math/stats/OnlineSummarizer/getQuartile(int)|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/text/DecimalFormat/DecimalFormat(java.lang.String)|",
      "|java+method:///java/lang/Integer/toString(int)|",
      "|java+method:///org/apache/commons/lang/StringUtils/leftPad(java.lang.String,int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(char)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/text/NumberFormat/format(double)|",
      "|java+method:///org/apache/commons/lang/StringUtils/rightPad(java.lang.String,int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/stats/OnlineSummarizer/getMean()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/text/DecimalFormat/DecimalFormat(java.lang.String)|",
      "|java+method:///java/lang/Integer/toString(int)|",
      "|java+method:///org/apache/commons/lang/StringUtils/leftPad(java.lang.String,int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/math/stats/OnlineSummarizer/getQuartile(int)|",
      "|java+method:///java/lang/StringBuilder/append(char)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/text/NumberFormat/format(double)|",
      "|java+method:///java/lang/StringBuilder/append(double)|",
      "|java+method:///org/apache/commons/lang/StringUtils/rightPad(java.lang.String,int)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+constructor:///org/apache/mahout/cf/taste/impl/common/SamplingLongPrimitiveIterator/SamplingLongPrimitiveIterator(org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator,double)|",
    "called": "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
    "v1Body": [
      "|java+constructor:///org/apache/mahout/cf/taste/impl/common/AbstractLongPrimitiveIterator/AbstractLongPrimitiveIterator()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/common/SamplingLongPrimitiveIterator/doNext()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/mahout/cf/taste/impl/common/AbstractLongPrimitiveIterator/AbstractLongPrimitiveIterator()|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/common/SamplingLongPrimitiveIterator/doNext()|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/classifier/AbstractVectorClassifier/classifyScalar(org.apache.mahout.math.Matrix)|",
    "called": "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(int)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/classifier/AbstractVectorClassifier/numCategories()|",
      "|java+method:///org/apache/mahout/math/Vector/set(int,double)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/Matrix/getRow(int)|",
      "|java+method:///org/apache/mahout/math/Matrix/numRows()|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(int)|",
      "|java+method:///org/apache/mahout/classifier/AbstractVectorClassifier/classifyScalar(org.apache.mahout.math.Vector)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/classifier/AbstractVectorClassifier/numCategories()|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/Matrix/numRows()|",
      "|java+method:///org/apache/mahout/math/Vector/set(int,double)|",
      "|java+method:///org/apache/mahout/math/Matrix/viewRow(int)|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(int)|",
      "|java+method:///org/apache/mahout/classifier/AbstractVectorClassifier/classifyScalar(org.apache.mahout.math.Vector)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer/factorize()|",
    "called": "|java+constructor:///org/apache/mahout/math/als/AlternatingLeastSquaresSolver/AlternatingLeastSquaresSolver()|",
    "v1Body": [
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer/createFactorization(double%5B%5D%5B%5D,double%5B%5D%5B%5D)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/common/FastIDSet/iterator()|",
      "|java+constructor:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer$Features/ALSWRFactorizer$Features(org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/mahout/cf/taste/model/DataModel/getUserIDs()|",
      "|java+method:///org/apache/mahout/cf/taste/model/DataModel/getNumItems()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer$Features/getM()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer/createQueue()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/concurrent/ExecutorService/execute(java.lang.Runnable)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/mahout/cf/taste/model/DataModel/getPreferencesForItem(long)|",
      "|java+method:///org/apache/mahout/cf/taste/model/DataModel/getItemIDsFromUser(long)|",
      "|java+method:///org/apache/mahout/cf/taste/model/DataModel/getItemIDs()|",
      "|java+constructor:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer$2/ALSWRFactorizer$2(org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer,org.apache.mahout.cf.taste.model.PreferenceArray,org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$Features,org.apache.mahout.math.als.AlternateLeastSquaresSolver,long)|",
      "|java+method:///org/apache/mahout/cf/taste/model/DataModel/getPreferencesFromUser(long)|",
      "|java+constructor:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer$1/ALSWRFactorizer$1(org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer,org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator,org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$Features,org.apache.mahout.math.als.AlternateLeastSquaresSolver,org.apache.mahout.cf.taste.model.PreferenceArray,long)|",
      "|java+method:///java/util/concurrent/ExecutorService/shutdown()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/common/LongPrimitiveIterator/hasNext()|",
      "|java+constructor:///org/apache/mahout/math/als/AlternateLeastSquaresSolver/AlternateLeastSquaresSolver()|",
      "|java+method:///java/util/concurrent/ExecutorService/awaitTermination(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///org/apache/mahout/cf/taste/model/DataModel/getNumUsers()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer$Features/getU()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/common/LongPrimitiveIterator/nextLong()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer/createFactorization(double%5B%5D%5B%5D,double%5B%5D%5B%5D)|",
      "|java+constructor:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer$2/ALSWRFactorizer$2(org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer,org.apache.mahout.cf.taste.model.PreferenceArray,org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$Features,org.apache.mahout.math.als.AlternatingLeastSquaresSolver,long)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/mahout/cf/taste/model/DataModel/getItemIDs()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/common/FastIDSet/iterator()|",
      "|java+constructor:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer$Features/ALSWRFactorizer$Features(org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/mahout/cf/taste/model/DataModel/getUserIDs()|",
      "|java+method:///org/apache/mahout/cf/taste/model/DataModel/getNumItems()|",
      "|java+constructor:///org/apache/mahout/math/als/AlternatingLeastSquaresSolver/AlternatingLeastSquaresSolver()|",
      "|java+method:///org/apache/mahout/cf/taste/model/DataModel/getPreferencesFromUser(long)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer$Features/getM()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer/createQueue()|",
      "|java+constructor:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer$1/ALSWRFactorizer$1(org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer,org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator,org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$Features,org.apache.mahout.math.als.AlternatingLeastSquaresSolver,org.apache.mahout.cf.taste.model.PreferenceArray,long)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/concurrent/ExecutorService/execute(java.lang.Runnable)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/mahout/cf/taste/model/DataModel/getPreferencesForItem(long)|",
      "|java+method:///org/apache/mahout/cf/taste/model/DataModel/getItemIDsFromUser(long)|",
      "|java+method:///java/util/concurrent/ExecutorService/shutdown()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/common/LongPrimitiveIterator/hasNext()|",
      "|java+method:///java/util/concurrent/ExecutorService/awaitTermination(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///org/apache/mahout/cf/taste/model/DataModel/getNumUsers()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer$Features/getU()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/common/LongPrimitiveIterator/nextLong()|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/kmeans/RandomSeedGenerator/buildRandom(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,org.apache.mahout.common.distance.DistanceMeasure)|",
    "called": "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
    "v1Body": [
      "|java+method:///org/apache/mahout/common/HadoopUtil/delete(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/getFileStatus(org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/isDir()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileIterable/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/clustering/kmeans/Cluster/Cluster(org.apache.mahout.math.Vector,int,org.apache.mahout.common.distance.DistanceMeasure)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile/createWriter(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileIterable/SequenceFileIterable(org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/remove(int)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/close()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/logsCRCFilter()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/createNewFile(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/util/Random/nextInt(int)|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/Cluster/observe(org.apache.mahout.math.Vector,double)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/common/HadoopUtil/delete(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path%5B%5D)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/getFileStatus(org.apache.hadoop.fs.Path)|",
      "|java+method:///com/google/common/collect/Lists/newArrayListWithCapacity(int)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/fs/Path/toUri()|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileIterable/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/clustering/kmeans/Cluster/Cluster(org.apache.mahout.math.Vector,int,org.apache.mahout.common.distance.DistanceMeasure)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/globStatus(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile/createWriter(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileIterable/SequenceFileIterable(org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/getPath()|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/remove(int)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/PathFilters/logsCRCFilter()|",
      "|java+method:///org/apache/hadoop/fs/FileStatus/isDir()|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/createNewFile(org.apache.hadoop.fs.Path)|",
      "|java+method:///java/util/Random/nextInt(int)|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/Cluster/observe(org.apache.mahout.math.Vector,double)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/hadoop/io/Text/Text(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/Pair/getSecond()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/spectral/eigencuts/EigencutsDriver/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int,double,double,double)|",
    "called": "|java+constructor:///org/apache/mahout/math/decomposer/lanczos/LanczosState/LanczosState(org.apache.mahout.math.VectorIterable,int,org.apache.mahout.math.Vector)|",
    "v1Body": [
      "|java+constructor:///org/apache/mahout/math/decomposer/lanczos/LanczosState/LanczosState(org.apache.mahout.math.VectorIterable,int,int,org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/decomposer/lanczos/LanczosState/getSingularValue(int)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/clustering/spectral/common/MatrixDiagonalizeJob/runJob(org.apache.hadoop.fs.Path,int)|",
      "|java+method:///org/apache/mahout/clustering/spectral/eigencuts/EigencutsDriver/median(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/clustering/spectral/eigencuts/EigencutsSensitivityJob/runJob(org.apache.mahout.math.Vector,org.apache.mahout.math.Vector,org.apache.hadoop.fs.Path,double,double,double,double,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/getRowPath()|",
      "|java+method:///java/util/List/set(int,java.lang.Object)|",
      "|java+method:///org/apache/mahout/clustering/spectral/common/VectorMatrixMultiplicationJob/runJob(org.apache.hadoop.fs.Path,org.apache.mahout.math.Vector,org.apache.hadoop.fs.Path)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/DistributedLanczosSolver()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/clustering/spectral/common/AffinityMatrixInputJob/runJob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int)|",
      "|java+method:///java/lang/Long/toString(long)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/clustering/spectral/eigencuts/EigencutsDriver/performEigenDecomposition(org.apache.hadoop.conf.Configuration,org.apache.mahout.math.hadoop.DistributedRowMatrix,org.apache.mahout.math.decomposer.lanczos.LanczosState,int,int,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/clustering/spectral/eigencuts/EigencutsDriver/listToVector(java.util.Collection)|",
      "|java+method:///org/apache/mahout/clustering/spectral/eigencuts/EigencutsAffinityCutsJob/runjob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/getInitialVector(org.apache.mahout.math.VectorIterable)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/clustering/spectral/common/VectorMatrixMultiplicationJob/runJob(org.apache.hadoop.fs.Path,org.apache.mahout.math.Vector,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/math/decomposer/lanczos/LanczosState/getSingularValue(int)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/clustering/spectral/common/MatrixDiagonalizeJob/runJob(org.apache.hadoop.fs.Path,int)|",
      "|java+method:///org/apache/mahout/clustering/spectral/eigencuts/EigencutsDriver/median(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/clustering/spectral/eigencuts/EigencutsSensitivityJob/runJob(org.apache.mahout.math.Vector,org.apache.mahout.math.Vector,org.apache.hadoop.fs.Path,double,double,double,double,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/getRowPath()|",
      "|java+method:///java/util/List/set(int,java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/math/decomposer/lanczos/LanczosState/LanczosState(org.apache.mahout.math.VectorIterable,int,org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/DistributedLanczosSolver()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/clustering/spectral/common/AffinityMatrixInputJob/runJob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int)|",
      "|java+method:///java/lang/Long/toString(long)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/apache/mahout/clustering/spectral/eigencuts/EigencutsDriver/performEigenDecomposition(org.apache.hadoop.conf.Configuration,org.apache.mahout.math.hadoop.DistributedRowMatrix,org.apache.mahout.math.decomposer.lanczos.LanczosState,int,int,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/clustering/spectral/eigencuts/EigencutsDriver/listToVector(java.util.Collection)|",
      "|java+method:///org/apache/mahout/clustering/spectral/eigencuts/EigencutsAffinityCutsJob/runjob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/getInitialVector(org.apache.mahout.math.VectorIterable)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/cf/taste/impl/similarity/LogLikelihoodSimilarity/userSimilarity(long,long)|",
    "called": "|java+method:///org/apache/mahout/math/stats/LogLikelihood/logLikelihoodRatio(long,long,long,long)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/stats/LogLikelihood/logLikelihoodRatio(int,int,int,int)|",
      "|java+method:///org/apache/mahout/cf/taste/model/DataModel/getNumItems()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/common/FastIDSet/intersectionSize(org.apache.mahout.cf.taste.impl.common.FastIDSet)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/common/FastIDSet/size()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/similarity/LogLikelihoodSimilarity/getDataModel()|",
      "|java+method:///org/apache/mahout/cf/taste/model/DataModel/getItemIDsFromUser(long)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/cf/taste/model/DataModel/getNumItems()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/common/FastIDSet/intersectionSize(org.apache.mahout.cf.taste.impl.common.FastIDSet)|",
      "|java+method:///org/apache/mahout/math/stats/LogLikelihood/logLikelihoodRatio(long,long,long,long)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/common/FastIDSet/size()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/similarity/LogLikelihoodSimilarity/getDataModel()|",
      "|java+method:///org/apache/mahout/cf/taste/model/DataModel/getItemIDsFromUser(long)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/vectorizer/common/PartialVectorMergeReducer/reduce(org.apache.hadoop.io.WritableComparable,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)|",
    "called": "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(int,int)|",
    "v1Body": [
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/math/Vector/addTo(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///org/apache/mahout/math/Vector/normalize(double)|",
      "|java+method:///org/apache/mahout/math/Vector/logNormalize(double)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(int,int)|",
      "|java+constructor:///org/apache/mahout/math/NamedVector/NamedVector(org.apache.mahout.math.Vector,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/SequentialAccessSparseVector/SequentialAccessSparseVector(org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///org/apache/mahout/math/Vector/normalize(double)|",
      "|java+method:///org/apache/mahout/math/Vector/logNormalize(double)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(int,int)|",
      "|java+constructor:///org/apache/mahout/math/NamedVector/NamedVector(org.apache.mahout.math.Vector,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/SequentialAccessSparseVector/SequentialAccessSparseVector(org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/Vector/assign(org.apache.mahout.math.Vector,org.apache.mahout.math.function.DoubleDoubleFunction)|",
      "|java+method:///java/lang/Object/toString()|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/vectorizer/term/TFPartialVectorReducer/reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)|",
    "called": "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(int,int)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/Vector/getQuick(int)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/lucene/analysis/shingle/ShingleFilter/ShingleFilter(org.apache.lucene.analysis.TokenStream,int)|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/getAttribute(java.lang.Class)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/apache/mahout/common/lucene/IteratorTokenStream/IteratorTokenStream(java.util.Iterator)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/Vector/getNumNondefaultElements()|",
      "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(int,int)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/containsKey(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/math/SequentialAccessSparseVector/SequentialAccessSparseVector(org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/getCounter(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/get(java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/StringTuple/getEntries()|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/mahout/math/Vector/setQuick(int,double)|",
      "|java+method:///org/apache/hadoop/mapreduce/Counter/increment(long)|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/incrementToken()|",
      "|java+constructor:///org/apache/mahout/math/NamedVector/NamedVector(org.apache.mahout.math.Vector,java.lang.String)|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/close()|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/end()|",
      "|java+method:///org/apache/mahout/common/StringTuple/length()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/Vector/getQuick(int)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/lucene/analysis/shingle/ShingleFilter/ShingleFilter(org.apache.lucene.analysis.TokenStream,int)|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/getAttribute(java.lang.Class)|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/apache/mahout/common/lucene/IteratorTokenStream/IteratorTokenStream(java.util.Iterator)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/Vector/getNumNondefaultElements()|",
      "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(int,int)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/containsKey(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/math/SequentialAccessSparseVector/SequentialAccessSparseVector(org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/getCounter(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/get(java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/StringTuple/getEntries()|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/mahout/math/Vector/setQuick(int,double)|",
      "|java+method:///org/apache/hadoop/mapreduce/Counter/increment(long)|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/incrementToken()|",
      "|java+constructor:///org/apache/mahout/math/NamedVector/NamedVector(org.apache.mahout.math.Vector,java.lang.String)|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/end()|",
      "|java+method:///org/apache/mahout/common/StringTuple/length()|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/clustering/spectral/kmeans/SpectralKMeansDriver/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int,org.apache.mahout.common.distance.DistanceMeasure,double,int)|",
    "called": "|java+constructor:///org/apache/mahout/math/decomposer/lanczos/LanczosState/LanczosState(org.apache.mahout.math.VectorIterable,int,org.apache.mahout.math.Vector)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/clustering/kmeans/RandomSeedGenerator/buildRandom(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,org.apache.mahout.common.distance.DistanceMeasure)|",
      "|java+constructor:///org/apache/mahout/math/decomposer/lanczos/LanczosState/LanczosState(org.apache.mahout.math.VectorIterable,int,int,org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/getCleanedEigensPath()|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///org/apache/mahout/common/iterator/sequencefile/SequenceFileIterable/iterator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/clustering/spectral/common/MatrixDiagonalizeJob/runJob(org.apache.hadoop.fs.Path,int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/getRowPath()|",
      "|java+method:///org/apache/hadoop/io/IntWritable/get()|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/transpose()|",
      "|java+constructor:///org/apache/mahout/common/iterator/sequencefile/SequenceFileIterable/SequenceFileIterable(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/runJob(org.apache.hadoop.conf.Configuration,org.apache.mahout.math.decomposer.lanczos.LanczosState,int,boolean,java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/spectral/common/VectorMatrixMultiplicationJob/runJob(org.apache.hadoop.fs.Path,org.apache.mahout.math.Vector,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int)|",
      "|java+method:///org/apache/mahout/common/Pair/getFirst()|",
      "|java+constructor:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/EigenVerificationJob()|",
      "|java+constructor:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/DistributedLanczosSolver()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/clustering/spectral/common/UnitVectorizerJob/runJob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/runJob(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,boolean,double,double,int)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansDriver/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.mahout.common.distance.DistanceMeasure,double,int,boolean,boolean)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/spectral/common/AffinityMatrixInputJob/runJob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/getInitialVector(org.apache.mahout.math.VectorIterable)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/clustering/kmeans/RandomSeedGenerator/buildRandom(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,org.apache.mahout.common.distance.DistanceMeasure)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/getCleanedEigensPath()|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/clustering/spectral/common/MatrixDiagonalizeJob/runJob(org.apache.hadoop.fs.Path,int)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/getRowPath()|",
      "|java+method:///org/apache/mahout/clustering/spectral/common/VectorMatrixMultiplicationJob/runJob(org.apache.hadoop.fs.Path,org.apache.mahout.math.Vector,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/runJob(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,boolean,double,int)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/transpose()|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/runJob(org.apache.hadoop.conf.Configuration,org.apache.mahout.math.decomposer.lanczos.LanczosState,int,boolean,java.lang.String)|",
      "|java+method:///org/apache/hadoop/fs/Path/toString()|",
      "|java+constructor:///org/apache/mahout/math/decomposer/lanczos/LanczosState/LanczosState(org.apache.mahout.math.VectorIterable,int,org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/decomposer/EigenVerificationJob/EigenVerificationJob()|",
      "|java+constructor:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/DistributedLanczosSolver()|",
      "|java+method:///org/apache/mahout/clustering/spectral/common/UnitVectorizerJob/runJob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/clustering/kmeans/KMeansDriver/run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.mahout.common.distance.DistanceMeasure,double,int,boolean,boolean)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/mahout/clustering/spectral/common/AffinityMatrixInputJob/runJob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/getInitialVector(org.apache.mahout.math.VectorIterable)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/classifier/AbstractVectorClassifier/classifyFull(org.apache.mahout.math.Matrix)|",
    "called": "|java+constructor:///org/apache/mahout/math/DenseMatrix/DenseMatrix(int,int)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/classifier/AbstractVectorClassifier/numCategories()|",
      "|java+method:///org/apache/mahout/math/Matrix/viewRow(int)|",
      "|java+method:///org/apache/mahout/math/Matrix/getRow(int)|",
      "|java+constructor:///org/apache/mahout/math/DenseMatrix/DenseMatrix(int,int)|",
      "|java+method:///org/apache/mahout/math/Matrix/numRows()|",
      "|java+method:///org/apache/mahout/classifier/AbstractVectorClassifier/classifyFull(org.apache.mahout.math.Vector,org.apache.mahout.math.Vector)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/classifier/AbstractVectorClassifier/numCategories()|",
      "|java+method:///org/apache/mahout/math/Matrix/viewRow(int)|",
      "|java+constructor:///org/apache/mahout/math/DenseMatrix/DenseMatrix(int,int)|",
      "|java+method:///org/apache/mahout/math/Matrix/numRows()|",
      "|java+method:///org/apache/mahout/classifier/AbstractVectorClassifier/classifyFull(org.apache.mahout.math.Vector,org.apache.mahout.math.Vector)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDPrototype/testThinQr(int,int)|",
    "called": "|java+method:///org/apache/mahout/math/DenseMatrix/viewRow(int)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/DenseMatrix/getRow(int)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDPrototype/SSVDPrototype(long,int,int)|",
      "|java+method:///org/apache/mahout/math/Vector/getQuick(int)|",
      "|java+constructor:///org/apache/mahout/math/SingularValueDecomposition/SingularValueDecomposition(org.apache.mahout.math.Matrix)|",
      "|java+constructor:///org/apache/mahout/math/ssvd/EigenSolverWrapper/EigenSolverWrapper(double%5B%5D%5B%5D)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/PartialRowEmitter/emitRow(int,org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/DenseMatrix/columnSize()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDPrototype/firstPass(org.apache.mahout.math.Vector)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Random/nextLong()|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDPrototype$1/SSVDPrototype$1(java.util.Map)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/apache/mahout/math/Vector/size()|",
      "|java+method:///java/util/Random/nextDouble()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/Vector/times(double)|",
      "|java+method:///java/io/PrintStream/println()|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///org/apache/mahout/math/SingularValueDecomposition/getSingularValues()|",
      "|java+method:///org/apache/mahout/math/DenseMatrix/setQuick(int,int,double)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDPrototype/finishFirstPass()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDPrototype/secondPass(org.apache.mahout.math.Vector,org.apache.mahout.math.hadoop.stochasticsvd.PartialRowEmitter)|",
      "|java+method:///org/apache/mahout/math/ssvd/EigenSolverWrapper/getEigenValues()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///org/apache/mahout/math/DenseMatrix/DenseMatrix(int,int)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDPrototype$2/SSVDPrototype$2(java.util.Map)|",
      "|java+method:///java/io/PrintStream/printf(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/apache/mahout/math/DenseMatrix/set(int,int,double)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///java/lang/Math/sqrt(double)|",
      "|java+method:///org/apache/mahout/math/DenseMatrix/rowSize()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/Vector/getQuick(int)|",
      "|java+constructor:///org/apache/mahout/math/SingularValueDecomposition/SingularValueDecomposition(org.apache.mahout.math.Matrix)|",
      "|java+constructor:///org/apache/mahout/math/ssvd/EigenSolverWrapper/EigenSolverWrapper(double%5B%5D%5B%5D)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/PartialRowEmitter/emitRow(int,org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/DenseMatrix/columnSize()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDPrototype/firstPass(org.apache.mahout.math.Vector)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Random/nextLong()|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDPrototype$1/SSVDPrototype$1(java.util.Map)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDPrototype/SSVDPrototype(long,int,int)|",
      "|java+method:///java/util/Random/nextDouble()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/Vector/times(double)|",
      "|java+method:///java/io/PrintStream/println()|",
      "|java+method:///org/apache/mahout/common/RandomUtils/getRandom()|",
      "|java+method:///org/apache/mahout/math/SingularValueDecomposition/getSingularValues()|",
      "|java+method:///org/apache/mahout/math/DenseMatrix/setQuick(int,int,double)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDPrototype/finishFirstPass()|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDPrototype/secondPass(org.apache.mahout.math.Vector,org.apache.mahout.math.hadoop.stochasticsvd.PartialRowEmitter)|",
      "|java+method:///org/apache/mahout/math/ssvd/EigenSolverWrapper/getEigenValues()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///org/apache/mahout/math/DenseMatrix/DenseMatrix(int,int)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDPrototype$2/SSVDPrototype$2(java.util.Map)|",
      "|java+method:///java/io/PrintStream/printf(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/apache/mahout/math/DenseMatrix/set(int,int,double)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///java/lang/Math/sqrt(double)|",
      "|java+method:///org/apache/mahout/math/DenseMatrix/rowSize()|",
      "|java+method:///org/apache/mahout/math/Vector/size()|",
      "|java+method:///org/apache/mahout/math/DenseMatrix/viewRow(int)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/UpperTriangular/assignColumn(int,org.apache.mahout.math.Vector)|",
    "called": "|java+constructor:///org/apache/mahout/math/IndexException/IndexException(int,int)|",
    "v1Body": [
      "|java+constructor:///java/lang/UnsupportedOperationException/UnsupportedOperationException()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/UpperTriangular/columnSize()|",
      "|java+method:///org/apache/mahout/math/Vector$Element/index()|",
      "|java+method:///org/apache/mahout/math/Vector/iterator()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/IndexException/IndexException(int,int)|",
      "|java+method:///org/apache/mahout/math/Vector/viewPart(int,int)|",
      "|java+method:///org/apache/mahout/math/Vector/size()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/math/Vector$Element/get()|",
      "|java+method:///org/apache/mahout/math/Vector/norm(double)|",
      "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/UpperTriangular/setQuick(int,int,double)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/MatrixMultiplicationJob$MatrixMultiplicationReducer/reduce(org.apache.hadoop.io.IntWritable,java.util.Iterator,org.apache.hadoop.mapred.OutputCollector,org.apache.hadoop.mapred.Reporter)|",
    "called": "|java+constructor:///org/apache/mahout/math/SequentialAccessSparseVector/SequentialAccessSparseVector(org.apache.mahout.math.Vector)|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/math/Vector/addTo(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/mahout/math/SequentialAccessSparseVector/SequentialAccessSparseVector(org.apache.mahout.math.Vector)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/Vector/assign(org.apache.mahout.math.Vector,org.apache.mahout.math.function.DoubleDoubleFunction)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/mahout/math/SequentialAccessSparseVector/SequentialAccessSparseVector(org.apache.mahout.math.Vector)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+constructor:///org/apache/mahout/classifier/ResultAnalyzer/ResultAnalyzer(java.util.Collection,java.lang.String)|",
    "called": "|java+constructor:///org/apache/mahout/math/stats/OnlineSummarizer/OnlineSummarizer()|",
    "v1Body": [
      "|java+constructor:///org/apache/mahout/classifier/ConfusionMatrix/ConfusionMatrix(java.util.Collection,java.lang.String)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/mahout/classifier/ConfusionMatrix/ConfusionMatrix(java.util.Collection,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/stats/OnlineSummarizer/OnlineSummarizer()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/serializeOutput(org.apache.mahout.math.decomposer.lanczos.LanczosState,org.apache.hadoop.fs.Path)|",
    "called": "|java+constructor:///org/apache/mahout/math/NamedVector/NamedVector(org.apache.mahout.math.Vector,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/decomposer/lanczos/LanczosState/getSingularValue(int)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/IntWritable/set(int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/getConf()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable()|",
      "|java+constructor:///org/apache/mahout/math/NamedVector/NamedVector(org.apache.mahout.math.Vector,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/close()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/mahout/math/decomposer/lanczos/LanczosState/getRightSingularVector(int)|",
      "|java+method:///org/apache/mahout/math/decomposer/lanczos/LanczosState/getIterationNumber()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/decomposer/lanczos/LanczosState/getSingularValue(int)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/IntWritable/set(int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/getConf()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/io/IntWritable/IntWritable()|",
      "|java+constructor:///org/apache/mahout/math/NamedVector/NamedVector(org.apache.mahout.math.Vector,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/io/SequenceFile$Writer/append(org.apache.hadoop.io.Writable,org.apache.hadoop.io.Writable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/io/SequenceFile$Writer/SequenceFile$Writer(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/mahout/math/decomposer/lanczos/LanczosState/getRightSingularVector(int)|",
      "|java+method:///org/apache/mahout/math/decomposer/lanczos/LanczosState/getIterationNumber()|",
      "|java+method:///org/apache/hadoop/fs/FileSystem/get(org.apache.hadoop.conf.Configuration)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/common/distance/MahalanobisDistanceMeasure/distance(org.apache.mahout.math.Vector)|",
    "called": "|java+method:///org/apache/mahout/math/Algebra/mult(org.apache.mahout.math.Matrix,org.apache.mahout.math.Vector)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/Algebra/mult(org.apache.mahout.math.Matrix,org.apache.mahout.math.Vector)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/Vector/minus(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/Vector/dot(org.apache.mahout.math.Vector)|",
      "|java+method:///java/lang/Math/sqrt(double)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/Algebra/mult(org.apache.mahout.math.Matrix,org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/Vector/minus(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/Vector/dot(org.apache.mahout.math.Vector)|",
      "|java+method:///java/lang/Math/sqrt(double)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/TransposeJob$TransposeMapper/map(org.apache.hadoop.io.IntWritable,org.apache.mahout.math.VectorWritable,org.apache.hadoop.mapred.OutputCollector,org.apache.hadoop.mapred.Reporter)|",
    "called": "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(int,int)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/Vector$Element/index()|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix$MatrixEntryWritable/setVal(double)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix$MatrixEntryWritable/setCol(int)|",
      "|java+method:///org/apache/mahout/math/Vector/iterateNonZero()|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/math/Vector$Element/get()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/io/IntWritable/set(int)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix$MatrixEntryWritable/DistributedRowMatrix$MatrixEntryWritable()|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix$MatrixEntryWritable/setRow(int)|",
      "|java+method:///org/apache/hadoop/io/IntWritable/get()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/mahout/math/Vector$Element/index()|",
      "|java+method:///org/apache/mahout/math/VectorWritable/get()|",
      "|java+method:///org/apache/mahout/math/RandomAccessSparseVector/setQuick(int,double)|",
      "|java+method:///org/apache/mahout/math/Vector/iterateNonZero()|",
      "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(int,int)|",
      "|java+method:///org/apache/hadoop/io/IntWritable/get()|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/math/Vector$Element/get()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/io/IntWritable/set(int)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/run(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int,boolean,int)|",
    "called": "|java+constructor:///org/apache/mahout/math/decomposer/lanczos/LanczosState/LanczosState(org.apache.mahout.math.VectorIterable,int,org.apache.mahout.math.Vector)|",
    "v1Body": [
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/getConf()|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/serializeOutput(org.apache.mahout.math.decomposer.lanczos.LanczosState,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/solve(org.apache.mahout.math.decomposer.lanczos.LanczosState,int,boolean)|",
      "|java+constructor:///org/apache/mahout/math/decomposer/lanczos/LanczosState/LanczosState(org.apache.mahout.math.VectorIterable,int,int,org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/decomposer/HdfsBackedLanczosState/HdfsBackedLanczosState(org.apache.mahout.math.VectorIterable,int,int,org.apache.mahout.math.Vector,org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/HdfsBackedLanczosState/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/getInitialVector(org.apache.mahout.math.VectorIterable)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/getConf()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/solve(org.apache.mahout.math.decomposer.lanczos.LanczosState,int,boolean)|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration()|",
      "|java+constructor:///org/apache/hadoop/conf/Configuration/Configuration(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/decomposer/HdfsBackedLanczosState/HdfsBackedLanczosState(org.apache.mahout.math.VectorIterable,int,org.apache.mahout.math.Vector,org.apache.hadoop.fs.Path)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/getConf()|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/serializeOutput(org.apache.mahout.math.decomposer.lanczos.LanczosState,org.apache.hadoop.fs.Path)|",
      "|java+constructor:///org/apache/mahout/math/decomposer/lanczos/LanczosState/LanczosState(org.apache.mahout.math.VectorIterable,int,org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/hadoop/fs/Path/Path(org.apache.hadoop.fs.Path,java.lang.String)|",
      "|java+constructor:///org/apache/mahout/math/hadoop/DistributedRowMatrix/DistributedRowMatrix(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,int,int)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/HdfsBackedLanczosState/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/setConf(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver/getInitialVector(org.apache.mahout.math.VectorIterable)|",
      "|java+method:///org/apache/mahout/math/hadoop/DistributedRowMatrix/getConf()|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer$2/run()|",
    "called": "|java+method:///org/apache/mahout/math/als/AlternatingLeastSquaresSolver/solve(java.lang.Iterable,org.apache.mahout.math.Vector,double,int)|",
    "v1Body": [
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer$Features/setFeatureColumnInM(int,org.apache.mahout.math.Vector)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer/access$200(org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer)|",
      "|java+method:///org/apache/mahout/math/als/AlternateLeastSquaresSolver/solve(java.util.List,org.apache.mahout.math.Vector,double,int)|",
      "|java+method:///org/apache/mahout/cf/taste/model/Preference/getUserID()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer/ratingVector(org.apache.mahout.cf.taste.model.PreferenceArray)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer/itemIndex(long)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/cf/taste/model/PreferenceArray/iterator()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer/userIndex(long)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer/access$100(org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer$Features/getUserFeatureColumn(int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer$Features/setFeatureColumnInM(int,org.apache.mahout.math.Vector)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer/access$200(org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/apache/mahout/cf/taste/model/Preference/getUserID()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/als/AlternatingLeastSquaresSolver/solve(java.lang.Iterable,org.apache.mahout.math.Vector,double,int)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer/ratingVector(org.apache.mahout.cf.taste.model.PreferenceArray)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer/itemIndex(long)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/mahout/cf/taste/model/PreferenceArray/iterator()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer/userIndex(long)|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer/access$100(org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/mahout/cf/taste/impl/recommender/svd/ALSWRFactorizer$Features/getUserFeatureColumn(int)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/math/hadoop/stochasticsvd/SSVDPrototype$2/emitRow(int,org.apache.mahout.math.Vector)|",
    "called": "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(org.apache.mahout.math.Vector)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/Vector/addTo(org.apache.mahout.math.Vector)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(org.apache.mahout.math.Vector)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/Vector/assign(org.apache.mahout.math.Vector,org.apache.mahout.math.function.DoubleDoubleFunction)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///org/apache/mahout/math/DenseVector/DenseVector(org.apache.mahout.math.Vector)|"
    ],
    "affectedLib": "org.apache.mahout:mahout-math:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/vectorizer/term/TFPartialVectorReducer/reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)|",
    "called": "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/incrementToken()|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/Vector/getQuick(int)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/lucene/analysis/shingle/ShingleFilter/ShingleFilter(org.apache.lucene.analysis.TokenStream,int)|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/getAttribute(java.lang.Class)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/apache/mahout/common/lucene/IteratorTokenStream/IteratorTokenStream(java.util.Iterator)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/Vector/getNumNondefaultElements()|",
      "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(int,int)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/containsKey(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/math/SequentialAccessSparseVector/SequentialAccessSparseVector(org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/getCounter(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/get(java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/StringTuple/getEntries()|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/mahout/math/Vector/setQuick(int,double)|",
      "|java+method:///org/apache/hadoop/mapreduce/Counter/increment(long)|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/incrementToken()|",
      "|java+constructor:///org/apache/mahout/math/NamedVector/NamedVector(org.apache.mahout.math.Vector,java.lang.String)|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/close()|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/end()|",
      "|java+method:///org/apache/mahout/common/StringTuple/length()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/Vector/getQuick(int)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/lucene/analysis/shingle/ShingleFilter/ShingleFilter(org.apache.lucene.analysis.TokenStream,int)|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/getAttribute(java.lang.Class)|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/apache/mahout/common/lucene/IteratorTokenStream/IteratorTokenStream(java.util.Iterator)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/mahout/math/Vector/getNumNondefaultElements()|",
      "|java+constructor:///org/apache/mahout/math/RandomAccessSparseVector/RandomAccessSparseVector(int,int)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/containsKey(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/math/SequentialAccessSparseVector/SequentialAccessSparseVector(org.apache.mahout.math.Vector)|",
      "|java+constructor:///org/apache/mahout/math/VectorWritable/VectorWritable(org.apache.mahout.math.Vector)|",
      "|java+method:///org/apache/hadoop/mapreduce/Reducer$Context/getCounter(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/get(java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/StringTuple/getEntries()|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/mahout/math/Vector/setQuick(int,double)|",
      "|java+method:///org/apache/hadoop/mapreduce/Counter/increment(long)|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/incrementToken()|",
      "|java+constructor:///org/apache/mahout/math/NamedVector/NamedVector(org.apache.mahout.math.Vector,java.lang.String)|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/end()|",
      "|java+method:///org/apache/mahout/common/StringTuple/length()|"
    ],
    "affectedLib": "org.apache.lucene:lucene-analyzers:3.4.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper/map(org.apache.hadoop.io.Text,org.apache.hadoop.io.Text,org.apache.hadoop.mapred.OutputCollector,org.apache.hadoop.mapred.Reporter)|",
    "called": "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/incrementToken()|",
    "v1Body": [
      "|java+method:///com/google/common/collect/Iterators/forArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$1/BayesFeatureMapper$1(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,org.apache.commons.lang.mutable.MutableDouble)|",
      "|java+method:///org/apache/lucene/analysis/tokenattributes/TermAttribute/term()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/getAttribute(java.lang.Class)|",
      "|java+method:///java/lang/String/length()|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$2/BayesFeatureMapper$2(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,java.lang.String,double,org.apache.hadoop.mapred.OutputCollector)|",
      "|java+constructor:///org/apache/mahout/math/map/OpenObjectIntHashMap/OpenObjectIntHashMap(int)|",
      "|java+method:///org/apache/commons/lang/mutable/MutableDouble/doubleValue()|",
      "|java+method:///org/apache/mahout/common/StringTuple/add(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/common/StringTuple/StringTuple()|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/incrementToken()|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/Math/sqrt(double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/forEachPair(org.apache.mahout.math.function.ObjectIntProcedure)|",
      "|java+method:///org/apache/hadoop/mapred/Reporter/setStatus(java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/split(java.lang.CharSequence)|",
      "|java+constructor:///org/apache/commons/lang/mutable/MutableDouble/MutableDouble(double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/put(java.lang.Object,int)|",
      "|java+constructor:///org/apache/lucene/analysis/shingle/ShingleFilter/ShingleFilter(org.apache.lucene.analysis.TokenStream,int)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/get(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/mahout/common/lucene/IteratorTokenStream/IteratorTokenStream(java.util.Iterator)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$3/BayesFeatureMapper$3(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,java.lang.String,org.apache.hadoop.mapred.OutputCollector)|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Iterators/forArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$1/BayesFeatureMapper$1(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,org.apache.commons.lang.mutable.MutableDouble)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/getAttribute(java.lang.Class)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$2/BayesFeatureMapper$2(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,java.lang.String,double,org.apache.hadoop.mapred.OutputCollector)|",
      "|java+constructor:///org/apache/mahout/math/map/OpenObjectIntHashMap/OpenObjectIntHashMap(int)|",
      "|java+method:///org/apache/commons/lang/mutable/MutableDouble/doubleValue()|",
      "|java+method:///org/apache/mahout/common/StringTuple/add(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/common/StringTuple/StringTuple()|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/incrementToken()|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/Math/sqrt(double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/forEachPair(org.apache.mahout.math.function.ObjectIntProcedure)|",
      "|java+method:///org/apache/hadoop/mapred/Reporter/setStatus(java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/split(java.lang.CharSequence)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///org/apache/commons/lang/mutable/MutableDouble/MutableDouble(double)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/put(java.lang.Object,int)|",
      "|java+constructor:///org/apache/lucene/analysis/shingle/ShingleFilter/ShingleFilter(org.apache.lucene.analysis.TokenStream,int)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/get(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/mahout/common/lucene/IteratorTokenStream/IteratorTokenStream(java.util.Iterator)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/mapreduce/common/BayesFeatureMapper$3/BayesFeatureMapper$3(org.apache.mahout.classifier.bayes.mapreduce.common.BayesFeatureMapper,java.lang.String,org.apache.hadoop.mapred.OutputCollector)|",
      "|java+method:///org/apache/hadoop/mapred/OutputCollector/collect(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.lucene:lucene-analyzers:3.4.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/vectorizer/collocations/llr/CollocMapper/map(org.apache.hadoop.io.Text,org.apache.mahout.common.StringTuple,org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/incrementToken()|",
    "v1Body": [
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/adjustOrPutValue(java.lang.Object,int,int)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/forEachPair(org.apache.mahout.math.function.ObjectIntProcedure)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///org/apache/mahout/vectorizer/collocations/llr/GramKey/GramKey()|",
      "|java+constructor:///org/apache/lucene/analysis/shingle/ShingleFilter/ShingleFilter(org.apache.lucene.analysis.TokenStream,int)|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/getAttribute(java.lang.Class)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getCounter(java.lang.Enum)|",
      "|java+constructor:///org/apache/mahout/math/map/OpenObjectIntHashMap/OpenObjectIntHashMap(int)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/mahout/common/StringTuple/getEntries()|",
      "|java+constructor:///org/apache/mahout/common/lucene/IteratorTokenStream/IteratorTokenStream(java.util.Iterator)|",
      "|java+method:///org/apache/lucene/analysis/tokenattributes/TypeAttribute/type()|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/end()|",
      "|java+constructor:///org/apache/mahout/vectorizer/collocations/llr/CollocMapper$2/CollocMapper$2(org.apache.mahout.vectorizer.collocations.llr.CollocMapper,org.apache.mahout.vectorizer.collocations.llr.GramKey,org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+constructor:///org/apache/mahout/vectorizer/collocations/llr/CollocMapper$1/CollocMapper$1(org.apache.mahout.vectorizer.collocations.llr.CollocMapper,org.apache.mahout.vectorizer.collocations.llr.GramKey,org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/hadoop/mapreduce/Counter/increment(long)|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/incrementToken()|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/close()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/adjustOrPutValue(java.lang.Object,int,int)|",
      "|java+method:///org/apache/mahout/math/map/OpenObjectIntHashMap/forEachPair(org.apache.mahout.math.function.ObjectIntProcedure)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///org/apache/mahout/vectorizer/collocations/llr/GramKey/GramKey()|",
      "|java+constructor:///org/apache/lucene/analysis/shingle/ShingleFilter/ShingleFilter(org.apache.lucene.analysis.TokenStream,int)|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/getAttribute(java.lang.Class)|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/getCounter(java.lang.Enum)|",
      "|java+constructor:///org/apache/mahout/math/map/OpenObjectIntHashMap/OpenObjectIntHashMap(int)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///org/apache/mahout/common/lucene/IteratorTokenStream/IteratorTokenStream(java.util.Iterator)|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/incrementToken()|",
      "|java+method:///org/apache/lucene/analysis/tokenattributes/TypeAttribute/type()|",
      "|java+method:///org/apache/lucene/analysis/shingle/ShingleFilter/end()|",
      "|java+constructor:///org/apache/mahout/vectorizer/collocations/llr/CollocMapper$2/CollocMapper$2(org.apache.mahout.vectorizer.collocations.llr.CollocMapper,org.apache.mahout.vectorizer.collocations.llr.GramKey,org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+constructor:///org/apache/mahout/vectorizer/collocations/llr/CollocMapper$1/CollocMapper$1(org.apache.mahout.vectorizer.collocations.llr.CollocMapper,org.apache.mahout.vectorizer.collocations.llr.GramKey,org.apache.hadoop.mapreduce.Mapper$Context)|",
      "|java+method:///org/apache/mahout/common/StringTuple/getEntries()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/hadoop/mapreduce/Counter/increment(long)|"
    ],
    "affectedLib": "org.apache.lucene:lucene-analyzers:3.4.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/classifier/Classify/main(java.lang.String%5B%5D)|",
    "called": "|java+constructor:///org/apache/lucene/analysis/standard/StandardAnalyzer/StandardAnalyzer(org.apache.lucene.util.Version)|",
    "v1Body": [
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/classifier/bayes/model/ClassifierContext/initialize()|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/common/BayesParameters/BayesParameters()|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/mahout/classifier/bayes/common/BayesParameters/setGramSize(int)|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///java/lang/Class/asSubclass(java.lang.Class)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+constructor:///org/apache/commons/cli2/builder/ArgumentBuilder/ArgumentBuilder()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/apache/mahout/classifier/BayesFileFormatter/readerToDocument(org.apache.lucene.analysis.Analyzer,java.io.Reader)|",
      "|java+method:///org/apache/mahout/classifier/bayes/common/BayesParameters/setBasePath(java.lang.String)|",
      "|java+method:///org/apache/mahout/classifier/bayes/model/ClassifierContext/classifyDocument(java.lang.String%5B%5D,java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMaximum(int)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/model/ClassifierContext/ClassifierContext(org.apache.mahout.classifier.bayes.interfaces.Algorithm,org.apache.mahout.classifier.bayes.interfaces.Datastore)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/mahout/common/nlp/NGrams/NGrams(java.lang.String,int)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withRequired(boolean)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/mahout/common/nlp/NGrams/generateNGramsWithoutLabel()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/datastore/InMemoryBayesDatastore/InMemoryBayesDatastore(org.apache.mahout.classifier.bayes.common.BayesParameters)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/algorithm/CBayesAlgorithm/CBayesAlgorithm()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///com/google/common/io/Files/newReader(java.io.File,java.nio.charset.Charset)|",
      "|java+method:///java/lang/StringBuilder/append(char)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMinimum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withArgument(org.apache.commons.cli2.Argument)|",
      "|java+constructor:///org/apache/lucene/analysis/standard/StandardAnalyzer/StandardAnalyzer(org.apache.lucene.util.Version)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withLongName(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/algorithm/BayesAlgorithm/BayesAlgorithm()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/create()|",
      "|java+method:///java/nio/charset/Charset/forName(java.lang.String)|",
      "|java+method:///org/apache/mahout/classifier/bayes/common/BayesParameters/print()|",
      "|java+constructor:///org/apache/commons/cli2/builder/DefaultOptionBuilder/DefaultOptionBuilder()|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/mahout/classifier/bayes/ClassifierContext/initialize()|",
      "|java+method:///org/apache/mahout/classifier/BayesFileFormatter/readerToDocument(org.apache.lucene.analysis.Analyzer,java.io.Reader)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withName(java.lang.String)|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+constructor:///org/apache/commons/cli2/builder/ArgumentBuilder/ArgumentBuilder()|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/InMemoryBayesDatastore/InMemoryBayesDatastore(org.apache.mahout.classifier.bayes.BayesParameters)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/BayesParameters/BayesParameters()|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMaximum(int)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/mahout/common/nlp/NGrams/NGrams(java.lang.String,int)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withRequired(boolean)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/ClassifierContext/ClassifierContext(org.apache.mahout.classifier.bayes.Algorithm,org.apache.mahout.classifier.bayes.Datastore)|",
      "|java+method:///org/apache/mahout/common/nlp/NGrams/generateNGramsWithoutLabel()|",
      "|java+method:///org/apache/mahout/common/ClassUtils/instantiateAs(java.lang.String,java.lang.Class)|",
      "|java+method:///org/apache/mahout/classifier/bayes/ClassifierContext/classifyDocument(java.lang.String%5B%5D,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/CBayesAlgorithm/CBayesAlgorithm()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/mahout/classifier/bayes/BayesParameters/print()|",
      "|java+method:///org/apache/mahout/classifier/bayes/BayesParameters/setGramSize(int)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///com/google/common/io/Files/newReader(java.io.File,java.nio.charset.Charset)|",
      "|java+method:///java/lang/StringBuilder/append(char)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMinimum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withArgument(org.apache.commons.cli2.Argument)|",
      "|java+constructor:///org/apache/lucene/analysis/standard/StandardAnalyzer/StandardAnalyzer(org.apache.lucene.util.Version)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withLongName(java.lang.String)|",
      "|java+constructor:///org/apache/mahout/classifier/bayes/BayesAlgorithm/BayesAlgorithm()|",
      "|java+method:///org/apache/mahout/classifier/bayes/BayesParameters/setBasePath(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/create()|",
      "|java+method:///java/nio/charset/Charset/forName(java.lang.String)|",
      "|java+constructor:///org/apache/commons/cli2/builder/DefaultOptionBuilder/DefaultOptionBuilder()|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|"
    ],
    "affectedLib": "org.apache.lucene:lucene-core:3.4.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/vectorizer/document/SequenceFileTokenizerMapper/map(org.apache.hadoop.io.Text,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)|",
    "called": "|java+method:///org/apache/lucene/analysis/Analyzer/reusableTokenStream(java.lang.String,java.io.Reader)|",
    "v1Body": [
      "|java+constructor:///java/lang/String/String(char%5B%5D,int,int)|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/lucene/analysis/tokenattributes/CharTermAttribute/buffer()|",
      "|java+constructor:///java/io/StringReader/StringReader(java.lang.String)|",
      "|java+method:///org/apache/lucene/analysis/tokenattributes/CharTermAttribute/length()|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+constructor:///org/apache/mahout/common/StringTuple/StringTuple()|",
      "|java+method:///org/apache/lucene/analysis/Analyzer/tokenStream(java.lang.String,java.io.Reader)|",
      "|java+method:///org/apache/lucene/analysis/TokenStream/incrementToken()|",
      "|java+method:///org/apache/lucene/analysis/TokenStream/addAttribute(java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/StringTuple/add(java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/String/String(char%5B%5D,int,int)|",
      "|java+method:///org/apache/lucene/analysis/tokenattributes/CharTermAttribute/buffer()|",
      "|java+constructor:///java/io/StringReader/StringReader(java.lang.String)|",
      "|java+method:///org/apache/lucene/analysis/tokenattributes/CharTermAttribute/length()|",
      "|java+method:///org/apache/hadoop/io/Text/toString()|",
      "|java+method:///org/apache/lucene/analysis/TokenStream/reset()|",
      "|java+method:///org/apache/lucene/analysis/TokenStream/incrementToken()|",
      "|java+constructor:///org/apache/mahout/common/StringTuple/StringTuple()|",
      "|java+method:///org/apache/hadoop/mapreduce/Mapper$Context/write(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/lucene/analysis/Analyzer/reusableTokenStream(java.lang.String,java.io.Reader)|",
      "|java+method:///org/apache/lucene/analysis/TokenStream/addAttribute(java.lang.Class)|",
      "|java+method:///org/apache/mahout/common/StringTuple/add(java.lang.String)|"
    ],
    "affectedLib": "org.apache.lucene:lucene-core:3.4.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/classifier/BayesFileFormatter/readerToDocument(org.apache.lucene.analysis.Analyzer,java.io.Reader)|",
    "called": "|java+method:///org/apache/lucene/analysis/Analyzer/reusableTokenStream(java.lang.String,java.io.Reader)|",
    "v1Body": [
      "|java+constructor:///java/lang/String/String(char%5B%5D,int,int)|",
      "|java+method:///org/apache/lucene/analysis/tokenattributes/TermAttribute/termLength()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/lucene/analysis/TokenStream/addAttribute(java.lang.Class)|",
      "|java+method:///org/apache/lucene/analysis/tokenattributes/TermAttribute/termBuffer()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/lucene/analysis/Analyzer/tokenStream(java.lang.String,java.io.Reader)|",
      "|java+method:///org/apache/lucene/analysis/TokenStream/incrementToken()|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/String/String(char%5B%5D,int,int)|",
      "|java+method:///org/apache/lucene/analysis/Analyzer/reusableTokenStream(java.lang.String,java.io.Reader)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/lucene/analysis/TokenStream/incrementToken()|",
      "|java+method:///org/apache/lucene/analysis/TokenStream/addAttribute(java.lang.Class)|",
      "|java+method:///org/apache/lucene/analysis/tokenattributes/CharTermAttribute/buffer()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/List/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/lucene/analysis/tokenattributes/CharTermAttribute/length()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/lucene/analysis/TokenStream/reset()|"
    ],
    "affectedLib": "org.apache.lucene:lucene-core:3.4.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/classifier/BayesFileFormatter/main(java.lang.String%5B%5D)|",
    "called": "|java+constructor:///org/apache/lucene/analysis/standard/StandardAnalyzer/StandardAnalyzer(org.apache.lucene.util.Version)|",
    "v1Body": [
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///org/apache/mahout/classifier/BayesFileFormatter/collapse(java.lang.String,org.apache.lucene.analysis.Analyzer,java.io.File,java.nio.charset.Charset,java.io.File)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///java/lang/Class/asSubclass(java.lang.Class)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+constructor:///org/apache/commons/cli2/builder/ArgumentBuilder/ArgumentBuilder()|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMaximum(int)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withRequired(boolean)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMinimum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withArgument(org.apache.commons.cli2.Argument)|",
      "|java+constructor:///org/apache/lucene/analysis/standard/StandardAnalyzer/StandardAnalyzer(org.apache.lucene.util.Version)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withLongName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/create()|",
      "|java+method:///java/nio/charset/Charset/forName(java.lang.String)|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|",
      "|java+constructor:///org/apache/commons/cli2/builder/DefaultOptionBuilder/DefaultOptionBuilder()|",
      "|java+method:///org/apache/mahout/classifier/BayesFileFormatter/format(java.lang.String,org.apache.lucene.analysis.Analyzer,java.io.File,java.nio.charset.Charset,java.io.File)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withShortName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withOption(org.apache.commons.cli2.Option)|",
      "|java+constructor:///org/apache/commons/cli2/commandline/Parser/Parser()|",
      "|java+method:///org/apache/mahout/classifier/BayesFileFormatter/collapse(java.lang.String,org.apache.lucene.analysis.Analyzer,java.io.File,java.nio.charset.Charset,java.io.File)|",
      "|java+method:///org/apache/mahout/common/ClassUtils/instantiateAs(java.lang.String,java.lang.Class)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/CommandLine/getValue(org.apache.commons.cli2.Option)|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+constructor:///org/apache/commons/cli2/builder/ArgumentBuilder/ArgumentBuilder()|",
      "|java+method:///org/apache/commons/cli2/CommandLine/hasOption(org.apache.commons.cli2.Option)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/parse(java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMaximum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/withName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withRequired(boolean)|",
      "|java+method:///org/apache/commons/cli2/commandline/Parser/setGroup(org.apache.commons.cli2.Group)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/create()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/helpOption()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/outputOption()|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withDescription(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/cli2/builder/GroupBuilder/create()|",
      "|java+method:///org/apache/mahout/common/commandline/DefaultOptionCreator/inputOption()|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/withMinimum(int)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withArgument(org.apache.commons.cli2.Argument)|",
      "|java+constructor:///org/apache/lucene/analysis/standard/StandardAnalyzer/StandardAnalyzer(org.apache.lucene.util.Version)|",
      "|java+method:///org/apache/commons/cli2/builder/DefaultOptionBuilder/withLongName(java.lang.String)|",
      "|java+method:///org/apache/commons/cli2/builder/ArgumentBuilder/create()|",
      "|java+method:///java/nio/charset/Charset/forName(java.lang.String)|",
      "|java+constructor:///org/apache/commons/cli2/builder/GroupBuilder/GroupBuilder()|",
      "|java+constructor:///org/apache/commons/cli2/builder/DefaultOptionBuilder/DefaultOptionBuilder()|",
      "|java+method:///org/apache/mahout/classifier/BayesFileFormatter/format(java.lang.String,org.apache.lucene.analysis.Analyzer,java.io.File,java.nio.charset.Charset,java.io.File)|"
    ],
    "affectedLib": "org.apache.lucene:lucene-core:3.4.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/vectorizer/encoders/LuceneTextValueEncoder/tokenize(java.lang.CharSequence)|",
    "called": "|java+method:///org/apache/lucene/analysis/Analyzer/reusableTokenStream(java.lang.String,java.io.Reader)|",
    "v1Body": [
      "|java+constructor:///org/apache/mahout/vectorizer/encoders/LuceneTextValueEncoder$LuceneTokenIterable/LuceneTextValueEncoder$LuceneTokenIterable(org.apache.lucene.analysis.TokenStream,org.apache.mahout.vectorizer.encoders.LuceneTextValueEncoder$1)|",
      "|java+method:///org/apache/mahout/vectorizer/encoders/LuceneTextValueEncoder/getName()|",
      "|java+constructor:///org/apache/mahout/vectorizer/encoders/LuceneTextValueEncoder$CharSequenceReader/LuceneTextValueEncoder$CharSequenceReader(java.lang.CharSequence,org.apache.mahout.vectorizer.encoders.LuceneTextValueEncoder$1)|",
      "|java+method:///org/apache/lucene/analysis/Analyzer/tokenStream(java.lang.String,java.io.Reader)|",
      "|java+method:///org/apache/lucene/analysis/TokenStream/addAttribute(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///org/apache/lucene/analysis/Analyzer/reusableTokenStream(java.lang.String,java.io.Reader)|",
      "|java+constructor:///org/apache/mahout/vectorizer/encoders/LuceneTextValueEncoder$LuceneTokenIterable/LuceneTextValueEncoder$LuceneTokenIterable(org.apache.lucene.analysis.TokenStream,org.apache.mahout.vectorizer.encoders.LuceneTextValueEncoder$1)|",
      "|java+method:///org/apache/mahout/vectorizer/encoders/LuceneTextValueEncoder/getName()|",
      "|java+constructor:///org/apache/mahout/vectorizer/encoders/LuceneTextValueEncoder$CharSequenceReader/LuceneTextValueEncoder$CharSequenceReader(java.lang.CharSequence,org.apache.mahout.vectorizer.encoders.LuceneTextValueEncoder$1)|",
      "|java+method:///org/apache/lucene/analysis/TokenStream/addAttribute(java.lang.Class)|"
    ],
    "affectedLib": "org.apache.lucene:lucene-core:3.4.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/classifier/BayesFileFormatter/writeFile(java.lang.String,org.apache.lucene.analysis.Analyzer,java.io.File,java.nio.charset.Charset,java.io.Writer)|",
    "called": "|java+method:///org/apache/lucene/analysis/Analyzer/reusableTokenStream(java.lang.String,java.io.Reader)|",
    "v1Body": [
      "|java+method:///org/apache/lucene/analysis/tokenattributes/TermAttribute/termBuffer()|",
      "|java+method:///org/apache/mahout/common/IOUtils/quietClose(java.io.Closeable%5B%5D)|",
      "|java+method:///org/apache/lucene/analysis/tokenattributes/TermAttribute/termLength()|",
      "|java+method:///java/io/Writer/write(java.lang.String)|",
      "|java+method:///com/google/common/io/Files/newReader(java.io.File,java.nio.charset.Charset)|",
      "|java+method:///org/apache/lucene/analysis/TokenStream/addAttribute(java.lang.Class)|",
      "|java+method:///java/io/Writer/write(char%5B%5D,int,int)|",
      "|java+method:///java/io/Writer/write(int)|",
      "|java+method:///org/apache/lucene/analysis/Analyzer/tokenStream(java.lang.String,java.io.Reader)|",
      "|java+method:///org/apache/lucene/analysis/TokenStream/incrementToken()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/lucene/analysis/Analyzer/reusableTokenStream(java.lang.String,java.io.Reader)|",
      "|java+method:///org/apache/lucene/analysis/tokenattributes/CharTermAttribute/length()|",
      "|java+method:///java/io/Writer/write(java.lang.String)|",
      "|java+method:///com/google/common/io/Files/newReader(java.io.File,java.nio.charset.Charset)|",
      "|java+method:///org/apache/lucene/analysis/TokenStream/reset()|",
      "|java+method:///org/apache/lucene/analysis/TokenStream/incrementToken()|",
      "|java+method:///org/apache/lucene/analysis/TokenStream/addAttribute(java.lang.Class)|",
      "|java+method:///java/io/Writer/write(char%5B%5D,int,int)|",
      "|java+method:///java/io/Writer/write(int)|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.Closeable)|",
      "|java+method:///org/apache/lucene/analysis/tokenattributes/CharTermAttribute/buffer()|"
    ],
    "affectedLib": "org.apache.lucene:lucene-core:3.4.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.mahout:mahout-core:0.5",
    "coordinatesV2": "org.apache.mahout:mahout-core:0.6",
    "caller": "|java+method:///org/apache/mahout/classifier/sgd/TPrior/logP(double)|",
    "called": "|java+method:///org/apache/commons/math/special/Gamma/logGamma(double)|",
    "v1Body": [
      "|java+method:///org/apache/commons/math/special/Gamma/logGamma(double)|",
      "|java+method:///java/lang/Math/log(double)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/math/special/Gamma/logGamma(double)|",
      "|java+method:///java/lang/Math/log1p(double)|",
      "|java+method:///java/lang/Math/log(double)|"
    ],
    "affectedLib": "org.apache.commons:commons-math:2.2",
    "change": "UPDATED"
  }
]