[
  {
    "coordinatesV1": "org.drools.planner:drools-planner-examples:5.4.0.Final",
    "coordinatesV2": "org.drools.planner:drools-planner-examples:5.5.0.Beta1",
    "caller": "|java+method:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentSequenceSwitchLength2MoveFactory/createMoveList(org.drools.planner.core.solution.Solution)|",
    "called": "|java+constructor:///org/drools/planner/core/move/CompositeMove/CompositeMove(java.util.List)|",
    "v1Body": [
      "|java+method:///java/util/ListIterator/hasNext()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/drools/planner/examples/nurserostering/domain/NurseRoster/getEmployeeList()|",
      "|java+method:///org/drools/planner/examples/nurserostering/domain/NurseRoster/getShiftDateList()|",
      "|java+constructor:///org/drools/planner/core/move/CompositeMove/CompositeMove(java.util.List)|",
      "|java+method:///java/util/List/subList(int,int)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/ListIterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap(int)|",
      "|java+method:///java/util/ListIterator/nextIndex()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/listIterator()|",
      "|java+method:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentSequenceSwitchLength2MoveFactory$AssignmentSequence/access$200(org.drools.planner.examples.nurserostering.solver.move.factory.ShiftAssignmentSequenceSwitchLength2MoveFactory$AssignmentSequence,org.drools.planner.examples.nurserostering.domain.ShiftAssignment)|",
      "|java+method:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentSequenceSwitchLength2MoveFactory$AssignmentSequence/getShiftAssignmentList()|",
      "|java+method:///java/util/List/listIterator(int)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+constructor:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentSequenceSwitchLength2MoveFactory$AssignmentSequence/ShiftAssignmentSequenceSwitchLength2MoveFactory$AssignmentSequence(org.drools.planner.examples.nurserostering.domain.ShiftAssignment,org.drools.planner.examples.nurserostering.solver.move.factory.ShiftAssignmentSequenceSwitchLength2MoveFactory$1)|",
      "|java+constructor:///org/drools/planner/examples/nurserostering/solver/move/EmployeeChangeMove/EmployeeChangeMove(org.drools.planner.examples.nurserostering.domain.ShiftAssignment,org.drools.planner.examples.nurserostering.domain.Employee)|",
      "|java+method:///org/drools/planner/examples/nurserostering/domain/NurseRoster/getShiftAssignmentList()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/drools/planner/examples/nurserostering/domain/ShiftAssignment/getEmployee()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentSequenceSwitchLength2MoveFactory$AssignmentSequence/access$100(org.drools.planner.examples.nurserostering.solver.move.factory.ShiftAssignmentSequenceSwitchLength2MoveFactory$AssignmentSequence,org.drools.planner.examples.nurserostering.domain.ShiftAssignment)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/remove()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/drools/planner/examples/nurserostering/domain/NurseRoster/getEmployeeList()|",
      "|java+method:///org/drools/planner/examples/nurserostering/domain/NurseRoster/getShiftDateList()|",
      "|java+constructor:///org/drools/planner/core/move/CompositeMove/CompositeMove(java.util.List)|",
      "|java+method:///java/util/List/subList(int,int)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/ListIterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap(int)|",
      "|java+method:///java/util/ListIterator/nextIndex()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/listIterator()|",
      "|java+method:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentSequenceSwitchLength2MoveFactory$AssignmentSequence/access$200(org.drools.planner.examples.nurserostering.solver.move.factory.ShiftAssignmentSequenceSwitchLength2MoveFactory$AssignmentSequence,org.drools.planner.examples.nurserostering.domain.ShiftAssignment)|",
      "|java+method:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentSequenceSwitchLength2MoveFactory$AssignmentSequence/getShiftAssignmentList()|",
      "|java+method:///java/util/List/listIterator(int)|",
      "|java+method:///org/drools/planner/examples/nurserostering/domain/solver/MovableShiftAssignmentSelectionFilter/accept(org.drools.planner.examples.nurserostering.domain.NurseRoster,org.drools.planner.examples.nurserostering.domain.ShiftAssignment)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+constructor:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentSequenceSwitchLength2MoveFactory$AssignmentSequence/ShiftAssignmentSequenceSwitchLength2MoveFactory$AssignmentSequence(org.drools.planner.examples.nurserostering.domain.ShiftAssignment,org.drools.planner.examples.nurserostering.solver.move.factory.ShiftAssignmentSequenceSwitchLength2MoveFactory$1)|",
      "|java+method:///java/util/ListIterator/hasNext()|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+constructor:///org/drools/planner/examples/nurserostering/solver/move/EmployeeChangeMove/EmployeeChangeMove(org.drools.planner.examples.nurserostering.domain.ShiftAssignment,org.drools.planner.examples.nurserostering.domain.Employee)|",
      "|java+method:///org/drools/planner/examples/nurserostering/domain/NurseRoster/getShiftAssignmentList()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/drools/planner/examples/nurserostering/domain/ShiftAssignment/getEmployee()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentSequenceSwitchLength2MoveFactory$AssignmentSequence/access$100(org.drools.planner.examples.nurserostering.solver.move.factory.ShiftAssignmentSequenceSwitchLength2MoveFactory$AssignmentSequence,org.drools.planner.examples.nurserostering.domain.ShiftAssignment)|"
    ],
    "affectedLib": "org.drools.planner:drools-planner-core:5.5.0.Beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.drools.planner:drools-planner-examples:5.4.0.Final",
    "coordinatesV2": "org.drools.planner:drools-planner-examples:5.5.0.Beta1",
    "caller": "|java+method:///org/drools/planner/examples/nqueens/app/NQueensApp/createSolverByApi()|",
    "called": "|java+constructor:///org/drools/planner/config/constructionheuristic/ConstructionHeuristicSolverPhaseConfig/ConstructionHeuristicSolverPhaseConfig()|",
    "v1Body": [
      "|java+method:///org/drools/planner/config/localsearch/decider/acceptor/AcceptorConfig/setSolutionTabuSize(java.lang.Integer)|",
      "|java+method:///org/drools/planner/config/solver/SolverConfig/getTerminationConfig()|",
      "|java+method:///org/drools/planner/config/score/director/ScoreDirectorFactoryConfig/setScoreDrlList(java.util.List)|",
      "|java+method:///org/drools/planner/config/localsearch/LocalSearchSolverPhaseConfig/getSelectorConfig()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///org/drools/planner/config/solver/SolverConfig/setSolverPhaseConfigList(java.util.List)|",
      "|java+method:///org/drools/planner/config/solver/SolverConfig/getScoreDirectorFactoryConfig()|",
      "|java+method:///org/drools/planner/config/localsearch/LocalSearchSolverPhaseConfig/getAcceptorConfig()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/drools/planner/config/score/director/ScoreDirectorFactoryConfig/setScoreDefinitionType(org.drools.planner.config.score.director.ScoreDirectorFactoryConfig$ScoreDefinitionType)|",
      "|java+method:///org/drools/planner/config/localsearch/decider/selector/SelectorConfig/setMoveFactoryClass(java.lang.Class)|",
      "|java+method:///org/drools/planner/config/solver/SolverConfig/setSolutionClass(java.lang.Class)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/drools/planner/config/localsearch/LocalSearchSolverPhaseConfig/LocalSearchSolverPhaseConfig()|",
      "|java+constructor:///org/drools/planner/config/solver/SolverConfig/SolverConfig()|",
      "|java+method:///org/drools/planner/config/constructionheuristic/ConstructionHeuristicSolverPhaseConfig/setConstructionHeuristicPickEarlyType(org.drools.planner.core.constructionheuristic.greedyFit.decider.ConstructionHeuristicPickEarlyType)|",
      "|java+method:///org/drools/planner/config/solver/SolverConfig/setPlanningEntityClassSet(java.util.Set)|",
      "|java+constructor:///org/drools/planner/config/constructionheuristic/ConstructionHeuristicSolverPhaseConfig/ConstructionHeuristicSolverPhaseConfig()|",
      "|java+method:///org/drools/planner/config/termination/TerminationConfig/setScoreAttained(java.lang.String)|",
      "|java+method:///org/drools/planner/config/constructionheuristic/ConstructionHeuristicSolverPhaseConfig/setConstructionHeuristicType(org.drools.planner.config.constructionheuristic.ConstructionHeuristicSolverPhaseConfig$ConstructionHeuristicType)|",
      "|java+method:///org/drools/planner/config/solver/SolverConfig/buildSolver()|"
    ],
    "v2Body": [
      "|java+method:///org/drools/planner/config/localsearch/decider/acceptor/AcceptorConfig/setSolutionTabuSize(java.lang.Integer)|",
      "|java+method:///org/drools/planner/config/score/director/ScoreDirectorFactoryConfig/setScoreDefinitionType(org.drools.planner.config.score.director.ScoreDirectorFactoryConfig$ScoreDefinitionType)|",
      "|java+constructor:///org/drools/planner/config/heuristic/selector/move/generic/ChangeMoveSelectorConfig/ChangeMoveSelectorConfig()|",
      "|java+method:///org/drools/planner/config/solver/SolverConfig/getTerminationConfig()|",
      "|java+method:///org/drools/planner/config/score/director/ScoreDirectorFactoryConfig/setScoreDrlList(java.util.List)|",
      "|java+method:///org/drools/planner/config/localsearch/LocalSearchSolverPhaseConfig/setMoveSelectorConfigList(java.util.List)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///org/drools/planner/config/solver/SolverConfig/setSolverPhaseConfigList(java.util.List)|",
      "|java+method:///org/drools/planner/config/solver/SolverConfig/getScoreDirectorFactoryConfig()|",
      "|java+method:///org/drools/planner/config/heuristic/selector/move/generic/ChangeMoveSelectorConfig/setSelectionOrder(org.drools.planner.config.heuristic.selector.common.SelectionOrder)|",
      "|java+method:///org/drools/planner/config/localsearch/LocalSearchSolverPhaseConfig/getAcceptorConfig()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/drools/planner/config/solver/SolverConfig/setSolutionClass(java.lang.Class)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/drools/planner/config/localsearch/LocalSearchSolverPhaseConfig/LocalSearchSolverPhaseConfig()|",
      "|java+constructor:///org/drools/planner/config/solver/SolverConfig/SolverConfig()|",
      "|java+method:///org/drools/planner/config/constructionheuristic/ConstructionHeuristicSolverPhaseConfig/setConstructionHeuristicPickEarlyType(org.drools.planner.core.constructionheuristic.greedyFit.decider.ConstructionHeuristicPickEarlyType)|",
      "|java+method:///org/drools/planner/config/solver/SolverConfig/setPlanningEntityClassSet(java.util.Set)|",
      "|java+constructor:///org/drools/planner/config/constructionheuristic/ConstructionHeuristicSolverPhaseConfig/ConstructionHeuristicSolverPhaseConfig()|",
      "|java+method:///org/drools/planner/config/termination/TerminationConfig/setScoreAttained(java.lang.String)|",
      "|java+method:///org/drools/planner/config/constructionheuristic/ConstructionHeuristicSolverPhaseConfig/setConstructionHeuristicType(org.drools.planner.config.constructionheuristic.ConstructionHeuristicSolverPhaseConfig$ConstructionHeuristicType)|",
      "|java+method:///org/drools/planner/config/solver/SolverConfig/buildSolver()|"
    ],
    "affectedLib": "org.drools.planner:drools-planner-core:5.5.0.Beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.drools.planner:drools-planner-examples:5.4.0.Final",
    "coordinatesV2": "org.drools.planner:drools-planner-examples:5.5.0.Beta1",
    "caller": "|java+method:///org/drools/planner/examples/cloudbalancing/solver/score/CloudBalancingIncrementalScoreCalculator/calculateScore()|",
    "called": "|java+method:///org/drools/planner/core/score/buildin/hardandsoft/DefaultHardAndSoftScore/valueOf(int,int)|",
    "v1Body": [
      "|java+method:///org/drools/planner/core/score/buildin/hardandsoft/DefaultHardAndSoftScore/valueOf(int,int)|"
    ],
    "v2Body": [
      "|java+method:///org/drools/planner/examples/cloudbalancing/solver/score/CloudBalancingIncrementalScoreCalculator/calculateScore()|",
      "|java+method:///org/drools/planner/core/score/buildin/hardandsoft/DefaultHardAndSoftScore/valueOf(int,int)|"
    ],
    "affectedLib": "org.drools.planner:drools-planner-core:5.5.0.Beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.drools.planner:drools-planner-examples:5.4.0.Final",
    "coordinatesV2": "org.drools.planner:drools-planner-examples:5.5.0.Beta1",
    "caller": "|java+method:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentSequenceSwitchLength3MoveFactory/createMoveList(org.drools.planner.core.solution.Solution)|",
    "called": "|java+constructor:///org/drools/planner/core/move/CompositeMove/CompositeMove(java.util.List)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/drools/planner/examples/nurserostering/domain/NurseRoster/getEmployeeList()|",
      "|java+method:///org/drools/planner/examples/nurserostering/domain/NurseRoster/getShiftDateList()|",
      "|java+constructor:///org/drools/planner/core/move/CompositeMove/CompositeMove(java.util.List)|",
      "|java+method:///java/util/List/subList(int,int)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/ListIterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap(int)|",
      "|java+method:///java/util/ListIterator/nextIndex()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/listIterator()|",
      "|java+method:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentSequenceSwitchLength3MoveFactory$AssignmentSequence/access$200(org.drools.planner.examples.nurserostering.solver.move.factory.ShiftAssignmentSequenceSwitchLength3MoveFactory$AssignmentSequence,org.drools.planner.examples.nurserostering.domain.ShiftAssignment)|",
      "|java+method:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentSequenceSwitchLength3MoveFactory$AssignmentSequence/getShiftAssignmentList()|",
      "|java+method:///java/util/List/listIterator(int)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentSequenceSwitchLength3MoveFactory$AssignmentSequence/ShiftAssignmentSequenceSwitchLength3MoveFactory$AssignmentSequence(org.drools.planner.examples.nurserostering.domain.ShiftAssignment,org.drools.planner.examples.nurserostering.solver.move.factory.ShiftAssignmentSequenceSwitchLength3MoveFactory$1)|",
      "|java+method:///java/util/ListIterator/hasNext()|",
      "|java+constructor:///org/drools/planner/examples/nurserostering/solver/move/EmployeeChangeMove/EmployeeChangeMove(org.drools.planner.examples.nurserostering.domain.ShiftAssignment,org.drools.planner.examples.nurserostering.domain.Employee)|",
      "|java+method:///org/drools/planner/examples/nurserostering/domain/NurseRoster/getShiftAssignmentList()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/drools/planner/examples/nurserostering/domain/ShiftAssignment/getEmployee()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentSequenceSwitchLength3MoveFactory$AssignmentSequence/access$100(org.drools.planner.examples.nurserostering.solver.move.factory.ShiftAssignmentSequenceSwitchLength3MoveFactory$AssignmentSequence,org.drools.planner.examples.nurserostering.domain.ShiftAssignment)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/remove()|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/drools/planner/examples/nurserostering/domain/NurseRoster/getEmployeeList()|",
      "|java+method:///org/drools/planner/examples/nurserostering/domain/NurseRoster/getShiftDateList()|",
      "|java+constructor:///org/drools/planner/core/move/CompositeMove/CompositeMove(java.util.List)|",
      "|java+method:///java/util/List/subList(int,int)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/ListIterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap(int)|",
      "|java+method:///java/util/ListIterator/nextIndex()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/listIterator()|",
      "|java+method:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentSequenceSwitchLength3MoveFactory$AssignmentSequence/access$200(org.drools.planner.examples.nurserostering.solver.move.factory.ShiftAssignmentSequenceSwitchLength3MoveFactory$AssignmentSequence,org.drools.planner.examples.nurserostering.domain.ShiftAssignment)|",
      "|java+method:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentSequenceSwitchLength3MoveFactory$AssignmentSequence/getShiftAssignmentList()|",
      "|java+method:///java/util/List/listIterator(int)|",
      "|java+method:///org/drools/planner/examples/nurserostering/domain/solver/MovableShiftAssignmentSelectionFilter/accept(org.drools.planner.examples.nurserostering.domain.NurseRoster,org.drools.planner.examples.nurserostering.domain.ShiftAssignment)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentSequenceSwitchLength3MoveFactory$AssignmentSequence/ShiftAssignmentSequenceSwitchLength3MoveFactory$AssignmentSequence(org.drools.planner.examples.nurserostering.domain.ShiftAssignment,org.drools.planner.examples.nurserostering.solver.move.factory.ShiftAssignmentSequenceSwitchLength3MoveFactory$1)|",
      "|java+method:///java/util/ListIterator/hasNext()|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+constructor:///org/drools/planner/examples/nurserostering/solver/move/EmployeeChangeMove/EmployeeChangeMove(org.drools.planner.examples.nurserostering.domain.ShiftAssignment,org.drools.planner.examples.nurserostering.domain.Employee)|",
      "|java+method:///org/drools/planner/examples/nurserostering/domain/NurseRoster/getShiftAssignmentList()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/drools/planner/examples/nurserostering/domain/ShiftAssignment/getEmployee()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentSequenceSwitchLength3MoveFactory$AssignmentSequence/access$100(org.drools.planner.examples.nurserostering.solver.move.factory.ShiftAssignmentSequenceSwitchLength3MoveFactory$AssignmentSequence,org.drools.planner.examples.nurserostering.domain.ShiftAssignment)|"
    ],
    "affectedLib": "org.drools.planner:drools-planner-core:5.5.0.Beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.drools.planner:drools-planner-examples:5.4.0.Final",
    "coordinatesV2": "org.drools.planner:drools-planner-examples:5.5.0.Beta1",
    "caller": "|java+method:///org/drools/planner/examples/cloudbalancing/solver/score/CloudBalancingSimpleScoreCalculator/calculateScore(org.drools.planner.examples.cloudbalancing.domain.CloudBalance)|",
    "called": "|java+method:///org/drools/planner/core/score/buildin/hardandsoft/DefaultHardAndSoftScore/valueOf(int,int)|",
    "v1Body": [
      "|java+method:///org/drools/planner/examples/cloudbalancing/domain/CloudBalance/getProcessList()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///java/util/HashSet/HashSet(int)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/drools/planner/examples/cloudbalancing/solver/score/CloudBalancingSimpleScoreCalculator/sumSoftScore(java.util.Set)|",
      "|java+constructor:///java/util/HashMap/HashMap(int)|",
      "|java+method:///org/drools/planner/examples/cloudbalancing/solver/score/CloudBalancingSimpleScoreCalculator/visitProcessList(java.util.Map,java.util.Map,java.util.Map,java.util.Set,java.util.List)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/drools/planner/core/score/buildin/hardandsoft/DefaultHardAndSoftScore/valueOf(int,int)|",
      "|java+method:///org/drools/planner/examples/cloudbalancing/solver/score/CloudBalancingSimpleScoreCalculator/sumHardScore(java.util.Map,java.util.Map,java.util.Map)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/drools/planner/examples/cloudbalancing/domain/CloudBalance/getComputerList()|"
    ],
    "v2Body": [
      "|java+method:///org/drools/planner/examples/cloudbalancing/domain/CloudBalance/getProcessList()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/drools/planner/examples/cloudbalancing/domain/CloudProcess/getRequiredCpuPower()|",
      "|java+method:///org/drools/planner/examples/cloudbalancing/domain/CloudProcess/getRequiredMemory()|",
      "|java+method:///org/drools/planner/examples/cloudbalancing/domain/CloudComputer/getCpuPower()|",
      "|java+method:///org/drools/planner/examples/cloudbalancing/domain/CloudProcess/getRequiredNetworkBandwidth()|",
      "|java+method:///org/drools/planner/core/score/buildin/hardandsoft/DefaultHardAndSoftScore/valueOf(int,int)|",
      "|java+method:///org/drools/planner/examples/cloudbalancing/domain/CloudComputer/getMemory()|",
      "|java+method:///org/drools/planner/examples/cloudbalancing/domain/CloudComputer/getNetworkBandwidth()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/drools/planner/examples/cloudbalancing/domain/CloudComputer/getCost()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/drools/planner/examples/cloudbalancing/domain/CloudProcess/getComputer()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/drools/planner/examples/cloudbalancing/domain/CloudBalance/getComputerList()|"
    ],
    "affectedLib": "org.drools.planner:drools-planner-core:5.5.0.Beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.drools.planner:drools-planner-examples:5.4.0.Final",
    "coordinatesV2": "org.drools.planner:drools-planner-examples:5.5.0.Beta1",
    "caller": "|java+method:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentPillarPartSwapMoveFactory/createMoveList(org.drools.planner.core.solution.Solution)|",
    "called": "|java+constructor:///org/drools/planner/core/move/CompositeMove/CompositeMove(java.util.List)|",
    "v1Body": [
      "|java+method:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentPillarPartSwapMoveFactory$AssignmentSequence/getEmployee()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/drools/planner/examples/nurserostering/domain/NurseRoster/getEmployeeList()|",
      "|java+method:///org/drools/planner/examples/nurserostering/domain/NurseRoster/getShiftAssignmentList()|",
      "|java+constructor:///org/drools/planner/core/move/CompositeMove/CompositeMove(java.util.List)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/listIterator()|",
      "|java+method:///java/util/List/listIterator(int)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentPillarPartSwapMoveFactory$AssignmentSequence/getLastDayIndex()|",
      "|java+method:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentPillarPartSwapMoveFactory$LowestDayIndexAssignmentSequenceIterator/hasNext()|",
      "|java+method:///java/util/ListIterator/hasNext()|",
      "|java+method:///java/lang/Math/max(int,int)|",
      "|java+method:///org/drools/planner/examples/nurserostering/domain/NurseRoster/getShiftDateList()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentPillarPartSwapMoveFactory$AssignmentSequence/getShiftAssignmentList()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/drools/planner/examples/nurserostering/domain/ShiftAssignment/getEmployee()|",
      "|java+method:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentPillarPartSwapMoveFactory$LowestDayIndexAssignmentSequenceIterator/next()|",
      "|java+method:///java/util/ListIterator/next()|",
      "|java+constructor:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentPillarPartSwapMoveFactory$AssignmentSequence/ShiftAssignmentPillarPartSwapMoveFactory$AssignmentSequence(org.drools.planner.examples.nurserostering.domain.Employee,org.drools.planner.examples.nurserostering.domain.ShiftAssignment,org.drools.planner.examples.nurserostering.solver.move.factory.ShiftAssignmentPillarPartSwapMoveFactory$1)|",
      "|java+method:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentPillarPartSwapMoveFactory$LowestDayIndexAssignmentSequenceIterator/isLastNextWasLeft()|",
      "|java+constructor:///java/util/HashMap/HashMap(int)|",
      "|java+constructor:///org/drools/planner/examples/nurserostering/solver/move/EmployeeMultipleChangeMove/EmployeeMultipleChangeMove(org.drools.planner.examples.nurserostering.domain.Employee,java.util.List,org.drools.planner.examples.nurserostering.domain.Employee)|",
      "|java+method:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentPillarPartSwapMoveFactory$LowestDayIndexAssignmentSequenceIterator/hasNextWithMaximumFirstDayIndexes(int,int)|",
      "|java+method:///java/util/ListIterator/nextIndex()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentPillarPartSwapMoveFactory$AssignmentSequence/access$100(org.drools.planner.examples.nurserostering.solver.move.factory.ShiftAssignmentPillarPartSwapMoveFactory$AssignmentSequence,org.drools.planner.examples.nurserostering.domain.ShiftAssignment)|",
      "|java+constructor:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentPillarPartSwapMoveFactory$LowestDayIndexAssignmentSequenceIterator/ShiftAssignmentPillarPartSwapMoveFactory$LowestDayIndexAssignmentSequenceIterator(java.util.List,java.util.List)|",
      "|java+method:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentPillarPartSwapMoveFactory$AssignmentSequence/access$200(org.drools.planner.examples.nurserostering.solver.move.factory.ShiftAssignmentPillarPartSwapMoveFactory$AssignmentSequence,org.drools.planner.examples.nurserostering.domain.ShiftAssignment)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/remove()|",
      "|java+method:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentPillarPartSwapMoveFactory$AssignmentSequence/getEmployee()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/drools/planner/examples/nurserostering/domain/NurseRoster/getEmployeeList()|",
      "|java+method:///org/drools/planner/examples/nurserostering/domain/NurseRoster/getShiftAssignmentList()|",
      "|java+constructor:///org/drools/planner/core/move/CompositeMove/CompositeMove(java.util.List)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/listIterator()|",
      "|java+method:///java/util/List/listIterator(int)|",
      "|java+method:///org/drools/planner/examples/nurserostering/domain/solver/MovableShiftAssignmentSelectionFilter/accept(org.drools.planner.examples.nurserostering.domain.NurseRoster,org.drools.planner.examples.nurserostering.domain.ShiftAssignment)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentPillarPartSwapMoveFactory$AssignmentSequence/getLastDayIndex()|",
      "|java+method:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentPillarPartSwapMoveFactory$LowestDayIndexAssignmentSequenceIterator/hasNext()|",
      "|java+method:///java/util/ListIterator/hasNext()|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+method:///java/lang/Math/max(int,int)|",
      "|java+method:///org/drools/planner/examples/nurserostering/domain/NurseRoster/getShiftDateList()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentPillarPartSwapMoveFactory$AssignmentSequence/getShiftAssignmentList()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/drools/planner/examples/nurserostering/domain/ShiftAssignment/getEmployee()|",
      "|java+method:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentPillarPartSwapMoveFactory$LowestDayIndexAssignmentSequenceIterator/next()|",
      "|java+method:///java/util/ListIterator/next()|",
      "|java+constructor:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentPillarPartSwapMoveFactory$AssignmentSequence/ShiftAssignmentPillarPartSwapMoveFactory$AssignmentSequence(org.drools.planner.examples.nurserostering.domain.Employee,org.drools.planner.examples.nurserostering.domain.ShiftAssignment,org.drools.planner.examples.nurserostering.solver.move.factory.ShiftAssignmentPillarPartSwapMoveFactory$1)|",
      "|java+method:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentPillarPartSwapMoveFactory$LowestDayIndexAssignmentSequenceIterator/isLastNextWasLeft()|",
      "|java+constructor:///java/util/HashMap/HashMap(int)|",
      "|java+constructor:///org/drools/planner/examples/nurserostering/solver/move/EmployeeMultipleChangeMove/EmployeeMultipleChangeMove(org.drools.planner.examples.nurserostering.domain.Employee,java.util.List,org.drools.planner.examples.nurserostering.domain.Employee)|",
      "|java+method:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentPillarPartSwapMoveFactory$LowestDayIndexAssignmentSequenceIterator/hasNextWithMaximumFirstDayIndexes(int,int)|",
      "|java+method:///java/util/ListIterator/nextIndex()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentPillarPartSwapMoveFactory$AssignmentSequence/access$100(org.drools.planner.examples.nurserostering.solver.move.factory.ShiftAssignmentPillarPartSwapMoveFactory$AssignmentSequence,org.drools.planner.examples.nurserostering.domain.ShiftAssignment)|",
      "|java+constructor:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentPillarPartSwapMoveFactory$LowestDayIndexAssignmentSequenceIterator/ShiftAssignmentPillarPartSwapMoveFactory$LowestDayIndexAssignmentSequenceIterator(java.util.List,java.util.List)|",
      "|java+method:///org/drools/planner/examples/nurserostering/solver/move/factory/ShiftAssignmentPillarPartSwapMoveFactory$AssignmentSequence/access$200(org.drools.planner.examples.nurserostering.solver.move.factory.ShiftAssignmentPillarPartSwapMoveFactory$AssignmentSequence,org.drools.planner.examples.nurserostering.domain.ShiftAssignment)|"
    ],
    "affectedLib": "org.drools.planner:drools-planner-core:5.5.0.Beta1",
    "change": "UPDATED"
  }
]