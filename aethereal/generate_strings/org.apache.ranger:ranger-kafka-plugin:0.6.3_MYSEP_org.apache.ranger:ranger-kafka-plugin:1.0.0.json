[
  {
    "coordinatesV1": "org.apache.ranger:ranger-kafka-plugin:0.6.3",
    "coordinatesV2": "org.apache.ranger:ranger-kafka-plugin:1.0.0",
    "caller": "|java+method:///org/apache/ranger/authorization/kafka/authorizer/RangerKafkaAuthorizer/authorize(kafka.network.RequestChannel$Session,kafka.security.auth.Operation,kafka.security.auth.Resource)|",
    "called": "|java+method:///org/apache/ranger/audit/provider/MiscUtil/logErrorMessageByInterval(org.apache.commons.logging.Log,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/commons/lang/StringUtils/substringBefore(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/setUserGroups(java.util.Set)|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/setAccessTime(java.util.Date)|",
      "|java+method:///kafka/network/RequestChannel$Session/principal()|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessResourceImpl/setValue(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/ranger/audit/provider/MiscUtil/logErrorMessageByInterval(org.apache.commons.logging.Log,java.lang.String)|",
      "|java+constructor:///org/apache/ranger/plugin/policyengine/RangerAccessResourceImpl/RangerAccessResourceImpl()|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/setAccessType(java.lang.String)|",
      "|java+constructor:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/RangerAccessRequestImpl()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/net/InetAddress/getHostAddress()|",
      "|java+method:///org/apache/ranger/plugin/service/RangerBasePlugin/isAccessAllowed(org.apache.ranger.plugin.policyengine.RangerAccessRequest)|",
      "|java+method:///kafka/security/auth/Resource/resourceType()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///kafka/network/RequestChannel$Session/clientAddress()|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/setResource(org.apache.ranger.plugin.policyengine.RangerAccessResource)|",
      "|java+method:///kafka/security/auth/Resource/name()|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/setUser(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/charAt(int)|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/setRequestData(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotEmpty(java.lang.String)|",
      "|java+method:///org/apache/kafka/common/security/auth/KafkaPrincipal/getName()|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/setClientIPAddress(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(boolean)|",
      "|java+method:///org/apache/ranger/authorization/kafka/authorizer/RangerKafkaAuthorizer/mapToRangerAccessType(kafka.security.auth.Operation)|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/setAction(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/fatal(java.lang.Object)|",
      "|java+method:///org/apache/ranger/audit/provider/MiscUtil/getGroupsForRequestUser(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessResult/getIsAllowed()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/ranger/plugin/util/RangerPerfTracer/isPerfTraceEnabled(org.apache.commons.logging.Log)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/setUserGroups(java.util.Set)|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/setAccessTime(java.util.Date)|",
      "|java+method:///kafka/network/RequestChannel$Session/principal()|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessResourceImpl/setValue(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/ranger/plugin/service/RangerBasePlugin/getClusterName()|",
      "|java+method:///org/apache/ranger/audit/provider/MiscUtil/logErrorMessageByInterval(org.apache.commons.logging.Log,java.lang.String)|",
      "|java+constructor:///org/apache/ranger/plugin/policyengine/RangerAccessResourceImpl/RangerAccessResourceImpl()|",
      "|java+method:///org/apache/ranger/plugin/util/RangerPerfTracer/log(org.apache.ranger.plugin.util.RangerPerfTracer)|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/setAccessType(java.lang.String)|",
      "|java+constructor:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/RangerAccessRequestImpl()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/net/InetAddress/getHostAddress()|",
      "|java+method:///org/apache/ranger/plugin/service/RangerBasePlugin/isAccessAllowed(org.apache.ranger.plugin.policyengine.RangerAccessRequest)|",
      "|java+method:///kafka/security/auth/Resource/resourceType()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///kafka/network/RequestChannel$Session/clientAddress()|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/setResource(org.apache.ranger.plugin.policyengine.RangerAccessResource)|",
      "|java+method:///kafka/security/auth/Resource/name()|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/setUser(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/charAt(int)|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/setRequestData(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotEmpty(java.lang.String)|",
      "|java+method:///org/apache/kafka/common/security/auth/KafkaPrincipal/getName()|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/setClientIPAddress(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(boolean)|",
      "|java+method:///org/apache/ranger/authorization/kafka/authorizer/RangerKafkaAuthorizer/mapToRangerAccessType(kafka.security.auth.Operation)|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/setAction(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/fatal(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/setClusterName(java.lang.String)|",
      "|java+method:///org/apache/ranger/audit/provider/MiscUtil/getGroupsForRequestUser(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/apache/ranger/plugin/util/RangerPerfTracer/getPerfTracer(org.apache.commons.logging.Log,java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessResult/getIsAllowed()|"
    ],
    "affectedLib": "org.apache.ranger:ranger-plugins-audit:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.ranger:ranger-kafka-plugin:0.6.3",
    "coordinatesV2": "org.apache.ranger:ranger-kafka-plugin:1.0.0",
    "caller": "|java+method:///org/apache/ranger/authorization/kafka/authorizer/RangerKafkaAuthorizer/configure(java.util.Map)|",
    "called": "|java+method:///org/apache/ranger/audit/provider/MiscUtil/createUGIFromSubject(javax.security.auth.Subject)|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/ranger/plugin/service/RangerBasePlugin/RangerBasePlugin(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/kafka/common/security/authenticator/LoginManager/acquireLoginManager(org.apache.kafka.common.network.LoginType,boolean,java.util.Map)|",
      "|java+method:///org/apache/commons/logging/Log/info(java.lang.Object)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/ranger/plugin/service/RangerBasePlugin/setResultProcessor(org.apache.ranger.plugin.policyengine.RangerAccessResultProcessor)|",
      "|java+constructor:///org/apache/ranger/plugin/audit/RangerDefaultAuditHandler/RangerDefaultAuditHandler()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/ranger/audit/provider/MiscUtil/setUGILoginUser(org.apache.hadoop.security.UserGroupInformation,javax.security.auth.Subject)|",
      "|java+method:///org/apache/kafka/common/security/authenticator/LoginManager/subject()|",
      "|java+method:///org/apache/ranger/audit/provider/MiscUtil/createUGIFromSubject(javax.security.auth.Subject)|",
      "|java+method:///org/apache/ranger/plugin/service/RangerBasePlugin/init()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/ranger/audit/provider/MiscUtil/getUGILoginUser()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/kafka/common/security/auth/SecurityProtocol/name()|",
      "|java+constructor:///org/apache/kafka/common/network/ListenerName/ListenerName(java.lang.String)|",
      "|java+constructor:///org/apache/ranger/plugin/service/RangerBasePlugin/RangerBasePlugin(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/info(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/security/JaasContext/load(org.apache.kafka.common.security.JaasContext$Type,org.apache.kafka.common.network.ListenerName,java.util.Map)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/ranger/plugin/service/RangerBasePlugin/setResultProcessor(org.apache.ranger.plugin.policyengine.RangerAccessResultProcessor)|",
      "|java+constructor:///org/apache/ranger/plugin/audit/RangerDefaultAuditHandler/RangerDefaultAuditHandler()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/ranger/audit/provider/MiscUtil/setUGILoginUser(org.apache.hadoop.security.UserGroupInformation,javax.security.auth.Subject)|",
      "|java+method:///org/apache/kafka/common/security/authenticator/LoginManager/subject()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/kafka/common/security/authenticator/LoginManager/acquireLoginManager(org.apache.kafka.common.security.JaasContext,boolean,java.util.Map)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotEmpty(java.lang.String)|",
      "|java+method:///org/apache/ranger/audit/provider/MiscUtil/createUGIFromSubject(javax.security.auth.Subject)|",
      "|java+method:///org/apache/ranger/plugin/service/RangerBasePlugin/init()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/ranger/audit/provider/MiscUtil/getUGILoginUser()|"
    ],
    "affectedLib": "org.apache.ranger:ranger-plugins-audit:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.ranger:ranger-kafka-plugin:0.6.3",
    "coordinatesV2": "org.apache.ranger:ranger-kafka-plugin:1.0.0",
    "caller": "|java+method:///org/apache/ranger/authorization/kafka/authorizer/RangerKafkaAuthorizer/authorize(kafka.network.RequestChannel$Session,kafka.security.auth.Operation,kafka.security.auth.Resource)|",
    "called": "|java+method:///org/apache/ranger/plugin/util/RangerPerfTracer/log(org.apache.ranger.plugin.util.RangerPerfTracer)|",
    "v1Body": [
      "|java+method:///org/apache/commons/lang/StringUtils/substringBefore(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/setUserGroups(java.util.Set)|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/setAccessTime(java.util.Date)|",
      "|java+method:///kafka/network/RequestChannel$Session/principal()|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessResourceImpl/setValue(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/ranger/audit/provider/MiscUtil/logErrorMessageByInterval(org.apache.commons.logging.Log,java.lang.String)|",
      "|java+constructor:///org/apache/ranger/plugin/policyengine/RangerAccessResourceImpl/RangerAccessResourceImpl()|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/setAccessType(java.lang.String)|",
      "|java+constructor:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/RangerAccessRequestImpl()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/net/InetAddress/getHostAddress()|",
      "|java+method:///org/apache/ranger/plugin/service/RangerBasePlugin/isAccessAllowed(org.apache.ranger.plugin.policyengine.RangerAccessRequest)|",
      "|java+method:///kafka/security/auth/Resource/resourceType()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///kafka/network/RequestChannel$Session/clientAddress()|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/setResource(org.apache.ranger.plugin.policyengine.RangerAccessResource)|",
      "|java+method:///kafka/security/auth/Resource/name()|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/setUser(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/charAt(int)|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/setRequestData(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotEmpty(java.lang.String)|",
      "|java+method:///org/apache/kafka/common/security/auth/KafkaPrincipal/getName()|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/setClientIPAddress(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(boolean)|",
      "|java+method:///org/apache/ranger/authorization/kafka/authorizer/RangerKafkaAuthorizer/mapToRangerAccessType(kafka.security.auth.Operation)|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/setAction(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/fatal(java.lang.Object)|",
      "|java+method:///org/apache/ranger/audit/provider/MiscUtil/getGroupsForRequestUser(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessResult/getIsAllowed()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/ranger/plugin/util/RangerPerfTracer/isPerfTraceEnabled(org.apache.commons.logging.Log)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/setUserGroups(java.util.Set)|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/setAccessTime(java.util.Date)|",
      "|java+method:///kafka/network/RequestChannel$Session/principal()|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessResourceImpl/setValue(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/ranger/plugin/service/RangerBasePlugin/getClusterName()|",
      "|java+method:///org/apache/ranger/audit/provider/MiscUtil/logErrorMessageByInterval(org.apache.commons.logging.Log,java.lang.String)|",
      "|java+constructor:///org/apache/ranger/plugin/policyengine/RangerAccessResourceImpl/RangerAccessResourceImpl()|",
      "|java+method:///org/apache/ranger/plugin/util/RangerPerfTracer/log(org.apache.ranger.plugin.util.RangerPerfTracer)|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/setAccessType(java.lang.String)|",
      "|java+constructor:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/RangerAccessRequestImpl()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/net/InetAddress/getHostAddress()|",
      "|java+method:///org/apache/ranger/plugin/service/RangerBasePlugin/isAccessAllowed(org.apache.ranger.plugin.policyengine.RangerAccessRequest)|",
      "|java+method:///kafka/security/auth/Resource/resourceType()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///kafka/network/RequestChannel$Session/clientAddress()|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/setResource(org.apache.ranger.plugin.policyengine.RangerAccessResource)|",
      "|java+method:///kafka/security/auth/Resource/name()|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/setUser(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/charAt(int)|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/setRequestData(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotEmpty(java.lang.String)|",
      "|java+method:///org/apache/kafka/common/security/auth/KafkaPrincipal/getName()|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/setClientIPAddress(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(boolean)|",
      "|java+method:///org/apache/ranger/authorization/kafka/authorizer/RangerKafkaAuthorizer/mapToRangerAccessType(kafka.security.auth.Operation)|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/setAction(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/fatal(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessRequestImpl/setClusterName(java.lang.String)|",
      "|java+method:///org/apache/ranger/audit/provider/MiscUtil/getGroupsForRequestUser(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/apache/ranger/plugin/util/RangerPerfTracer/getPerfTracer(org.apache.commons.logging.Log,java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/ranger/plugin/policyengine/RangerAccessResult/getIsAllowed()|"
    ],
    "affectedLib": "org.apache.ranger:ranger-plugins-common:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.ranger:ranger-kafka-plugin:0.6.3",
    "coordinatesV2": "org.apache.ranger:ranger-kafka-plugin:1.0.0",
    "caller": "|java+method:///org/apache/ranger/services/kafka/client/ServiceKafkaClient/connectionTest()|",
    "called": "|java+method:///org/apache/ranger/plugin/client/BaseClient/generateResponseDataMap(boolean,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,java.util.Map)|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/IOException/getMessage()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/ranger/plugin/client/BaseClient/generateResponseDataMap(boolean,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,java.util.HashMap)|",
      "|java+method:///org/apache/log4j/Logger/error(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/ranger/services/kafka/client/ServiceKafkaClient/getTopicList(java.util.List)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/ranger/plugin/client/BaseClient/generateResponseDataMap(boolean,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,java.util.Map)|",
      "|java+method:///java/io/IOException/getMessage()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/log4j/Logger/error(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/ranger/services/kafka/client/ServiceKafkaClient/getTopicList(java.util.List)|"
    ],
    "affectedLib": "org.apache.ranger:ranger-plugins-common:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.ranger:ranger-kafka-plugin:0.6.3",
    "coordinatesV2": "org.apache.ranger:ranger-kafka-plugin:1.0.0",
    "caller": "|java+initializer:///org/apache/ranger/authorization/kafka/authorizer/RangerKafkaAuthorizer/RangerKafkaAuthorizer$initializer|",
    "called": "|java+method:///org/apache/ranger/plugin/util/RangerPerfTracer/getPerfLogger(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/commons/logging/LogFactory/getLog(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/ranger/plugin/util/RangerPerfTracer/getPerfLogger(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/LogFactory/getLog(java.lang.Class)|"
    ],
    "affectedLib": "org.apache.ranger:ranger-plugins-common:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.ranger:ranger-kafka-plugin:0.6.3",
    "coordinatesV2": "org.apache.ranger:ranger-kafka-plugin:1.0.0",
    "caller": "|java+method:///org/apache/ranger/authorization/kafka/authorizer/RangerKafkaAuthorizer/configure(java.util.Map)|",
    "called": "|java+constructor:///org/apache/ranger/plugin/service/RangerBasePlugin/RangerBasePlugin(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/ranger/plugin/service/RangerBasePlugin/RangerBasePlugin(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/kafka/common/security/authenticator/LoginManager/acquireLoginManager(org.apache.kafka.common.network.LoginType,boolean,java.util.Map)|",
      "|java+method:///org/apache/commons/logging/Log/info(java.lang.Object)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/ranger/plugin/service/RangerBasePlugin/setResultProcessor(org.apache.ranger.plugin.policyengine.RangerAccessResultProcessor)|",
      "|java+constructor:///org/apache/ranger/plugin/audit/RangerDefaultAuditHandler/RangerDefaultAuditHandler()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/ranger/audit/provider/MiscUtil/setUGILoginUser(org.apache.hadoop.security.UserGroupInformation,javax.security.auth.Subject)|",
      "|java+method:///org/apache/kafka/common/security/authenticator/LoginManager/subject()|",
      "|java+method:///org/apache/ranger/audit/provider/MiscUtil/createUGIFromSubject(javax.security.auth.Subject)|",
      "|java+method:///org/apache/ranger/plugin/service/RangerBasePlugin/init()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/ranger/audit/provider/MiscUtil/getUGILoginUser()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/kafka/common/security/auth/SecurityProtocol/name()|",
      "|java+constructor:///org/apache/kafka/common/network/ListenerName/ListenerName(java.lang.String)|",
      "|java+constructor:///org/apache/ranger/plugin/service/RangerBasePlugin/RangerBasePlugin(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/info(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/security/JaasContext/load(org.apache.kafka.common.security.JaasContext$Type,org.apache.kafka.common.network.ListenerName,java.util.Map)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/ranger/plugin/service/RangerBasePlugin/setResultProcessor(org.apache.ranger.plugin.policyengine.RangerAccessResultProcessor)|",
      "|java+constructor:///org/apache/ranger/plugin/audit/RangerDefaultAuditHandler/RangerDefaultAuditHandler()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/ranger/audit/provider/MiscUtil/setUGILoginUser(org.apache.hadoop.security.UserGroupInformation,javax.security.auth.Subject)|",
      "|java+method:///org/apache/kafka/common/security/authenticator/LoginManager/subject()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/kafka/common/security/authenticator/LoginManager/acquireLoginManager(org.apache.kafka.common.security.JaasContext,boolean,java.util.Map)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotEmpty(java.lang.String)|",
      "|java+method:///org/apache/ranger/audit/provider/MiscUtil/createUGIFromSubject(javax.security.auth.Subject)|",
      "|java+method:///org/apache/ranger/plugin/service/RangerBasePlugin/init()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/ranger/audit/provider/MiscUtil/getUGILoginUser()|"
    ],
    "affectedLib": "org.apache.ranger:ranger-plugins-common:1.0.0",
    "change": "UPDATED"
  }
]