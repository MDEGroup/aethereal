[
  {
    "coordinatesV1": "com.github.dreamhead:moco-runner:0.11.0",
    "coordinatesV2": "com.github.dreamhead:moco-runner:0.11.1",
    "caller": "|java+constructor:///com/github/dreamhead/moco/parser/model/TextContainer/TextContainer()|",
    "called": "|java+method:///com/google/common/collect/ImmutableMap/of()|",
    "v1Body": [
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/ImmutableMap/of()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "com.google.guava:guava:20.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.dreamhead:moco-runner:0.11.0",
    "coordinatesV2": "com.github.dreamhead:moco-runner:0.11.1",
    "caller": "|java+method:///com/github/dreamhead/moco/MocoJsonRunner/jsonHttpServer(com.github.dreamhead.moco.resource.Resource)|",
    "called": "|java+method:///com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/github/dreamhead/moco/MocoJsonRunner/jsonHttpServer(com.github.dreamhead.moco.resource.Resource,com.google.common.base.Optional)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///com/github/dreamhead/moco/MocoJsonRunner/parseHttpServer(com.github.dreamhead.moco.resource.Resource,com.google.common.base.Optional)|",
      "|java+method:///com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "com.google.guava:guava:20.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.dreamhead:moco-runner:0.11.0",
    "coordinatesV2": "com.github.dreamhead:moco-runner:0.11.1",
    "caller": "|java+constructor:///com/github/dreamhead/moco/parser/model/TextContainer/TextContainer(java.lang.String,java.lang.String,java.util.Map)|",
    "called": "|java+method:///com/google/common/collect/ImmutableMap/of()|",
    "v1Body": [
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/ImmutableMap/of()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "com.google.guava:guava:20.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.dreamhead:moco-runner:0.11.0",
    "coordinatesV2": "com.github.dreamhead:moco-runner:0.11.1",
    "caller": "|java+method:///com/github/dreamhead/moco/runner/SettingRunner/run()|",
    "called": "|java+method:///com/google/common/collect/FluentIterable/filter(com.google.common.base.Predicate)|",
    "v1Body": [
      "|java+method:///com/google/common/collect/FluentIterable/from(java.lang.Iterable)|",
      "|java+method:///com/google/common/collect/FluentIterable/transform(com.google.common.base.Function)|",
      "|java+method:///com/github/dreamhead/moco/runner/SettingRunner/toRunnerSetting()|",
      "|java+method:///com/github/dreamhead/moco/runner/SettingRunner/byEnv(com.google.common.base.Optional)|",
      "|java+method:///com/github/dreamhead/moco/runner/JsonRunner/newJsonRunnerWithSetting(java.lang.Iterable,com.github.dreamhead.moco.bootstrap.arg.StartArgs)|",
      "|java+method:///com/github/dreamhead/moco/runner/JsonRunner/run()|",
      "|java+method:///com/google/common/collect/FluentIterable/filter(com.google.common.base.Predicate)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/FluentIterable/from(java.lang.Iterable)|",
      "|java+method:///com/google/common/collect/FluentIterable/transform(com.google.common.base.Function)|",
      "|java+method:///com/github/dreamhead/moco/runner/SettingRunner/toRunnerSetting()|",
      "|java+method:///com/github/dreamhead/moco/runner/SettingRunner/byEnv(com.google.common.base.Optional)|",
      "|java+method:///com/github/dreamhead/moco/runner/Runner/run()|",
      "|java+method:///com/github/dreamhead/moco/runner/JsonRunner/newJsonRunnerWithSetting(java.lang.Iterable,com.github.dreamhead.moco.bootstrap.arg.StartArgs)|",
      "|java+method:///com/google/common/collect/FluentIterable/filter(com.google.common.base.Predicate)|"
    ],
    "affectedLib": "com.google.guava:guava:20.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.dreamhead:moco-runner:0.11.0",
    "coordinatesV2": "com.github.dreamhead:moco-runner:0.11.1",
    "caller": "|java+method:///com/github/dreamhead/moco/MocoJsonRunner/jsonHttpServer(int,com.github.dreamhead.moco.resource.Resource)|",
    "called": "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/github/dreamhead/moco/MocoJsonRunner/jsonHttpServer(com.github.dreamhead.moco.resource.Resource,com.google.common.base.Optional)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///com/github/dreamhead/moco/MocoJsonRunner/parseHttpServer(com.github.dreamhead.moco.resource.Resource,com.google.common.base.Optional)|",
      "|java+method:///com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|"
    ],
    "affectedLib": "com.google.guava:guava:20.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.dreamhead:moco-runner:0.11.0",
    "coordinatesV2": "com.github.dreamhead:moco-runner:0.11.1",
    "caller": "|java+constructor:///com/github/dreamhead/moco/parser/model/FileContainer/FileContainer(com.github.dreamhead.moco.parser.model.TextContainer)|",
    "called": "|java+method:///com/google/common/base/Optional/absent()|",
    "v1Body": [
      "|java+method:///com/github/dreamhead/moco/parser/model/TextContainer/getText()|",
      "|java+method:///com/github/dreamhead/moco/parser/model/TextContainer/getOperation()|",
      "|java+method:///com/github/dreamhead/moco/parser/model/TextContainer/getProps()|",
      "|java+constructor:///com/github/dreamhead/moco/parser/model/TextContainer/TextContainer(java.lang.String,java.lang.String,java.util.Map)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+constructor:///com/github/dreamhead/moco/parser/model/TextContainer/TextContainer()|"
    ],
    "affectedLib": "com.google.guava:guava:20.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.dreamhead:moco-runner:0.11.0",
    "coordinatesV2": "com.github.dreamhead:moco-runner:0.11.1",
    "caller": "|java+method:///com/github/dreamhead/moco/parser/HttpServerParser/createServer(com.google.common.collect.ImmutableList,com.google.common.base.Optional,com.github.dreamhead.moco.MocoConfig%5B%5D)|",
    "called": "|java+method:///com/google/common/collect/ImmutableList/iterator()|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/github/dreamhead/moco/internal/ActualHttpServer/mergeHttpServer(com.github.dreamhead.moco.internal.ActualHttpServer)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/common/collect/ImmutableList/iterator()|",
      "|java+method:///com/github/dreamhead/moco/internal/ActualHttpServer/createLogServer(com.google.common.base.Optional,com.github.dreamhead.moco.MocoConfig%5B%5D)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/SessionSetting/newHttpServer(com.google.common.base.Optional,com.github.dreamhead.moco.MocoConfig%5B%5D)|",
      "|java+method:///com/github/dreamhead/moco/parser/HttpServerParser/createServer(com.google.common.collect.ImmutableList,com.google.common.base.Optional,com.github.dreamhead.moco.MocoConfig%5B%5D)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/github/dreamhead/moco/internal/ActualHttpServer/mergeServer(com.github.dreamhead.moco.internal.BaseActualServer)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/common/collect/ImmutableList/iterator()|",
      "|java+method:///com/github/dreamhead/moco/internal/ActualHttpServer/createLogServer(com.google.common.base.Optional,com.github.dreamhead.moco.MocoConfig%5B%5D)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/SessionSetting/newHttpServer(com.google.common.base.Optional,com.github.dreamhead.moco.MocoConfig%5B%5D)|",
      "|java+method:///com/github/dreamhead/moco/parser/HttpServerParser/createServer(com.google.common.collect.ImmutableList,com.google.common.base.Optional,com.github.dreamhead.moco.MocoConfig%5B%5D)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|"
    ],
    "affectedLib": "com.google.guava:guava:20.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.dreamhead:moco-runner:0.11.0",
    "coordinatesV2": "com.github.dreamhead:moco-runner:0.11.1",
    "caller": "|java+method:///com/github/dreamhead/moco/parser/BaseParser/parseServer(java.io.InputStream,com.google.common.base.Optional,com.github.dreamhead.moco.MocoConfig%5B%5D)|",
    "called": "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.InputStream)|",
    "v1Body": [
      "|java+method:///com/github/dreamhead/moco/parser/BaseParser/createServer(com.google.common.collect.ImmutableList,com.google.common.base.Optional,com.github.dreamhead.moco.MocoConfig%5B%5D)|",
      "|java+method:///com/github/dreamhead/moco/parser/CollectionReader/read(java.io.InputStream,java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///com/github/dreamhead/moco/parser/BaseParser/createServer(com.google.common.collect.ImmutableList,com.google.common.base.Optional,com.github.dreamhead.moco.MocoConfig%5B%5D)|",
      "|java+method:///com/google/common/io/Closeables/closeQuietly(java.io.InputStream)|",
      "|java+method:///com/github/dreamhead/moco/parser/CollectionReader/read(java.io.InputStream,java.lang.Class)|"
    ],
    "affectedLib": "com.google.guava:guava:20.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.dreamhead:moco-runner:0.11.0",
    "coordinatesV2": "com.github.dreamhead:moco-runner:0.11.1",
    "caller": "|java+constructor:///com/github/dreamhead/moco/parser/deserializer/TextContainerDeserializer/TextContainerDeserializer()|",
    "called": "|java+constructor:///com/fasterxml/jackson/databind/JsonDeserializer/JsonDeserializer()|",
    "v1Body": [
      "|java+constructor:///com/github/dreamhead/moco/parser/deserializer/AbstractTextContainerDeserializer/AbstractTextContainerDeserializer()|"
    ],
    "v2Body": [
      "|java+constructor:///com/fasterxml/jackson/databind/JsonDeserializer/JsonDeserializer()|",
      "|java+constructor:///com/github/dreamhead/moco/parser/deserializer/TextContainerDeserializerHelper/TextContainerDeserializerHelper()|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.8.8.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.dreamhead:moco-runner:0.11.0",
    "coordinatesV2": "com.github.dreamhead:moco-runner:0.11.1",
    "caller": "|java+method:///com/github/dreamhead/moco/parser/deserializer/LatencyContainerDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser)|",
    "v1Body": [
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/LatencyContainerDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///java/lang/String/toUpperCase()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|",
      "|java+method:///com/github/dreamhead/moco/parser/model/LatencyContainer/latency(long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/google/common/collect/Iterators/get(java.util.Iterator,int)|",
      "|java+method:///java/lang/StringBuilder/append(char)|",
      "|java+method:///java/util/concurrent/TimeUnit/valueOf(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getLongValue()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/readValuesAs(java.lang.Class)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/github/dreamhead/moco/parser/model/LatencyContainer/latencyWithUnit(long,java.util.concurrent.TimeUnit)|"
    ],
    "v2Body": [
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/LatencyContainerDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/LatencyContainerDeserializer$InternalLatencyContainer/access$000(com.github.dreamhead.moco.parser.deserializer.LatencyContainerDeserializer$InternalLatencyContainer)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|",
      "|java+method:///com/github/dreamhead/moco/parser/model/LatencyContainer/latency(long)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/readValueAs(java.lang.Class)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getLongValue()|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.8.8.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.dreamhead:moco-runner:0.11.0",
    "coordinatesV2": "com.github.dreamhead:moco-runner:0.11.1",
    "caller": "|java+constructor:///com/github/dreamhead/moco/parser/deserializer/FileContainerDeserializer/FileContainerDeserializer()|",
    "called": "|java+constructor:///com/fasterxml/jackson/databind/JsonDeserializer/JsonDeserializer()|",
    "v1Body": [
      "|java+constructor:///com/github/dreamhead/moco/parser/deserializer/AbstractTextContainerDeserializer/AbstractTextContainerDeserializer()|"
    ],
    "v2Body": [
      "|java+constructor:///com/fasterxml/jackson/databind/JsonDeserializer/JsonDeserializer()|",
      "|java+constructor:///com/github/dreamhead/moco/parser/deserializer/TextContainerDeserializerHelper/TextContainerDeserializerHelper()|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.8.8.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.dreamhead:moco-runner:0.11.0",
    "coordinatesV2": "com.github.dreamhead:moco-runner:0.11.1",
    "caller": "|java+method:///com/github/dreamhead/moco/parser/deserializer/TextContainerDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser)|",
    "v1Body": [
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/TextContainerDeserializer/textContainer(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/TextContainerDeserializer/text(com.fasterxml.jackson.core.JsonParser)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|",
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/TextContainerDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|",
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/TextContainerDeserializerHelper/textContainer(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/TextContainerDeserializerHelper/text(com.fasterxml.jackson.core.JsonParser)|",
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/TextContainerDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.8.8.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.dreamhead:moco-runner:0.11.0",
    "coordinatesV2": "com.github.dreamhead:moco-runner:0.11.1",
    "caller": "|java+method:///com/github/dreamhead/moco/parser/deserializer/FileContainerDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser)|",
    "v1Body": [
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/FileContainerDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/FileContainerDeserializer/toFileContainer(com.fasterxml.jackson.core.JsonParser)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/FileContainer/asFileContainer(com.github.dreamhead.moco.parser.model.TextContainer)|",
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/FileContainerDeserializer/isForFileContainer(java.lang.String)|",
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/FileContainerDeserializer/text(com.fasterxml.jackson.core.JsonParser)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getText()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/FileContainerDeserializer/textContainer(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|"
    ],
    "v2Body": [
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/FileContainerDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/github/dreamhead/moco/util/Strings/strip(java.lang.String)|",
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/FileContainerDeserializer/toFileContainer(com.fasterxml.jackson.core.JsonParser)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/FileContainer/asFileContainer(com.github.dreamhead.moco.parser.model.TextContainer)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|",
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/TextContainerDeserializerHelper/textContainer(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/TextContainerDeserializerHelper/text(com.fasterxml.jackson.core.JsonParser)|",
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/FileContainerDeserializer/isForFileContainer(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getText()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.8.8.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.dreamhead:moco-runner:0.11.0",
    "coordinatesV2": "com.github.dreamhead:moco-runner:0.11.1",
    "caller": "|java+method:///com/github/dreamhead/moco/parser/deserializer/ProxyContainerDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser)|",
    "v1Body": [
      "|java+method:///com/github/dreamhead/moco/parser/model/ProxyContainer$Builder/build()|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/ProxyContainerDeserializer$InternalProxyContainer/toProxyContainer()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|",
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/ProxyContainerDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/google/common/collect/Iterators/get(java.util.Iterator,int)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getText()|",
      "|java+method:///com/github/dreamhead/moco/parser/model/ProxyContainer$Builder/withUrl(java.lang.String)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/ProxyContainer/builder()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/readValuesAs(java.lang.Class)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken)|"
    ],
    "v2Body": [
      "|java+method:///com/github/dreamhead/moco/parser/model/ProxyContainer$Builder/build()|",
      "|java+method:///com/github/dreamhead/moco/util/Strings/strip(java.lang.String)|",
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/ProxyContainerDeserializer$InternalProxyContainer/toProxyContainer()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|",
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/ProxyContainerDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/ProxyContainer$Builder/withUrl(java.lang.String)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/ProxyContainer/builder()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getText()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/readValueAs(java.lang.Class)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.8.8.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.dreamhead:moco-runner:0.11.0",
    "coordinatesV2": "com.github.dreamhead:moco-runner:0.11.1",
    "caller": "|java+initializer:///com/github/dreamhead/moco/runner/watcher/FileMocoRunnerWatcher/FileMocoRunnerWatcher$initializer|",
    "called": "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///java/util/concurrent/TimeUnit/toMillis(long)|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|"
    ],
    "affectedLib": "org.slf4j:slf4j-api:1.7.25",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.dreamhead:moco-runner:0.11.0",
    "coordinatesV2": "com.github.dreamhead:moco-runner:0.11.1",
    "caller": "|java+method:///com/github/dreamhead/moco/parser/model/CompleteEventSetting/createTrigger()|",
    "called": "|java+method:///com/github/dreamhead/moco/Moco/async(com.github.dreamhead.moco.MocoEventAction,com.github.dreamhead.moco.procedure.LatencyProcedure)|",
    "v1Body": [
      "|java+method:///com/github/dreamhead/moco/Moco/async(com.github.dreamhead.moco.MocoEventAction,com.github.dreamhead.moco.procedure.LatencyProcedure)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/LatencyContainer/getUnit()|",
      "|java+method:///com/github/dreamhead/moco/parser/model/LatencyContainer/getLatency()|",
      "|java+method:///com/github/dreamhead/moco/Moco/latency(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/CompleteEventSetting/doCreateAction()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/github/dreamhead/moco/Moco/async(com.github.dreamhead.moco.MocoEventAction,com.github.dreamhead.moco.procedure.LatencyProcedure)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/LatencyContainer/asProcedure()|",
      "|java+method:///com/github/dreamhead/moco/parser/model/CompleteEventSetting/doCreateAction()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|"
    ],
    "affectedLib": "com.github.dreamhead:moco-core:0.11.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.dreamhead:moco-runner:0.11.0",
    "coordinatesV2": "com.github.dreamhead:moco-runner:0.11.1",
    "caller": "|java+method:///com/github/dreamhead/moco/parser/model/PostSetting/createAction()|",
    "called": "|java+method:///com/github/dreamhead/moco/Moco/post(com.github.dreamhead.moco.resource.Resource,com.github.dreamhead.moco.resource.ContentResource)|",
    "v1Body": [
      "|java+method:///com/github/dreamhead/moco/Moco/text(java.lang.String)|",
      "|java+method:///com/github/dreamhead/moco/Moco/post(java.lang.String,com.github.dreamhead.moco.resource.ContentResource)|"
    ],
    "v2Body": [
      "|java+method:///com/github/dreamhead/moco/Moco/post(com.github.dreamhead.moco.resource.Resource,com.github.dreamhead.moco.resource.ContentResource)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/TextContainer/asResource()|"
    ],
    "affectedLib": "com.github.dreamhead:moco-core:0.11.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.dreamhead:moco-runner:0.11.0",
    "coordinatesV2": "com.github.dreamhead:moco-runner:0.11.1",
    "caller": "|java+method:///com/github/dreamhead/moco/parser/model/GetSetting/createAction()|",
    "called": "|java+method:///com/github/dreamhead/moco/Moco/get(com.github.dreamhead.moco.resource.Resource)|",
    "v1Body": [
      "|java+method:///com/github/dreamhead/moco/Moco/get(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/github/dreamhead/moco/Moco/get(com.github.dreamhead.moco.resource.Resource)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/TextContainer/asResource()|"
    ],
    "affectedLib": "com.github.dreamhead:moco-core:0.11.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.dreamhead:moco-runner:0.11.0",
    "coordinatesV2": "com.github.dreamhead:moco-runner:0.11.1",
    "caller": "|java+method:///com/github/dreamhead/moco/parser/deserializer/ProxyContainerDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "called": "|java+method:///com/github/dreamhead/moco/util/Strings/strip(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/github/dreamhead/moco/parser/model/ProxyContainer$Builder/build()|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/ProxyContainerDeserializer$InternalProxyContainer/toProxyContainer()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|",
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/ProxyContainerDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/google/common/collect/Iterators/get(java.util.Iterator,int)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getText()|",
      "|java+method:///com/github/dreamhead/moco/parser/model/ProxyContainer$Builder/withUrl(java.lang.String)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/ProxyContainer/builder()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/readValuesAs(java.lang.Class)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken)|"
    ],
    "v2Body": [
      "|java+method:///com/github/dreamhead/moco/parser/model/ProxyContainer$Builder/build()|",
      "|java+method:///com/github/dreamhead/moco/util/Strings/strip(java.lang.String)|",
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/ProxyContainerDeserializer$InternalProxyContainer/toProxyContainer()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|",
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/ProxyContainerDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/ProxyContainer$Builder/withUrl(java.lang.String)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/ProxyContainer/builder()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getText()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/readValueAs(java.lang.Class)|"
    ],
    "affectedLib": "com.github.dreamhead:moco-core:0.11.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.dreamhead:moco-runner:0.11.0",
    "coordinatesV2": "com.github.dreamhead:moco-runner:0.11.1",
    "caller": "|java+method:///com/github/dreamhead/moco/parser/model/SessionSetting/bindToSession(com.github.dreamhead.moco.HttpServer)|",
    "called": "|java+method:///com/github/dreamhead/moco/MocoMount/to(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/github/dreamhead/moco/parser/model/MountSetting/getResponseHandler()|",
      "|java+method:///com/github/dreamhead/moco/parser/model/ProxyContainer/getFailover()|",
      "|java+method:///com/github/dreamhead/moco/MocoMount/to(java.lang.String)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/ProxyContainer/hasUrl()|",
      "|java+method:///com/github/dreamhead/moco/HttpServer/proxy(com.github.dreamhead.moco.handler.proxy.ProxyConfig,com.github.dreamhead.moco.handler.failover.Failover)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/ProxyContainer/getProxyConfig()|",
      "|java+method:///com/github/dreamhead/moco/parser/model/SessionSetting/isMount()|",
      "|java+method:///com/github/dreamhead/moco/parser/model/SessionSetting/isRedirectResponse()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///com/github/dreamhead/moco/HttpServer/request(com.github.dreamhead.moco.RequestMatcher)|",
      "|java+method:///com/github/dreamhead/moco/HttpServer/response(com.github.dreamhead.moco.ResponseHandler,com.github.dreamhead.moco.ResponseHandler%5B%5D)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/SessionSetting/getResponseHandler()|",
      "|java+method:///com/github/dreamhead/moco/parser/model/SessionSetting/redirectResource(com.github.dreamhead.moco.parser.model.TextContainer)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/MountSetting/getUri()|",
      "|java+method:///com/github/dreamhead/moco/HttpServer/mount(java.lang.String,com.github.dreamhead.moco.mount.MountTo,com.github.dreamhead.moco.mount.MountPredicate%5B%5D)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/SessionSetting/isAnyResponse()|",
      "|java+method:///com/github/dreamhead/moco/parser/model/SessionSetting/isProxy()|",
      "|java+method:///com/github/dreamhead/moco/parser/model/MountSetting/getDir()|",
      "|java+method:///com/github/dreamhead/moco/parser/model/MountSetting/getMountPredicates()|",
      "|java+method:///com/github/dreamhead/moco/HttpResponseSetting/response(com.github.dreamhead.moco.ResponseHandler,com.github.dreamhead.moco.ResponseHandler%5B%5D)|",
      "|java+method:///com/github/dreamhead/moco/HttpResponseSetting/redirectTo(com.github.dreamhead.moco.resource.Resource)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/SessionSetting/getRequestMatcher()|"
    ],
    "v2Body": [
      "|java+method:///com/github/dreamhead/moco/parser/model/SessionSetting/getResponseHandler()|",
      "|java+method:///com/github/dreamhead/moco/parser/model/MountSetting/getResponseHandler()|",
      "|java+method:///com/github/dreamhead/moco/parser/model/ProxyContainer/getFailover()|",
      "|java+method:///com/github/dreamhead/moco/MocoMount/to(java.lang.String)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/ProxyContainer/hasUrl()|",
      "|java+method:///com/github/dreamhead/moco/HttpServer/proxy(com.github.dreamhead.moco.handler.proxy.ProxyConfig,com.github.dreamhead.moco.handler.failover.Failover)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/ProxyContainer/getProxyConfig()|",
      "|java+method:///com/github/dreamhead/moco/parser/model/SessionSetting/isMount()|",
      "|java+method:///com/github/dreamhead/moco/parser/model/TextContainer/asResource()|",
      "|java+method:///com/github/dreamhead/moco/parser/model/SessionSetting/isRedirectResponse()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///com/github/dreamhead/moco/HttpServer/request(com.github.dreamhead.moco.RequestMatcher)|",
      "|java+method:///com/github/dreamhead/moco/HttpServer/response(com.github.dreamhead.moco.ResponseHandler,com.github.dreamhead.moco.ResponseHandler%5B%5D)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/MountSetting/getUri()|",
      "|java+method:///com/github/dreamhead/moco/HttpServer/mount(java.lang.String,com.github.dreamhead.moco.mount.MountTo,com.github.dreamhead.moco.mount.MountPredicate%5B%5D)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/SessionSetting/isAnyResponse()|",
      "|java+method:///com/github/dreamhead/moco/parser/model/SessionSetting/isProxy()|",
      "|java+method:///com/github/dreamhead/moco/parser/model/MountSetting/getDir()|",
      "|java+method:///com/github/dreamhead/moco/parser/model/MountSetting/getMountPredicates()|",
      "|java+method:///com/github/dreamhead/moco/HttpResponseSetting/response(com.github.dreamhead.moco.ResponseHandler,com.github.dreamhead.moco.ResponseHandler%5B%5D)|",
      "|java+method:///com/github/dreamhead/moco/HttpResponseSetting/redirectTo(com.github.dreamhead.moco.resource.Resource)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/SessionSetting/getRequestMatcher()|"
    ],
    "affectedLib": "com.github.dreamhead:moco-core:0.11.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.dreamhead:moco-runner:0.11.0",
    "coordinatesV2": "com.github.dreamhead:moco-runner:0.11.1",
    "caller": "|java+method:///com/github/dreamhead/moco/parser/model/DynamicResponseHandlerFactory/createResponseHandler(java.lang.String,java.lang.Object)|",
    "called": "|java+method:///com/github/dreamhead/moco/Moco/attachment(java.lang.String,com.github.dreamhead.moco.resource.Resource)|",
    "v1Body": [
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///com/github/dreamhead/moco/Moco/with(com.github.dreamhead.moco.resource.Resource)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///com/github/dreamhead/moco/parser/model/DynamicResponseHandlerFactory/resourceFrom(java.lang.String,com.github.dreamhead.moco.parser.model.TextContainer)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/LatencyContainer/getUnit()|",
      "|java+method:///com/github/dreamhead/moco/Moco/with(com.github.dreamhead.moco.MocoProcedure)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/DynamicResponseHandlerFactory/resourceFrom(com.github.dreamhead.moco.parser.model.BaseResourceSetting)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/LatencyContainer/getLatency()|",
      "|java+method:///com/github/dreamhead/moco/parser/model/DynamicResponseHandlerFactory/createCompositeHandler(java.lang.String,java.util.Map)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/DynamicResponseHandlerFactory/createProxy(com.github.dreamhead.moco.parser.model.ProxyContainer)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/DynamicResponseHandlerFactory/castToMap(java.lang.Object)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/DynamicResponseHandlerFactory/isResource(java.lang.String)|",
      "|java+method:///com/github/dreamhead/moco/Moco/status(int)|",
      "|java+method:///java/lang/Class/isInstance(java.lang.Object)|",
      "|java+method:///java/lang/Class/cast(java.lang.Object)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/AttachmentSetting/getFilename()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///com/github/dreamhead/moco/Moco/latency(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///com/github/dreamhead/moco/Moco/toJson(java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///com/github/dreamhead/moco/Moco/attachment(java.lang.String,com.github.dreamhead.moco.resource.Resource)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///com/github/dreamhead/moco/Moco/with(com.github.dreamhead.moco.resource.Resource)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///com/github/dreamhead/moco/parser/model/DynamicResponseHandlerFactory/resourceFrom(java.lang.String,com.github.dreamhead.moco.parser.model.TextContainer)|",
      "|java+method:///com/github/dreamhead/moco/Moco/with(com.github.dreamhead.moco.MocoProcedure)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/DynamicResponseHandlerFactory/resourceFrom(com.github.dreamhead.moco.parser.model.BaseResourceSetting)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/LatencyContainer/asProcedure()|",
      "|java+method:///com/github/dreamhead/moco/parser/model/DynamicResponseHandlerFactory/createCompositeHandler(java.lang.String,java.util.Map)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/DynamicResponseHandlerFactory/castToMap(java.lang.Object)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/DynamicResponseHandlerFactory/isResource(java.lang.String)|",
      "|java+method:///com/github/dreamhead/moco/Moco/status(int)|",
      "|java+method:///java/lang/Class/isInstance(java.lang.Object)|",
      "|java+method:///java/lang/Class/cast(java.lang.Object)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/ProxyContainer/asResponseHandler()|",
      "|java+method:///com/github/dreamhead/moco/parser/model/AttachmentSetting/getFilename()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///com/github/dreamhead/moco/Moco/toJson(java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///com/github/dreamhead/moco/Moco/attachment(java.lang.String,com.github.dreamhead.moco.resource.Resource)|"
    ],
    "affectedLib": "com.github.dreamhead:moco-core:0.11.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.dreamhead:moco-runner:0.11.0",
    "coordinatesV2": "com.github.dreamhead:moco-runner:0.11.1",
    "caller": "|java+method:///com/github/dreamhead/moco/parser/HttpServerParser/createServer(com.google.common.collect.ImmutableList,com.google.common.base.Optional,com.github.dreamhead.moco.MocoConfig%5B%5D)|",
    "called": "|java+method:///com/github/dreamhead/moco/internal/ActualHttpServer/createLogServer(com.google.common.base.Optional,com.github.dreamhead.moco.MocoConfig%5B%5D)|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/github/dreamhead/moco/internal/ActualHttpServer/mergeHttpServer(com.github.dreamhead.moco.internal.ActualHttpServer)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/common/collect/ImmutableList/iterator()|",
      "|java+method:///com/github/dreamhead/moco/internal/ActualHttpServer/createLogServer(com.google.common.base.Optional,com.github.dreamhead.moco.MocoConfig%5B%5D)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/SessionSetting/newHttpServer(com.google.common.base.Optional,com.github.dreamhead.moco.MocoConfig%5B%5D)|",
      "|java+method:///com/github/dreamhead/moco/parser/HttpServerParser/createServer(com.google.common.collect.ImmutableList,com.google.common.base.Optional,com.github.dreamhead.moco.MocoConfig%5B%5D)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/github/dreamhead/moco/internal/ActualHttpServer/mergeServer(com.github.dreamhead.moco.internal.BaseActualServer)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/google/common/collect/ImmutableList/iterator()|",
      "|java+method:///com/github/dreamhead/moco/internal/ActualHttpServer/createLogServer(com.google.common.base.Optional,com.github.dreamhead.moco.MocoConfig%5B%5D)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/SessionSetting/newHttpServer(com.google.common.base.Optional,com.github.dreamhead.moco.MocoConfig%5B%5D)|",
      "|java+method:///com/github/dreamhead/moco/parser/HttpServerParser/createServer(com.google.common.collect.ImmutableList,com.google.common.base.Optional,com.github.dreamhead.moco.MocoConfig%5B%5D)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|"
    ],
    "affectedLib": "com.github.dreamhead:moco-core:0.11.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.dreamhead:moco-runner:0.11.0",
    "coordinatesV2": "com.github.dreamhead:moco-runner:0.11.1",
    "caller": "|java+method:///com/github/dreamhead/moco/parser/deserializer/FileContainerDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
    "called": "|java+method:///com/github/dreamhead/moco/util/Strings/strip(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/FileContainerDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/FileContainerDeserializer/toFileContainer(com.fasterxml.jackson.core.JsonParser)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/FileContainer/asFileContainer(com.github.dreamhead.moco.parser.model.TextContainer)|",
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/FileContainerDeserializer/isForFileContainer(java.lang.String)|",
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/FileContainerDeserializer/text(com.fasterxml.jackson.core.JsonParser)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getText()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/FileContainerDeserializer/textContainer(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|"
    ],
    "v2Body": [
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/FileContainerDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/github/dreamhead/moco/util/Strings/strip(java.lang.String)|",
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/FileContainerDeserializer/toFileContainer(com.fasterxml.jackson.core.JsonParser)|",
      "|java+method:///com/github/dreamhead/moco/parser/model/FileContainer/asFileContainer(com.github.dreamhead.moco.parser.model.TextContainer)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|",
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/TextContainerDeserializerHelper/textContainer(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)|",
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/TextContainerDeserializerHelper/text(com.fasterxml.jackson.core.JsonParser)|",
      "|java+method:///com/github/dreamhead/moco/parser/deserializer/FileContainerDeserializer/isForFileContainer(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/databind/DeserializationContext/handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getText()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|"
    ],
    "affectedLib": "com.github.dreamhead:moco-core:0.11.1",
    "change": "UPDATED"
  }
]