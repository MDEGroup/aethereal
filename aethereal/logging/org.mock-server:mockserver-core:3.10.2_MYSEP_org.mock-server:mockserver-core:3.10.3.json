[
  {
    "coordinatesV1": "org.mock-server:mockserver-core:3.10.2",
    "coordinatesV2": "org.mock-server:mockserver-core:3.10.3",
    "caller": "|java+method:///org/mockserver/client/serialization/curl/OutboundRequestToCurlSerializer/getCookieHeader(org.mockserver.model.OutboundHttpRequest)|",
    "called": "|java+constructor:///io/netty/handler/codec/http/cookie/DefaultCookie/DefaultCookie(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/mockserver/model/Cookie/getValue()|",
      "|java+constructor:///io/netty/handler/codec/http/cookie/DefaultCookie/DefaultCookie(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/mockserver/model/OutboundHttpRequest/getCookies()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/mockserver/model/Cookie/getName()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/netty/handler/codec/http/cookie/ClientCookieEncoder/encode(java.lang.Iterable)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/mockserver/model/NottableString/getValue()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/mockserver/model/Cookie/getValue()|",
      "|java+constructor:///io/netty/handler/codec/http/cookie/DefaultCookie/DefaultCookie(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/mockserver/model/OutboundHttpRequest/getCookies()|",
      "|java+method:///org/mockserver/model/Cookie/getName()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///io/netty/handler/codec/http/cookie/ClientCookieEncoder/encode(java.util.Collection)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/mockserver/model/NottableString/getValue()|"
    ],
    "affectedLib": "io.netty:netty-codec-http:4.0.34.Final",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.mock-server:mockserver-core:3.10.2",
    "coordinatesV2": "org.mock-server:mockserver-core:3.10.3",
    "caller": "|java+method:///org/mockserver/client/netty/codec/MockServerRequestEncoder/setCookies(org.mockserver.model.HttpRequest,io.netty.handler.codec.http.FullHttpRequest)|",
    "called": "|java+constructor:///io/netty/handler/codec/http/cookie/DefaultCookie/DefaultCookie(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/mockserver/model/Cookie/getValue()|",
      "|java+constructor:///io/netty/handler/codec/http/cookie/DefaultCookie/DefaultCookie(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/mockserver/model/Cookie/getName()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/set(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/headers()|",
      "|java+method:///org/mockserver/model/HttpRequest/getCookies()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/netty/handler/codec/http/cookie/ClientCookieEncoder/encode(java.lang.Iterable)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/mockserver/model/NottableString/getValue()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/mockserver/model/Cookie/getValue()|",
      "|java+constructor:///io/netty/handler/codec/http/cookie/DefaultCookie/DefaultCookie(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/mockserver/model/Cookie/getName()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/netty/handler/codec/http/HttpHeaders/set(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///io/netty/handler/codec/http/FullHttpRequest/headers()|",
      "|java+method:///org/mockserver/model/HttpRequest/getCookies()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///io/netty/handler/codec/http/cookie/ClientCookieEncoder/encode(java.util.Collection)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/mockserver/model/NottableString/getValue()|"
    ],
    "affectedLib": "io.netty:netty-codec-http:4.0.34.Final",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.mock-server:mockserver-core:3.10.2",
    "coordinatesV2": "org.mock-server:mockserver-core:3.10.3",
    "caller": "|java+method:///org/mockserver/server/unification/PortUnificationHandler/enableSsl(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf)|",
    "called": "|java+constructor:///io/netty/handler/ssl/SslHandler/SslHandler(javax.net.ssl.SSLEngine)|",
    "v1Body": [
      "|java+method:///io/netty/channel/Channel/attr(io.netty.util.AttributeKey)|",
      "|java+method:///io/netty/util/Attribute/set(java.lang.Object)|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/channel()|",
      "|java+method:///org/mockserver/socket/SSLFactory/createServerSSLEngine()|",
      "|java+method:///io/netty/channel/ChannelPipeline/fireChannelRead(java.lang.Object)|",
      "|java+constructor:///io/netty/handler/ssl/SslHandler/SslHandler(javax.net.ssl.SSLEngine)|",
      "|java+method:///io/netty/channel/ChannelPipeline/addFirst(io.netty.channel.ChannelHandler%5B%5D)|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/pipeline()|"
    ],
    "v2Body": [
      "|java+method:///io/netty/channel/Channel/attr(io.netty.util.AttributeKey)|",
      "|java+method:///io/netty/util/Attribute/set(java.lang.Object)|",
      "|java+method:///com/twitter/finagle/ssl/Engine/self()|",
      "|java+method:///com/twitter/finagle/ssl/Ssl/server(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///io/netty/handler/ssl/OpenSsl/isAvailable()|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/channel()|",
      "|java+method:///org/mockserver/socket/SSLFactory/createServerSSLEngine()|",
      "|java+method:///io/netty/channel/ChannelPipeline/fireChannelRead(java.lang.Object)|",
      "|java+constructor:///io/netty/handler/ssl/SslHandler/SslHandler(javax.net.ssl.SSLEngine)|",
      "|java+method:///io/netty/channel/ChannelPipeline/addFirst(io.netty.channel.ChannelHandler%5B%5D)|",
      "|java+method:///io/netty/channel/ChannelHandlerContext/pipeline()|"
    ],
    "affectedLib": "io.netty:netty-handler:4.0.34.Final",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.mock-server:mockserver-core:3.10.2",
    "coordinatesV2": "org.mock-server:mockserver-core:3.10.3",
    "caller": "|java+method:///org/mockserver/client/netty/NettyHttpClient/sendRequest(org.mockserver.model.OutboundHttpRequest,boolean)|",
    "called": "|java+constructor:///io/netty/channel/nio/NioEventLoopGroup/NioEventLoopGroup()|",
    "v1Body": [
      "|java+method:///io/netty/bootstrap/Bootstrap/group(io.netty.channel.EventLoopGroup)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/concurrent/ExecutionException/getCause()|",
      "|java+method:///java/lang/Throwable/getMessage()|",
      "|java+method:///io/netty/channel/EventLoopGroup/shutdownGracefully(long,long,java.util.concurrent.TimeUnit)|",
      "|java+method:///org/mockserver/model/OutboundHttpRequest/isSecure()|",
      "|java+method:///io/netty/channel/ChannelFuture/addListener(io.netty.util.concurrent.GenericFutureListener)|",
      "|java+method:///java/util/concurrent/TimeoutException/getCause()|",
      "|java+constructor:///io/netty/bootstrap/Bootstrap/Bootstrap()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///io/netty/bootstrap/Bootstrap/channel(java.lang.Class)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/netty/bootstrap/Bootstrap/connect(java.net.SocketAddress)|",
      "|java+method:///org/mockserver/model/OutboundHttpRequest/getDestination()|",
      "|java+constructor:///org/mockserver/client/netty/NettyHttpClient$1/NettyHttpClient$1(org.mockserver.client.netty.NettyHttpClient,org.mockserver.model.OutboundHttpRequest,org.mockserver.client.netty.HttpClientInitializer)|",
      "|java+constructor:///org/mockserver/client/netty/SocketConnectionException/SocketConnectionException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+constructor:///org/mockserver/client/netty/SocketCommunicationException/SocketCommunicationException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/mockserver/model/OutboundHttpRequest/withSsl(boolean)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/mockserver/client/netty/NettyHttpClient/sendRequest(org.mockserver.model.OutboundHttpRequest)|",
      "|java+method:///io/netty/bootstrap/Bootstrap/handler(io.netty.channel.ChannelHandler)|",
      "|java+constructor:///org/mockserver/client/netty/HttpClientInitializer/HttpClientInitializer(boolean)|",
      "|java+method:///org/mockserver/client/netty/HttpClientInitializer/getResponseFuture()|",
      "|java+method:///org/mockserver/configuration/ConfigurationProperties/maxSocketTimeout()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///io/netty/channel/nio/NioEventLoopGroup/NioEventLoopGroup()|",
      "|java+method:///com/google/common/util/concurrent/SettableFuture/get(long,java.util.concurrent.TimeUnit)|"
    ],
    "v2Body": [
      "|java+method:///io/netty/bootstrap/Bootstrap/group(io.netty.channel.EventLoopGroup)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/concurrent/ExecutionException/getCause()|",
      "|java+method:///java/lang/Throwable/getMessage()|",
      "|java+method:///io/netty/channel/EventLoopGroup/shutdownGracefully(long,long,java.util.concurrent.TimeUnit)|",
      "|java+method:///org/mockserver/model/OutboundHttpRequest/isSecure()|",
      "|java+method:///java/util/concurrent/TimeoutException/getCause()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///io/netty/bootstrap/Bootstrap/channel(java.lang.Class)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/netty/bootstrap/Bootstrap/connect(java.net.SocketAddress)|",
      "|java+method:///org/mockserver/model/OutboundHttpRequest/getDestination()|",
      "|java+constructor:///org/mockserver/client/netty/NettyHttpClient$1/NettyHttpClient$1(org.mockserver.client.netty.NettyHttpClient,org.mockserver.model.OutboundHttpRequest,org.mockserver.client.netty.HttpClientInitializer)|",
      "|java+constructor:///org/mockserver/client/netty/SocketConnectionException/SocketConnectionException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+constructor:///org/mockserver/client/netty/SocketCommunicationException/SocketCommunicationException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/mockserver/model/OutboundHttpRequest/withSsl(boolean)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/mockserver/client/netty/NettyHttpClient/sendRequest(org.mockserver.model.OutboundHttpRequest)|",
      "|java+method:///io/netty/bootstrap/Bootstrap/handler(io.netty.channel.ChannelHandler)|",
      "|java+constructor:///org/mockserver/client/netty/HttpClientInitializer/HttpClientInitializer(boolean)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///io/netty/channel/ChannelFuture/addListener(io.netty.util.concurrent.GenericFutureListener)|",
      "|java+constructor:///io/netty/bootstrap/Bootstrap/Bootstrap()|",
      "|java+method:///io/netty/bootstrap/Bootstrap/option(io.netty.channel.ChannelOption,java.lang.Object)|",
      "|java+method:///org/mockserver/client/netty/HttpClientInitializer/getResponseFuture()|",
      "|java+method:///org/mockserver/configuration/ConfigurationProperties/maxSocketTimeout()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///io/netty/channel/nio/NioEventLoopGroup/NioEventLoopGroup()|",
      "|java+method:///com/google/common/util/concurrent/SettableFuture/get(long,java.util.concurrent.TimeUnit)|"
    ],
    "affectedLib": "io.netty:netty-transport:4.0.34.Final",
    "change": "UPDATED"
  }
]