[
  {
    "coordinatesV1": "com.github.almondtools:rexlex:0.2.7",
    "coordinatesV2": "com.github.almondtools:rexlex:0.2.8",
    "caller": "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton$FindStates/visitState(com.almondtools.rexlex.automaton.GenericAutomaton$State)|",
    "called": "|java+method:///net/amygdalum/util/builders/HashSets/minus(java.util.Set)|",
    "v1Body": [
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/almondtools/util/collections/HashSets/minus(java.util.Set)|",
      "|java+method:///java/util/Set/addAll(java.util.Collection)|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton$State/getConnectedStates()|",
      "|java+method:///com/almondtools/util/collections/HashSets/hashed(java.util.Collection)|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton$FindStates/visitState(com.almondtools.rexlex.automaton.GenericAutomaton$State)|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton$State/apply(com.almondtools.rexlex.automaton.GenericAutomaton$StateVisitor)|",
      "|java+method:///com/almondtools/util/collections/Predicate/evaluate(java.lang.Object)|",
      "|java+method:///com/almondtools/util/collections/HashSets/build()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///net/amygdalum/util/builders/HashSets/minus(java.util.Set)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Set/addAll(java.util.Collection)|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton$State/getConnectedStates()|",
      "|java+method:///net/amygdalum/util/builders/Predicate/evaluate(java.lang.Object)|",
      "|java+method:///net/amygdalum/util/builders/HashSets/build()|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton$FindStates/visitState(com.almondtools.rexlex.automaton.GenericAutomaton$State)|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton$State/apply(com.almondtools.rexlex.automaton.GenericAutomaton$StateVisitor)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///net/amygdalum/util/builders/HashSets/hashed(java.util.Collection)|"
    ],
    "affectedLib": "net.amygdalum:compilerutils:0.0.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.github.almondtools:rexlex:0.2.7",
    "coordinatesV2": "com.github.almondtools:rexlex:0.2.8",
    "caller": "|java+constructor:///com/almondtools/rexlex/automaton/GenericAutomaton$FindStates/GenericAutomaton$FindStates()|",
    "called": "|java+method:///net/amygdalum/util/builders/Predicates/all(java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///java/util/LinkedHashSet/LinkedHashSet()|",
      "|java+method:///com/almondtools/util/collections/Predicates/all(java.lang.Class)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/LinkedHashSet/LinkedHashSet()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///net/amygdalum/util/builders/Predicates/all(java.lang.Class)|",
      "|java+constructor:///java/util/HashSet/HashSet()|"
    ],
    "affectedLib": "net.amygdalum:compilerutils:0.0.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.github.almondtools:rexlex:0.2.7",
    "coordinatesV2": "com.github.almondtools:rexlex:0.2.8",
    "caller": "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/minimize()|",
    "called": "|java+method:///net/amygdalum/util/builders/HashSets/intersectionOf(java.util.Set,java.util.Set)|",
    "v1Body": [
      "|java+method:///java/util/LinkedList/contains(java.lang.Object)|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/splitByTokenType(java.util.Set)|",
      "|java+method:///java/util/LinkedList/isEmpty()|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///com/almondtools/util/collections/HashSets/complementOf(java.util.Set,java.util.Set)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/buildNewStates(java.util.Set)|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/computeRelevantCharacters()|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/initPartitions(java.util.Set,java.util.Set)|",
      "|java+method:///com/almondtools/util/collections/HashSets/hashed(java.util.Collection)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/findAllStates()|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/findAcceptStates()|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+method:///com/almondtools/util/collections/HashSets/intersectionOf(java.util.Set,java.util.Set)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/almondtools/util/collections/HashSets/minus(java.util.Set)|",
      "|java+method:///java/util/LinkedList/removeFirst()|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/refine(java.util.Collection,java.util.Set,java.util.Set,java.util.Set)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/LinkedList/add(java.lang.Object)|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///java/util/LinkedList/addAll(java.util.Collection)|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/validOrigins(char,java.util.Set,java.util.Map)|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/computeReverseTransitions(java.util.Set)|",
      "|java+method:///com/almondtools/util/collections/HashSets/build()|"
    ],
    "v2Body": [
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/splitByTokenType(java.util.Set)|",
      "|java+method:///net/amygdalum/util/builders/HashSets/complementOf(java.util.Set,java.util.Set)|",
      "|java+method:///java/util/LinkedList/isEmpty()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/buildNewStates(java.util.Set)|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/computeRelevantCharacters()|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/initPartitions(java.util.Set,java.util.Set)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/computeReverseTransitions(java.util.Set)|",
      "|java+method:///net/amygdalum/util/builders/HashSets/hashed(java.util.Collection)|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/findAllStates()|",
      "|java+method:///net/amygdalum/util/builders/HashSets/intersectionOf(java.util.Set,java.util.Set)|",
      "|java+method:///java/util/LinkedList/contains(java.lang.Object)|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/findAcceptStates()|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+method:///net/amygdalum/util/builders/HashSets/minus(java.util.Set)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/LinkedList/removeFirst()|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/refine(java.util.Collection,java.util.Set,java.util.Set,java.util.Set)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/LinkedList/add(java.lang.Object)|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///java/util/LinkedList/addAll(java.util.Collection)|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/validOrigins(char,java.util.Set,java.util.Map)|",
      "|java+method:///net/amygdalum/util/builders/HashSets/build()|"
    ],
    "affectedLib": "net.amygdalum:compilerutils:0.0.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.github.almondtools:rexlex:0.2.7",
    "coordinatesV2": "com.github.almondtools:rexlex:0.2.8",
    "caller": "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/splitByTokenType(java.util.Set)|",
    "called": "|java+method:///net/amygdalum/util/builders/HashSets/hashed(java.util.Collection)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton$State/getType()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///com/almondtools/util/collections/HashSets/hashed(java.util.Collection)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///com/almondtools/util/collections/HashSets/build()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton$State/getType()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///net/amygdalum/util/builders/HashSets/build()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///net/amygdalum/util/builders/HashSets/hashed(java.util.Collection)|"
    ],
    "affectedLib": "net.amygdalum:compilerutils:0.0.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.github.almondtools:rexlex:0.2.7",
    "coordinatesV2": "com.github.almondtools:rexlex:0.2.8",
    "caller": "|java+method:///com/almondtools/rexlex/automaton/FromDeterministicAutomaton$ToTabledAutomaton/transform(com.almondtools.rexlex.automaton.DeterministicAutomaton)|",
    "called": "|java+method:///net/amygdalum/util/builders/Arrays/fromWrapped(java.util.Collection)|",
    "v1Body": [
      "|java+constructor:///com/almondtools/rexlex/automaton/TabledAutomaton/TabledAutomaton(char%5B%5D,com.almondtools.rexlex.automaton.DeterministicAutomaton$State,com.almondtools.rexlex.automaton.DeterministicAutomaton$State)|",
      "|java+method:///com/almondtools/util/collections/CollectionUtils/toCharArray(java.util.Collection)|",
      "|java+method:///com/almondtools/rexlex/automaton/DeterministicAutomaton/getStart()|",
      "|java+method:///com/almondtools/rexlex/automaton/DeterministicAutomaton/getError()|",
      "|java+method:///com/almondtools/rexlex/automaton/DeterministicAutomaton/computeRelevantCharacters()|"
    ],
    "v2Body": [
      "|java+method:///net/amygdalum/util/builders/Arrays/fromWrapped(java.util.Collection)|",
      "|java+constructor:///com/almondtools/rexlex/automaton/TabledAutomaton/TabledAutomaton(char%5B%5D,com.almondtools.rexlex.automaton.DeterministicAutomaton$State,com.almondtools.rexlex.automaton.DeterministicAutomaton$State)|",
      "|java+method:///com/almondtools/rexlex/automaton/DeterministicAutomaton/getStart()|",
      "|java+method:///com/almondtools/rexlex/automaton/DeterministicAutomaton/getError()|",
      "|java+method:///com/almondtools/rexlex/automaton/DeterministicAutomaton/computeRelevantCharacters()|"
    ],
    "affectedLib": "net.amygdalum:compilerutils:0.0.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.github.almondtools:rexlex:0.2.7",
    "coordinatesV2": "com.github.almondtools:rexlex:0.2.8",
    "caller": "|java+method:///com/almondtools/rexlex/pattern/PatternOptionUtil/list(com.almondtools.rexlex.pattern.PatternOption%5B%5D)|",
    "called": "|java+method:///net/amygdalum/util/builders/ArrayLists/of(java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+method:///com/almondtools/util/collections/ArrayLists/of(java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+method:///net/amygdalum/util/builders/ArrayLists/of(java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "net.amygdalum:compilerutils:0.0.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.github.almondtools:rexlex:0.2.7",
    "coordinatesV2": "com.github.almondtools:rexlex:0.2.8",
    "caller": "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton$Matcher/initialContext(net.amygdalum.stringsearchalgorithms.io.CharProvider)|",
    "called": "|java+method:///net/amygdalum/util/builders/Iterators/of(java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///com/almondtools/util/collections/Iterators/of(java.lang.Object%5B%5D)|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/access$000(com.almondtools.rexlex.automaton.GenericAutomaton)|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton$Matcher/newContext(java.util.Iterator,net.amygdalum.stringsearchalgorithms.io.CharProvider)|"
    ],
    "v2Body": [
      "|java+method:///net/amygdalum/util/builders/Iterators/of(java.lang.Object%5B%5D)|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/access$000(com.almondtools.rexlex.automaton.GenericAutomaton)|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton$Matcher/newContext(java.util.Iterator,net.amygdalum.stringsearchalgorithms.io.CharProvider)|"
    ],
    "affectedLib": "net.amygdalum:compilerutils:0.0.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.github.almondtools:rexlex:0.2.7",
    "coordinatesV2": "com.github.almondtools:rexlex:0.2.8",
    "caller": "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/initPartitions(java.util.Set,java.util.Set)|",
    "called": "|java+method:///net/amygdalum/util/builders/HashSets/addConditional(boolean,java.lang.Object)|",
    "v1Body": [
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+method:///com/almondtools/util/collections/HashSets/addConditional(boolean,java.lang.Object)|",
      "|java+method:///com/almondtools/util/collections/HashSets/hashed(java.util.Collection)|",
      "|java+method:///com/almondtools/util/collections/HashSets/build()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+method:///net/amygdalum/util/builders/HashSets/build()|",
      "|java+method:///net/amygdalum/util/builders/HashSets/addConditional(boolean,java.lang.Object)|",
      "|java+method:///net/amygdalum/util/builders/HashSets/hashed(java.util.Collection)|"
    ],
    "affectedLib": "net.amygdalum:compilerutils:0.0.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.github.almondtools:rexlex:0.2.7",
    "coordinatesV2": "com.github.almondtools:rexlex:0.2.8",
    "caller": "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/determinize()|",
    "called": "|java+method:///net/amygdalum/util/builders/HashSets/of(java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///net/amygdalum/util/text/CharUtils/before(char)|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton$Transition/getTarget()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton$State/addTransition(com.almondtools.rexlex.automaton.GenericAutomaton$Transition)|",
      "|java+method:///com/almondtools/util/collections/HashSets/of(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/LinkedList/removeFirst()|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/computeJointState(java.util.Map,java.util.Set)|",
      "|java+constructor:///com/almondtools/rexlex/automaton/GenericAutomaton$State/GenericAutomaton$State()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///com/almondtools/rexlex/automaton/GenericAutomaton$ExactTransition/GenericAutomaton$ExactTransition(char,com.almondtools.rexlex.automaton.GenericAutomaton$State)|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton$State/nexts(char)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/LinkedList/add(java.lang.Object)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/computeRelevantCharacters()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/LinkedList/size()|",
      "|java+constructor:///com/almondtools/rexlex/automaton/GenericAutomaton/GenericAutomaton(com.almondtools.rexlex.automaton.GenericAutomaton$State)|",
      "|java+constructor:///com/almondtools/rexlex/automaton/GenericAutomaton$RangeTransition/GenericAutomaton$RangeTransition(char,char,com.almondtools.rexlex.automaton.GenericAutomaton$State)|"
    ],
    "v2Body": [
      "|java+method:///net/amygdalum/util/text/CharUtils/before(char)|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton$Transition/getTarget()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton$State/addTransition(com.almondtools.rexlex.automaton.GenericAutomaton$Transition)|",
      "|java+method:///java/util/LinkedList/removeFirst()|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/computeJointState(java.util.Map,java.util.Set)|",
      "|java+constructor:///com/almondtools/rexlex/automaton/GenericAutomaton$State/GenericAutomaton$State()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///com/almondtools/rexlex/automaton/GenericAutomaton$ExactTransition/GenericAutomaton$ExactTransition(char,com.almondtools.rexlex.automaton.GenericAutomaton$State)|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton$State/nexts(char)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///net/amygdalum/util/builders/HashSets/of(java.lang.Object%5B%5D)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/LinkedList/add(java.lang.Object)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/computeRelevantCharacters()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/LinkedList/size()|",
      "|java+constructor:///com/almondtools/rexlex/automaton/GenericAutomaton/GenericAutomaton(com.almondtools.rexlex.automaton.GenericAutomaton$State)|",
      "|java+constructor:///com/almondtools/rexlex/automaton/GenericAutomaton$RangeTransition/GenericAutomaton$RangeTransition(char,char,com.almondtools.rexlex.automaton.GenericAutomaton$State)|"
    ],
    "affectedLib": "net.amygdalum:compilerutils:0.0.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.github.almondtools:rexlex:0.2.7",
    "coordinatesV2": "com.github.almondtools:rexlex:0.2.8",
    "caller": "|java+method:///com/almondtools/rexlex/pattern/PatternOptionUtil/list(com.almondtools.rexlex.pattern.PatternOption,com.almondtools.rexlex.pattern.PatternOption%5B%5D)|",
    "called": "|java+method:///net/amygdalum/util/builders/ArrayLists/addAll(java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///com/almondtools/util/collections/ArrayLists/list(java.lang.Object%5B%5D)|",
      "|java+method:///com/almondtools/util/collections/ArrayLists/addAll(java.lang.Object%5B%5D)|",
      "|java+method:///com/almondtools/util/collections/ArrayLists/build()|"
    ],
    "v2Body": [
      "|java+method:///net/amygdalum/util/builders/ArrayLists/build()|",
      "|java+method:///net/amygdalum/util/builders/ArrayLists/list(java.lang.Object%5B%5D)|",
      "|java+method:///net/amygdalum/util/builders/ArrayLists/addAll(java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "net.amygdalum:compilerutils:0.0.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.github.almondtools:rexlex:0.2.7",
    "coordinatesV2": "com.github.almondtools:rexlex:0.2.8",
    "caller": "|java+method:///com/almondtools/rexlex/automaton/FromGenericAutomaton$ToTabledAutomaton/transform(com.almondtools.rexlex.automaton.GenericAutomaton)|",
    "called": "|java+method:///net/amygdalum/util/builders/Arrays/fromWrapped(java.util.Collection)|",
    "v1Body": [
      "|java+method:///com/almondtools/rexlex/automaton/DeterministicAutomaton/getProperty()|",
      "|java+method:///com/almondtools/util/collections/CollectionUtils/toCharArray(java.util.Collection)|",
      "|java+method:///com/almondtools/rexlex/automaton/DeterministicAutomaton/getError()|",
      "|java+constructor:///com/almondtools/rexlex/automaton/TabledAutomaton/TabledAutomaton(char%5B%5D,com.almondtools.rexlex.automaton.DeterministicAutomaton$State,com.almondtools.rexlex.automaton.DeterministicAutomaton$State,com.almondtools.rexlex.automaton.AutomatonProperty)|",
      "|java+method:///com/almondtools/rexlex/automaton/DeterministicAutomaton/computeRelevantCharacters()|",
      "|java+method:///com/almondtools/rexlex/automaton/FromGenericAutomaton$ToTabledAutomaton/createDeterministicAutomaton(com.almondtools.rexlex.automaton.GenericAutomaton)|",
      "|java+method:///com/almondtools/rexlex/automaton/DeterministicAutomaton/getStart()|"
    ],
    "v2Body": [
      "|java+method:///net/amygdalum/util/builders/Arrays/fromWrapped(java.util.Collection)|",
      "|java+method:///com/almondtools/rexlex/automaton/DeterministicAutomaton/getProperty()|",
      "|java+method:///com/almondtools/rexlex/automaton/DeterministicAutomaton/getError()|",
      "|java+constructor:///com/almondtools/rexlex/automaton/TabledAutomaton/TabledAutomaton(char%5B%5D,com.almondtools.rexlex.automaton.DeterministicAutomaton$State,com.almondtools.rexlex.automaton.DeterministicAutomaton$State,com.almondtools.rexlex.automaton.AutomatonProperty)|",
      "|java+method:///com/almondtools/rexlex/automaton/DeterministicAutomaton/computeRelevantCharacters()|",
      "|java+method:///com/almondtools/rexlex/automaton/FromGenericAutomaton$ToTabledAutomaton/createDeterministicAutomaton(com.almondtools.rexlex.automaton.GenericAutomaton)|",
      "|java+method:///com/almondtools/rexlex/automaton/DeterministicAutomaton/getStart()|"
    ],
    "affectedLib": "net.amygdalum:compilerutils:0.0.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.github.almondtools:rexlex:0.2.7",
    "coordinatesV2": "com.github.almondtools:rexlex:0.2.8",
    "caller": "|java+method:///com/almondtools/rexlex/automaton/DeterministicAutomaton/findDeadStates()|",
    "called": "|java+method:///net/amygdalum/util/builders/HashSets/minus(java.util.Set)|",
    "v1Body": [
      "|java+method:///com/almondtools/rexlex/automaton/DeterministicAutomaton/findLiveStates()|",
      "|java+method:///com/almondtools/rexlex/automaton/DeterministicAutomaton/findAllStates()|",
      "|java+method:///com/almondtools/util/collections/HashSets/minus(java.util.Set)|",
      "|java+method:///com/almondtools/util/collections/HashSets/hashed(java.util.Collection)|",
      "|java+method:///com/almondtools/util/collections/HashSets/build()|"
    ],
    "v2Body": [
      "|java+method:///com/almondtools/rexlex/automaton/DeterministicAutomaton/findLiveStates()|",
      "|java+method:///com/almondtools/rexlex/automaton/DeterministicAutomaton/findAllStates()|",
      "|java+method:///net/amygdalum/util/builders/HashSets/minus(java.util.Set)|",
      "|java+method:///net/amygdalum/util/builders/HashSets/build()|",
      "|java+method:///net/amygdalum/util/builders/HashSets/hashed(java.util.Collection)|"
    ],
    "affectedLib": "net.amygdalum:compilerutils:0.0.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.github.almondtools:rexlex:0.2.7",
    "coordinatesV2": "com.github.almondtools:rexlex:0.2.8",
    "caller": "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/computeRelevantCharacters()|",
    "called": "|java+method:///net/amygdalum/util/builders/Arrays/fromWrapped(java.util.Collection)|",
    "v1Body": [
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+constructor:///java/util/TreeSet/TreeSet()|",
      "|java+method:///java/util/SortedSet/addAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/almondtools/util/collections/CollectionUtils/toCharArray(java.util.Collection)|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton$State/getRelevantCharacters()|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/findAllStates()|"
    ],
    "v2Body": [
      "|java+method:///net/amygdalum/util/builders/Arrays/fromWrapped(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+constructor:///java/util/TreeSet/TreeSet()|",
      "|java+method:///java/util/SortedSet/addAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton$State/getRelevantCharacters()|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/findAllStates()|"
    ],
    "affectedLib": "net.amygdalum:compilerutils:0.0.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.github.almondtools:rexlex:0.2.7",
    "coordinatesV2": "com.github.almondtools:rexlex:0.2.8",
    "caller": "|java+method:///com/almondtools/rexlex/automaton/DeterministicAutomaton$FindStates/visitState(com.almondtools.rexlex.automaton.DeterministicAutomaton$State)|",
    "called": "|java+method:///net/amygdalum/util/builders/HashSets/minus(java.util.Set)|",
    "v1Body": [
      "|java+method:///com/almondtools/rexlex/automaton/DeterministicAutomaton$State/apply(com.almondtools.rexlex.automaton.DeterministicAutomaton$StateVisitor)|",
      "|java+method:///java/util/Set/addAll(java.util.Collection)|",
      "|java+method:///com/almondtools/rexlex/automaton/DeterministicAutomaton$FindStates/visitState(com.almondtools.rexlex.automaton.DeterministicAutomaton$State)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/almondtools/rexlex/automaton/DeterministicAutomaton$State/getDirectlyReachableStates()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///com/almondtools/util/collections/HashSets/hashed(java.util.Collection)|",
      "|java+method:///com/almondtools/util/collections/HashSets/build()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/almondtools/util/collections/HashSets/minus(java.util.Set)|"
    ],
    "v2Body": [
      "|java+method:///com/almondtools/rexlex/automaton/DeterministicAutomaton$State/apply(com.almondtools.rexlex.automaton.DeterministicAutomaton$StateVisitor)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Set/addAll(java.util.Collection)|",
      "|java+method:///net/amygdalum/util/builders/HashSets/minus(java.util.Set)|",
      "|java+method:///com/almondtools/rexlex/automaton/DeterministicAutomaton$FindStates/visitState(com.almondtools.rexlex.automaton.DeterministicAutomaton$State)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/almondtools/rexlex/automaton/DeterministicAutomaton$State/getDirectlyReachableStates()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///net/amygdalum/util/builders/HashSets/build()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///net/amygdalum/util/builders/HashSets/hashed(java.util.Collection)|"
    ],
    "affectedLib": "net.amygdalum:compilerutils:0.0.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.github.almondtools:rexlex:0.2.7",
    "coordinatesV2": "com.github.almondtools:rexlex:0.2.8",
    "caller": "|java+method:///com/almondtools/rexlex/automaton/DeterministicAutomaton$FindAcceptStates/visitState(com.almondtools.rexlex.automaton.DeterministicAutomaton$State)|",
    "called": "|java+method:///net/amygdalum/util/builders/HashSets/minus(java.util.Set)|",
    "v1Body": [
      "|java+method:///com/almondtools/rexlex/automaton/DeterministicAutomaton$State/apply(com.almondtools.rexlex.automaton.DeterministicAutomaton$StateVisitor)|",
      "|java+method:///java/util/Set/addAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/almondtools/rexlex/automaton/DeterministicAutomaton$State/getDirectlyReachableStates()|",
      "|java+method:///com/almondtools/util/collections/HashSets/build()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/almondtools/util/collections/HashSets/minus(java.util.Set)|",
      "|java+method:///com/almondtools/rexlex/automaton/DeterministicAutomaton$FindAcceptStates/visitState(com.almondtools.rexlex.automaton.DeterministicAutomaton$State)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///com/almondtools/util/collections/HashSets/hashed(java.util.Collection)|",
      "|java+method:///com/almondtools/rexlex/automaton/DeterministicAutomaton$State/accept()|"
    ],
    "v2Body": [
      "|java+method:///com/almondtools/rexlex/automaton/DeterministicAutomaton$State/apply(com.almondtools.rexlex.automaton.DeterministicAutomaton$StateVisitor)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Set/addAll(java.util.Collection)|",
      "|java+method:///net/amygdalum/util/builders/HashSets/minus(java.util.Set)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/almondtools/rexlex/automaton/DeterministicAutomaton$State/getDirectlyReachableStates()|",
      "|java+method:///net/amygdalum/util/builders/HashSets/build()|",
      "|java+method:///com/almondtools/rexlex/automaton/DeterministicAutomaton$State/accept()|",
      "|java+method:///com/almondtools/rexlex/automaton/DeterministicAutomaton$FindAcceptStates/visitState(com.almondtools.rexlex.automaton.DeterministicAutomaton$State)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///net/amygdalum/util/builders/HashSets/hashed(java.util.Collection)|"
    ],
    "affectedLib": "net.amygdalum:compilerutils:0.0.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.github.almondtools:rexlex:0.2.7",
    "coordinatesV2": "com.github.almondtools:rexlex:0.2.8",
    "caller": "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton$State/computeClosure()|",
    "called": "|java+method:///net/amygdalum/util/builders/ArrayLists/of(java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton$Transition/getTarget()|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+constructor:///java/util/LinkedHashSet/LinkedHashSet()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/almondtools/util/collections/ArrayLists/of(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton$State/getTransitions()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/remove(int)|"
    ],
    "v2Body": [
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton$Transition/getTarget()|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+constructor:///java/util/LinkedHashSet/LinkedHashSet()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton$State/getTransitions()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/remove(int)|",
      "|java+method:///net/amygdalum/util/builders/ArrayLists/of(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|"
    ],
    "affectedLib": "net.amygdalum:compilerutils:0.0.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.github.almondtools:rexlex:0.2.7",
    "coordinatesV2": "com.github.almondtools:rexlex:0.2.8",
    "caller": "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/findDeadStates()|",
    "called": "|java+method:///net/amygdalum/util/builders/HashSets/minus(java.util.Set)|",
    "v1Body": [
      "|java+method:///com/almondtools/util/collections/HashSets/minus(java.util.Set)|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/findLiveStates()|",
      "|java+method:///com/almondtools/util/collections/HashSets/hashed(java.util.Collection)|",
      "|java+method:///com/almondtools/util/collections/HashSets/build()|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/findAllStates()|"
    ],
    "v2Body": [
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/findLiveStates()|",
      "|java+method:///net/amygdalum/util/builders/HashSets/minus(java.util.Set)|",
      "|java+method:///net/amygdalum/util/builders/HashSets/build()|",
      "|java+method:///net/amygdalum/util/builders/HashSets/hashed(java.util.Collection)|",
      "|java+method:///com/almondtools/rexlex/automaton/GenericAutomaton/findAllStates()|"
    ],
    "affectedLib": "net.amygdalum:compilerutils:0.0.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.github.almondtools:rexlex:0.2.7",
    "coordinatesV2": "com.github.almondtools:rexlex:0.2.8",
    "caller": "|java+method:///com/almondtools/rexlex/pattern/Pattern/compileGenericAutomaton(java.lang.String,java.util.List)|",
    "called": "|java+constructor:///net/amygdalum/regexparser/RegexParser/RegexParser(java.lang.String,net.amygdalum.regexparser.RegexParserOption%5B%5D)|",
    "v1Body": [
      "|java+method:///com/almondtools/rexlex/automaton/AutomatonBuilder/buildFrom(com.almondtools.rexlex.pattern.Pattern$PatternNode,com.almondtools.rexlex.TokenType)|",
      "|java+method:///com/almondtools/rexlex/pattern/Pattern$PatternParser/parse()|",
      "|java+method:///com/almondtools/rexlex/automaton/AutomatonBuilder/buildFrom(com.almondtools.rexlex.pattern.Pattern$PatternNode)|",
      "|java+method:///com/almondtools/rexlex/pattern/PatternOptionUtil/splitFirst(java.util.List,java.lang.Class)|",
      "|java+constructor:///com/almondtools/rexlex/pattern/Pattern$PatternParser/Pattern$PatternParser(java.lang.String,java.util.List)|",
      "|java+method:///com/almondtools/rexlex/pattern/Pattern/automatonBuilder(java.util.List)|",
      "|java+method:///com/almondtools/rexlex/pattern/RemainderTokenType/getRemainder()|",
      "|java+method:///com/almondtools/rexlex/pattern/PatternOptionUtil/splitOf(java.util.List,java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///com/almondtools/rexlex/automaton/AutomatonBuilder/buildFrom(net.amygdalum.regexparser.RegexNode,com.almondtools.rexlex.TokenType)|",
      "|java+method:///com/almondtools/rexlex/pattern/PatternFlag/getOption()|",
      "|java+constructor:///net/amygdalum/regexparser/RegexParser/RegexParser(java.lang.String,net.amygdalum.regexparser.RegexParserOption%5B%5D)|",
      "|java+method:///net/amygdalum/regexparser/RegexParser/parse()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///com/almondtools/rexlex/pattern/PatternOptionUtil/splitFirst(java.util.List,java.lang.Class)|",
      "|java+method:///com/almondtools/rexlex/pattern/Pattern/automatonBuilder(java.util.List)|",
      "|java+method:///com/almondtools/rexlex/pattern/RemainderTokenType/getRemainder()|",
      "|java+method:///com/almondtools/rexlex/pattern/PatternOptionUtil/splitOf(java.util.List,java.lang.Class)|",
      "|java+method:///com/almondtools/rexlex/automaton/AutomatonBuilder/buildFrom(net.amygdalum.regexparser.RegexNode)|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "affectedLib": "net.amygdalum:regexparser:0.0.2",
    "change": "ADDED"
  }
]