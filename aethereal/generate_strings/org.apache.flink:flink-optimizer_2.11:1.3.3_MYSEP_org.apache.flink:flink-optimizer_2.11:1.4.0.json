[
  {
    "coordinatesV1": "org.apache.flink:flink-optimizer_2.11:1.3.3",
    "coordinatesV2": "org.apache.flink:flink-optimizer_2.11:1.4.0",
    "caller": "|java+method:///org/apache/flink/optimizer/plantranslate/JobGraphGenerator/attachOperatorNamesAndDescriptions()|",
    "called": "|java+constructor:///org/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonFactory/JsonFactory()|",
    "v1Body": [
      "|java+method:///org/apache/flink/optimizer/plan/PlanNode/getNodeName()|",
      "|java+method:///org/apache/flink/optimizer/dag/OptimizerNode/getOperatorName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/flink/runtime/jobgraph/JobVertex/getOperatorPrettyName()|",
      "|java+method:///org/apache/flink/util/StringUtils/showControlCharacters(java.lang.String)|",
      "|java+method:///org/apache/flink/runtime/jobgraph/JobVertex/getOperatorDescription()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/flink/runtime/jobgraph/JobVertex/setOperatorDescription(java.lang.String)|",
      "|java+method:///org/apache/flink/optimizer/plan/PlanNode/getInputs()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/flink/runtime/jobgraph/JobVertex/setResultOptimizerProperties(java.lang.String)|",
      "|java+method:///org/apache/flink/optimizer/plan/PlanNode/getDriverStrategy()|",
      "|java+method:///org/apache/flink/runtime/jobgraph/JobVertex/setOperatorPrettyName(java.lang.String)|",
      "|java+constructor:///com/fasterxml/jackson/core/JsonFactory/JsonFactory()|",
      "|java+method:///org/apache/flink/runtime/jobgraph/JobVertex/getOperatorName()|",
      "|java+method:///org/apache/flink/optimizer/plantranslate/JsonMapper/getOptimizerPropertiesJson(com.fasterxml.jackson.core.JsonFactory,org.apache.flink.optimizer.plan.PlanNode)|",
      "|java+method:///org/apache/flink/optimizer/plantranslate/JsonMapper/getOperatorStrategyString(org.apache.flink.runtime.operators.DriverStrategy)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/flink/optimizer/plantranslate/JsonMapper/getOperatorStrategyString(org.apache.flink.runtime.operators.DriverStrategy,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/flink/optimizer/plantranslate/JobGraphGenerator$TaskInChain/getPlanNode()|",
      "|java+method:///org/apache/flink/runtime/jobgraph/JobVertex/setOperatorName(java.lang.String)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/apache/flink/optimizer/plan/PlanNode/getOptimizerNode()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/apache/flink/optimizer/plan/Channel/getSource()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/flink/optimizer/plantranslate/JobGraphGenerator$TaskInChain/getContainingVertex()|",
      "|java+method:///org/apache/flink/runtime/jobgraph/JobVertex/getResultOptimizerProperties()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/flink/optimizer/plan/PlanNode/getNodeName()|",
      "|java+method:///org/apache/flink/optimizer/dag/OptimizerNode/getOperatorName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/flink/runtime/jobgraph/JobVertex/getOperatorPrettyName()|",
      "|java+method:///org/apache/flink/optimizer/plantranslate/JsonMapper/getOptimizerPropertiesJson(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory,org.apache.flink.optimizer.plan.PlanNode)|",
      "|java+method:///org/apache/flink/util/StringUtils/showControlCharacters(java.lang.String)|",
      "|java+method:///org/apache/flink/runtime/jobgraph/JobVertex/getOperatorDescription()|",
      "|java+method:///org/apache/flink/runtime/jobgraph/JobVertex/getOperatorName()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/flink/runtime/jobgraph/JobVertex/setOperatorDescription(java.lang.String)|",
      "|java+method:///org/apache/flink/optimizer/plan/PlanNode/getInputs()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/flink/runtime/jobgraph/JobVertex/setResultOptimizerProperties(java.lang.String)|",
      "|java+method:///org/apache/flink/optimizer/plan/PlanNode/getDriverStrategy()|",
      "|java+method:///org/apache/flink/runtime/jobgraph/JobVertex/setOperatorPrettyName(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonFactory/JsonFactory()|",
      "|java+method:///org/apache/flink/optimizer/plantranslate/JsonMapper/getOperatorStrategyString(org.apache.flink.runtime.operators.DriverStrategy)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/flink/optimizer/plantranslate/JsonMapper/getOperatorStrategyString(org.apache.flink.runtime.operators.DriverStrategy,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/flink/optimizer/plantranslate/JobGraphGenerator$TaskInChain/getPlanNode()|",
      "|java+method:///org/apache/flink/runtime/jobgraph/JobVertex/setOperatorName(java.lang.String)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/apache/flink/optimizer/plan/PlanNode/getOptimizerNode()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/apache/flink/optimizer/plan/Channel/getSource()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/flink/optimizer/plantranslate/JobGraphGenerator$TaskInChain/getContainingVertex()|",
      "|java+method:///org/apache/flink/runtime/jobgraph/JobVertex/getResultOptimizerProperties()|"
    ],
    "affectedLib": "org.apache.flink:flink-shaded-jackson:2.7.9-2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.flink:flink-optimizer_2.11:1.3.3",
    "coordinatesV2": "org.apache.flink:flink-optimizer_2.11:1.4.0",
    "caller": "|java+method:///org/apache/flink/optimizer/dag/SingleInputNode/instantiateCandidate(org.apache.flink.optimizer.operators.OperatorDescriptorSingle,org.apache.flink.optimizer.plan.Channel,java.util.List,java.util.List,org.apache.flink.optimizer.costs.CostEstimator,org.apache.flink.optimizer.dataproperties.RequestedGlobalProperties,org.apache.flink.optimizer.dataproperties.RequestedLocalProperties)|",
    "called": "|java+method:///org/apache/flink/shaded/guava18/com/google/common/collect/Sets/cartesianProduct(java.util.List)|",
    "v1Body": [
      "|java+method:///org/apache/flink/optimizer/dataproperties/LocalProperties/filterBySemanticProperties(org.apache.flink.api.common.operators.SemanticProperties,int)|",
      "|java+method:///org/apache/flink/optimizer/dag/SingleInputNode/getSemanticPropertiesForGlobalPropertyFiltering()|",
      "|java+method:///org/apache/flink/optimizer/dag/SingleInputNode/areBranchCompatible(org.apache.flink.optimizer.plan.PlanNode,org.apache.flink.optimizer.plan.PlanNode)|",
      "|java+method:///org/apache/flink/optimizer/operators/OperatorDescriptorSingle/computeGlobalProperties(org.apache.flink.optimizer.dataproperties.GlobalProperties)|",
      "|java+method:///org/apache/flink/optimizer/dag/SingleInputNode/getUniqueFields()|",
      "|java+method:///org/apache/flink/optimizer/plan/Channel/setTempMode(org.apache.flink.optimizer.dag.TempMode)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/flink/optimizer/dataproperties/GlobalProperties/clone()|",
      "|java+constructor:///org/apache/flink/optimizer/CompilerException/CompilerException()|",
      "|java+method:///org/apache/flink/optimizer/plan/Channel/getTempMode()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/apache/flink/optimizer/plan/Channel/getSource()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/flink/optimizer/plan/SingleInputPlanNode/initProperties(org.apache.flink.optimizer.dataproperties.GlobalProperties,org.apache.flink.optimizer.dataproperties.LocalProperties)|",
      "|java+method:///org/apache/flink/optimizer/dataproperties/GlobalProperties/filterBySemanticProperties(org.apache.flink.api.common.operators.SemanticProperties,int)|",
      "|java+method:///org/apache/flink/optimizer/plan/Channel/isOnDynamicPath()|",
      "|java+method:///org/apache/flink/optimizer/dag/TempMode/makePipelineBreaker()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/flink/optimizer/operators/OperatorDescriptorSingle/computeLocalProperties(org.apache.flink.optimizer.dataproperties.LocalProperties)|",
      "|java+method:///org/apache/flink/optimizer/plan/NamedChannel/getSource()|",
      "|java+method:///org/apache/flink/optimizer/plan/SingleInputPlanNode/setBroadcastInputs(java.util.List)|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///org/apache/flink/optimizer/CompilerException/CompilerException(java.lang.String)|",
      "|java+method:///org/apache/flink/optimizer/dag/SingleInputNode/getSemanticPropertiesForLocalPropertyFiltering()|",
      "|java+method:///org/apache/flink/shaded/com/google/common/collect/Sets/cartesianProduct(java.util.List)|",
      "|java+method:///org/apache/flink/optimizer/plan/Channel/getLocalProperties()|",
      "|java+method:///org/apache/flink/optimizer/dataproperties/LocalProperties/clone()|",
      "|java+method:///org/apache/flink/optimizer/plan/PlanNode/getCandidateAtBranchPoint(org.apache.flink.optimizer.dag.OptimizerNode)|",
      "|java+method:///org/apache/flink/optimizer/plan/Channel/getGlobalProperties()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/flink/optimizer/plan/SingleInputPlanNode/updatePropertiesWithUniqueSets(java.util.Set)|",
      "|java+method:///org/apache/flink/optimizer/plan/PlanNode/hasDamOnPathDownTo(org.apache.flink.optimizer.plan.PlanNode)|",
      "|java+method:///org/apache/flink/optimizer/operators/OperatorDescriptorSingle/instantiate(org.apache.flink.optimizer.plan.Channel,org.apache.flink.optimizer.dag.SingleInputNode)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/flink/optimizer/dataproperties/LocalProperties/filterBySemanticProperties(org.apache.flink.api.common.operators.SemanticProperties,int)|",
      "|java+method:///org/apache/flink/optimizer/dag/SingleInputNode/getSemanticPropertiesForGlobalPropertyFiltering()|",
      "|java+method:///org/apache/flink/optimizer/operators/OperatorDescriptorSingle/computeGlobalProperties(org.apache.flink.optimizer.dataproperties.GlobalProperties)|",
      "|java+method:///org/apache/flink/optimizer/dag/SingleInputNode/getUniqueFields()|",
      "|java+method:///org/apache/flink/optimizer/plan/Channel/setTempMode(org.apache.flink.optimizer.dag.TempMode)|",
      "|java+method:///org/apache/flink/optimizer/dag/SingleInputNode/getSemanticPropertiesForLocalPropertyFiltering()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/flink/optimizer/dataproperties/GlobalProperties/clone()|",
      "|java+constructor:///org/apache/flink/optimizer/CompilerException/CompilerException()|",
      "|java+method:///org/apache/flink/optimizer/plan/Channel/getTempMode()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/apache/flink/optimizer/plan/Channel/getSource()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/flink/optimizer/plan/SingleInputPlanNode/initProperties(org.apache.flink.optimizer.dataproperties.GlobalProperties,org.apache.flink.optimizer.dataproperties.LocalProperties)|",
      "|java+method:///org/apache/flink/optimizer/dataproperties/GlobalProperties/filterBySemanticProperties(org.apache.flink.api.common.operators.SemanticProperties,int)|",
      "|java+method:///org/apache/flink/optimizer/plan/Channel/isOnDynamicPath()|",
      "|java+method:///org/apache/flink/optimizer/dag/TempMode/makePipelineBreaker()|",
      "|java+method:///org/apache/flink/optimizer/dag/SingleInputNode/areBranchCompatible(org.apache.flink.optimizer.plan.PlanNode,org.apache.flink.optimizer.plan.PlanNode)|",
      "|java+method:///org/apache/flink/shaded/guava18/com/google/common/collect/Sets/cartesianProduct(java.util.List)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/flink/optimizer/operators/OperatorDescriptorSingle/computeLocalProperties(org.apache.flink.optimizer.dataproperties.LocalProperties)|",
      "|java+method:///org/apache/flink/optimizer/plan/NamedChannel/getSource()|",
      "|java+method:///org/apache/flink/optimizer/plan/SingleInputPlanNode/setBroadcastInputs(java.util.List)|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///org/apache/flink/optimizer/CompilerException/CompilerException(java.lang.String)|",
      "|java+method:///org/apache/flink/optimizer/plan/Channel/getLocalProperties()|",
      "|java+method:///org/apache/flink/optimizer/dataproperties/LocalProperties/clone()|",
      "|java+method:///org/apache/flink/optimizer/plan/PlanNode/getCandidateAtBranchPoint(org.apache.flink.optimizer.dag.OptimizerNode)|",
      "|java+method:///org/apache/flink/optimizer/plan/Channel/getGlobalProperties()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/flink/optimizer/plan/SingleInputPlanNode/updatePropertiesWithUniqueSets(java.util.Set)|",
      "|java+method:///org/apache/flink/optimizer/plan/PlanNode/hasDamOnPathDownTo(org.apache.flink.optimizer.plan.PlanNode)|",
      "|java+method:///org/apache/flink/optimizer/operators/OperatorDescriptorSingle/instantiate(org.apache.flink.optimizer.plan.Channel,org.apache.flink.optimizer.dag.SingleInputNode)|"
    ],
    "affectedLib": "org.apache.flink:flink-shaded-guava:18.0-2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.flink:flink-optimizer_2.11:1.3.3",
    "coordinatesV2": "org.apache.flink:flink-optimizer_2.11:1.4.0",
    "caller": "|java+method:///org/apache/flink/optimizer/dag/TwoInputNode/instantiate(org.apache.flink.optimizer.operators.OperatorDescriptorDual,org.apache.flink.optimizer.plan.Channel,org.apache.flink.optimizer.plan.Channel,java.util.List,java.util.List,org.apache.flink.optimizer.costs.CostEstimator,org.apache.flink.optimizer.dataproperties.RequestedGlobalProperties,org.apache.flink.optimizer.dataproperties.RequestedGlobalProperties,org.apache.flink.optimizer.dataproperties.RequestedLocalProperties,org.apache.flink.optimizer.dataproperties.RequestedLocalProperties)|",
    "called": "|java+method:///org/apache/flink/shaded/guava18/com/google/common/collect/Sets/cartesianProduct(java.util.List)|",
    "v1Body": [
      "|java+method:///org/apache/flink/optimizer/dataproperties/LocalProperties/filterBySemanticProperties(org.apache.flink.api.common.operators.SemanticProperties,int)|",
      "|java+method:///org/apache/flink/optimizer/plan/DualInputPlanNode/setBroadcastInputs(java.util.List)|",
      "|java+method:///org/apache/flink/optimizer/operators/OperatorDescriptorDual/instantiate(org.apache.flink.optimizer.plan.Channel,org.apache.flink.optimizer.plan.Channel,org.apache.flink.optimizer.dag.TwoInputNode)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/flink/shaded/com/google/common/collect/Sets/cartesianProduct(java.util.List)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/apache/flink/optimizer/plan/Channel/getSource()|",
      "|java+method:///org/apache/flink/optimizer/operators/OperatorDescriptorDual/computeLocalProperties(org.apache.flink.optimizer.dataproperties.LocalProperties,org.apache.flink.optimizer.dataproperties.LocalProperties)|",
      "|java+method:///org/apache/flink/optimizer/dag/TwoInputNode/areBranchCompatible(org.apache.flink.optimizer.plan.PlanNode,org.apache.flink.optimizer.plan.PlanNode)|",
      "|java+method:///org/apache/flink/optimizer/dataproperties/GlobalProperties/filterBySemanticProperties(org.apache.flink.api.common.operators.SemanticProperties,int)|",
      "|java+method:///org/apache/flink/optimizer/operators/OperatorDescriptorDual/getStrategy()|",
      "|java+method:///org/apache/flink/optimizer/dag/TwoInputNode/getSemanticPropertiesForLocalPropertyFiltering()|",
      "|java+method:///org/apache/flink/optimizer/plan/DualInputPlanNode/updatePropertiesWithUniqueSets(java.util.Set)|",
      "|java+method:///org/apache/flink/optimizer/dag/TwoInputNode/getSemanticPropertiesForGlobalPropertyFiltering()|",
      "|java+method:///org/apache/flink/optimizer/dag/TwoInputNode/placePipelineBreakersIfNecessary(org.apache.flink.runtime.operators.DriverStrategy,org.apache.flink.optimizer.plan.Channel,org.apache.flink.optimizer.plan.Channel)|",
      "|java+method:///org/apache/flink/optimizer/plan/NamedChannel/getSource()|",
      "|java+method:///org/apache/flink/optimizer/dag/TwoInputNode/getUniqueFields()|",
      "|java+method:///org/apache/flink/optimizer/dataproperties/GlobalProperties/clone()|",
      "|java+method:///org/apache/flink/optimizer/plan/DualInputPlanNode/initProperties(org.apache.flink.optimizer.dataproperties.GlobalProperties,org.apache.flink.optimizer.dataproperties.LocalProperties)|",
      "|java+method:///org/apache/flink/optimizer/operators/OperatorDescriptorDual/computeGlobalProperties(org.apache.flink.optimizer.dataproperties.GlobalProperties,org.apache.flink.optimizer.dataproperties.GlobalProperties)|",
      "|java+method:///org/apache/flink/optimizer/plan/Channel/getLocalProperties()|",
      "|java+method:///org/apache/flink/optimizer/dataproperties/LocalProperties/clone()|",
      "|java+method:///org/apache/flink/optimizer/plan/Channel/getGlobalProperties()|",
      "|java+method:///java/util/Set/iterator()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/flink/optimizer/dataproperties/LocalProperties/filterBySemanticProperties(org.apache.flink.api.common.operators.SemanticProperties,int)|",
      "|java+method:///org/apache/flink/optimizer/plan/DualInputPlanNode/setBroadcastInputs(java.util.List)|",
      "|java+method:///org/apache/flink/optimizer/operators/OperatorDescriptorDual/instantiate(org.apache.flink.optimizer.plan.Channel,org.apache.flink.optimizer.plan.Channel,org.apache.flink.optimizer.dag.TwoInputNode)|",
      "|java+method:///org/apache/flink/shaded/guava18/com/google/common/collect/Sets/cartesianProduct(java.util.List)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/apache/flink/optimizer/plan/Channel/getSource()|",
      "|java+method:///org/apache/flink/optimizer/operators/OperatorDescriptorDual/computeLocalProperties(org.apache.flink.optimizer.dataproperties.LocalProperties,org.apache.flink.optimizer.dataproperties.LocalProperties)|",
      "|java+method:///org/apache/flink/optimizer/dag/TwoInputNode/areBranchCompatible(org.apache.flink.optimizer.plan.PlanNode,org.apache.flink.optimizer.plan.PlanNode)|",
      "|java+method:///org/apache/flink/optimizer/dataproperties/GlobalProperties/filterBySemanticProperties(org.apache.flink.api.common.operators.SemanticProperties,int)|",
      "|java+method:///org/apache/flink/optimizer/operators/OperatorDescriptorDual/getStrategy()|",
      "|java+method:///org/apache/flink/optimizer/dag/TwoInputNode/getSemanticPropertiesForLocalPropertyFiltering()|",
      "|java+method:///org/apache/flink/optimizer/plan/DualInputPlanNode/updatePropertiesWithUniqueSets(java.util.Set)|",
      "|java+method:///org/apache/flink/optimizer/dag/TwoInputNode/getSemanticPropertiesForGlobalPropertyFiltering()|",
      "|java+method:///org/apache/flink/optimizer/dag/TwoInputNode/placePipelineBreakersIfNecessary(org.apache.flink.runtime.operators.DriverStrategy,org.apache.flink.optimizer.plan.Channel,org.apache.flink.optimizer.plan.Channel)|",
      "|java+method:///org/apache/flink/optimizer/plan/NamedChannel/getSource()|",
      "|java+method:///org/apache/flink/optimizer/dag/TwoInputNode/getUniqueFields()|",
      "|java+method:///org/apache/flink/optimizer/dataproperties/GlobalProperties/clone()|",
      "|java+method:///org/apache/flink/optimizer/plan/DualInputPlanNode/initProperties(org.apache.flink.optimizer.dataproperties.GlobalProperties,org.apache.flink.optimizer.dataproperties.LocalProperties)|",
      "|java+method:///org/apache/flink/optimizer/operators/OperatorDescriptorDual/computeGlobalProperties(org.apache.flink.optimizer.dataproperties.GlobalProperties,org.apache.flink.optimizer.dataproperties.GlobalProperties)|",
      "|java+method:///org/apache/flink/optimizer/plan/Channel/getLocalProperties()|",
      "|java+method:///org/apache/flink/optimizer/dataproperties/LocalProperties/clone()|",
      "|java+method:///org/apache/flink/optimizer/plan/Channel/getGlobalProperties()|",
      "|java+method:///java/util/Set/iterator()|"
    ],
    "affectedLib": "org.apache.flink:flink-shaded-guava:18.0-2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.flink:flink-optimizer_2.11:1.3.3",
    "coordinatesV2": "org.apache.flink:flink-optimizer_2.11:1.4.0",
    "caller": "|java+method:///org/apache/flink/optimizer/plantranslate/JobGraphGenerator/attachOperatorNamesAndDescriptions()|",
    "called": "|java+method:///org/apache/flink/util/StringUtils/showControlCharacters(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/flink/optimizer/plan/PlanNode/getNodeName()|",
      "|java+method:///org/apache/flink/optimizer/dag/OptimizerNode/getOperatorName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/flink/runtime/jobgraph/JobVertex/getOperatorPrettyName()|",
      "|java+method:///org/apache/flink/util/StringUtils/showControlCharacters(java.lang.String)|",
      "|java+method:///org/apache/flink/runtime/jobgraph/JobVertex/getOperatorDescription()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/flink/runtime/jobgraph/JobVertex/setOperatorDescription(java.lang.String)|",
      "|java+method:///org/apache/flink/optimizer/plan/PlanNode/getInputs()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/flink/runtime/jobgraph/JobVertex/setResultOptimizerProperties(java.lang.String)|",
      "|java+method:///org/apache/flink/optimizer/plan/PlanNode/getDriverStrategy()|",
      "|java+method:///org/apache/flink/runtime/jobgraph/JobVertex/setOperatorPrettyName(java.lang.String)|",
      "|java+constructor:///com/fasterxml/jackson/core/JsonFactory/JsonFactory()|",
      "|java+method:///org/apache/flink/runtime/jobgraph/JobVertex/getOperatorName()|",
      "|java+method:///org/apache/flink/optimizer/plantranslate/JsonMapper/getOptimizerPropertiesJson(com.fasterxml.jackson.core.JsonFactory,org.apache.flink.optimizer.plan.PlanNode)|",
      "|java+method:///org/apache/flink/optimizer/plantranslate/JsonMapper/getOperatorStrategyString(org.apache.flink.runtime.operators.DriverStrategy)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/flink/optimizer/plantranslate/JsonMapper/getOperatorStrategyString(org.apache.flink.runtime.operators.DriverStrategy,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/flink/optimizer/plantranslate/JobGraphGenerator$TaskInChain/getPlanNode()|",
      "|java+method:///org/apache/flink/runtime/jobgraph/JobVertex/setOperatorName(java.lang.String)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/apache/flink/optimizer/plan/PlanNode/getOptimizerNode()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/apache/flink/optimizer/plan/Channel/getSource()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/flink/optimizer/plantranslate/JobGraphGenerator$TaskInChain/getContainingVertex()|",
      "|java+method:///org/apache/flink/runtime/jobgraph/JobVertex/getResultOptimizerProperties()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/flink/optimizer/plan/PlanNode/getNodeName()|",
      "|java+method:///org/apache/flink/optimizer/dag/OptimizerNode/getOperatorName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/flink/runtime/jobgraph/JobVertex/getOperatorPrettyName()|",
      "|java+method:///org/apache/flink/optimizer/plantranslate/JsonMapper/getOptimizerPropertiesJson(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonFactory,org.apache.flink.optimizer.plan.PlanNode)|",
      "|java+method:///org/apache/flink/util/StringUtils/showControlCharacters(java.lang.String)|",
      "|java+method:///org/apache/flink/runtime/jobgraph/JobVertex/getOperatorDescription()|",
      "|java+method:///org/apache/flink/runtime/jobgraph/JobVertex/getOperatorName()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/flink/runtime/jobgraph/JobVertex/setOperatorDescription(java.lang.String)|",
      "|java+method:///org/apache/flink/optimizer/plan/PlanNode/getInputs()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/flink/runtime/jobgraph/JobVertex/setResultOptimizerProperties(java.lang.String)|",
      "|java+method:///org/apache/flink/optimizer/plan/PlanNode/getDriverStrategy()|",
      "|java+method:///org/apache/flink/runtime/jobgraph/JobVertex/setOperatorPrettyName(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/JsonFactory/JsonFactory()|",
      "|java+method:///org/apache/flink/optimizer/plantranslate/JsonMapper/getOperatorStrategyString(org.apache.flink.runtime.operators.DriverStrategy)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/flink/optimizer/plantranslate/JsonMapper/getOperatorStrategyString(org.apache.flink.runtime.operators.DriverStrategy,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/flink/optimizer/plantranslate/JobGraphGenerator$TaskInChain/getPlanNode()|",
      "|java+method:///org/apache/flink/runtime/jobgraph/JobVertex/setOperatorName(java.lang.String)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/apache/flink/optimizer/plan/PlanNode/getOptimizerNode()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/apache/flink/optimizer/plan/Channel/getSource()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/flink/optimizer/plantranslate/JobGraphGenerator$TaskInChain/getContainingVertex()|",
      "|java+method:///org/apache/flink/runtime/jobgraph/JobVertex/getResultOptimizerProperties()|"
    ],
    "affectedLib": "org.apache.flink:flink-core:1.4.0",
    "change": "UPDATED"
  }
]