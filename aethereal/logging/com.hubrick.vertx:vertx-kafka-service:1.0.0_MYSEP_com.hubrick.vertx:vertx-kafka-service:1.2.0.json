[
  {
    "coordinatesV1": "com.hubrick.vertx:vertx-kafka-service:1.2.0",
    "coordinatesV2": "com.hubrick.vertx:vertx-kafka-service:1.0.0",
    "caller": "|java+method:///com/hubrick/vertx/kafka/producer/DefaultKafkaProducerService/send(com.hubrick.vertx.kafka.producer.MessageSerializerType,java.lang.Object,java.lang.String,com.hubrick.vertx.kafka.producer.model.KafkaOptions,io.vertx.core.Handler)|",
    "called": "|java+constructor:///kafka/producer/KeyedMessage/KeyedMessage(java.lang.String,java.lang.Object,java.lang.Object)|",
    "v1Body": [
      "|java+method:///com/hubrick/vertx/kafka/producer/DefaultKafkaProducerService/getOrCreateProducer(com.hubrick.vertx.kafka.producer.MessageSerializerType)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/model/KafkaOptions/getTopic()|",
      "|java+method:///com/timgroup/statsd/StatsDClient/recordExecutionTime(java.lang.String,long)|",
      "|java+method:///kafka/javaapi/producer/Producer/send(kafka.producer.KeyedMessage)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/DefaultKafkaProducerService/sendOK(io.vertx.core.Handler)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/DefaultKafkaProducerService/isValid(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/DefaultKafkaProducerService/sendError(io.vertx.core.Handler,java.lang.Throwable)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+constructor:///kafka/producer/KeyedMessage/KeyedMessage(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/getDefaultTopic()|"
    ],
    "v2Body": [
      "|java+method:///com/hubrick/vertx/kafka/producer/DefaultKafkaProducerService/getOrCreateProducer(com.hubrick.vertx.kafka.producer.MessageSerializerType)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/model/KafkaOptions/getTopic()|",
      "|java+method:///org/apache/kafka/clients/producer/Producer/send(org.apache.kafka.clients.producer.ProducerRecord,org.apache.kafka.clients.producer.Callback)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/DefaultKafkaProducerService/isValid(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/getDefaultTopic()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+constructor:///org/apache/kafka/clients/producer/ProducerRecord/ProducerRecord(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/DefaultKafkaProducerService/sendError(io.vertx.core.Handler,java.lang.Throwable)|"
    ],
    "affectedLib": "org.apache.kafka:kafka_2.10:0.8.2.2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.hubrick.vertx:vertx-kafka-service:1.2.0",
    "coordinatesV2": "com.hubrick.vertx:vertx-kafka-service:1.0.0",
    "caller": "|java+method:///com/hubrick/vertx/kafka/producer/DefaultKafkaProducerService/getOrCreateProducer(com.hubrick.vertx.kafka.producer.MessageSerializerType)|",
    "called": "|java+constructor:///kafka/javaapi/producer/Producer/Producer(kafka.producer.ProducerConfig)|",
    "v1Body": [
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/getBrokerList()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/String/valueOf(java.lang.Object)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/getRequestAcks()|",
      "|java+constructor:///kafka/producer/ProducerConfig/ProducerConfig(java.util.Properties)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Properties/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/Properties/Properties()|",
      "|java+method:///com/hubrick/vertx/kafka/producer/MessageSerializerType/getValue()|",
      "|java+constructor:///kafka/javaapi/producer/Producer/Producer(kafka.producer.ProducerConfig)|"
    ],
    "v2Body": [
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/getRequestTimeoutMs()|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/getType()|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/getBatchMessageNum()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Properties/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/getRetryBackoffMs()|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/ProducerType/getValue()|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/getBufferingMaxMs()|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/getAcks()|",
      "|java+method:///com/hubrick/vertx/kafka/producer/MessageSerializerType/getValue()|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/getBufferingMaxMessages()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///org/apache/kafka/clients/producer/KafkaProducer/KafkaProducer(java.util.Properties)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/getEnqueueTimeout()|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/getMaxBlockTimeMs()|",
      "|java+method:///java/lang/String/valueOf(java.lang.Object)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/getMaxRetries()|",
      "|java+method:///java/lang/Integer/toString()|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/getBootstrapServers()|",
      "|java+constructor:///java/util/Properties/Properties()|",
      "|java+method:///java/lang/Class/getName()|"
    ],
    "affectedLib": "org.apache.kafka:kafka_2.10:0.8.2.2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.hubrick.vertx:vertx-kafka-service:1.2.0",
    "coordinatesV2": "com.hubrick.vertx:vertx-kafka-service:1.0.0",
    "caller": "|java+method:///com/hubrick/vertx/kafka/producer/DefaultKafkaProducerService/stop()|",
    "called": "|java+method:///kafka/javaapi/producer/Producer/close()|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///com/timgroup/statsd/StatsDClient/stop()|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///kafka/javaapi/producer/Producer/close()|",
      "|java+method:///java/util/Collection/iterator()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/timgroup/statsd/StatsDClient/stop()|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/kafka/clients/producer/Producer/close()|",
      "|java+method:///java/util/Map/isEmpty()|"
    ],
    "affectedLib": "org.apache.kafka:kafka_2.10:0.8.2.2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.hubrick.vertx:vertx-kafka-service:1.0.0",
    "coordinatesV2": "com.hubrick.vertx:vertx-kafka-service:1.2.0",
    "caller": "|java+method:///com/hubrick/vertx/kafka/producer/DefaultKafkaProducerService/send(com.hubrick.vertx.kafka.producer.MessageSerializerType,java.lang.Object,java.lang.String,com.hubrick.vertx.kafka.producer.model.KafkaOptions,io.vertx.core.Handler)|",
    "called": "|java+constructor:///org/apache/kafka/clients/producer/ProducerRecord/ProducerRecord(java.lang.String,java.lang.Object,java.lang.Object)|",
    "v1Body": [
      "|java+method:///com/hubrick/vertx/kafka/producer/DefaultKafkaProducerService/getOrCreateProducer(com.hubrick.vertx.kafka.producer.MessageSerializerType)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/model/KafkaOptions/getTopic()|",
      "|java+method:///com/timgroup/statsd/StatsDClient/recordExecutionTime(java.lang.String,long)|",
      "|java+method:///kafka/javaapi/producer/Producer/send(kafka.producer.KeyedMessage)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/DefaultKafkaProducerService/sendOK(io.vertx.core.Handler)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/DefaultKafkaProducerService/isValid(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/DefaultKafkaProducerService/sendError(io.vertx.core.Handler,java.lang.Throwable)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+constructor:///kafka/producer/KeyedMessage/KeyedMessage(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/getDefaultTopic()|"
    ],
    "v2Body": [
      "|java+method:///com/hubrick/vertx/kafka/producer/DefaultKafkaProducerService/getOrCreateProducer(com.hubrick.vertx.kafka.producer.MessageSerializerType)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/model/KafkaOptions/getTopic()|",
      "|java+method:///org/apache/kafka/clients/producer/Producer/send(org.apache.kafka.clients.producer.ProducerRecord,org.apache.kafka.clients.producer.Callback)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/DefaultKafkaProducerService/isValid(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/getDefaultTopic()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+constructor:///org/apache/kafka/clients/producer/ProducerRecord/ProducerRecord(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/DefaultKafkaProducerService/sendError(io.vertx.core.Handler,java.lang.Throwable)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:0.10.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.hubrick.vertx:vertx-kafka-service:1.0.0",
    "coordinatesV2": "com.hubrick.vertx:vertx-kafka-service:1.2.0",
    "caller": "|java+method:///com/hubrick/vertx/kafka/producer/DefaultKafkaProducerService/getOrCreateProducer(com.hubrick.vertx.kafka.producer.MessageSerializerType)|",
    "called": "|java+constructor:///org/apache/kafka/clients/producer/KafkaProducer/KafkaProducer(java.util.Properties)|",
    "v1Body": [
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/getBrokerList()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/String/valueOf(java.lang.Object)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/getRequestAcks()|",
      "|java+constructor:///kafka/producer/ProducerConfig/ProducerConfig(java.util.Properties)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Properties/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/Properties/Properties()|",
      "|java+method:///com/hubrick/vertx/kafka/producer/MessageSerializerType/getValue()|",
      "|java+constructor:///kafka/javaapi/producer/Producer/Producer(kafka.producer.ProducerConfig)|"
    ],
    "v2Body": [
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/getRequestTimeoutMs()|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/getType()|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/getBatchMessageNum()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Properties/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/getRetryBackoffMs()|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/ProducerType/getValue()|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/getBufferingMaxMs()|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/getAcks()|",
      "|java+method:///com/hubrick/vertx/kafka/producer/MessageSerializerType/getValue()|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/getBufferingMaxMessages()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///org/apache/kafka/clients/producer/KafkaProducer/KafkaProducer(java.util.Properties)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/getEnqueueTimeout()|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/getMaxBlockTimeMs()|",
      "|java+method:///java/lang/String/valueOf(java.lang.Object)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/getMaxRetries()|",
      "|java+method:///java/lang/Integer/toString()|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/getBootstrapServers()|",
      "|java+constructor:///java/util/Properties/Properties()|",
      "|java+method:///java/lang/Class/getName()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:0.10.2.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.hubrick.vertx:vertx-kafka-service:1.0.0",
    "coordinatesV2": "com.hubrick.vertx:vertx-kafka-service:1.2.0",
    "caller": "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerServiceVerticle/start()|",
    "called": "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/KafkaProducerConfiguration(java.lang.String,java.lang.String,java.lang.Integer)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/setStatsDConfiguration(com.hubrick.vertx.kafka.producer.config.StatsDConfiguration)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerService/start()|",
      "|java+method:///io/vertx/core/json/JsonObject/getJsonObject(java.lang.String)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///com/hubrick/vertx/kafka/producer/config/StatsDConfiguration/StatsDConfiguration(java.lang.String,java.lang.Integer,java.lang.String)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String)|",
      "|java+constructor:///com/hubrick/vertx/kafka/producer/DefaultKafkaProducerService/DefaultKafkaProducerService(com.hubrick.vertx.kafka.producer.config.KafkaProducerConfiguration)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerServiceVerticle/config()|",
      "|java+method:///io/vertx/core/json/JsonObject/getInteger(java.lang.String,java.lang.Integer)|",
      "|java+method:///io/vertx/serviceproxy/ProxyHelper/registerService(java.lang.Class,io.vertx.core.Vertx,java.lang.Object,java.lang.String)|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/setBatchMessageNum(java.lang.Integer)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/ProducerType/valueOf(java.lang.String)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/setMaxRetries(java.lang.Integer)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/setStatsDConfiguration(com.hubrick.vertx.kafka.producer.config.StatsDConfiguration)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/setEnqueueTimeout(java.lang.Integer)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerService/start()|",
      "|java+method:///io/vertx/core/json/JsonObject/getJsonObject(java.lang.String)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/setBufferingMaxMessages(java.lang.Integer)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/setRetryBackoffMs(java.lang.Integer)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///com/hubrick/vertx/kafka/producer/DefaultKafkaProducerService/DefaultKafkaProducerService(com.hubrick.vertx.kafka.producer.config.KafkaProducerConfiguration)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerServiceVerticle/config()|",
      "|java+constructor:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/KafkaProducerConfiguration(java.lang.String,java.lang.String,java.lang.String,int,int,int)|",
      "|java+constructor:///com/hubrick/vertx/kafka/producer/config/StatsDConfiguration/StatsDConfiguration(java.lang.String,java.lang.Integer,java.lang.String)|",
      "|java+method:///io/vertx/core/json/JsonObject/getInteger(java.lang.String)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/setType(com.hubrick.vertx.kafka.producer.config.ProducerType)|",
      "|java+method:///io/vertx/core/json/JsonObject/getInteger(java.lang.String,java.lang.Integer)|",
      "|java+method:///io/vertx/serviceproxy/ProxyHelper/registerService(java.lang.Class,io.vertx.core.Vertx,java.lang.Object,java.lang.String)|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/setBufferingMaxMs(java.lang.Integer)|"
    ],
    "affectedLib": "com.google.guava:guava:21.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.hubrick.vertx:vertx-kafka-service:1.0.0",
    "coordinatesV2": "com.hubrick.vertx:vertx-kafka-service:1.2.0",
    "caller": "|java+constructor:///com/hubrick/vertx/kafka/consumer/KafkaConsumerVerticle/KafkaConsumerVerticle()|",
    "called": "|java+constructor:///io/vertx/core/AbstractVerticle/AbstractVerticle()|",
    "v1Body": [
      "|java+constructor:///io/vertx/core/AbstractVerticle/AbstractVerticle()|"
    ],
    "v2Body": [
      "|java+method:///java/util/concurrent/Executors/newSingleThreadExecutor(java.util.concurrent.ThreadFactory)|",
      "|java+constructor:///io/vertx/core/AbstractVerticle/AbstractVerticle()|"
    ],
    "affectedLib": "io.vertx:vertx-core:3.3.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.hubrick.vertx:vertx-kafka-service:1.0.0",
    "coordinatesV2": "com.hubrick.vertx:vertx-kafka-service:1.2.0",
    "caller": "|java+method:///com/hubrick/vertx/kafka/producer/model/ByteKafkaMessage/toJson()|",
    "called": "|java+method:///io/vertx/core/json/JsonObject/put(java.lang.String,byte%5B%5D)|",
    "v1Body": [
      "|java+method:///com/hubrick/vertx/kafka/producer/model/AbstractKafkaMessage/toJson()|",
      "|java+method:///io/vertx/core/json/JsonObject/put(java.lang.String,byte%5B%5D)|",
      "|java+method:///io/vertx/core/buffer/Buffer/getBytes()|",
      "|java+method:///com/hubrick/vertx/kafka/producer/model/ByteKafkaMessage/getPayload()|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/core/json/JsonObject/put(java.lang.String,byte%5B%5D)|",
      "|java+method:///io/vertx/core/buffer/Buffer/getBytes()|",
      "|java+method:///com/hubrick/vertx/kafka/producer/model/ByteKafkaMessage/getPayload()|",
      "|java+method:///com/hubrick/vertx/kafka/producer/model/AbstractKafkaMessage/asJson()|"
    ],
    "affectedLib": "io.vertx:vertx-core:3.3.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.hubrick.vertx:vertx-kafka-service:1.0.0",
    "coordinatesV2": "com.hubrick.vertx:vertx-kafka-service:1.2.0",
    "caller": "|java+method:///com/hubrick/vertx/kafka/consumer/KafkaConsumerVerticle/start()|",
    "called": "|java+method:///io/vertx/core/json/JsonObject/getInteger(java.lang.String,java.lang.Integer)|",
    "v1Body": [
      "|java+method:///com/hubrick/vertx/kafka/consumer/config/KafkaConsumerConfiguration/create(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,long,long,long,int,int,int)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///com/hubrick/vertx/kafka/consumer/KafkaConsumer/start()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///io/vertx/core/AbstractVerticle/start()|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/hubrick/vertx/kafka/consumer/KafkaConsumerVerticle/getMandatoryStringConfig(io.vertx.core.json.JsonObject,java.lang.String)|",
      "|java+method:///com/hubrick/vertx/kafka/consumer/KafkaConsumer/create(io.vertx.core.Vertx,com.hubrick.vertx.kafka.consumer.config.KafkaConsumerConfiguration,com.hubrick.vertx.kafka.consumer.KafkaConsumerHandler)|",
      "|java+method:///io/vertx/core/json/JsonObject/getInteger(java.lang.String,java.lang.Integer)|",
      "|java+method:///io/vertx/core/json/JsonObject/getLong(java.lang.String,java.lang.Long)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///io/vertx/core/Context/config()|",
      "|java+method:///io/vertx/core/Vertx/getOrCreateContext()|"
    ],
    "v2Body": [
      "|java+method:///com/hubrick/vertx/kafka/consumer/config/KafkaConsumerConfiguration/create(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,long,long,long,int,int,int,long,double,boolean,boolean,int)|",
      "|java+method:///io/vertx/core/AbstractVerticle/start()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/concurrent/ExecutorService/execute(java.lang.Runnable)|",
      "|java+method:///com/hubrick/vertx/kafka/consumer/KafkaConsumerVerticle/getMandatoryStringConfig(io.vertx.core.json.JsonObject,java.lang.String)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///io/vertx/core/json/JsonObject/getLong(java.lang.String,java.lang.Long)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///java/lang/Double/doubleValue()|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String,java.lang.String)|",
      "|java+method:///io/vertx/core/json/JsonObject/getDouble(java.lang.String,java.lang.Double)|",
      "|java+method:///io/vertx/core/Context/config()|",
      "|java+method:///io/vertx/core/Vertx/getOrCreateContext()|",
      "|java+method:///io/vertx/core/json/JsonObject/getInteger(java.lang.String,java.lang.Integer)|",
      "|java+method:///io/vertx/core/json/JsonObject/getBoolean(java.lang.String,java.lang.Boolean)|"
    ],
    "affectedLib": "io.vertx:vertx-core:3.3.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.hubrick.vertx:vertx-kafka-service:1.0.0",
    "coordinatesV2": "com.hubrick.vertx:vertx-kafka-service:1.2.0",
    "caller": "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerServiceVerticle/start()|",
    "called": "|java+method:///io/vertx/core/json/JsonObject/getInteger(java.lang.String,java.lang.Integer)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/KafkaProducerConfiguration(java.lang.String,java.lang.String,java.lang.Integer)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/setStatsDConfiguration(com.hubrick.vertx.kafka.producer.config.StatsDConfiguration)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerService/start()|",
      "|java+method:///io/vertx/core/json/JsonObject/getJsonObject(java.lang.String)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///com/hubrick/vertx/kafka/producer/config/StatsDConfiguration/StatsDConfiguration(java.lang.String,java.lang.Integer,java.lang.String)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String)|",
      "|java+constructor:///com/hubrick/vertx/kafka/producer/DefaultKafkaProducerService/DefaultKafkaProducerService(com.hubrick.vertx.kafka.producer.config.KafkaProducerConfiguration)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerServiceVerticle/config()|",
      "|java+method:///io/vertx/core/json/JsonObject/getInteger(java.lang.String,java.lang.Integer)|",
      "|java+method:///io/vertx/serviceproxy/ProxyHelper/registerService(java.lang.Class,io.vertx.core.Vertx,java.lang.Object,java.lang.String)|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/setBatchMessageNum(java.lang.Integer)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/ProducerType/valueOf(java.lang.String)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/setMaxRetries(java.lang.Integer)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/setStatsDConfiguration(com.hubrick.vertx.kafka.producer.config.StatsDConfiguration)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/setEnqueueTimeout(java.lang.Integer)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerService/start()|",
      "|java+method:///io/vertx/core/json/JsonObject/getJsonObject(java.lang.String)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/setBufferingMaxMessages(java.lang.Integer)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/setRetryBackoffMs(java.lang.Integer)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///com/hubrick/vertx/kafka/producer/DefaultKafkaProducerService/DefaultKafkaProducerService(com.hubrick.vertx.kafka.producer.config.KafkaProducerConfiguration)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerServiceVerticle/config()|",
      "|java+constructor:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/KafkaProducerConfiguration(java.lang.String,java.lang.String,java.lang.String,int,int,int)|",
      "|java+constructor:///com/hubrick/vertx/kafka/producer/config/StatsDConfiguration/StatsDConfiguration(java.lang.String,java.lang.Integer,java.lang.String)|",
      "|java+method:///io/vertx/core/json/JsonObject/getInteger(java.lang.String)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/setType(com.hubrick.vertx.kafka.producer.config.ProducerType)|",
      "|java+method:///io/vertx/core/json/JsonObject/getInteger(java.lang.String,java.lang.Integer)|",
      "|java+method:///io/vertx/serviceproxy/ProxyHelper/registerService(java.lang.Class,io.vertx.core.Vertx,java.lang.Object,java.lang.String)|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/setBufferingMaxMs(java.lang.Integer)|"
    ],
    "affectedLib": "io.vertx:vertx-core:3.3.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.hubrick.vertx:vertx-kafka-service:1.0.0",
    "coordinatesV2": "com.hubrick.vertx:vertx-kafka-service:1.2.0",
    "caller": "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerServiceVertxProxyHandler/handle(io.vertx.core.eventbus.Message)|",
    "called": "|java+method:///io/vertx/core/json/JsonObject/getJsonObject(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/String/hashCode()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/vertx/core/eventbus/Message/fail(int,java.lang.String)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerService/sendBytes(com.hubrick.vertx.kafka.producer.model.ByteKafkaMessage,com.hubrick.vertx.kafka.producer.model.KafkaOptions,io.vertx.core.Handler)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerService/start()|",
      "|java+method:///io/vertx/core/eventbus/Message/body()|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerServiceVertxProxyHandler/createHandler(io.vertx.core.eventbus.Message)|",
      "|java+method:///io/vertx/core/MultiMap/get(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///com/hubrick/vertx/kafka/producer/model/KafkaOptions/KafkaOptions(io.vertx.core.json.JsonObject)|",
      "|java+constructor:///com/hubrick/vertx/kafka/producer/model/StringKafkaMessage/StringKafkaMessage(io.vertx.core.json.JsonObject)|",
      "|java+constructor:///com/hubrick/vertx/kafka/producer/model/ByteKafkaMessage/ByteKafkaMessage(io.vertx.core.json.JsonObject)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerService/stop()|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerServiceVertxProxyHandler/accessed()|",
      "|java+method:///java/lang/Throwable/getMessage()|",
      "|java+method:///io/vertx/core/eventbus/Message/headers()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerService/sendString(com.hubrick.vertx.kafka.producer.model.StringKafkaMessage,com.hubrick.vertx.kafka.producer.model.KafkaOptions,io.vertx.core.Handler)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/vertx/core/json/JsonObject/getJsonObject(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/String/hashCode()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerService/sendBytes(com.hubrick.vertx.kafka.producer.model.ByteKafkaMessage,com.hubrick.vertx.kafka.producer.model.KafkaOptions,io.vertx.core.Handler)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerService/start()|",
      "|java+method:///io/vertx/core/eventbus/Message/body()|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerServiceVertxProxyHandler/createHandler(io.vertx.core.eventbus.Message)|",
      "|java+method:///io/vertx/core/MultiMap/get(java.lang.String)|",
      "|java+constructor:///com/hubrick/vertx/kafka/producer/model/KafkaOptions/KafkaOptions(io.vertx.core.json.JsonObject)|",
      "|java+constructor:///com/hubrick/vertx/kafka/producer/model/StringKafkaMessage/StringKafkaMessage(io.vertx.core.json.JsonObject)|",
      "|java+constructor:///com/hubrick/vertx/kafka/producer/model/ByteKafkaMessage/ByteKafkaMessage(io.vertx.core.json.JsonObject)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerService/stop()|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerServiceVertxProxyHandler/accessed()|",
      "|java+constructor:///io/vertx/serviceproxy/ServiceException/ServiceException(int,java.lang.String)|",
      "|java+method:///java/lang/Throwable/getMessage()|",
      "|java+method:///io/vertx/core/eventbus/Message/headers()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerService/sendString(com.hubrick.vertx.kafka.producer.model.StringKafkaMessage,com.hubrick.vertx.kafka.producer.model.KafkaOptions,io.vertx.core.Handler)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/vertx/core/json/JsonObject/getJsonObject(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/vertx/core/eventbus/Message/reply(java.lang.Object)|"
    ],
    "affectedLib": "io.vertx:vertx-core:3.3.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.hubrick.vertx:vertx-kafka-service:1.0.0",
    "coordinatesV2": "com.hubrick.vertx:vertx-kafka-service:1.2.0",
    "caller": "|java+method:///com/hubrick/vertx/kafka/producer/model/StringKafkaMessage/toJson()|",
    "called": "|java+method:///io/vertx/core/json/JsonObject/put(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///com/hubrick/vertx/kafka/producer/model/AbstractKafkaMessage/toJson()|",
      "|java+method:///com/hubrick/vertx/kafka/producer/model/StringKafkaMessage/getPayload()|",
      "|java+method:///io/vertx/core/json/JsonObject/put(java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/hubrick/vertx/kafka/producer/model/StringKafkaMessage/getPayload()|",
      "|java+method:///io/vertx/core/json/JsonObject/put(java.lang.String,java.lang.String)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/model/AbstractKafkaMessage/asJson()|"
    ],
    "affectedLib": "io.vertx:vertx-core:3.3.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.hubrick.vertx:vertx-kafka-service:1.0.0",
    "coordinatesV2": "com.hubrick.vertx:vertx-kafka-service:1.2.0",
    "caller": "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerServiceVerticle/start()|",
    "called": "|java+method:///io/vertx/serviceproxy/ProxyHelper/registerService(java.lang.Class,io.vertx.core.Vertx,java.lang.Object,java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/KafkaProducerConfiguration(java.lang.String,java.lang.String,java.lang.Integer)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/setStatsDConfiguration(com.hubrick.vertx.kafka.producer.config.StatsDConfiguration)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerService/start()|",
      "|java+method:///io/vertx/core/json/JsonObject/getJsonObject(java.lang.String)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///com/hubrick/vertx/kafka/producer/config/StatsDConfiguration/StatsDConfiguration(java.lang.String,java.lang.Integer,java.lang.String)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String)|",
      "|java+constructor:///com/hubrick/vertx/kafka/producer/DefaultKafkaProducerService/DefaultKafkaProducerService(com.hubrick.vertx.kafka.producer.config.KafkaProducerConfiguration)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerServiceVerticle/config()|",
      "|java+method:///io/vertx/core/json/JsonObject/getInteger(java.lang.String,java.lang.Integer)|",
      "|java+method:///io/vertx/serviceproxy/ProxyHelper/registerService(java.lang.Class,io.vertx.core.Vertx,java.lang.Object,java.lang.String)|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/setBatchMessageNum(java.lang.Integer)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/ProducerType/valueOf(java.lang.String)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/setMaxRetries(java.lang.Integer)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/setStatsDConfiguration(com.hubrick.vertx.kafka.producer.config.StatsDConfiguration)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/setEnqueueTimeout(java.lang.Integer)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerService/start()|",
      "|java+method:///io/vertx/core/json/JsonObject/getJsonObject(java.lang.String)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/setBufferingMaxMessages(java.lang.Integer)|",
      "|java+method:///io/vertx/core/json/JsonObject/getString(java.lang.String)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/setRetryBackoffMs(java.lang.Integer)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///com/hubrick/vertx/kafka/producer/DefaultKafkaProducerService/DefaultKafkaProducerService(com.hubrick.vertx.kafka.producer.config.KafkaProducerConfiguration)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerServiceVerticle/config()|",
      "|java+constructor:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/KafkaProducerConfiguration(java.lang.String,java.lang.String,java.lang.String,int,int,int)|",
      "|java+constructor:///com/hubrick/vertx/kafka/producer/config/StatsDConfiguration/StatsDConfiguration(java.lang.String,java.lang.Integer,java.lang.String)|",
      "|java+method:///io/vertx/core/json/JsonObject/getInteger(java.lang.String)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/setType(com.hubrick.vertx.kafka.producer.config.ProducerType)|",
      "|java+method:///io/vertx/core/json/JsonObject/getInteger(java.lang.String,java.lang.Integer)|",
      "|java+method:///io/vertx/serviceproxy/ProxyHelper/registerService(java.lang.Class,io.vertx.core.Vertx,java.lang.Object,java.lang.String)|",
      "|java+method:///com/google/common/base/Strings/isNullOrEmpty(java.lang.String)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/config/KafkaProducerConfiguration/setBufferingMaxMs(java.lang.Integer)|"
    ],
    "affectedLib": "io.vertx:vertx-service-proxy:3.3.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.hubrick.vertx:vertx-kafka-service:1.0.0",
    "coordinatesV2": "com.hubrick.vertx:vertx-kafka-service:1.2.0",
    "caller": "|java+constructor:///com/hubrick/vertx/kafka/producer/KafkaProducerServiceVertxEBProxy/KafkaProducerServiceVertxEBProxy(io.vertx.core.Vertx,java.lang.String,io.vertx.core.eventbus.DeliveryOptions)|",
    "called": "|java+constructor:///io/vertx/serviceproxy/ServiceExceptionMessageCodec/ServiceExceptionMessageCodec()|",
    "v1Body": [
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/core/eventbus/EventBus/registerDefaultCodec(java.lang.Class,io.vertx.core.eventbus.MessageCodec)|",
      "|java+method:///io/vertx/core/Vertx/eventBus()|",
      "|java+constructor:///io/vertx/serviceproxy/ServiceExceptionMessageCodec/ServiceExceptionMessageCodec()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "io.vertx:vertx-service-proxy:3.3.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.hubrick.vertx:vertx-kafka-service:1.0.0",
    "coordinatesV2": "com.hubrick.vertx:vertx-kafka-service:1.2.0",
    "caller": "|java+constructor:///com/hubrick/vertx/kafka/producer/KafkaProducerServiceVertxProxyHandler/KafkaProducerServiceVertxProxyHandler(io.vertx.core.Vertx,com.hubrick.vertx.kafka.producer.KafkaProducerService,boolean,long)|",
    "called": "|java+constructor:///io/vertx/serviceproxy/ServiceExceptionMessageCodec/ServiceExceptionMessageCodec()|",
    "v1Body": [
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerServiceVertxProxyHandler/accessed()|",
      "|java+constructor:///io/vertx/serviceproxy/ProxyHandler/ProxyHandler()|",
      "|java+method:///io/vertx/core/Vertx/setPeriodic(long,io.vertx.core.Handler)|"
    ],
    "v2Body": [
      "|java+method:///io/vertx/core/eventbus/EventBus/registerDefaultCodec(java.lang.Class,io.vertx.core.eventbus.MessageCodec)|",
      "|java+method:///io/vertx/core/Vertx/eventBus()|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerServiceVertxProxyHandler/accessed()|",
      "|java+method:///io/vertx/core/Vertx/setPeriodic(long,io.vertx.core.Handler)|",
      "|java+constructor:///io/vertx/serviceproxy/ProxyHandler/ProxyHandler()|",
      "|java+constructor:///io/vertx/serviceproxy/ServiceExceptionMessageCodec/ServiceExceptionMessageCodec()|"
    ],
    "affectedLib": "io.vertx:vertx-service-proxy:3.3.3",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.hubrick.vertx:vertx-kafka-service:1.0.0",
    "coordinatesV2": "com.hubrick.vertx:vertx-kafka-service:1.2.0",
    "caller": "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerServiceVertxProxyHandler/handle(io.vertx.core.eventbus.Message)|",
    "called": "|java+constructor:///io/vertx/serviceproxy/ServiceException/ServiceException(int,java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/String/hashCode()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/vertx/core/eventbus/Message/fail(int,java.lang.String)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerService/sendBytes(com.hubrick.vertx.kafka.producer.model.ByteKafkaMessage,com.hubrick.vertx.kafka.producer.model.KafkaOptions,io.vertx.core.Handler)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerService/start()|",
      "|java+method:///io/vertx/core/eventbus/Message/body()|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerServiceVertxProxyHandler/createHandler(io.vertx.core.eventbus.Message)|",
      "|java+method:///io/vertx/core/MultiMap/get(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///com/hubrick/vertx/kafka/producer/model/KafkaOptions/KafkaOptions(io.vertx.core.json.JsonObject)|",
      "|java+constructor:///com/hubrick/vertx/kafka/producer/model/StringKafkaMessage/StringKafkaMessage(io.vertx.core.json.JsonObject)|",
      "|java+constructor:///com/hubrick/vertx/kafka/producer/model/ByteKafkaMessage/ByteKafkaMessage(io.vertx.core.json.JsonObject)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerService/stop()|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerServiceVertxProxyHandler/accessed()|",
      "|java+method:///java/lang/Throwable/getMessage()|",
      "|java+method:///io/vertx/core/eventbus/Message/headers()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerService/sendString(com.hubrick.vertx.kafka.producer.model.StringKafkaMessage,com.hubrick.vertx.kafka.producer.model.KafkaOptions,io.vertx.core.Handler)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/vertx/core/json/JsonObject/getJsonObject(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/String/hashCode()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerService/sendBytes(com.hubrick.vertx.kafka.producer.model.ByteKafkaMessage,com.hubrick.vertx.kafka.producer.model.KafkaOptions,io.vertx.core.Handler)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerService/start()|",
      "|java+method:///io/vertx/core/eventbus/Message/body()|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerServiceVertxProxyHandler/createHandler(io.vertx.core.eventbus.Message)|",
      "|java+method:///io/vertx/core/MultiMap/get(java.lang.String)|",
      "|java+constructor:///com/hubrick/vertx/kafka/producer/model/KafkaOptions/KafkaOptions(io.vertx.core.json.JsonObject)|",
      "|java+constructor:///com/hubrick/vertx/kafka/producer/model/StringKafkaMessage/StringKafkaMessage(io.vertx.core.json.JsonObject)|",
      "|java+constructor:///com/hubrick/vertx/kafka/producer/model/ByteKafkaMessage/ByteKafkaMessage(io.vertx.core.json.JsonObject)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerService/stop()|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerServiceVertxProxyHandler/accessed()|",
      "|java+constructor:///io/vertx/serviceproxy/ServiceException/ServiceException(int,java.lang.String)|",
      "|java+method:///java/lang/Throwable/getMessage()|",
      "|java+method:///io/vertx/core/eventbus/Message/headers()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///com/hubrick/vertx/kafka/producer/KafkaProducerService/sendString(com.hubrick.vertx.kafka.producer.model.StringKafkaMessage,com.hubrick.vertx.kafka.producer.model.KafkaOptions,io.vertx.core.Handler)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/vertx/core/json/JsonObject/getJsonObject(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/vertx/core/eventbus/Message/reply(java.lang.Object)|"
    ],
    "affectedLib": "io.vertx:vertx-service-proxy:3.3.3",
    "change": "UPDATED"
  }
]