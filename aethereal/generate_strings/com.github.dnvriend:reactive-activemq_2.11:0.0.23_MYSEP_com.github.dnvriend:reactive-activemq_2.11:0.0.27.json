[
  {
    "coordinatesV1": "com.github.dnvriend:reactive-activemq_2.11:0.0.27",
    "coordinatesV2": "com.github.dnvriend:reactive-activemq_2.11:0.0.23",
    "caller": "|java+method:///akka/stream/integration/camel/CamelActorPublisherWithExtractor$$anonfun$receive$2/applyOrElse(java.lang.Object,scala.Function1)|",
    "called": "|java+constructor:///akka/actor/Status$Failure/Status$Failure(java.lang.Throwable)|",
    "v1Body": [
      "|java+constructor:///akka/actor/Status$Failure/Status$Failure(java.lang.Throwable)|",
      "|java+method:///akka/stream/integration/camel/CamelActorPublisherWithExtractor/self()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///akka/stream/integration/camel/CamelActorPublisherWithExtractor/sender()|",
      "|java+method:///akka/actor/package$/actorRef2Scala(akka.actor.ActorRef)|",
      "|java+method:///akka/stream/integration/MessageExtractor/extract(java.lang.Object)|",
      "|java+method:///akka/stream/integration/camel/CamelActorPublisherWithExtractor/onNext(java.lang.Object)|",
      "|java+method:///akka/actor/ScalaActorRef/$bang(java.lang.Object,akka.actor.ActorRef)|",
      "|java+method:///scala/Function1/apply(java.lang.Object)|",
      "|java+method:///akka/actor/ActorContext/stop(akka.actor.ActorRef)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///akka/stream/integration/camel/CamelActorPublisherWithExtractor/log()|",
      "|java+method:///akka/event/LoggingAdapter/error(java.lang.Throwable,java.lang.String)|",
      "|java+method:///akka/stream/integration/camel/CamelActorPublisherWithExtractor/totalDemand()|",
      "|java+method:///akka/stream/integration/camel/CamelActorPublisherWithExtractor/context()|"
    ],
    "v2Body": [
      "|java+constructor:///akka/actor/Status$Failure/Status$Failure(java.lang.Throwable)|",
      "|java+method:///akka/stream/integration/camel/CamelActorPublisherWithExtractor/self()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///akka/stream/integration/camel/CamelActorPublisherWithExtractor/sender()|",
      "|java+method:///akka/actor/package$/actorRef2Scala(akka.actor.ActorRef)|",
      "|java+method:///akka/stream/integration/MessageExtractor/extract(java.lang.Object)|",
      "|java+method:///akka/stream/integration/camel/CamelActorPublisherWithExtractor/onNext(java.lang.Object)|",
      "|java+method:///akka/actor/ScalaActorRef/$bang(java.lang.Object,akka.actor.ActorRef)|",
      "|java+method:///scala/Function1/apply(java.lang.Object)|",
      "|java+method:///akka/actor/ActorContext/stop(akka.actor.ActorRef)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///akka/stream/integration/camel/CamelActorPublisherWithExtractor/log()|",
      "|java+method:///akka/event/LoggingAdapter/error(java.lang.Throwable,java.lang.String)|",
      "|java+method:///scala/Predef$/implicitly(java.lang.Object)|",
      "|java+method:///akka/stream/integration/camel/CamelActorPublisherWithExtractor/totalDemand()|",
      "|java+method:///akka/stream/integration/camel/CamelActorPublisherWithExtractor/context()|"
    ],
    "affectedLib": "com.typesafe.akka:akka-actor_2.11:2.4.8",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.github.dnvriend:reactive-activemq_2.11:0.0.23",
    "coordinatesV2": "com.github.dnvriend:reactive-activemq_2.11:0.0.27",
    "caller": "|java+method:///akka/stream/integration/activemq/ActiveMqProducer$$anonfun$flow$1/apply(java.lang.Object)|",
    "called": "|java+method:///akka/camel/CamelExtension$/apply(akka.actor.ActorSystem)|",
    "v1Body": [
      "|java+method:///akka/stream/integration/activemq/extension/ActiveMqExtensionImpl/producerEndpointUri(java.lang.String)|",
      "|java+method:///akka/stream/integration/activemq/extension/ActiveMqExtension$/apply(akka.actor.ActorSystem)|",
      "|java+method:///akka/camel/CamelExtension$/apply(akka.actor.ActorSystem)|",
      "|java+method:///akka/stream/integration/activemq/ActiveMqProducer$/akka$stream$integration$activemq$ActiveMqProducer$$send(java.lang.Object,java.lang.String,java.lang.String,org.apache.camel.ProducerTemplate,scala.concurrent.ExecutionContext,akka.stream.integration.MessageBuilder)|",
      "|java+method:///akka/camel/Camel/template()|",
      "|java+method:///akka/stream/integration/activemq/ActiveMqProducer$$anonfun$flow$1/apply(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///akka/stream/integration/activemq/extension/ActiveMqExtensionImpl/producerEndpointUri(java.lang.String)|",
      "|java+method:///akka/stream/integration/activemq/extension/ActiveMqExtension$/apply(akka.actor.ActorSystem)|",
      "|java+method:///akka/camel/CamelExtension$/apply(akka.actor.ActorSystem)|",
      "|java+method:///akka/camel/Camel/template()|",
      "|java+method:///akka/stream/integration/activemq/ActiveMqProducer$/akka$stream$integration$activemq$ActiveMqProducer$$send(java.lang.Object,java.lang.String,java.lang.String,org.apache.camel.ProducerTemplate,akka.stream.integration.CamelMessageBuilder,scala.concurrent.ExecutionContext)|",
      "|java+method:///akka/stream/integration/activemq/ActiveMqProducer$$anonfun$flow$1/apply(java.lang.Object)|"
    ],
    "affectedLib": "com.typesafe.akka:akka-camel_2.11:2.4.16",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.dnvriend:reactive-activemq_2.11:0.0.23",
    "coordinatesV2": "com.github.dnvriend:reactive-activemq_2.11:0.0.27",
    "caller": "|java+method:///akka/stream/integration/activemq/ActiveMqFlow$/apply(akka.stream.scaladsl.Source,akka.stream.scaladsl.Sink,scala.concurrent.ExecutionContext,akka.actor.ActorSystem)|",
    "called": "|java+method:///akka/stream/scaladsl/Keep$/left()|",
    "v1Body": [
      "|java+method:///akka/stream/integration/activemq/ActiveMqFlow$/applyMat(akka.stream.scaladsl.Source,akka.stream.scaladsl.Sink,scala.Function2,scala.concurrent.ExecutionContext,akka.actor.ActorSystem)|",
      "|java+method:///akka/stream/scaladsl/Keep$/none()|"
    ],
    "v2Body": [
      "|java+method:///akka/stream/integration/activemq/ActiveMqFlow$/applyMat(akka.stream.scaladsl.Source,akka.stream.scaladsl.Sink,scala.Function2,scala.concurrent.ExecutionContext,akka.actor.ActorSystem)|",
      "|java+method:///akka/stream/scaladsl/Keep$/left()|"
    ],
    "affectedLib": "com.typesafe.akka:akka-stream_2.11:2.4.16",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.dnvriend:reactive-activemq_2.11:0.0.23",
    "coordinatesV2": "com.github.dnvriend:reactive-activemq_2.11:0.0.27",
    "caller": "|java+method:///akka/stream/integration/activemq/ActiveMqReqRespFlow$/apply(akka.stream.scaladsl.Source,akka.stream.scaladsl.Sink,scala.concurrent.ExecutionContext,akka.actor.ActorSystem)|",
    "called": "|java+method:///akka/stream/scaladsl/Keep$/left()|",
    "v1Body": [
      "|java+method:///akka/stream/integration/activemq/ActiveMqReqRespFlow$/applyMat(akka.stream.scaladsl.Source,akka.stream.scaladsl.Sink,scala.Function2,scala.concurrent.ExecutionContext,akka.actor.ActorSystem)|",
      "|java+method:///akka/stream/scaladsl/Keep$/none()|"
    ],
    "v2Body": [
      "|java+method:///akka/stream/integration/activemq/ActiveMqReqRespFlow$/applyMat(akka.stream.scaladsl.Source,akka.stream.scaladsl.Sink,scala.Function2,scala.concurrent.ExecutionContext,akka.actor.ActorSystem)|",
      "|java+method:///akka/stream/scaladsl/Keep$/left()|"
    ],
    "affectedLib": "com.typesafe.akka:akka-stream_2.11:2.4.16",
    "change": "UPDATED"
  }
]