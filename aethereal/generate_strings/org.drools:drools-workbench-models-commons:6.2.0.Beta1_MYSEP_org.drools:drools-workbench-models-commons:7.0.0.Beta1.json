[
  {
    "coordinatesV1": "org.drools:drools-workbench-models-commons:7.0.0.Beta1",
    "coordinatesV2": "org.drools:drools-workbench-models-commons:6.2.0.Beta1",
    "caller": "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/inferFieldNature(java.lang.String,java.lang.String,boolean)|",
    "called": "|java+method:///org/apache/commons/lang/StringUtils/isEmpty(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/Boolean/equals(java.lang.Object)|",
      "|java+method:///java/text/ParseException/printStackTrace()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isEmpty(java.lang.String)|",
      "|java+method:///org/drools/core/util/DateUtils/getDateFormatMask()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+constructor:///java/text/SimpleDateFormat/SimpleDateFormat(java.lang.String,java.util.Locale)|",
      "|java+constructor:///java/lang/Integer/Integer(java.lang.String)|",
      "|java+method:///java/text/SimpleDateFormat/parse(java.lang.String)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+constructor:///java/math/BigInteger/BigInteger(java.lang.String)|",
      "|java+method:///org/apache/commons/lang/NumberUtils/isNumber(java.lang.String)|",
      "|java+constructor:///java/lang/Float/Float(java.lang.String)|",
      "|java+constructor:///java/lang/Short/Short(java.lang.String)|",
      "|java+constructor:///java/math/BigDecimal/BigDecimal(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/adjustParam(java.lang.String,java.lang.String,java.util.Map,boolean)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+constructor:///java/lang/Byte/Byte(java.lang.String)|",
      "|java+constructor:///java/lang/Long/Long(java.lang.String)|",
      "|java+constructor:///java/lang/Double/Double(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Boolean/equals(java.lang.Object)|",
      "|java+method:///org/drools/core/util/DateUtils/getDateFormatMask()|",
      "|java+method:///org/apache/commons/lang3/math/NumberUtils/isNumber(java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+constructor:///java/text/SimpleDateFormat/SimpleDateFormat(java.lang.String,java.util.Locale)|",
      "|java+constructor:///java/lang/Integer/Integer(java.lang.String)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isEmpty(java.lang.CharSequence)|",
      "|java+method:///java/text/SimpleDateFormat/parse(java.lang.String)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+constructor:///java/math/BigInteger/BigInteger(java.lang.String)|",
      "|java+constructor:///java/lang/Float/Float(java.lang.String)|",
      "|java+constructor:///java/lang/Short/Short(java.lang.String)|",
      "|java+constructor:///java/math/BigDecimal/BigDecimal(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/adjustParam(java.lang.String,java.lang.String,java.util.Map,boolean)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+constructor:///java/lang/Byte/Byte(java.lang.String)|",
      "|java+constructor:///java/lang/Long/Long(java.lang.String)|",
      "|java+constructor:///java/lang/Double/Double(java.lang.String)|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.drools:drools-workbench-models-commons:6.2.0.Beta1",
    "coordinatesV2": "org.drools:drools-workbench-models-commons:7.0.0.Beta1",
    "caller": "|java+initializer:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/RuleModelDRLPersistenceImpl$initializer|",
    "called": "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/RuleModelDRLPersistenceImpl()|"
    ],
    "v2Body": [
      "|java+constructor:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/RuleModelDRLPersistenceImpl()|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|"
    ],
    "affectedLib": "org.slf4j:slf4j-api:1.7.7",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.drools:drools-workbench-models-commons:6.2.0.Beta1",
    "coordinatesV2": "org.drools:drools-workbench-models-commons:7.0.0.Beta1",
    "caller": "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/inferFieldNature(java.lang.String,java.lang.String,boolean)|",
    "called": "|java+method:///org/apache/commons/lang3/StringUtils/isEmpty(java.lang.CharSequence)|",
    "v1Body": [
      "|java+method:///java/lang/Boolean/equals(java.lang.Object)|",
      "|java+method:///java/text/ParseException/printStackTrace()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isEmpty(java.lang.String)|",
      "|java+method:///org/drools/core/util/DateUtils/getDateFormatMask()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+constructor:///java/text/SimpleDateFormat/SimpleDateFormat(java.lang.String,java.util.Locale)|",
      "|java+constructor:///java/lang/Integer/Integer(java.lang.String)|",
      "|java+method:///java/text/SimpleDateFormat/parse(java.lang.String)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+constructor:///java/math/BigInteger/BigInteger(java.lang.String)|",
      "|java+method:///org/apache/commons/lang/NumberUtils/isNumber(java.lang.String)|",
      "|java+constructor:///java/lang/Float/Float(java.lang.String)|",
      "|java+constructor:///java/lang/Short/Short(java.lang.String)|",
      "|java+constructor:///java/math/BigDecimal/BigDecimal(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/adjustParam(java.lang.String,java.lang.String,java.util.Map,boolean)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+constructor:///java/lang/Byte/Byte(java.lang.String)|",
      "|java+constructor:///java/lang/Long/Long(java.lang.String)|",
      "|java+constructor:///java/lang/Double/Double(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Boolean/equals(java.lang.Object)|",
      "|java+method:///org/drools/core/util/DateUtils/getDateFormatMask()|",
      "|java+method:///org/apache/commons/lang3/math/NumberUtils/isNumber(java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+constructor:///java/text/SimpleDateFormat/SimpleDateFormat(java.lang.String,java.util.Locale)|",
      "|java+constructor:///java/lang/Integer/Integer(java.lang.String)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isEmpty(java.lang.CharSequence)|",
      "|java+method:///java/text/SimpleDateFormat/parse(java.lang.String)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+constructor:///java/math/BigInteger/BigInteger(java.lang.String)|",
      "|java+constructor:///java/lang/Float/Float(java.lang.String)|",
      "|java+constructor:///java/lang/Short/Short(java.lang.String)|",
      "|java+constructor:///java/math/BigDecimal/BigDecimal(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/adjustParam(java.lang.String,java.lang.String,java.util.Map,boolean)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+constructor:///java/lang/Byte/Byte(java.lang.String)|",
      "|java+constructor:///java/lang/Long/Long(java.lang.String)|",
      "|java+constructor:///java/lang/Double/Double(java.lang.String)|"
    ],
    "affectedLib": "org.apache.commons:commons-lang3:3.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.drools:drools-workbench-models-commons:6.2.0.Beta1",
    "coordinatesV2": "org.drools:drools-workbench-models-commons:7.0.0.Beta1",
    "caller": "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/inferFieldNature(java.lang.String,java.lang.String,boolean)|",
    "called": "|java+method:///org/drools/core/util/DateUtils/getDateFormatMask()|",
    "v1Body": [
      "|java+method:///java/lang/Boolean/equals(java.lang.Object)|",
      "|java+method:///java/text/ParseException/printStackTrace()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isEmpty(java.lang.String)|",
      "|java+method:///org/drools/core/util/DateUtils/getDateFormatMask()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+constructor:///java/text/SimpleDateFormat/SimpleDateFormat(java.lang.String,java.util.Locale)|",
      "|java+constructor:///java/lang/Integer/Integer(java.lang.String)|",
      "|java+method:///java/text/SimpleDateFormat/parse(java.lang.String)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+constructor:///java/math/BigInteger/BigInteger(java.lang.String)|",
      "|java+method:///org/apache/commons/lang/NumberUtils/isNumber(java.lang.String)|",
      "|java+constructor:///java/lang/Float/Float(java.lang.String)|",
      "|java+constructor:///java/lang/Short/Short(java.lang.String)|",
      "|java+constructor:///java/math/BigDecimal/BigDecimal(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/adjustParam(java.lang.String,java.lang.String,java.util.Map,boolean)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+constructor:///java/lang/Byte/Byte(java.lang.String)|",
      "|java+constructor:///java/lang/Long/Long(java.lang.String)|",
      "|java+constructor:///java/lang/Double/Double(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Boolean/equals(java.lang.Object)|",
      "|java+method:///org/drools/core/util/DateUtils/getDateFormatMask()|",
      "|java+method:///org/apache/commons/lang3/math/NumberUtils/isNumber(java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+constructor:///java/text/SimpleDateFormat/SimpleDateFormat(java.lang.String,java.util.Locale)|",
      "|java+constructor:///java/lang/Integer/Integer(java.lang.String)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isEmpty(java.lang.CharSequence)|",
      "|java+method:///java/text/SimpleDateFormat/parse(java.lang.String)|",
      "|java+method:///java/lang/Boolean/parseBoolean(java.lang.String)|",
      "|java+constructor:///java/math/BigInteger/BigInteger(java.lang.String)|",
      "|java+constructor:///java/lang/Float/Float(java.lang.String)|",
      "|java+constructor:///java/lang/Short/Short(java.lang.String)|",
      "|java+constructor:///java/math/BigDecimal/BigDecimal(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/adjustParam(java.lang.String,java.lang.String,java.util.Map,boolean)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+constructor:///java/lang/Byte/Byte(java.lang.String)|",
      "|java+constructor:///java/lang/Long/Long(java.lang.String)|",
      "|java+constructor:///java/lang/Double/Double(java.lang.String)|"
    ],
    "affectedLib": "org.drools:drools-core:7.0.0.Beta1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.drools:drools-workbench-models-commons:6.2.0.Beta1",
    "coordinatesV2": "org.drools:drools-workbench-models-commons:7.0.0.Beta1",
    "caller": "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/findOperator(java.lang.String)|",
    "called": "|java+method:///org/drools/core/base/evaluators/Operator/getAllOperators()|",
    "v1Body": [
      "|java+method:///org/drools/core/base/evaluators/Operator/getAllOperators()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/lang/Character/isLetter(char)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+method:///java/lang/String/contains(java.lang.CharSequence)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/drools/core/base/evaluators/Operator/getOperatorString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/charAt(int)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/isInQuote(java.lang.String,int)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/indexOf(java.lang.String)|",
      "|java+method:///org/drools/core/base/evaluators/Operator/isNegated()|",
      "|java+method:///java/util/Set/iterator()|"
    ],
    "v2Body": [
      "|java+method:///org/drools/core/base/evaluators/Operator/getAllOperators()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/lang/Character/isLetter(char)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+method:///java/lang/String/contains(java.lang.CharSequence)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/drools/core/base/evaluators/Operator/getOperatorString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/charAt(int)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/isInQuote(java.lang.String,int)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///java/lang/String/substring(int,int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/indexOf(java.lang.String)|",
      "|java+method:///org/drools/core/base/evaluators/Operator/isNegated()|",
      "|java+method:///java/util/Set/iterator()|"
    ],
    "affectedLib": "org.drools:drools-core:7.0.0.Beta1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.drools:drools-workbench-models-commons:6.2.0.Beta1",
    "coordinatesV2": "org.drools:drools-workbench-models-commons:7.0.0.Beta1",
    "caller": "|java+constructor:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$LHSPatternVisitor/RuleModelDRLPersistenceImpl$LHSPatternVisitor(boolean,java.util.Map,java.util.Map,org.drools.workbench.models.datamodel.rule.builder.DRLConstraintValueBuilder,org.drools.workbench.models.commons.backend.rule.context.LHSGeneratorContextFactory,java.lang.StringBuilder,java.lang.String,boolean)|",
    "called": "|java+constructor:///org/drools/core/util/ReflectiveVisitor/ReflectiveVisitor()|",
    "v1Body": [
      "|java+constructor:///org/drools/core/util/ReflectiveVisitor/ReflectiveVisitor()|"
    ],
    "v2Body": [
      "|java+method:///org/drools/workbench/models/commons/backend/rule/context/LHSGeneratorContextFactory/newGeneratorContext()|",
      "|java+constructor:///org/drools/core/util/ReflectiveVisitor/ReflectiveVisitor()|"
    ],
    "affectedLib": "org.drools:drools-core:7.0.0.Beta1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.drools:drools-workbench-models-commons:6.2.0.Beta1",
    "coordinatesV2": "org.drools:drools-workbench-models-commons:7.0.0.Beta1",
    "caller": "|java+constructor:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$RHSActionVisitor/RuleModelDRLPersistenceImpl$RHSActionVisitor(boolean,java.util.Map,java.util.Map,org.drools.workbench.models.datamodel.rule.builder.DRLConstraintValueBuilder,org.drools.workbench.models.commons.backend.rule.context.RHSGeneratorContextFactory,java.lang.StringBuilder,java.lang.String)|",
    "called": "|java+constructor:///org/drools/core/util/ReflectiveVisitor/ReflectiveVisitor()|",
    "v1Body": [
      "|java+constructor:///org/drools/core/util/ReflectiveVisitor/ReflectiveVisitor()|",
      "|java+constructor:///java/util/HashSet/HashSet()|"
    ],
    "v2Body": [
      "|java+method:///org/drools/workbench/models/commons/backend/rule/context/RHSGeneratorContextFactory/newGeneratorContext()|",
      "|java+constructor:///org/drools/core/util/ReflectiveVisitor/ReflectiveVisitor()|",
      "|java+constructor:///java/util/HashSet/HashSet()|"
    ],
    "affectedLib": "org.drools:drools-core:7.0.0.Beta1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.drools:drools-workbench-models-commons:6.2.0.Beta1",
    "coordinatesV2": "org.drools:drools-workbench-models-commons:7.0.0.Beta1",
    "caller": "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/parsePatternSource(org.drools.workbench.models.datamodel.rule.RuleModel,org.drools.compiler.lang.descr.PatternDescr,org.drools.compiler.lang.descr.PatternSourceDescr,boolean,java.util.Map,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle)|",
    "called": "|java+constructor:///org/drools/workbench/models/datamodel/rule/FromCompositeFactPattern/FromCompositeFactPattern()|",
    "v1Body": [
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromCompositeFactPattern/setFactPattern(org.drools.workbench.models.datamodel.rule.FactPattern)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromCollectCompositeFactPattern/setRightPattern(org.drools.workbench.models.datamodel.rule.IPattern)|",
      "|java+method:///org/drools/compiler/lang/descr/EntryPointDescr/getText()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/ModelField/getType()|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/ModelField/getClassName()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/FromEntryPointFactPattern/FromEntryPointFactPattern()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FactPattern/getBoundName()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///org/drools/compiler/lang/descr/AccumulateDescr$AccumulateFunctionCallDescr/getParams()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/setFactPattern(org.drools.workbench.models.datamodel.rule.FactPattern)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/getFactPattern(org.drools.workbench.models.datamodel.rule.RuleModel,org.drools.compiler.lang.descr.PatternDescr,boolean,java.util.Map,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/parseConstraint(org.drools.workbench.models.datamodel.rule.RuleModel,org.drools.workbench.models.datamodel.rule.FactPattern,org.drools.compiler.lang.descr.ConditionalElementDescr,boolean,java.util.Map,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromCollectCompositeFactPattern/setFactPattern(org.drools.workbench.models.datamodel.rule.FactPattern)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FactPattern/setBoundName(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromEntryPointFactPattern/setFactPattern(org.drools.workbench.models.datamodel.rule.FactPattern)|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/PackageDataModelOracle/getProjectMethodInformation()|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/MethodInfo/getParametricReturnType()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/setFunction(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/drools/compiler/lang/descr/PatternDescr/getIdentifier()|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/MethodInfo/getReturnClassType()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/setSourcePattern(org.drools.workbench.models.datamodel.rule.IPattern)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FactPattern/getFactType()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ExpressionVariable/ExpressionVariable(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ExpressionText/ExpressionText(java.lang.String)|",
      "|java+method:///org/drools/compiler/lang/descr/CollectDescr/getInputPattern()|",
      "|java+method:///org/drools/compiler/lang/descr/AccumulateDescr/getInput()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromCompositeFactPattern/setExpression(org.drools.workbench.models.datamodel.rule.ExpressionFormLine)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/FromCollectCompositeFactPattern/FromCollectCompositeFactPattern()|",
      "|java+method:///org/drools/compiler/lang/descr/AccumulateDescr$AccumulateFunctionCallDescr/getFunction()|",
      "|java+method:///org/drools/compiler/lang/descr/FromDescr/getDataSource()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromEntryPointFactPattern/setEntryPointName(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/parseBaseDescr(org.drools.workbench.models.datamodel.rule.RuleModel,org.drools.compiler.lang.descr.BaseDescr,boolean,java.util.Map,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/FromAccumulateCompositeFactPattern()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ExpressionFormLine/ExpressionFormLine()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/FromCompositeFactPattern/FromCompositeFactPattern()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ExpressionField/ExpressionField(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ExpressionMethod/ExpressionMethod(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ExpressionFormLine/appendPart(org.drools.workbench.models.datamodel.rule.ExpressionPart)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ExpressionFormLine/getClassType()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/FactPattern/FactPattern(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/MethodInfo/getName()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/MethodInfo/getGenericType()|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/ModelField/getName()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/findFields(org.drools.workbench.models.datamodel.rule.RuleModel,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle,java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/drools/compiler/lang/descr/PatternDescr/getObjectType()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/drools/compiler/lang/descr/AccumulateDescr/getFunctions()|",
      "|java+method:///org/drools/compiler/lang/descr/PatternDescr/getConstraint()|"
    ],
    "v2Body": [
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromCompositeFactPattern/setFactPattern(org.drools.workbench.models.datamodel.rule.FactPattern)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromCollectCompositeFactPattern/setRightPattern(org.drools.workbench.models.datamodel.rule.IPattern)|",
      "|java+method:///org/drools/compiler/lang/descr/EntryPointDescr/getText()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/ModelField/getType()|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/ModelField/getClassName()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///org/drools/compiler/lang/descr/AccumulateDescr/getResultCode()|",
      "|java+method:///org/drools/compiler/lang/descr/AccumulateDescr$AccumulateFunctionCallDescr/getParams()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/setFactPattern(org.drools.workbench.models.datamodel.rule.FactPattern)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/getFactPattern(org.drools.workbench.models.datamodel.rule.RuleModel,org.drools.compiler.lang.descr.PatternDescr,boolean,java.util.Map,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/parseConstraint(org.drools.workbench.models.datamodel.rule.RuleModel,org.drools.workbench.models.datamodel.rule.FactPattern,org.drools.compiler.lang.descr.ConditionalElementDescr,boolean,java.util.Map,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromCollectCompositeFactPattern/setFactPattern(org.drools.workbench.models.datamodel.rule.FactPattern)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FactPattern/setBoundName(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromEntryPointFactPattern/setFactPattern(org.drools.workbench.models.datamodel.rule.FactPattern)|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/PackageDataModelOracle/getProjectMethodInformation()|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/MethodInfo/getParametricReturnType()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/setFunction(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/drools/compiler/lang/descr/PatternDescr/getIdentifier()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/setReverseCode(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/MethodInfo/getReturnClassType()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/setSourcePattern(org.drools.workbench.models.datamodel.rule.IPattern)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/setInitCode(java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/FromEntryPointFactPattern/FromEntryPointFactPattern()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ExpressionVariable/ExpressionVariable(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ExpressionText/ExpressionText(java.lang.String)|",
      "|java+method:///org/drools/compiler/lang/descr/CollectDescr/getInputPattern()|",
      "|java+method:///org/drools/compiler/lang/descr/AccumulateDescr/getInput()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromCompositeFactPattern/setExpression(org.drools.workbench.models.datamodel.rule.ExpressionFormLine)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/FromCollectCompositeFactPattern/FromCollectCompositeFactPattern()|",
      "|java+method:///org/drools/compiler/lang/descr/AccumulateDescr/getInitCode()|",
      "|java+method:///org/drools/compiler/lang/descr/AccumulateDescr$AccumulateFunctionCallDescr/getFunction()|",
      "|java+method:///org/drools/compiler/lang/descr/FromDescr/getDataSource()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromEntryPointFactPattern/setEntryPointName(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/parseBaseDescr(org.drools.workbench.models.datamodel.rule.RuleModel,org.drools.compiler.lang.descr.BaseDescr,boolean,java.util.Map,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/FromAccumulateCompositeFactPattern()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ExpressionFormLine/ExpressionFormLine()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/FromCompositeFactPattern/FromCompositeFactPattern()|",
      "|java+method:///org/drools/compiler/lang/descr/AccumulateDescr/getReverseCode()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/setActionCode(java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ExpressionField/ExpressionField(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/drools/compiler/lang/descr/AccumulateDescr/getActionCode()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ExpressionMethod/ExpressionMethod(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ExpressionFormLine/appendPart(org.drools.workbench.models.datamodel.rule.ExpressionPart)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ExpressionFormLine/getClassType()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/FactPattern/FactPattern(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/MethodInfo/getName()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/setResultCode(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/MethodInfo/getGenericType()|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/ModelField/getName()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/findFields(org.drools.workbench.models.datamodel.rule.RuleModel,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle,java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/drools/compiler/lang/descr/PatternDescr/getObjectType()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/drools/compiler/lang/descr/AccumulateDescr/getFunctions()|",
      "|java+method:///org/drools/compiler/lang/descr/PatternDescr/getConstraint()|"
    ],
    "affectedLib": "org.drools:drools-workbench-models-datamodel-api:7.0.0.Beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.drools:drools-workbench-models-commons:6.2.0.Beta1",
    "coordinatesV2": "org.drools:drools-workbench-models-commons:7.0.0.Beta1",
    "caller": "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$SimpleExpr/createSingleFieldConstraintEBLeftSide(org.drools.workbench.models.datamodel.rule.RuleModel,org.drools.workbench.models.datamodel.rule.FactPattern,java.lang.String,java.lang.String,java.lang.String)|",
    "called": "|java+constructor:///org/drools/workbench/models/datamodel/rule/ExpressionUnboundFact/ExpressionUnboundFact(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ExpressionUnboundFact/ExpressionUnboundFact(org.drools.workbench.models.datamodel.rule.FactPattern)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraintEBLeftSide/getExpressionLeftSide()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$SimpleExpr/setFieldBindingOnContraint(java.lang.String,java.lang.String,org.drools.workbench.models.datamodel.rule.RuleModel,org.drools.workbench.models.datamodel.rule.SingleFieldConstraint,java.util.Map)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FactPattern/getFactType()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$SimpleExpr/parseExpression(org.drools.workbench.models.datamodel.rule.RuleModel,java.lang.String,java.lang.String,org.drools.workbench.models.datamodel.rule.ExpressionFormLine)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ExpressionFormLine/appendPart(org.drools.workbench.models.datamodel.rule.ExpressionPart)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$SimpleExpr/setOperatorAndValueOnConstraint(org.drools.workbench.models.datamodel.rule.RuleModel,java.lang.String,java.lang.String,org.drools.workbench.models.datamodel.rule.FactPattern,org.drools.workbench.models.datamodel.rule.SingleFieldConstraint)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$SimpleExpr/getFQFactType(org.drools.workbench.models.datamodel.rule.RuleModel,java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraintEBLeftSide/SingleFieldConstraintEBLeftSide()|"
    ],
    "v2Body": [
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ExpressionUnboundFact/ExpressionUnboundFact(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraintEBLeftSide/getExpressionLeftSide()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$SimpleExpr/setFieldBindingOnContraint(java.lang.String,java.lang.String,org.drools.workbench.models.datamodel.rule.RuleModel,org.drools.workbench.models.datamodel.rule.SingleFieldConstraint,java.util.Map)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FactPattern/getFactType()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$SimpleExpr/parseExpression(org.drools.workbench.models.datamodel.rule.RuleModel,java.lang.String,java.lang.String,org.drools.workbench.models.datamodel.rule.ExpressionFormLine)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ExpressionFormLine/appendPart(org.drools.workbench.models.datamodel.rule.ExpressionPart)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$SimpleExpr/setOperatorAndValueOnConstraint(org.drools.workbench.models.datamodel.rule.RuleModel,java.lang.String,java.lang.String,org.drools.workbench.models.datamodel.rule.FactPattern,org.drools.workbench.models.datamodel.rule.SingleFieldConstraint)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$SimpleExpr/getFQFactType(org.drools.workbench.models.datamodel.rule.RuleModel,java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraintEBLeftSide/SingleFieldConstraintEBLeftSide()|"
    ],
    "affectedLib": "org.drools:drools-workbench-models-datamodel-api:7.0.0.Beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.drools:drools-workbench-models-commons:6.2.0.Beta1",
    "coordinatesV2": "org.drools:drools-workbench-models-commons:7.0.0.Beta1",
    "caller": "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/toDSLSentence(java.util.List,java.lang.String)|",
    "called": "|java+method:///org/drools/workbench/models/datamodel/rule/DSLSentence/getValues()|",
    "v1Body": [
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+method:///java/util/regex/Pattern/compile(java.lang.String)|",
      "|java+method:///java/lang/String/replaceAll(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/regex/Matcher/matches()|",
      "|java+method:///java/util/regex/Matcher/groupCount()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/DSLSentence/DSLSentence()|",
      "|java+method:///java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/DSLSentence/getValues()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/DSLSentence/setDefinition(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/DSLVariableValue/setValue(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+method:///java/util/regex/Pattern/compile(java.lang.String)|",
      "|java+method:///java/lang/String/replaceAll(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/regex/Matcher/matches()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$SimpleDSLSentence/access$1300(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$SimpleDSLSentence)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/DSLSentence/DSLSentence()|",
      "|java+method:///java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/DSLSentence/setDrl(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/DSLSentence/getValues()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/regex/Matcher/groupCount()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$SimpleDSLSentence/access$1400(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$SimpleDSLSentence)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/DSLSentence/setDefinition(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/DSLVariableValue/setValue(java.lang.String)|"
    ],
    "affectedLib": "org.drools:drools-workbench-models-datamodel-api:7.0.0.Beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.drools:drools-workbench-models-commons:6.2.0.Beta1",
    "coordinatesV2": "org.drools:drools-workbench-models-commons:7.0.0.Beta1",
    "caller": "|java+method:///org/drools/workbench/models/commons/backend/rule/ActionCallMethodBuilder/getActionFieldFunction(java.lang.String,java.lang.String)|",
    "called": "|java+constructor:///org/drools/workbench/models/datamodel/rule/ActionFieldFunction/ActionFieldFunction(java.lang.String,java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/drools/workbench/models/datamodel/rule/ActionFieldFunction/setNature(int)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/ActionCallMethodBuilder/getAdjustedParameter(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ActionFieldFunction/ActionFieldFunction(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/inferFieldNature(java.lang.String,java.lang.String,java.util.Map,boolean)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ActionFieldFunction/setField(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/drools/workbench/models/datamodel/rule/ActionFieldFunction/setNature(int)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/unwrapTemplateKey(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/adjustParam(java.lang.String,java.lang.String,java.util.Map,boolean)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/inferFieldNature(java.lang.String,java.lang.String,java.util.Map,boolean)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/removeNumericSuffix(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ActionFieldFunction/ActionFieldFunction(java.lang.String,java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "org.drools:drools-workbench-models-datamodel-api:7.0.0.Beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.drools:drools-workbench-models-commons:6.2.0.Beta1",
    "coordinatesV2": "org.drools:drools-workbench-models-commons:7.0.0.Beta1",
    "caller": "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$LHSPatternVisitor/buildExpressionFieldValue(org.drools.workbench.models.datamodel.rule.ExpressionFormLine,java.lang.StringBuilder)|",
    "called": "|java+constructor:///org/drools/workbench/models/datamodel/rule/visitors/ToStringExpressionVisitor/ToStringExpressionVisitor(org.drools.workbench.models.datamodel.rule.builder.DRLConstraintValueBuilder)|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/visitors/ToStringExpressionVisitor/ToStringExpressionVisitor(java.lang.String,org.drools.workbench.models.datamodel.rule.builder.DRLConstraintValueBuilder)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ExpressionFormLine/getText(org.drools.workbench.models.datamodel.rule.visitors.ToStringExpressionVisitor)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ExpressionFormLine/getBinding()|"
    ],
    "v2Body": [
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/visitors/ToStringExpressionVisitor/ToStringExpressionVisitor(org.drools.workbench.models.datamodel.rule.builder.DRLConstraintValueBuilder)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ExpressionFormLine/getText(org.drools.workbench.models.datamodel.rule.visitors.ToStringExpressionVisitor)|"
    ],
    "affectedLib": "org.drools:drools-workbench-models-datamodel-api:7.0.0.Beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.drools:drools-workbench-models-commons:6.2.0.Beta1",
    "coordinatesV2": "org.drools:drools-workbench-models-commons:7.0.0.Beta1",
    "caller": "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$SimpleExpr/setOperatorAndValueOnConstraint(org.drools.workbench.models.datamodel.rule.RuleModel,java.lang.String,java.lang.String,org.drools.workbench.models.datamodel.rule.FactPattern,org.drools.workbench.models.datamodel.rule.SingleFieldConstraint)|",
    "called": "|java+constructor:///org/drools/workbench/models/datamodel/rule/ConnectiveConstraint/ConnectiveConstraint()|",
    "v1Body": [
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/setConnectives(org.drools.workbench.models.datamodel.rule.ConnectiveConstraint%5B%5D)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/access$1700(java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ConnectiveConstraint/ConnectiveConstraint()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/contains(java.lang.CharSequence)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/setOperator(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$SimpleExpr/setValueOnConstraint(org.drools.workbench.models.datamodel.rule.RuleModel,java.lang.String,org.drools.workbench.models.datamodel.rule.FactPattern,org.drools.workbench.models.datamodel.rule.BaseSingleFieldConstraint,java.lang.String)|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ConnectiveConstraint/setOperator(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/setConnectives(org.drools.workbench.models.datamodel.rule.ConnectiveConstraint%5B%5D)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/access$2000(java.lang.String)|",
      "|java+method:///java/lang/String/length()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ConnectiveConstraint/ConnectiveConstraint()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/getFieldType()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ConnectiveConstraint/setFactType(java.lang.String)|",
      "|java+method:///java/lang/String/contains(java.lang.CharSequence)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/setOperator(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/getFieldName()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ConnectiveConstraint/setFieldType(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FactPattern/getFactType()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$SimpleExpr/setValueOnConstraint(org.drools.workbench.models.datamodel.rule.RuleModel,java.lang.String,org.drools.workbench.models.datamodel.rule.FactPattern,org.drools.workbench.models.datamodel.rule.BaseSingleFieldConstraint,java.lang.String)|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ConnectiveConstraint/setOperator(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ConnectiveConstraint/setFieldName(java.lang.String)|"
    ],
    "affectedLib": "org.drools:drools-workbench-models-datamodel-api:7.0.0.Beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.drools:drools-workbench-models-commons:6.2.0.Beta1",
    "coordinatesV2": "org.drools:drools-workbench-models-commons:7.0.0.Beta1",
    "caller": "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/parseFreeForm(org.drools.workbench.models.datamodel.rule.RuleModel,org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo,int)|",
    "called": "|java+method:///org/drools/workbench/models/datamodel/rule/RuleModel/addLhsItem(org.drools.workbench.models.datamodel.rule.IPattern)|",
    "v1Body": [
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$ExpandedDRLInfo/access$800(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/FreeFormLine/FreeFormLine()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/RuleModel/addLhsItem(org.drools.workbench.models.datamodel.rule.IPattern)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FreeFormLine/setText(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$ExpandedDRLInfo/access$900(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/FreeFormLine/FreeFormLine()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/RuleModel/addLhsItem(org.drools.workbench.models.datamodel.rule.IPattern)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FreeFormLine/setText(java.lang.String)|"
    ],
    "affectedLib": "org.drools:drools-workbench-models-datamodel-api:7.0.0.Beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.drools:drools-workbench-models-commons:6.2.0.Beta1",
    "coordinatesV2": "org.drools:drools-workbench-models-commons:7.0.0.Beta1",
    "caller": "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/getRuleModel(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle)|",
    "called": "|java+constructor:///org/drools/workbench/models/datamodel/rule/RuleMetadata/RuleMetadata(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/drools/compiler/lang/descr/RuleDescr/getConsequence()|",
      "|java+method:///org/drools/compiler/lang/descr/RuleDescr/getName()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/RuleModel/setPackageName(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/drools/compiler/lang/descr/RuleDescr/getParentName()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/parseAttributes(org.drools.workbench.models.datamodel.rule.RuleModel,java.util.Map)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/parseRhs(org.drools.workbench.models.datamodel.rule.RuleModel,java.lang.String,boolean,java.util.Map,org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$ExpandedDRLInfo/access$500(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$ExpandedDRLInfo/access$600(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/parseDrl(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo)|",
      "|java+method:///org/drools/compiler/lang/descr/RuleDescr/getAnnotations()|",
      "|java+method:///org/drools/workbench/models/datamodel/imports/Imports/getImports()|",
      "|java+method:///org/drools/compiler/lang/descr/AnnotationDescr/getValuesAsString()|",
      "|java+method:///org/drools/workbench/models/commons/backend/packages/PackageNameParser/parsePackageName(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/parseLhs(org.drools.workbench.models.datamodel.rule.RuleModel,org.drools.compiler.lang.descr.AndDescr,boolean,org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle)|",
      "|java+method:///org/drools/compiler/lang/descr/RuleDescr/getAttributes()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/RuleModel/RuleModel()|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/drools/compiler/lang/descr/AnnotationDescr/getName()|",
      "|java+method:///org/drools/workbench/models/datamodel/imports/Imports/addImport(org.drools.workbench.models.datamodel.imports.Import)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/RuleModel/addMetadata(org.drools.workbench.models.datamodel.rule.RuleMetadata)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/RuleModel/getImports()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/RuleMetadata/RuleMetadata(java.lang.String,java.lang.String)|",
      "|java+method:///org/drools/compiler/lang/descr/RuleDescr/getLhs()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/drools/workbench/models/commons/backend/imports/ImportsParser/parseImports(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/drools/compiler/lang/descr/RuleDescr/getConsequence()|",
      "|java+method:///org/drools/compiler/lang/descr/RuleDescr/getName()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/RuleModel/setPackageName(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/drools/compiler/lang/descr/RuleDescr/getParentName()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/parseAttributes(org.drools.workbench.models.datamodel.rule.RuleModel,java.util.Map)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/parseRhs(org.drools.workbench.models.datamodel.rule.RuleModel,java.lang.String,boolean,java.util.Map,org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$ExpandedDRLInfo/access$600(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$ExpandedDRLInfo/access$700(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/parseDrl(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo)|",
      "|java+method:///org/drools/compiler/lang/descr/RuleDescr/getAnnotations()|",
      "|java+method:///org/drools/workbench/models/datamodel/imports/Imports/getImports()|",
      "|java+method:///org/drools/compiler/lang/descr/AnnotationDescr/getValuesAsString()|",
      "|java+method:///org/drools/workbench/models/commons/backend/packages/PackageNameParser/parsePackageName(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/parseLhs(org.drools.workbench.models.datamodel.rule.RuleModel,org.drools.compiler.lang.descr.AndDescr,boolean,org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle)|",
      "|java+method:///org/drools/compiler/lang/descr/RuleDescr/getAttributes()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/RuleModel/RuleModel()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/drools/compiler/lang/descr/AnnotationDescr/getName()|",
      "|java+method:///org/drools/workbench/models/datamodel/imports/Imports/addImport(org.drools.workbench.models.datamodel.imports.Import)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/RuleModel/addMetadata(org.drools.workbench.models.datamodel.rule.RuleMetadata)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/RuleModel/getImports()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/RuleMetadata/RuleMetadata(java.lang.String,java.lang.String)|",
      "|java+method:///org/drools/compiler/lang/descr/RuleDescr/getLhs()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/drools/workbench/models/commons/backend/imports/ImportsParser/parseImports(java.lang.String)|"
    ],
    "affectedLib": "org.drools:drools-workbench-models-datamodel-api:7.0.0.Beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.drools:drools-workbench-models-commons:6.2.0.Beta1",
    "coordinatesV2": "org.drools:drools-workbench-models-commons:7.0.0.Beta1",
    "caller": "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/buildFieldValue(boolean,java.lang.String,java.lang.String,java.lang.String,java.util.Map)|",
    "called": "|java+constructor:///org/drools/workbench/models/datamodel/rule/ActionWorkItemFieldValue/ActionWorkItemFieldValue(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/String/toUpperCase()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/lang/String/substring(int,int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ActionFieldValue/setNature(int)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/adjustParam(java.lang.String,java.lang.String,java.util.Map,boolean)|",
      "|java+method:///java/lang/String/contains(java.lang.CharSequence)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/inferFieldNature(java.lang.String,java.lang.String,java.util.Map,boolean)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ActionFieldValue/ActionFieldValue(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ActionWorkItemFieldValue/ActionWorkItemFieldValue(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/lang/Class/getName()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/String/toUpperCase()|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/lang/String/substring(int,int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/unwrapTemplateKey(java.lang.String)|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ActionFieldValue/setNature(int)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/adjustParam(java.lang.String,java.lang.String,java.util.Map,boolean)|",
      "|java+method:///java/lang/String/contains(java.lang.CharSequence)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/inferFieldNature(java.lang.String,java.lang.String,java.util.Map,boolean)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/removeNumericSuffix(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ActionFieldValue/ActionFieldValue(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ActionWorkItemFieldValue/ActionWorkItemFieldValue(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/lang/Class/getName()|"
    ],
    "affectedLib": "org.drools:drools-workbench-models-datamodel-api:7.0.0.Beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.drools:drools-workbench-models-commons:6.2.0.Beta1",
    "coordinatesV2": "org.drools:drools-workbench-models-commons:7.0.0.Beta1",
    "caller": "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/parseDslInLhs(org.drools.workbench.models.datamodel.rule.RuleModel,org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo,int)|",
    "called": "|java+method:///org/drools/workbench/models/datamodel/rule/RuleModel/addLhsItem(org.drools.workbench.models.datamodel.rule.IPattern)|",
    "v1Body": [
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/toDSLSentence(java.util.List,java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$ExpandedDRLInfo/access$900(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$ExpandedDRLInfo/access$300(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/RuleModel/addLhsItem(org.drools.workbench.models.datamodel.rule.IPattern)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$ExpandedDRLInfo/access$1100(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/toDSLSentence(java.util.List,java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$ExpandedDRLInfo/access$1000(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$ExpandedDRLInfo/access$1200(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$ExpandedDRLInfo/access$400(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/RuleModel/addLhsItem(org.drools.workbench.models.datamodel.rule.IPattern)|"
    ],
    "affectedLib": "org.drools:drools-workbench-models-datamodel-api:7.0.0.Beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.drools:drools-workbench-models-commons:6.2.0.Beta1",
    "coordinatesV2": "org.drools:drools-workbench-models-commons:7.0.0.Beta1",
    "caller": "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$LHSPatternVisitor/generateConnectiveFieldRestriction(org.drools.workbench.models.datamodel.rule.SingleFieldConstraint,java.util.Map,org.drools.workbench.models.commons.backend.rule.context.LHSGeneratorContext)|",
    "called": "|java+method:///org/drools/workbench/models/datamodel/rule/ExpressionFormLine/getGenericType()|",
    "v1Body": [
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraintEBLeftSide/getExpressionValue()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/getConnectives()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$LHSPatternVisitor/preGenerateConstraints(org.drools.workbench.models.commons.backend.rule.context.LHSGeneratorContext)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ConnectiveConstraint/getOperator()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/getConstraintValueType()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraintEBLeftSide/getOperator()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/getValue()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ConnectiveConstraint/getParameters()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraintEBLeftSide/getConstraintValueType()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/context/LHSGeneratorContext/setFieldConstraint(org.drools.workbench.models.datamodel.rule.FieldConstraint)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ConnectiveConstraint/getExpressionValue()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraintEBLeftSide/getExpressionLeftSide()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/getOperator()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/context/LHSGeneratorContextFactory/newChildGeneratorContext(org.drools.workbench.models.commons.backend.rule.context.LHSGeneratorContext)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ExpressionFormLine/getGenericType()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/getFieldType()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraintEBLeftSide/getValue()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ConnectiveConstraint/getConstraintValueType()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ConnectiveConstraint/getValue()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/getExpressionValue()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$LHSPatternVisitor/addConnectiveFieldRestriction(java.lang.StringBuilder,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,org.drools.workbench.models.datamodel.rule.ExpressionFormLine,org.drools.workbench.models.commons.backend.rule.context.LHSGeneratorContext,boolean)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ConnectiveConstraint/getFieldType()|"
    ],
    "v2Body": [
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraintEBLeftSide/getExpressionValue()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/getConnectives()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/context/LHSGeneratorContextFactory/newChildGeneratorContext(org.drools.workbench.models.commons.backend.rule.context.LHSGeneratorContext,org.drools.workbench.models.datamodel.rule.FieldConstraint)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ConnectiveConstraint/getOperator()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/getConstraintValueType()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraintEBLeftSide/getOperator()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/getValue()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ConnectiveConstraint/getParameters()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraintEBLeftSide/getConstraintValueType()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ConnectiveConstraint/getExpressionValue()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraintEBLeftSide/getExpressionLeftSide()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/getOperator()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ExpressionFormLine/getGenericType()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/getFieldType()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraintEBLeftSide/getValue()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ConnectiveConstraint/getConstraintValueType()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ConnectiveConstraint/getValue()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/getExpressionValue()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$LHSPatternVisitor/addConnectiveFieldRestriction(java.lang.StringBuilder,int,java.lang.String,java.lang.String,java.util.Map,java.lang.String,org.drools.workbench.models.datamodel.rule.ExpressionFormLine,org.drools.workbench.models.commons.backend.rule.context.LHSGeneratorContext,boolean)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ConnectiveConstraint/getFieldType()|"
    ],
    "affectedLib": "org.drools:drools-workbench-models-datamodel-api:7.0.0.Beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.drools:drools-workbench-models-commons:6.2.0.Beta1",
    "coordinatesV2": "org.drools:drools-workbench-models-commons:7.0.0.Beta1",
    "caller": "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$LHSPatternVisitor/renderExpression(org.drools.workbench.models.datamodel.rule.ExpressionFormLine)|",
    "called": "|java+constructor:///org/drools/workbench/models/datamodel/rule/visitors/ToStringExpressionVisitor/ToStringExpressionVisitor(org.drools.workbench.models.datamodel.rule.builder.DRLConstraintValueBuilder)|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/visitors/ToStringExpressionVisitor/ToStringExpressionVisitor(java.lang.String,org.drools.workbench.models.datamodel.rule.builder.DRLConstraintValueBuilder)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ExpressionFormLine/getText(org.drools.workbench.models.datamodel.rule.visitors.ToStringExpressionVisitor)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ExpressionFormLine/getBinding()|"
    ],
    "v2Body": [
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/visitors/ToStringExpressionVisitor/ToStringExpressionVisitor(org.drools.workbench.models.datamodel.rule.builder.DRLConstraintValueBuilder)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ExpressionFormLine/getText(org.drools.workbench.models.datamodel.rule.visitors.ToStringExpressionVisitor)|"
    ],
    "affectedLib": "org.drools:drools-workbench-models-datamodel-api:7.0.0.Beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.drools:drools-workbench-models-commons:6.2.0.Beta1",
    "coordinatesV2": "org.drools:drools-workbench-models-commons:7.0.0.Beta1",
    "caller": "|java+method:///org/drools/workbench/models/commons/backend/rule/context/GeneratorContextRuleModelVisitor/visitFromCompositeFactPattern(org.drools.workbench.models.datamodel.rule.FromCompositeFactPattern)|",
    "called": "|java+method:///org/drools/workbench/models/datamodel/rule/ExpressionFormLine/getText(org.drools.workbench.models.datamodel.rule.visitors.ToStringExpressionVisitor)|",
    "v1Body": [
      "|java+method:///org/drools/workbench/models/commons/backend/rule/context/GeneratorContextRuleModelVisitor/parseStringPattern(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/context/GeneratorContextRuleModelVisitor/visit(java.lang.Object)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromCompositeFactPattern/getFactPattern()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/visitors/ToStringExpressionVisitor/ToStringExpressionVisitor(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromCompositeFactPattern/getExpression()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ExpressionFormLine/getText(org.drools.workbench.models.datamodel.rule.visitors.ToStringExpressionVisitor)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ExpressionFormLine/getBinding()|"
    ],
    "v2Body": [
      "|java+method:///org/drools/workbench/models/commons/backend/rule/context/GeneratorContextRuleModelVisitor/parseStringPattern(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ExpressionFormLine/getText(org.drools.workbench.models.datamodel.rule.visitors.ToStringExpressionVisitor)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/context/GeneratorContextRuleModelVisitor/visit(java.lang.Object)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromCompositeFactPattern/getFactPattern()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/visitors/ToStringExpressionVisitor/ToStringExpressionVisitor()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromCompositeFactPattern/getExpression()|"
    ],
    "affectedLib": "org.drools:drools-workbench-models-datamodel-api:7.0.0.Beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.drools:drools-workbench-models-commons:6.2.0.Beta1",
    "coordinatesV2": "org.drools:drools-workbench-models-commons:7.0.0.Beta1",
    "caller": "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/parseRhs(org.drools.workbench.models.datamodel.rule.RuleModel,java.lang.String,boolean,java.util.Map,org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle)|",
    "called": "|java+method:///org/drools/workbench/models/datamodel/workitems/PortableWorkDefinition/addParameter(org.drools.workbench.models.datamodel.workitems.PortableParameterDefinition)|",
    "v1Body": [
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/toDSLSentence(java.util.List,java.lang.String)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ActionGlobalCollectionAdd/setGlobalName(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ActionExecuteWorkItem/setWorkDefinition(org.drools.workbench.models.datamodel.workitems.PortableWorkDefinition)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/addModifiersToAction(java.lang.String,org.drools.workbench.models.datamodel.rule.ActionFieldList,java.util.Map,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle,org.drools.workbench.models.datamodel.imports.Imports,boolean)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/buildPortableParameterDefinition(java.lang.String,java.lang.String,java.util.Map)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ActionUpdateField/setVariable(java.lang.String)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/RuleModel/addRhsItem(org.drools.workbench.models.datamodel.rule.IAction,int)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/unwrapParenthesis(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/getStatementType(java.lang.String,java.util.Map)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/addSettersToAction(java.util.List,org.drools.workbench.models.datamodel.rule.ActionFieldList,java.util.Map,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle,org.drools.workbench.models.datamodel.imports.Imports,boolean)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/RuleModel/addRhsItem(org.drools.workbench.models.datamodel.rule.IAction)|",
      "|java+method:///org/drools/workbench/models/datamodel/workitems/PortableWorkDefinition/setName(java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ActionGlobalCollectionAdd/ActionGlobalCollectionAdd()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/isInsertedFact(java.lang.String%5B%5D,int,java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ActionUpdateField/ActionUpdateField()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$ExpandedDRLInfo/access$1000(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$ExpandedDRLInfo/access$1100(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ActionGlobalCollectionAdd/setFactName(java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ActionInsertFact/ActionInsertFact(java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ActionSetField/ActionSetField(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/FreeFormLine/FreeFormLine()|",
      "|java+method:///java/lang/String/substring(int,int)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ActionInsertFact/setBoundName(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/RuleModel/getImports()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/lastIndexOf(int)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$ExpandedDRLInfo/hasGlobal(java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/getSettedField(java.lang.String)|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FreeFormLine/setText(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/isJavaIdentifier(java.lang.String)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ActionExecuteWorkItem/ActionExecuteWorkItem()|",
      "|java+method:///org/drools/workbench/models/datamodel/workitems/PortableWorkDefinition/addParameter(org.drools.workbench.models.datamodel.workitems.PortableParameterDefinition)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$ExpandedDRLInfo/access$400(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ActionInsertLogicalFact/ActionInsertLogicalFact(java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/workitems/PortableWorkDefinition/PortableWorkDefinition()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/getActionCallMethod(org.drools.workbench.models.datamodel.rule.RuleModel,boolean,java.util.Map,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ActionRetractFact/ActionRetractFact(java.lang.String)|",
      "|java+method:///java/lang/String/indexOf(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/addSettersToAction(java.util.Map,java.lang.String,org.drools.workbench.models.datamodel.rule.ActionFieldList,java.util.Map,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle,org.drools.workbench.models.datamodel.imports.Imports,boolean)|"
    ],
    "v2Body": [
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/toDSLSentence(java.util.List,java.lang.String)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ActionGlobalCollectionAdd/setGlobalName(java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ActionUpdateField/ActionUpdateField()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$ExpandedDRLInfo/access$1200(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/buildPortableParameterDefinition(java.lang.String,java.lang.String,java.util.Map)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ActionUpdateField/setVariable(java.lang.String)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ActionExecuteWorkItem/setWorkDefinition(org.drools.workbench.models.datamodel.workitems.PortableWorkDefinition)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ActionInsertLogicalFact/setBoundName(java.lang.String)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/RuleModel/addRhsItem(org.drools.workbench.models.datamodel.rule.IAction,int)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/getSettedField(org.drools.workbench.models.datamodel.rule.RuleModel,java.lang.String,java.lang.String,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/addSettersToAction(java.util.Map,java.lang.String,org.drools.workbench.models.datamodel.rule.ActionFieldList,java.util.Map,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle,org.drools.workbench.models.datamodel.rule.RuleModel,boolean)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/unwrapParenthesis(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/getStatementType(java.lang.String,java.util.Map)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/RuleModel/addRhsItem(org.drools.workbench.models.datamodel.rule.IAction)|",
      "|java+method:///org/drools/workbench/models/datamodel/workitems/PortableWorkDefinition/setName(java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ActionGlobalCollectionAdd/ActionGlobalCollectionAdd()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/isInsertedFact(java.lang.String%5B%5D,int,java.lang.String)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$ExpandedDRLInfo/access$1100(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ActionGlobalCollectionAdd/setFactName(java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ActionInsertFact/ActionInsertFact(java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ActionSetField/ActionSetField(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ActionInsertFact/setBoundName(java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/FreeFormLine/FreeFormLine()|",
      "|java+method:///java/lang/String/substring(int,int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/lastIndexOf(int)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$ExpandedDRLInfo/hasGlobal(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/addModifiersToAction(java.lang.String,org.drools.workbench.models.datamodel.rule.ActionFieldList,java.lang.String,java.util.Map,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle,org.drools.workbench.models.datamodel.rule.RuleModel,boolean)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/addSettersToAction(java.util.List,org.drools.workbench.models.datamodel.rule.ActionFieldList,java.lang.String,java.util.Map,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle,org.drools.workbench.models.datamodel.rule.RuleModel,boolean)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FreeFormLine/setText(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/isJavaIdentifier(java.lang.String)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ActionExecuteWorkItem/ActionExecuteWorkItem()|",
      "|java+method:///org/drools/workbench/models/datamodel/workitems/PortableWorkDefinition/addParameter(org.drools.workbench.models.datamodel.workitems.PortableParameterDefinition)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ActionInsertLogicalFact/ActionInsertLogicalFact(java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/workitems/PortableWorkDefinition/PortableWorkDefinition()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$ExpandedDRLInfo/access$500(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/getActionCallMethod(org.drools.workbench.models.datamodel.rule.RuleModel,boolean,java.util.Map,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ActionRetractFact/ActionRetractFact(java.lang.String)|",
      "|java+method:///java/lang/String/indexOf(int)|"
    ],
    "affectedLib": "org.drools:drools-workbench-models-datamodel-api:7.0.0.Beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.drools:drools-workbench-models-commons:6.2.0.Beta1",
    "coordinatesV2": "org.drools:drools-workbench-models-commons:7.0.0.Beta1",
    "caller": "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/unmarshalUsingDSL(java.lang.String,java.util.List,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle,java.lang.String%5B%5D)|",
    "called": "|java+constructor:///org/drools/workbench/models/datamodel/rule/RuleModel/RuleModel()|",
    "v1Body": [
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/getRuleModel(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/parseDSLs(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo,java.lang.String%5B%5D)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/RuleModel/RuleModel()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$ExpandedDRLInfo/registerGlobals(org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle,java.util.List)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/preprocessDRL(java.lang.String,boolean)|"
    ],
    "v2Body": [
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/RuleModel/RuleModel()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$ExpandedDRLInfo/registerGlobals(org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle,java.util.List)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/getRuleModel(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/getSimpleRuleModel(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/parseDSLs(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo,java.lang.String%5B%5D)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/preprocessDRL(java.lang.String,boolean)|"
    ],
    "affectedLib": "org.drools:drools-workbench-models-datamodel-api:7.0.0.Beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.drools:drools-workbench-models-commons:6.2.0.Beta1",
    "coordinatesV2": "org.drools:drools-workbench-models-commons:7.0.0.Beta1",
    "caller": "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/getActionCallMethod(org.drools.workbench.models.datamodel.rule.RuleModel,boolean,java.util.Map,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle,java.lang.String,java.lang.String,java.lang.String)|",
    "called": "|java+constructor:///org/drools/workbench/models/datamodel/rule/FreeFormLine/FreeFormLine()|",
    "v1Body": [
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/unwrapParenthesis(java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/commons/backend/rule/ActionCallMethodBuilder/ActionCallMethodBuilder(org.drools.workbench.models.datamodel.rule.RuleModel,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle,boolean,java.util.Map)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/ActionCallMethodBuilder/get(java.lang.String,java.lang.String,java.lang.String%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/unwrapParenthesis(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/ActionCallMethodBuilder/supports(java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/commons/backend/rule/ActionCallMethodBuilder/ActionCallMethodBuilder(org.drools.workbench.models.datamodel.rule.RuleModel,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle,boolean,java.util.Map)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/FreeFormLine/FreeFormLine()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/ActionCallMethodBuilder/get(java.lang.String,java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FreeFormLine/setText(java.lang.String)|"
    ],
    "affectedLib": "org.drools:drools-workbench-models-datamodel-api:7.0.0.Beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.drools:drools-workbench-models-commons:6.2.0.Beta1",
    "coordinatesV2": "org.drools:drools-workbench-models-commons:7.0.0.Beta1",
    "caller": "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$SimpleExpr/parseExpression(org.drools.workbench.models.datamodel.rule.RuleModel,java.lang.String,java.lang.String,org.drools.workbench.models.datamodel.rule.ExpressionFormLine)|",
    "called": "|java+constructor:///org/drools/workbench/models/datamodel/rule/ExpressionField/ExpressionField(java.lang.String,java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/ModelField/getClassName()|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/MethodInfo/getReturnClassType()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/findMethodInfo(java.util.List,java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ExpressionVariable/ExpressionVariable(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$SimpleExpr/findFact(java.util.Map,java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ExpressionField/ExpressionField(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ExpressionFormLine/appendPart(org.drools.workbench.models.datamodel.rule.ExpressionPart)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/findFields(org.drools.workbench.models.datamodel.rule.RuleModel,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle,java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/ModelField/getType()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$SimpleExpr/getFQFactType(org.drools.workbench.models.datamodel.rule.RuleModel,java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/findField(org.drools.workbench.models.datamodel.oracle.ModelField%5B%5D,java.lang.String)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/PackageDataModelOracle/getProjectModelFields()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$SimpleExpr/processExpressionPart(org.drools.workbench.models.datamodel.rule.RuleModel,java.lang.String,org.drools.workbench.models.datamodel.oracle.ModelField,org.drools.workbench.models.datamodel.oracle.MethodInfo,org.drools.workbench.models.datamodel.rule.ExpressionFormLine,java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/getMethodInfosForType(org.drools.workbench.models.datamodel.rule.RuleModel,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$SimpleExpr/getFQFactType(org.drools.workbench.models.datamodel.rule.RuleModel,java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/ModelField/getClassName()|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/MethodInfo/getReturnClassType()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/findMethodInfo(java.util.List,java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$SimpleExpr/findFact(java.util.Map,java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ExpressionField/ExpressionField(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ExpressionFormLine/appendPart(org.drools.workbench.models.datamodel.rule.ExpressionPart)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/findFields(org.drools.workbench.models.datamodel.rule.RuleModel,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle,java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/access$2100(java.lang.String,org.drools.workbench.models.datamodel.oracle.ModelField)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/findField(org.drools.workbench.models.datamodel.oracle.ModelField%5B%5D,java.lang.String)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/PackageDataModelOracle/getProjectModelFields()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$SimpleExpr/processExpressionPart(org.drools.workbench.models.datamodel.rule.RuleModel,java.lang.String,org.drools.workbench.models.datamodel.oracle.ModelField,org.drools.workbench.models.datamodel.oracle.MethodInfo,org.drools.workbench.models.datamodel.rule.ExpressionFormLine,java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/getMethodInfosForType(org.drools.workbench.models.datamodel.rule.RuleModel,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle,java.lang.String)|"
    ],
    "affectedLib": "org.drools:drools-workbench-models-datamodel-api:7.0.0.Beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.drools:drools-workbench-models-commons:6.2.0.Beta1",
    "coordinatesV2": "org.drools:drools-workbench-models-commons:7.0.0.Beta1",
    "caller": "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$SimpleExpr/setValueOnConstraint(org.drools.workbench.models.datamodel.rule.RuleModel,java.lang.String,org.drools.workbench.models.datamodel.rule.FactPattern,org.drools.workbench.models.datamodel.rule.BaseSingleFieldConstraint,java.lang.String)|",
    "called": "|java+constructor:///org/drools/workbench/models/datamodel/rule/ExpressionFormLine/ExpressionFormLine()|",
    "v1Body": [
      "|java+method:///org/drools/workbench/models/datamodel/rule/BaseSingleFieldConstraint/setConstraintValueType(int)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$SimpleExpr/isEnumerationValue(org.drools.workbench.models.datamodel.rule.RuleModel,org.drools.workbench.models.datamodel.rule.FactPattern,org.drools.workbench.models.datamodel.rule.BaseSingleFieldConstraint)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ConnectiveConstraint/setFieldType(java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/BaseSingleFieldConstraint/setValue(java.lang.String)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/String/contains(java.lang.CharSequence)|",
      "|java+method:///java/lang/String/indexOf(int)|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/setFieldType(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/unwrapParenthesis(java.lang.String)|",
      "|java+method:///java/lang/String/charAt(int)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///java/lang/Character/isDigit(char)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$SimpleExpr/parseExpression(org.drools.workbench.models.datamodel.rule.RuleModel,java.lang.String,java.lang.String,org.drools.workbench.models.datamodel.rule.ExpressionFormLine)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ExpressionFormLine/ExpressionFormLine()|",
      "|java+method:///java/lang/String/substring(int,int)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/BaseSingleFieldConstraint/setExpressionValue(org.drools.workbench.models.datamodel.rule.ExpressionFormLine)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/drools/workbench/models/datamodel/rule/BaseSingleFieldConstraint/setConstraintValueType(int)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$SimpleExpr/isEnumerationValue(org.drools.workbench.models.datamodel.rule.RuleModel,org.drools.workbench.models.datamodel.rule.FactPattern,org.drools.workbench.models.datamodel.rule.BaseSingleFieldConstraint)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ConnectiveConstraint/setFieldType(java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/BaseSingleFieldConstraint/setValue(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/unwrapTemplateKey(java.lang.String)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/String/contains(java.lang.CharSequence)|",
      "|java+method:///java/lang/String/indexOf(int)|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/setFieldType(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/unwrapParenthesis(java.lang.String)|",
      "|java+method:///java/lang/String/charAt(int)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///java/lang/Character/isDigit(char)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$SimpleExpr/parseExpression(org.drools.workbench.models.datamodel.rule.RuleModel,java.lang.String,java.lang.String,org.drools.workbench.models.datamodel.rule.ExpressionFormLine)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ExpressionFormLine/ExpressionFormLine()|",
      "|java+method:///java/lang/String/substring(int,int)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/BaseSingleFieldConstraint/setExpressionValue(org.drools.workbench.models.datamodel.rule.ExpressionFormLine)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|"
    ],
    "affectedLib": "org.drools:drools-workbench-models-datamodel-api:7.0.0.Beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.drools:drools-workbench-models-commons:6.2.0.Beta1",
    "coordinatesV2": "org.drools:drools-workbench-models-commons:7.0.0.Beta1",
    "caller": "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$LHSPatternVisitor/visitFromAccumulateCompositeFactPattern(org.drools.workbench.models.datamodel.rule.FromAccumulateCompositeFactPattern,boolean)|",
    "called": "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/useFunctionOrCode()|",
    "v1Body": [
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/getFunction()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/getInitCode()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$LHSPatternVisitor/generateFactPattern(org.drools.workbench.models.datamodel.rule.FactPattern)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/getActionCode()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/getResultCode()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$LHSPatternVisitor/visitFromCompositeFactPattern(org.drools.workbench.models.datamodel.rule.FromCompositeFactPattern,boolean)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/getReverseCode()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/getSourcePattern()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/useFunctionOrCode()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$LHSPatternVisitor/visitFromEntryPointFactPattern(org.drools.workbench.models.datamodel.rule.FromEntryPointFactPattern,boolean)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$LHSPatternVisitor/visitFromCollectCompositeFactPattern(org.drools.workbench.models.datamodel.rule.FromCollectCompositeFactPattern,boolean)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$LHSPatternVisitor/visitFromAccumulateCompositeFactPattern(org.drools.workbench.models.datamodel.rule.FromAccumulateCompositeFactPattern,boolean)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/getFactPattern()|"
    ],
    "v2Body": [
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/getFunction()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/getInitCode()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/getActionCode()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/getResultCode()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$LHSPatternVisitor/visitFromCompositeFactPattern(org.drools.workbench.models.datamodel.rule.FromCompositeFactPattern,boolean)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/getReverseCode()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/getSourcePattern()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/useFunctionOrCode()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$LHSPatternVisitor/generateFactPattern(org.drools.workbench.models.datamodel.rule.FactPattern,org.drools.workbench.models.commons.backend.rule.context.LHSGeneratorContext)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/context/LHSGeneratorContextFactory/newGeneratorContext()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$LHSPatternVisitor/visitFromEntryPointFactPattern(org.drools.workbench.models.datamodel.rule.FromEntryPointFactPattern,boolean)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$LHSPatternVisitor/visitFromCollectCompositeFactPattern(org.drools.workbench.models.datamodel.rule.FromCollectCompositeFactPattern,boolean)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$LHSPatternVisitor/visitFromAccumulateCompositeFactPattern(org.drools.workbench.models.datamodel.rule.FromAccumulateCompositeFactPattern,boolean)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/getFactPattern()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/context/LHSGeneratorContextFactory/newChildGeneratorContext(org.drools.workbench.models.commons.backend.rule.context.LHSGeneratorContext,org.drools.workbench.models.datamodel.rule.IPattern)|"
    ],
    "affectedLib": "org.drools:drools-workbench-models-datamodel-api:7.0.0.Beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.drools:drools-workbench-models-commons:6.2.0.Beta1",
    "coordinatesV2": "org.drools:drools-workbench-models-commons:7.0.0.Beta1",
    "caller": "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$LHSPatternVisitor/generateSingleFieldConstraint(org.drools.workbench.models.datamodel.rule.SingleFieldConstraint,org.drools.workbench.models.commons.backend.rule.context.LHSGeneratorContext)|",
    "called": "|java+constructor:///org/drools/workbench/models/datamodel/rule/visitors/ToStringExpressionVisitor/ToStringExpressionVisitor(org.drools.workbench.models.datamodel.rule.builder.DRLConstraintValueBuilder)|",
    "v1Body": [
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$LHSPatternVisitor/generateNormalFieldRestriction(org.drools.workbench.models.datamodel.rule.SingleFieldConstraint,java.util.Map)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraintEBLeftSide/getExpressionLeftSide()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$LHSPatternVisitor/isConstraintComplete(org.drools.workbench.models.datamodel.rule.SingleFieldConstraint)|",
      "|java+method:///java/lang/StringBuilder/insert(int,java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$LHSPatternVisitor/assertConstraintValue(org.drools.workbench.models.datamodel.rule.SingleFieldConstraint)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/getFieldBinding()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.CharSequence)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/context/LHSGeneratorContext/setHasOutput(boolean)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/getConnectives()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$LHSPatternVisitor/generateConnectiveFieldRestriction(org.drools.workbench.models.datamodel.rule.SingleFieldConstraint,java.util.Map,org.drools.workbench.models.commons.backend.rule.context.LHSGeneratorContext)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/getFieldName()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ExpressionFormLine/getText(org.drools.workbench.models.datamodel.rule.visitors.ToStringExpressionVisitor)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ExpressionFormLine/getBinding()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/isBound()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/getConstraintValueType()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/getValue()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/getParent()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/visitors/ToStringExpressionVisitor/ToStringExpressionVisitor(java.lang.String,org.drools.workbench.models.datamodel.rule.builder.DRLConstraintValueBuilder)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/getParameters()|"
    ],
    "v2Body": [
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$LHSPatternVisitor/generateNormalFieldRestriction(org.drools.workbench.models.datamodel.rule.SingleFieldConstraint,java.util.Map)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraintEBLeftSide/getExpressionLeftSide()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$LHSPatternVisitor/isConstraintComplete(org.drools.workbench.models.datamodel.rule.SingleFieldConstraint)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/visitors/ToStringExpressionVisitor/ToStringExpressionVisitor(org.drools.workbench.models.datamodel.rule.builder.DRLConstraintValueBuilder)|",
      "|java+method:///java/lang/StringBuilder/insert(int,java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ExpressionFormLine/getText(org.drools.workbench.models.datamodel.rule.visitors.ToStringExpressionVisitor)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$LHSPatternVisitor/assertConstraintValue(org.drools.workbench.models.datamodel.rule.SingleFieldConstraint)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/getFieldBinding()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.CharSequence)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/context/LHSGeneratorContext/setHasOutput(boolean)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/getConnectives()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$LHSPatternVisitor/generateConnectiveFieldRestriction(org.drools.workbench.models.datamodel.rule.SingleFieldConstraint,java.util.Map,org.drools.workbench.models.commons.backend.rule.context.LHSGeneratorContext)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/getFieldName()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/isBound()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/getConstraintValueType()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/getValue()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/getParent()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/SingleFieldConstraint/getParameters()|"
    ],
    "affectedLib": "org.drools:drools-workbench-models-datamodel-api:7.0.0.Beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.drools:drools-workbench-models-commons:6.2.0.Beta1",
    "coordinatesV2": "org.drools:drools-workbench-models-commons:7.0.0.Beta1",
    "caller": "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/unmarshal(java.lang.String,java.util.List,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle)|",
    "called": "|java+constructor:///org/drools/workbench/models/datamodel/rule/RuleModel/RuleModel()|",
    "v1Body": [
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/getRuleModel(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/RuleModel/RuleModel()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$ExpandedDRLInfo/registerGlobals(org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle,java.util.List)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/preprocessDRL(java.lang.String,boolean)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/RuleModel/RuleModel()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$ExpandedDRLInfo/registerGlobals(org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle,java.util.List)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/getRuleModel(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/getSimpleRuleModel(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/preprocessDRL(java.lang.String,boolean)|"
    ],
    "affectedLib": "org.drools:drools-workbench-models-datamodel-api:7.0.0.Beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.drools:drools-workbench-models-commons:6.2.0.Beta1",
    "coordinatesV2": "org.drools:drools-workbench-models-commons:7.0.0.Beta1",
    "caller": "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/parsePatternSource(org.drools.workbench.models.datamodel.rule.RuleModel,org.drools.compiler.lang.descr.PatternDescr,org.drools.compiler.lang.descr.PatternSourceDescr,boolean,java.util.Map,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle)|",
    "called": "|java+method:///org/drools/compiler/lang/descr/AccumulateDescr/getFunctions()|",
    "v1Body": [
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromCompositeFactPattern/setFactPattern(org.drools.workbench.models.datamodel.rule.FactPattern)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromCollectCompositeFactPattern/setRightPattern(org.drools.workbench.models.datamodel.rule.IPattern)|",
      "|java+method:///org/drools/compiler/lang/descr/EntryPointDescr/getText()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/ModelField/getType()|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/ModelField/getClassName()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/FromEntryPointFactPattern/FromEntryPointFactPattern()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FactPattern/getBoundName()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///org/drools/compiler/lang/descr/AccumulateDescr$AccumulateFunctionCallDescr/getParams()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/setFactPattern(org.drools.workbench.models.datamodel.rule.FactPattern)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/getFactPattern(org.drools.workbench.models.datamodel.rule.RuleModel,org.drools.compiler.lang.descr.PatternDescr,boolean,java.util.Map,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/parseConstraint(org.drools.workbench.models.datamodel.rule.RuleModel,org.drools.workbench.models.datamodel.rule.FactPattern,org.drools.compiler.lang.descr.ConditionalElementDescr,boolean,java.util.Map,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromCollectCompositeFactPattern/setFactPattern(org.drools.workbench.models.datamodel.rule.FactPattern)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FactPattern/setBoundName(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromEntryPointFactPattern/setFactPattern(org.drools.workbench.models.datamodel.rule.FactPattern)|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/PackageDataModelOracle/getProjectMethodInformation()|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/MethodInfo/getParametricReturnType()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/setFunction(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/drools/compiler/lang/descr/PatternDescr/getIdentifier()|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/MethodInfo/getReturnClassType()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/setSourcePattern(org.drools.workbench.models.datamodel.rule.IPattern)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FactPattern/getFactType()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ExpressionVariable/ExpressionVariable(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ExpressionText/ExpressionText(java.lang.String)|",
      "|java+method:///org/drools/compiler/lang/descr/CollectDescr/getInputPattern()|",
      "|java+method:///org/drools/compiler/lang/descr/AccumulateDescr/getInput()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromCompositeFactPattern/setExpression(org.drools.workbench.models.datamodel.rule.ExpressionFormLine)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/FromCollectCompositeFactPattern/FromCollectCompositeFactPattern()|",
      "|java+method:///org/drools/compiler/lang/descr/AccumulateDescr$AccumulateFunctionCallDescr/getFunction()|",
      "|java+method:///org/drools/compiler/lang/descr/FromDescr/getDataSource()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromEntryPointFactPattern/setEntryPointName(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/parseBaseDescr(org.drools.workbench.models.datamodel.rule.RuleModel,org.drools.compiler.lang.descr.BaseDescr,boolean,java.util.Map,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/FromAccumulateCompositeFactPattern()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ExpressionFormLine/ExpressionFormLine()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/FromCompositeFactPattern/FromCompositeFactPattern()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ExpressionField/ExpressionField(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ExpressionMethod/ExpressionMethod(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ExpressionFormLine/appendPart(org.drools.workbench.models.datamodel.rule.ExpressionPart)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ExpressionFormLine/getClassType()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/FactPattern/FactPattern(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/MethodInfo/getName()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/MethodInfo/getGenericType()|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/ModelField/getName()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/findFields(org.drools.workbench.models.datamodel.rule.RuleModel,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle,java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/drools/compiler/lang/descr/PatternDescr/getObjectType()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/drools/compiler/lang/descr/AccumulateDescr/getFunctions()|",
      "|java+method:///org/drools/compiler/lang/descr/PatternDescr/getConstraint()|"
    ],
    "v2Body": [
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromCompositeFactPattern/setFactPattern(org.drools.workbench.models.datamodel.rule.FactPattern)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromCollectCompositeFactPattern/setRightPattern(org.drools.workbench.models.datamodel.rule.IPattern)|",
      "|java+method:///org/drools/compiler/lang/descr/EntryPointDescr/getText()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/ModelField/getType()|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/ModelField/getClassName()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///org/drools/compiler/lang/descr/AccumulateDescr/getResultCode()|",
      "|java+method:///org/drools/compiler/lang/descr/AccumulateDescr$AccumulateFunctionCallDescr/getParams()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/setFactPattern(org.drools.workbench.models.datamodel.rule.FactPattern)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/getFactPattern(org.drools.workbench.models.datamodel.rule.RuleModel,org.drools.compiler.lang.descr.PatternDescr,boolean,java.util.Map,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/parseConstraint(org.drools.workbench.models.datamodel.rule.RuleModel,org.drools.workbench.models.datamodel.rule.FactPattern,org.drools.compiler.lang.descr.ConditionalElementDescr,boolean,java.util.Map,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromCollectCompositeFactPattern/setFactPattern(org.drools.workbench.models.datamodel.rule.FactPattern)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FactPattern/setBoundName(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromEntryPointFactPattern/setFactPattern(org.drools.workbench.models.datamodel.rule.FactPattern)|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/PackageDataModelOracle/getProjectMethodInformation()|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/MethodInfo/getParametricReturnType()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/setFunction(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/drools/compiler/lang/descr/PatternDescr/getIdentifier()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/setReverseCode(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/MethodInfo/getReturnClassType()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/setSourcePattern(org.drools.workbench.models.datamodel.rule.IPattern)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/setInitCode(java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/FromEntryPointFactPattern/FromEntryPointFactPattern()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ExpressionVariable/ExpressionVariable(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ExpressionText/ExpressionText(java.lang.String)|",
      "|java+method:///org/drools/compiler/lang/descr/CollectDescr/getInputPattern()|",
      "|java+method:///org/drools/compiler/lang/descr/AccumulateDescr/getInput()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromCompositeFactPattern/setExpression(org.drools.workbench.models.datamodel.rule.ExpressionFormLine)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/FromCollectCompositeFactPattern/FromCollectCompositeFactPattern()|",
      "|java+method:///org/drools/compiler/lang/descr/AccumulateDescr/getInitCode()|",
      "|java+method:///org/drools/compiler/lang/descr/AccumulateDescr$AccumulateFunctionCallDescr/getFunction()|",
      "|java+method:///org/drools/compiler/lang/descr/FromDescr/getDataSource()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromEntryPointFactPattern/setEntryPointName(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/parseBaseDescr(org.drools.workbench.models.datamodel.rule.RuleModel,org.drools.compiler.lang.descr.BaseDescr,boolean,java.util.Map,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/FromAccumulateCompositeFactPattern()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ExpressionFormLine/ExpressionFormLine()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/FromCompositeFactPattern/FromCompositeFactPattern()|",
      "|java+method:///org/drools/compiler/lang/descr/AccumulateDescr/getReverseCode()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/setActionCode(java.lang.String)|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ExpressionField/ExpressionField(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/drools/compiler/lang/descr/AccumulateDescr/getActionCode()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/ExpressionMethod/ExpressionMethod(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ExpressionFormLine/appendPart(org.drools.workbench.models.datamodel.rule.ExpressionPart)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/ExpressionFormLine/getClassType()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/FactPattern/FactPattern(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/MethodInfo/getName()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/FromAccumulateCompositeFactPattern/setResultCode(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/MethodInfo/getGenericType()|",
      "|java+method:///org/drools/workbench/models/datamodel/oracle/ModelField/getName()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelPersistenceHelper/findFields(org.drools.workbench.models.datamodel.rule.RuleModel,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle,java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/drools/compiler/lang/descr/PatternDescr/getObjectType()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/drools/compiler/lang/descr/AccumulateDescr/getFunctions()|",
      "|java+method:///org/drools/compiler/lang/descr/PatternDescr/getConstraint()|"
    ],
    "affectedLib": "org.drools:drools-compiler:7.0.0.Beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.drools:drools-workbench-models-commons:6.2.0.Beta1",
    "coordinatesV2": "org.drools:drools-workbench-models-commons:7.0.0.Beta1",
    "caller": "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/parseDrl(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo)|",
    "called": "|java+constructor:///org/drools/compiler/compiler/DrlParser/DrlParser()|",
    "v1Body": [
      "|java+method:///org/drools/compiler/lang/descr/PackageDescr/getRules()|",
      "|java+method:///org/drools/compiler/compiler/DrlParser/parse(boolean,java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$ExpandedDRLInfo/registerGlobalDescrs(java.util.List)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/drools/compiler/lang/descr/PackageDescr/getGlobals()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$ExpandedDRLInfo/access$500(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo)|",
      "|java+constructor:///org/drools/compiler/compiler/DrlParser/DrlParser()|"
    ],
    "v2Body": [
      "|java+method:///org/drools/compiler/lang/descr/PackageDescr/getRules()|",
      "|java+method:///org/drools/compiler/compiler/DrlParser/parse(boolean,java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$ExpandedDRLInfo/registerGlobalDescrs(java.util.List)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/drools/compiler/lang/descr/PackageDescr/getGlobals()|",
      "|java+constructor:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$RuleModelUnmarshallingException/RuleModelDRLPersistenceImpl$RuleModelUnmarshallingException()|",
      "|java+constructor:///org/drools/compiler/compiler/DrlParser/DrlParser()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$ExpandedDRLInfo/access$600(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo)|",
      "|java+method:///org/drools/compiler/compiler/DrlParser/hasErrors()|"
    ],
    "affectedLib": "org.drools:drools-compiler:7.0.0.Beta1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.drools:drools-workbench-models-commons:6.2.0.Beta1",
    "coordinatesV2": "org.drools:drools-workbench-models-commons:7.0.0.Beta1",
    "caller": "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/getRuleModel(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle)|",
    "called": "|java+method:///org/drools/compiler/lang/descr/AnnotationDescr/getValuesAsString()|",
    "v1Body": [
      "|java+method:///org/drools/compiler/lang/descr/RuleDescr/getConsequence()|",
      "|java+method:///org/drools/compiler/lang/descr/RuleDescr/getName()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/RuleModel/setPackageName(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/drools/compiler/lang/descr/RuleDescr/getParentName()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/parseAttributes(org.drools.workbench.models.datamodel.rule.RuleModel,java.util.Map)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/parseRhs(org.drools.workbench.models.datamodel.rule.RuleModel,java.lang.String,boolean,java.util.Map,org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$ExpandedDRLInfo/access$500(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$ExpandedDRLInfo/access$600(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/parseDrl(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo)|",
      "|java+method:///org/drools/compiler/lang/descr/RuleDescr/getAnnotations()|",
      "|java+method:///org/drools/workbench/models/datamodel/imports/Imports/getImports()|",
      "|java+method:///org/drools/compiler/lang/descr/AnnotationDescr/getValuesAsString()|",
      "|java+method:///org/drools/workbench/models/commons/backend/packages/PackageNameParser/parsePackageName(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/parseLhs(org.drools.workbench.models.datamodel.rule.RuleModel,org.drools.compiler.lang.descr.AndDescr,boolean,org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle)|",
      "|java+method:///org/drools/compiler/lang/descr/RuleDescr/getAttributes()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/RuleModel/RuleModel()|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/drools/compiler/lang/descr/AnnotationDescr/getName()|",
      "|java+method:///org/drools/workbench/models/datamodel/imports/Imports/addImport(org.drools.workbench.models.datamodel.imports.Import)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/RuleModel/addMetadata(org.drools.workbench.models.datamodel.rule.RuleMetadata)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/RuleModel/getImports()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/RuleMetadata/RuleMetadata(java.lang.String,java.lang.String)|",
      "|java+method:///org/drools/compiler/lang/descr/RuleDescr/getLhs()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/drools/workbench/models/commons/backend/imports/ImportsParser/parseImports(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/drools/compiler/lang/descr/RuleDescr/getConsequence()|",
      "|java+method:///org/drools/compiler/lang/descr/RuleDescr/getName()|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/RuleModel/setPackageName(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/drools/compiler/lang/descr/RuleDescr/getParentName()|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/parseAttributes(org.drools.workbench.models.datamodel.rule.RuleModel,java.util.Map)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/parseRhs(org.drools.workbench.models.datamodel.rule.RuleModel,java.lang.String,boolean,java.util.Map,org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$ExpandedDRLInfo/access$600(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl$ExpandedDRLInfo/access$700(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/parseDrl(org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo)|",
      "|java+method:///org/drools/compiler/lang/descr/RuleDescr/getAnnotations()|",
      "|java+method:///org/drools/workbench/models/datamodel/imports/Imports/getImports()|",
      "|java+method:///org/drools/compiler/lang/descr/AnnotationDescr/getValuesAsString()|",
      "|java+method:///org/drools/workbench/models/commons/backend/packages/PackageNameParser/parsePackageName(java.lang.String)|",
      "|java+method:///org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl/parseLhs(org.drools.workbench.models.datamodel.rule.RuleModel,org.drools.compiler.lang.descr.AndDescr,boolean,org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl$ExpandedDRLInfo,org.drools.workbench.models.datamodel.oracle.PackageDataModelOracle)|",
      "|java+method:///org/drools/compiler/lang/descr/RuleDescr/getAttributes()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/RuleModel/RuleModel()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/drools/compiler/lang/descr/AnnotationDescr/getName()|",
      "|java+method:///org/drools/workbench/models/datamodel/imports/Imports/addImport(org.drools.workbench.models.datamodel.imports.Import)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/RuleModel/addMetadata(org.drools.workbench.models.datamodel.rule.RuleMetadata)|",
      "|java+method:///org/drools/workbench/models/datamodel/rule/RuleModel/getImports()|",
      "|java+constructor:///org/drools/workbench/models/datamodel/rule/RuleMetadata/RuleMetadata(java.lang.String,java.lang.String)|",
      "|java+method:///org/drools/compiler/lang/descr/RuleDescr/getLhs()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/drools/workbench/models/commons/backend/imports/ImportsParser/parseImports(java.lang.String)|"
    ],
    "affectedLib": "org.drools:drools-compiler:7.0.0.Beta1",
    "change": "UPDATED"
  }
]