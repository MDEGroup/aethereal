[
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:1.0.0",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "caller": "|java+constructor:///kafka/utils/Json$/Json$()|",
    "called": "|java+method:///scala/util/parsing/json/JSON$/globalNumberParser_$eq(scala.Function1)|",
    "v1Body": [
      "|java+method:///scala/util/parsing/json/JSON$/globalNumberParser_$eq(scala.Function1)|",
      "|java+method:///kafka/utils/Json$/myConversionFunc()|",
      "|java+constructor:///kafka/utils/Json$$anonfun$1/Json$$anonfun$1()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///kafka/utils/Logging$class/$init$(kafka.utils.Logging)|"
    ],
    "v2Body": [
      "|java+constructor:///com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "org.scala-lang.modules:scala-parser-combinators_2.11:1.0.4",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/utils/Json$/parseFull(java.lang.String)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readTree(java.lang.String)|",
    "v1Body": [
      "|java+method:///kafka/utils/Json$/liftedTree1$1(java.lang.String)|",
      "|java+method:///kafka/utils/Json$/lock()|"
    ],
    "v2Body": [
      "|java+method:///scala/Option$/apply(java.lang.Object)|",
      "|java+method:///scala/Option/map(scala.Function1)|",
      "|java+method:///kafka/utils/Json$/mapper()|",
      "|java+constructor:///kafka/utils/Json$$anonfun$parseFull$1/Json$$anonfun$parseFull$1()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readTree(java.lang.String)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.9.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+constructor:///kafka/utils/Json$/Json$()|",
    "called": "|java+constructor:///com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()|",
    "v1Body": [
      "|java+method:///scala/util/parsing/json/JSON$/globalNumberParser_$eq(scala.Function1)|",
      "|java+method:///kafka/utils/Json$/myConversionFunc()|",
      "|java+constructor:///kafka/utils/Json$$anonfun$1/Json$$anonfun$1()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///kafka/utils/Logging$class/$init$(kafka.utils.Logging)|"
    ],
    "v2Body": [
      "|java+constructor:///com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.9.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+constructor:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/ReassignPartitionsCommand$ReassignPartitionsCommandOptions(java.lang.String%5B%5D)|",
    "called": "|java+constructor:///joptsimple/OptionParser/OptionParser(boolean)|",
    "v1Body": [
      "|java+method:///joptsimple/OptionParser/parse(java.lang.String%5B%5D)|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/describedAs(java.lang.String)|",
      "|java+constructor:///joptsimple/OptionParser/OptionParser(boolean)|",
      "|java+method:///joptsimple/OptionSpecBuilder/withRequiredArg()|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/defaultsTo(java.lang.Object,java.lang.Object%5B%5D)|",
      "|java+method:///joptsimple/OptionParser/accepts(java.lang.String,java.lang.String)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/ofType(java.lang.Class)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/parser()|"
    ],
    "v2Body": [
      "|java+method:///joptsimple/OptionParser/parse(java.lang.String%5B%5D)|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/describedAs(java.lang.String)|",
      "|java+method:///scala/runtime/ScalaRunTime$/toObjectArray(java.lang.Object)|",
      "|java+method:///joptsimple/OptionSpecBuilder/withRequiredArg()|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/defaultsTo(java.lang.Object,java.lang.Object%5B%5D)|",
      "|java+method:///joptsimple/OptionParser/accepts(java.lang.String,java.lang.String)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+constructor:///joptsimple/OptionParser/OptionParser(boolean)|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/ofType(java.lang.Class)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/parser()|"
    ],
    "affectedLib": "net.sf.jopt-simple:jopt-simple:5.0.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/admin/ReassignPartitionsCommand$/generateAssignment(kafka.utils.ZkUtils,kafka.admin.ReassignPartitionsCommand$ReassignPartitionsCommandOptions)|",
    "called": "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
    "v1Body": [
      "|java+method:///kafka/admin/ReassignPartitionsCommand$/generateAssignment(kafka.utils.ZkUtils,scala.collection.Seq,java.lang.String,boolean)|",
      "|java+method:///scala/Predef$/println(java.lang.Object)|",
      "|java+method:///scala/Array$/canBuildFrom(scala.reflect.ClassTag)|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///scala/collection/mutable/ArrayOps/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+constructor:///kafka/admin/ReassignPartitionsCommand$$anonfun$2/ReassignPartitionsCommand$$anonfun$2()|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/collection/Iterable/nonEmpty()|",
      "|java+method:///scala/Predef$/wrapIntArray(int%5B%5D)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/brokerListOpt()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/options()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+method:///scala/collection/Iterable/mkString(java.lang.String)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///scala/collection/immutable/StringOps/split(char)|",
      "|java+constructor:///kafka/common/AdminCommandFailedException/AdminCommandFailedException(java.lang.String)|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///scala/reflect/ClassTag$/Int()|",
      "|java+method:///org/apache/kafka/common/utils/Utils/readFileAsString(java.lang.String)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/topicsToMoveJsonFileOpt()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/utils/CoreUtils$/duplicates(scala.collection.Traversable)|",
      "|java+method:///kafka/utils/ZkUtils$/formatAsReassignmentJson(scala.collection.Map)|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/disableRackAware()|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///kafka/admin/ReassignPartitionsCommand$/generateAssignment(kafka.utils.ZkUtils,scala.collection.Seq,java.lang.String,boolean)|",
      "|java+method:///scala/Predef$/println(java.lang.Object)|",
      "|java+method:///scala/Array$/canBuildFrom(scala.reflect.ClassTag)|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///scala/collection/mutable/ArrayOps/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+constructor:///kafka/admin/ReassignPartitionsCommand$$anonfun$2/ReassignPartitionsCommand$$anonfun$2()|",
      "|java+method:///scala/collection/Iterable/nonEmpty()|",
      "|java+method:///scala/Predef$/wrapIntArray(int%5B%5D)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/brokerListOpt()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/options()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+method:///scala/collection/Iterable/mkString(java.lang.String)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///scala/collection/immutable/StringOps/split(char)|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|",
      "|java+constructor:///kafka/common/AdminCommandFailedException/AdminCommandFailedException(java.lang.String)|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///scala/reflect/ClassTag$/Int()|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/collection/Map$/empty()|",
      "|java+method:///org/apache/kafka/common/utils/Utils/readFileAsString(java.lang.String)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$/formatAsReassignmentJson(scala.collection.Map,scala.collection.Map)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/topicsToMoveJsonFileOpt()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/utils/CoreUtils$/duplicates(scala.collection.Traversable)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/disableRackAware()|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "net.sf.jopt-simple:jopt-simple:5.0.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/admin/TopicCommand$/parseTopicConfigsToBeAdded(kafka.admin.TopicCommand$TopicCommandOptions)|",
    "called": "|java+method:///joptsimple/OptionSet/valuesOf(joptsimple.OptionSpec)|",
    "v1Body": [
      "|java+method:///scala/collection/mutable/Buffer$/canBuildFrom()|",
      "|java+method:///scala/Predef$/println(java.lang.Object)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///scala/collection/mutable/Buffer/forall(scala.Function1)|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/options()|",
      "|java+method:///scala/Predef$/require(boolean,scala.Function0)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///scala/collection/TraversableLike/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///joptsimple/OptionSet/valuesOf(joptsimple.OptionSpec)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///kafka/admin/TopicCommand$$anonfun$5/TopicCommand$$anonfun$5()|",
      "|java+method:///kafka/log/LogConfig$/validate(java.util.Properties)|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/configOpt()|",
      "|java+constructor:///kafka/admin/TopicCommand$$anonfun$parseTopicConfigsToBeAdded$2/TopicCommand$$anonfun$parseTopicConfigsToBeAdded$2()|",
      "|java+constructor:///kafka/admin/TopicCommand$$anonfun$parseTopicConfigsToBeAdded$1/TopicCommand$$anonfun$parseTopicConfigsToBeAdded$1()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///scala/collection/mutable/Buffer/foreach(scala.Function1)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///scala/collection/JavaConverters$/asScalaBufferConverter(java.util.List)|",
      "|java+constructor:///java/util/Properties/Properties()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/log/LogConfig$/MessageFormatVersionProp()|",
      "|java+constructor:///kafka/admin/TopicCommand$$anonfun$parseTopicConfigsToBeAdded$3/TopicCommand$$anonfun$parseTopicConfigsToBeAdded$3(java.util.Properties)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+method:///scala/collection/mutable/Buffer$/canBuildFrom()|",
      "|java+constructor:///kafka/admin/TopicCommand$$anonfun$8/TopicCommand$$anonfun$8()|",
      "|java+method:///scala/Predef$/println(java.lang.Object)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///scala/collection/mutable/Buffer/forall(scala.Function1)|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/options()|",
      "|java+method:///scala/Predef$/require(boolean,scala.Function0)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///scala/collection/TraversableLike/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///joptsimple/OptionSet/valuesOf(joptsimple.OptionSpec)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///kafka/log/LogConfig$/validate(java.util.Properties)|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/configOpt()|",
      "|java+constructor:///kafka/admin/TopicCommand$$anonfun$parseTopicConfigsToBeAdded$2/TopicCommand$$anonfun$parseTopicConfigsToBeAdded$2()|",
      "|java+constructor:///kafka/admin/TopicCommand$$anonfun$parseTopicConfigsToBeAdded$1/TopicCommand$$anonfun$parseTopicConfigsToBeAdded$1()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///scala/collection/mutable/Buffer/foreach(scala.Function1)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///scala/collection/JavaConverters$/asScalaBufferConverter(java.util.List)|",
      "|java+constructor:///java/util/Properties/Properties()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/log/LogConfig$/MessageFormatVersionProp()|",
      "|java+constructor:///kafka/admin/TopicCommand$$anonfun$parseTopicConfigsToBeAdded$3/TopicCommand$$anonfun$parseTopicConfigsToBeAdded$3(java.util.Properties)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|"
    ],
    "affectedLib": "net.sf.jopt-simple:jopt-simple:5.0.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/tools/ConsoleProducer$/producerProps(kafka.tools.ConsoleProducer$ProducerConfig)|",
    "called": "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
    "v1Body": [
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///kafka/tools/ConsoleProducer$ProducerConfig/extraProducerProps()|",
      "|java+constructor:///java/util/Properties/Properties()|",
      "|java+method:///kafka/tools/ConsoleProducer$ProducerConfig/options()|",
      "|java+method:///kafka/tools/ConsoleProducer$ProducerConfig/producerConfigOpt()|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+method:///org/apache/kafka/common/utils/Utils/loadProps(java.lang.String)|",
      "|java+method:///java/util/Properties/putAll(java.util.Map)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/kafka/common/utils/Utils/loadProps(java.lang.String)|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///kafka/utils/Implicits$PropertiesOps/$plus$plus$eq(java.util.Properties)|",
      "|java+method:///kafka/tools/ConsoleProducer$ProducerConfig/extraProducerProps()|",
      "|java+constructor:///java/util/Properties/Properties()|",
      "|java+method:///kafka/utils/Implicits$/PropertiesOps(java.util.Properties)|",
      "|java+method:///kafka/tools/ConsoleProducer$ProducerConfig/options()|",
      "|java+method:///kafka/tools/ConsoleProducer$ProducerConfig/producerConfigOpt()|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|"
    ],
    "affectedLib": "net.sf.jopt-simple:jopt-simple:5.0.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/Kafka$/getPropsFromArgs(java.lang.String%5B%5D)|",
    "called": "|java+constructor:///joptsimple/OptionParser/OptionParser(boolean)|",
    "v1Body": [
      "|java+method:///joptsimple/OptionParser/parse(java.lang.String%5B%5D)|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///java/lang/Class/getSimpleName()|",
      "|java+method:///kafka/utils/CommandLineUtils$/parseKeyValueArgs$default$2()|",
      "|java+method:///joptsimple/OptionSet/nonOptionArguments()|",
      "|java+method:///java/util/List/toArray()|",
      "|java+method:///scala/collection/mutable/ArrayOps/mkString(java.lang.String)|",
      "|java+method:///scala/collection/mutable/ArrayOps/slice(int,int)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///joptsimple/OptionParser/OptionParser(boolean)|",
      "|java+method:///kafka/utils/CommandLineUtils$/printUsageAndDie(joptsimple.OptionParser,java.lang.String)|",
      "|java+method:///scala/collection/JavaConverters$/asScalaBufferConverter(java.util.List)|",
      "|java+method:///joptsimple/OptionSpecBuilder/withRequiredArg()|",
      "|java+method:///kafka/utils/CommandLineUtils$/parseKeyValueArgs(scala.collection.Iterable,boolean)|",
      "|java+method:///joptsimple/OptionSet/valuesOf(joptsimple.OptionSpec)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///org/apache/kafka/common/utils/Utils/loadProps(java.lang.String)|",
      "|java+method:///java/util/Properties/putAll(java.util.Map)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///joptsimple/OptionParser/accepts(java.lang.String,java.lang.String)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/ofType(java.lang.Class)|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/kafka/common/utils/Utils/loadProps(java.lang.String)|",
      "|java+method:///joptsimple/OptionParser/parse(java.lang.String%5B%5D)|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///java/lang/Class/getSimpleName()|",
      "|java+method:///kafka/utils/CommandLineUtils$/parseKeyValueArgs$default$2()|",
      "|java+method:///joptsimple/OptionSet/nonOptionArguments()|",
      "|java+method:///java/util/List/toArray()|",
      "|java+method:///scala/collection/mutable/ArrayOps/mkString(java.lang.String)|",
      "|java+method:///scala/collection/mutable/ArrayOps/slice(int,int)|",
      "|java+method:///kafka/utils/Implicits$PropertiesOps/$plus$plus$eq(java.util.Properties)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///joptsimple/OptionParser/OptionParser(boolean)|",
      "|java+method:///kafka/utils/CommandLineUtils$/printUsageAndDie(joptsimple.OptionParser,java.lang.String)|",
      "|java+method:///scala/collection/JavaConverters$/asScalaBufferConverter(java.util.List)|",
      "|java+method:///joptsimple/OptionSpecBuilder/withRequiredArg()|",
      "|java+method:///kafka/utils/Implicits$/PropertiesOps(java.util.Properties)|",
      "|java+method:///kafka/utils/CommandLineUtils$/parseKeyValueArgs(scala.collection.Iterable,boolean)|",
      "|java+method:///joptsimple/OptionSet/valuesOf(joptsimple.OptionSpec)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///joptsimple/OptionParser/accepts(java.lang.String,java.lang.String)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/ofType(java.lang.Class)|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|"
    ],
    "affectedLib": "net.sf.jopt-simple:jopt-simple:5.0.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/admin/TopicCommand$/describeTopic(kafka.utils.ZkUtils,kafka.admin.TopicCommand$TopicCommandOptions)|",
    "called": "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
    "v1Body": [
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+constructor:///kafka/admin/TopicCommand$$anonfun$describeTopic$1/TopicCommand$$anonfun$describeTopic$1(kafka.utils.ZkUtils,boolean,boolean,boolean,scala.collection.immutable.Set)|",
      "|java+method:///scala/collection/Seq/foreach(scala.Function1)|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/options()|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/reportUnderReplicatedPartitionsOpt()|",
      "|java+method:///kafka/admin/TopicCommand$/getTopics(kafka.utils.ZkUtils,kafka.admin.TopicCommand$TopicCommandOptions)|",
      "|java+constructor:///kafka/admin/TopicCommand$$anonfun$2/TopicCommand$$anonfun$2()|",
      "|java+method:///scala/collection/TraversableOnce/toSet()|",
      "|java+method:///scala/collection/Seq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/topicsWithOverridesOpt()|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/reportUnavailablePartitionsOpt()|",
      "|java+method:///kafka/utils/ZkUtils/getAllBrokersInCluster()|"
    ],
    "v2Body": [
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+constructor:///kafka/admin/TopicCommand$$anonfun$describeTopic$1/TopicCommand$$anonfun$describeTopic$1(kafka.utils.ZkUtils,boolean,boolean,boolean,scala.collection.immutable.Set)|",
      "|java+method:///scala/collection/Seq/foreach(scala.Function1)|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/options()|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/reportUnderReplicatedPartitionsOpt()|",
      "|java+method:///kafka/admin/TopicCommand$/getTopics(kafka.utils.ZkUtils,kafka.admin.TopicCommand$TopicCommandOptions)|",
      "|java+method:///scala/collection/TraversableOnce/toSet()|",
      "|java+constructor:///kafka/admin/TopicCommand$$anonfun$5/TopicCommand$$anonfun$5()|",
      "|java+method:///scala/collection/Seq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/topicsWithOverridesOpt()|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/reportUnavailablePartitionsOpt()|",
      "|java+method:///kafka/utils/ZkUtils/getAllBrokersInCluster()|"
    ],
    "affectedLib": "net.sf.jopt-simple:jopt-simple:5.0.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/tools/SimpleConsumerShell$/main(java.lang.String%5B%5D)|",
    "called": "|java+constructor:///joptsimple/OptionParser/OptionParser(boolean)|",
    "v1Body": [
      "|java+method:///kafka/cluster/BrokerEndPoint/host()|",
      "|java+method:///kafka/utils/Exit$/exit(int,scala.Option)|",
      "|java+method:///kafka/api/FetchRequestBuilder/replicaId(int)|",
      "|java+method:///scala/collection/Seq/head()|",
      "|java+method:///joptsimple/OptionSet/valuesOf(joptsimple.OptionSpec)|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///kafka/cluster/BrokerEndPoint/port()|",
      "|java+method:///joptsimple/OptionParser/parse(java.lang.String%5B%5D)|",
      "|java+method:///kafka/api/TopicMetadata/partitionsMetadata()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///kafka/consumer/SimpleConsumer/earliestOrLatestOffset(kafka.common.TopicAndPartition,long,int)|",
      "|java+constructor:///kafka/api/FetchRequestBuilder/FetchRequestBuilder()|",
      "|java+method:///kafka/api/FetchRequestBuilder/clientId(java.lang.String)|",
      "|java+method:///java/io/PrintStream/flush()|",
      "|java+method:///kafka/client/ClientUtils$/fetchTopicMetadata$default$5()|",
      "|java+method:///org/apache/kafka/common/utils/Utils/stackTrace(java.lang.Throwable)|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///kafka/common/MessageFormatter/close()|",
      "|java+method:///kafka/consumer/ConsumerConfig$/SocketBufferSize()|",
      "|java+method:///kafka/utils/CommandLineUtils$/parseKeyValueArgs$default$2()|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///kafka/api/OffsetRequest$/EarliestTime()|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///kafka/client/ClientUtils$/fetchTopicMetadata(scala.collection.Set,scala.collection.Seq,java.lang.String,int,int)|",
      "|java+method:///kafka/utils/CommandLineUtils$/checkRequiredArgs(joptsimple.OptionParser,joptsimple.OptionSet,scala.collection.Seq)|",
      "|java+method:///scala/collection/Seq/find(scala.Function1)|",
      "|java+method:///scala/Predef$/Set()|",
      "|java+method:///kafka/common/MessageFormatter/init(java.util.Properties)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///kafka/api/FetchRequestBuilder/maxWait(int)|",
      "|java+method:///kafka/api/PartitionMetadata/replicas()|",
      "|java+method:///kafka/consumer/ConsumerConfig$/MinFetchBytes()|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/describedAs(java.lang.String)|",
      "|java+constructor:///kafka/tools/SimpleConsumerShell$$anonfun$main$4/SimpleConsumerShell$$anonfun$main$4(java.lang.String,int,int,scala.runtime.LongRef,scala.runtime.ObjectRef,java.lang.String)|",
      "|java+method:///java/lang/Thread/start()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///kafka/tools/SimpleConsumerShell$$anon$1/SimpleConsumerShell$$anon$1(java.lang.String,int,int,scala.runtime.LongRef,int,int,boolean,boolean,boolean,kafka.api.FetchRequestBuilder,kafka.common.MessageFormatter,kafka.consumer.SimpleConsumer)|",
      "|java+method:///kafka/client/ClientUtils$/parseBrokerList(java.lang.String)|",
      "|java+method:///scala/Option/isEmpty()|",
      "|java+constructor:///kafka/tools/SimpleConsumerShell$$anonfun$main$3/SimpleConsumerShell$$anonfun$main$3(int)|",
      "|java+method:///org/apache/kafka/common/utils/Utils/newThread(java.lang.String,java.lang.Runnable,boolean)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+constructor:///kafka/tools/SimpleConsumerShell$$anonfun$1/SimpleConsumerShell$$anonfun$1(int)|",
      "|java+method:///kafka/utils/ToolsUtils$/validatePortOrDie(joptsimple.OptionParser,java.lang.String)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+constructor:///joptsimple/OptionParser/OptionParser(boolean)|",
      "|java+constructor:///kafka/consumer/SimpleConsumer/SimpleConsumer(java.lang.String,int,int,int,java.lang.String)|",
      "|java+method:///kafka/utils/CommandLineUtils$/printUsageAndDie(joptsimple.OptionParser,java.lang.String)|",
      "|java+method:///java/lang/String/toString()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///scala/collection/JavaConverters$/asScalaBufferConverter(java.util.List)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///scala/runtime/LongRef/create(long)|",
      "|java+method:///joptsimple/OptionSpecBuilder/withRequiredArg()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///kafka/utils/Exit$/exit$default$2()|",
      "|java+constructor:///kafka/common/TopicAndPartition/TopicAndPartition(java.lang.String,int)|",
      "|java+constructor:///kafka/tools/SimpleConsumerShell$$anonfun$main$1/SimpleConsumerShell$$anonfun$main$1()|",
      "|java+method:///kafka/consumer/ConsumerConfig$/SocketTimeout()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/collection/Seq/size()|",
      "|java+method:///kafka/tools/SimpleConsumerShell$/info(scala.Function0)|",
      "|java+method:///scala/Predef$/int2Integer(int)|",
      "|java+method:///kafka/utils/CommandLineUtils$/parseKeyValueArgs(scala.collection.Iterable,boolean)|",
      "|java+method:///java/lang/Thread/join()|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+method:///kafka/api/PartitionMetadata/leader()|",
      "|java+constructor:///kafka/tools/SimpleConsumerShell$$anonfun$main$2/SimpleConsumerShell$$anonfun$main$2()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/defaultsTo(java.lang.Object,java.lang.Object%5B%5D)|",
      "|java+method:///joptsimple/OptionParser/accepts(java.lang.String,java.lang.String)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///kafka/tools/SimpleConsumerShell$/UseLeaderReplica()|",
      "|java+method:///joptsimple/OptionParser/accepts(java.lang.String)|",
      "|java+method:///scala/collection/immutable/Set$/apply(scala.collection.Seq)|",
      "|java+method:///kafka/api/TopicMetadataResponse/topicsMetadata()|",
      "|java+method:///kafka/api/TopicMetadata/topic()|",
      "|java+method:///scala/Predef$/long2Long(long)|",
      "|java+method:///kafka/consumer/SimpleConsumer/close()|",
      "|java+method:///kafka/api/Request$/DebuggingConsumerId()|",
      "|java+method:///kafka/api/FetchRequestBuilder/minBytes(int)|",
      "|java+method:///scala/runtime/ObjectRef/create(java.lang.Object)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///kafka/tools/SimpleConsumerShell$/warn(scala.Function0)|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/ofType(java.lang.Class)|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+method:///scala/Option/get()|"
    ],
    "v2Body": [
      "|java+method:///kafka/cluster/BrokerEndPoint/host()|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///kafka/utils/Exit$/exit(int,scala.Option)|",
      "|java+method:///kafka/api/FetchRequestBuilder/replicaId(int)|",
      "|java+method:///scala/collection/Seq/head()|",
      "|java+method:///joptsimple/OptionSet/valuesOf(joptsimple.OptionSpec)|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///kafka/cluster/BrokerEndPoint/port()|",
      "|java+method:///joptsimple/OptionParser/parse(java.lang.String%5B%5D)|",
      "|java+method:///kafka/api/TopicMetadata/partitionsMetadata()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///kafka/consumer/SimpleConsumer/earliestOrLatestOffset(kafka.common.TopicAndPartition,long,int)|",
      "|java+constructor:///kafka/api/FetchRequestBuilder/FetchRequestBuilder()|",
      "|java+method:///kafka/api/FetchRequestBuilder/clientId(java.lang.String)|",
      "|java+method:///java/io/PrintStream/flush()|",
      "|java+method:///kafka/client/ClientUtils$/fetchTopicMetadata$default$5()|",
      "|java+method:///org/apache/kafka/common/utils/Utils/stackTrace(java.lang.Throwable)|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///kafka/common/MessageFormatter/close()|",
      "|java+method:///kafka/consumer/ConsumerConfig$/SocketBufferSize()|",
      "|java+method:///org/apache/kafka/common/utils/KafkaThread/nonDaemon(java.lang.String,java.lang.Runnable)|",
      "|java+method:///kafka/utils/CommandLineUtils$/parseKeyValueArgs$default$2()|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///kafka/api/OffsetRequest$/EarliestTime()|",
      "|java+method:///org/apache/kafka/common/utils/KafkaThread/join()|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///kafka/client/ClientUtils$/fetchTopicMetadata(scala.collection.Set,scala.collection.Seq,java.lang.String,int,int)|",
      "|java+method:///kafka/utils/CommandLineUtils$/checkRequiredArgs(joptsimple.OptionParser,joptsimple.OptionSet,scala.collection.Seq)|",
      "|java+method:///scala/collection/Seq/find(scala.Function1)|",
      "|java+method:///scala/Predef$/Set()|",
      "|java+method:///kafka/common/MessageFormatter/init(java.util.Properties)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///kafka/api/FetchRequestBuilder/maxWait(int)|",
      "|java+method:///kafka/api/PartitionMetadata/replicas()|",
      "|java+method:///kafka/consumer/ConsumerConfig$/MinFetchBytes()|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/describedAs(java.lang.String)|",
      "|java+constructor:///kafka/tools/SimpleConsumerShell$$anonfun$main$4/SimpleConsumerShell$$anonfun$main$4(java.lang.String,int,int,scala.runtime.LongRef,scala.runtime.ObjectRef,java.lang.String)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///kafka/tools/SimpleConsumerShell$$anon$1/SimpleConsumerShell$$anon$1(java.lang.String,int,int,scala.runtime.LongRef,int,int,boolean,boolean,boolean,kafka.api.FetchRequestBuilder,kafka.common.MessageFormatter,kafka.consumer.SimpleConsumer)|",
      "|java+method:///kafka/client/ClientUtils$/parseBrokerList(java.lang.String)|",
      "|java+method:///scala/Option/isEmpty()|",
      "|java+constructor:///kafka/tools/SimpleConsumerShell$$anonfun$main$3/SimpleConsumerShell$$anonfun$main$3(int)|",
      "|java+constructor:///kafka/tools/SimpleConsumerShell$$anonfun$1/SimpleConsumerShell$$anonfun$1(int)|",
      "|java+method:///kafka/utils/ToolsUtils$/validatePortOrDie(joptsimple.OptionParser,java.lang.String)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+constructor:///joptsimple/OptionParser/OptionParser(boolean)|",
      "|java+constructor:///kafka/consumer/SimpleConsumer/SimpleConsumer(java.lang.String,int,int,int,java.lang.String)|",
      "|java+method:///kafka/utils/CommandLineUtils$/printUsageAndDie(joptsimple.OptionParser,java.lang.String)|",
      "|java+method:///java/lang/String/toString()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///scala/collection/JavaConverters$/asScalaBufferConverter(java.util.List)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///scala/runtime/LongRef/create(long)|",
      "|java+method:///joptsimple/OptionSpecBuilder/withRequiredArg()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///kafka/utils/Exit$/exit$default$2()|",
      "|java+constructor:///kafka/common/TopicAndPartition/TopicAndPartition(java.lang.String,int)|",
      "|java+constructor:///kafka/tools/SimpleConsumerShell$$anonfun$main$1/SimpleConsumerShell$$anonfun$main$1()|",
      "|java+method:///kafka/consumer/ConsumerConfig$/SocketTimeout()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/collection/Seq/size()|",
      "|java+method:///kafka/tools/SimpleConsumerShell$/info(scala.Function0)|",
      "|java+method:///scala/Predef$/int2Integer(int)|",
      "|java+method:///kafka/utils/CommandLineUtils$/parseKeyValueArgs(scala.collection.Iterable,boolean)|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+method:///kafka/api/PartitionMetadata/leader()|",
      "|java+constructor:///kafka/tools/SimpleConsumerShell$$anonfun$main$2/SimpleConsumerShell$$anonfun$main$2()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/defaultsTo(java.lang.Object,java.lang.Object%5B%5D)|",
      "|java+method:///joptsimple/OptionParser/accepts(java.lang.String,java.lang.String)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///kafka/tools/SimpleConsumerShell$/UseLeaderReplica()|",
      "|java+method:///joptsimple/OptionParser/accepts(java.lang.String)|",
      "|java+method:///scala/collection/immutable/Set$/apply(scala.collection.Seq)|",
      "|java+method:///kafka/api/TopicMetadataResponse/topicsMetadata()|",
      "|java+method:///kafka/api/TopicMetadata/topic()|",
      "|java+method:///org/apache/kafka/common/utils/KafkaThread/start()|",
      "|java+method:///scala/Predef$/long2Long(long)|",
      "|java+method:///kafka/consumer/SimpleConsumer/close()|",
      "|java+method:///kafka/api/Request$/DebuggingConsumerId()|",
      "|java+method:///kafka/api/FetchRequestBuilder/minBytes(int)|",
      "|java+method:///scala/runtime/ObjectRef/create(java.lang.Object)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///kafka/tools/SimpleConsumerShell$/warn(scala.Function0)|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/ofType(java.lang.Class)|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+method:///scala/Option/get()|"
    ],
    "affectedLib": "net.sf.jopt-simple:jopt-simple:5.0.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/admin/TopicCommand$/parseTopicConfigsToBeDeleted(kafka.admin.TopicCommand$TopicCommandOptions)|",
    "called": "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
    "v1Body": [
      "|java+method:///scala/collection/mutable/Buffer$/canBuildFrom()|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///scala/collection/Seq$/empty()|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/options()|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/deleteConfigOpt()|",
      "|java+constructor:///kafka/admin/TopicCommand$$anonfun$parseTopicConfigsToBeDeleted$1/TopicCommand$$anonfun$parseTopicConfigsToBeDeleted$1(java.util.Properties)|",
      "|java+method:///scala/collection/TraversableLike/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///joptsimple/OptionSet/valuesOf(joptsimple.OptionSpec)|",
      "|java+method:///kafka/log/LogConfig$/validateNames(java.util.Properties)|",
      "|java+constructor:///kafka/admin/TopicCommand$$anonfun$6/TopicCommand$$anonfun$6()|",
      "|java+method:///scala/collection/mutable/Buffer/foreach(scala.Function1)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///scala/collection/JavaConverters$/asScalaBufferConverter(java.util.List)|",
      "|java+constructor:///java/util/Properties/Properties()|"
    ],
    "v2Body": [
      "|java+method:///scala/collection/mutable/Buffer$/canBuildFrom()|",
      "|java+constructor:///kafka/admin/TopicCommand$$anonfun$9/TopicCommand$$anonfun$9()|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///scala/collection/Seq$/empty()|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/options()|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/deleteConfigOpt()|",
      "|java+constructor:///kafka/admin/TopicCommand$$anonfun$parseTopicConfigsToBeDeleted$1/TopicCommand$$anonfun$parseTopicConfigsToBeDeleted$1(java.util.Properties)|",
      "|java+method:///scala/collection/TraversableLike/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///joptsimple/OptionSet/valuesOf(joptsimple.OptionSpec)|",
      "|java+method:///kafka/log/LogConfig$/validateNames(java.util.Properties)|",
      "|java+method:///scala/collection/mutable/Buffer/foreach(scala.Function1)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///scala/collection/JavaConverters$/asScalaBufferConverter(java.util.List)|",
      "|java+constructor:///java/util/Properties/Properties()|"
    ],
    "affectedLib": "net.sf.jopt-simple:jopt-simple:5.0.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/admin/ConsumerGroupCommand$KafkaConsumerGroupService/createNewConsumer()|",
    "called": "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
    "v1Body": [
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+constructor:///org/apache/kafka/clients/consumer/KafkaConsumer/KafkaConsumer(java.util.Properties)|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/bootstrapServerOpt()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/options()|",
      "|java+method:///java/util/Properties/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/groupOpt()|",
      "|java+method:///org/apache/kafka/common/utils/Utils/loadProps(java.lang.String)|",
      "|java+method:///java/util/Properties/putAll(java.util.Map)|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/commandConfigOpt()|",
      "|java+constructor:///org/apache/kafka/common/serialization/StringDeserializer/StringDeserializer()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$KafkaConsumerGroupService/opts()|",
      "|java+constructor:///java/util/Properties/Properties()|",
      "|java+method:///java/lang/Class/getName()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/kafka/common/utils/Utils/loadProps(java.lang.String)|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+constructor:///org/apache/kafka/clients/consumer/KafkaConsumer/KafkaConsumer(java.util.Properties)|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/bootstrapServerOpt()|",
      "|java+method:///java/util/Properties/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///kafka/utils/Implicits$/PropertiesOps(java.util.Properties)|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/groupOpt()|",
      "|java+method:///kafka/utils/Implicits$PropertiesOps/$plus$plus$eq(java.util.Properties)|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/options()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/commandConfigOpt()|",
      "|java+constructor:///org/apache/kafka/common/serialization/StringDeserializer/StringDeserializer()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$KafkaConsumerGroupService/opts()|",
      "|java+constructor:///java/util/Properties/Properties()|",
      "|java+method:///java/lang/Class/getName()|"
    ],
    "affectedLib": "net.sf.jopt-simple:jopt-simple:5.0.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/tools/GetOffsetShell$/main(java.lang.String%5B%5D)|",
    "called": "|java+constructor:///joptsimple/OptionParser/OptionParser(boolean)|",
    "v1Body": [
      "|java+method:///kafka/client/ClientUtils$/fetchTopicMetadata$default$5()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/describedAs(java.lang.String)|",
      "|java+method:///kafka/utils/CommandLineUtils$/printUsageAndDie(joptsimple.OptionParser,java.lang.String)|",
      "|java+method:///scala/collection/Seq/head()|",
      "|java+method:///scala/Predef$/int2Integer(int)|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///joptsimple/OptionParser/parse(java.lang.String%5B%5D)|",
      "|java+method:///kafka/api/TopicMetadata/partitionsMetadata()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///scala/reflect/ClassTag$/Int()|",
      "|java+method:///scala/Array$/canBuildFrom(scala.reflect.ClassTag)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///kafka/client/ClientUtils$/fetchTopicMetadata(scala.collection.Set,scala.collection.Seq,java.lang.String,int,int)|",
      "|java+method:///kafka/utils/CommandLineUtils$/checkRequiredArgs(joptsimple.OptionParser,joptsimple.OptionSet,scala.collection.Seq)|",
      "|java+method:///scala/Predef$/intArrayOps(int%5B%5D)|",
      "|java+method:///scala/collection/mutable/ArrayOps/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/Predef$/Set()|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+constructor:///kafka/tools/GetOffsetShell$$anonfun$1/GetOffsetShell$$anonfun$1()|",
      "|java+method:///scala/collection/Seq/foreach(scala.Function1)|",
      "|java+constructor:///kafka/tools/GetOffsetShell$$anonfun$2/GetOffsetShell$$anonfun$2()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///kafka/client/ClientUtils$/parseBrokerList(java.lang.String)|",
      "|java+method:///kafka/utils/Exit$/exit(int,scala.Option)|",
      "|java+constructor:///kafka/tools/GetOffsetShell$$anonfun$main$1/GetOffsetShell$$anonfun$main$1(java.lang.String,java.lang.String,scala.runtime.LongRef,int,scala.collection.Seq)|",
      "|java+method:///kafka/utils/ToolsUtils$/validatePortOrDie(joptsimple.OptionParser,java.lang.String)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+constructor:///joptsimple/OptionParser/OptionParser(boolean)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///scala/runtime/LongRef/create(long)|",
      "|java+method:///joptsimple/OptionSpecBuilder/withRequiredArg()|",
      "|java+method:///kafka/utils/Exit$/exit$default$2()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/collection/Seq/size()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/defaultsTo(java.lang.Object,java.lang.Object%5B%5D)|",
      "|java+method:///joptsimple/OptionParser/accepts(java.lang.String,java.lang.String)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///scala/collection/mutable/ArrayOps/toSeq()|",
      "|java+method:///scala/collection/immutable/Set$/apply(scala.collection.Seq)|",
      "|java+method:///kafka/api/TopicMetadataResponse/topicsMetadata()|",
      "|java+method:///kafka/api/TopicMetadata/topic()|",
      "|java+method:///scala/collection/Seq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/Predef$/long2Long(long)|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/ofType(java.lang.Class)|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|"
    ],
    "v2Body": [
      "|java+method:///kafka/client/ClientUtils$/fetchTopicMetadata$default$5()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/describedAs(java.lang.String)|",
      "|java+method:///kafka/utils/Exit$/exit(int,scala.Option)|",
      "|java+method:///kafka/utils/CommandLineUtils$/printUsageAndDie(joptsimple.OptionParser,java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///scala/collection/Seq/head()|",
      "|java+method:///scala/Predef$/int2Integer(int)|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///joptsimple/OptionParser/parse(java.lang.String%5B%5D)|",
      "|java+method:///kafka/api/TopicMetadata/partitionsMetadata()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///scala/reflect/ClassTag$/Int()|",
      "|java+method:///scala/Array$/canBuildFrom(scala.reflect.ClassTag)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///kafka/client/ClientUtils$/fetchTopicMetadata(scala.collection.Set,scala.collection.Seq,java.lang.String,int,int)|",
      "|java+method:///kafka/utils/CommandLineUtils$/checkRequiredArgs(joptsimple.OptionParser,joptsimple.OptionSet,scala.collection.Seq)|",
      "|java+method:///scala/Predef$/intArrayOps(int%5B%5D)|",
      "|java+method:///scala/collection/mutable/ArrayOps/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/Predef$/Set()|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+constructor:///kafka/tools/GetOffsetShell$$anonfun$1/GetOffsetShell$$anonfun$1()|",
      "|java+method:///scala/collection/Seq/foreach(scala.Function1)|",
      "|java+constructor:///kafka/tools/GetOffsetShell$$anonfun$2/GetOffsetShell$$anonfun$2()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///kafka/client/ClientUtils$/parseBrokerList(java.lang.String)|",
      "|java+method:///kafka/utils/ToolsUtils$/validatePortOrDie(joptsimple.OptionParser,java.lang.String)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+constructor:///joptsimple/OptionParser/OptionParser(boolean)|",
      "|java+method:///joptsimple/OptionSpecBuilder/withRequiredArg()|",
      "|java+method:///kafka/utils/Exit$/exit$default$2()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/collection/Seq/size()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/defaultsTo(java.lang.Object,java.lang.Object%5B%5D)|",
      "|java+method:///joptsimple/OptionParser/accepts(java.lang.String,java.lang.String)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///scala/collection/mutable/ArrayOps/toSeq()|",
      "|java+constructor:///kafka/tools/GetOffsetShell$$anonfun$main$1/GetOffsetShell$$anonfun$main$1(java.lang.String,java.lang.String,long,int,scala.collection.Seq)|",
      "|java+method:///scala/collection/immutable/Set$/apply(scala.collection.Seq)|",
      "|java+method:///kafka/api/TopicMetadataResponse/topicsMetadata()|",
      "|java+method:///kafka/api/TopicMetadata/topic()|",
      "|java+method:///scala/collection/Seq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/Predef$/long2Long(long)|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/ofType(java.lang.Class)|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|"
    ],
    "affectedLib": "net.sf.jopt-simple:jopt-simple:5.0.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/checkArgs()|",
    "called": "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
    "v1Body": [
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/resetByDurationOpt()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/zkConnectOpt()|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/parser()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///kafka/utils/CommandLineUtils$/printUsageAndDie(joptsimple.OptionParser,java.lang.String)|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/resetToCurrentOpt()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/timeoutMsOpt()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/resetShiftByOpt()|",
      "|java+constructor:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions$$anonfun$checkArgs$1/ConsumerGroupCommand$ConsumerGroupCommandOptions$$anonfun$checkArgs$1(kafka.admin.ConsumerGroupCommand$ConsumerGroupCommandOptions)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/describeOptPresent()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/groupOpt()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$/debug(scala.Function0)|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/newConsumerOpt()|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/resetFromFileOpt()|",
      "|java+method:///kafka/utils/CommandLineUtils$/checkRequiredArgs(joptsimple.OptionParser,joptsimple.OptionSet,scala.collection.Seq)|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/resetToLatestOpt()|",
      "|java+method:///scala/collection/Set/$minus(java.lang.Object)|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/bootstrapServerOpt()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/allConsumerGroupLevelOpts()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/options()|",
      "|java+method:///kafka/utils/CommandLineUtils$/checkInvalidArgs(joptsimple.OptionParser,joptsimple.OptionSet,joptsimple.OptionSpec,scala.collection.Set)|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/topicOpt()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/resetOffsetsOpt()|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/resetToDatetimeOpt()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/describeOpt()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/deleteOpt()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/allResetOffsetScenarioOpts()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/resetToEarliestOpt()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/resetToOffsetOpt()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/useOldConsumer()|"
    ],
    "v2Body": [
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/resetByDurationOpt()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/zkConnectOpt()|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/parser()|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///kafka/utils/CommandLineUtils$/printUsageAndDie(joptsimple.OptionParser,java.lang.String)|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/resetToCurrentOpt()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/timeoutMsOpt()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/resetShiftByOpt()|",
      "|java+constructor:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions$$anonfun$checkArgs$1/ConsumerGroupCommand$ConsumerGroupCommandOptions$$anonfun$checkArgs$1(kafka.admin.ConsumerGroupCommand$ConsumerGroupCommandOptions)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/describeOptPresent()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/groupOpt()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$/debug(scala.Function0)|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/newConsumerOpt()|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/resetFromFileOpt()|",
      "|java+method:///scala/Console$/err()|",
      "|java+method:///kafka/utils/CommandLineUtils$/checkRequiredArgs(joptsimple.OptionParser,joptsimple.OptionSet,scala.collection.Seq)|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/resetToLatestOpt()|",
      "|java+method:///scala/collection/Set/$minus(java.lang.Object)|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/bootstrapServerOpt()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/allConsumerGroupLevelOpts()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/options()|",
      "|java+method:///kafka/utils/CommandLineUtils$/checkInvalidArgs(joptsimple.OptionParser,joptsimple.OptionSet,joptsimple.OptionSpec,scala.collection.Set)|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/topicOpt()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/resetOffsetsOpt()|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/resetToDatetimeOpt()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/describeOpt()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/deleteOpt()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/allResetOffsetScenarioOpts()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/resetToEarliestOpt()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/resetToOffsetOpt()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/useOldConsumer()|"
    ],
    "affectedLib": "net.sf.jopt-simple:jopt-simple:5.0.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/tools/StreamsResetter/run(java.lang.String%5B%5D,java.util.Properties)|",
    "called": "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
    "v1Body": [
      "|java+method:///java/util/Properties/putAll(java.util.Map)|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///kafka/admin/AdminClient/describeConsumerGroup(java.lang.String,long)|",
      "|java+method:///java/util/Properties/clear()|",
      "|java+method:///kafka/utils/ZkUtils/apply(java.lang.String,int,int,boolean)|",
      "|java+method:///java/lang/Throwable/getMessage()|",
      "|java+method:///kafka/tools/StreamsResetter/maybeResetInputAndSeekToEndIntermediateTopicOffsets()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+method:///kafka/tools/StreamsResetter/parseArguments(java.lang.String%5B%5D)|",
      "|java+method:///kafka/utils/ZkUtils/close()|",
      "|java+method:///kafka/tools/StreamsResetter/maybeDeleteInternalTopics(kafka.utils.ZkUtils)|",
      "|java+method:///kafka/admin/AdminClient/createSimplePlaintext(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///scala/collection/immutable/List/isEmpty()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///org/apache/kafka/common/security/JaasUtils/isZkSecurityEnabled()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///java/util/List/clear()|",
      "|java+method:///kafka/admin/AdminClient/close()|",
      "|java+method:///kafka/admin/AdminClient$ConsumerGroupSummary/consumers()|",
      "|java+method:///scala/collection/JavaConversions/seqAsJavaList(scala.collection.Seq)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///kafka/utils/ZkUtils/getAllTopics()|",
      "|java+method:///scala/Option/get()|"
    ],
    "v2Body": [
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///kafka/tools/StreamsResetter/maybeDeleteInternalTopics(org.apache.kafka.clients.admin.KafkaAdminClient)|",
      "|java+method:///org/apache/kafka/clients/admin/KafkaAdminClient/close(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///java/util/Properties/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/kafka/clients/admin/KafkaAdminClient/listTopics()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/clear()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/kafka/clients/admin/AdminClient/create(java.util.Properties)|",
      "|java+method:///org/apache/kafka/common/utils/Utils/loadProps(java.lang.String)|",
      "|java+method:///java/util/Properties/putAll(java.util.Map)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/util/HashMap/HashMap(java.util.Map)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///org/apache/kafka/common/KafkaFuture/get(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+constructor:///java/util/Properties/Properties()|",
      "|java+method:///java/lang/Throwable/printStackTrace(java.io.PrintStream)|",
      "|java+method:///kafka/tools/StreamsResetter/maybeResetInputAndSeekToEndIntermediateTopicOffsets(java.util.Map)|",
      "|java+method:///kafka/tools/StreamsResetter/validateNoActiveConsumers(java.lang.String,java.util.Properties)|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/kafka/clients/admin/ListTopicsResult/names()|",
      "|java+method:///java/util/HashMap/putAll(java.util.Map)|",
      "|java+method:///kafka/tools/StreamsResetter/parseArguments(java.lang.String%5B%5D)|"
    ],
    "affectedLib": "net.sf.jopt-simple:jopt-simple:5.0.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+constructor:///kafka/tools/ConsoleConsumer$ConsumerConfig/ConsoleConsumer$ConsumerConfig(java.lang.String%5B%5D)|",
    "called": "|java+constructor:///joptsimple/OptionParser/OptionParser(boolean)|",
    "v1Body": [
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/maxMessagesOpt()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/valueDeserializerOpt()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/csvMetricsReporterEnabledOpt()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/isolationLevelOpt()|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///org/apache/kafka/common/utils/Utils/loadProps(java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/metricsDirectoryOpt()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/enableSystestEventsLoggingOpt()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/keyDeserializerOpt()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/bootstrapServerOpt()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/formatter()|",
      "|java+method:///kafka/utils/CommandLineUtils$/parseKeyValueArgs$default$2()|",
      "|java+method:///java/util/Properties/setProperty(java.lang.String,java.lang.String)|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///kafka/api/OffsetRequest$/EarliestTime()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/topicArg()|",
      "|java+method:///scala/Console$/err()|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///kafka/utils/CommandLineUtils$/checkRequiredArgs(joptsimple.OptionParser,joptsimple.OptionSet,scala.collection.Seq)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/messageFormatterOpt()|",
      "|java+method:///scala/collection/immutable/List/filter(scala.Function1)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/topicIdOpt()|",
      "|java+method:///kafka/common/MessageFormatter/init(java.util.Properties)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///scala/Option/isDefined()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/liftedTree1$1(java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/keyDeserializer()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/skipMessageOnErrorOpt()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/fromBeginning()|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/describedAs(java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/whitelistOpt()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///kafka/consumer/Whitelist/Whitelist(java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/tryParse(joptsimple.OptionParser,java.lang.String%5B%5D)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/timeoutMsOpt()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/partitionArg()|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/messageFormatterClass()|",
      "|java+method:///java/lang/String/toLowerCase(java.util.Locale)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/filterSpec_$eq(kafka.consumer.TopicFilter)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/groupIdPassed_$eq(boolean)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/partitionIdOpt()|",
      "|java+method:///java/util/Random/nextInt(int)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///java/util/Properties/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///kafka/metrics/KafkaMetricsReporter$/startReporters(kafka.utils.VerifiableProperties)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+constructor:///joptsimple/OptionParser/OptionParser(boolean)|",
      "|java+method:///kafka/utils/CommandLineUtils$/printUsageAndDie(joptsimple.OptionParser,java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/consumerProps()|",
      "|java+method:///java/lang/String/toString()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/topicArg_$eq(java.lang.String)|",
      "|java+method:///scala/collection/JavaConverters$/asScalaBufferConverter(java.util.List)|",
      "|java+constructor:///java/util/Properties/Properties()|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/consumerConfigOpt()|",
      "|java+constructor:///java/util/Random/Random()|",
      "|java+method:///joptsimple/OptionSpecBuilder/withRequiredArg()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///scala/collection/immutable/List$/apply(scala.collection.Seq)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/blacklistOpt()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/options()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/useOldConsumer()|",
      "|java+method:///scala/collection/immutable/List/head()|",
      "|java+method:///kafka/utils/CommandLineUtils$/parseKeyValueArgs(scala.collection.Iterable,boolean)|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|",
      "|java+constructor:///kafka/consumer/Blacklist/Blacklist(java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/offsetOpt()|",
      "|java+method:///scala/collection/immutable/List/size()|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+constructor:///kafka/tools/ConsoleConsumer$ConsumerConfig$$anonfun$5/ConsoleConsumer$ConsumerConfig$$anonfun$5(kafka.tools.ConsoleConsumer$ConsumerConfig)|",
      "|java+constructor:///kafka/utils/VerifiableProperties/VerifiableProperties(java.util.Properties)|",
      "|java+method:///joptsimple/OptionSet/valuesOf(joptsimple.OptionSpec)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/defaultsTo(java.lang.Object,java.lang.Object%5B%5D)|",
      "|java+method:///kafka/api/OffsetRequest$/LatestTime()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/zkConnectOpt()|",
      "|java+constructor:///kafka/tools/ConsoleConsumer$ConsumerConfig$$anonfun$6/ConsoleConsumer$ConsumerConfig$$anonfun$6(kafka.tools.ConsoleConsumer$ConsumerConfig)|",
      "|java+method:///joptsimple/OptionParser/accepts(java.lang.String,java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/whitelistArg_$eq(java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/valueDeserializer()|",
      "|java+method:///joptsimple/OptionParser/accepts(java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/invalidOffset(java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/resetBeginningOpt()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/newConsumerOpt()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/formatterArgs()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/parser()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/messageFormatterArgOpt()|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/ofType(java.lang.Class)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/consumerPropertyOpt()|"
    ],
    "v2Body": [
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/maxMessagesOpt()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/csvMetricsReporterEnabledOpt()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/isolationLevelOpt()|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///org/apache/kafka/common/utils/Utils/loadProps(java.lang.String)|",
      "|java+method:///scala/Some/x()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/metricsDirectoryOpt()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/enableSystestEventsLoggingOpt()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/keyDeserializerOpt()|",
      "|java+method:///java/util/Properties/get(java.lang.Object)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/bootstrapServerOpt()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/formatter()|",
      "|java+method:///kafka/utils/CommandLineUtils$/parseKeyValueArgs$default$2()|",
      "|java+method:///java/util/Properties/setProperty(java.lang.String,java.lang.String)|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///kafka/api/OffsetRequest$/EarliestTime()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/topicArg()|",
      "|java+method:///scala/Console$/err()|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///kafka/utils/CommandLineUtils$/checkRequiredArgs(joptsimple.OptionParser,joptsimple.OptionSet,scala.collection.Seq)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/messageFormatterOpt()|",
      "|java+method:///scala/collection/immutable/List/filter(scala.Function1)|",
      "|java+method:///scala/collection/immutable/Set/mkString(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/topicIdOpt()|",
      "|java+method:///scala/Predef$/Set()|",
      "|java+method:///kafka/common/MessageFormatter/init(java.util.Properties)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///scala/Option/isDefined()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/liftedTree1$1(java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/keyDeserializer()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/skipMessageOnErrorOpt()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/extraConsumerProps()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/fromBeginning()|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/describedAs(java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/whitelistOpt()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///kafka/consumer/Whitelist/Whitelist(java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/tryParse(joptsimple.OptionParser,java.lang.String%5B%5D)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/timeoutMsOpt()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/partitionArg()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/messageFormatterClass()|",
      "|java+method:///java/lang/String/toLowerCase(java.util.Locale)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/filterSpec_$eq(kafka.consumer.TopicFilter)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/groupIdPassed_$eq(boolean)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/partitionIdOpt()|",
      "|java+method:///java/util/Random/nextInt(int)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///java/util/Properties/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///kafka/metrics/KafkaMetricsReporter$/startReporters(kafka.utils.VerifiableProperties)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/valueDeserializerOpt()|",
      "|java+method:///scala/Option$/apply(java.lang.Object)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+constructor:///joptsimple/OptionParser/OptionParser(boolean)|",
      "|java+method:///kafka/utils/CommandLineUtils$/printUsageAndDie(joptsimple.OptionParser,java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/consumerProps()|",
      "|java+method:///java/lang/String/toString()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/topicArg_$eq(java.lang.String)|",
      "|java+method:///scala/collection/JavaConverters$/asScalaBufferConverter(java.util.List)|",
      "|java+constructor:///java/util/Properties/Properties()|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/consumerConfigOpt()|",
      "|java+constructor:///java/util/Random/Random()|",
      "|java+method:///joptsimple/OptionSpecBuilder/withRequiredArg()|",
      "|java+method:///scala/collection/immutable/List$/apply(scala.collection.Seq)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///scala/collection/immutable/Set/headOption()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/blacklistOpt()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/options()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/useOldConsumer()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///scala/collection/immutable/List/head()|",
      "|java+method:///kafka/utils/CommandLineUtils$/parseKeyValueArgs(scala.collection.Iterable,boolean)|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|",
      "|java+constructor:///kafka/consumer/Blacklist/Blacklist(java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/offsetOpt()|",
      "|java+method:///scala/collection/immutable/List/size()|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+constructor:///kafka/tools/ConsoleConsumer$ConsumerConfig$$anonfun$5/ConsoleConsumer$ConsumerConfig$$anonfun$5(kafka.tools.ConsoleConsumer$ConsumerConfig)|",
      "|java+constructor:///kafka/utils/VerifiableProperties/VerifiableProperties(java.util.Properties)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/groupIdOpt()|",
      "|java+method:///joptsimple/OptionSet/valuesOf(joptsimple.OptionSpec)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/defaultsTo(java.lang.Object,java.lang.Object%5B%5D)|",
      "|java+method:///kafka/api/OffsetRequest$/LatestTime()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/zkConnectOpt()|",
      "|java+constructor:///kafka/tools/ConsoleConsumer$ConsumerConfig$$anonfun$6/ConsoleConsumer$ConsumerConfig$$anonfun$6(kafka.tools.ConsoleConsumer$ConsumerConfig)|",
      "|java+method:///joptsimple/OptionParser/accepts(java.lang.String,java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/whitelistArg_$eq(java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/valueDeserializer()|",
      "|java+method:///joptsimple/OptionParser/accepts(java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/groupIdsProvided()|",
      "|java+constructor:///kafka/tools/ConsoleConsumer$ConsumerConfig$$anonfun$7/ConsoleConsumer$ConsumerConfig$$anonfun$7(kafka.tools.ConsoleConsumer$ConsumerConfig)|",
      "|java+method:///scala/collection/immutable/Set$/apply(scala.collection.Seq)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/invalidOffset(java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/resetBeginningOpt()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/newConsumerOpt()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/formatterArgs()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/parser()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/messageFormatterArgOpt()|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/ofType(java.lang.Class)|",
      "|java+method:///scala/collection/immutable/Set/size()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/consumerPropertyOpt()|",
      "|java+method:///scala/collection/GenTraversable/flatten(scala.Function1)|"
    ],
    "affectedLib": "net.sf.jopt-simple:jopt-simple:5.0.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/admin/TopicCommand$$anonfun$alterTopic$1/apply(java.lang.String)|",
    "called": "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
    "v1Body": [
      "|java+method:///java/util/Properties/putAll(java.util.Map)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///scala/Predef$/println(java.lang.Object)|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///kafka/admin/AdminUtils$/fetchEntityConfig(kafka.utils.ZkUtils,java.lang.String,java.lang.String)|",
      "|java+method:///scala/collection/Seq/foreach(scala.Function1)|",
      "|java+method:///kafka/admin/AdminUtils$/addPartitions(kafka.utils.ZkUtils,java.lang.String,int,java.lang.String,boolean,kafka.admin.RackAwareMode)|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/options()|",
      "|java+method:///kafka/admin/TopicCommand$/parseTopicConfigsToBeDeleted(kafka.admin.TopicCommand$TopicCommandOptions)|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/deleteConfigOpt()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/partitionsOpt()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///kafka/admin/AdminUtils$/addPartitions$default$5()|",
      "|java+constructor:///kafka/admin/TopicCommand$$anonfun$alterTopic$1$$anonfun$apply$1/TopicCommand$$anonfun$alterTopic$1$$anonfun$apply$1(kafka.admin.TopicCommand$$anonfun$alterTopic$1,java.util.Properties)|",
      "|java+method:///kafka/admin/TopicCommand$/parseTopicConfigsToBeAdded(kafka.admin.TopicCommand$TopicCommandOptions)|",
      "|java+method:///kafka/admin/AdminUtils$/changeTopicConfig(kafka.utils.ZkUtils,java.lang.String,java.util.Properties)|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/replicaAssignmentOpt()|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/configOpt()|",
      "|java+method:///kafka/admin/AdminUtils$/addPartitions$default$6()|",
      "|java+method:///kafka/server/ConfigType$/Topic()|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|"
    ],
    "v2Body": [
      "|java+method:///kafka/admin/AdminUtils$/addPartitions$default$7()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///scala/Predef$/println(java.lang.Object)|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///kafka/admin/AdminUtils$/fetchEntityConfig(kafka.utils.ZkUtils,java.lang.String,java.lang.String)|",
      "|java+method:///scala/collection/mutable/Map/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/collection/Seq/foreach(scala.Function1)|",
      "|java+method:///kafka/admin/AdminUtils$/getBrokerMetadatas$default$3()|",
      "|java+method:///scala/collection/immutable/List$/apply(scala.collection.Seq)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+constructor:///org/apache/kafka/common/errors/InvalidTopicException/InvalidTopicException(java.lang.String)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+constructor:///kafka/admin/TopicCommand$$anonfun$alterTopic$1$$anonfun$4/TopicCommand$$anonfun$alterTopic$1$$anonfun$4(kafka.admin.TopicCommand$$anonfun$alterTopic$1,scala.collection.mutable.Map)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///kafka/utils/Implicits$PropertiesOps/$plus$plus$eq(java.util.Properties)|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/options()|",
      "|java+method:///kafka/admin/AdminUtils$/addPartitions(kafka.utils.ZkUtils,java.lang.String,scala.collection.Map,scala.collection.Seq,int,scala.Option,boolean)|",
      "|java+method:///kafka/utils/ZkUtils/getReplicaAssignmentForTopics(scala.collection.Seq)|",
      "|java+constructor:///kafka/admin/TopicCommand$$anonfun$alterTopic$1$$anonfun$2/TopicCommand$$anonfun$alterTopic$1$$anonfun$2(kafka.admin.TopicCommand$$anonfun$alterTopic$1)|",
      "|java+method:///scala/Option$/apply(java.lang.Object)|",
      "|java+method:///kafka/admin/AdminUtils$/getBrokerMetadatas(kafka.utils.ZkUtils,kafka.admin.RackAwareMode,scala.Option)|",
      "|java+method:///kafka/admin/TopicCommand$/parseTopicConfigsToBeDeleted(kafka.admin.TopicCommand$TopicCommandOptions)|",
      "|java+constructor:///kafka/admin/TopicCommand$$anonfun$alterTopic$1$$anonfun$3/TopicCommand$$anonfun$alterTopic$1$$anonfun$3(kafka.admin.TopicCommand$$anonfun$alterTopic$1)|",
      "|java+method:///scala/Option/filter(scala.Function1)|",
      "|java+method:///scala/Option/map(scala.Function1)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///kafka/admin/AdminUtils$/getBrokerMetadatas$default$2()|",
      "|java+method:///kafka/utils/Implicits$/PropertiesOps(java.util.Properties)|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/deleteConfigOpt()|",
      "|java+constructor:///kafka/admin/TopicCommand$$anonfun$alterTopic$1$$anonfun$apply$1/TopicCommand$$anonfun$alterTopic$1$$anonfun$apply$1(kafka.admin.TopicCommand$$anonfun$alterTopic$1,java.util.Properties)|",
      "|java+method:///kafka/admin/TopicCommand$/parseTopicConfigsToBeAdded(kafka.admin.TopicCommand$TopicCommandOptions)|",
      "|java+method:///kafka/admin/AdminUtils$/changeTopicConfig(kafka.utils.ZkUtils,java.lang.String,java.util.Properties)|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/replicaAssignmentOpt()|",
      "|java+method:///scala/collection/mutable/Map$/canBuildFrom()|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/partitionsOpt()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///scala/collection/mutable/Map/isEmpty()|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/configOpt()|",
      "|java+method:///kafka/server/ConfigType$/Topic()|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|"
    ],
    "affectedLib": "net.sf.jopt-simple:jopt-simple:5.0.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/admin/ReassignPartitionsCommand$/validateAndParseArgs(java.lang.String%5B%5D)|",
    "called": "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
    "v1Body": [
      "|java+constructor:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/ReassignPartitionsCommand$ReassignPartitionsCommandOptions(java.lang.String%5B%5D)|",
      "|java+method:///kafka/utils/CommandLineUtils$/checkRequiredArgs(joptsimple.OptionParser,joptsimple.OptionSet,scala.collection.Seq)|",
      "|java+constructor:///kafka/admin/ReassignPartitionsCommand$$anonfun$14/ReassignPartitionsCommand$$anonfun$14(kafka.admin.ReassignPartitionsCommand$ReassignPartitionsCommandOptions)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///kafka/utils/CommandLineUtils$/checkInvalidArgs(joptsimple.OptionParser,joptsimple.OptionSet,joptsimple.OptionSpec,scala.collection.Set)|",
      "|java+method:///scala/collection/Set$/apply(scala.collection.Seq)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/verifyOpt()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/brokerListOpt()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/zkConnectOpt()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/executeOpt()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/reassignmentJsonFileOpt()|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///kafka/utils/CommandLineUtils$/printUsageAndDie(joptsimple.OptionParser,java.lang.String)|",
      "|java+method:///scala/collection/Seq$/apply(scala.collection.Seq)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/options()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/generateOpt()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/topicsToMoveJsonFileOpt()|",
      "|java+method:///scala/collection/TraversableOnce/count(scala.Function1)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/disableRackAware()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/throttleOpt()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/parser()|"
    ],
    "v2Body": [
      "|java+constructor:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/ReassignPartitionsCommand$ReassignPartitionsCommandOptions(java.lang.String%5B%5D)|",
      "|java+method:///kafka/utils/CommandLineUtils$/checkRequiredArgs(joptsimple.OptionParser,joptsimple.OptionSet,scala.collection.Seq)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/collection/Set$/apply(scala.collection.Seq)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/verifyOpt()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/brokerListOpt()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/zkConnectOpt()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/executeOpt()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/reassignmentJsonFileOpt()|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+constructor:///kafka/admin/ReassignPartitionsCommand$$anonfun$15/ReassignPartitionsCommand$$anonfun$15(kafka.admin.ReassignPartitionsCommand$ReassignPartitionsCommandOptions)|",
      "|java+method:///kafka/utils/CommandLineUtils$/checkInvalidArgs(joptsimple.OptionParser,joptsimple.OptionSet,joptsimple.OptionSpec,scala.collection.Set)|",
      "|java+method:///kafka/utils/CommandLineUtils$/printUsageAndDie(joptsimple.OptionParser,java.lang.String)|",
      "|java+method:///scala/collection/Seq$/apply(scala.collection.Seq)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/options()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/generateOpt()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/topicsToMoveJsonFileOpt()|",
      "|java+method:///scala/collection/TraversableOnce/count(scala.Function1)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/disableRackAware()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/throttleOpt()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/parser()|"
    ],
    "affectedLib": "net.sf.jopt-simple:jopt-simple:5.0.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/tools/ConsoleConsumer$/run(kafka.tools.ConsoleConsumer$ConsumerConfig)|",
    "called": "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
    "v1Body": [
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/skipMessageOnError()|",
      "|java+method:///kafka/common/MessageFormatter/close()|",
      "|java+method:///kafka/tools/ConsoleConsumer$/getNewConsumerProps(kafka.tools.ConsoleConsumer$ConsumerConfig)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/topicArg()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/maxMessages()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/partitionArg()|",
      "|java+method:///kafka/utils/ZkUtils$/maybeDeletePath(java.lang.String,java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/consumerProps()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/filterSpec()|",
      "|java+method:///scala/Predef$/int2Integer(int)|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+method:///java/util/Properties/get(java.lang.Object)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/groupIdPassed()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/formatter()|",
      "|java+method:///kafka/consumer/BaseConsumer/cleanup()|",
      "|java+method:///scala/Option/isDefined()|",
      "|java+method:///kafka/tools/ConsoleConsumer$/reportRecordCount()|",
      "|java+method:///java/util/concurrent/CountDownLatch/countDown()|",
      "|java+method:///kafka/tools/ConsoleConsumer$/checkZk(kafka.tools.ConsoleConsumer$ConsumerConfig)|",
      "|java+method:///scala/Option$/apply(java.lang.Object)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/whitelistArg()|",
      "|java+constructor:///kafka/consumer/OldConsumer/OldConsumer(kafka.consumer.TopicFilter,java.util.Properties)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///kafka/tools/ConsoleConsumer$/process(java.lang.Integer,kafka.common.MessageFormatter,kafka.consumer.BaseConsumer,java.io.PrintStream,boolean)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/options()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/useOldConsumer()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/zkConnectOpt()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/offsetArg()|",
      "|java+method:///kafka/tools/ConsoleConsumer$/addShutdownHook(kafka.consumer.BaseConsumer,kafka.tools.ConsoleConsumer$ConsumerConfig)|",
      "|java+method:///kafka/tools/ConsoleConsumer$/getOldConsumerProps(kafka.tools.ConsoleConsumer$ConsumerConfig)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/timeoutMs()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+constructor:///kafka/consumer/NewShinyConsumer/NewShinyConsumer(scala.Option,scala.Option,scala.Option,scala.Option,java.util.Properties,long)|",
      "|java+method:///kafka/tools/ConsoleConsumer$/kafka$tools$ConsoleConsumer$$shutdownLatch()|"
    ],
    "v2Body": [
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/skipMessageOnError()|",
      "|java+method:///kafka/common/MessageFormatter/close()|",
      "|java+method:///kafka/tools/ConsoleConsumer$/getNewConsumerProps(kafka.tools.ConsoleConsumer$ConsumerConfig)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/topicArg()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/maxMessages()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/partitionArg()|",
      "|java+method:///kafka/utils/ZkUtils$/maybeDeletePath(java.lang.String,java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/consumerProps()|",
      "|java+method:///scala/Predef$/int2Integer(int)|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+method:///java/util/Properties/get(java.lang.Object)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/groupIdPassed()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/formatter()|",
      "|java+method:///kafka/consumer/BaseConsumer/cleanup()|",
      "|java+method:///scala/Option/isDefined()|",
      "|java+method:///kafka/tools/ConsoleConsumer$/reportRecordCount()|",
      "|java+method:///java/util/concurrent/CountDownLatch/countDown()|",
      "|java+method:///kafka/tools/ConsoleConsumer$/checkZk(kafka.tools.ConsoleConsumer$ConsumerConfig)|",
      "|java+method:///scala/Option$/apply(java.lang.Object)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/whitelistArg()|",
      "|java+constructor:///kafka/consumer/OldConsumer/OldConsumer(kafka.consumer.TopicFilter,java.util.Properties)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///kafka/tools/ConsoleConsumer$/process(java.lang.Integer,kafka.common.MessageFormatter,kafka.consumer.BaseConsumer,java.io.PrintStream,boolean)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/filterSpec()|",
      "|java+method:///kafka/tools/ConsoleConsumer$/checkAndMaybeDeleteOldPath(kafka.tools.ConsoleConsumer$ConsumerConfig,java.util.Properties)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/options()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/useOldConsumer()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/zkConnectOpt()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/offsetArg()|",
      "|java+method:///kafka/tools/ConsoleConsumer$/addShutdownHook(kafka.consumer.BaseConsumer,kafka.tools.ConsoleConsumer$ConsumerConfig)|",
      "|java+method:///kafka/tools/ConsoleConsumer$/getOldConsumerProps(kafka.tools.ConsoleConsumer$ConsumerConfig)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/timeoutMs()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+constructor:///kafka/consumer/NewShinyConsumer/NewShinyConsumer(scala.Option,scala.Option,scala.Option,scala.Option,java.util.Properties,long)|",
      "|java+method:///kafka/tools/ConsoleConsumer$/kafka$tools$ConsoleConsumer$$shutdownLatch()|"
    ],
    "affectedLib": "net.sf.jopt-simple:jopt-simple:5.0.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+constructor:///kafka/admin/TopicCommand$TopicCommandOptions/TopicCommand$TopicCommandOptions(java.lang.String%5B%5D)|",
    "called": "|java+constructor:///joptsimple/OptionParser/OptionParser(boolean)|",
    "v1Body": [
      "|java+method:///joptsimple/OptionParser/parse(java.lang.String%5B%5D)|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/nl()|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/parser()|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/describedAs(java.lang.String)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/collection/Set$/apply(scala.collection.Seq)|",
      "|java+method:///scala/collection/TraversableOnce/mkString(java.lang.String)|",
      "|java+constructor:///joptsimple/OptionParser/OptionParser(boolean)|",
      "|java+method:///joptsimple/OptionSpecBuilder/withRequiredArg()|",
      "|java+method:///java/lang/System/getProperty(java.lang.String)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///joptsimple/OptionParser/accepts(java.lang.String,java.lang.String)|",
      "|java+method:///scala/collection/Seq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/ofType(java.lang.Class)|",
      "|java+method:///kafka/log/LogConfig$/configNames()|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/listOpt()|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+constructor:///kafka/admin/TopicCommand$TopicCommandOptions$$anonfun$8/TopicCommand$TopicCommandOptions$$anonfun$8(kafka.admin.TopicCommand$TopicCommandOptions)|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/alterOpt()|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/createOpt()|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/describeOpt()|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/deleteOpt()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+method:///joptsimple/OptionParser/parse(java.lang.String%5B%5D)|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/nl()|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/parser()|",
      "|java+constructor:///kafka/admin/TopicCommand$TopicCommandOptions$$anonfun$11/TopicCommand$TopicCommandOptions$$anonfun$11(kafka.admin.TopicCommand$TopicCommandOptions)|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/describedAs(java.lang.String)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/collection/Set$/apply(scala.collection.Seq)|",
      "|java+method:///scala/collection/TraversableOnce/mkString(java.lang.String)|",
      "|java+constructor:///joptsimple/OptionParser/OptionParser(boolean)|",
      "|java+method:///joptsimple/OptionSpecBuilder/withRequiredArg()|",
      "|java+method:///java/lang/System/getProperty(java.lang.String)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///joptsimple/OptionParser/accepts(java.lang.String,java.lang.String)|",
      "|java+method:///scala/collection/Seq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/ofType(java.lang.Class)|",
      "|java+method:///kafka/log/LogConfig$/configNames()|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/listOpt()|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/alterOpt()|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/createOpt()|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/describeOpt()|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/deleteOpt()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|"
    ],
    "affectedLib": "net.sf.jopt-simple:jopt-simple:5.0.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+constructor:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/ConsumerPerformance$ConsumerPerfConfig(java.lang.String%5B%5D)|",
    "called": "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
    "v1Body": [
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/parser()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/topicOpt()|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/describedAs(java.lang.String)|",
      "|java+method:///scala/Predef$/int2Integer(int)|",
      "|java+constructor:///java/text/SimpleDateFormat/SimpleDateFormat(java.lang.String)|",
      "|java+method:///joptsimple/OptionParser/accepts(java.lang.String,java.lang.String)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/fetchSizeOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/groupIdOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/zkConnectOpt()|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/ofType(java.lang.Class)|",
      "|java+method:///org/apache/kafka/common/utils/Utils/loadProps(java.lang.String)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/newConsumerOpt()|",
      "|java+method:///joptsimple/OptionParser/parse(java.lang.String%5B%5D)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/dateFormatOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/props()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/numThreadsOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/reportingIntervalOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/showDetailedStatsOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/bootstrapServersOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/numMessagesOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/numFetchersOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/resetBeginningOffsetOpt()|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/reportingInterval()|",
      "|java+method:///kafka/utils/CommandLineUtils$/checkRequiredArgs(joptsimple.OptionParser,joptsimple.OptionSet,scala.collection.Seq)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Integer/toString()|",
      "|java+method:///java/util/Random/nextInt(int)|",
      "|java+method:///java/util/Properties/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/consumerConfigOpt()|",
      "|java+constructor:///kafka/tools/PerfConfig/PerfConfig(java.lang.String%5B%5D)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/printMetricsOpt()|",
      "|java+method:///kafka/utils/CommandLineUtils$/printUsageAndDie(joptsimple.OptionParser,java.lang.String)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/options()|",
      "|java+constructor:///java/util/Properties/Properties()|",
      "|java+constructor:///java/util/Random/Random()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/socketBufferSizeOpt()|",
      "|java+method:///joptsimple/OptionSpecBuilder/withRequiredArg()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/hideHeaderOpt()|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/defaultsTo(java.lang.Object,java.lang.Object%5B%5D)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/useOldConsumer()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/parser()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/topicOpt()|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/describedAs(java.lang.String)|",
      "|java+method:///scala/Predef$/int2Integer(int)|",
      "|java+constructor:///java/text/SimpleDateFormat/SimpleDateFormat(java.lang.String)|",
      "|java+method:///joptsimple/OptionParser/accepts(java.lang.String,java.lang.String)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/fetchSizeOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/groupIdOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/zkConnectOpt()|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/ofType(java.lang.Class)|",
      "|java+method:///org/apache/kafka/common/utils/Utils/loadProps(java.lang.String)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/newConsumerOpt()|",
      "|java+method:///joptsimple/OptionParser/parse(java.lang.String%5B%5D)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/dateFormatOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/props()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/numThreadsOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/reportingIntervalOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/showDetailedStatsOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/bootstrapServersOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/numMessagesOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/numFetchersOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/resetBeginningOffsetOpt()|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/reportingInterval()|",
      "|java+method:///scala/Console$/err()|",
      "|java+method:///kafka/utils/CommandLineUtils$/checkRequiredArgs(joptsimple.OptionParser,joptsimple.OptionSet,scala.collection.Seq)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Integer/toString()|",
      "|java+method:///java/util/Random/nextInt(int)|",
      "|java+method:///java/util/Properties/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/consumerConfigOpt()|",
      "|java+constructor:///kafka/tools/PerfConfig/PerfConfig(java.lang.String%5B%5D)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/printMetricsOpt()|",
      "|java+method:///kafka/utils/CommandLineUtils$/printUsageAndDie(joptsimple.OptionParser,java.lang.String)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/options()|",
      "|java+constructor:///java/util/Properties/Properties()|",
      "|java+constructor:///java/util/Random/Random()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/socketBufferSizeOpt()|",
      "|java+method:///joptsimple/OptionSpecBuilder/withRequiredArg()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/hideHeaderOpt()|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/defaultsTo(java.lang.Object,java.lang.Object%5B%5D)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/useOldConsumer()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|"
    ],
    "affectedLib": "net.sf.jopt-simple:jopt-simple:5.0.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/admin/ReassignPartitionsCommand$/main(java.lang.String%5B%5D)|",
    "called": "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
    "v1Body": [
      "|java+method:///kafka/admin/ReassignPartitionsCommand$/executeAssignment(kafka.utils.ZkUtils,kafka.admin.ReassignPartitionsCommand$ReassignPartitionsCommandOptions)|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$/verifyAssignment(kafka.utils.ZkUtils,kafka.admin.ReassignPartitionsCommand$ReassignPartitionsCommandOptions)|",
      "|java+method:///java/lang/Throwable/getMessage()|",
      "|java+method:///org/apache/kafka/common/security/JaasUtils/isZkSecurityEnabled()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/verifyOpt()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/zkConnectOpt()|",
      "|java+method:///kafka/utils/ZkUtils$/apply(java.lang.String,int,int,boolean)|",
      "|java+method:///scala/Predef$/println(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/utils/Utils/stackTrace(java.lang.Throwable)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$/generateAssignment(kafka.utils.ZkUtils,kafka.admin.ReassignPartitionsCommand$ReassignPartitionsCommandOptions)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$/validateAndParseArgs(java.lang.String%5B%5D)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/options()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/generateOpt()|",
      "|java+method:///kafka/utils/ZkUtils/close()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/executeOpt()|"
    ],
    "v2Body": [
      "|java+method:///kafka/admin/ReassignPartitionsCommand$/createAdminClient(kafka.admin.ReassignPartitionsCommand$ReassignPartitionsCommandOptions)|",
      "|java+method:///java/lang/Throwable/getMessage()|",
      "|java+method:///org/apache/kafka/common/security/JaasUtils/isZkSecurityEnabled()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/verifyOpt()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/zkConnectOpt()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$/verifyAssignment(kafka.utils.ZkUtils,scala.Option,kafka.admin.ReassignPartitionsCommand$ReassignPartitionsCommandOptions)|",
      "|java+method:///kafka/utils/ZkUtils$/apply(java.lang.String,int,int,boolean)|",
      "|java+method:///scala/Predef$/println(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/utils/Utils/stackTrace(java.lang.Throwable)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$/executeAssignment(kafka.utils.ZkUtils,scala.Option,kafka.admin.ReassignPartitionsCommand$ReassignPartitionsCommandOptions)|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$/generateAssignment(kafka.utils.ZkUtils,kafka.admin.ReassignPartitionsCommand$ReassignPartitionsCommandOptions)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$/validateAndParseArgs(java.lang.String%5B%5D)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/options()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/generateOpt()|",
      "|java+method:///kafka/utils/ZkUtils/close()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/executeOpt()|"
    ],
    "affectedLib": "net.sf.jopt-simple:jopt-simple:5.0.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/admin/ReassignPartitionsCommand$/generateAssignment(kafka.utils.ZkUtils,kafka.admin.ReassignPartitionsCommand$ReassignPartitionsCommandOptions)|",
    "called": "|java+method:///org/apache/kafka/common/utils/Utils/readFileAsString(java.lang.String)|",
    "v1Body": [
      "|java+method:///kafka/admin/ReassignPartitionsCommand$/generateAssignment(kafka.utils.ZkUtils,scala.collection.Seq,java.lang.String,boolean)|",
      "|java+method:///scala/Predef$/println(java.lang.Object)|",
      "|java+method:///scala/Array$/canBuildFrom(scala.reflect.ClassTag)|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///scala/collection/mutable/ArrayOps/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+constructor:///kafka/admin/ReassignPartitionsCommand$$anonfun$2/ReassignPartitionsCommand$$anonfun$2()|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/collection/Iterable/nonEmpty()|",
      "|java+method:///scala/Predef$/wrapIntArray(int%5B%5D)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/brokerListOpt()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/options()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+method:///scala/collection/Iterable/mkString(java.lang.String)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///scala/collection/immutable/StringOps/split(char)|",
      "|java+constructor:///kafka/common/AdminCommandFailedException/AdminCommandFailedException(java.lang.String)|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///scala/reflect/ClassTag$/Int()|",
      "|java+method:///org/apache/kafka/common/utils/Utils/readFileAsString(java.lang.String)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/topicsToMoveJsonFileOpt()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/utils/CoreUtils$/duplicates(scala.collection.Traversable)|",
      "|java+method:///kafka/utils/ZkUtils$/formatAsReassignmentJson(scala.collection.Map)|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/disableRackAware()|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///kafka/admin/ReassignPartitionsCommand$/generateAssignment(kafka.utils.ZkUtils,scala.collection.Seq,java.lang.String,boolean)|",
      "|java+method:///scala/Predef$/println(java.lang.Object)|",
      "|java+method:///scala/Array$/canBuildFrom(scala.reflect.ClassTag)|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///scala/collection/mutable/ArrayOps/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+constructor:///kafka/admin/ReassignPartitionsCommand$$anonfun$2/ReassignPartitionsCommand$$anonfun$2()|",
      "|java+method:///scala/collection/Iterable/nonEmpty()|",
      "|java+method:///scala/Predef$/wrapIntArray(int%5B%5D)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/brokerListOpt()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/options()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+method:///scala/collection/Iterable/mkString(java.lang.String)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///scala/collection/immutable/StringOps/split(char)|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|",
      "|java+constructor:///kafka/common/AdminCommandFailedException/AdminCommandFailedException(java.lang.String)|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///scala/reflect/ClassTag$/Int()|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/collection/Map$/empty()|",
      "|java+method:///org/apache/kafka/common/utils/Utils/readFileAsString(java.lang.String)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$/formatAsReassignmentJson(scala.collection.Map,scala.collection.Map)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/topicsToMoveJsonFileOpt()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/utils/CoreUtils$/duplicates(scala.collection.Traversable)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/disableRackAware()|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+constructor:///kafka/server/KafkaConfig/KafkaConfig(java.util.Map,boolean)|",
    "called": "|java+constructor:///org/apache/kafka/common/config/AbstractConfig/AbstractConfig(org.apache.kafka.common.config.ConfigDef,java.util.Map,boolean)|",
    "v1Body": [
      "|java+method:///kafka/server/KafkaConfig$/OffsetCommitRequiredAcksProp()|",
      "|java+method:///kafka/server/KafkaConfig$/HostNameProp()|",
      "|java+method:///kafka/server/KafkaConfig$/MetricNumSamplesProp()|",
      "|java+constructor:///org/apache/kafka/common/config/AbstractConfig/AbstractConfig(org.apache.kafka.common.config.ConfigDef,java.util.Map,boolean)|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerMinCompactionLagMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRetentionBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/NumRecoveryThreadsPerDataDirProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerIoMaxBytesPerSecondProp()|",
      "|java+method:///scala/collection/Map$/canBuildFrom()|",
      "|java+method:///kafka/server/KafkaConfig$/SslCipherSuitesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/MaxConnectionsPerIpOverridesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ZkEnableSecureAclsProp()|",
      "|java+method:///kafka/server/KafkaConfig/getInterBrokerListenerNameAndSecurityProtocol()|",
      "|java+method:///kafka/server/KafkaConfig$/BrokerIdProp()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsTopicSegmentBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaFetchWaitMaxMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ProducerQuotaBytesPerSecondDefaultProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaSocketReceiveBufferBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig/interBrokerProtocolVersionString()|",
      "|java+method:///kafka/server/KafkaConfig$/MaxConnectionsPerIpProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerEnableProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosPrincipalToLocalRulesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SslKeyManagerAlgorithmProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslEnabledMechanismsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRollTimeMillisProp()|",
      "|java+method:///kafka/server/KafkaConfig$/AutoLeaderRebalanceEnableProp()|",
      "|java+method:///kafka/server/KafkaConfig$/QuotaWindowSizeSecondsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/GroupMaxSessionTimeoutMsProp()|",
      "|java+method:///kafka/server/KafkaConfig/getClass(java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig$/LogIndexSizeMaxBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/RackProp()|",
      "|java+method:///kafka/server/KafkaConfig$/QueuedMaxRequestsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsRetentionCheckIntervalMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/NumReplicationQuotaSamplesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/UncleanLeaderElectionEnableProp()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsTopicPartitionsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsMaxTimeoutMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/RequestTimeoutMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ConsumerQuotaBytesPerSecondDefaultProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerThreadsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsRemoveExpiredTransactionalIdCleanupIntervalMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerIoBufferSizeProp()|",
      "|java+method:///kafka/server/KafkaConfig$/NumQuotaSamplesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ZkConnectionTimeoutMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerDedupeBufferSizeProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogMessageTimestampDifferenceMaxMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/DefaultReplicationFactorProp()|",
      "|java+method:///kafka/server/KafkaConfig/getShort(java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig$/LogDeleteDelayMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogIndexIntervalBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosMinTimeBeforeReloginProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ControllerSocketTimeoutMsProp()|",
      "|java+constructor:///kafka/server/KafkaConfig$$anonfun$9/KafkaConfig$$anonfun$9(kafka.server.KafkaConfig)|",
      "|java+method:///kafka/server/KafkaConfig$/SaslMechanismInterBrokerProtocolProp()|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+constructor:///kafka/server/KafkaConfig$$anonfun$5/KafkaConfig$$anonfun$5(kafka.server.KafkaConfig)|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaFetchMinBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionalIdExpirationMsProp()|",
      "|java+constructor:///kafka/server/KafkaConfig$$anonfun$1/KafkaConfig$$anonfun$1(kafka.server.KafkaConfig)|",
      "|java+constructor:///kafka/server/KafkaConfig$$anonfun$8/KafkaConfig$$anonfun$8(kafka.server.KafkaConfig)|",
      "|java+constructor:///kafka/server/KafkaConfig$$anonfun$4/KafkaConfig$$anonfun$4(kafka.server.KafkaConfig)|",
      "|java+method:///kafka/server/KafkaConfig$/SocketReceiveBufferBytesProp()|",
      "|java+constructor:///kafka/server/KafkaConfig$$anonfun$6/KafkaConfig$$anonfun$6(kafka.server.KafkaConfig)|",
      "|java+constructor:///kafka/server/KafkaConfig$$anonfun$7/KafkaConfig$$anonfun$7(kafka.server.KafkaConfig)|",
      "|java+method:///kafka/server/KafkaConfig$/ZkConnectProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogPreAllocateProp()|",
      "|java+method:///kafka/server/KafkaConfig$/AuthorizerClassNameProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaSocketTimeoutMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsLoadBufferSizeProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ProducerPurgatoryPurgeIntervalRequestsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaHighWatermarkCheckpointIntervalMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/NumIoThreadsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/BackgroundThreadsProp()|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///kafka/server/KafkaConfig$/kafka$server$KafkaConfig$$configDef()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerBackoffMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/AdvertisedPortProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogSegmentBytesProp()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///kafka/server/KafkaConfig$/NumReplicaFetchersProp()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsTopicCompressionCodecProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ZkSyncTimeMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SslProviderProp()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetCommitTimeoutMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosServiceNameProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosTicketRenewWindowFactorProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogMessageFormatVersionProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SslClientAuthProp()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsTopicReplicationFactorProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LeaderImbalancePerBrokerPercentageProp()|",
      "|java+method:///scala/Predef$/Boolean2boolean(java.lang.Boolean)|",
      "|java+method:///kafka/server/KafkaConfig/getMap(java.lang.String,java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosKinitCmdProp()|",
      "|java+method:///scala/Option$/apply(java.lang.Object)|",
      "|java+method:///kafka/server/KafkaConfig$/PortProp()|",
      "|java+method:///kafka/api/ApiVersion/$greater$eq(java.lang.Object)|",
      "|java+method:///kafka/server/KafkaConfig/getListeners()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRollTimeJitterMillisProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ZkSessionTimeoutMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/CompressionTypeProp()|",
      "|java+method:///kafka/server/KafkaConfig$/MaxReservedBrokerIdProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LeaderImbalanceCheckIntervalSecondsProp()|",
      "|java+method:///scala/Option/map(scala.Function1)|",
      "|java+method:///kafka/server/KafkaConfig$/MetricRecordingLevelProp()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsRetentionMinutesProp()|",
      "|java+method:///scala/Option/orNull(scala.Predef$$less$colon$less)|",
      "|java+method:///kafka/server/KafkaConfig$/NumNetworkThreadsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerMinCleanRatioProp()|",
      "|java+method:///kafka/server/KafkaConfig$/DeleteRecordsPurgatoryPurgeIntervalRequestsProp()|",
      "|java+method:///org/apache/kafka/common/record/TimestampType/forName(java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig/interBrokerProtocolVersion()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicationQuotaWindowSizeSecondsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/GroupMinSessionTimeoutMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaLagTimeMaxMsProp()|",
      "|java+method:///kafka/server/KafkaConfig/getAdvertisedListeners()|",
      "|java+method:///kafka/server/KafkaConfig/getDouble(java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig$/GroupInitialRebalanceDelayMsProp()|",
      "|java+method:///kafka/server/KafkaConfig/getString(java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetMetadataMaxSizeProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SocketRequestMaxBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsAbortTimedOutTransactionCleanupIntervalMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SslKeystoreLocationProp()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsTopicPartitionsProp()|",
      "|java+method:///kafka/server/KafkaConfig/getLogRetentionTimeMillis()|",
      "|java+method:///kafka/server/KafkaConfig/getBoolean(java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig$/SslProtocolProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogFlushOffsetCheckpointIntervalMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ControlledShutdownMaxRetriesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsTopicSegmentBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/FetchPurgatoryPurgeIntervalRequestsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ControlledShutdownEnableProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogFlushSchedulerIntervalMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SslEnabledProtocolsProp()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerDeleteRetentionMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsLoadBufferSizeProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaFetchMaxBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ConnectionsMaxIdleMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/DeleteTopicEnableProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaFetchResponseMaxBytesProp()|",
      "|java+method:///scala/Predef$/$conforms()|",
      "|java+method:///kafka/server/KafkaConfig$/LogFlushStartOffsetCheckpointIntervalMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ControlledShutdownRetryBackoffMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SslKeystoreTypeProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanupIntervalMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SslKeystorePasswordProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogFlushIntervalMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/InterBrokerProtocolVersionProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogDirsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SslTruststoreLocationProp()|",
      "|java+method:///kafka/server/KafkaConfig$/PrincipalBuilderClassProp()|",
      "|java+constructor:///kafka/server/KafkaConfig$$anonfun$10/KafkaConfig$$anonfun$10(kafka.server.KafkaConfig)|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosTicketRenewJitterProp()|",
      "|java+method:///kafka/server/KafkaConfig/getInt(java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig$/SslKeyPasswordProp()|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerDedupeBufferLoadFactorProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SslTrustManagerAlgorithmProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaFetchBackoffMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsTopicReplicationFactorProp()|",
      "|java+method:///scala/Predef$/Integer2int(java.lang.Integer)|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToInt(java.lang.Object)|",
      "|java+constructor:///kafka/server/KafkaConfig$$anonfun$11/KafkaConfig$$anonfun$11(kafka.server.KafkaConfig)|",
      "|java+method:///kafka/server/KafkaConfig$/MinInSyncReplicasProp()|",
      "|java+method:///kafka/server/KafkaConfig$/BrokerIdGenerationEnableProp()|",
      "|java+method:///kafka/server/KafkaConfig/getPassword(java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig$/LogMessageTimestampTypeProp()|",
      "|java+method:///kafka/server/KafkaConfig$/MessageMaxBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/MetricSampleWindowMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/AdvertisedHostNameProp()|",
      "|java+method:///kafka/server/KafkaConfig/getLong(java.lang.String)|",
      "|java+method:///kafka/utils/CoreUtils$/parseCsvList(java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig$/SslTruststoreTypeProp()|",
      "|java+constructor:///kafka/server/KafkaConfig$$anonfun$12/KafkaConfig$$anonfun$12(kafka.server.KafkaConfig)|",
      "|java+method:///kafka/api/ApiVersion$/apply(java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig$/NumPartitionsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogFlushIntervalMessagesProp()|",
      "|java+method:///kafka/server/KafkaConfig/validateValues()|",
      "|java+method:///scala/collection/Map/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///kafka/server/KafkaConfig/logMessageFormatVersionString()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsTopicMinISRProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SslTruststorePasswordProp()|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///kafka/server/KafkaConfig$/AutoCreateTopicsEnableProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SocketSendBufferBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanupPolicyProp()|",
      "|java+method:///kafka/server/KafkaConfig/getList(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///kafka/server/KafkaConfig$/OffsetCommitRequiredAcksProp()|",
      "|java+method:///kafka/server/KafkaConfig$/HostNameProp()|",
      "|java+method:///kafka/server/KafkaConfig$/MetricNumSamplesProp()|",
      "|java+constructor:///org/apache/kafka/common/config/AbstractConfig/AbstractConfig(org.apache.kafka.common.config.ConfigDef,java.util.Map,boolean)|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerMinCompactionLagMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRetentionBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/NumRecoveryThreadsPerDataDirProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerIoMaxBytesPerSecondProp()|",
      "|java+method:///scala/collection/Map$/canBuildFrom()|",
      "|java+method:///kafka/server/KafkaConfig$/SslCipherSuitesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/MaxConnectionsPerIpOverridesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ZkEnableSecureAclsProp()|",
      "|java+method:///kafka/server/KafkaConfig/getInterBrokerListenerNameAndSecurityProtocol()|",
      "|java+method:///kafka/server/KafkaConfig$/BrokerIdProp()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsTopicSegmentBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaFetchWaitMaxMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ProducerQuotaBytesPerSecondDefaultProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaSocketReceiveBufferBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig/interBrokerProtocolVersionString()|",
      "|java+method:///kafka/server/KafkaConfig$/MaxConnectionsPerIpProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerEnableProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosPrincipalToLocalRulesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SslKeyManagerAlgorithmProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslEnabledMechanismsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRollTimeMillisProp()|",
      "|java+method:///kafka/server/KafkaConfig$/AutoLeaderRebalanceEnableProp()|",
      "|java+method:///kafka/server/KafkaConfig$/QuotaWindowSizeSecondsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/GroupMaxSessionTimeoutMsProp()|",
      "|java+method:///kafka/server/KafkaConfig/getClass(java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig$/LogIndexSizeMaxBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/RackProp()|",
      "|java+method:///kafka/server/KafkaConfig$/QueuedMaxRequestsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsRetentionCheckIntervalMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/NumReplicationQuotaSamplesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/UncleanLeaderElectionEnableProp()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsTopicPartitionsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsMaxTimeoutMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/RequestTimeoutMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ConsumerQuotaBytesPerSecondDefaultProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerThreadsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsRemoveExpiredTransactionalIdCleanupIntervalMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerIoBufferSizeProp()|",
      "|java+method:///kafka/server/KafkaConfig$/NumQuotaSamplesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ZkConnectionTimeoutMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/QueuedMaxBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerDedupeBufferSizeProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogMessageTimestampDifferenceMaxMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/DefaultReplicationFactorProp()|",
      "|java+method:///kafka/server/KafkaConfig/getShort(java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig$/LogDeleteDelayMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogIndexIntervalBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosMinTimeBeforeReloginProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ControllerSocketTimeoutMsProp()|",
      "|java+constructor:///kafka/server/KafkaConfig$$anonfun$9/KafkaConfig$$anonfun$9(kafka.server.KafkaConfig)|",
      "|java+method:///kafka/server/KafkaConfig$/SaslMechanismInterBrokerProtocolProp()|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+constructor:///kafka/server/KafkaConfig$$anonfun$5/KafkaConfig$$anonfun$5(kafka.server.KafkaConfig)|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaFetchMinBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionalIdExpirationMsProp()|",
      "|java+constructor:///kafka/server/KafkaConfig$$anonfun$1/KafkaConfig$$anonfun$1(kafka.server.KafkaConfig)|",
      "|java+constructor:///kafka/server/KafkaConfig$$anonfun$8/KafkaConfig$$anonfun$8(kafka.server.KafkaConfig)|",
      "|java+constructor:///kafka/server/KafkaConfig$$anonfun$4/KafkaConfig$$anonfun$4(kafka.server.KafkaConfig)|",
      "|java+constructor:///kafka/server/KafkaConfig$$anonfun$3/KafkaConfig$$anonfun$3(kafka.server.KafkaConfig)|",
      "|java+method:///kafka/server/KafkaConfig$/SocketReceiveBufferBytesProp()|",
      "|java+constructor:///kafka/server/KafkaConfig$$anonfun$6/KafkaConfig$$anonfun$6(kafka.server.KafkaConfig)|",
      "|java+constructor:///kafka/server/KafkaConfig$$anonfun$7/KafkaConfig$$anonfun$7(kafka.server.KafkaConfig)|",
      "|java+method:///kafka/server/KafkaConfig$/ZkConnectProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogPreAllocateProp()|",
      "|java+method:///kafka/server/KafkaConfig$/AuthorizerClassNameProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaSocketTimeoutMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsLoadBufferSizeProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ProducerPurgatoryPurgeIntervalRequestsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaHighWatermarkCheckpointIntervalMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/NumIoThreadsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/BackgroundThreadsProp()|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///kafka/server/KafkaConfig$/kafka$server$KafkaConfig$$configDef()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerBackoffMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/AdvertisedPortProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogSegmentBytesProp()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///kafka/server/KafkaConfig$/NumReplicaFetchersProp()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsTopicCompressionCodecProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ZkSyncTimeMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SslProviderProp()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetCommitTimeoutMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosServiceNameProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosTicketRenewWindowFactorProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogMessageFormatVersionProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SslClientAuthProp()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsTopicReplicationFactorProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LeaderImbalancePerBrokerPercentageProp()|",
      "|java+method:///scala/Predef$/Boolean2boolean(java.lang.Boolean)|",
      "|java+method:///kafka/server/KafkaConfig/getMap(java.lang.String,java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosKinitCmdProp()|",
      "|java+method:///scala/Option$/apply(java.lang.Object)|",
      "|java+method:///kafka/server/KafkaConfig$/PortProp()|",
      "|java+method:///kafka/api/ApiVersion/$greater$eq(java.lang.Object)|",
      "|java+method:///kafka/server/KafkaConfig/getListeners()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRollTimeJitterMillisProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ZkSessionTimeoutMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/CompressionTypeProp()|",
      "|java+method:///kafka/server/KafkaConfig$/MaxReservedBrokerIdProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LeaderImbalanceCheckIntervalSecondsProp()|",
      "|java+method:///scala/Option/map(scala.Function1)|",
      "|java+method:///kafka/server/KafkaConfig$/MetricRecordingLevelProp()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsRetentionMinutesProp()|",
      "|java+method:///scala/Option/orNull(scala.Predef$$less$colon$less)|",
      "|java+method:///kafka/server/KafkaConfig$/NumNetworkThreadsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerMinCleanRatioProp()|",
      "|java+method:///kafka/server/KafkaConfig$/DeleteRecordsPurgatoryPurgeIntervalRequestsProp()|",
      "|java+method:///org/apache/kafka/common/record/TimestampType/forName(java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig/interBrokerProtocolVersion()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicationQuotaWindowSizeSecondsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/GroupMinSessionTimeoutMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaLagTimeMaxMsProp()|",
      "|java+method:///kafka/server/KafkaConfig/getAdvertisedListeners()|",
      "|java+method:///kafka/server/KafkaConfig/getDouble(java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig$/GroupInitialRebalanceDelayMsProp()|",
      "|java+method:///kafka/server/KafkaConfig/getString(java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetMetadataMaxSizeProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SocketRequestMaxBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsAbortTimedOutTransactionCleanupIntervalMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SslKeystoreLocationProp()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsTopicPartitionsProp()|",
      "|java+method:///kafka/server/KafkaConfig/getLogRetentionTimeMillis()|",
      "|java+method:///kafka/server/KafkaConfig/getBoolean(java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig$/SslProtocolProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogFlushOffsetCheckpointIntervalMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ControlledShutdownMaxRetriesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsTopicSegmentBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/FetchPurgatoryPurgeIntervalRequestsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ControlledShutdownEnableProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogFlushSchedulerIntervalMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SslEnabledProtocolsProp()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerDeleteRetentionMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsLoadBufferSizeProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaFetchMaxBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ConnectionsMaxIdleMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/DeleteTopicEnableProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaFetchResponseMaxBytesProp()|",
      "|java+method:///scala/Predef$/$conforms()|",
      "|java+method:///kafka/server/KafkaConfig$/LogFlushStartOffsetCheckpointIntervalMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ControlledShutdownRetryBackoffMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SslKeystoreTypeProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanupIntervalMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SslKeystorePasswordProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogFlushIntervalMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/InterBrokerProtocolVersionProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogDirsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SslTruststoreLocationProp()|",
      "|java+method:///kafka/server/KafkaConfig$/PrincipalBuilderClassProp()|",
      "|java+constructor:///kafka/server/KafkaConfig$$anonfun$10/KafkaConfig$$anonfun$10(kafka.server.KafkaConfig)|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosTicketRenewJitterProp()|",
      "|java+method:///kafka/server/KafkaConfig/getInt(java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig$/SslKeyPasswordProp()|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerDedupeBufferLoadFactorProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SslTrustManagerAlgorithmProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaFetchBackoffMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsTopicReplicationFactorProp()|",
      "|java+method:///scala/Predef$/Integer2int(java.lang.Integer)|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToInt(java.lang.Object)|",
      "|java+constructor:///kafka/server/KafkaConfig$$anonfun$11/KafkaConfig$$anonfun$11(kafka.server.KafkaConfig)|",
      "|java+method:///kafka/server/KafkaConfig$/MinInSyncReplicasProp()|",
      "|java+method:///kafka/server/KafkaConfig$/BrokerIdGenerationEnableProp()|",
      "|java+method:///kafka/server/KafkaConfig/getPassword(java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig$/LogMessageTimestampTypeProp()|",
      "|java+method:///kafka/server/KafkaConfig$/MessageMaxBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/MetricSampleWindowMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/AdvertisedHostNameProp()|",
      "|java+method:///kafka/server/KafkaConfig/getLong(java.lang.String)|",
      "|java+method:///kafka/utils/CoreUtils$/parseCsvList(java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig$/SslTruststoreTypeProp()|",
      "|java+method:///kafka/api/ApiVersion$/apply(java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig$/NumPartitionsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogFlushIntervalMessagesProp()|",
      "|java+method:///kafka/server/KafkaConfig/validateValues()|",
      "|java+method:///scala/collection/Map/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///kafka/server/KafkaConfig/logMessageFormatVersionString()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsTopicMinISRProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SslTruststorePasswordProp()|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///kafka/server/KafkaConfig$/AutoCreateTopicsEnableProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SocketSendBufferBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanupPolicyProp()|",
      "|java+method:///kafka/server/KafkaConfig/getList(java.lang.String)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/network/RequestChannel$Request/requestDesc(boolean)|",
    "called": "|java+method:///org/apache/kafka/common/requests/AbstractRequest/toString(boolean)|",
    "v1Body": [
      "|java+method:///kafka/network/RequestChannel$Request/requestObj()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/kafka/common/requests/AbstractRequest/toString(boolean)|",
      "|java+method:///kafka/network/RequestChannel$Request/header()|",
      "|java+method:///kafka/network/RequestChannel$Request/body(scala.reflect.ClassTag,kafka.utils.NotNothing)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///kafka/api/RequestOrResponse/describe(boolean)|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///scala/Predef$$eq$colon$eq$/tpEquals()|",
      "|java+method:///kafka/utils/NotNothing$/notNothingEvidence(scala.Predef$$eq$colon$eq)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|"
    ],
    "v2Body": [
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/kafka/common/requests/AbstractRequest/toString(boolean)|",
      "|java+method:///kafka/network/RequestChannel$Request/header()|",
      "|java+method:///kafka/network/RequestChannel$Request/body(scala.reflect.ClassTag,kafka.utils.NotNothing)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///scala/Predef$$eq$colon$eq$/tpEquals()|",
      "|java+method:///kafka/utils/NotNothing$/notNothingEvidence(scala.Predef$$eq$colon$eq)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/KafkaApis/handleLeaderAndIsrRequest(kafka.network.RequestChannel$Request)|",
    "called": "|java+constructor:///org/apache/kafka/common/requests/LeaderAndIsrResponse/LeaderAndIsrResponse(org.apache.kafka.common.protocol.Errors,java.util.Map)|",
    "v1Body": [
      "|java+method:///kafka/server/KafkaApis/kafka$server$KafkaApis$$authorize(kafka.network.RequestChannel$Session,kafka.security.auth.Operation,kafka.security.auth.Resource)|",
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///kafka/server/KafkaApis/fatal(scala.Function0,scala.Function0)|",
      "|java+method:///scala/collection/Iterable$/canBuildFrom()|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///kafka/utils/NotNothing$/notNothingEvidence(scala.Predef$$eq$colon$eq)|",
      "|java+method:///kafka/network/RequestChannel$Response$/apply(kafka.network.RequestChannel$Request,org.apache.kafka.common.requests.AbstractResponse)|",
      "|java+method:///scala/collection/MapLike/keys()|",
      "|java+method:///scala/collection/TraversableOnce/toMap(scala.Predef$$less$colon$less)|",
      "|java+method:///kafka/utils/Exit$/halt$default$2()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$handleLeaderAndIsrRequest$3/KafkaApis$$anonfun$handleLeaderAndIsrRequest$3(kafka.server.KafkaApis,kafka.common.KafkaStorageException)|",
      "|java+method:///kafka/server/BecomeLeaderOrFollowerResult/responseMap()|",
      "|java+method:///kafka/server/KafkaApis/sendResponseExemptThrottle(kafka.network.RequestChannel$Response)|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///scala/Predef$$eq$colon$eq$/tpEquals()|",
      "|java+method:///kafka/server/KafkaApis/replicaManager()|",
      "|java+method:///kafka/server/KafkaApis/sendResponseMaybeThrottle(kafka.network.RequestChannel$Request,scala.Function1)|",
      "|java+method:///kafka/server/BecomeLeaderOrFollowerResult/error()|",
      "|java+method:///org/apache/kafka/common/requests/LeaderAndIsrRequest/partitionStates()|",
      "|java+method:///kafka/network/RequestChannel$Request/session()|",
      "|java+method:///kafka/security/auth/Resource$/ClusterResource()|",
      "|java+method:///scala/collection/JavaConverters$/mapAsScalaMapConverter(java.util.Map)|",
      "|java+method:///kafka/network/RequestChannel$Request/header()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$handleLeaderAndIsrRequest$1/KafkaApis$$anonfun$handleLeaderAndIsrRequest$1(kafka.server.KafkaApis,scala.collection.immutable.Map)|",
      "|java+method:///kafka/server/ReplicaManager/becomeLeaderOrFollower(int,org.apache.kafka.common.requests.LeaderAndIsrRequest,scala.Function2)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$handleLeaderAndIsrRequest$2/KafkaApis$$anonfun$handleLeaderAndIsrRequest$2(kafka.server.KafkaApis)|",
      "|java+method:///kafka/utils/Exit$/halt(int,scala.Option)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$4/KafkaApis$$anonfun$4(kafka.server.KafkaApis)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$5/KafkaApis$$anonfun$5(kafka.server.KafkaApis)|",
      "|java+method:///kafka/network/RequestChannel$Request/body(scala.reflect.ClassTag,kafka.utils.NotNothing)|",
      "|java+method:///scala/collection/JavaConverters$/mapAsJavaMapConverter(scala.collection.Map)|",
      "|java+method:///scala/Predef$/$conforms()|",
      "|java+method:///scala/collection/Iterable/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+constructor:///org/apache/kafka/common/requests/LeaderAndIsrResponse/LeaderAndIsrResponse(org.apache.kafka.common.protocol.Errors,java.util.Map)|",
      "|java+method:///org/apache/kafka/common/requests/RequestHeader/correlationId()|"
    ],
    "v2Body": [
      "|java+method:///kafka/server/KafkaApis/kafka$server$KafkaApis$$authorize(kafka.network.RequestChannel$Session,kafka.security.auth.Operation,kafka.security.auth.Resource)|",
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///scala/collection/Iterable$/canBuildFrom()|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///kafka/utils/NotNothing$/notNothingEvidence(scala.Predef$$eq$colon$eq)|",
      "|java+method:///scala/collection/MapLike/keys()|",
      "|java+method:///scala/collection/TraversableOnce/toMap(scala.Predef$$less$colon$less)|",
      "|java+method:///kafka/server/BecomeLeaderOrFollowerResult/responseMap()|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///scala/Predef$$eq$colon$eq$/tpEquals()|",
      "|java+method:///kafka/server/KafkaApis/replicaManager()|",
      "|java+method:///kafka/server/KafkaApis/sendResponseMaybeThrottle(kafka.network.RequestChannel$Request,scala.Function1)|",
      "|java+method:///kafka/server/BecomeLeaderOrFollowerResult/error()|",
      "|java+method:///org/apache/kafka/common/requests/LeaderAndIsrRequest/partitionStates()|",
      "|java+method:///kafka/network/RequestChannel$Request/session()|",
      "|java+method:///kafka/security/auth/Resource$/ClusterResource()|",
      "|java+method:///scala/collection/JavaConverters$/mapAsScalaMapConverter(java.util.Map)|",
      "|java+method:///kafka/network/RequestChannel$Request/header()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$handleLeaderAndIsrRequest$1/KafkaApis$$anonfun$handleLeaderAndIsrRequest$1(kafka.server.KafkaApis,scala.collection.immutable.Map)|",
      "|java+method:///kafka/server/ReplicaManager/becomeLeaderOrFollower(int,org.apache.kafka.common.requests.LeaderAndIsrRequest,scala.Function2)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$4/KafkaApis$$anonfun$4(kafka.server.KafkaApis)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$5/KafkaApis$$anonfun$5(kafka.server.KafkaApis)|",
      "|java+method:///kafka/network/RequestChannel$Request/body(scala.reflect.ClassTag,kafka.utils.NotNothing)|",
      "|java+method:///scala/collection/JavaConverters$/mapAsJavaMapConverter(scala.collection.Map)|",
      "|java+method:///scala/Predef$/$conforms()|",
      "|java+method:///scala/collection/Iterable/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+constructor:///org/apache/kafka/common/requests/LeaderAndIsrResponse/LeaderAndIsrResponse(org.apache.kafka.common.protocol.Errors,java.util.Map)|",
      "|java+method:///kafka/server/KafkaApis/sendResponseExemptThrottle(kafka.network.RequestChannel$Request,org.apache.kafka.common.requests.AbstractResponse)|",
      "|java+method:///org/apache/kafka/common/requests/RequestHeader/correlationId()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+constructor:///kafka/server/ReplicaFetcherThread/ReplicaFetcherThread(java.lang.String,int,kafka.cluster.BrokerEndPoint,kafka.server.KafkaConfig,kafka.server.ReplicaManager,org.apache.kafka.common.metrics.Metrics,org.apache.kafka.common.utils.Time,kafka.server.ReplicationQuotaManager,scala.Option)|",
    "called": "|java+constructor:///org/apache/kafka/common/utils/LogContext/LogContext(java.lang.String)|",
    "v1Body": [
      "|java+method:///kafka/server/KafkaConfig/replicaFetchMinBytes()|",
      "|java+method:///kafka/server/KafkaConfig/replicaFetchWaitMaxMs()|",
      "|java+constructor:///kafka/server/AbstractFetcherThread/AbstractFetcherThread(java.lang.String,java.lang.String,kafka.cluster.BrokerEndPoint,int,boolean,boolean)|",
      "|java+method:///kafka/api/ApiVersion/$greater$eq(java.lang.Object)|",
      "|java+method:///kafka/server/KafkaConfig/replicaFetchMaxBytes()|",
      "|java+method:///kafka/server/KafkaConfig/replicaFetchResponseMaxBytes()|",
      "|java+method:///kafka/server/KafkaConfig/interBrokerProtocolVersion()|",
      "|java+method:///kafka/server/KafkaConfig/brokerId()|",
      "|java+method:///kafka/server/KafkaConfig/replicaFetchBackoffMs()|",
      "|java+method:///scala/Predef$/Integer2int(java.lang.Integer)|",
      "|java+constructor:///kafka/server/ReplicaFetcherThread$$anonfun$1/ReplicaFetcherThread$$anonfun$1(kafka.server.ReplicaFetcherThread)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|"
    ],
    "v2Body": [
      "|java+method:///kafka/server/KafkaConfig/replicaFetchMinBytes()|",
      "|java+method:///kafka/server/KafkaConfig/replicaFetchWaitMaxMs()|",
      "|java+method:///kafka/server/ReplicaFetcherThread/kafka$server$ReplicaFetcherThread$$replicaId()|",
      "|java+method:///kafka/server/ReplicaFetcherThread/logIdent_$eq(java.lang.String)|",
      "|java+constructor:///kafka/server/AbstractFetcherThread/AbstractFetcherThread(java.lang.String,java.lang.String,kafka.cluster.BrokerEndPoint,int,boolean,boolean)|",
      "|java+constructor:///org/apache/kafka/common/utils/LogContext/LogContext(java.lang.String)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///kafka/api/ApiVersion/$greater$eq(java.lang.Object)|",
      "|java+method:///kafka/server/KafkaConfig/interBrokerProtocolVersion()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///kafka/server/KafkaConfig/replicaFetchBackoffMs()|",
      "|java+method:///org/apache/kafka/common/utils/LogContext/logPrefix()|",
      "|java+method:///kafka/server/KafkaConfig/replicaFetchMaxBytes()|",
      "|java+method:///kafka/server/KafkaConfig/replicaFetchResponseMaxBytes()|",
      "|java+method:///kafka/server/ReplicaFetcherThread/kafka$server$ReplicaFetcherThread$$logContext()|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///kafka/server/AbstractFetcherThread/sourceBroker()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/server/KafkaConfig/brokerId()|",
      "|java+method:///kafka/cluster/BrokerEndPoint/id()|",
      "|java+method:///scala/Predef$/Integer2int(java.lang.Integer)|",
      "|java+constructor:///kafka/server/ReplicaFetcherThread$$anonfun$1/ReplicaFetcherThread$$anonfun$1(kafka.server.ReplicaFetcherThread)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/ReplicaFetcherThread/buildFetchRequest(scala.collection.Seq)|",
    "called": "|java+method:///org/apache/kafka/common/requests/FetchRequest$Builder/forReplica(short,int,int,int,java.util.LinkedHashMap)|",
    "v1Body": [
      "|java+method:///kafka/server/ReplicaFetcherThread/maxWait()|",
      "|java+method:///kafka/server/ReplicaFetcherThread/minBytes()|",
      "|java+method:///scala/collection/Seq/foreach(scala.Function1)|",
      "|java+method:///kafka/server/ReplicaFetcherThread/fetchRequestVersion()|",
      "|java+method:///org/apache/kafka/common/requests/FetchRequest$Builder/setMaxBytes(int)|",
      "|java+method:///org/apache/kafka/common/requests/FetchRequest$Builder/forReplica(short,int,int,int,java.util.LinkedHashMap)|",
      "|java+method:///kafka/server/ReplicaFetcherThread/buildFetchRequest(scala.collection.Seq)|",
      "|java+method:///scala/Predef$/Integer2int(java.lang.Integer)|",
      "|java+method:///kafka/server/ReplicaFetcherThread/replicaId()|",
      "|java+constructor:///java/util/LinkedHashMap/LinkedHashMap()|",
      "|java+constructor:///kafka/server/ReplicaFetcherThread$FetchRequest/ReplicaFetcherThread$FetchRequest(org.apache.kafka.common.requests.FetchRequest$Builder)|",
      "|java+method:///kafka/server/ReplicaFetcherThread/maxBytes()|",
      "|java+constructor:///kafka/server/ReplicaFetcherThread$$anonfun$buildFetchRequest$1/ReplicaFetcherThread$$anonfun$buildFetchRequest$1(kafka.server.ReplicaFetcherThread,java.util.LinkedHashMap)|"
    ],
    "v2Body": [
      "|java+method:///kafka/server/ReplicaFetcherThread/kafka$server$ReplicaFetcherThread$$replicaId()|",
      "|java+method:///kafka/server/ReplicaFetcherThread/minBytes()|",
      "|java+method:///scala/collection/Seq/foreach(scala.Function1)|",
      "|java+method:///kafka/server/ReplicaFetcherThread/fetchRequestVersion()|",
      "|java+method:///org/apache/kafka/common/requests/FetchRequest$Builder/setMaxBytes(int)|",
      "|java+method:///org/apache/kafka/common/requests/FetchRequest$Builder/forReplica(short,int,int,int,java.util.LinkedHashMap)|",
      "|java+method:///scala/collection/mutable/Set$/apply(scala.collection.Seq)|",
      "|java+method:///scala/Predef$/Integer2int(java.lang.Integer)|",
      "|java+constructor:///java/util/LinkedHashMap/LinkedHashMap()|",
      "|java+constructor:///kafka/server/ReplicaFetcherThread$$anonfun$buildFetchRequest$1/ReplicaFetcherThread$$anonfun$buildFetchRequest$1(kafka.server.ReplicaFetcherThread,java.util.LinkedHashMap,scala.collection.mutable.Set)|",
      "|java+method:///kafka/server/ReplicaFetcherThread/maxWait()|",
      "|java+constructor:///kafka/server/ReplicaFetcherThread$FetchRequest/ReplicaFetcherThread$FetchRequest(org.apache.kafka.common.requests.FetchRequest$Builder)|",
      "|java+constructor:///kafka/server/AbstractFetcherThread$ResultWithPartitions/AbstractFetcherThread$ResultWithPartitions(java.lang.Object,scala.collection.Set)|",
      "|java+method:///kafka/server/ReplicaFetcherThread/maxBytes()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+constructor:///kafka/server/KafkaConfig$/KafkaConfig$()|",
    "called": "|java+constructor:///org/apache/kafka/common/config/ConfigDef/ConfigDef()|",
    "v1Body": [
      "|java+method:///kafka/server/Defaults$/SslEnabledProtocols()|",
      "|java+method:///scala/collection/SetLike/toSeq()|",
      "|java+method:///kafka/server/KafkaConfig$/AdvertisedListenersDoc()|",
      "|java+method:///kafka/server/Defaults$/GroupMinSessionTimeoutMs()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetCommitRequiredAcksProp()|",
      "|java+method:///kafka/server/KafkaConfig$/HostNameProp()|",
      "|java+method:///kafka/server/KafkaConfig$/MetricNumSamplesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRetentionBytesProp()|",
      "|java+method:///scala/collection/JavaConverters$/asScalaSetConverter(java.util.Set)|",
      "|java+method:///kafka/server/KafkaConfig$/DeleteRecordsPurgatoryPurgeIntervalRequestsDoc()|",
      "|java+method:///kafka/server/Defaults$/LogFlushSchedulerIntervalMs()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerMinCleanRatioDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerMinCompactionLagMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/GroupMinSessionTimeoutMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicationQuotaWindowSizeSecondsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerIoMaxBytesPerSecondProp()|",
      "|java+method:///kafka/server/Defaults$/GroupInitialRebalanceDelayMs()|",
      "|java+method:///kafka/server/KafkaConfig$/SslCipherSuitesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/MaxConnectionsPerIpOverridesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ZkEnableSecureAclsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/NumNetworkThreadsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LeaderImbalanceCheckIntervalSecondsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/BrokerIdProp()|",
      "|java+method:///kafka/server/Defaults$/OffsetsLoadBufferSize()|",
      "|java+method:///kafka/server/KafkaConfig$/NumRecoveryThreadsPerDataDirProp()|",
      "|java+method:///kafka/server/Defaults$/LogCleanerDeleteRetentionMs()|",
      "|java+method:///kafka/server/Defaults$/DeleteTopicEnable()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsTopicSegmentBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsRetentionMinutesDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/MetricRecordingLevelDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaFetchWaitMaxMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ProducerQuotaBytesPerSecondDefaultProp()|",
      "|java+method:///kafka/server/Defaults$/LogFlushOffsetCheckpointIntervalMs()|",
      "|java+method:///kafka/server/KafkaConfig$/MaxReservedBrokerIdDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRollTimeJitterHoursProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaSocketReceiveBufferBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ZkSessionTimeoutMsDoc()|",
      "|java+method:///kafka/server/Defaults$/LogFlushStartOffsetCheckpointIntervalMs()|",
      "|java+method:///kafka/server/KafkaConfig$/MaxConnectionsPerIpProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerEnableProp()|",
      "|java+method:///kafka/server/Defaults$/SslKeystoreType()|",
      "|java+method:///kafka/server/KafkaConfig$/CompressionTypeDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosPrincipalToLocalRulesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SslKeyManagerAlgorithmProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRollTimeJitterMillisDoc()|",
      "|java+method:///kafka/server/Defaults$/ControlledShutdownMaxRetries()|",
      "|java+method:///kafka/server/KafkaConfig$/LogIndexSizeMaxBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SslClientAuthDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/ListenersDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRollTimeMillisProp()|",
      "|java+method:///kafka/server/KafkaConfig$/AutoLeaderRebalanceEnableProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosKinitCmdDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRollTimeHoursDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/InterBrokerListenerNameProp()|",
      "|java+method:///kafka/server/KafkaConfig$/PortDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/QuotaWindowSizeSecondsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/GroupMaxSessionTimeoutMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LeaderImbalancePerBrokerPercentageDoc()|",
      "|java+method:///kafka/server/Defaults$/OffsetsTopicSegmentBytes()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsTopicReplicationFactorDoc()|",
      "|java+method:///kafka/server/Defaults$/ControlledShutdownEnable()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslEnabledMechanismsProp()|",
      "|java+method:///kafka/server/Defaults$/TransactionsAbortTimedOutTransactionsCleanupIntervalMS()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosServiceNameDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/RackProp()|",
      "|java+method:///org/apache/kafka/common/protocol/SecurityProtocol/nonTestingValues()|",
      "|java+method:///kafka/server/KafkaConfig$/SslEndpointIdentificationAlgorithmDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogConfigPrefix()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsRetentionCheckIntervalMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/NumReplicationQuotaSamplesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/UncleanLeaderElectionEnableProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogMessageFormatVersionDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosTicketRenewWindowFactorDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/MetricReporterClassesProp()|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///kafka/server/KafkaConfig$/QueuedMaxRequestsProp()|",
      "|java+method:///kafka/server/Defaults$/PrincipalBuilderClass()|",
      "|java+method:///kafka/server/KafkaConfig$/LogPreAllocateEnableDoc()|",
      "|java+method:///org/apache/kafka/common/config/ConfigDef$ValidString/in(java.lang.String%5B%5D)|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsTopicPartitionsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ZkSyncTimeMsDoc()|",
      "|java+method:///kafka/server/Defaults$/ConnectionsMaxIdleMs()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsTopicCompressionCodecDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsMaxTimeoutMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/RequestTimeoutMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetCommitTimeoutMsDoc()|",
      "|java+method:///kafka/server/Defaults$/SaslKerberosTicketRenewJitter()|",
      "|java+method:///kafka/server/Defaults$/LogDir()|",
      "|java+method:///kafka/server/KafkaConfig$/SslProviderDoc()|",
      "|java+method:///kafka/server/Defaults$/ReplicaFetchMaxBytes()|",
      "|java+method:///kafka/server/KafkaConfig$/AdvertisedPortDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/ConsumerQuotaBytesPerSecondDefaultProp()|",
      "|java+method:///kafka/server/KafkaConfig$/CreateTopicPolicyClassNameDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerThreadsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsRemoveExpiredTransactionalIdCleanupIntervalMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/NumReplicaFetchersDoc()|",
      "|java+method:///kafka/server/Defaults$/ReplicaFetchBackoffMs()|",
      "|java+method:///kafka/message/Message$/MinMessageOverhead()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerIoBufferSizeProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogSegmentBytesDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerBackoffMsDoc()|",
      "|java+method:///kafka/server/Defaults$/OffsetsTopicReplicationFactor()|",
      "|java+method:///kafka/server/Defaults$/ControlledShutdownRetryBackoffMs()|",
      "|java+method:///kafka/server/Defaults$/ReplicaFetchResponseMaxBytes()|",
      "|java+method:///kafka/server/KafkaConfig$/AlterConfigPolicyClassNameProp()|",
      "|java+method:///kafka/server/KafkaConfig$/NumQuotaSamplesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ZkConnectionTimeoutMsProp()|",
      "|java+method:///kafka/server/Defaults$/LogMessageTimestampType()|",
      "|java+method:///kafka/server/KafkaConfig$/NumIoThreadsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaHighWatermarkCheckpointIntervalMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/ProducerPurgatoryPurgeIntervalRequestsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/SslSecureRandomImplementationProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerDedupeBufferSizeProp()|",
      "|java+method:///kafka/server/Defaults$/LogCleanupIntervalMs()|",
      "|java+method:///kafka/server/KafkaConfig$/LogMessageTimestampDifferenceMaxMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRetentionTimeMinutesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/DefaultReplicationFactorProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogDeleteDelayMsProp()|",
      "|java+method:///kafka/server/Defaults$/InterBrokerSecurityProtocol()|",
      "|java+method:///kafka/server/KafkaConfig$/LogIndexIntervalBytesProp()|",
      "|java+method:///kafka/server/Defaults$/InterBrokerProtocolVersion()|",
      "|java+method:///kafka/server/KafkaConfig$/BackgroundThreadsDoc()|",
      "|java+method:///kafka/server/Defaults$/MinInSyncReplicas()|",
      "|java+method:///kafka/server/Defaults$/Delete()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosMinTimeBeforeReloginProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ControllerSocketTimeoutMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaSocketTimeoutMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslMechanismInterBrokerProtocolProp()|",
      "|java+method:///kafka/server/KafkaConfig$/AuthorizerClassNameDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaFetchMinBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionalIdExpirationMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsLoadBufferSizeDoc()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToShort(short)|",
      "|java+method:///kafka/server/KafkaConfig$/ZkConnectProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SocketReceiveBufferBytesProp()|",
      "|java+method:///kafka/server/Defaults$/MessageMaxBytes()|",
      "|java+method:///kafka/server/KafkaConfig$/SocketReceiveBufferBytesDoc()|",
      "|java+method:///kafka/server/Defaults$/SslTruststoreType()|",
      "|java+method:///kafka/server/KafkaConfig$/ZkConnectDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionalIdExpirationMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogPreAllocateProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaFetchMinBytesDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/AuthorizerClassNameProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaSocketTimeoutMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslMechanismInterBrokerProtocolDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsLoadBufferSizeProp()|",
      "|java+method:///kafka/server/Defaults$/NumPartitions()|",
      "|java+method:///kafka/server/KafkaConfig$/LogMessageTimestampDifferenceMaxMsDoc()|",
      "|java+method:///kafka/server/Defaults$/SocketSendBufferBytes()|",
      "|java+method:///kafka/server/KafkaConfig$/SslSecureRandomImplementationDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/ZkConnectionTimeoutMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/BackgroundThreadsProp()|",
      "|java+method:///kafka/server/Defaults$/LogRollHours()|",
      "|java+method:///kafka/server/KafkaConfig$/LogDeleteDelayMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerDedupeBufferSizeDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/ProducerPurgatoryPurgeIntervalRequestsProp()|",
      "|java+method:///kafka/server/Defaults$/ListenerSecurityProtocolMap()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaHighWatermarkCheckpointIntervalMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/NumIoThreadsProp()|",
      "|java+method:///kafka/server/Defaults$/LogCleanerDedupeBufferLoadFactor()|",
      "|java+method:///kafka/server/Defaults$/SslTrustManagerAlgorithm()|",
      "|java+method:///kafka/server/KafkaConfig$/LogIndexIntervalBytesDoc()|",
      "|java+method:///kafka/server/Defaults$/TransactionsRemoveExpiredTransactionsCleanupIntervalMS()|",
      "|java+method:///kafka/server/KafkaConfig$/ControllerSocketTimeoutMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosMinTimeBeforeReloginDoc()|",
      "|java+method:///kafka/server/Defaults$/TransactionsTopicMinISR()|",
      "|java+method:///kafka/server/KafkaConfig$/DefaultReplicationFactorDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/CreateTopicPolicyClassNameProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerBackoffMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/AdvertisedPortProp()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///kafka/server/KafkaConfig$/ConsumerQuotaBytesPerSecondDefaultDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogSegmentBytesProp()|",
      "|java+method:///kafka/server/Defaults$/SslClientAuthRequested()|",
      "|java+method:///kafka/server/KafkaConfig$/NumReplicaFetchersProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerIoBufferSizeDoc()|",
      "|java+method:///kafka/server/Defaults$/BrokerIdGenerationEnable()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerThreadsDoc()|",
      "|java+method:///kafka/server/Defaults$/LogRetentionBytes()|",
      "|java+method:///kafka/server/KafkaConfig$/AlterConfigPolicyClassNameDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/NumQuotaSamplesDoc()|",
      "|java+method:///kafka/server/Defaults$/TransactionsTopicSegmentBytes()|",
      "|java+method:///kafka/server/Defaults$/LogCleanerIoMaxBytesPerSecond()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsTopicCompressionCodecProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SslProviderProp()|",
      "|java+method:///kafka/server/Defaults$/MetricSampleWindowMs()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsTopicPartitionsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetCommitTimeoutMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/RequestTimeoutMsDoc()|",
      "|java+method:///org/apache/kafka/common/config/ConfigDef/define(java.lang.String,org.apache.kafka.common.config.ConfigDef$Type,java.lang.Object,org.apache.kafka.common.config.ConfigDef$Validator,org.apache.kafka.common.config.ConfigDef$Importance,java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig$/ZkSyncTimeMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsMaxTimeoutMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/QueuedMaxRequestsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/RackDoc()|",
      "|java+method:///kafka/server/Defaults$/SaslKerberosPrincipalToLocalRules()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosTicketRenewWindowFactorProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogMessageFormatVersionProp()|",
      "|java+method:///kafka/server/KafkaConfig$/MetricReporterClassesDoc()|",
      "|java+constructor:///kafka/server/KafkaConfig$$anonfun$3/KafkaConfig$$anonfun$3()|",
      "|java+method:///kafka/server/KafkaConfig$/NumReplicationQuotaSamplesDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsRetentionCheckIntervalMsDoc()|",
      "|java+method:///kafka/server/Defaults$/MaxConnectionsPerIp()|",
      "|java+method:///kafka/server/Defaults$/ReplicaSocketReceiveBufferBytes()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosServiceNameProp()|",
      "|java+method:///kafka/server/Defaults$/LogFlushIntervalMessages()|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///kafka/server/Defaults$/ReplicaFetchWaitMaxMs()|",
      "|java+method:///kafka/server/KafkaConfig$/UncleanLeaderElectionEnableDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/SslEndpointIdentificationAlgorithmProp()|",
      "|java+method:///kafka/server/Defaults$/SaslEnabledMechanisms()|",
      "|java+method:///kafka/server/KafkaConfig$/InterBrokerListenerNameDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/SslClientAuthProp()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsTopicReplicationFactorProp()|",
      "|java+method:///kafka/server/KafkaConfig$/AutoLeaderRebalanceEnableDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRollTimeMillisDoc()|",
      "|java+method:///org/apache/kafka/common/config/ConfigDef/define(java.lang.String,org.apache.kafka.common.config.ConfigDef$Type,java.lang.Object,org.apache.kafka.common.config.ConfigDef$Importance,java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig$/PortProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRollTimeHoursProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosKinitCmdProp()|",
      "|java+method:///kafka/server/KafkaConfig$/GroupMaxSessionTimeoutMsDoc()|",
      "|java+method:///kafka/server/Defaults$/LogCleanupPolicy()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslEnabledMechanismsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LeaderImbalancePerBrokerPercentageProp()|",
      "|java+method:///kafka/server/Defaults$/AutoLeaderRebalanceEnable()|",
      "|java+method:///kafka/server/Defaults$/AutoCreateTopicsEnable()|",
      "|java+method:///kafka/server/KafkaConfig$/LogIndexSizeMaxBytesDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/ListenersProp()|",
      "|java+method:///kafka/server/KafkaConfig$/QuotaWindowSizeSecondsDoc()|",
      "|java+method:///kafka/server/Defaults$/MetricReporterClasses()|",
      "|java+method:///kafka/server/Defaults$/OffsetCommitRequiredAcks()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRollTimeJitterMillisProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ZkSessionTimeoutMsProp()|",
      "|java+method:///kafka/server/Defaults$/LogCleanerMinCompactionLagMs()|",
      "|java+method:///kafka/server/KafkaConfig$/CompressionTypeProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ProducerQuotaBytesPerSecondDefaultDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaFetchWaitMaxMsDoc()|",
      "|java+method:///kafka/server/Defaults$/LogRetentionHours()|",
      "|java+method:///kafka/server/Defaults$/MetricNumSamples()|",
      "|java+method:///kafka/server/KafkaConfig$/MaxReservedBrokerIdProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaSocketReceiveBufferBytesDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRollTimeJitterHoursDoc()|",
      "|java+method:///kafka/server/Defaults$/UncleanLeaderElectionEnable()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerEnableDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/MaxConnectionsPerIpDoc()|",
      "|java+method:///kafka/server/Defaults$/OffsetsRetentionCheckIntervalMs()|",
      "|java+method:///kafka/server/Defaults$/HostName()|",
      "|java+method:///kafka/server/Defaults$/QueuedMaxRequests()|",
      "|java+method:///scala/collection/TraversableOnce/mkString(java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig$/SslKeyManagerAlgorithmDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosPrincipalToLocalRulesDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsAbortTimedOutTransactionsIntervalMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/ZkEnableSecureAclsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/MaxConnectionsPerIpOverridesDoc()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToBoolean(boolean)|",
      "|java+method:///kafka/server/Defaults$/MaxConnectionsPerIpOverrides()|",
      "|java+method:///kafka/server/KafkaConfig$/SslCipherSuitesDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LeaderImbalanceCheckIntervalSecondsProp()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///kafka/server/KafkaConfig$/NumNetworkThreadsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerIoMaxBytesPerSecondDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsTopicSegmentBytesDoc()|",
      "|java+method:///kafka/server/Defaults$/BrokerId()|",
      "|java+method:///kafka/server/Defaults$/ZkEnableSecureAcls()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToDouble(double)|",
      "|java+constructor:///org/apache/kafka/common/config/ConfigDef/ConfigDef()|",
      "|java+method:///kafka/server/KafkaConfig$/MetricRecordingLevelProp()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsRetentionMinutesProp()|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///kafka/server/KafkaConfig$/NumRecoveryThreadsPerDataDirDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/BrokerIdDoc()|",
      "|java+method:///kafka/server/Defaults$/NumRecoveryThreadsPerDataDir()|",
      "|java+method:///kafka/server/Defaults$/LogCleanerEnable()|",
      "|java+method:///kafka/server/Defaults$/SslKeyManagerAlgorithm()|",
      "|java+method:///kafka/server/KafkaConfig$/HostNameDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerMinCleanRatioProp()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetCommitRequiredAcksDoc()|",
      "|java+method:///kafka/server/Defaults$/LogCleanerThreads()|",
      "|java+method:///kafka/server/KafkaConfig$/DeleteRecordsPurgatoryPurgeIntervalRequestsProp()|",
      "|java+method:///kafka/server/Defaults$/SslClientAuthNone()|",
      "|java+method:///kafka/server/Defaults$/ProducerQuotaBytesPerSecondDefault()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRetentionBytesDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerMinCompactionLagMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicationQuotaWindowSizeSecondsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/GroupMinSessionTimeoutMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/MetricNumSamplesDoc()|",
      "|java+method:///kafka/server/Defaults$/NumQuotaSamples()|",
      "|java+method:///kafka/server/KafkaConfig$/AdvertisedListenersProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaLagTimeMaxMsProp()|",
      "|java+method:///kafka/server/Defaults$/LogIndexIntervalBytes()|",
      "|java+method:///kafka/server/KafkaConfig$/SslTruststorePasswordDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsTopicMinISRDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetMetadataMaxSizeProp()|",
      "|java+method:///kafka/server/Defaults$/LogIndexSizeMaxBytes()|",
      "|java+method:///kafka/server/KafkaConfig$/SocketRequestMaxBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsAbortTimedOutTransactionCleanupIntervalMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SslKeystoreLocationProp()|",
      "|java+method:///kafka/server/Defaults$/GroupMaxSessionTimeoutMs()|",
      "|java+method:///kafka/server/Defaults$/QuotaWindowSizeSeconds()|",
      "|java+method:///kafka/server/KafkaConfig$/SocketSendBufferBytesDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/AutoCreateTopicsEnableDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/ListenerSecurityProtocolMapDoc()|",
      "|java+method:///kafka/server/Defaults$/ControllerSocketTimeoutMs()|",
      "|java+method:///kafka/server/KafkaConfig$/GroupInitialRebalanceDelayMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsTopicPartitionsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanupPolicyDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/SslTruststoreTypeDoc()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///kafka/server/Defaults$/TransactionalIdExpirationMs()|",
      "|java+method:///kafka/server/KafkaConfig$/SslProtocolProp()|",
      "|java+method:///kafka/server/KafkaConfig$/NumPartitionsDoc()|",
      "|java+method:///kafka/server/Defaults$/NumReplicationQuotaSamples()|",
      "|java+method:///kafka/server/KafkaConfig$/ControlledShutdownMaxRetriesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogFlushIntervalMessagesDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogFlushOffsetCheckpointIntervalMsProp()|",
      "|java+method:///kafka/server/Defaults$/OffsetsTopicPartitions()|",
      "|java+method:///kafka/server/Defaults$/TransactionsMaxTimeoutMs()|",
      "|java+method:///kafka/server/KafkaConfig$/FetchPurgatoryPurgeIntervalRequestsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/MetricSampleWindowMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/MessageMaxBytesDoc()|",
      "|java+method:///kafka/server/Defaults$/RequestTimeoutMs()|",
      "|java+method:///kafka/server/KafkaConfig$/AdvertisedHostNameDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsTopicSegmentBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ControlledShutdownEnableProp()|",
      "|java+method:///kafka/server/Defaults$/AuthorizerClassName()|",
      "|java+method:///kafka/server/KafkaConfig$/LogFlushSchedulerIntervalMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/BrokerIdGenerationEnableDoc()|",
      "|java+method:///kafka/server/Defaults$/LogCleanerIoBufferSize()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///kafka/server/KafkaConfig$/MinInSyncReplicasDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/InterBrokerSecurityProtocolDoc()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/config/ConfigDef/define(java.lang.String,org.apache.kafka.common.config.ConfigDef$Type,org.apache.kafka.common.config.ConfigDef$Importance,java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig$/LogMessageTimestampTypeDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/SslEnabledProtocolsProp()|",
      "|java+method:///kafka/server/Defaults$/ConsumerQuotaBytesPerSecondDefault()|",
      "|java+method:///kafka/server/Defaults$/BackgroundThreads()|",
      "|java+method:///kafka/server/Defaults$/LogCleanerBackoffMs()|",
      "|java+method:///kafka/server/Defaults$/DefaultReplicationFactor()|",
      "|java+method:///kafka/server/KafkaConfig$/SslKeyPasswordDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerDeleteRetentionMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsRemoveExpiredTransactionsIntervalMsDoc()|",
      "|java+method:///kafka/server/Defaults$/LogMessageTimestampDifferenceMaxMs()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsLoadBufferSizeProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaFetchMaxBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogDirProp()|",
      "|java+method:///kafka/server/Defaults$/LogDeleteDelayMs()|",
      "|java+method:///kafka/server/Defaults$/LogCleanerDedupeBufferSize()|",
      "|java+method:///kafka/server/Defaults$/LogSegmentBytes()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaFetchBackoffMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsTopicReplicationFactorDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/SslTrustManagerAlgorithmDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerDedupeBufferLoadFactorDoc()|",
      "|java+method:///kafka/server/Defaults$/SaslKerberosMinTimeBeforeRelogin()|",
      "|java+method:///scala/Predef$/int2Integer(int)|",
      "|java+method:///kafka/server/KafkaConfig$/ConnectionsMaxIdleMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/DeleteTopicEnableProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRetentionTimeMillisDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogFlushStartOffsetCheckpointIntervalMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ControlledShutdownRetryBackoffMsProp()|",
      "|java+method:///kafka/server/Defaults$/ReplicaFetchMinBytes()|",
      "|java+method:///kafka/server/Defaults$/SaslMechanismInterBrokerProtocol()|",
      "|java+method:///kafka/server/KafkaConfig$/PrincipalBuilderClassDoc()|",
      "|java+method:///kafka/server/Defaults$/SocketReceiveBufferBytes()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosTicketRenewJitterDoc()|",
      "|java+method:///kafka/server/Defaults$/OffsetCommitTimeoutMs()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaFetchResponseMaxBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRetentionTimeHoursProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SslKeystoreTypeProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanupIntervalMsProp()|",
      "|java+method:///kafka/server/Defaults$/ReplicaSocketTimeoutMs()|",
      "|java+method:///org/apache/kafka/common/config/ConfigDef$ValidList/in(java.lang.String%5B%5D)|",
      "|java+method:///kafka/server/Defaults$/SaslKerberosTicketRenewWindowFactor()|",
      "|java+method:///kafka/server/Defaults$/TransactionsLoadBufferSize()|",
      "|java+method:///kafka/server/KafkaConfig$/LogDirsDoc()|",
      "|java+method:///kafka/server/Defaults$/LogMessageFormatVersion()|",
      "|java+method:///org/apache/kafka/common/config/ConfigDef$Range/atLeast(java.lang.Number)|",
      "|java+method:///kafka/server/KafkaConfig$/SslKeystorePasswordProp()|",
      "|java+method:///kafka/server/Defaults$/SslClientAuthRequired()|",
      "|java+method:///kafka/server/KafkaConfig$/SslTruststoreLocationDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogFlushIntervalMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/InterBrokerProtocolVersionProp()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///kafka/server/Defaults$/NumIoThreads()|",
      "|java+method:///kafka/server/KafkaConfig$/LogDirsProp()|",
      "|java+method:///kafka/server/Defaults$/ReplicaHighWatermarkCheckpointIntervalMs()|",
      "|java+method:///kafka/server/Defaults$/ProducerPurgatoryPurgeIntervalRequests()|",
      "|java+method:///kafka/server/KafkaConfig$/SslKeystorePasswordDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanupIntervalMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/SslTruststoreLocationProp()|",
      "|java+method:///kafka/server/Defaults$/SslClientAuth()|",
      "|java+method:///kafka/server/KafkaConfig$/InterBrokerProtocolVersionDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogFlushIntervalMsDoc()|",
      "|java+method:///kafka/server/Defaults$/MaxReservedBrokerId()|",
      "|java+method:///kafka/server/KafkaConfig$/PrincipalBuilderClassProp()|",
      "|java+method:///kafka/server/Defaults$/NumReplicaFetchers()|",
      "|java+method:///kafka/server/Defaults$/CompressionType()|",
      "|java+method:///kafka/server/KafkaConfig$/ControlledShutdownRetryBackoffMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogFlushStartOffsetCheckpointIntervalMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRetentionTimeMillisProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaFetchResponseMaxBytesDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosTicketRenewJitterProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRetentionTimeHoursDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/SslKeystoreTypeDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogDirDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaFetchMaxBytesDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsLoadBufferSizeDoc()|",
      "|java+method:///kafka/server/Defaults$/LogPreAllocateEnable()|",
      "|java+method:///kafka/server/KafkaConfig$/SslKeyPasswordProp()|",
      "|java+method:///kafka/server/Defaults$/ZkSyncTimeMs()|",
      "|java+method:///kafka/server/Defaults$/NumNetworkThreads()|",
      "|java+method:///kafka/server/Defaults$/LeaderImbalanceCheckIntervalSeconds()|",
      "|java+method:///kafka/server/Defaults$/OffsetsRetentionMinutes()|",
      "|java+method:///kafka/server/KafkaConfig$/DeleteTopicEnableDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/ConnectionsMaxIdleMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerDedupeBufferLoadFactorProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SslTrustManagerAlgorithmProp()|",
      "|java+method:///kafka/server/Defaults$/OffsetsTopicCompressionCodec()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerDeleteRetentionMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaFetchBackoffMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsTopicReplicationFactorProp()|",
      "|java+method:///kafka/server/Defaults$/LogCleanerMinCleanRatio()|",
      "|java+method:///kafka/server/KafkaConfig$/InterBrokerSecurityProtocolProp()|",
      "|java+method:///kafka/server/KafkaConfig$/MinInSyncReplicasProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRetentionTimeMinsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/BrokerIdGenerationEnableProp()|",
      "|java+method:///kafka/server/Defaults$/DeleteRecordsPurgatoryPurgeIntervalRequests()|",
      "|java+method:///kafka/server/Defaults$/ReplicationQuotaWindowSizeSeconds()|",
      "|java+method:///scala/collection/Seq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///kafka/server/KafkaConfig$/LogMessageTimestampTypeProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogFlushSchedulerIntervalMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/SslEnabledProtocolsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/MessageMaxBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/MetricSampleWindowMsProp()|",
      "|java+method:///kafka/server/Defaults$/OffsetMetadataMaxSize()|",
      "|java+method:///kafka/server/KafkaConfig$/ControlledShutdownEnableDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/AdvertisedHostNameProp()|",
      "|java+method:///kafka/server/Defaults$/SocketRequestMaxBytes()|",
      "|java+method:///kafka/server/KafkaConfig$/FetchPurgatoryPurgeIntervalRequestsDoc()|",
      "|java+method:///kafka/server/Defaults$/Port()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsTopicSegmentBytesDoc()|",
      "|java+method:///kafka/server/Defaults$/SaslKerberosKinitCmd()|",
      "|java+method:///kafka/server/Defaults$/ReplicaLagTimeMaxMs()|",
      "|java+method:///kafka/server/Defaults$/TransactionsTopicReplicationFactor()|",
      "|java+method:///kafka/server/Defaults$/TransactionsTopicPartitions()|",
      "|java+method:///kafka/server/Defaults$/Compact()|",
      "|java+method:///kafka/server/Defaults$/LeaderImbalancePerBrokerPercentage()|",
      "|java+method:///kafka/server/KafkaConfig$/LogFlushIntervalMessagesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ControlledShutdownMaxRetriesDoc()|",
      "|java+method:///kafka/server/Defaults$/LogRollJitterHours()|",
      "|java+method:///kafka/server/Defaults$/ZkSessionTimeoutMs()|",
      "|java+method:///kafka/server/KafkaConfig$/SslTruststoreTypeProp()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///kafka/server/Defaults$/SslProtocol()|",
      "|java+method:///kafka/server/KafkaConfig$/NumPartitionsProp()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///kafka/server/KafkaConfig$/LogFlushOffsetCheckpointIntervalMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/SslProtocolDoc()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaLagTimeMaxMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsTopicPartitionsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsTopicMinISRProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ListenerSecurityProtocolMapProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SocketRequestMaxBytesDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/AutoCreateTopicsEnableProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SocketSendBufferBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetMetadataMaxSizeDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanupPolicyProp()|",
      "|java+method:///kafka/server/KafkaConfig$/GroupInitialRebalanceDelayMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/SslKeystoreLocationDoc()|",
      "|java+method:///kafka/server/Defaults$/MetricRecordingLevel()|",
      "|java+method:///kafka/server/KafkaConfig$/SslTruststorePasswordProp()|",
      "|java+method:///kafka/server/Defaults$/FetchPurgatoryPurgeIntervalRequests()|"
    ],
    "v2Body": [
      "|java+method:///kafka/server/Defaults$/SslEnabledProtocols()|",
      "|java+method:///kafka/server/KafkaConfig$/AdvertisedListenersDoc()|",
      "|java+method:///kafka/server/Defaults$/GroupMinSessionTimeoutMs()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetCommitRequiredAcksProp()|",
      "|java+method:///kafka/server/KafkaConfig$/HostNameProp()|",
      "|java+method:///kafka/server/KafkaConfig$/MetricNumSamplesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRetentionBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/DeleteRecordsPurgatoryPurgeIntervalRequestsDoc()|",
      "|java+method:///kafka/server/Defaults$/LogFlushSchedulerIntervalMs()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerMinCleanRatioDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerMinCompactionLagMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/GroupMinSessionTimeoutMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicationQuotaWindowSizeSecondsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerIoMaxBytesPerSecondProp()|",
      "|java+method:///kafka/server/Defaults$/GroupInitialRebalanceDelayMs()|",
      "|java+method:///kafka/server/KafkaConfig$/SslCipherSuitesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/MaxConnectionsPerIpOverridesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ZkEnableSecureAclsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/NumNetworkThreadsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LeaderImbalanceCheckIntervalSecondsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/BrokerIdProp()|",
      "|java+method:///kafka/server/Defaults$/OffsetsLoadBufferSize()|",
      "|java+method:///kafka/server/KafkaConfig$/NumRecoveryThreadsPerDataDirProp()|",
      "|java+method:///kafka/server/Defaults$/LogCleanerDeleteRetentionMs()|",
      "|java+method:///kafka/server/Defaults$/DeleteTopicEnable()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsTopicSegmentBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsRetentionMinutesDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/MetricRecordingLevelDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaFetchWaitMaxMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ProducerQuotaBytesPerSecondDefaultProp()|",
      "|java+method:///kafka/server/Defaults$/LogFlushOffsetCheckpointIntervalMs()|",
      "|java+method:///kafka/server/KafkaConfig$/MaxReservedBrokerIdDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRollTimeJitterHoursProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaSocketReceiveBufferBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ZkSessionTimeoutMsDoc()|",
      "|java+method:///kafka/server/Defaults$/LogFlushStartOffsetCheckpointIntervalMs()|",
      "|java+method:///kafka/server/KafkaConfig$/MaxConnectionsPerIpProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerEnableProp()|",
      "|java+method:///kafka/server/Defaults$/SslKeystoreType()|",
      "|java+method:///kafka/server/KafkaConfig$/CompressionTypeDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosPrincipalToLocalRulesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SslKeyManagerAlgorithmProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRollTimeJitterMillisDoc()|",
      "|java+method:///kafka/server/Defaults$/ControlledShutdownMaxRetries()|",
      "|java+method:///kafka/server/KafkaConfig$/LogIndexSizeMaxBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SslClientAuthDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/ListenersDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRollTimeMillisProp()|",
      "|java+method:///kafka/server/KafkaConfig$/AutoLeaderRebalanceEnableProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosKinitCmdDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRollTimeHoursDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/InterBrokerListenerNameProp()|",
      "|java+method:///kafka/server/KafkaConfig$/PortDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/QuotaWindowSizeSecondsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/GroupMaxSessionTimeoutMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LeaderImbalancePerBrokerPercentageDoc()|",
      "|java+method:///kafka/server/Defaults$/OffsetsTopicSegmentBytes()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsTopicReplicationFactorDoc()|",
      "|java+method:///kafka/server/Defaults$/ControlledShutdownEnable()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslEnabledMechanismsProp()|",
      "|java+method:///kafka/server/Defaults$/TransactionsAbortTimedOutTransactionsCleanupIntervalMS()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosServiceNameDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/RackProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SslEndpointIdentificationAlgorithmDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogConfigPrefix()|",
      "|java+method:///kafka/server/KafkaConfig$/QueuedMaxRequestsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsRetentionCheckIntervalMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/NumReplicationQuotaSamplesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/UncleanLeaderElectionEnableProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogMessageFormatVersionDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosTicketRenewWindowFactorDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/MetricReporterClassesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogPreAllocateEnableDoc()|",
      "|java+method:///org/apache/kafka/common/config/ConfigDef$ValidString/in(java.lang.String%5B%5D)|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsTopicPartitionsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ZkSyncTimeMsDoc()|",
      "|java+method:///kafka/server/Defaults$/ConnectionsMaxIdleMs()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsTopicCompressionCodecDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsMaxTimeoutMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/RequestTimeoutMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetCommitTimeoutMsDoc()|",
      "|java+method:///kafka/server/Defaults$/SaslKerberosTicketRenewJitter()|",
      "|java+method:///kafka/server/Defaults$/LogDir()|",
      "|java+method:///kafka/server/KafkaConfig$/SslProviderDoc()|",
      "|java+method:///kafka/server/Defaults$/ReplicaFetchMaxBytes()|",
      "|java+method:///kafka/server/KafkaConfig$/AdvertisedPortDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/ConsumerQuotaBytesPerSecondDefaultProp()|",
      "|java+method:///kafka/server/KafkaConfig$/CreateTopicPolicyClassNameDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerThreadsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsRemoveExpiredTransactionalIdCleanupIntervalMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/NumReplicaFetchersDoc()|",
      "|java+method:///kafka/server/Defaults$/ReplicaFetchBackoffMs()|",
      "|java+method:///kafka/message/Message$/MinMessageOverhead()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerIoBufferSizeProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogSegmentBytesDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerBackoffMsDoc()|",
      "|java+method:///kafka/server/Defaults$/OffsetsTopicReplicationFactor()|",
      "|java+method:///kafka/server/Defaults$/ControlledShutdownRetryBackoffMs()|",
      "|java+method:///kafka/server/Defaults$/ReplicaFetchResponseMaxBytes()|",
      "|java+method:///kafka/server/KafkaConfig$/AlterConfigPolicyClassNameProp()|",
      "|java+method:///kafka/server/KafkaConfig$/NumQuotaSamplesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ZkConnectionTimeoutMsProp()|",
      "|java+method:///kafka/server/Defaults$/LogMessageTimestampType()|",
      "|java+method:///kafka/server/KafkaConfig$/NumIoThreadsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaHighWatermarkCheckpointIntervalMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/QueuedMaxBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ProducerPurgatoryPurgeIntervalRequestsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/SslSecureRandomImplementationProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerDedupeBufferSizeProp()|",
      "|java+method:///kafka/server/Defaults$/LogCleanupIntervalMs()|",
      "|java+method:///kafka/server/KafkaConfig$/LogMessageTimestampDifferenceMaxMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRetentionTimeMinutesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/DefaultReplicationFactorProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogDeleteDelayMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogIndexIntervalBytesProp()|",
      "|java+method:///kafka/server/Defaults$/InterBrokerProtocolVersion()|",
      "|java+method:///kafka/server/KafkaConfig$/BackgroundThreadsDoc()|",
      "|java+method:///kafka/server/Defaults$/MinInSyncReplicas()|",
      "|java+method:///kafka/server/Defaults$/Delete()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosMinTimeBeforeReloginProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ControllerSocketTimeoutMsProp()|",
      "|java+method:///kafka/server/Defaults$/InterBrokerSecurityProtocol()|",
      "|java+method:///kafka/server/Defaults$/QueuedMaxRequestBytes()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaSocketTimeoutMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslMechanismInterBrokerProtocolProp()|",
      "|java+method:///kafka/server/KafkaConfig$/AuthorizerClassNameDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaFetchMinBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionalIdExpirationMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsLoadBufferSizeDoc()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToShort(short)|",
      "|java+method:///kafka/server/KafkaConfig$/ZkConnectProp()|",
      "|java+method:///org/apache/kafka/common/security/auth/SecurityProtocol/names()|",
      "|java+method:///kafka/server/KafkaConfig$/SocketReceiveBufferBytesProp()|",
      "|java+method:///kafka/server/Defaults$/MessageMaxBytes()|",
      "|java+method:///kafka/server/KafkaConfig$/SocketReceiveBufferBytesDoc()|",
      "|java+method:///kafka/server/Defaults$/SslTruststoreType()|",
      "|java+method:///kafka/server/KafkaConfig$/ZkConnectDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionalIdExpirationMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogPreAllocateProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaFetchMinBytesDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/AuthorizerClassNameProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaSocketTimeoutMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslMechanismInterBrokerProtocolDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsLoadBufferSizeProp()|",
      "|java+method:///kafka/server/Defaults$/NumPartitions()|",
      "|java+method:///kafka/server/KafkaConfig$/LogMessageTimestampDifferenceMaxMsDoc()|",
      "|java+method:///kafka/server/Defaults$/SocketSendBufferBytes()|",
      "|java+method:///kafka/server/KafkaConfig$/SslSecureRandomImplementationDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/ZkConnectionTimeoutMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/BackgroundThreadsProp()|",
      "|java+method:///kafka/server/Defaults$/LogRollHours()|",
      "|java+method:///kafka/server/KafkaConfig$/LogDeleteDelayMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerDedupeBufferSizeDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/ProducerPurgatoryPurgeIntervalRequestsProp()|",
      "|java+method:///kafka/server/Defaults$/ListenerSecurityProtocolMap()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaHighWatermarkCheckpointIntervalMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/NumIoThreadsProp()|",
      "|java+method:///kafka/server/Defaults$/LogCleanerDedupeBufferLoadFactor()|",
      "|java+method:///kafka/server/Defaults$/SslTrustManagerAlgorithm()|",
      "|java+method:///kafka/server/KafkaConfig$/LogIndexIntervalBytesDoc()|",
      "|java+method:///kafka/server/Defaults$/TransactionsRemoveExpiredTransactionsCleanupIntervalMS()|",
      "|java+method:///kafka/server/KafkaConfig$/ControllerSocketTimeoutMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosMinTimeBeforeReloginDoc()|",
      "|java+method:///kafka/server/Defaults$/TransactionsTopicMinISR()|",
      "|java+method:///kafka/server/KafkaConfig$/DefaultReplicationFactorDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/CreateTopicPolicyClassNameProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerBackoffMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/AdvertisedPortProp()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///kafka/server/KafkaConfig$/ConsumerQuotaBytesPerSecondDefaultDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogSegmentBytesProp()|",
      "|java+method:///kafka/server/Defaults$/SslClientAuthRequested()|",
      "|java+method:///kafka/server/KafkaConfig$/NumReplicaFetchersProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerIoBufferSizeDoc()|",
      "|java+method:///kafka/server/Defaults$/BrokerIdGenerationEnable()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerThreadsDoc()|",
      "|java+method:///kafka/server/Defaults$/LogRetentionBytes()|",
      "|java+method:///kafka/server/KafkaConfig$/AlterConfigPolicyClassNameDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/NumQuotaSamplesDoc()|",
      "|java+method:///kafka/server/Defaults$/TransactionsTopicSegmentBytes()|",
      "|java+method:///kafka/server/Defaults$/LogCleanerIoMaxBytesPerSecond()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsTopicCompressionCodecProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SslProviderProp()|",
      "|java+method:///kafka/server/Defaults$/MetricSampleWindowMs()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsTopicPartitionsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetCommitTimeoutMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/RequestTimeoutMsDoc()|",
      "|java+method:///org/apache/kafka/common/config/ConfigDef/define(java.lang.String,org.apache.kafka.common.config.ConfigDef$Type,java.lang.Object,org.apache.kafka.common.config.ConfigDef$Validator,org.apache.kafka.common.config.ConfigDef$Importance,java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig$/ZkSyncTimeMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsMaxTimeoutMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/QueuedMaxRequestsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/RackDoc()|",
      "|java+method:///kafka/server/Defaults$/SaslKerberosPrincipalToLocalRules()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosTicketRenewWindowFactorProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogMessageFormatVersionProp()|",
      "|java+method:///kafka/server/KafkaConfig$/MetricReporterClassesDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/NumReplicationQuotaSamplesDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsRetentionCheckIntervalMsDoc()|",
      "|java+method:///kafka/server/Defaults$/MaxConnectionsPerIp()|",
      "|java+method:///kafka/server/Defaults$/ReplicaSocketReceiveBufferBytes()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosServiceNameProp()|",
      "|java+method:///kafka/server/Defaults$/LogFlushIntervalMessages()|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///kafka/server/Defaults$/ReplicaFetchWaitMaxMs()|",
      "|java+method:///kafka/server/KafkaConfig$/UncleanLeaderElectionEnableDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/SslEndpointIdentificationAlgorithmProp()|",
      "|java+method:///kafka/server/Defaults$/SaslEnabledMechanisms()|",
      "|java+method:///kafka/server/KafkaConfig$/InterBrokerListenerNameDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/SslClientAuthProp()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsTopicReplicationFactorProp()|",
      "|java+method:///kafka/server/KafkaConfig$/AutoLeaderRebalanceEnableDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRollTimeMillisDoc()|",
      "|java+method:///org/apache/kafka/common/config/ConfigDef/define(java.lang.String,org.apache.kafka.common.config.ConfigDef$Type,java.lang.Object,org.apache.kafka.common.config.ConfigDef$Importance,java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig$/PortProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRollTimeHoursProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosKinitCmdProp()|",
      "|java+method:///kafka/server/KafkaConfig$/GroupMaxSessionTimeoutMsDoc()|",
      "|java+method:///kafka/server/Defaults$/LogCleanupPolicy()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslEnabledMechanismsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LeaderImbalancePerBrokerPercentageProp()|",
      "|java+method:///kafka/server/Defaults$/AutoLeaderRebalanceEnable()|",
      "|java+method:///kafka/server/Defaults$/AutoCreateTopicsEnable()|",
      "|java+method:///kafka/server/KafkaConfig$/LogIndexSizeMaxBytesDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/ListenersProp()|",
      "|java+method:///kafka/server/KafkaConfig$/QuotaWindowSizeSecondsDoc()|",
      "|java+method:///kafka/server/Defaults$/MetricReporterClasses()|",
      "|java+method:///kafka/server/Defaults$/OffsetCommitRequiredAcks()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRollTimeJitterMillisProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ZkSessionTimeoutMsProp()|",
      "|java+method:///kafka/server/Defaults$/LogCleanerMinCompactionLagMs()|",
      "|java+method:///kafka/server/KafkaConfig$/CompressionTypeProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ProducerQuotaBytesPerSecondDefaultDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaFetchWaitMaxMsDoc()|",
      "|java+method:///kafka/server/Defaults$/LogRetentionHours()|",
      "|java+method:///kafka/server/Defaults$/MetricNumSamples()|",
      "|java+method:///kafka/server/KafkaConfig$/MaxReservedBrokerIdProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaSocketReceiveBufferBytesDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRollTimeJitterHoursDoc()|",
      "|java+method:///kafka/server/Defaults$/UncleanLeaderElectionEnable()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerEnableDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/MaxConnectionsPerIpDoc()|",
      "|java+method:///kafka/server/Defaults$/OffsetsRetentionCheckIntervalMs()|",
      "|java+method:///kafka/server/Defaults$/HostName()|",
      "|java+method:///kafka/server/Defaults$/QueuedMaxRequests()|",
      "|java+method:///scala/collection/TraversableOnce/mkString(java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig$/SslKeyManagerAlgorithmDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosPrincipalToLocalRulesDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsAbortTimedOutTransactionsIntervalMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/ZkEnableSecureAclsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/MaxConnectionsPerIpOverridesDoc()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToBoolean(boolean)|",
      "|java+method:///kafka/server/Defaults$/MaxConnectionsPerIpOverrides()|",
      "|java+method:///kafka/server/KafkaConfig$/SslCipherSuitesDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LeaderImbalanceCheckIntervalSecondsProp()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///kafka/server/KafkaConfig$/NumNetworkThreadsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerIoMaxBytesPerSecondDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsTopicSegmentBytesDoc()|",
      "|java+method:///kafka/server/Defaults$/BrokerId()|",
      "|java+method:///kafka/server/Defaults$/ZkEnableSecureAcls()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToDouble(double)|",
      "|java+constructor:///org/apache/kafka/common/config/ConfigDef/ConfigDef()|",
      "|java+method:///kafka/server/KafkaConfig$/MetricRecordingLevelProp()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsRetentionMinutesProp()|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///kafka/server/KafkaConfig$/NumRecoveryThreadsPerDataDirDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/BrokerIdDoc()|",
      "|java+method:///kafka/server/Defaults$/NumRecoveryThreadsPerDataDir()|",
      "|java+method:///kafka/server/Defaults$/LogCleanerEnable()|",
      "|java+method:///kafka/server/Defaults$/SslKeyManagerAlgorithm()|",
      "|java+method:///kafka/server/KafkaConfig$/HostNameDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerMinCleanRatioProp()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetCommitRequiredAcksDoc()|",
      "|java+method:///kafka/server/Defaults$/LogCleanerThreads()|",
      "|java+method:///kafka/server/KafkaConfig$/DeleteRecordsPurgatoryPurgeIntervalRequestsProp()|",
      "|java+method:///kafka/server/Defaults$/SslClientAuthNone()|",
      "|java+method:///kafka/server/Defaults$/ProducerQuotaBytesPerSecondDefault()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRetentionBytesDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerMinCompactionLagMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicationQuotaWindowSizeSecondsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/GroupMinSessionTimeoutMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/MetricNumSamplesDoc()|",
      "|java+method:///kafka/server/Defaults$/NumQuotaSamples()|",
      "|java+method:///kafka/server/KafkaConfig$/AdvertisedListenersProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaLagTimeMaxMsProp()|",
      "|java+method:///kafka/server/Defaults$/LogIndexIntervalBytes()|",
      "|java+method:///kafka/server/KafkaConfig$/SslTruststorePasswordDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsTopicMinISRDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetMetadataMaxSizeProp()|",
      "|java+method:///kafka/server/Defaults$/LogIndexSizeMaxBytes()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsAbortTimedOutTransactionCleanupIntervalMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SslKeystoreLocationProp()|",
      "|java+method:///kafka/server/Defaults$/GroupMaxSessionTimeoutMs()|",
      "|java+method:///kafka/server/Defaults$/QuotaWindowSizeSeconds()|",
      "|java+method:///kafka/server/KafkaConfig$/SocketSendBufferBytesDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/AutoCreateTopicsEnableDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/ListenerSecurityProtocolMapDoc()|",
      "|java+method:///kafka/server/Defaults$/ControllerSocketTimeoutMs()|",
      "|java+method:///kafka/server/KafkaConfig$/GroupInitialRebalanceDelayMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SocketRequestMaxBytesProp()|",
      "|java+method:///scala/collection/JavaConverters$/asScalaBufferConverter(java.util.List)|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsTopicPartitionsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanupPolicyDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/SslTruststoreTypeDoc()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///kafka/server/Defaults$/TransactionalIdExpirationMs()|",
      "|java+method:///kafka/server/KafkaConfig$/SslProtocolProp()|",
      "|java+method:///kafka/server/KafkaConfig$/NumPartitionsDoc()|",
      "|java+method:///kafka/server/Defaults$/NumReplicationQuotaSamples()|",
      "|java+method:///kafka/server/KafkaConfig$/ControlledShutdownMaxRetriesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogFlushIntervalMessagesDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogFlushOffsetCheckpointIntervalMsProp()|",
      "|java+method:///kafka/server/Defaults$/OffsetsTopicPartitions()|",
      "|java+method:///kafka/server/Defaults$/TransactionsMaxTimeoutMs()|",
      "|java+method:///kafka/server/KafkaConfig$/FetchPurgatoryPurgeIntervalRequestsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/MetricSampleWindowMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/MessageMaxBytesDoc()|",
      "|java+method:///kafka/server/Defaults$/RequestTimeoutMs()|",
      "|java+method:///kafka/server/KafkaConfig$/AdvertisedHostNameDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsTopicSegmentBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ControlledShutdownEnableProp()|",
      "|java+method:///kafka/server/Defaults$/AuthorizerClassName()|",
      "|java+method:///kafka/server/KafkaConfig$/LogFlushSchedulerIntervalMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/QueuedMaxRequestBytesDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/BrokerIdGenerationEnableDoc()|",
      "|java+method:///kafka/server/Defaults$/LogCleanerIoBufferSize()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///kafka/server/KafkaConfig$/MinInSyncReplicasDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/InterBrokerSecurityProtocolDoc()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/config/ConfigDef/define(java.lang.String,org.apache.kafka.common.config.ConfigDef$Type,org.apache.kafka.common.config.ConfigDef$Importance,java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig$/LogMessageTimestampTypeDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/SslEnabledProtocolsProp()|",
      "|java+method:///kafka/server/Defaults$/ConsumerQuotaBytesPerSecondDefault()|",
      "|java+method:///kafka/server/Defaults$/BackgroundThreads()|",
      "|java+method:///kafka/server/Defaults$/LogCleanerBackoffMs()|",
      "|java+method:///kafka/server/Defaults$/DefaultReplicationFactor()|",
      "|java+method:///kafka/server/KafkaConfig$/SslKeyPasswordDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerDeleteRetentionMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsRemoveExpiredTransactionsIntervalMsDoc()|",
      "|java+method:///kafka/server/Defaults$/LogMessageTimestampDifferenceMaxMs()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsLoadBufferSizeProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaFetchMaxBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogDirProp()|",
      "|java+method:///kafka/server/Defaults$/LogDeleteDelayMs()|",
      "|java+method:///kafka/server/Defaults$/LogCleanerDedupeBufferSize()|",
      "|java+method:///kafka/server/Defaults$/LogSegmentBytes()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaFetchBackoffMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsTopicReplicationFactorDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/SslTrustManagerAlgorithmDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerDedupeBufferLoadFactorDoc()|",
      "|java+method:///kafka/server/Defaults$/SaslKerberosMinTimeBeforeRelogin()|",
      "|java+method:///scala/Predef$/int2Integer(int)|",
      "|java+method:///kafka/server/KafkaConfig$/ConnectionsMaxIdleMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/DeleteTopicEnableProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRetentionTimeMillisDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogFlushStartOffsetCheckpointIntervalMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ControlledShutdownRetryBackoffMsProp()|",
      "|java+method:///kafka/server/Defaults$/ReplicaFetchMinBytes()|",
      "|java+method:///kafka/server/Defaults$/SaslMechanismInterBrokerProtocol()|",
      "|java+method:///kafka/server/KafkaConfig$/PrincipalBuilderClassDoc()|",
      "|java+method:///kafka/server/Defaults$/SocketReceiveBufferBytes()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosTicketRenewJitterDoc()|",
      "|java+method:///kafka/server/Defaults$/OffsetCommitTimeoutMs()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaFetchResponseMaxBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRetentionTimeHoursProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SslKeystoreTypeProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanupIntervalMsProp()|",
      "|java+method:///kafka/server/Defaults$/ReplicaSocketTimeoutMs()|",
      "|java+method:///org/apache/kafka/common/config/ConfigDef$ValidList/in(java.lang.String%5B%5D)|",
      "|java+method:///kafka/server/Defaults$/SaslKerberosTicketRenewWindowFactor()|",
      "|java+method:///kafka/server/Defaults$/TransactionsLoadBufferSize()|",
      "|java+method:///kafka/server/KafkaConfig$/LogDirsDoc()|",
      "|java+method:///kafka/server/Defaults$/LogMessageFormatVersion()|",
      "|java+method:///org/apache/kafka/common/config/ConfigDef$Range/atLeast(java.lang.Number)|",
      "|java+method:///kafka/server/KafkaConfig$/SslKeystorePasswordProp()|",
      "|java+method:///kafka/server/Defaults$/SslClientAuthRequired()|",
      "|java+method:///kafka/server/KafkaConfig$/SslTruststoreLocationDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogFlushIntervalMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/InterBrokerProtocolVersionProp()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///kafka/server/Defaults$/NumIoThreads()|",
      "|java+method:///kafka/server/KafkaConfig$/LogDirsProp()|",
      "|java+method:///kafka/server/Defaults$/ReplicaHighWatermarkCheckpointIntervalMs()|",
      "|java+method:///kafka/server/Defaults$/ProducerPurgatoryPurgeIntervalRequests()|",
      "|java+method:///kafka/server/KafkaConfig$/SslKeystorePasswordDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanupIntervalMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/SslTruststoreLocationProp()|",
      "|java+method:///kafka/server/Defaults$/SslClientAuth()|",
      "|java+method:///kafka/server/KafkaConfig$/InterBrokerProtocolVersionDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogFlushIntervalMsDoc()|",
      "|java+method:///kafka/server/Defaults$/MaxReservedBrokerId()|",
      "|java+method:///kafka/server/KafkaConfig$/PrincipalBuilderClassProp()|",
      "|java+method:///kafka/server/Defaults$/NumReplicaFetchers()|",
      "|java+method:///kafka/server/Defaults$/CompressionType()|",
      "|java+method:///kafka/server/KafkaConfig$/ControlledShutdownRetryBackoffMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogFlushStartOffsetCheckpointIntervalMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRetentionTimeMillisProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaFetchResponseMaxBytesDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/SaslKerberosTicketRenewJitterProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRetentionTimeHoursDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/SslKeystoreTypeDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogDirDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaFetchMaxBytesDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsLoadBufferSizeDoc()|",
      "|java+method:///kafka/server/Defaults$/LogPreAllocateEnable()|",
      "|java+method:///kafka/server/KafkaConfig$/SslKeyPasswordProp()|",
      "|java+method:///kafka/server/Defaults$/ZkSyncTimeMs()|",
      "|java+method:///kafka/server/Defaults$/NumNetworkThreads()|",
      "|java+method:///kafka/server/Defaults$/LeaderImbalanceCheckIntervalSeconds()|",
      "|java+method:///kafka/server/Defaults$/OffsetsRetentionMinutes()|",
      "|java+method:///kafka/server/KafkaConfig$/DeleteTopicEnableDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/ConnectionsMaxIdleMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerDedupeBufferLoadFactorProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SslTrustManagerAlgorithmProp()|",
      "|java+method:///kafka/server/Defaults$/OffsetsTopicCompressionCodec()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerDeleteRetentionMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaFetchBackoffMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsTopicReplicationFactorProp()|",
      "|java+method:///kafka/server/Defaults$/LogCleanerMinCleanRatio()|",
      "|java+method:///kafka/server/KafkaConfig$/InterBrokerSecurityProtocolProp()|",
      "|java+method:///kafka/server/KafkaConfig$/MinInSyncReplicasProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRetentionTimeMinsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/BrokerIdGenerationEnableProp()|",
      "|java+method:///kafka/server/Defaults$/DeleteRecordsPurgatoryPurgeIntervalRequests()|",
      "|java+method:///kafka/server/Defaults$/ReplicationQuotaWindowSizeSeconds()|",
      "|java+method:///kafka/server/KafkaConfig$/LogMessageTimestampTypeProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogFlushSchedulerIntervalMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/SslEnabledProtocolsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/MessageMaxBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/MetricSampleWindowMsProp()|",
      "|java+method:///kafka/server/Defaults$/OffsetMetadataMaxSize()|",
      "|java+method:///kafka/server/KafkaConfig$/ControlledShutdownEnableDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/AdvertisedHostNameProp()|",
      "|java+method:///kafka/server/Defaults$/SocketRequestMaxBytes()|",
      "|java+method:///kafka/server/KafkaConfig$/FetchPurgatoryPurgeIntervalRequestsDoc()|",
      "|java+method:///kafka/server/Defaults$/Port()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetsTopicSegmentBytesDoc()|",
      "|java+method:///kafka/server/Defaults$/SaslKerberosKinitCmd()|",
      "|java+method:///kafka/server/Defaults$/ReplicaLagTimeMaxMs()|",
      "|java+method:///kafka/server/Defaults$/TransactionsTopicReplicationFactor()|",
      "|java+method:///kafka/server/Defaults$/TransactionsTopicPartitions()|",
      "|java+method:///kafka/server/Defaults$/Compact()|",
      "|java+method:///kafka/server/Defaults$/LeaderImbalancePerBrokerPercentage()|",
      "|java+method:///kafka/server/KafkaConfig$/LogFlushIntervalMessagesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ControlledShutdownMaxRetriesDoc()|",
      "|java+method:///kafka/server/Defaults$/LogRollJitterHours()|",
      "|java+method:///kafka/server/Defaults$/ZkSessionTimeoutMs()|",
      "|java+method:///kafka/server/KafkaConfig$/SslTruststoreTypeProp()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///kafka/server/Defaults$/SslProtocol()|",
      "|java+method:///kafka/server/KafkaConfig$/NumPartitionsProp()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///kafka/server/KafkaConfig$/LogFlushOffsetCheckpointIntervalMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/SslProtocolDoc()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///kafka/server/KafkaConfig$/ReplicaLagTimeMaxMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsTopicPartitionsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/TransactionsTopicMinISRProp()|",
      "|java+method:///kafka/server/KafkaConfig$/ListenerSecurityProtocolMapProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SocketRequestMaxBytesDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/AutoCreateTopicsEnableProp()|",
      "|java+method:///kafka/server/KafkaConfig$/SocketSendBufferBytesProp()|",
      "|java+method:///kafka/server/KafkaConfig$/OffsetMetadataMaxSizeDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanupPolicyProp()|",
      "|java+method:///kafka/server/KafkaConfig$/GroupInitialRebalanceDelayMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/SslKeystoreLocationDoc()|",
      "|java+method:///kafka/server/Defaults$/MetricRecordingLevel()|",
      "|java+method:///kafka/server/KafkaConfig$/SslTruststorePasswordProp()|",
      "|java+method:///kafka/server/Defaults$/FetchPurgatoryPurgeIntervalRequests()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/ReplicaFetcherThread$$anonfun$buildFetchRequest$1/apply(scala.Tuple2)|",
    "called": "|java+constructor:///org/apache/kafka/common/requests/FetchRequest$PartitionData/FetchRequest$PartitionData(long,long,int)|",
    "v1Body": [
      "|java+method:///kafka/cluster/Replica/logStartOffset()|",
      "|java+method:///java/util/LinkedHashMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///kafka/server/ReplicaFetcherThread/kafka$server$ReplicaFetcherThread$$fetchSize()|",
      "|java+method:///kafka/server/ReplicaManager/getReplicaOrException(org.apache.kafka.common.TopicPartition)|",
      "|java+method:///kafka/server/PartitionFetchState/isReadyForFetch()|",
      "|java+method:///kafka/server/ReplicaFetcherThread/kafka$server$ReplicaFetcherThread$$shouldFollowerThrottle(kafka.server.ReplicaQuota,org.apache.kafka.common.TopicPartition)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/server/PartitionFetchState/fetchOffset()|",
      "|java+method:///scala/Predef$/Integer2int(java.lang.Integer)|",
      "|java+constructor:///org/apache/kafka/common/requests/FetchRequest$PartitionData/FetchRequest$PartitionData(long,long,int)|"
    ],
    "v2Body": [
      "|java+method:///kafka/cluster/Replica/logStartOffset()|",
      "|java+method:///java/util/LinkedHashMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///kafka/server/ReplicaFetcherThread/kafka$server$ReplicaFetcherThread$$fetchSize()|",
      "|java+method:///kafka/server/ReplicaManager/getReplicaOrException(org.apache.kafka.common.TopicPartition)|",
      "|java+method:///kafka/server/PartitionFetchState/isReadyForFetch()|",
      "|java+method:///kafka/server/ReplicaFetcherThread/kafka$server$ReplicaFetcherThread$$shouldFollowerThrottle(kafka.server.ReplicaQuota,org.apache.kafka.common.TopicPartition)|",
      "|java+method:///scala/collection/mutable/Set/$plus$eq(java.lang.Object)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/server/PartitionFetchState/fetchOffset()|",
      "|java+method:///scala/Predef$/Integer2int(java.lang.Integer)|",
      "|java+constructor:///org/apache/kafka/common/requests/FetchRequest$PartitionData/FetchRequest$PartitionData(long,long,int)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/KafkaApis/handleCreateTopicsRequest(kafka.network.RequestChannel$Request)|",
    "called": "|java+method:///org/apache/kafka/common/requests/CreateTopicsRequest/timeout()|",
    "v1Body": [
      "|java+method:///kafka/server/KafkaApis/kafka$server$KafkaApis$$authorize(kafka.network.RequestChannel$Session,kafka.security.auth.Operation,kafka.security.auth.Resource)|",
      "|java+method:///kafka/controller/KafkaController/isActive()|",
      "|java+method:///org/apache/kafka/common/requests/CreateTopicsRequest/topics()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$56/KafkaApis$$anonfun$56(kafka.server.KafkaApis,org.apache.kafka.common.requests.CreateTopicsRequest)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$handleCreateTopicsRequest$1/KafkaApis$$anonfun$handleCreateTopicsRequest$1(kafka.server.KafkaApis,kafka.network.RequestChannel$Request,scala.collection.mutable.Map)|",
      "|java+method:///kafka/server/AdminManager/createTopics(int,boolean,scala.collection.Map,scala.Function1)|",
      "|java+method:///kafka/utils/NotNothing$/notNothingEvidence(scala.Predef$$eq$colon$eq)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$54/KafkaApis$$anonfun$54(kafka.server.KafkaApis)|",
      "|java+method:///kafka/network/RequestChannel$Request/body(scala.reflect.ClassTag,kafka.utils.NotNothing)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$55/KafkaApis$$anonfun$55(kafka.server.KafkaApis)|",
      "|java+method:///org/apache/kafka/common/requests/CreateTopicsRequest/timeout()|",
      "|java+method:///scala/collection/TraversableLike/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/collection/mutable/Map$/canBuildFrom()|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///scala/Predef$$eq$colon$eq$/tpEquals()|",
      "|java+method:///org/apache/kafka/common/requests/CreateTopicsRequest/validateOnly()|",
      "|java+method:///scala/collection/TraversableLike/partition(scala.Function1)|",
      "|java+method:///kafka/network/RequestChannel$Request/session()|",
      "|java+method:///kafka/security/auth/Resource$/ClusterResource()|",
      "|java+method:///scala/collection/JavaConverters$/mapAsScalaMapConverter(java.util.Map)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///kafka/server/KafkaApis/controller()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///kafka/server/KafkaApis/adminManager()|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/server/KafkaApis/sendResponseCallback$8(scala.collection.Map,kafka.network.RequestChannel$Request)|"
    ],
    "v2Body": [
      "|java+method:///kafka/server/KafkaApis/kafka$server$KafkaApis$$authorize(kafka.network.RequestChannel$Session,kafka.security.auth.Operation,kafka.security.auth.Resource)|",
      "|java+method:///kafka/controller/KafkaController/isActive()|",
      "|java+method:///org/apache/kafka/common/requests/CreateTopicsRequest/topics()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$45/KafkaApis$$anonfun$45(kafka.server.KafkaApis,org.apache.kafka.common.requests.CreateTopicsRequest)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$handleCreateTopicsRequest$1/KafkaApis$$anonfun$handleCreateTopicsRequest$1(kafka.server.KafkaApis,kafka.network.RequestChannel$Request,scala.collection.mutable.Map)|",
      "|java+method:///kafka/server/AdminManager/createTopics(int,boolean,scala.collection.Map,scala.Function1)|",
      "|java+method:///kafka/utils/NotNothing$/notNothingEvidence(scala.Predef$$eq$colon$eq)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$43/KafkaApis$$anonfun$43(kafka.server.KafkaApis)|",
      "|java+method:///kafka/network/RequestChannel$Request/body(scala.reflect.ClassTag,kafka.utils.NotNothing)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$44/KafkaApis$$anonfun$44(kafka.server.KafkaApis)|",
      "|java+method:///org/apache/kafka/common/requests/CreateTopicsRequest/timeout()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///scala/collection/mutable/Map$/canBuildFrom()|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///scala/Predef$$eq$colon$eq$/tpEquals()|",
      "|java+method:///org/apache/kafka/common/requests/CreateTopicsRequest/validateOnly()|",
      "|java+method:///scala/collection/TraversableLike/partition(scala.Function1)|",
      "|java+method:///kafka/network/RequestChannel$Request/session()|",
      "|java+method:///kafka/security/auth/Resource$/ClusterResource()|",
      "|java+method:///scala/collection/JavaConverters$/mapAsScalaMapConverter(java.util.Map)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///kafka/server/KafkaApis/controller()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///kafka/server/KafkaApis/adminManager()|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///scala/collection/TraversableLike/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///kafka/server/KafkaApis/sendResponseCallback$7(scala.collection.Map,kafka.network.RequestChannel$Request)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+constructor:///kafka/log/LogConfig$/LogConfig$()|",
    "called": "|java+method:///org/apache/kafka/common/config/ConfigDef$Range/atLeast(java.lang.Number)|",
    "v1Body": [
      "|java+method:///kafka/log/LogConfig$/MinCleanableRatioDoc()|",
      "|java+method:///kafka/log/LogConfig$/MessageFormatVersionDoc()|",
      "|java+method:///kafka/log/LogConfig$/Compact()|",
      "|java+method:///kafka/log/Defaults$/UncleanLeaderElectionEnable()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerMinCompactionLagMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRetentionBytesProp()|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///kafka/log/LogConfig$/CompressionTypeProp()|",
      "|java+method:///kafka/log/Defaults$/IndexInterval()|",
      "|java+method:///kafka/log/LogConfig$/FileDeleteDelayMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogIndexSizeMaxBytesProp()|",
      "|java+method:///kafka/log/LogConfig$/PreAllocateEnableProp()|",
      "|java+method:///kafka/log/LogConfig$/FollowerReplicationThrottledReplicasProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRollTimeMillisProp()|",
      "|java+method:///kafka/log/LogConfig$/LeaderReplicationThrottledReplicasDoc()|",
      "|java+method:///scala/collection/immutable/List/toArray(scala.reflect.ClassTag)|",
      "|java+method:///kafka/log/Defaults$/SegmentMs()|",
      "|java+method:///kafka/log/LogConfig$/Delete()|",
      "|java+method:///kafka/server/KafkaConfig$/UncleanLeaderElectionEnableProp()|",
      "|java+method:///kafka/log/Defaults$/DeleteRetentionMs()|",
      "|java+method:///kafka/log/LogConfig$/MinInSyncReplicasDoc()|",
      "|java+method:///kafka/log/LogConfig$/RetentionMsProp()|",
      "|java+method:///org/apache/kafka/common/config/ConfigDef$ValidString/in(java.lang.String%5B%5D)|",
      "|java+method:///kafka/log/Defaults$/MessageFormatVersion()|",
      "|java+method:///kafka/log/LogConfig$/SegmentJitterMsProp()|",
      "|java+method:///kafka/log/LogConfig$/MessageTimestampTypeProp()|",
      "|java+method:///kafka/log/LogConfig$/MinCleanableDirtyRatioProp()|",
      "|java+method:///kafka/log/LogConfig$/MaxIndexSizeDoc()|",
      "|java+method:///kafka/message/Message$/MinMessageOverhead()|",
      "|java+method:///kafka/log/LogConfig$/FlushMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogMessageTimestampDifferenceMaxMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogDeleteDelayMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogIndexIntervalBytesProp()|",
      "|java+method:///kafka/log/LogConfig$/MaxMessageBytesProp()|",
      "|java+method:///kafka/log/LogConfig$/FlushIntervalDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogPreAllocateProp()|",
      "|java+method:///kafka/log/Defaults$/MessageTimestampDifferenceMaxMs()|",
      "|java+method:///kafka/log/LogConfig$/RetentionBytesProp()|",
      "|java+method:///kafka/log/LogConfig$/FlushMsProp()|",
      "|java+method:///kafka/log/Defaults$/RetentionSize()|",
      "|java+method:///kafka/log/Defaults$/CompressionType()|",
      "|java+method:///kafka/server/KafkaConfig$/LogSegmentBytesProp()|",
      "|java+method:///kafka/log/LogConfig$/MessageTimestampTypeDoc()|",
      "|java+method:///kafka/log/LogConfig$/SegmentIndexBytesProp()|",
      "|java+method:///kafka/log/Defaults$/MinCompactionLagMs()|",
      "|java+method:///kafka/log/LogConfig$/SegmentJitterMsDoc()|",
      "|java+method:///kafka/log/Defaults$/FileDeleteDelayMs()|",
      "|java+method:///kafka/log/LogConfig$/RetentionMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogMessageFormatVersionProp()|",
      "|java+method:///kafka/log/LogConfig$/MinInSyncReplicasProp()|",
      "|java+method:///kafka/log/Defaults$/Compact()|",
      "|java+method:///kafka/log/LogConfig$/CompactDoc()|",
      "|java+method:///kafka/log/LogConfig$/FollowerReplicationThrottledReplicasDoc()|",
      "|java+method:///kafka/log/Defaults$/PreAllocateEnable()|",
      "|java+method:///kafka/log/LogConfig$/PreAllocateEnableDoc()|",
      "|java+method:///kafka/log/LogConfig$/LeaderReplicationThrottledReplicasProp()|",
      "|java+method:///kafka/log/Defaults$/MaxMessageSize()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRollTimeJitterMillisProp()|",
      "|java+method:///kafka/server/KafkaConfig$/CompressionTypeProp()|",
      "|java+method:///kafka/log/Defaults$/RetentionMs()|",
      "|java+method:///kafka/log/LogConfig$/FileDeleteDelayMsDoc()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToBoolean(boolean)|",
      "|java+method:///kafka/message/BrokerCompressionCodec$/brokerCompressionOptions()|",
      "|java+method:///kafka/log/LogConfig$/IndexIntervalBytesProp()|",
      "|java+method:///kafka/log/Defaults$/SegmentJitterMs()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///kafka/log/LogConfig$/FlushMessagesProp()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToDouble(double)|",
      "|java+method:///kafka/log/LogConfig$/MaxMessageSizeDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerMinCleanRatioProp()|",
      "|java+method:///kafka/log/LogConfig$/CompressionTypeDoc()|",
      "|java+method:///kafka/log/Defaults$/FollowerReplicationThrottledReplicas()|",
      "|java+method:///kafka/log/LogConfig$/RetentionSizeDoc()|",
      "|java+method:///org/apache/kafka/common/config/ConfigDef$Range/between(java.lang.Number,java.lang.Number)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///kafka/log/LogConfig$/MessageTimestampDifferenceMaxMsDoc()|",
      "|java+method:///kafka/log/LogConfig$LogConfigDef/define(java.lang.String,org.apache.kafka.common.config.ConfigDef$Type,java.lang.Object,org.apache.kafka.common.config.ConfigDef$Validator,org.apache.kafka.common.config.ConfigDef$Importance,java.lang.String,java.lang.String)|",
      "|java+method:///kafka/log/Defaults$/FlushInterval()|",
      "|java+method:///kafka/log/LogConfig$/SegmentBytesProp()|",
      "|java+method:///kafka/log/Defaults$/MessageTimestampType()|",
      "|java+method:///kafka/log/LogConfig$/MinCompactionLagMsDoc()|",
      "|java+method:///kafka/log/Defaults$/MinCleanableDirtyRatio()|",
      "|java+method:///kafka/log/LogConfig$/UncleanLeaderElectionEnableProp()|",
      "|java+method:///kafka/log/Defaults$/FlushMs()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerDeleteRetentionMsProp()|",
      "|java+method:///kafka/log/LogConfig$/MessageFormatVersionProp()|",
      "|java+method:///kafka/log/LogConfig$/CleanupPolicyProp()|",
      "|java+method:///scala/Predef$/int2Integer(int)|",
      "|java+method:///kafka/log/LogConfig$/DeleteRetentionMsDoc()|",
      "|java+method:///org/apache/kafka/common/config/ConfigDef$ValidList/in(java.lang.String%5B%5D)|",
      "|java+method:///kafka/log/LogConfig$/SegmentMsDoc()|",
      "|java+method:///kafka/log/Defaults$/MinInSyncReplicas()|",
      "|java+method:///org/apache/kafka/common/config/ConfigDef$Range/atLeast(java.lang.Number)|",
      "|java+method:///kafka/server/KafkaConfig$/LogFlushIntervalMsProp()|",
      "|java+method:///kafka/log/LogConfig$/SegmentMsProp()|",
      "|java+method:///kafka/log/LogConfig$/DeleteRetentionMsProp()|",
      "|java+method:///kafka/log/LogConfig$/IndexIntervalDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRetentionTimeMillisProp()|",
      "|java+method:///kafka/log/Defaults$/MaxIndexSize()|",
      "|java+method:///kafka/log/LogConfig$/UncleanLeaderElectionEnableDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/MinInSyncReplicasProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogMessageTimestampTypeProp()|",
      "|java+method:///kafka/server/KafkaConfig$/MessageMaxBytesProp()|",
      "|java+method:///kafka/log/LogConfig$LogConfigDef/define(java.lang.String,org.apache.kafka.common.config.ConfigDef$Type,java.lang.Object,org.apache.kafka.common.config.ConfigDef$Importance,java.lang.String,java.lang.String)|",
      "|java+method:///kafka/log/LogConfig$/SegmentSizeDoc()|",
      "|java+method:///kafka/log/Defaults$/LeaderReplicationThrottledReplicas()|",
      "|java+method:///kafka/log/LogConfig$/MinCompactionLagMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogFlushIntervalMessagesProp()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///kafka/log/LogConfig$/MessageTimestampDifferenceMaxMsProp()|",
      "|java+constructor:///kafka/log/LogConfig$LogConfigDef/LogConfig$LogConfigDef()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanupPolicyProp()|",
      "|java+method:///kafka/log/Defaults$/SegmentSize()|"
    ],
    "v2Body": [
      "|java+method:///kafka/log/Defaults$/CleanupPolicy()|",
      "|java+method:///kafka/log/LogConfig$/MinCleanableRatioDoc()|",
      "|java+method:///kafka/log/LogConfig$/MessageFormatVersionDoc()|",
      "|java+method:///kafka/log/LogConfig$/Compact()|",
      "|java+method:///kafka/log/Defaults$/UncleanLeaderElectionEnable()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerMinCompactionLagMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRetentionBytesProp()|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///kafka/log/LogConfig$/CompressionTypeProp()|",
      "|java+method:///kafka/log/Defaults$/IndexInterval()|",
      "|java+method:///kafka/log/LogConfig$/FileDeleteDelayMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogIndexSizeMaxBytesProp()|",
      "|java+method:///kafka/log/LogConfig$/PreAllocateEnableProp()|",
      "|java+method:///kafka/log/LogConfig$/FollowerReplicationThrottledReplicasProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRollTimeMillisProp()|",
      "|java+method:///kafka/log/LogConfig$/LeaderReplicationThrottledReplicasDoc()|",
      "|java+method:///scala/collection/immutable/List/toArray(scala.reflect.ClassTag)|",
      "|java+method:///kafka/log/Defaults$/SegmentMs()|",
      "|java+method:///kafka/log/LogConfig$/Delete()|",
      "|java+method:///kafka/server/KafkaConfig$/UncleanLeaderElectionEnableProp()|",
      "|java+method:///kafka/log/Defaults$/DeleteRetentionMs()|",
      "|java+method:///kafka/log/LogConfig$/MinInSyncReplicasDoc()|",
      "|java+method:///kafka/log/LogConfig$/RetentionMsProp()|",
      "|java+method:///org/apache/kafka/common/config/ConfigDef$ValidString/in(java.lang.String%5B%5D)|",
      "|java+method:///kafka/log/Defaults$/MessageFormatVersion()|",
      "|java+method:///kafka/log/LogConfig$/SegmentJitterMsProp()|",
      "|java+method:///kafka/log/LogConfig$/MessageTimestampTypeProp()|",
      "|java+method:///kafka/log/LogConfig$/MinCleanableDirtyRatioProp()|",
      "|java+method:///kafka/log/LogConfig$/MaxIndexSizeDoc()|",
      "|java+method:///kafka/message/Message$/MinMessageOverhead()|",
      "|java+method:///kafka/log/LogConfig$/FlushMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogMessageTimestampDifferenceMaxMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogDeleteDelayMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogIndexIntervalBytesProp()|",
      "|java+method:///kafka/log/LogConfig$/MaxMessageBytesProp()|",
      "|java+method:///kafka/log/LogConfig$/FlushIntervalDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogPreAllocateProp()|",
      "|java+method:///kafka/log/Defaults$/MessageTimestampDifferenceMaxMs()|",
      "|java+method:///kafka/log/LogConfig$/RetentionBytesProp()|",
      "|java+method:///kafka/log/LogConfig$/FlushMsProp()|",
      "|java+method:///kafka/log/Defaults$/RetentionSize()|",
      "|java+method:///kafka/log/Defaults$/CompressionType()|",
      "|java+method:///kafka/server/KafkaConfig$/LogSegmentBytesProp()|",
      "|java+method:///kafka/log/LogConfig$/MessageTimestampTypeDoc()|",
      "|java+method:///kafka/log/LogConfig$/SegmentIndexBytesProp()|",
      "|java+method:///kafka/log/Defaults$/MinCompactionLagMs()|",
      "|java+method:///kafka/log/LogConfig$/SegmentJitterMsDoc()|",
      "|java+method:///kafka/log/Defaults$/FileDeleteDelayMs()|",
      "|java+method:///kafka/log/LogConfig$/RetentionMsDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogMessageFormatVersionProp()|",
      "|java+method:///kafka/log/LogConfig$/MinInSyncReplicasProp()|",
      "|java+method:///kafka/log/LogConfig$/CompactDoc()|",
      "|java+method:///kafka/log/LogConfig$/FollowerReplicationThrottledReplicasDoc()|",
      "|java+method:///kafka/log/Defaults$/PreAllocateEnable()|",
      "|java+method:///kafka/log/LogConfig$/PreAllocateEnableDoc()|",
      "|java+method:///kafka/log/LogConfig$/LeaderReplicationThrottledReplicasProp()|",
      "|java+method:///kafka/log/Defaults$/MaxMessageSize()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRollTimeJitterMillisProp()|",
      "|java+method:///kafka/server/KafkaConfig$/CompressionTypeProp()|",
      "|java+method:///kafka/log/Defaults$/RetentionMs()|",
      "|java+method:///kafka/log/LogConfig$/FileDeleteDelayMsDoc()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToBoolean(boolean)|",
      "|java+method:///kafka/message/BrokerCompressionCodec$/brokerCompressionOptions()|",
      "|java+method:///kafka/log/LogConfig$/IndexIntervalBytesProp()|",
      "|java+method:///kafka/log/Defaults$/SegmentJitterMs()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///kafka/log/LogConfig$/FlushMessagesProp()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToDouble(double)|",
      "|java+method:///kafka/log/LogConfig$/MaxMessageSizeDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerMinCleanRatioProp()|",
      "|java+method:///kafka/log/LogConfig$/CompressionTypeDoc()|",
      "|java+method:///kafka/log/Defaults$/FollowerReplicationThrottledReplicas()|",
      "|java+method:///kafka/log/LogConfig$/RetentionSizeDoc()|",
      "|java+method:///org/apache/kafka/common/config/ConfigDef$Range/between(java.lang.Number,java.lang.Number)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///kafka/log/LogConfig$/MessageTimestampDifferenceMaxMsDoc()|",
      "|java+method:///kafka/log/LogConfig$LogConfigDef/define(java.lang.String,org.apache.kafka.common.config.ConfigDef$Type,java.lang.Object,org.apache.kafka.common.config.ConfigDef$Validator,org.apache.kafka.common.config.ConfigDef$Importance,java.lang.String,java.lang.String)|",
      "|java+method:///kafka/log/Defaults$/FlushInterval()|",
      "|java+method:///kafka/log/LogConfig$/SegmentBytesProp()|",
      "|java+method:///kafka/log/Defaults$/MessageTimestampType()|",
      "|java+method:///kafka/log/LogConfig$/MinCompactionLagMsDoc()|",
      "|java+method:///kafka/log/Defaults$/MinCleanableDirtyRatio()|",
      "|java+method:///kafka/log/LogConfig$/UncleanLeaderElectionEnableProp()|",
      "|java+method:///kafka/log/Defaults$/FlushMs()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanerDeleteRetentionMsProp()|",
      "|java+method:///kafka/log/LogConfig$/MessageFormatVersionProp()|",
      "|java+method:///kafka/log/LogConfig$/CleanupPolicyProp()|",
      "|java+method:///scala/Predef$/int2Integer(int)|",
      "|java+method:///kafka/log/LogConfig$/DeleteRetentionMsDoc()|",
      "|java+method:///org/apache/kafka/common/config/ConfigDef$ValidList/in(java.lang.String%5B%5D)|",
      "|java+method:///kafka/log/LogConfig$/SegmentMsDoc()|",
      "|java+method:///kafka/log/Defaults$/MinInSyncReplicas()|",
      "|java+method:///org/apache/kafka/common/config/ConfigDef$Range/atLeast(java.lang.Number)|",
      "|java+method:///kafka/server/KafkaConfig$/LogFlushIntervalMsProp()|",
      "|java+method:///kafka/log/LogConfig$/SegmentMsProp()|",
      "|java+method:///kafka/log/LogConfig$/DeleteRetentionMsProp()|",
      "|java+method:///kafka/log/LogConfig$/IndexIntervalDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/LogRetentionTimeMillisProp()|",
      "|java+method:///kafka/log/Defaults$/MaxIndexSize()|",
      "|java+method:///kafka/log/LogConfig$/UncleanLeaderElectionEnableDoc()|",
      "|java+method:///kafka/server/KafkaConfig$/MinInSyncReplicasProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogMessageTimestampTypeProp()|",
      "|java+method:///kafka/server/KafkaConfig$/MessageMaxBytesProp()|",
      "|java+method:///kafka/log/LogConfig$LogConfigDef/define(java.lang.String,org.apache.kafka.common.config.ConfigDef$Type,java.lang.Object,org.apache.kafka.common.config.ConfigDef$Importance,java.lang.String,java.lang.String)|",
      "|java+method:///kafka/log/LogConfig$/SegmentSizeDoc()|",
      "|java+method:///kafka/log/Defaults$/LeaderReplicationThrottledReplicas()|",
      "|java+method:///kafka/log/LogConfig$/MinCompactionLagMsProp()|",
      "|java+method:///kafka/server/KafkaConfig$/LogFlushIntervalMessagesProp()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///kafka/log/LogConfig$/MessageTimestampDifferenceMaxMsProp()|",
      "|java+constructor:///kafka/log/LogConfig$LogConfigDef/LogConfig$LogConfigDef()|",
      "|java+method:///kafka/server/KafkaConfig$/LogCleanupPolicyProp()|",
      "|java+method:///kafka/log/Defaults$/SegmentSize()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/KafkaApis$$anonfun$handleListGroupsRequest$1/apply(int)|",
    "called": "|java+method:///org/apache/kafka/common/requests/ListGroupsRequest/getErrorResponse(int,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/apache/kafka/common/requests/ListGroupsResponse/fromError(int,org.apache.kafka.common.protocol.Errors)|"
    ],
    "v2Body": [
      "|java+method:///kafka/network/RequestChannel$Request/body(scala.reflect.ClassTag,kafka.utils.NotNothing)|",
      "|java+method:///org/apache/kafka/common/protocol/Errors/exception()|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///scala/Predef$$eq$colon$eq$/tpEquals()|",
      "|java+method:///kafka/utils/NotNothing$/notNothingEvidence(scala.Predef$$eq$colon$eq)|",
      "|java+method:///org/apache/kafka/common/requests/ListGroupsRequest/getErrorResponse(int,java.lang.Throwable)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/ReplicaFetcherThread/handleOffsetOutOfRange(org.apache.kafka.common.TopicPartition)|",
    "called": "|java+constructor:///org/apache/kafka/common/internals/FatalExitError/FatalExitError()|",
    "v1Body": [
      "|java+method:///kafka/log/LogConfig$/fromProps(java.util.Map,java.util.Properties)|",
      "|java+method:///kafka/server/ReplicaFetcherThread/earliestOrLatestOffset(org.apache.kafka.common.TopicPartition,long)|",
      "|java+method:///kafka/server/ReplicaFetcherThread/warn(scala.Function0)|",
      "|java+method:///kafka/server/ReplicaManager/zkUtils()|",
      "|java+method:///kafka/admin/AdminUtils$/fetchEntityConfig(kafka.utils.ZkUtils,java.lang.String,java.lang.String)|",
      "|java+method:///kafka/server/LogOffsetMetadata/messageOffset()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/Predef$/Boolean2boolean(java.lang.Boolean)|",
      "|java+method:///java/lang/Math/max(long,long)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///scala/Predef$ArrowAssoc$/$minus$greater$extension(java.lang.Object,java.lang.Object)|",
      "|java+method:///kafka/server/KafkaConfig/originals()|",
      "|java+method:///kafka/server/ReplicaManager/getReplica(org.apache.kafka.common.TopicPartition)|",
      "|java+method:///kafka/cluster/Replica/logEndOffset()|",
      "|java+method:///kafka/log/LogManager/truncateTo(scala.collection.Map)|",
      "|java+method:///kafka/server/ReplicaFetcherThread/fatal(scala.Function0)|",
      "|java+method:///scala/Predef$/ArrowAssoc(java.lang.Object)|",
      "|java+method:///scala/collection/Map$/apply(scala.collection.Seq)|",
      "|java+method:///kafka/log/LogConfig/uncleanLeaderElectionEnable()|",
      "|java+constructor:///org/apache/kafka/common/internals/FatalExitError/FatalExitError()|",
      "|java+method:///kafka/log/LogManager/truncateFullyAndStartAt(org.apache.kafka.common.TopicPartition,long)|",
      "|java+method:///org/apache/kafka/common/TopicPartition/topic()|",
      "|java+method:///kafka/server/ReplicaManager/logManager()|",
      "|java+constructor:///kafka/server/ReplicaFetcherThread$$anonfun$handleOffsetOutOfRange$2/ReplicaFetcherThread$$anonfun$handleOffsetOutOfRange$2(kafka.server.ReplicaFetcherThread,org.apache.kafka.common.TopicPartition,kafka.cluster.Replica,long)|",
      "|java+method:///kafka/server/ConfigType$/Topic()|",
      "|java+constructor:///kafka/server/ReplicaFetcherThread$$anonfun$handleOffsetOutOfRange$1/ReplicaFetcherThread$$anonfun$handleOffsetOutOfRange$1(kafka.server.ReplicaFetcherThread,org.apache.kafka.common.TopicPartition,kafka.cluster.Replica,long)|",
      "|java+constructor:///kafka/server/ReplicaFetcherThread$$anonfun$handleOffsetOutOfRange$3/ReplicaFetcherThread$$anonfun$handleOffsetOutOfRange$3(kafka.server.ReplicaFetcherThread,org.apache.kafka.common.TopicPartition,kafka.cluster.Replica,long)|",
      "|java+method:///scala/Option/get()|"
    ],
    "v2Body": [
      "|java+method:///kafka/log/LogConfig$/fromProps(java.util.Map,java.util.Properties)|",
      "|java+method:///kafka/server/ReplicaFetcherThread/earliestOrLatestOffset(org.apache.kafka.common.TopicPartition,long)|",
      "|java+method:///kafka/server/ReplicaFetcherThread/warn(scala.Function0)|",
      "|java+method:///kafka/server/ReplicaManager/zkUtils()|",
      "|java+method:///kafka/admin/AdminUtils$/fetchEntityConfig(kafka.utils.ZkUtils,java.lang.String,java.lang.String)|",
      "|java+method:///kafka/server/LogOffsetMetadata/messageOffset()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/Predef$/Boolean2boolean(java.lang.Boolean)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///scala/Predef$ArrowAssoc$/$minus$greater$extension(java.lang.Object,java.lang.Object)|",
      "|java+method:///kafka/server/KafkaConfig/originals()|",
      "|java+method:///kafka/cluster/Replica/logEndOffset()|",
      "|java+method:///kafka/log/LogManager/truncateTo(scala.collection.Map)|",
      "|java+method:///kafka/server/ReplicaFetcherThread/fatal(scala.Function0)|",
      "|java+method:///scala/Predef$/ArrowAssoc(java.lang.Object)|",
      "|java+method:///java/lang/Math/max(long,long)|",
      "|java+method:///kafka/server/ReplicaManager/getReplicaOrException(org.apache.kafka.common.TopicPartition)|",
      "|java+method:///scala/collection/Map$/apply(scala.collection.Seq)|",
      "|java+method:///kafka/log/LogConfig/uncleanLeaderElectionEnable()|",
      "|java+constructor:///org/apache/kafka/common/internals/FatalExitError/FatalExitError()|",
      "|java+method:///kafka/log/LogManager/truncateFullyAndStartAt(org.apache.kafka.common.TopicPartition,long)|",
      "|java+method:///org/apache/kafka/common/TopicPartition/topic()|",
      "|java+method:///kafka/server/ReplicaManager/logManager()|",
      "|java+constructor:///kafka/server/ReplicaFetcherThread$$anonfun$handleOffsetOutOfRange$2/ReplicaFetcherThread$$anonfun$handleOffsetOutOfRange$2(kafka.server.ReplicaFetcherThread,org.apache.kafka.common.TopicPartition,kafka.cluster.Replica,long)|",
      "|java+method:///kafka/server/ConfigType$/Topic()|",
      "|java+constructor:///kafka/server/ReplicaFetcherThread$$anonfun$handleOffsetOutOfRange$3/ReplicaFetcherThread$$anonfun$handleOffsetOutOfRange$3(kafka.server.ReplicaFetcherThread,org.apache.kafka.common.TopicPartition,kafka.cluster.Replica,long)|",
      "|java+constructor:///kafka/server/ReplicaFetcherThread$$anonfun$handleOffsetOutOfRange$1/ReplicaFetcherThread$$anonfun$handleOffsetOutOfRange$1(kafka.server.ReplicaFetcherThread,org.apache.kafka.common.TopicPartition,kafka.cluster.Replica,long)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/AdminManager$$anonfun$describeConfigs$1/apply(scala.Tuple2)|",
    "called": "|java+method:///org/apache/kafka/common/requests/ApiError/fromThrowable(java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/apache/kafka/common/requests/ApiError/fromThrowable(java.lang.Throwable)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///kafka/admin/AdminUtils$/fetchEntityConfig(kafka.utils.ZkUtils,java.lang.String,java.lang.String)|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$describeConfigs$1$$anonfun$apply$13/AdminManager$$anonfun$describeConfigs$1$$anonfun$apply$13(kafka.server.AdminManager$$anonfun$describeConfigs$1,java.lang.Throwable)|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$describeConfigs$1$$anonfun$apply$15/AdminManager$$anonfun$describeConfigs$1$$anonfun$apply$15(kafka.server.AdminManager$$anonfun$describeConfigs$1,java.lang.Throwable)|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+method:///kafka/server/AdminManager/zkUtils()|",
      "|java+method:///org/apache/kafka/common/requests/Resource/type()|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///kafka/server/ConfigType$/Topic()|",
      "|java+method:///kafka/log/LogConfig$/fromProps(java.util.Map,java.util.Properties)|",
      "|java+method:///org/apache/kafka/common/requests/Resource/name()|",
      "|java+method:///org/apache/kafka/common/internals/Topic/validate(java.lang.String)|",
      "|java+method:///scala/Predef$/ArrowAssoc(java.lang.Object)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///kafka/server/AdminManager/config()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///kafka/server/AdminManager$$anonfun$describeConfigs$1/liftedTree1$1(org.apache.kafka.common.requests.Resource)|",
      "|java+method:///scala/Predef$ArrowAssoc$/$minus$greater$extension(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/kafka/common/requests/DescribeConfigsResponse$Config/DescribeConfigsResponse$Config(org.apache.kafka.common.requests.ApiError,java.util.Collection)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$describeConfigs$1$$anonfun$apply$14/AdminManager$$anonfun$describeConfigs$1$$anonfun$apply$14(kafka.server.AdminManager$$anonfun$describeConfigs$1,java.lang.String)|",
      "|java+method:///kafka/server/AdminManager$$anonfun$describeConfigs$1/createResponseConfig$1(org.apache.kafka.common.config.AbstractConfig,boolean,scala.Function1,scala.Option)|",
      "|java+method:///kafka/server/KafkaConfig/brokerId()|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$describeConfigs$1$$anonfun$12/AdminManager$$anonfun$describeConfigs$1$$anonfun$12(kafka.server.AdminManager$$anonfun$describeConfigs$1)|",
      "|java+method:///kafka/server/AdminManager/error(scala.Function0,scala.Function0)|",
      "|java+constructor:///org/apache/kafka/common/errors/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///kafka/server/KafkaServer$/copyKafkaConfigToLog(kafka.server.KafkaConfig)|",
      "|java+method:///kafka/server/AdminManager/info(scala.Function0,scala.Function0)|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$describeConfigs$1$$anonfun$11/AdminManager$$anonfun$describeConfigs$1$$anonfun$11(kafka.server.AdminManager$$anonfun$describeConfigs$1,java.util.Properties)|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$describeConfigs$1$$anonfun$apply$12/AdminManager$$anonfun$describeConfigs$1$$anonfun$apply$12(kafka.server.AdminManager$$anonfun$describeConfigs$1,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/kafka/common/requests/ApiError/fromThrowable(java.lang.Throwable)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///kafka/admin/AdminUtils$/fetchEntityConfig(kafka.utils.ZkUtils,java.lang.String,java.lang.String)|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$describeConfigs$1$$anonfun$19/AdminManager$$anonfun$describeConfigs$1$$anonfun$19(kafka.server.AdminManager$$anonfun$describeConfigs$1)|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$describeConfigs$1$$anonfun$apply$18/AdminManager$$anonfun$describeConfigs$1$$anonfun$apply$18(kafka.server.AdminManager$$anonfun$describeConfigs$1,java.lang.Throwable)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$describeConfigs$1$$anonfun$apply$15/AdminManager$$anonfun$describeConfigs$1$$anonfun$apply$15(kafka.server.AdminManager$$anonfun$describeConfigs$1,java.lang.String)|",
      "|java+method:///kafka/server/AdminManager$$anonfun$describeConfigs$1/createResponseConfig$1(org.apache.kafka.common.config.AbstractConfig,boolean,scala.Function1,scala.Option)|",
      "|java+method:///kafka/server/KafkaConfig/brokerId()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///kafka/server/ConfigType$/Topic()|",
      "|java+method:///kafka/log/LogConfig$/fromProps(java.util.Map,java.util.Properties)|",
      "|java+method:///org/apache/kafka/common/requests/Resource/name()|",
      "|java+method:///org/apache/kafka/common/internals/Topic/validate(java.lang.String)|",
      "|java+method:///scala/Predef$/ArrowAssoc(java.lang.Object)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///kafka/server/AdminManager/config()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$describeConfigs$1$$anonfun$apply$16/AdminManager$$anonfun$describeConfigs$1$$anonfun$apply$16(kafka.server.AdminManager$$anonfun$describeConfigs$1,java.lang.Throwable)|",
      "|java+method:///kafka/server/AdminManager/zkUtils()|",
      "|java+method:///org/apache/kafka/common/requests/Resource/type()|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$describeConfigs$1$$anonfun$18/AdminManager$$anonfun$describeConfigs$1$$anonfun$18(kafka.server.AdminManager$$anonfun$describeConfigs$1,java.util.Properties)|",
      "|java+method:///kafka/server/AdminManager$$anonfun$describeConfigs$1/liftedTree1$1(org.apache.kafka.common.requests.Resource)|",
      "|java+method:///scala/Predef$ArrowAssoc$/$minus$greater$extension(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///org/apache/kafka/common/requests/DescribeConfigsResponse$Config/DescribeConfigsResponse$Config(org.apache.kafka.common.requests.ApiError,java.util.Collection)|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$describeConfigs$1$$anonfun$apply$17/AdminManager$$anonfun$describeConfigs$1$$anonfun$apply$17(kafka.server.AdminManager$$anonfun$describeConfigs$1,java.lang.String)|",
      "|java+method:///kafka/server/AdminManager/error(scala.Function0,scala.Function0)|",
      "|java+constructor:///org/apache/kafka/common/errors/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///kafka/server/KafkaServer$/copyKafkaConfigToLog(kafka.server.KafkaConfig)|",
      "|java+method:///kafka/server/AdminManager/info(scala.Function0,scala.Function0)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/AbstractFetcherThread$$anonfun$processFetchRequest$1/apply$mcZ$sp()|",
    "called": "|java+method:///org/apache/kafka/common/internals/PartitionStates/partitionSet()|",
    "v1Body": [
      "|java+method:///scala/collection/JavaConverters$/asScalaSetConverter(java.util.Set)|",
      "|java+method:///kafka/server/AbstractFetcherThread/partitionStates()|",
      "|java+method:///java/util/concurrent/locks/Condition/await(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///kafka/server/AbstractFetcherThread/kafka$server$AbstractFetcherThread$$partitionMapCond()|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///scala/collection/IterableLike/foreach(scala.Function1)|",
      "|java+constructor:///kafka/server/AbstractFetcherThread$$anonfun$processFetchRequest$1$$anonfun$apply$mcZ$sp$1/AbstractFetcherThread$$anonfun$processFetchRequest$1$$anonfun$apply$mcZ$sp$1(kafka.server.AbstractFetcherThread$$anonfun$processFetchRequest$1)|",
      "|java+method:///org/apache/kafka/common/internals/PartitionStates/partitionSet()|"
    ],
    "v2Body": [
      "|java+method:///scala/collection/JavaConverters$/asScalaSetConverter(java.util.Set)|",
      "|java+method:///kafka/server/AbstractFetcherThread/partitionStates()|",
      "|java+method:///java/util/concurrent/locks/Condition/await(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///scala/collection/mutable/Set/$plus$plus$eq(scala.collection.TraversableOnce)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///org/apache/kafka/common/internals/PartitionStates/partitionSet()|",
      "|java+method:///kafka/server/AbstractFetcherThread/kafka$server$AbstractFetcherThread$$partitionMapCond()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/KafkaApis/handleDescribeConfigsRequest(kafka.network.RequestChannel$Request)|",
    "called": "|java+method:///org/apache/kafka/common/requests/DescribeConfigsRequest/resources()|",
    "v1Body": [
      "|java+method:///scala/collection/Iterable$/canBuildFrom()|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///kafka/utils/NotNothing$/notNothingEvidence(scala.Predef$$eq$colon$eq)|",
      "|java+method:///kafka/network/RequestChannel$Request/body(scala.reflect.ClassTag,kafka.utils.NotNothing)|",
      "|java+method:///scala/collection/TraversableOnce/toMap(scala.Predef$$less$colon$less)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$92/KafkaApis$$anonfun$92(kafka.server.KafkaApis,kafka.network.RequestChannel$Request)|",
      "|java+method:///scala/collection/JavaConverters$/collectionAsScalaIterableConverter(java.util.Collection)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///scala/Predef$$eq$colon$eq$/tpEquals()|",
      "|java+method:///kafka/server/AdminManager/describeConfigs(scala.collection.Map)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$90/KafkaApis$$anonfun$90(kafka.server.KafkaApis,kafka.network.RequestChannel$Request)|",
      "|java+method:///org/apache/kafka/common/requests/DescribeConfigsRequest/resources()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$91/KafkaApis$$anonfun$91(kafka.server.KafkaApis,org.apache.kafka.common.requests.DescribeConfigsRequest)|",
      "|java+method:///kafka/server/KafkaApis/sendResponseMaybeThrottle(kafka.network.RequestChannel$Request,scala.Function1)|",
      "|java+method:///scala/collection/TraversableLike/partition(scala.Function1)|",
      "|java+method:///kafka/server/KafkaApis/adminManager()|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$handleDescribeConfigsRequest$1/KafkaApis$$anonfun$handleDescribeConfigsRequest$1(kafka.server.KafkaApis,scala.collection.Map,scala.collection.Iterable)|",
      "|java+method:///scala/Predef$/$conforms()|",
      "|java+method:///scala/collection/Iterable/map(scala.Function1,scala.collection.generic.CanBuildFrom)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/kafka/common/requests/DescribeConfigsRequest/resources()|",
      "|java+method:///scala/collection/Iterable$/canBuildFrom()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$66/KafkaApis$$anonfun$66(kafka.server.KafkaApis,kafka.network.RequestChannel$Request)|",
      "|java+method:///kafka/utils/NotNothing$/notNothingEvidence(scala.Predef$$eq$colon$eq)|",
      "|java+method:///kafka/network/RequestChannel$Request/body(scala.reflect.ClassTag,kafka.utils.NotNothing)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$67/KafkaApis$$anonfun$67(kafka.server.KafkaApis,org.apache.kafka.common.requests.DescribeConfigsRequest)|",
      "|java+method:///scala/collection/TraversableOnce/toMap(scala.Predef$$less$colon$less)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///scala/collection/JavaConverters$/collectionAsScalaIterableConverter(java.util.Collection)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///scala/Predef$$eq$colon$eq$/tpEquals()|",
      "|java+method:///kafka/server/AdminManager/describeConfigs(scala.collection.Map)|",
      "|java+method:///kafka/server/KafkaApis/sendResponseMaybeThrottle(kafka.network.RequestChannel$Request,scala.Function1)|",
      "|java+method:///scala/collection/TraversableLike/partition(scala.Function1)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$68/KafkaApis$$anonfun$68(kafka.server.KafkaApis,kafka.network.RequestChannel$Request)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///kafka/server/KafkaApis/adminManager()|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$handleDescribeConfigsRequest$1/KafkaApis$$anonfun$handleDescribeConfigsRequest$1(kafka.server.KafkaApis,scala.collection.Map,scala.collection.Iterable)|",
      "|java+method:///scala/Predef$/$conforms()|",
      "|java+method:///scala/collection/Iterable/map(scala.Function1,scala.collection.generic.CanBuildFrom)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/KafkaApis$$anonfun$14/apply(scala.Tuple2)|",
    "called": "|java+constructor:///org/apache/kafka/common/requests/FetchResponse$PartitionData/FetchResponse$PartitionData(org.apache.kafka.common.protocol.Errors,long,long,long,java.util.List,org.apache.kafka.common.record.Records)|",
    "v1Body": [
      "|java+method:///kafka/server/KafkaApis/kafka$server$KafkaApis$$authorize(kafka.network.RequestChannel$Session,kafka.security.auth.Operation,kafka.security.auth.Resource)|",
      "|java+method:///kafka/server/MetadataCache/contains(java.lang.String)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/network/RequestChannel$Request/session()|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///org/apache/kafka/common/TopicPartition/topic()|",
      "|java+method:///kafka/server/KafkaApis/metadataCache()|",
      "|java+constructor:///kafka/security/auth/Resource/Resource(kafka.security.auth.ResourceType,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///scala/runtime/BoxesRunTime/unboxToLong(java.lang.Object)|",
      "|java+method:///scala/Predef$/ArrowAssoc(java.lang.Object)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///kafka/server/FetchPartitionData/abortedTransactions()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$14$$anonfun$15/KafkaApis$$anonfun$14$$anonfun$15(kafka.server.KafkaApis$$anonfun$14)|",
      "|java+method:///scala/Predef$ArrowAssoc$/$minus$greater$extension(java.lang.Object,java.lang.Object)|",
      "|java+method:///kafka/server/FetchPartitionData/error()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///scala/Predef$/$conforms()|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+constructor:///org/apache/kafka/common/requests/FetchResponse$PartitionData/FetchResponse$PartitionData(org.apache.kafka.common.protocol.Errors,long,long,long,java.util.List,org.apache.kafka.common.record.Records)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///kafka/server/FetchPartitionData/highWatermark()|",
      "|java+method:///kafka/server/FetchPartitionData/records()|",
      "|java+method:///kafka/server/FetchPartitionData/lastStableOffset()|",
      "|java+method:///scala/Option/orNull(scala.Predef$$less$colon$less)|",
      "|java+method:///scala/Option/map(scala.Function1)|",
      "|java+method:///kafka/server/FetchPartitionData/logStartOffset()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$14$$anonfun$1/KafkaApis$$anonfun$14$$anonfun$1(kafka.server.KafkaApis$$anonfun$14)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2/apply(kafka.server.PartitionFetchState)|",
    "called": "|java+method:///org/apache/kafka/common/record/MemoryRecords/validBytes()|",
    "v1Body": [
      "|java+method:///kafka/server/AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1/kafka$server$AbstractFetcherThread$$anonfun$$anonfun$$$outer()|",
      "|java+method:///kafka/server/FetcherLagMetrics/lag_$eq(long)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///kafka/server/AbstractFetcherThread$PartitionData/toRecords()|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/get()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/log4j/Logger/error(java.lang.Object)|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+method:///kafka/server/AbstractFetcherThread$$anonfun$processFetchRequest$2/kafka$server$AbstractFetcherThread$$anonfun$$$outer()|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToLong(java.lang.Object)|",
      "|java+method:///kafka/server/AbstractFetcherThread/kafka$server$AbstractFetcherThread$$updatePartitionsWithError$1(org.apache.kafka.common.TopicPartition,scala.collection.mutable.Set)|",
      "|java+method:///kafka/server/AbstractFetcherThread/partitionStates()|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///kafka/server/AbstractFetcherThread/processPartitionData(org.apache.kafka.common.TopicPartition,long,kafka.server.AbstractFetcherThread$PartitionData)|",
      "|java+method:///kafka/server/AbstractFetcherThread$PartitionData/highWatermark()|",
      "|java+method:///com/yammer/metrics/core/Meter/mark(long)|",
      "|java+method:///scala/collection/JavaConverters$/iterableAsScalaIterableConverter(java.lang.Iterable)|",
      "|java+constructor:///kafka/server/AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2$$anonfun$apply$3/AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2$$anonfun$apply$3(kafka.server.AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2,long,kafka.server.PartitionFetchState)|",
      "|java+method:///org/apache/kafka/common/errors/CorruptRecordException/getMessage()|",
      "|java+method:///kafka/server/AbstractFetcherThread/fetcherLagStats()|",
      "|java+method:///org/apache/kafka/common/internals/PartitionStates/updateAndMoveToEnd(org.apache.kafka.common.TopicPartition,java.lang.Object)|",
      "|java+constructor:///kafka/server/AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2$$anonfun$apply$5/AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2$$anonfun$apply$5(kafka.server.AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2,java.lang.Throwable)|",
      "|java+constructor:///kafka/server/AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2$$anonfun$apply$6/AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2$$anonfun$apply$6(kafka.server.AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2)|",
      "|java+constructor:///kafka/server/AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2$$anonfun$apply$4/AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2$$anonfun$apply$4(kafka.server.AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2)|",
      "|java+method:///kafka/server/AbstractFetcherThread/isRunning()|",
      "|java+constructor:///kafka/server/AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2$$anonfun$5/AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2$$anonfun$5(kafka.server.AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2)|",
      "|java+method:///kafka/server/AbstractFetcherThread/logger()|",
      "|java+method:///kafka/server/AbstractFetcherThread$FetchRequest/offset(org.apache.kafka.common.TopicPartition)|",
      "|java+method:///kafka/server/AbstractFetcherThread$PartitionData/error()|",
      "|java+method:///java/lang/Math/max(long,long)|",
      "|java+constructor:///kafka/common/KafkaException/KafkaException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///scala/Option/map(scala.Function1)|",
      "|java+method:///kafka/server/AbstractFetcherThread/handleOffsetOutOfRange(org.apache.kafka.common.TopicPartition)|",
      "|java+method:///org/apache/kafka/common/record/MemoryRecords/validBytes()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///kafka/server/AbstractFetcherThread/error(scala.Function0,scala.Function0)|",
      "|java+constructor:///kafka/server/PartitionFetchState/PartitionFetchState(long)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/server/FetcherStats/byteRate()|",
      "|java+method:///kafka/server/PartitionFetchState/fetchOffset()|",
      "|java+method:///kafka/server/AbstractFetcherThread/error(scala.Function0)|",
      "|java+method:///kafka/server/AbstractFetcherThread/fetcherStats()|",
      "|java+method:///scala/collection/TraversableLike/lastOption()|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///kafka/server/FetcherLagStats/getAndMaybePut(java.lang.String,int)|",
      "|java+method:///org/apache/kafka/common/record/MemoryRecords/batches()|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+constructor:///kafka/server/AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2$$anonfun$1/AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2$$anonfun$1(kafka.server.AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2,kafka.server.PartitionFetchState)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+method:///kafka/server/AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1/kafka$server$AbstractFetcherThread$$anonfun$$anonfun$$$outer()|",
      "|java+method:///kafka/server/AbstractFetcherThread/partitionStates()|",
      "|java+method:///kafka/server/FetcherLagMetrics/lag_$eq(long)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///kafka/server/AbstractFetcherThread$PartitionData/toRecords()|",
      "|java+method:///kafka/server/AbstractFetcherThread/error(scala.Function0,scala.Function0)|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/get()|",
      "|java+method:///kafka/server/AbstractFetcherThread$$anonfun$processFetchRequest$2/kafka$server$AbstractFetcherThread$$anonfun$$$outer()|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToLong(java.lang.Object)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///kafka/server/AbstractFetcherThread/processPartitionData(org.apache.kafka.common.TopicPartition,long,kafka.server.AbstractFetcherThread$PartitionData)|",
      "|java+method:///kafka/server/AbstractFetcherThread$PartitionData/highWatermark()|",
      "|java+method:///com/yammer/metrics/core/Meter/mark(long)|",
      "|java+method:///scala/collection/JavaConverters$/iterableAsScalaIterableConverter(java.lang.Iterable)|",
      "|java+constructor:///kafka/server/AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2$$anonfun$apply$3/AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2$$anonfun$apply$3(kafka.server.AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2,long,kafka.server.PartitionFetchState)|",
      "|java+method:///org/apache/kafka/common/errors/CorruptRecordException/getMessage()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///kafka/server/AbstractFetcherThread/fetcherLagStats()|",
      "|java+method:///org/apache/kafka/common/internals/PartitionStates/updateAndMoveToEnd(org.apache.kafka.common.TopicPartition,java.lang.Object)|",
      "|java+constructor:///kafka/server/AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2$$anonfun$apply$5/AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2$$anonfun$apply$5(kafka.server.AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2,java.lang.Throwable)|",
      "|java+constructor:///kafka/server/AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2$$anonfun$apply$6/AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2$$anonfun$apply$6(kafka.server.AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2)|",
      "|java+constructor:///kafka/server/AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2$$anonfun$apply$4/AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2$$anonfun$apply$4(kafka.server.AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2)|",
      "|java+method:///kafka/server/AbstractFetcherThread/isRunning()|",
      "|java+constructor:///kafka/server/AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2$$anonfun$5/AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2$$anonfun$5(kafka.server.AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2)|",
      "|java+method:///kafka/server/AbstractFetcherThread/logger()|",
      "|java+method:///kafka/server/AbstractFetcherThread$FetchRequest/offset(org.apache.kafka.common.TopicPartition)|",
      "|java+method:///kafka/server/AbstractFetcherThread$PartitionData/error()|",
      "|java+method:///java/lang/Math/max(long,long)|",
      "|java+constructor:///kafka/common/KafkaException/KafkaException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///scala/Option/map(scala.Function1)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///kafka/server/AbstractFetcherThread/handleOffsetOutOfRange(org.apache.kafka.common.TopicPartition)|",
      "|java+method:///org/apache/kafka/common/record/MemoryRecords/validBytes()|",
      "|java+constructor:///kafka/server/PartitionFetchState/PartitionFetchState(long)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/server/FetcherStats/byteRate()|",
      "|java+method:///kafka/server/PartitionFetchState/fetchOffset()|",
      "|java+method:///kafka/server/AbstractFetcherThread/error(scala.Function0)|",
      "|java+method:///kafka/server/AbstractFetcherThread/fetcherStats()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///scala/collection/mutable/Set/$plus$eq(java.lang.Object)|",
      "|java+method:///scala/collection/TraversableLike/lastOption()|",
      "|java+method:///kafka/server/FetcherLagStats/getAndMaybePut(java.lang.String,int)|",
      "|java+method:///org/apache/kafka/common/record/MemoryRecords/batches()|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+method:///org/apache/log4j/Logger/error(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/apache/log4j/Logger/error(java.lang.Object)|",
      "|java+constructor:///kafka/server/AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2$$anonfun$1/AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2$$anonfun$1(kafka.server.AbstractFetcherThread$$anonfun$processFetchRequest$2$$anonfun$apply$mcV$sp$1$$anonfun$apply$2,kafka.server.PartitionFetchState)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/log/LogValidator$$anonfun$validateMessagesAndAssignOffsetsCompressed$1$$anonfun$apply$3/apply(org.apache.kafka.common.record.Record)|",
    "called": "|java+constructor:///org/apache/kafka/common/record/InvalidRecordException/InvalidRecordException(java.lang.String)|",
    "v1Body": [
      "|java+method:///scala/collection/mutable/ArrayBuffer/$plus$eq(java.lang.Object)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/kafka/common/record/Record/timestamp()|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///org/apache/kafka/common/record/MutableRecordBatch/magic()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/record/Record/hasMagic(byte)|",
      "|java+method:///org/apache/kafka/common/record/Record/isCompressed()|",
      "|java+method:///org/apache/kafka/common/record/Record/offset()|",
      "|java+method:///kafka/log/LogValidator$/kafka$log$LogValidator$$validateRecord(org.apache.kafka.common.record.RecordBatch,org.apache.kafka.common.record.Record,long,org.apache.kafka.common.record.TimestampType,long,boolean)|",
      "|java+constructor:///org/apache/kafka/common/record/InvalidRecordException/InvalidRecordException(java.lang.String)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/common/LongRef/getAndIncrement()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+method:///scala/collection/mutable/ArrayBuffer/$plus$eq(java.lang.Object)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/kafka/common/record/Record/timestamp()|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///org/apache/kafka/common/record/MutableRecordBatch/magic()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/record/Record/sizeInBytes()|",
      "|java+method:///org/apache/kafka/common/record/Record/hasMagic(byte)|",
      "|java+method:///org/apache/kafka/common/record/Record/isCompressed()|",
      "|java+method:///org/apache/kafka/common/record/Record/offset()|",
      "|java+method:///kafka/log/LogValidator$/kafka$log$LogValidator$$validateRecord(org.apache.kafka.common.record.RecordBatch,org.apache.kafka.common.record.Record,long,org.apache.kafka.common.record.TimestampType,long,boolean)|",
      "|java+constructor:///org/apache/kafka/common/record/InvalidRecordException/InvalidRecordException(java.lang.String)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/common/LongRef/getAndIncrement()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/ReplicaFetcherThread$$anonfun$processPartitionData$2/apply()|",
    "called": "|java+method:///org/apache/kafka/common/record/MemoryRecords/sizeInBytes()|",
    "v1Body": [
      "|java+method:///kafka/server/LogOffsetMetadata/messageOffset()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/record/MemoryRecords/sizeInBytes()|",
      "|java+method:///kafka/cluster/Replica/logEndOffset()|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///kafka/server/ReplicaFetcherThread$$anonfun$processPartitionData$2/apply()|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+method:///kafka/cluster/Replica/brokerId()|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///kafka/server/LogOffsetMetadata/messageOffset()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/record/MemoryRecords/sizeInBytes()|",
      "|java+method:///kafka/cluster/Replica/logEndOffset()|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///kafka/server/ReplicaFetcherThread$$anonfun$processPartitionData$2/apply()|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/coordinator/transaction/TransactionLog$/readTxnRecordKey(java.nio.ByteBuffer)|",
    "called": "|java+method:///org/apache/kafka/common/protocol/types/Struct/getString(org.apache.kafka.common.protocol.types.BoundField)|",
    "v1Body": [
      "|java+method:///org/apache/kafka/common/protocol/types/Schema/read(java.nio.ByteBuffer)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+constructor:///kafka/coordinator/transaction/TxnKey/TxnKey(short,java.lang.String)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/getString(org.apache.kafka.common.protocol.types.Field)|",
      "|java+method:///java/nio/ByteBuffer/getShort()|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$KeySchema$/CURRENT_VERSION()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToShort(short)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$KeySchema$/TXN_ID_FIELD()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$/kafka$coordinator$transaction$TransactionLog$$schemaForKey(int)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/kafka/common/protocol/types/Schema/read(java.nio.ByteBuffer)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+constructor:///kafka/coordinator/transaction/TxnKey/TxnKey(short,java.lang.String)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/getString(org.apache.kafka.common.protocol.types.BoundField)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///java/nio/ByteBuffer/getShort()|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$KeySchema$/CURRENT_VERSION()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToShort(short)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$KeySchema$/TXN_ID_FIELD()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$/kafka$coordinator$transaction$TransactionLog$$schemaForKey(int)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/ReplicaFetcherThread/fetchEpochsFromLeader(scala.collection.Map)|",
    "called": "|java+constructor:///org/apache/kafka/common/requests/OffsetsForLeaderEpochRequest$Builder/OffsetsForLeaderEpochRequest$Builder(java.util.Map)|",
    "v1Body": [
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///scala/collection/JavaConverters$/mapAsScalaMapConverter(java.util.Map)|",
      "|java+constructor:///org/apache/kafka/common/requests/OffsetsForLeaderEpochRequest$Builder/OffsetsForLeaderEpochRequest$Builder(java.util.Map)|",
      "|java+constructor:///kafka/server/ReplicaFetcherThread$$anonfun$fetchEpochsFromLeader$3/ReplicaFetcherThread$$anonfun$fetchEpochsFromLeader$3(kafka.server.ReplicaFetcherThread,java.lang.Throwable)|",
      "|java+method:///scala/collection/JavaConverters$/mapAsJavaMapConverter(scala.collection.Map)|",
      "|java+method:///scala/runtime/ObjectRef/create(java.lang.Object)|",
      "|java+constructor:///kafka/server/ReplicaFetcherThread$$anonfun$fetchEpochsFromLeader$2/ReplicaFetcherThread$$anonfun$fetchEpochsFromLeader$2(kafka.server.ReplicaFetcherThread,scala.collection.Map)|",
      "|java+method:///scala/collection/Map$/canBuildFrom()|",
      "|java+constructor:///kafka/server/ReplicaFetcherThread$$anonfun$fetchEpochsFromLeader$1/ReplicaFetcherThread$$anonfun$fetchEpochsFromLeader$1(kafka.server.ReplicaFetcherThread,scala.runtime.ObjectRef)|",
      "|java+method:///kafka/server/ReplicaFetcherThread/leaderEndpoint()|",
      "|java+constructor:///kafka/server/ReplicaFetcherThread$$anonfun$fetchEpochsFromLeader$5/ReplicaFetcherThread$$anonfun$fetchEpochsFromLeader$5(kafka.server.ReplicaFetcherThread)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///org/apache/kafka/common/requests/OffsetsForLeaderEpochResponse/responses()|",
      "|java+constructor:///kafka/server/ReplicaFetcherThread$$anonfun$fetchEpochsFromLeader$4/ReplicaFetcherThread$$anonfun$fetchEpochsFromLeader$4(kafka.server.ReplicaFetcherThread,java.lang.Throwable)|",
      "|java+method:///scala/collection/TraversableOnce/toMap(scala.Predef$$less$colon$less)|",
      "|java+method:///kafka/server/BlockingSend/sendRequest(org.apache.kafka.common.requests.AbstractRequest$Builder)|",
      "|java+constructor:///kafka/server/ReplicaFetcherThread$$anonfun$4/ReplicaFetcherThread$$anonfun$4(kafka.server.ReplicaFetcherThread)|",
      "|java+method:///kafka/server/ReplicaFetcherThread/shouldSendLeaderEpochRequest()|",
      "|java+method:///scala/Predef$/$conforms()|",
      "|java+method:///org/apache/kafka/clients/ClientResponse/responseBody()|",
      "|java+method:///kafka/server/ReplicaFetcherThread/debug(scala.Function0)|",
      "|java+method:///scala/collection/Map/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///kafka/server/ReplicaFetcherThread/warn(scala.Function0,scala.Function0)|"
    ],
    "v2Body": [
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///scala/collection/JavaConverters$/mapAsScalaMapConverter(java.util.Map)|",
      "|java+constructor:///org/apache/kafka/common/requests/OffsetsForLeaderEpochRequest$Builder/OffsetsForLeaderEpochRequest$Builder(java.util.Map)|",
      "|java+method:///scala/collection/JavaConverters$/mapAsJavaMapConverter(scala.collection.Map)|",
      "|java+method:///scala/runtime/ObjectRef/create(java.lang.Object)|",
      "|java+constructor:///kafka/server/ReplicaFetcherThread$$anonfun$fetchEpochsFromLeader$2/ReplicaFetcherThread$$anonfun$fetchEpochsFromLeader$2(kafka.server.ReplicaFetcherThread,scala.collection.Map)|",
      "|java+method:///scala/collection/Map$/canBuildFrom()|",
      "|java+constructor:///kafka/server/ReplicaFetcherThread$$anonfun$fetchEpochsFromLeader$1/ReplicaFetcherThread$$anonfun$fetchEpochsFromLeader$1(kafka.server.ReplicaFetcherThread,scala.runtime.ObjectRef)|",
      "|java+method:///kafka/server/ReplicaFetcherThread/leaderEndpoint()|",
      "|java+constructor:///kafka/server/ReplicaFetcherThread$$anonfun$fetchEpochsFromLeader$5/ReplicaFetcherThread$$anonfun$fetchEpochsFromLeader$5(kafka.server.ReplicaFetcherThread)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///org/apache/kafka/common/requests/OffsetsForLeaderEpochResponse/responses()|",
      "|java+constructor:///kafka/server/ReplicaFetcherThread$$anonfun$fetchEpochsFromLeader$4/ReplicaFetcherThread$$anonfun$fetchEpochsFromLeader$4(kafka.server.ReplicaFetcherThread,java.lang.Throwable)|",
      "|java+constructor:///kafka/server/ReplicaFetcherThread$$anonfun$fetchEpochsFromLeader$3/ReplicaFetcherThread$$anonfun$fetchEpochsFromLeader$3(kafka.server.ReplicaFetcherThread,java.lang.Throwable)|",
      "|java+constructor:///kafka/server/ReplicaFetcherThread$$anonfun$6/ReplicaFetcherThread$$anonfun$6(kafka.server.ReplicaFetcherThread)|",
      "|java+method:///scala/collection/TraversableOnce/toMap(scala.Predef$$less$colon$less)|",
      "|java+method:///kafka/server/BlockingSend/sendRequest(org.apache.kafka.common.requests.AbstractRequest$Builder)|",
      "|java+method:///kafka/server/ReplicaFetcherThread/shouldSendLeaderEpochRequest()|",
      "|java+method:///scala/Predef$/$conforms()|",
      "|java+method:///org/apache/kafka/clients/ClientResponse/responseBody()|",
      "|java+method:///kafka/server/ReplicaFetcherThread/debug(scala.Function0)|",
      "|java+method:///scala/collection/Map/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///kafka/server/ReplicaFetcherThread/warn(scala.Function0,scala.Function0)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/ReplicaManager$$anonfun$appendToLocalLog$2/apply(scala.Tuple2)|",
    "called": "|java+method:///org/apache/kafka/common/internals/Topic/isInternal(java.lang.String)|",
    "v1Body": [
      "|java+method:///kafka/log/LogAppendInfo$/UnknownLogAppendInfo()|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///kafka/server/BrokerTopicMetrics/bytesInRate()|",
      "|java+method:///kafka/server/LogAppendResult$/apply$default$2()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/server/BrokerTopicStats/allTopicsStats()|",
      "|java+constructor:///org/apache/kafka/common/errors/InvalidTopicException/InvalidTopicException(java.lang.String)|",
      "|java+method:///kafka/cluster/Partition/appendRecordsToLeader(org.apache.kafka.common.record.MemoryRecords,boolean,int)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+constructor:///kafka/server/ReplicaManager$$anonfun$appendToLocalLog$2$$anonfun$apply$9/ReplicaManager$$anonfun$appendToLocalLog$2$$anonfun$apply$9(kafka.server.ReplicaManager$$anonfun$appendToLocalLog$2,java.lang.Throwable)|",
      "|java+method:///scala/Some/x()|",
      "|java+constructor:///kafka/server/ReplicaManager$$anonfun$appendToLocalLog$2$$anonfun$apply$7/ReplicaManager$$anonfun$appendToLocalLog$2$$anonfun$apply$7(kafka.server.ReplicaManager$$anonfun$appendToLocalLog$2,kafka.common.KafkaStorageException)|",
      "|java+method:///kafka/server/BrokerTopicMetrics/failedProduceRequestRate()|",
      "|java+method:///kafka/server/ReplicaManager/getPartition(org.apache.kafka.common.TopicPartition)|",
      "|java+method:///kafka/server/ReplicaManager/error(scala.Function0,scala.Function0)|",
      "|java+method:///com/yammer/metrics/core/Meter/mark()|",
      "|java+constructor:///kafka/server/ReplicaManager$$anonfun$appendToLocalLog$2$$anonfun$apply$6/ReplicaManager$$anonfun$appendToLocalLog$2$$anonfun$apply$6(kafka.server.ReplicaManager$$anonfun$appendToLocalLog$2)|",
      "|java+constructor:///kafka/server/ReplicaManager$$anonfun$appendToLocalLog$2$$anonfun$apply$8/ReplicaManager$$anonfun$appendToLocalLog$2$$anonfun$apply$8(kafka.server.ReplicaManager$$anonfun$appendToLocalLog$2,org.apache.kafka.common.TopicPartition)|",
      "|java+method:///kafka/server/BrokerTopicStats/topicStats(java.lang.String)|",
      "|java+method:///kafka/log/LogAppendInfo/firstOffset()|",
      "|java+method:///kafka/server/ReplicaManager/fatal(scala.Function0,scala.Function0)|",
      "|java+method:///com/yammer/metrics/core/Meter/mark(long)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///kafka/server/BrokerTopicMetrics/messagesInRate()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///kafka/server/ReplicaManager/trace(scala.Function0)|",
      "|java+constructor:///org/apache/kafka/common/errors/UnknownTopicOrPartitionException/UnknownTopicOrPartitionException(java.lang.String)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///kafka/server/BrokerTopicMetrics/totalProduceRequestRate()|",
      "|java+method:///kafka/utils/Exit$/halt(int,scala.Option)|",
      "|java+constructor:///kafka/server/ReplicaManager$$anonfun$appendToLocalLog$2$$anonfun$apply$5/ReplicaManager$$anonfun$appendToLocalLog$2$$anonfun$apply$5(kafka.server.ReplicaManager$$anonfun$appendToLocalLog$2,org.apache.kafka.common.TopicPartition,org.apache.kafka.common.record.MemoryRecords,kafka.log.LogAppendInfo)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///kafka/server/LogAppendResult/LogAppendResult(kafka.log.LogAppendInfo,scala.Option)|",
      "|java+method:///kafka/utils/Exit$/halt$default$2()|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/record/MemoryRecords/sizeInBytes()|",
      "|java+method:///kafka/server/ReplicaManager/kafka$server$ReplicaManager$$localBrokerId()|",
      "|java+method:///kafka/log/LogAppendInfo/lastOffset()|",
      "|java+method:///org/apache/kafka/common/internals/Topic/isInternal(java.lang.String)|",
      "|java+method:///org/apache/kafka/common/TopicPartition/topic()|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///kafka/server/ReplicaManager/brokerTopicStats()|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///scala/Some/x()|",
      "|java+method:///kafka/log/LogAppendInfo$/UnknownLogAppendInfo()|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///kafka/server/BrokerTopicMetrics/bytesInRate()|",
      "|java+method:///kafka/cluster/Partition/logStartOffset()|",
      "|java+method:///kafka/server/LogAppendResult$/apply$default$2()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/server/BrokerTopicStats/allTopicsStats()|",
      "|java+method:///kafka/cluster/Partition/appendRecordsToLeader(org.apache.kafka.common.record.MemoryRecords,boolean,int)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+constructor:///org/apache/kafka/common/errors/KafkaStorageException/KafkaStorageException(java.lang.String)|",
      "|java+constructor:///kafka/server/ReplicaManager$$anonfun$appendToLocalLog$2$$anonfun$apply$11/ReplicaManager$$anonfun$appendToLocalLog$2$$anonfun$apply$11(kafka.server.ReplicaManager$$anonfun$appendToLocalLog$2,java.lang.Throwable)|",
      "|java+method:///kafka/server/BrokerTopicMetrics/failedProduceRequestRate()|",
      "|java+method:///kafka/server/ReplicaManager/getPartition(org.apache.kafka.common.TopicPartition)|",
      "|java+method:///kafka/server/ReplicaManager/error(scala.Function0,scala.Function0)|",
      "|java+method:///com/yammer/metrics/core/Meter/mark()|",
      "|java+constructor:///kafka/server/ReplicaManager$$anonfun$appendToLocalLog$2$$anonfun$apply$10/ReplicaManager$$anonfun$appendToLocalLog$2$$anonfun$apply$10(kafka.server.ReplicaManager$$anonfun$appendToLocalLog$2,org.apache.kafka.common.TopicPartition)|",
      "|java+method:///kafka/server/ReplicaManager$/OfflinePartition()|",
      "|java+method:///kafka/server/BrokerTopicStats/topicStats(java.lang.String)|",
      "|java+method:///kafka/log/LogAppendInfo/firstOffset()|",
      "|java+constructor:///kafka/server/ReplicaManager$$anonfun$appendToLocalLog$2$$anonfun$apply$9/ReplicaManager$$anonfun$appendToLocalLog$2$$anonfun$apply$9(kafka.server.ReplicaManager$$anonfun$appendToLocalLog$2,org.apache.kafka.common.TopicPartition,org.apache.kafka.common.record.MemoryRecords,kafka.log.LogAppendInfo)|",
      "|java+method:///com/yammer/metrics/core/Meter/mark(long)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///kafka/server/BrokerTopicMetrics/messagesInRate()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///kafka/server/ReplicaManager/trace(scala.Function0)|",
      "|java+constructor:///org/apache/kafka/common/errors/UnknownTopicOrPartitionException/UnknownTopicOrPartitionException(java.lang.String)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///kafka/server/BrokerTopicMetrics/totalProduceRequestRate()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///kafka/server/LogAppendResult/LogAppendResult(kafka.log.LogAppendInfo,scala.Option)|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/record/MemoryRecords/sizeInBytes()|",
      "|java+method:///kafka/server/ReplicaManager/kafka$server$ReplicaManager$$localBrokerId()|",
      "|java+method:///kafka/log/LogAppendInfo/lastOffset()|",
      "|java+method:///org/apache/kafka/common/internals/Topic/isInternal(java.lang.String)|",
      "|java+method:///org/apache/kafka/common/TopicPartition/topic()|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///kafka/server/ReplicaManager/brokerTopicStats()|",
      "|java+constructor:///org/apache/kafka/common/errors/InvalidTopicException/InvalidTopicException(java.lang.String)|",
      "|java+method:///kafka/log/LogAppendInfo$/unknownLogAppendInfoWithLogStartOffset(long)|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/UserConfigHandler/processConfigChanges(java.lang.String,java.util.Properties)|",
    "called": "|java+method:///org/apache/kafka/common/utils/Sanitizer/desanitize(java.lang.String)|",
    "v1Body": [
      "|java+method:///kafka/server/UserConfigHandler/updateQuotaConfig(scala.Option,scala.Option,java.util.Properties)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///scala/Option/isDefined()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|",
      "|java+method:///kafka/server/QuotaId$/desanitize(java.lang.String)|",
      "|java+method:///kafka/server/ConfigEntityName$/Default()|",
      "|java+method:///kafka/server/UserConfigHandler/credentialProvider()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///kafka/security/CredentialProvider/updateCredentials(java.lang.String,java.util.Properties)|"
    ],
    "v2Body": [
      "|java+method:///kafka/server/UserConfigHandler/updateQuotaConfig(scala.Option,scala.Option,java.util.Properties)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|",
      "|java+method:///kafka/server/ConfigEntityName$/Default()|",
      "|java+method:///org/apache/kafka/common/utils/Sanitizer/desanitize(java.lang.String)|",
      "|java+method:///scala/Option/isDefined()|",
      "|java+method:///kafka/server/UserConfigHandler/credentialProvider()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///kafka/security/CredentialProvider/updateCredentials(java.lang.String,java.util.Properties)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/KafkaApis/kafka$server$KafkaApis$$createResponse$2(int,kafka.network.RequestChannel$Request,org.apache.kafka.common.requests.FetchRequest,short,java.lang.String,java.util.LinkedHashMap,int)|",
    "called": "|java+constructor:///org/apache/kafka/common/requests/FetchResponse/FetchResponse(java.util.LinkedHashMap,int)|",
    "v1Body": [
      "|java+method:///org/apache/kafka/common/requests/FetchResponse/responseData()|",
      "|java+method:///org/apache/kafka/common/requests/FetchResponse/toStruct(short)|",
      "|java+method:///kafka/network/RequestChannel$Request/header()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$kafka$server$KafkaApis$$createResponse$2$3/KafkaApis$$anonfun$kafka$server$KafkaApis$$createResponse$2$3(kafka.server.KafkaApis,org.apache.kafka.common.requests.FetchRequest)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$kafka$server$KafkaApis$$createResponse$2$2/KafkaApis$$anonfun$kafka$server$KafkaApis$$createResponse$2$2(kafka.server.KafkaApis,java.lang.String,org.apache.kafka.common.protocol.types.Struct)|",
      "|java+constructor:///org/apache/kafka/common/requests/FetchResponse/FetchResponse(java.util.LinkedHashMap,int)|",
      "|java+method:///kafka/network/RequestChannel$Request/connectionId()|",
      "|java+method:///kafka/server/KafkaApis/trace(scala.Function0)|",
      "|java+method:///scala/collection/JavaConverters$/mapAsScalaMapConverter(java.util.Map)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///scala/collection/IterableLike/foreach(scala.Function1)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$kafka$server$KafkaApis$$createResponse$2$1/KafkaApis$$anonfun$kafka$server$KafkaApis$$createResponse$2$1(kafka.server.KafkaApis,org.apache.kafka.common.requests.FetchRequest,short,java.lang.String,java.util.LinkedHashMap)|",
      "|java+method:///org/apache/kafka/common/requests/FetchResponse/toSend(org.apache.kafka.common.protocol.types.Struct,int,java.lang.String,org.apache.kafka.common.requests.RequestHeader)|",
      "|java+constructor:///java/util/LinkedHashMap/LinkedHashMap()|",
      "|java+method:///kafka/network/RequestChannel$Response$/apply(kafka.network.RequestChannel$Request,org.apache.kafka.common.network.Send)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/kafka/common/requests/FetchResponse/responseData()|",
      "|java+method:///scala/collection/JavaConverters$/mapAsScalaMapConverter(java.util.Map)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$kafka$server$KafkaApis$$createResponse$2$2/KafkaApis$$anonfun$kafka$server$KafkaApis$$createResponse$2$2(kafka.server.KafkaApis,org.apache.kafka.common.requests.FetchRequest)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$kafka$server$KafkaApis$$createResponse$2$1/KafkaApis$$anonfun$kafka$server$KafkaApis$$createResponse$2$1(kafka.server.KafkaApis,kafka.network.RequestChannel$Request,org.apache.kafka.common.requests.FetchRequest,short,java.lang.String,java.util.LinkedHashMap)|",
      "|java+constructor:///org/apache/kafka/common/requests/FetchResponse/FetchResponse(java.util.LinkedHashMap,int)|",
      "|java+constructor:///java/util/LinkedHashMap/LinkedHashMap()|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///scala/collection/IterableLike/foreach(scala.Function1)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/network/Processor/sendResponse(kafka.network.RequestChannel$Response,org.apache.kafka.common.network.Send)|",
    "called": "|java+method:///org/apache/kafka/common/network/Selector/send(org.apache.kafka.common.network.Send)|",
    "v1Body": [
      "|java+method:///org/apache/kafka/common/network/Selector/send(org.apache.kafka.common.network.Send)|",
      "|java+method:///scala/Predef$/ArrowAssoc(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/network/Selector/channel(java.lang.String)|",
      "|java+method:///kafka/network/Processor/warn(scala.Function0)|",
      "|java+method:///scala/Predef$ArrowAssoc$/$minus$greater$extension(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///kafka/network/Processor$$anonfun$sendResponse$2/Processor$$anonfun$sendResponse$2(kafka.network.Processor,java.lang.String)|",
      "|java+method:///kafka/network/RequestChannel$Request/connectionId()|",
      "|java+method:///kafka/network/Processor/trace(scala.Function0)|",
      "|java+method:///scala/collection/mutable/Map/$plus$eq(scala.Tuple2)|",
      "|java+method:///kafka/network/Processor/kafka$network$Processor$$inflightResponses()|",
      "|java+method:///kafka/network/RequestChannel$Request/updateRequestMetrics(long)|",
      "|java+method:///kafka/network/RequestChannel$Response/request()|",
      "|java+constructor:///kafka/network/Processor$$anonfun$sendResponse$1/Processor$$anonfun$sendResponse$1(kafka.network.Processor,kafka.network.RequestChannel$Response,java.lang.String)|",
      "|java+method:///kafka/network/Processor/kafka$network$Processor$$selector()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/kafka/common/network/Selector/send(org.apache.kafka.common.network.Send)|",
      "|java+method:///kafka/network/RequestChannel$Request/updateRequestMetrics(long,kafka.network.RequestChannel$Response)|",
      "|java+method:///scala/Option/isDefined()|",
      "|java+method:///scala/Predef$/ArrowAssoc(java.lang.Object)|",
      "|java+method:///scala/Option/isEmpty()|",
      "|java+method:///kafka/network/Processor/warn(scala.Function0)|",
      "|java+method:///scala/Predef$ArrowAssoc$/$minus$greater$extension(java.lang.Object,java.lang.Object)|",
      "|java+method:///kafka/network/Processor/channel(java.lang.String)|",
      "|java+method:///kafka/network/Processor/trace(scala.Function0)|",
      "|java+method:///scala/collection/mutable/Map/$plus$eq(scala.Tuple2)|",
      "|java+method:///kafka/network/Processor/kafka$network$Processor$$inflightResponses()|",
      "|java+method:///kafka/network/RequestChannel$Request/context()|",
      "|java+method:///kafka/network/RequestChannel$Response/request()|",
      "|java+constructor:///kafka/network/Processor$$anonfun$sendResponse$1/Processor$$anonfun$sendResponse$1(kafka.network.Processor,kafka.network.RequestChannel$Response,java.lang.String)|",
      "|java+method:///kafka/network/Processor/kafka$network$Processor$$selector()|",
      "|java+constructor:///kafka/network/Processor$$anonfun$sendResponse$2/Processor$$anonfun$sendResponse$2(kafka.network.Processor,java.lang.String)|",
      "|java+method:///kafka/network/Processor/openOrClosingChannel(java.lang.String)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/cluster/Broker$$anonfun$1$$anonfun$apply$1/apply(scala.Tuple2)|",
    "called": "|java+constructor:///org/apache/kafka/common/network/ListenerName/ListenerName(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/kafka/common/protocol/SecurityProtocol/forName(java.lang.String)|",
      "|java+constructor:///org/apache/kafka/common/network/ListenerName/ListenerName(java.lang.String)|",
      "|java+method:///scala/Predef$/ArrowAssoc(java.lang.Object)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///scala/Predef$ArrowAssoc$/$minus$greater$extension(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/kafka/common/network/ListenerName/ListenerName(java.lang.String)|",
      "|java+method:///scala/Predef$/ArrowAssoc(java.lang.Object)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///org/apache/kafka/common/security/auth/SecurityProtocol/forName(java.lang.String)|",
      "|java+method:///scala/Predef$ArrowAssoc$/$minus$greater$extension(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/tools/StreamsResetter/run(java.lang.String%5B%5D,java.util.Properties)|",
    "called": "|java+method:///org/apache/kafka/clients/admin/AdminClient/create(java.util.Properties)|",
    "v1Body": [
      "|java+method:///java/util/Properties/putAll(java.util.Map)|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///kafka/admin/AdminClient/describeConsumerGroup(java.lang.String,long)|",
      "|java+method:///java/util/Properties/clear()|",
      "|java+method:///kafka/utils/ZkUtils/apply(java.lang.String,int,int,boolean)|",
      "|java+method:///java/lang/Throwable/getMessage()|",
      "|java+method:///kafka/tools/StreamsResetter/maybeResetInputAndSeekToEndIntermediateTopicOffsets()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+method:///kafka/tools/StreamsResetter/parseArguments(java.lang.String%5B%5D)|",
      "|java+method:///kafka/utils/ZkUtils/close()|",
      "|java+method:///kafka/tools/StreamsResetter/maybeDeleteInternalTopics(kafka.utils.ZkUtils)|",
      "|java+method:///kafka/admin/AdminClient/createSimplePlaintext(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///scala/collection/immutable/List/isEmpty()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///org/apache/kafka/common/security/JaasUtils/isZkSecurityEnabled()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///java/util/List/clear()|",
      "|java+method:///kafka/admin/AdminClient/close()|",
      "|java+method:///kafka/admin/AdminClient$ConsumerGroupSummary/consumers()|",
      "|java+method:///scala/collection/JavaConversions/seqAsJavaList(scala.collection.Seq)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///kafka/utils/ZkUtils/getAllTopics()|",
      "|java+method:///scala/Option/get()|"
    ],
    "v2Body": [
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///kafka/tools/StreamsResetter/maybeDeleteInternalTopics(org.apache.kafka.clients.admin.KafkaAdminClient)|",
      "|java+method:///org/apache/kafka/clients/admin/KafkaAdminClient/close(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///java/util/Properties/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/kafka/clients/admin/KafkaAdminClient/listTopics()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/clear()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/kafka/clients/admin/AdminClient/create(java.util.Properties)|",
      "|java+method:///org/apache/kafka/common/utils/Utils/loadProps(java.lang.String)|",
      "|java+method:///java/util/Properties/putAll(java.util.Map)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/util/HashMap/HashMap(java.util.Map)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///org/apache/kafka/common/KafkaFuture/get(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+constructor:///java/util/Properties/Properties()|",
      "|java+method:///java/lang/Throwable/printStackTrace(java.io.PrintStream)|",
      "|java+method:///kafka/tools/StreamsResetter/maybeResetInputAndSeekToEndIntermediateTopicOffsets(java.util.Map)|",
      "|java+method:///kafka/tools/StreamsResetter/validateNoActiveConsumers(java.lang.String,java.util.Properties)|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/kafka/clients/admin/ListTopicsResult/names()|",
      "|java+method:///java/util/HashMap/putAll(java.util.Map)|",
      "|java+method:///kafka/tools/StreamsResetter/parseArguments(java.lang.String%5B%5D)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/ReplicaManager$$anonfun$appendToLocalLog$2$$anonfun$apply$9/apply()|",
    "called": "|java+method:///org/apache/kafka/common/record/MemoryRecords/sizeInBytes()|",
    "v1Body": [
      "|java+method:///kafka/server/ReplicaManager$$anonfun$appendToLocalLog$2$$anonfun$apply$9/apply()|"
    ],
    "v2Body": [
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///kafka/server/ReplicaManager$$anonfun$appendToLocalLog$2$$anonfun$apply$9/apply()|",
      "|java+method:///kafka/log/LogAppendInfo/firstOffset()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///org/apache/kafka/common/record/MemoryRecords/sizeInBytes()|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/TopicPartition/partition()|",
      "|java+method:///kafka/log/LogAppendInfo/lastOffset()|",
      "|java+method:///org/apache/kafka/common/TopicPartition/topic()|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/KafkaApis/kafka$server$KafkaApis$$produceResponseCallback$1(int,kafka.network.RequestChannel$Request,org.apache.kafka.common.requests.ProduceRequest,scala.collection.Map,scala.runtime.BooleanRef)|",
    "called": "|java+method:///org/apache/kafka/common/requests/ProduceResponse/errorCounts()|",
    "v1Body": [
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$kafka$server$KafkaApis$$produceResponseCallback$1$1/KafkaApis$$anonfun$kafka$server$KafkaApis$$produceResponseCallback$1$1(kafka.server.KafkaApis,scala.collection.Map,int)|",
      "|java+method:///kafka/server/KafkaApis/sendResponseMaybeThrottle(kafka.network.RequestChannel$Request,scala.Function1)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$19/KafkaApis$$anonfun$19(kafka.server.KafkaApis,kafka.network.RequestChannel$Request,java.lang.String)|",
      "|java+method:///scala/collection/TraversableOnce/mkString(java.lang.String)|",
      "|java+constructor:///kafka/network/RequestChannel$Response/RequestChannel$Response(kafka.network.RequestChannel$Request,scala.Option,kafka.network.RequestChannel$ResponseAction)|",
      "|java+method:///kafka/server/KafkaApis/info(scala.Function0)|",
      "|java+method:///kafka/server/KafkaApis/sendResponseExemptThrottle(kafka.network.RequestChannel$Response)|",
      "|java+method:///org/apache/kafka/common/requests/ProduceRequest/acks()|",
      "|java+method:///scala/collection/Map/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/collection/Map$/canBuildFrom()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$18/KafkaApis$$anonfun$18(kafka.server.KafkaApis)|"
    ],
    "v2Body": [
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$kafka$server$KafkaApis$$produceResponseCallback$1$2/KafkaApis$$anonfun$kafka$server$KafkaApis$$produceResponseCallback$1$2(kafka.server.KafkaApis,scala.collection.Map,int)|",
      "|java+method:///scala/collection/Map$/canBuildFrom()|",
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///kafka/server/KafkaApis/sendResponseMaybeThrottle(kafka.network.RequestChannel$Request,scala.Function1)|",
      "|java+method:///kafka/server/KafkaApis/closeConnection(kafka.network.RequestChannel$Request,java.util.Map)|",
      "|java+constructor:///org/apache/kafka/common/requests/ProduceResponse/ProduceResponse(java.util.Map)|",
      "|java+method:///scala/collection/TraversableOnce/mkString(java.lang.String)|",
      "|java+method:///kafka/server/KafkaApis/info(scala.Function0)|",
      "|java+method:///kafka/server/KafkaApis/sendNoOpResponseExemptThrottle(kafka.network.RequestChannel$Request)|",
      "|java+method:///org/apache/kafka/common/requests/ProduceRequest/acks()|",
      "|java+method:///scala/collection/Map/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///org/apache/kafka/common/requests/ProduceResponse/errorCounts()|",
      "|java+method:///scala/collection/JavaConverters$/mapAsJavaMapConverter(scala.collection.Map)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$kafka$server$KafkaApis$$produceResponseCallback$1$1/KafkaApis$$anonfun$kafka$server$KafkaApis$$produceResponseCallback$1$1(kafka.server.KafkaApis,kafka.network.RequestChannel$Request,java.lang.String)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$11/KafkaApis$$anonfun$11(kafka.server.KafkaApis)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/ReplicaManager/maybeUpdateMetadataCache(int,org.apache.kafka.common.requests.UpdateMetadataRequest)|",
    "called": "|java+constructor:///org/apache/kafka/common/errors/ControllerMovedException/ControllerMovedException(java.lang.String)|",
    "v1Body": [
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///org/apache/kafka/common/requests/UpdateMetadataRequest/controllerEpoch()|",
      "|java+method:///kafka/controller/KafkaController$StateChangeLogger/warn(scala.Function0)|",
      "|java+constructor:///org/apache/kafka/common/errors/ControllerMovedException/ControllerMovedException(java.lang.String)|",
      "|java+method:///org/apache/kafka/common/requests/UpdateMetadataRequest/controllerId()|",
      "|java+method:///kafka/server/ReplicaManager/controllerEpoch()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/server/ReplicaManager/stateChangeLogger()|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+method:///kafka/server/MetadataCache/updateCache(int,org.apache.kafka.common.requests.UpdateMetadataRequest)|",
      "|java+method:///kafka/server/ReplicaManager/replicaStateChangeLock()|",
      "|java+method:///kafka/server/ReplicaManager/controllerEpoch_$eq(int)|",
      "|java+constructor:///kafka/server/ReplicaManager$$anonfun$maybeUpdateMetadataCache$1/ReplicaManager$$anonfun$maybeUpdateMetadataCache$1(kafka.server.ReplicaManager,java.lang.String)|",
      "|java+method:///kafka/server/ReplicaManager/metadataCache()|",
      "|java+method:///kafka/server/ReplicaManager/kafka$server$ReplicaManager$$localBrokerId()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/kafka/common/requests/UpdateMetadataRequest/controllerEpoch()|",
      "|java+method:///kafka/server/ReplicaManager/kafka$server$ReplicaManager$$stateChangeLogger()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///org/apache/kafka/common/requests/UpdateMetadataRequest/controllerId()|",
      "|java+method:///kafka/server/ReplicaManager/controllerEpoch()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///kafka/server/ReplicaManager/metadataCache()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///kafka/server/MetadataCache/updateCache(int,org.apache.kafka.common.requests.UpdateMetadataRequest)|",
      "|java+method:///kafka/server/ReplicaManager/replicaStateChangeLock()|",
      "|java+constructor:///org/apache/kafka/common/errors/ControllerMovedException/ControllerMovedException(java.lang.String)|",
      "|java+method:///kafka/controller/StateChangeLogger/messageWithPrefix(java.lang.String)|",
      "|java+method:///kafka/controller/StateChangeLogger/warn(scala.Function0)|",
      "|java+method:///kafka/server/ReplicaManager/controllerEpoch_$eq(int)|",
      "|java+constructor:///kafka/server/ReplicaManager$$anonfun$maybeUpdateMetadataCache$1/ReplicaManager$$anonfun$maybeUpdateMetadataCache$1(kafka.server.ReplicaManager,java.lang.String)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/KafkaApis$$anonfun$64/apply(scala.Tuple2)|",
    "called": "|java+constructor:///org/apache/kafka/common/errors/InvalidRequestException/InvalidRequestException(java.lang.String)|",
    "v1Body": [
      "|java+method:///kafka/server/KafkaApis/kafka$server$KafkaApis$$authorize(kafka.network.RequestChannel$Session,kafka.security.auth.Operation,kafka.security.auth.Resource)|",
      "|java+method:///kafka/server/MetadataCache/contains(java.lang.String)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/network/RequestChannel$Request/session()|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///org/apache/kafka/common/TopicPartition/topic()|",
      "|java+method:///kafka/server/KafkaApis/metadataCache()|",
      "|java+constructor:///kafka/security/auth/Resource/Resource(kafka.security.auth.ResourceType,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/kafka/common/requests/Resource/name()|",
      "|java+method:///kafka/server/KafkaApis/kafka$server$KafkaApis$$authorize(kafka.network.RequestChannel$Session,kafka.security.auth.Operation,kafka.security.auth.Resource)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/kafka/common/requests/Resource/type()|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///kafka/security/auth/Resource/Resource(kafka.security.auth.ResourceType,java.lang.String)|",
      "|java+constructor:///org/apache/kafka/common/errors/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///kafka/network/RequestChannel$Request/session()|",
      "|java+method:///kafka/security/auth/Resource$/ClusterResource()|",
      "|java+method:///scala/Tuple2/_1()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/KafkaApis/kafka$server$KafkaApis$$createResponse$4(int,kafka.network.RequestChannel$Request,int,org.apache.kafka.common.requests.MetadataResponse$TopicMetadata)|",
    "called": "|java+constructor:///org/apache/kafka/common/requests/FindCoordinatorResponse/FindCoordinatorResponse(int,org.apache.kafka.common.protocol.Errors,org.apache.kafka.common.Node)|",
    "v1Body": [
      "|java+method:///scala/Some/x()|",
      "|java+method:///org/apache/kafka/common/requests/MetadataResponse$TopicMetadata/error()|",
      "|java+method:///org/apache/kafka/common/Node/noNode()|",
      "|java+constructor:///org/apache/kafka/common/requests/FindCoordinatorResponse/FindCoordinatorResponse(int,org.apache.kafka.common.protocol.Errors,org.apache.kafka.common.Node)|",
      "|java+method:///kafka/server/KafkaApis/trace(scala.Function0)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///scala/Option/map(scala.Function1)|",
      "|java+method:///scala/collection/JavaConverters$/asScalaBufferConverter(java.util.List)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$kafka$server$KafkaApis$$createResponse$4$1/KafkaApis$$anonfun$kafka$server$KafkaApis$$createResponse$4$1(kafka.server.KafkaApis,kafka.network.RequestChannel$Request,org.apache.kafka.common.requests.FindCoordinatorResponse)|",
      "|java+method:///org/apache/kafka/common/Node/isEmpty()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$48/KafkaApis$$anonfun$48(kafka.server.KafkaApis)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/collection/IterableLike/find(scala.Function1)|",
      "|java+method:///org/apache/kafka/common/requests/MetadataResponse$TopicMetadata/partitionMetadata()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$47/KafkaApis$$anonfun$47(kafka.server.KafkaApis,int)|"
    ],
    "v2Body": [
      "|java+method:///scala/Some/x()|",
      "|java+method:///org/apache/kafka/common/requests/MetadataResponse$TopicMetadata/error()|",
      "|java+method:///org/apache/kafka/common/Node/noNode()|",
      "|java+constructor:///org/apache/kafka/common/requests/FindCoordinatorResponse/FindCoordinatorResponse(int,org.apache.kafka.common.protocol.Errors,org.apache.kafka.common.Node)|",
      "|java+method:///kafka/server/KafkaApis/trace(scala.Function0)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///scala/Option/map(scala.Function1)|",
      "|java+method:///scala/collection/JavaConverters$/asScalaBufferConverter(java.util.List)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$kafka$server$KafkaApis$$createResponse$4$1/KafkaApis$$anonfun$kafka$server$KafkaApis$$createResponse$4$1(kafka.server.KafkaApis,kafka.network.RequestChannel$Request,org.apache.kafka.common.requests.FindCoordinatorResponse)|",
      "|java+method:///org/apache/kafka/common/Node/isEmpty()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$37/KafkaApis$$anonfun$37(kafka.server.KafkaApis)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/collection/IterableLike/find(scala.Function1)|",
      "|java+method:///org/apache/kafka/common/requests/MetadataResponse$TopicMetadata/partitionMetadata()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$36/KafkaApis$$anonfun$36(kafka.server.KafkaApis,int)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/ClientQuotaManager/getOrCreateQuotaSensors(java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/apache/kafka/common/utils/Sanitizer/sanitize(java.lang.String)|",
    "v1Body": [
      "|java+method:///kafka/server/ClientQuotaManager/sensorAccessor()|",
      "|java+method:///kafka/server/ClientQuotaManagerConfig$/InactiveSensorExpirationTimeSeconds()|",
      "|java+method:///kafka/server/ClientQuotaManager/lock()|",
      "|java+method:///kafka/server/SensorAccess/getOrCreate(java.lang.String,long,java.util.concurrent.locks.ReentrantReadWriteLock,org.apache.kafka.common.metrics.Metrics,scala.Function0,scala.Function0,scala.Function0)|",
      "|java+constructor:///kafka/server/ClientQuotaManager$$anonfun$getOrCreateQuotaSensors$4/ClientQuotaManager$$anonfun$getOrCreateQuotaSensors$4(kafka.server.ClientQuotaManager,kafka.server.QuotaEntity)|",
      "|java+constructor:///kafka/server/ClientQuotaManager$$anonfun$getOrCreateQuotaSensors$3/ClientQuotaManager$$anonfun$getOrCreateQuotaSensors$3(kafka.server.ClientQuotaManager)|",
      "|java+method:///kafka/server/ClientQuotaManager/kafka$server$ClientQuotaManager$$quotaEntity(java.lang.String,java.lang.String)|",
      "|java+method:///kafka/server/ClientQuotaManager/getQuotaSensorName(kafka.server.QuotaId)|",
      "|java+method:///kafka/server/ClientQuotaManager/getThrottleTimeSensorName(kafka.server.QuotaId)|",
      "|java+constructor:///kafka/server/ClientQuotaManager$$anonfun$getOrCreateQuotaSensors$1/ClientQuotaManager$$anonfun$getOrCreateQuotaSensors$1(kafka.server.ClientQuotaManager,kafka.server.QuotaEntity)|",
      "|java+method:///kafka/server/ClientQuotaManager/metrics()|",
      "|java+constructor:///kafka/server/ClientSensors/ClientSensors(kafka.server.QuotaEntity,org.apache.kafka.common.metrics.Sensor,org.apache.kafka.common.metrics.Sensor)|",
      "|java+constructor:///kafka/server/ClientQuotaManager$$anonfun$getOrCreateQuotaSensors$2/ClientQuotaManager$$anonfun$getOrCreateQuotaSensors$2(kafka.server.ClientQuotaManager,kafka.server.QuotaEntity)|",
      "|java+constructor:///kafka/server/ClientQuotaManager$$anonfun$getOrCreateQuotaSensors$6/ClientQuotaManager$$anonfun$getOrCreateQuotaSensors$6(kafka.server.ClientQuotaManager)|",
      "|java+method:///kafka/server/QuotaEntity/quotaId()|",
      "|java+constructor:///kafka/server/ClientQuotaManager$$anonfun$getOrCreateQuotaSensors$5/ClientQuotaManager$$anonfun$getOrCreateQuotaSensors$5(kafka.server.ClientQuotaManager)|"
    ],
    "v2Body": [
      "|java+method:///kafka/server/ClientQuotaManagerConfig$/InactiveSensorExpirationTimeSeconds()|",
      "|java+constructor:///kafka/server/ClientSensors/ClientSensors(kafka.server.QuotaEntity,org.apache.kafka.common.metrics.Sensor,org.apache.kafka.common.metrics.Sensor)|",
      "|java+constructor:///kafka/server/ClientQuotaManager$$anonfun$getOrCreateQuotaSensors$4/ClientQuotaManager$$anonfun$getOrCreateQuotaSensors$4(kafka.server.ClientQuotaManager,kafka.server.QuotaEntity)|",
      "|java+method:///kafka/server/ClientQuotaManager/kafka$server$ClientQuotaManager$$quotaEntity(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+constructor:///kafka/server/ClientQuotaManager$$anonfun$getOrCreateQuotaSensors$3/ClientQuotaManager$$anonfun$getOrCreateQuotaSensors$3(kafka.server.ClientQuotaManager)|",
      "|java+method:///kafka/server/ClientQuotaManager/getQuotaSensorName(kafka.server.QuotaId)|",
      "|java+method:///kafka/server/ClientQuotaManager/sensorAccessor()|",
      "|java+method:///org/apache/kafka/common/utils/Sanitizer/sanitize(java.lang.String)|",
      "|java+method:///kafka/server/ClientQuotaManager/getThrottleTimeSensorName(kafka.server.QuotaId)|",
      "|java+constructor:///kafka/server/ClientQuotaManager$$anonfun$getOrCreateQuotaSensors$1/ClientQuotaManager$$anonfun$getOrCreateQuotaSensors$1(kafka.server.ClientQuotaManager,kafka.server.QuotaEntity)|",
      "|java+constructor:///kafka/server/ClientQuotaManager$$anonfun$getOrCreateQuotaSensors$2/ClientQuotaManager$$anonfun$getOrCreateQuotaSensors$2(kafka.server.ClientQuotaManager,kafka.server.QuotaEntity)|",
      "|java+method:///kafka/server/SensorAccess/getOrCreate(java.lang.String,long,scala.Function0,scala.Function0,scala.Function0)|",
      "|java+constructor:///kafka/server/ClientQuotaManager$$anonfun$getOrCreateQuotaSensors$6/ClientQuotaManager$$anonfun$getOrCreateQuotaSensors$6(kafka.server.ClientQuotaManager)|",
      "|java+method:///kafka/server/QuotaEntity/quotaId()|",
      "|java+constructor:///kafka/server/ClientQuotaManager$$anonfun$getOrCreateQuotaSensors$5/ClientQuotaManager$$anonfun$getOrCreateQuotaSensors$5(kafka.server.ClientQuotaManager)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/admin/TopicCommand$$anonfun$alterTopic$1/apply(java.lang.String)|",
    "called": "|java+constructor:///org/apache/kafka/common/errors/InvalidTopicException/InvalidTopicException(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/util/Properties/putAll(java.util.Map)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///scala/Predef$/println(java.lang.Object)|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///kafka/admin/AdminUtils$/fetchEntityConfig(kafka.utils.ZkUtils,java.lang.String,java.lang.String)|",
      "|java+method:///scala/collection/Seq/foreach(scala.Function1)|",
      "|java+method:///kafka/admin/AdminUtils$/addPartitions(kafka.utils.ZkUtils,java.lang.String,int,java.lang.String,boolean,kafka.admin.RackAwareMode)|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/options()|",
      "|java+method:///kafka/admin/TopicCommand$/parseTopicConfigsToBeDeleted(kafka.admin.TopicCommand$TopicCommandOptions)|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/deleteConfigOpt()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/partitionsOpt()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///kafka/admin/AdminUtils$/addPartitions$default$5()|",
      "|java+constructor:///kafka/admin/TopicCommand$$anonfun$alterTopic$1$$anonfun$apply$1/TopicCommand$$anonfun$alterTopic$1$$anonfun$apply$1(kafka.admin.TopicCommand$$anonfun$alterTopic$1,java.util.Properties)|",
      "|java+method:///kafka/admin/TopicCommand$/parseTopicConfigsToBeAdded(kafka.admin.TopicCommand$TopicCommandOptions)|",
      "|java+method:///kafka/admin/AdminUtils$/changeTopicConfig(kafka.utils.ZkUtils,java.lang.String,java.util.Properties)|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/replicaAssignmentOpt()|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/configOpt()|",
      "|java+method:///kafka/admin/AdminUtils$/addPartitions$default$6()|",
      "|java+method:///kafka/server/ConfigType$/Topic()|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|"
    ],
    "v2Body": [
      "|java+method:///kafka/admin/AdminUtils$/addPartitions$default$7()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///scala/Predef$/println(java.lang.Object)|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///kafka/admin/AdminUtils$/fetchEntityConfig(kafka.utils.ZkUtils,java.lang.String,java.lang.String)|",
      "|java+method:///scala/collection/mutable/Map/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/collection/Seq/foreach(scala.Function1)|",
      "|java+method:///kafka/admin/AdminUtils$/getBrokerMetadatas$default$3()|",
      "|java+method:///scala/collection/immutable/List$/apply(scala.collection.Seq)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+constructor:///org/apache/kafka/common/errors/InvalidTopicException/InvalidTopicException(java.lang.String)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+constructor:///kafka/admin/TopicCommand$$anonfun$alterTopic$1$$anonfun$4/TopicCommand$$anonfun$alterTopic$1$$anonfun$4(kafka.admin.TopicCommand$$anonfun$alterTopic$1,scala.collection.mutable.Map)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///kafka/utils/Implicits$PropertiesOps/$plus$plus$eq(java.util.Properties)|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/options()|",
      "|java+method:///kafka/admin/AdminUtils$/addPartitions(kafka.utils.ZkUtils,java.lang.String,scala.collection.Map,scala.collection.Seq,int,scala.Option,boolean)|",
      "|java+method:///kafka/utils/ZkUtils/getReplicaAssignmentForTopics(scala.collection.Seq)|",
      "|java+constructor:///kafka/admin/TopicCommand$$anonfun$alterTopic$1$$anonfun$2/TopicCommand$$anonfun$alterTopic$1$$anonfun$2(kafka.admin.TopicCommand$$anonfun$alterTopic$1)|",
      "|java+method:///scala/Option$/apply(java.lang.Object)|",
      "|java+method:///kafka/admin/AdminUtils$/getBrokerMetadatas(kafka.utils.ZkUtils,kafka.admin.RackAwareMode,scala.Option)|",
      "|java+method:///kafka/admin/TopicCommand$/parseTopicConfigsToBeDeleted(kafka.admin.TopicCommand$TopicCommandOptions)|",
      "|java+constructor:///kafka/admin/TopicCommand$$anonfun$alterTopic$1$$anonfun$3/TopicCommand$$anonfun$alterTopic$1$$anonfun$3(kafka.admin.TopicCommand$$anonfun$alterTopic$1)|",
      "|java+method:///scala/Option/filter(scala.Function1)|",
      "|java+method:///scala/Option/map(scala.Function1)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///kafka/admin/AdminUtils$/getBrokerMetadatas$default$2()|",
      "|java+method:///kafka/utils/Implicits$/PropertiesOps(java.util.Properties)|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/deleteConfigOpt()|",
      "|java+constructor:///kafka/admin/TopicCommand$$anonfun$alterTopic$1$$anonfun$apply$1/TopicCommand$$anonfun$alterTopic$1$$anonfun$apply$1(kafka.admin.TopicCommand$$anonfun$alterTopic$1,java.util.Properties)|",
      "|java+method:///kafka/admin/TopicCommand$/parseTopicConfigsToBeAdded(kafka.admin.TopicCommand$TopicCommandOptions)|",
      "|java+method:///kafka/admin/AdminUtils$/changeTopicConfig(kafka.utils.ZkUtils,java.lang.String,java.util.Properties)|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/replicaAssignmentOpt()|",
      "|java+method:///scala/collection/mutable/Map$/canBuildFrom()|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/partitionsOpt()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///scala/collection/mutable/Map/isEmpty()|",
      "|java+method:///kafka/admin/TopicCommand$TopicCommandOptions/configOpt()|",
      "|java+method:///kafka/server/ConfigType$/Topic()|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/ReplicaFetcherThread$$anonfun$processPartitionData$1/apply()|",
    "called": "|java+method:///org/apache/kafka/common/record/MemoryRecords/sizeInBytes()|",
    "v1Body": [
      "|java+method:///kafka/server/LogOffsetMetadata/messageOffset()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/record/MemoryRecords/sizeInBytes()|",
      "|java+method:///kafka/cluster/Replica/logEndOffset()|",
      "|java+method:///kafka/server/ReplicaFetcherThread$PartitionData/highWatermark()|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+method:///kafka/cluster/Replica/brokerId()|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///kafka/server/ReplicaFetcherThread$$anonfun$processPartitionData$1/apply()|"
    ],
    "v2Body": [
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///kafka/server/LogOffsetMetadata/messageOffset()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/record/MemoryRecords/sizeInBytes()|",
      "|java+method:///kafka/cluster/Replica/logEndOffset()|",
      "|java+method:///kafka/server/ReplicaFetcherThread$PartitionData/highWatermark()|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///kafka/server/ReplicaFetcherThread$$anonfun$processPartitionData$1/apply()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/cluster/Broker/getNode(org.apache.kafka.common.network.ListenerName)|",
    "called": "|java+constructor:///org/apache/kafka/common/Node/Node(int,java.lang.String,int,java.lang.String)|",
    "v1Body": [
      "|java+method:///kafka/cluster/EndPoint/host()|",
      "|java+constructor:///kafka/cluster/Broker$$anonfun$7/Broker$$anonfun$7(kafka.cluster.Broker,org.apache.kafka.common.network.ListenerName)|",
      "|java+method:///kafka/cluster/Broker/rack()|",
      "|java+method:///scala/collection/immutable/Map/getOrElse(java.lang.Object,scala.Function0)|",
      "|java+method:///kafka/cluster/Broker/id()|",
      "|java+method:///scala/Option/orNull(scala.Predef$$less$colon$less)|",
      "|java+method:///kafka/cluster/Broker/endPointsMap()|",
      "|java+method:///scala/Predef$/$conforms()|",
      "|java+method:///kafka/cluster/EndPoint/port()|",
      "|java+constructor:///org/apache/kafka/common/Node/Node(int,java.lang.String,int,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///kafka/cluster/EndPoint/host()|",
      "|java+method:///scala/collection/immutable/Map/getOrElse(java.lang.Object,scala.Function0)|",
      "|java+method:///kafka/cluster/Broker/id()|",
      "|java+method:///scala/Option/orNull(scala.Predef$$less$colon$less)|",
      "|java+method:///kafka/cluster/Broker/endPointsMap()|",
      "|java+method:///scala/Predef$/$conforms()|",
      "|java+method:///kafka/cluster/EndPoint/port()|",
      "|java+constructor:///org/apache/kafka/common/Node/Node(int,java.lang.String,int,java.lang.String)|",
      "|java+method:///kafka/cluster/Broker/rack()|",
      "|java+constructor:///kafka/cluster/Broker$$anonfun$6/Broker$$anonfun$6(kafka.cluster.Broker,org.apache.kafka.common.network.ListenerName)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/KafkaServer/initZk()|",
    "called": "|java+method:///org/apache/kafka/common/security/JaasUtils/isZkSecurityEnabled()|",
    "v1Body": [
      "|java+method:///kafka/server/KafkaConfig$/ZkEnableSecureAclsProp()|",
      "|java+method:///scala/Option/foreach(scala.Function1)|",
      "|java+method:///kafka/server/KafkaServer/info(scala.Function0)|",
      "|java+method:///kafka/server/KafkaServer/config()|",
      "|java+method:///kafka/server/KafkaConfig/zkConnect()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/kafka/common/security/JaasUtils/isZkSecurityEnabled()|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///java/lang/String/indexOf(java.lang.String)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/server/KafkaConfig/zkEnableSecureAcls()|",
      "|java+constructor:///kafka/server/KafkaServer$$anonfun$initZk$2/KafkaServer$$anonfun$initZk$2(kafka.server.KafkaServer,int,boolean)|",
      "|java+method:///kafka/utils/ZkUtils$/apply(java.lang.String,int,int,boolean)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///kafka/server/KafkaConfig/zkSessionTimeoutMs()|",
      "|java+method:///kafka/server/KafkaConfig/zkConnectionTimeoutMs()|",
      "|java+method:///kafka/utils/ZkUtils/setupCommonPaths()|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|",
      "|java+constructor:///kafka/server/KafkaServer$$anonfun$initZk$1/KafkaServer$$anonfun$initZk$1(kafka.server.KafkaServer)|",
      "|java+constructor:///java/lang/SecurityException/SecurityException(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///kafka/server/KafkaConfig$/ZkEnableSecureAclsProp()|",
      "|java+method:///scala/Option/foreach(scala.Function1)|",
      "|java+method:///kafka/server/KafkaServer/info(scala.Function0)|",
      "|java+method:///kafka/server/KafkaServer/config()|",
      "|java+method:///kafka/server/KafkaConfig/zkConnect()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/kafka/common/security/JaasUtils/isZkSecurityEnabled()|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///java/lang/String/indexOf(java.lang.String)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/server/KafkaConfig/zkEnableSecureAcls()|",
      "|java+constructor:///kafka/server/KafkaServer$$anonfun$initZk$2/KafkaServer$$anonfun$initZk$2(kafka.server.KafkaServer,int,boolean)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///kafka/utils/ZkUtils$/withMetrics(java.lang.String,int,int,boolean,org.apache.kafka.common.utils.Time)|",
      "|java+method:///kafka/server/KafkaConfig/zkSessionTimeoutMs()|",
      "|java+method:///kafka/server/KafkaConfig/zkConnectionTimeoutMs()|",
      "|java+method:///kafka/utils/ZkUtils/setupCommonPaths()|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|",
      "|java+constructor:///kafka/server/KafkaServer$$anonfun$initZk$1/KafkaServer$$anonfun$initZk$1(kafka.server.KafkaServer)|",
      "|java+constructor:///java/lang/SecurityException/SecurityException(java.lang.String)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/AdminManager$$anonfun$describeConfigs$1/createResponseConfig$1(org.apache.kafka.common.config.AbstractConfig,boolean,scala.Function1,scala.Option)|",
    "called": "|java+method:///org/apache/kafka/common/config/AbstractConfig/values()|",
    "v1Body": [
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///scala/collection/JavaConverters$/mapAsScalaMapConverter(java.util.Map)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///scala/collection/immutable/IndexedSeq$/canBuildFrom()|",
      "|java+constructor:///org/apache/kafka/common/requests/DescribeConfigsResponse$Config/DescribeConfigsResponse$Config(org.apache.kafka.common.requests.ApiError,java.util.Collection)|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$describeConfigs$1$$anonfun$10/AdminManager$$anonfun$describeConfigs$1$$anonfun$10(kafka.server.AdminManager$$anonfun$describeConfigs$1,org.apache.kafka.common.config.AbstractConfig,boolean,scala.Function1)|",
      "|java+method:///scala/collection/JavaConverters$/seqAsJavaListConverter(scala.collection.Seq)|",
      "|java+method:///scala/collection/TraversableOnce/toIndexedSeq()|",
      "|java+method:///scala/collection/immutable/IndexedSeq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/collection/TraversableLike/filter(scala.Function1)|",
      "|java+method:///org/apache/kafka/common/config/AbstractConfig/values()|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$describeConfigs$1$$anonfun$9/AdminManager$$anonfun$describeConfigs$1$$anonfun$9(kafka.server.AdminManager$$anonfun$describeConfigs$1,scala.Option)|"
    ],
    "v2Body": [
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$describeConfigs$1$$anonfun$17/AdminManager$$anonfun$describeConfigs$1$$anonfun$17(kafka.server.AdminManager$$anonfun$describeConfigs$1,org.apache.kafka.common.config.AbstractConfig,boolean,scala.Function1)|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$describeConfigs$1$$anonfun$16/AdminManager$$anonfun$describeConfigs$1$$anonfun$16(kafka.server.AdminManager$$anonfun$describeConfigs$1,scala.Option)|",
      "|java+method:///scala/collection/JavaConverters$/mapAsScalaMapConverter(java.util.Map)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///scala/collection/immutable/IndexedSeq$/canBuildFrom()|",
      "|java+constructor:///org/apache/kafka/common/requests/DescribeConfigsResponse$Config/DescribeConfigsResponse$Config(org.apache.kafka.common.requests.ApiError,java.util.Collection)|",
      "|java+method:///scala/collection/JavaConverters$/seqAsJavaListConverter(scala.collection.Seq)|",
      "|java+method:///org/apache/kafka/common/config/AbstractConfig/values()|",
      "|java+method:///scala/collection/TraversableOnce/toIndexedSeq()|",
      "|java+method:///scala/collection/immutable/IndexedSeq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/collection/TraversableLike/filter(scala.Function1)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$12/apply(kafka.cluster.Broker)|",
    "called": "|java+constructor:///org/apache/kafka/common/requests/UpdateMetadataRequest$Broker/UpdateMetadataRequest$Broker(int,java.util.List,java.lang.String)|",
    "v1Body": [
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///org/apache/kafka/common/Node/port()|",
      "|java+method:///kafka/cluster/Broker/id()|",
      "|java+method:///scala/Option/orNull(scala.Predef$$less$colon$less)|",
      "|java+method:///scala/collection/Seq$/apply(scala.collection.Seq)|",
      "|java+constructor:///org/apache/kafka/common/requests/UpdateMetadataRequest$Broker/UpdateMetadataRequest$Broker(int,java.util.List,java.lang.String)|",
      "|java+method:///kafka/cluster/Broker/getNode(org.apache.kafka.common.network.ListenerName)|",
      "|java+method:///scala/Predef$/$conforms()|",
      "|java+method:///scala/collection/JavaConverters$/seqAsJavaListConverter(scala.collection.Seq)|",
      "|java+constructor:///org/apache/kafka/common/requests/UpdateMetadataRequest$EndPoint/UpdateMetadataRequest$EndPoint(java.lang.String,int,org.apache.kafka.common.protocol.SecurityProtocol,org.apache.kafka.common.network.ListenerName)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///kafka/cluster/Broker/rack()|",
      "|java+method:///org/apache/kafka/common/network/ListenerName/forSecurityProtocol(org.apache.kafka.common.protocol.SecurityProtocol)|",
      "|java+method:///org/apache/kafka/common/Node/host()|"
    ],
    "v2Body": [
      "|java+method:///kafka/cluster/Broker/endPoints()|",
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///kafka/cluster/Broker/rack()|",
      "|java+method:///kafka/cluster/Broker/id()|",
      "|java+method:///scala/Option/orNull(scala.Predef$$less$colon$less)|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$12$$anonfun$13/ControllerBrokerRequestBatch$$anonfun$12$$anonfun$13(kafka.controller.ControllerBrokerRequestBatch$$anonfun$12)|",
      "|java+constructor:///org/apache/kafka/common/requests/UpdateMetadataRequest$Broker/UpdateMetadataRequest$Broker(int,java.util.List,java.lang.String)|",
      "|java+method:///scala/Predef$/$conforms()|",
      "|java+method:///scala/collection/Seq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/collection/JavaConverters$/seqAsJavaListConverter(scala.collection.Seq)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/QuotaConfigHandler/updateQuotaConfig(scala.Option,scala.Option,java.util.Properties)|",
    "called": "|java+constructor:///org/apache/kafka/common/metrics/Quota/Quota(double,boolean)|",
    "v1Body": [
      "|java+method:///kafka/server/DynamicConfig$Client$/ProducerByteRateOverrideProp()|",
      "|java+method:///kafka/server/ClientQuotaManager/updateQuota(scala.Option,scala.Option,scala.Option)|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///kafka/server/DynamicConfig$Client$/ConsumerByteRateOverrideProp()|",
      "|java+constructor:///org/apache/kafka/common/metrics/Quota/Quota(double,boolean)|",
      "|java+method:///kafka/server/ClientRequestQuotaManager/updateQuota(scala.Option,scala.Option,scala.Option)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///kafka/server/QuotaFactory$QuotaManagers/produce()|",
      "|java+method:///kafka/server/QuotaConfigHandler/quotaManagers()|",
      "|java+method:///scala/collection/immutable/StringOps/toDouble()|",
      "|java+method:///kafka/server/QuotaFactory$QuotaManagers/request()|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///kafka/server/QuotaFactory$QuotaManagers/fetch()|",
      "|java+method:///scala/collection/immutable/StringOps/toLong()|",
      "|java+method:///kafka/server/DynamicConfig$Client$/RequestPercentageOverrideProp()|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///kafka/server/DynamicConfig$Client$/ProducerByteRateOverrideProp()|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///java/util/Properties/getProperty(java.lang.String)|",
      "|java+method:///kafka/server/DynamicConfig$Client$/ConsumerByteRateOverrideProp()|",
      "|java+constructor:///org/apache/kafka/common/metrics/Quota/Quota(double,boolean)|",
      "|java+method:///kafka/server/ClientRequestQuotaManager/updateQuota(scala.Option,scala.Option,scala.Option,scala.Option)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///kafka/server/ClientQuotaManager/updateQuota(scala.Option,scala.Option,scala.Option,scala.Option)|",
      "|java+method:///kafka/server/QuotaFactory$QuotaManagers/produce()|",
      "|java+method:///kafka/server/QuotaConfigHandler/quotaManagers()|",
      "|java+method:///scala/collection/immutable/StringOps/toDouble()|",
      "|java+method:///kafka/server/QuotaFactory$QuotaManagers/request()|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///scala/Option/map(scala.Function1)|",
      "|java+constructor:///kafka/server/QuotaConfigHandler$$anonfun$2/QuotaConfigHandler$$anonfun$2(kafka.server.QuotaConfigHandler)|",
      "|java+method:///kafka/server/QuotaFactory$QuotaManagers/fetch()|",
      "|java+method:///scala/collection/immutable/StringOps/toLong()|",
      "|java+method:///kafka/server/DynamicConfig$Client$/RequestPercentageOverrideProp()|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/ReplicaManager/getReplicaOrException(org.apache.kafka.common.TopicPartition)|",
    "called": "|java+constructor:///org/apache/kafka/common/errors/KafkaStorageException/KafkaStorageException(java.lang.String)|",
    "v1Body": [
      "|java+method:///kafka/server/ReplicaManager/getReplica(org.apache.kafka.common.TopicPartition)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+constructor:///kafka/server/ReplicaManager$$anonfun$getReplicaOrException$1/ReplicaManager$$anonfun$getReplicaOrException$1(kafka.server.ReplicaManager,org.apache.kafka.common.TopicPartition)|"
    ],
    "v2Body": [
      "|java+method:///scala/Some/x()|",
      "|java+constructor:///org/apache/kafka/common/errors/KafkaStorageException/KafkaStorageException(java.lang.String)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///kafka/server/ReplicaManager/getPartition(org.apache.kafka.common.TopicPartition)|",
      "|java+method:///kafka/server/ReplicaManager$/OfflinePartition()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/apache/kafka/common/errors/ReplicaNotAvailableException/ReplicaNotAvailableException(java.lang.String)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+constructor:///kafka/server/ReplicaManager$$anonfun$getReplicaOrException$1/ReplicaManager$$anonfun$getReplicaOrException$1(kafka.server.ReplicaManager,org.apache.kafka.common.TopicPartition)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///kafka/cluster/Partition/getReplica(int)|",
      "|java+method:///kafka/server/ReplicaManager/kafka$server$ReplicaManager$$localBrokerId()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/coordinator/transaction/TransactionLog$$anonfun$2/apply(scala.Tuple2)|",
    "called": "|java+method:///org/apache/kafka/common/protocol/types/Struct/set(org.apache.kafka.common.protocol.types.BoundField,java.lang.Object)|",
    "v1Body": [
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/instance(org.apache.kafka.common.protocol.types.Field)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/set(org.apache.kafka.common.protocol.types.Field,java.lang.Object)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/PartitionIdsField()|",
      "|java+method:///scala/collection/TraversableOnce/toArray(scala.reflect.ClassTag)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/TxnPartitionsField()|",
      "|java+method:///scala/collection/immutable/Set$/canBuildFrom()|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/PartitionsTopicField()|",
      "|java+method:///scala/collection/immutable/Set/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+constructor:///kafka/coordinator/transaction/TransactionLog$$anonfun$2$$anonfun$3/TransactionLog$$anonfun$2$$anonfun$3(kafka.coordinator.transaction.TransactionLog$$anonfun$2)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/instance(org.apache.kafka.common.protocol.types.BoundField)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/set(org.apache.kafka.common.protocol.types.BoundField,java.lang.Object)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/PartitionIdsField()|",
      "|java+method:///scala/collection/TraversableOnce/toArray(scala.reflect.ClassTag)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/TxnPartitionsField()|",
      "|java+method:///scala/collection/immutable/Set$/canBuildFrom()|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/PartitionsTopicField()|",
      "|java+method:///scala/collection/immutable/Set/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+constructor:///kafka/coordinator/transaction/TransactionLog$$anonfun$2$$anonfun$3/TransactionLog$$anonfun$2$$anonfun$3(kafka.coordinator.transaction.TransactionLog$$anonfun$2)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/admin/AdminUtils$/validateCreateOrUpdateTopic(kafka.utils.ZkUtils,java.lang.String,scala.collection.Map,java.util.Properties,boolean)|",
    "called": "|java+method:///org/apache/kafka/common/internals/Topic/validate(java.lang.String)|",
    "v1Body": [
      "|java+method:///scala/collection/Seq/contains(java.lang.Object)|",
      "|java+constructor:///kafka/admin/AdminUtils$$anonfun$validateCreateOrUpdateTopic$1/AdminUtils$$anonfun$validateCreateOrUpdateTopic$1()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/apache/kafka/common/errors/TopicExistsException/TopicExistsException(java.lang.String)|",
      "|java+constructor:///kafka/admin/AdminUtils$$anonfun$validateCreateOrUpdateTopic$2/AdminUtils$$anonfun$validateCreateOrUpdateTopic$2(scala.collection.Map)|",
      "|java+method:///scala/collection/Seq/nonEmpty()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/collection/Iterable/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/collection/TraversableOnce/toSet()|",
      "|java+method:///scala/collection/Map/values()|",
      "|java+method:///kafka/admin/AdminUtils$/topicExists(kafka.utils.ZkUtils,java.lang.String)|",
      "|java+constructor:///kafka/admin/AdminUtils$$anonfun$16/AdminUtils$$anonfun$16(java.lang.String)|",
      "|java+method:///scala/collection/Iterable/foreach(scala.Function1)|",
      "|java+method:///org/apache/kafka/common/internals/Topic/validate(java.lang.String)|",
      "|java+method:///scala/collection/Iterable$/canBuildFrom()|",
      "|java+method:///scala/collection/Seq/filter(scala.Function1)|",
      "|java+constructor:///org/apache/kafka/common/errors/InvalidReplicaAssignmentException/InvalidReplicaAssignmentException(java.lang.String)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+constructor:///org/apache/kafka/common/errors/InvalidTopicException/InvalidTopicException(java.lang.String)|",
      "|java+method:///kafka/log/LogConfig$/validate(java.util.Properties)|",
      "|java+method:///scala/collection/Seq/mkString(java.lang.String)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///org/apache/kafka/common/internals/Topic/hasCollisionChars(java.lang.String)|",
      "|java+method:///kafka/utils/ZkUtils/getAllTopics()|",
      "|java+method:///scala/collection/immutable/Set/size()|"
    ],
    "v2Body": [
      "|java+method:///scala/collection/Seq/contains(java.lang.Object)|",
      "|java+constructor:///kafka/admin/AdminUtils$$anonfun$validateCreateOrUpdateTopic$1/AdminUtils$$anonfun$validateCreateOrUpdateTopic$1()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/apache/kafka/common/errors/TopicExistsException/TopicExistsException(java.lang.String)|",
      "|java+constructor:///kafka/admin/AdminUtils$$anonfun$validateCreateOrUpdateTopic$2/AdminUtils$$anonfun$validateCreateOrUpdateTopic$2(scala.collection.Map)|",
      "|java+method:///scala/collection/Seq/nonEmpty()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/collection/Iterable/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/collection/TraversableOnce/toSet()|",
      "|java+method:///scala/collection/Map/values()|",
      "|java+method:///kafka/admin/AdminUtils$/topicExists(kafka.utils.ZkUtils,java.lang.String)|",
      "|java+method:///scala/collection/Iterable/foreach(scala.Function1)|",
      "|java+constructor:///kafka/admin/AdminUtils$$anonfun$17/AdminUtils$$anonfun$17(java.lang.String)|",
      "|java+method:///org/apache/kafka/common/internals/Topic/validate(java.lang.String)|",
      "|java+method:///scala/collection/Iterable$/canBuildFrom()|",
      "|java+method:///scala/collection/Seq/filter(scala.Function1)|",
      "|java+constructor:///org/apache/kafka/common/errors/InvalidReplicaAssignmentException/InvalidReplicaAssignmentException(java.lang.String)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+constructor:///org/apache/kafka/common/errors/InvalidTopicException/InvalidTopicException(java.lang.String)|",
      "|java+method:///kafka/log/LogConfig$/validate(java.util.Properties)|",
      "|java+method:///scala/collection/Seq/mkString(java.lang.String)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///org/apache/kafka/common/internals/Topic/hasCollisionChars(java.lang.String)|",
      "|java+method:///kafka/utils/ZkUtils/getAllTopics()|",
      "|java+method:///scala/collection/immutable/Set/size()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/utils/CoreUtils$/generateUuidAsBase64()|",
    "called": "|java+method:///org/apache/kafka/common/utils/Base64/urlEncoderNoPadding()|",
    "v1Body": [
      "|java+method:///java/util/UUID/randomUUID()|",
      "|java+method:///kafka/utils/CoreUtils$/getBytesFromUuid(java.util.UUID)|",
      "|java+method:///kafka/utils/CoreUtils$/urlSafeBase64EncodeNoPadding(byte%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/kafka/common/utils/Base64/urlEncoderNoPadding()|",
      "|java+method:///java/util/UUID/randomUUID()|",
      "|java+method:///kafka/utils/CoreUtils$/getBytesFromUuid(java.util.UUID)|",
      "|java+method:///org/apache/kafka/common/utils/Base64$Encoder/encodeToString(byte%5B%5D)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/KafkaApis$$anonfun$44/apply(scala.Tuple2)|",
    "called": "|java+constructor:///org/apache/kafka/common/requests/ApiError/ApiError(org.apache.kafka.common.protocol.Errors,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/server/KafkaApis/kafka$server$KafkaApis$$authorizeTopicDescribe$1(org.apache.kafka.common.TopicPartition,kafka.network.RequestChannel$Request)|",
      "|java+method:///scala/Tuple2/_1()|"
    ],
    "v2Body": [
      "|java+method:///scala/Tuple2/_1()|",
      "|java+constructor:///org/apache/kafka/common/requests/ApiError/ApiError(org.apache.kafka.common.protocol.Errors,java.lang.String)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/coordinator/transaction/TransactionLog$$anonfun$readTxnRecordValue$1/apply(java.lang.Object)|",
    "called": "|java+method:///org/apache/kafka/common/protocol/types/Struct/getString(org.apache.kafka.common.protocol.types.BoundField)|",
    "v1Body": [
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///scala/Array$/canBuildFrom(scala.reflect.ClassTag)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/PartitionsTopicField()|",
      "|java+method:///scala/collection/mutable/ArrayOps/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+constructor:///kafka/coordinator/transaction/TransactionLog$$anonfun$readTxnRecordValue$1$$anonfun$4/TransactionLog$$anonfun$readTxnRecordValue$1$$anonfun$4(kafka.coordinator.transaction.TransactionLog$$anonfun$readTxnRecordValue$1,java.lang.String)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$$anonfun$readTxnRecordValue$1/apply(java.lang.Object)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/PartitionIdsField()|",
      "|java+method:///kafka/coordinator/transaction/TransactionMetadata/addPartitions(scala.collection.Set)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/getArray(org.apache.kafka.common.protocol.types.Field)|",
      "|java+method:///scala/collection/mutable/ArrayOps/toSet()|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/getString(org.apache.kafka.common.protocol.types.Field)|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///scala/Array$/canBuildFrom(scala.reflect.ClassTag)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/PartitionsTopicField()|",
      "|java+method:///scala/collection/mutable/ArrayOps/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+constructor:///kafka/coordinator/transaction/TransactionLog$$anonfun$readTxnRecordValue$1$$anonfun$4/TransactionLog$$anonfun$readTxnRecordValue$1$$anonfun$4(kafka.coordinator.transaction.TransactionLog$$anonfun$readTxnRecordValue$1,java.lang.String)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$$anonfun$readTxnRecordValue$1/apply(java.lang.Object)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/PartitionIdsField()|",
      "|java+method:///kafka/coordinator/transaction/TransactionMetadata/addPartitions(scala.collection.Set)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/getString(org.apache.kafka.common.protocol.types.BoundField)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/getArray(org.apache.kafka.common.protocol.types.BoundField)|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|",
      "|java+method:///scala/collection/mutable/ArrayOps/toSet()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/KafkaServer$$anonfun$shutdown$15/apply$mcV$sp()|",
    "called": "|java+method:///org/apache/kafka/common/metrics/Metrics/close()|",
    "v1Body": [
      "|java+method:///kafka/server/KafkaServer/brokerTopicStats()|",
      "|java+method:///kafka/server/BrokerTopicStats/close()|"
    ],
    "v2Body": [
      "|java+method:///kafka/server/KafkaServer/metrics()|",
      "|java+method:///org/apache/kafka/common/metrics/Metrics/close()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/network/Processor$$anonfun$processCompletedReceives$1/apply(org.apache.kafka.common.network.NetworkReceive)|",
    "called": "|java+method:///org/apache/kafka/common/network/KafkaChannel/principal()|",
    "v1Body": [
      "|java+constructor:///kafka/network/RequestChannel$Session/RequestChannel$Session(org.apache.kafka.common.security.auth.KafkaPrincipal,java.net.InetAddress)|",
      "|java+method:///org/apache/kafka/common/utils/Time/nanoseconds()|",
      "|java+method:///kafka/network/RequestChannel/sendRequest(kafka.network.RequestChannel$Request)|",
      "|java+method:///org/apache/kafka/common/network/NetworkReceive/source()|",
      "|java+method:///kafka/network/Processor/close(org.apache.kafka.common.network.Selector,java.lang.String)|",
      "|java+constructor:///kafka/network/RequestChannel$Request/RequestChannel$Request(int,java.lang.String,kafka.network.RequestChannel$Session,java.nio.ByteBuffer,long,org.apache.kafka.common.network.ListenerName,org.apache.kafka.common.protocol.SecurityProtocol)|",
      "|java+method:///org/apache/kafka/common/network/Selector/channel(java.lang.String)|",
      "|java+method:///kafka/network/Processor/kafka$network$Processor$$selector()|",
      "|java+constructor:///org/apache/kafka/common/security/auth/KafkaPrincipal/KafkaPrincipal(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/kafka/common/network/NetworkReceive/payload()|",
      "|java+method:///kafka/network/Processor/error(scala.Function0,scala.Function0)|",
      "|java+constructor:///kafka/network/Processor$$anonfun$processCompletedReceives$1$$anonfun$apply$5/Processor$$anonfun$processCompletedReceives$1$$anonfun$apply$5(kafka.network.Processor$$anonfun$processCompletedReceives$1,org.apache.kafka.common.network.NetworkReceive)|",
      "|java+constructor:///kafka/network/Processor$$anonfun$processCompletedReceives$1$$anonfun$apply$6/Processor$$anonfun$processCompletedReceives$1$$anonfun$apply$6(kafka.network.Processor$$anonfun$processCompletedReceives$1,java.lang.Throwable)|",
      "|java+method:///org/apache/kafka/common/network/KafkaChannel/socketAddress()|",
      "|java+method:///org/apache/kafka/common/network/Selector/closingChannel(java.lang.String)|",
      "|java+method:///java/security/Principal/getName()|",
      "|java+method:///org/apache/kafka/common/network/Selector/mute(java.lang.String)|",
      "|java+method:///kafka/network/Processor/id()|",
      "|java+method:///org/apache/kafka/common/network/KafkaChannel/principal()|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/kafka/common/utils/Time/nanoseconds()|",
      "|java+method:///kafka/network/RequestChannel/sendRequest(kafka.network.RequestChannel$Request)|",
      "|java+method:///kafka/network/RequestChannel/metrics()|",
      "|java+method:///org/apache/kafka/common/network/KafkaChannel/socketAddress()|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///kafka/network/Processor/kafka$network$Processor$$selector()|",
      "|java+method:///org/apache/kafka/common/network/NetworkReceive/payload()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/network/Processor/openOrClosingChannel(java.lang.String)|",
      "|java+method:///org/apache/kafka/common/network/Selector/mute(java.lang.String)|",
      "|java+constructor:///org/apache/kafka/common/requests/RequestContext/RequestContext(org.apache.kafka.common.requests.RequestHeader,java.lang.String,java.net.InetAddress,org.apache.kafka.common.security.auth.KafkaPrincipal,org.apache.kafka.common.network.ListenerName,org.apache.kafka.common.security.auth.SecurityProtocol)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/Some/x()|",
      "|java+constructor:///kafka/network/RequestChannel$Request/RequestChannel$Request(int,org.apache.kafka.common.requests.RequestContext,long,org.apache.kafka.common.memory.MemoryPool,java.nio.ByteBuffer,kafka.network.RequestChannel$Metrics)|",
      "|java+method:///org/apache/kafka/common/requests/RequestHeader/parse(java.nio.ByteBuffer)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/kafka/common/network/NetworkReceive/source()|",
      "|java+method:///kafka/network/Processor/kafka$network$Processor$$processChannelException(java.lang.String,java.lang.String,java.lang.Throwable)|",
      "|java+method:///kafka/network/Processor/id()|",
      "|java+method:///org/apache/kafka/common/network/KafkaChannel/principal()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/utils/CoreUtils$/newThread(java.lang.String,boolean,scala.Function0)|",
    "called": "|java+constructor:///org/apache/kafka/common/utils/KafkaThread/KafkaThread(java.lang.String,java.lang.Runnable,boolean)|",
    "v1Body": [
      "|java+method:///kafka/utils/CoreUtils$/runnable(scala.Function0)|",
      "|java+method:///org/apache/kafka/common/utils/Utils/newThread(java.lang.String,java.lang.Runnable,boolean)|"
    ],
    "v2Body": [
      "|java+method:///kafka/utils/CoreUtils$/runnable(scala.Function0)|",
      "|java+constructor:///org/apache/kafka/common/utils/KafkaThread/KafkaThread(java.lang.String,java.lang.Runnable,boolean)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/KafkaApis/handleOffsetForLeaderEpochRequest(kafka.network.RequestChannel$Request)|",
    "called": "|java+constructor:///org/apache/kafka/common/requests/OffsetsForLeaderEpochResponse/OffsetsForLeaderEpochResponse(java.util.Map)|",
    "v1Body": [
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///kafka/server/KafkaApis/replicaManager()|",
      "|java+method:///org/apache/kafka/common/requests/OffsetsForLeaderEpochRequest/epochsByTopicPartition()|",
      "|java+method:///scala/collection/JavaConverters$/mapAsScalaMapConverter(java.util.Map)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///kafka/server/KafkaApis/authorizeClusterAction(kafka.network.RequestChannel$Request)|",
      "|java+method:///kafka/utils/NotNothing$/notNothingEvidence(scala.Predef$$eq$colon$eq)|",
      "|java+method:///kafka/network/RequestChannel$Response$/apply(kafka.network.RequestChannel$Request,org.apache.kafka.common.requests.AbstractResponse)|",
      "|java+method:///kafka/server/ReplicaManager/lastOffsetForLeaderEpoch(scala.collection.Map)|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///scala/Predef$$eq$colon$eq$/tpEquals()|",
      "|java+method:///kafka/network/RequestChannel$Request/body(scala.reflect.ClassTag,kafka.utils.NotNothing)|",
      "|java+method:///scala/collection/JavaConverters$/mapAsJavaMapConverter(scala.collection.Map)|",
      "|java+constructor:///org/apache/kafka/common/requests/OffsetsForLeaderEpochResponse/OffsetsForLeaderEpochResponse(java.util.Map)|",
      "|java+method:///kafka/server/KafkaApis/sendResponseExemptThrottle(kafka.network.RequestChannel$Response)|"
    ],
    "v2Body": [
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///kafka/server/KafkaApis/replicaManager()|",
      "|java+method:///org/apache/kafka/common/requests/OffsetsForLeaderEpochRequest/epochsByTopicPartition()|",
      "|java+method:///scala/collection/JavaConverters$/mapAsScalaMapConverter(java.util.Map)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///kafka/server/KafkaApis/authorizeClusterAction(kafka.network.RequestChannel$Request)|",
      "|java+method:///kafka/utils/NotNothing$/notNothingEvidence(scala.Predef$$eq$colon$eq)|",
      "|java+constructor:///org/apache/kafka/common/requests/OffsetsForLeaderEpochResponse/OffsetsForLeaderEpochResponse(java.util.Map)|",
      "|java+method:///kafka/server/ReplicaManager/lastOffsetForLeaderEpoch(scala.collection.Map)|",
      "|java+method:///kafka/server/KafkaApis/sendResponseExemptThrottle(kafka.network.RequestChannel$Request,org.apache.kafka.common.requests.AbstractResponse)|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///scala/Predef$$eq$colon$eq$/tpEquals()|",
      "|java+method:///kafka/network/RequestChannel$Request/body(scala.reflect.ClassTag,kafka.utils.NotNothing)|",
      "|java+method:///scala/collection/JavaConverters$/mapAsJavaMapConverter(scala.collection.Map)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/network/Processor/openOrClosingChannel(java.lang.String)|",
    "called": "|java+method:///org/apache/kafka/common/network/Selector/channel(java.lang.String)|",
    "v1Body": [
      "|java+method:///scala/Option/orElse(scala.Function0)|",
      "|java+method:///kafka/network/Processor/channel(java.lang.String)|",
      "|java+constructor:///kafka/network/Processor$$anonfun$openOrClosingChannel$1/Processor$$anonfun$openOrClosingChannel$1(kafka.network.Processor,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///scala/Option/orElse(scala.Function0)|",
      "|java+method:///kafka/network/Processor/kafka$network$Processor$$selector()|",
      "|java+constructor:///kafka/network/Processor$$anonfun$openOrClosingChannel$1/Processor$$anonfun$openOrClosingChannel$1(kafka.network.Processor,java.lang.String)|",
      "|java+method:///org/apache/kafka/common/network/Selector/channel(java.lang.String)|",
      "|java+method:///scala/Option$/apply(java.lang.Object)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/admin/ConfigCommand$Entity/toString()|",
    "called": "|java+method:///org/apache/kafka/common/utils/Sanitizer/desanitize(java.lang.String)|",
    "v1Body": [
      "|java+method:///scala/Some/x()|",
      "|java+method:///kafka/admin/ConfigCommand$Entity/entityType()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/admin/ConfigCommand$Entity/sanitizedName()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///kafka/server/QuotaId$/desanitize(java.lang.String)|",
      "|java+method:///kafka/server/ConfigEntityName$/Default()|",
      "|java+method:///kafka/server/ConfigType$/Topic()|",
      "|java+method:///kafka/server/ConfigType$/Client()|",
      "|java+method:///kafka/server/ConfigType$/User()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+method:///scala/Some/x()|",
      "|java+method:///kafka/admin/ConfigCommand$Entity/entityType()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/utils/Sanitizer/desanitize(java.lang.String)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/admin/ConfigCommand$Entity/sanitizedName()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///kafka/server/ConfigEntityName$/Default()|",
      "|java+method:///kafka/server/ConfigType$/Topic()|",
      "|java+method:///kafka/server/ConfigType$/Client()|",
      "|java+method:///kafka/server/ConfigType$/User()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/ReplicaManager$$anonfun$10/apply(scala.Tuple2)|",
    "called": "|java+constructor:///org/apache/kafka/common/requests/ProduceResponse$PartitionResponse/ProduceResponse$PartitionResponse(org.apache.kafka.common.protocol.Errors,long,long,long)|",
    "v1Body": [
      "|java+method:///kafka/server/LogAppendResult/info()|",
      "|java+method:///kafka/log/LogAppendInfo/firstOffset()|",
      "|java+method:///scala/Predef$/ArrowAssoc(java.lang.Object)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///kafka/log/LogAppendInfo/logAppendTime()|",
      "|java+method:///scala/Predef$ArrowAssoc$/$minus$greater$extension(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///kafka/server/ProducePartitionStatus/ProducePartitionStatus(long,org.apache.kafka.common.requests.ProduceResponse$PartitionResponse)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/log/LogAppendInfo/lastOffset()|",
      "|java+constructor:///org/apache/kafka/common/requests/ProduceResponse$PartitionResponse/ProduceResponse$PartitionResponse(org.apache.kafka.common.protocol.Errors,long,long)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///kafka/server/LogAppendResult/error()|"
    ],
    "v2Body": [
      "|java+method:///kafka/server/LogAppendResult/info()|",
      "|java+method:///kafka/log/LogAppendInfo/logStartOffset()|",
      "|java+method:///kafka/log/LogAppendInfo/firstOffset()|",
      "|java+method:///scala/Predef$/ArrowAssoc(java.lang.Object)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Predef$ArrowAssoc$/$minus$greater$extension(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///kafka/server/ProducePartitionStatus/ProducePartitionStatus(long,org.apache.kafka.common.requests.ProduceResponse$PartitionResponse)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/log/LogAppendInfo/lastOffset()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///kafka/server/LogAppendResult/error()|",
      "|java+method:///kafka/log/LogAppendInfo/logAppendTime()|",
      "|java+constructor:///org/apache/kafka/common/requests/ProduceResponse$PartitionResponse/ProduceResponse$PartitionResponse(org.apache.kafka.common.protocol.Errors,long,long,long)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/ReplicaFetcherThread/earliestOrLatestOffset(org.apache.kafka.common.TopicPartition,long)|",
    "called": "|java+method:///org/apache/kafka/common/requests/ListOffsetRequest$Builder/forReplica(short,int)|",
    "v1Body": [
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///kafka/api/ApiVersion/$greater$eq(java.lang.Object)|",
      "|java+method:///scala/collection/JavaConverters$/mapAsJavaMapConverter(scala.collection.Map)|",
      "|java+method:///scala/collection/Map$/apply(scala.collection.Seq)|",
      "|java+method:///kafka/server/BlockingSend/sendRequest(org.apache.kafka.common.requests.AbstractRequest$Builder)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/apache/kafka/common/protocol/Errors/exception()|",
      "|java+method:///org/apache/kafka/clients/ClientResponse/responseBody()|",
      "|java+method:///org/apache/kafka/common/requests/ListOffsetRequest$Builder/setTargetTimes(java.util.Map)|",
      "|java+constructor:///org/apache/kafka/common/requests/ListOffsetRequest$PartitionData/ListOffsetRequest$PartitionData(long,int)|",
      "|java+method:///scala/Predef$/ArrowAssoc(java.lang.Object)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///kafka/server/ReplicaFetcherThread/leaderEndpoint()|",
      "|java+method:///org/apache/kafka/common/requests/ListOffsetRequest$Builder/setOffsetData(java.util.Map)|",
      "|java+method:///scala/Predef$ArrowAssoc$/$minus$greater$extension(java.lang.Object,java.lang.Object)|",
      "|java+method:///kafka/server/KafkaConfig/interBrokerProtocolVersion()|",
      "|java+method:///org/apache/kafka/common/requests/ListOffsetRequest$Builder/forReplica(short,int)|",
      "|java+method:///scala/Predef$/long2Long(long)|",
      "|java+method:///kafka/server/ReplicaFetcherThread/replicaId()|",
      "|java+method:///org/apache/kafka/common/requests/ListOffsetResponse/responseData()|"
    ],
    "v2Body": [
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///kafka/api/ApiVersion/$greater$eq(java.lang.Object)|",
      "|java+method:///scala/collection/JavaConverters$/mapAsJavaMapConverter(scala.collection.Map)|",
      "|java+method:///scala/collection/Map$/apply(scala.collection.Seq)|",
      "|java+method:///kafka/server/BlockingSend/sendRequest(org.apache.kafka.common.requests.AbstractRequest$Builder)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/apache/kafka/common/protocol/Errors/exception()|",
      "|java+method:///org/apache/kafka/clients/ClientResponse/responseBody()|",
      "|java+method:///org/apache/kafka/common/requests/ListOffsetRequest$Builder/setTargetTimes(java.util.Map)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///kafka/server/ReplicaFetcherThread/kafka$server$ReplicaFetcherThread$$replicaId()|",
      "|java+constructor:///org/apache/kafka/common/requests/ListOffsetRequest$PartitionData/ListOffsetRequest$PartitionData(long,int)|",
      "|java+method:///scala/Predef$/ArrowAssoc(java.lang.Object)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///kafka/server/ReplicaFetcherThread/leaderEndpoint()|",
      "|java+method:///org/apache/kafka/common/requests/ListOffsetRequest$Builder/setOffsetData(java.util.Map)|",
      "|java+method:///scala/Predef$ArrowAssoc$/$minus$greater$extension(java.lang.Object,java.lang.Object)|",
      "|java+method:///kafka/server/KafkaConfig/interBrokerProtocolVersion()|",
      "|java+method:///org/apache/kafka/common/requests/ListOffsetRequest$Builder/forReplica(short,int)|",
      "|java+method:///org/apache/kafka/common/requests/ListOffsetResponse/responseData()|",
      "|java+method:///scala/Predef$/long2Long(long)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/MetadataCache$$anonfun$updateCache$1$$anonfun$apply$14$$anonfun$apply$15/apply(org.apache.kafka.common.requests.UpdateMetadataRequest$EndPoint)|",
    "called": "|java+constructor:///org/apache/kafka/common/Node/Node(int,java.lang.String,int)|",
    "v1Body": [
      "|java+method:///scala/collection/mutable/ArrayBuffer/$plus$eq(java.lang.Object)|",
      "|java+constructor:///org/apache/kafka/common/Node/Node(int,java.lang.String,int)|",
      "|java+method:///java/util/HashMap/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///kafka/cluster/EndPoint/EndPoint(java.lang.String,int,org.apache.kafka.common.network.ListenerName,org.apache.kafka.common.protocol.SecurityProtocol)|"
    ],
    "v2Body": [
      "|java+method:///scala/collection/mutable/ArrayBuffer/$plus$eq(java.lang.Object)|",
      "|java+constructor:///org/apache/kafka/common/Node/Node(int,java.lang.String,int)|",
      "|java+method:///java/util/HashMap/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///kafka/cluster/EndPoint/EndPoint(java.lang.String,int,org.apache.kafka.common.network.ListenerName,org.apache.kafka.common.security.auth.SecurityProtocol)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/cluster/Partition/lowWatermarkIfLeader()|",
    "called": "|java+constructor:///org/apache/kafka/common/errors/NotLeaderForPartitionException/NotLeaderForPartitionException(java.lang.String)|",
    "v1Body": [
      "|java+method:///scala/runtime/BoxesRunTime/unboxToLong(java.lang.Object)|",
      "|java+method:///kafka/cluster/Partition/kafka$cluster$Partition$$isLeaderReplicaLocal()|",
      "|java+method:///scala/collection/SetLike/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///kafka/cluster/Partition/assignedReplicas()|",
      "|java+constructor:///org/apache/kafka/common/errors/NotLeaderForPartitionException/NotLeaderForPartitionException(java.lang.String)|",
      "|java+constructor:///kafka/cluster/Partition$$anonfun$lowWatermarkIfLeader$4/Partition$$anonfun$lowWatermarkIfLeader$4(kafka.cluster.Partition)|",
      "|java+constructor:///kafka/cluster/Partition$$anonfun$lowWatermarkIfLeader$3/Partition$$anonfun$lowWatermarkIfLeader$3(kafka.cluster.Partition)|",
      "|java+constructor:///kafka/cluster/Partition$$anonfun$lowWatermarkIfLeader$2/Partition$$anonfun$lowWatermarkIfLeader$2(kafka.cluster.Partition)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/cluster/Partition/topicPartition()|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+method:///scala/collection/TraversableOnce/reduceOption(scala.Function2)|",
      "|java+constructor:///kafka/cluster/Partition$$anonfun$lowWatermarkIfLeader$1/Partition$$anonfun$lowWatermarkIfLeader$1(kafka.cluster.Partition)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///kafka/cluster/Partition/kafka$cluster$Partition$$localBrokerId()|",
      "|java+method:///scala/collection/immutable/Set$/canBuildFrom()|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+method:///scala/collection/immutable/Set/filter(scala.Function1)|"
    ],
    "v2Body": [
      "|java+method:///scala/runtime/BoxesRunTime/unboxToLong(java.lang.Object)|",
      "|java+method:///kafka/cluster/Partition/kafka$cluster$Partition$$isLeaderReplicaLocal()|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///kafka/cluster/Partition/assignedReplicas()|",
      "|java+constructor:///org/apache/kafka/common/errors/NotLeaderForPartitionException/NotLeaderForPartitionException(java.lang.String)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///kafka/utils/CoreUtils$/min(scala.collection.TraversableOnce,java.lang.Object,scala.math.Ordering)|",
      "|java+constructor:///kafka/cluster/Partition$$anonfun$5/Partition$$anonfun$5(kafka.cluster.Partition)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+method:///scala/collection/immutable/Set/collect(scala.PartialFunction,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///kafka/cluster/Partition/topicPartition()|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///kafka/cluster/Partition/kafka$cluster$Partition$$localBrokerId()|",
      "|java+method:///scala/collection/immutable/Set$/canBuildFrom()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/coordinator/transaction/TransactionLog$/valueToBytes(kafka.coordinator.transaction.TxnTransitMetadata)|",
    "called": "|java+method:///org/apache/kafka/common/protocol/types/Struct/set(org.apache.kafka.common.protocol.types.BoundField,java.lang.Object)|",
    "v1Body": [
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+constructor:///org/apache/kafka/common/protocol/types/Struct/Struct(org.apache.kafka.common.protocol.types.Schema)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/collection/immutable/Map/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/TxnStartTimestampField()|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/TxnPartitionsField()|",
      "|java+method:///kafka/coordinator/transaction/TxnTransitMetadata/txnStartTimestamp()|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/Current()|",
      "|java+method:///kafka/coordinator/transaction/TxnTransitMetadata/txnState()|",
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/sizeOf()|",
      "|java+method:///java/nio/ByteBuffer/putShort(short)|",
      "|java+method:///kafka/coordinator/transaction/TransactionState/byte()|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/TxnTimeoutField()|",
      "|java+method:///kafka/coordinator/transaction/TxnTransitMetadata/txnLastUpdateTimestamp()|",
      "|java+method:///kafka/coordinator/transaction/TxnTransitMetadata/producerId()|",
      "|java+method:///scala/collection/immutable/Set/groupBy(scala.Function1)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToShort(short)|",
      "|java+constructor:///kafka/coordinator/transaction/TransactionLog$$anonfun$2/TransactionLog$$anonfun$2(org.apache.kafka.common.protocol.types.Struct)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/set(org.apache.kafka.common.protocol.types.Field,java.lang.Object)|",
      "|java+constructor:///kafka/coordinator/transaction/TransactionLog$$anonfun$1/TransactionLog$$anonfun$1()|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/TxnStatusField()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToByte(byte)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/CurrentVersion()|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/ProducerIdField()|",
      "|java+method:///kafka/coordinator/transaction/TxnTransitMetadata/producerEpoch()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/writeTo(java.nio.ByteBuffer)|",
      "|java+method:///kafka/coordinator/transaction/TxnTransitMetadata/topicPartitions()|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/ProducerEpochField()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/collection/immutable/Iterable$/canBuildFrom()|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///scala/collection/immutable/Iterable/toArray(scala.reflect.ClassTag)|",
      "|java+method:///kafka/coordinator/transaction/TxnTransitMetadata/txnTimeoutMs()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/collection/immutable/Set/nonEmpty()|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/TxnEntryTimestampField()|"
    ],
    "v2Body": [
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+constructor:///org/apache/kafka/common/protocol/types/Struct/Struct(org.apache.kafka.common.protocol.types.Schema)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/collection/immutable/Map/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/TxnStartTimestampField()|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/TxnPartitionsField()|",
      "|java+method:///kafka/coordinator/transaction/TxnTransitMetadata/txnStartTimestamp()|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/Current()|",
      "|java+method:///kafka/coordinator/transaction/TxnTransitMetadata/txnState()|",
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/sizeOf()|",
      "|java+method:///java/nio/ByteBuffer/putShort(short)|",
      "|java+method:///kafka/coordinator/transaction/TransactionState/byte()|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/TxnTimeoutField()|",
      "|java+method:///kafka/coordinator/transaction/TxnTransitMetadata/txnLastUpdateTimestamp()|",
      "|java+method:///kafka/coordinator/transaction/TxnTransitMetadata/producerId()|",
      "|java+method:///scala/collection/immutable/Set/groupBy(scala.Function1)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToShort(short)|",
      "|java+constructor:///kafka/coordinator/transaction/TransactionLog$$anonfun$2/TransactionLog$$anonfun$2(org.apache.kafka.common.protocol.types.Struct)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/set(org.apache.kafka.common.protocol.types.BoundField,java.lang.Object)|",
      "|java+constructor:///kafka/coordinator/transaction/TransactionLog$$anonfun$1/TransactionLog$$anonfun$1()|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/TxnStatusField()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToByte(byte)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/CurrentVersion()|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/ProducerIdField()|",
      "|java+method:///kafka/coordinator/transaction/TxnTransitMetadata/producerEpoch()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/writeTo(java.nio.ByteBuffer)|",
      "|java+method:///kafka/coordinator/transaction/TxnTransitMetadata/topicPartitions()|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/ProducerEpochField()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/collection/immutable/Iterable$/canBuildFrom()|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///scala/collection/immutable/Iterable/toArray(scala.reflect.ClassTag)|",
      "|java+method:///kafka/coordinator/transaction/TxnTransitMetadata/txnTimeoutMs()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/collection/immutable/Set/nonEmpty()|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/TxnEntryTimestampField()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/KafkaApis/kafka$server$KafkaApis$$createResponse$3(int,kafka.network.RequestChannel$Request,org.apache.kafka.common.requests.RequestHeader,org.apache.kafka.common.requests.OffsetFetchRequest)|",
    "called": "|java+method:///org/apache/kafka/common/requests/OffsetFetchRequest/getErrorResponse(int,org.apache.kafka.common.protocol.Errors)|",
    "v1Body": [
      "|java+method:///kafka/server/KafkaApis/kafka$server$KafkaApis$$authorize(kafka.network.RequestChannel$Session,kafka.security.auth.Operation,kafka.security.auth.Resource)|",
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///scala/collection/Map/filter(scala.Function1)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$45/KafkaApis$$anonfun$45(kafka.server.KafkaApis,kafka.network.RequestChannel$Request)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///org/apache/kafka/common/requests/RequestHeader/apiVersion()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$41/KafkaApis$$anonfun$41(kafka.server.KafkaApis,kafka.network.RequestChannel$Request)|",
      "|java+method:///org/apache/kafka/common/requests/OffsetFetchRequest/getErrorResponse(int,org.apache.kafka.common.protocol.Errors)|",
      "|java+constructor:///kafka/security/auth/Resource/Resource(kafka.security.auth.ResourceType,java.lang.String)|",
      "|java+method:///scala/collection/immutable/Map/$plus$plus(scala.collection.GenTraversableOnce)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/collection/mutable/Buffer$/canBuildFrom()|",
      "|java+method:///scala/collection/mutable/Buffer/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///kafka/server/KafkaApis/groupCoordinator()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/collection/TraversableLike/partition(scala.Function1)|",
      "|java+method:///org/apache/kafka/common/requests/OffsetFetchRequest/partitions()|",
      "|java+constructor:///org/apache/kafka/common/requests/OffsetFetchResponse/OffsetFetchResponse(int,org.apache.kafka.common.protocol.Errors,java.util.Map)|",
      "|java+method:///scala/collection/Map/$plus$plus(scala.collection.GenTraversableOnce)|",
      "|java+method:///kafka/network/RequestChannel$Request/session()|",
      "|java+method:///kafka/server/KafkaApis/trace(scala.Function0)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$42/KafkaApis$$anonfun$42(kafka.server.KafkaApis,org.apache.kafka.common.requests.OffsetFetchRequest)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$44/KafkaApis$$anonfun$44(kafka.server.KafkaApis,kafka.network.RequestChannel$Request)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$43/KafkaApis$$anonfun$43(kafka.server.KafkaApis)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$kafka$server$KafkaApis$$createResponse$3$1/KafkaApis$$anonfun$kafka$server$KafkaApis$$createResponse$3$1(kafka.server.KafkaApis,org.apache.kafka.common.requests.RequestHeader,org.apache.kafka.common.requests.OffsetFetchResponse)|",
      "|java+method:///scala/collection/JavaConverters$/asScalaBufferConverter(java.util.List)|",
      "|java+method:///scala/collection/JavaConverters$/mapAsJavaMapConverter(scala.collection.Map)|",
      "|java+method:///kafka/coordinator/group/GroupCoordinator/handleFetchOffsets(java.lang.String,scala.Option)|",
      "|java+method:///scala/collection/TraversableOnce/toMap(scala.Predef$$less$colon$less)|",
      "|java+method:///org/apache/kafka/common/requests/OffsetFetchRequest/groupId()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|",
      "|java+method:///scala/Predef$/$conforms()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$46/KafkaApis$$anonfun$46(kafka.server.KafkaApis)|",
      "|java+method:///kafka/coordinator/group/GroupCoordinator/handleFetchOffsets$default$2()|",
      "|java+method:///org/apache/kafka/common/requests/OffsetFetchRequest/isAllPartitions()|"
    ],
    "v2Body": [
      "|java+method:///kafka/server/KafkaApis/kafka$server$KafkaApis$$authorize(kafka.network.RequestChannel$Session,kafka.security.auth.Operation,kafka.security.auth.Resource)|",
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///scala/collection/Map/filter(scala.Function1)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$34/KafkaApis$$anonfun$34(kafka.server.KafkaApis,kafka.network.RequestChannel$Request)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///org/apache/kafka/common/requests/RequestHeader/apiVersion()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$30/KafkaApis$$anonfun$30(kafka.server.KafkaApis,kafka.network.RequestChannel$Request)|",
      "|java+method:///org/apache/kafka/common/requests/OffsetFetchRequest/getErrorResponse(int,org.apache.kafka.common.protocol.Errors)|",
      "|java+constructor:///kafka/security/auth/Resource/Resource(kafka.security.auth.ResourceType,java.lang.String)|",
      "|java+method:///scala/collection/immutable/Map/$plus$plus(scala.collection.GenTraversableOnce)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/collection/mutable/Buffer$/canBuildFrom()|",
      "|java+method:///scala/collection/mutable/Buffer/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///kafka/server/KafkaApis/groupCoordinator()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/collection/TraversableLike/partition(scala.Function1)|",
      "|java+method:///org/apache/kafka/common/requests/OffsetFetchRequest/partitions()|",
      "|java+constructor:///org/apache/kafka/common/requests/OffsetFetchResponse/OffsetFetchResponse(int,org.apache.kafka.common.protocol.Errors,java.util.Map)|",
      "|java+method:///scala/collection/Map/$plus$plus(scala.collection.GenTraversableOnce)|",
      "|java+method:///kafka/network/RequestChannel$Request/session()|",
      "|java+method:///kafka/server/KafkaApis/trace(scala.Function0)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$31/KafkaApis$$anonfun$31(kafka.server.KafkaApis,org.apache.kafka.common.requests.OffsetFetchRequest)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$33/KafkaApis$$anonfun$33(kafka.server.KafkaApis,kafka.network.RequestChannel$Request)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$32/KafkaApis$$anonfun$32(kafka.server.KafkaApis)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$kafka$server$KafkaApis$$createResponse$3$1/KafkaApis$$anonfun$kafka$server$KafkaApis$$createResponse$3$1(kafka.server.KafkaApis,org.apache.kafka.common.requests.RequestHeader,org.apache.kafka.common.requests.OffsetFetchResponse)|",
      "|java+method:///scala/collection/JavaConverters$/asScalaBufferConverter(java.util.List)|",
      "|java+method:///scala/collection/JavaConverters$/mapAsJavaMapConverter(scala.collection.Map)|",
      "|java+method:///kafka/coordinator/group/GroupCoordinator/handleFetchOffsets(java.lang.String,scala.Option)|",
      "|java+method:///scala/collection/TraversableOnce/toMap(scala.Predef$$less$colon$less)|",
      "|java+method:///org/apache/kafka/common/requests/OffsetFetchRequest/groupId()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|",
      "|java+method:///scala/Predef$/$conforms()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$35/KafkaApis$$anonfun$35(kafka.server.KafkaApis)|",
      "|java+method:///kafka/coordinator/group/GroupCoordinator/handleFetchOffsets$default$2()|",
      "|java+method:///org/apache/kafka/common/requests/OffsetFetchRequest/isAllPartitions()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/KafkaConfig$$anonfun$13/apply()|",
    "called": "|java+constructor:///org/apache/kafka/common/config/ConfigException/ConfigException(java.lang.String)|",
    "v1Body": [
      "|java+method:///scala/Some/x()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///kafka/server/KafkaConfig$/LogRetentionTimeMinutesProp()|",
      "|java+method:///scala/Option$/apply(java.lang.Object)|",
      "|java+method:///kafka/server/KafkaConfig$$anonfun$13/apply()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/server/KafkaConfig$/LogRetentionTimeHoursProp()|",
      "|java+method:///kafka/server/KafkaConfig/getInt(java.lang.String)|",
      "|java+method:///scala/Predef$/Integer2int(java.lang.Integer)|",
      "|java+method:///scala/Predef$/long2Long(long)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/kafka/common/network/ListenerName/value()|",
      "|java+method:///kafka/server/KafkaConfig$/InterBrokerListenerNameProp()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///kafka/server/KafkaConfig$$anonfun$13/apply()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///kafka/server/KafkaConfig$/ListenerSecurityProtocolMapProp()|",
      "|java+constructor:///org/apache/kafka/common/config/ConfigException/ConfigException(java.lang.String)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/controller/ControllerChannelManager/kafka$controller$ControllerChannelManager$$addNewBroker(kafka.cluster.Broker)|",
    "called": "|java+constructor:///org/apache/kafka/clients/NetworkClient/NetworkClient(org.apache.kafka.common.network.Selectable,org.apache.kafka.clients.MetadataUpdater,java.lang.String,int,long,long,int,int,int,org.apache.kafka.common.utils.Time,boolean,org.apache.kafka.clients.ApiVersions,org.apache.kafka.common.utils.LogContext)|",
    "v1Body": [
      "|java+method:///kafka/controller/ControllerChannelManager/debug(scala.Function0)|",
      "|java+method:///scala/Predef$/ArrowAssoc(java.lang.Object)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///kafka/controller/ControllerChannelManager$/QueueSizeMetricName()|",
      "|java+method:///kafka/controller/ControllerChannelManager/newGauge(java.lang.String,com.yammer.metrics.core.Gauge,scala.collection.Map)|",
      "|java+method:///scala/collection/JavaConverters$/mapAsJavaMapConverter(scala.collection.Map)|",
      "|java+method:///kafka/server/KafkaConfig/saslInterBrokerHandshakeRequestEnable()|",
      "|java+method:///scala/Predef$/Integer2int(java.lang.Integer)|",
      "|java+method:///scala/collection/JavaConverters$/seqAsJavaListConverter(scala.collection.Seq)|",
      "|java+method:///kafka/server/KafkaConfig/interBrokerSecurityProtocol()|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+method:///scala/Some/x()|",
      "|java+constructor:///java/util/concurrent/LinkedBlockingQueue/LinkedBlockingQueue()|",
      "|java+constructor:///kafka/controller/RequestSendThread/RequestSendThread(int,kafka.controller.ControllerContext,java.util.concurrent.BlockingQueue,org.apache.kafka.clients.NetworkClient,org.apache.kafka.common.Node,kafka.server.KafkaConfig,org.apache.kafka.common.utils.Time,java.lang.String)|",
      "|java+method:///scala/collection/immutable/Map$/apply(scala.collection.Seq)|",
      "|java+constructor:///org/apache/kafka/common/network/Selector/Selector(int,long,org.apache.kafka.common.metrics.Metrics,org.apache.kafka.common.utils.Time,java.lang.String,java.util.Map,boolean,org.apache.kafka.common.network.ChannelBuilder)|",
      "|java+method:///kafka/server/KafkaConfig/saslMechanismInterBrokerProtocol()|",
      "|java+constructor:///org/apache/kafka/clients/NetworkClient/NetworkClient(org.apache.kafka.common.network.Selectable,org.apache.kafka.clients.MetadataUpdater,java.lang.String,int,long,long,int,int,int,org.apache.kafka.common.utils.Time,boolean,org.apache.kafka.clients.ApiVersions)|",
      "|java+method:///scala/Predef$/Map()|",
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///scala/collection/mutable/HashMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///kafka/controller/ControllerChannelManager/brokerStateInfo()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///kafka/server/KafkaConfig/interBrokerListenerName()|",
      "|java+method:///kafka/controller/ControllerChannelManager/queueSizeTags(int)|",
      "|java+method:///kafka/cluster/Broker/id()|",
      "|java+method:///scala/collection/Seq$/apply(scala.collection.Seq)|",
      "|java+method:///scala/Predef$ArrowAssoc$/$minus$greater$extension(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///kafka/controller/ControllerChannelManager$$anonfun$kafka$controller$ControllerChannelManager$$addNewBroker$1/ControllerChannelManager$$anonfun$kafka$controller$ControllerChannelManager$$addNewBroker$1(kafka.controller.ControllerChannelManager,kafka.cluster.Broker)|",
      "|java+constructor:///kafka/controller/ControllerBrokerStateInfo/ControllerBrokerStateInfo(org.apache.kafka.clients.NetworkClient,org.apache.kafka.common.Node,java.util.concurrent.BlockingQueue,kafka.controller.RequestSendThread,com.yammer.metrics.core.Gauge)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/network/ChannelBuilders/clientChannelBuilder(org.apache.kafka.common.protocol.SecurityProtocol,org.apache.kafka.common.security.JaasContext$Type,org.apache.kafka.common.config.AbstractConfig,org.apache.kafka.common.network.ListenerName,java.lang.String,boolean)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/controller/RequestSendThread/setDaemon(boolean)|",
      "|java+constructor:///org/apache/kafka/clients/ManualMetadataUpdater/ManualMetadataUpdater(java.util.List)|",
      "|java+method:///kafka/cluster/Broker/getNode(org.apache.kafka.common.network.ListenerName)|",
      "|java+constructor:///org/apache/kafka/clients/ApiVersions/ApiVersions()|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig/brokerId()|",
      "|java+method:///kafka/server/KafkaConfig/requestTimeoutMs()|",
      "|java+constructor:///kafka/controller/ControllerChannelManager$$anon$2/ControllerChannelManager$$anon$2(kafka.controller.ControllerChannelManager,java.util.concurrent.LinkedBlockingQueue)|"
    ],
    "v2Body": [
      "|java+method:///scala/Predef$/Map()|",
      "|java+constructor:///kafka/controller/RequestSendThread/RequestSendThread(int,kafka.controller.ControllerContext,java.util.concurrent.BlockingQueue,org.apache.kafka.clients.NetworkClient,org.apache.kafka.common.Node,kafka.server.KafkaConfig,org.apache.kafka.common.utils.Time,kafka.controller.StateChangeLogger,java.lang.String)|",
      "|java+method:///kafka/controller/ControllerChannelManager/debug(scala.Function0)|",
      "|java+method:///scala/Predef$/ArrowAssoc(java.lang.Object)|",
      "|java+constructor:///org/apache/kafka/common/utils/LogContext/LogContext(java.lang.String)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///kafka/controller/ControllerChannelManager$/QueueSizeMetricName()|",
      "|java+method:///kafka/controller/ControllerChannelManager/newGauge(java.lang.String,com.yammer.metrics.core.Gauge,scala.collection.Map)|",
      "|java+method:///scala/collection/JavaConverters$/mapAsJavaMapConverter(scala.collection.Map)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/Predef$/Integer2int(java.lang.Integer)|",
      "|java+method:///scala/collection/JavaConverters$/seqAsJavaListConverter(scala.collection.Seq)|",
      "|java+method:///kafka/server/KafkaConfig/interBrokerSecurityProtocol()|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+method:///scala/Some/x()|",
      "|java+constructor:///java/util/concurrent/LinkedBlockingQueue/LinkedBlockingQueue()|",
      "|java+method:///scala/collection/immutable/Map$/apply(scala.collection.Seq)|",
      "|java+method:///kafka/server/KafkaConfig/saslMechanismInterBrokerProtocol()|",
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///scala/collection/mutable/HashMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///kafka/controller/ControllerChannelManager/brokerStateInfo()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///kafka/server/KafkaConfig/interBrokerListenerName()|",
      "|java+method:///kafka/controller/ControllerChannelManager/queueSizeTags(int)|",
      "|java+method:///kafka/cluster/Broker/id()|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///org/apache/kafka/common/Node/idString()|",
      "|java+method:///scala/collection/Seq$/apply(scala.collection.Seq)|",
      "|java+method:///org/apache/kafka/common/network/ChannelBuilders/clientChannelBuilder(org.apache.kafka.common.security.auth.SecurityProtocol,org.apache.kafka.common.security.JaasContext$Type,org.apache.kafka.common.config.AbstractConfig,org.apache.kafka.common.network.ListenerName,java.lang.String,boolean)|",
      "|java+method:///scala/Predef$ArrowAssoc$/$minus$greater$extension(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///kafka/controller/ControllerChannelManager$$anonfun$kafka$controller$ControllerChannelManager$$addNewBroker$1/ControllerChannelManager$$anonfun$kafka$controller$ControllerChannelManager$$addNewBroker$1(kafka.controller.ControllerChannelManager,kafka.cluster.Broker)|",
      "|java+constructor:///kafka/controller/ControllerBrokerStateInfo/ControllerBrokerStateInfo(org.apache.kafka.clients.NetworkClient,org.apache.kafka.common.Node,java.util.concurrent.BlockingQueue,kafka.controller.RequestSendThread,com.yammer.metrics.core.Gauge)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/controller/RequestSendThread/setDaemon(boolean)|",
      "|java+constructor:///org/apache/kafka/clients/ManualMetadataUpdater/ManualMetadataUpdater(java.util.List)|",
      "|java+method:///kafka/cluster/Broker/getNode(org.apache.kafka.common.network.ListenerName)|",
      "|java+constructor:///org/apache/kafka/clients/ApiVersions/ApiVersions()|",
      "|java+constructor:///org/apache/kafka/clients/NetworkClient/NetworkClient(org.apache.kafka.common.network.Selectable,org.apache.kafka.clients.MetadataUpdater,java.lang.String,int,long,long,int,int,int,org.apache.kafka.common.utils.Time,boolean,org.apache.kafka.clients.ApiVersions,org.apache.kafka.common.utils.LogContext)|",
      "|java+method:///kafka/server/KafkaConfig/saslInterBrokerHandshakeRequestEnable()|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig/brokerId()|",
      "|java+constructor:///org/apache/kafka/common/network/Selector/Selector(int,long,org.apache.kafka.common.metrics.Metrics,org.apache.kafka.common.utils.Time,java.lang.String,java.util.Map,boolean,org.apache.kafka.common.network.ChannelBuilder,org.apache.kafka.common.utils.LogContext)|",
      "|java+method:///kafka/server/KafkaConfig/requestTimeoutMs()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+constructor:///kafka/controller/ControllerChannelManager$$anon$2/ControllerChannelManager$$anon$2(kafka.controller.ControllerChannelManager,java.util.concurrent.LinkedBlockingQueue)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/admin/AdminUtils$/writeTopicPartitionAssignment(kafka.utils.ZkUtils,java.lang.String,scala.collection.Map,boolean)|",
    "called": "|java+constructor:///org/apache/kafka/common/errors/TopicExistsException/TopicExistsException(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///kafka/admin/AdminUtils$$anonfun$writeTopicPartitionAssignment$1/AdminUtils$$anonfun$writeTopicPartitionAssignment$1(java.lang.String)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/apache/kafka/common/errors/TopicExistsException/TopicExistsException(java.lang.String)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///kafka/utils/ZkUtils/replicaAssignmentZkData(scala.collection.Map)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/admin/AdminUtils$/info(scala.Function0)|",
      "|java+method:///kafka/utils/ZkUtils$/getTopicPath(java.lang.String)|",
      "|java+method:///kafka/admin/AdminUtils$/debug(scala.Function0)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/collection/Map/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/collection/Map$/canBuildFrom()|",
      "|java+method:///kafka/utils/ZkUtils/updatePersistentPath$default$3()|",
      "|java+method:///java/lang/Throwable/toString()|",
      "|java+constructor:///kafka/admin/AdminUtils$$anonfun$17/AdminUtils$$anonfun$17()|",
      "|java+constructor:///kafka/admin/AdminUtils$$anonfun$writeTopicPartitionAssignment$2/AdminUtils$$anonfun$writeTopicPartitionAssignment$2(java.lang.String)|",
      "|java+method:///kafka/utils/ZkUtils/createPersistentPath(java.lang.String,java.lang.String,java.util.List)|",
      "|java+constructor:///kafka/admin/AdminOperationException/AdminOperationException(java.lang.String)|",
      "|java+method:///kafka/utils/ZkUtils/createPersistentPath$default$3()|",
      "|java+method:///kafka/utils/ZkUtils/updatePersistentPath(java.lang.String,java.lang.String,java.util.List)|",
      "|java+constructor:///kafka/admin/AdminUtils$$anonfun$writeTopicPartitionAssignment$3/AdminUtils$$anonfun$writeTopicPartitionAssignment$3(java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///kafka/admin/AdminUtils$$anonfun$writeTopicPartitionAssignment$1/AdminUtils$$anonfun$writeTopicPartitionAssignment$1(java.lang.String)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/apache/kafka/common/errors/TopicExistsException/TopicExistsException(java.lang.String)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///kafka/utils/ZkUtils/replicaAssignmentZkData(scala.collection.Map)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/admin/AdminUtils$/info(scala.Function0)|",
      "|java+method:///kafka/utils/ZkUtils$/getTopicPath(java.lang.String)|",
      "|java+method:///kafka/admin/AdminUtils$/debug(scala.Function0)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/collection/Map/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/collection/Map$/canBuildFrom()|",
      "|java+method:///kafka/utils/ZkUtils/updatePersistentPath$default$3()|",
      "|java+method:///java/lang/Throwable/toString()|",
      "|java+constructor:///kafka/admin/AdminUtils$$anonfun$18/AdminUtils$$anonfun$18()|",
      "|java+constructor:///kafka/admin/AdminUtils$$anonfun$writeTopicPartitionAssignment$2/AdminUtils$$anonfun$writeTopicPartitionAssignment$2(java.lang.String)|",
      "|java+method:///kafka/utils/ZkUtils/createPersistentPath(java.lang.String,java.lang.String,java.util.List)|",
      "|java+constructor:///kafka/admin/AdminOperationException/AdminOperationException(java.lang.String)|",
      "|java+method:///kafka/utils/ZkUtils/createPersistentPath$default$3()|",
      "|java+method:///kafka/utils/ZkUtils/updatePersistentPath(java.lang.String,java.lang.String,java.util.List)|",
      "|java+constructor:///kafka/admin/AdminUtils$$anonfun$writeTopicPartitionAssignment$3/AdminUtils$$anonfun$writeTopicPartitionAssignment$3(java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4/apply(scala.Tuple2)|",
    "called": "|java+constructor:///org/apache/kafka/common/requests/StopReplicaRequest$Builder/StopReplicaRequest$Builder(int,int,boolean,java.util.Set)|",
    "v1Body": [
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$20/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$20(kafka.controller.ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4)|",
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$15/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$15(kafka.controller.ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4)|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$16/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$16(kafka.controller.ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4)|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$17/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$17(kafka.controller.ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4)|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$18/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$18(kafka.controller.ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4)|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$apply$6/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$apply$6(kafka.controller.ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4,int)|",
      "|java+method:///scala/collection/Seq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/Tuple2/_1$mcI$sp()|",
      "|java+method:///kafka/controller/KafkaController/sendRequest(int,org.apache.kafka.common.protocol.ApiKeys,org.apache.kafka.common.requests.AbstractRequest$Builder,scala.Function1)|",
      "|java+constructor:///org/apache/kafka/common/requests/StopReplicaRequest$Builder/StopReplicaRequest$Builder(int,int,boolean,java.util.Set)|",
      "|java+method:///scala/collection/Seq/partition(scala.Function1)|",
      "|java+method:///scala/collection/Seq/filter(scala.Function1)|",
      "|java+method:///scala/collection/Seq/foreach(scala.Function1)|",
      "|java+method:///scala/collection/JavaConverters$/setAsJavaSetConverter(scala.collection.Set)|",
      "|java+method:///kafka/controller/ControllerBrokerRequestBatch/debug(scala.Function0)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/controller/ControllerBrokerRequestBatch/controllerId()|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$19/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$19(kafka.controller.ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4)|",
      "|java+method:///scala/collection/TraversableLike/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///kafka/controller/KafkaController/sendRequest$default$4()|",
      "|java+method:///scala/collection/TraversableOnce/toSet()|",
      "|java+method:///scala/collection/Seq/filterNot(scala.Function1)|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$apply$5/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$apply$5(kafka.controller.ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4,int,scala.collection.immutable.Set)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$apply$4/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$apply$4(kafka.controller.ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4,int,scala.collection.immutable.Set)|"
    ],
    "v2Body": [
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$15/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$15(kafka.controller.ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4)|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$16/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$16(kafka.controller.ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4)|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$17/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$17(kafka.controller.ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4)|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$18/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$18(kafka.controller.ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4)|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$apply$9/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$apply$9(kafka.controller.ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4,int)|",
      "|java+method:///scala/collection/Seq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/Tuple2/_1$mcI$sp()|",
      "|java+method:///kafka/controller/KafkaController/sendRequest(int,org.apache.kafka.common.protocol.ApiKeys,org.apache.kafka.common.requests.AbstractRequest$Builder,scala.Function1)|",
      "|java+constructor:///org/apache/kafka/common/requests/StopReplicaRequest$Builder/StopReplicaRequest$Builder(int,int,boolean,java.util.Set)|",
      "|java+method:///scala/collection/Seq/partition(scala.Function1)|",
      "|java+method:///scala/collection/Seq/filter(scala.Function1)|",
      "|java+method:///scala/collection/Seq/foreach(scala.Function1)|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$14/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$14(kafka.controller.ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4)|",
      "|java+method:///scala/collection/JavaConverters$/setAsJavaSetConverter(scala.collection.Set)|",
      "|java+method:///kafka/controller/ControllerBrokerRequestBatch/debug(scala.Function0)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/controller/ControllerBrokerRequestBatch/controllerId()|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$19/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$19(kafka.controller.ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4)|",
      "|java+method:///scala/collection/TraversableLike/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///kafka/controller/KafkaController/sendRequest$default$4()|",
      "|java+method:///scala/collection/TraversableOnce/toSet()|",
      "|java+method:///scala/collection/Seq/filterNot(scala.Function1)|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$apply$7/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$apply$7(kafka.controller.ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4,int,scala.collection.immutable.Set)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$apply$8/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$apply$8(kafka.controller.ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4,int,scala.collection.immutable.Set)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/coordinator/group/GroupMetadataManager$/offsetCommitValue(kafka.common.OffsetAndMetadata)|",
    "called": "|java+method:///org/apache/kafka/common/protocol/types/Struct/set(org.apache.kafka.common.protocol.types.BoundField,java.lang.Object)|",
    "v1Body": [
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+constructor:///org/apache/kafka/common/protocol/types/Struct/Struct(org.apache.kafka.common.protocol.types.Schema)|",
      "|java+method:///kafka/common/OffsetAndMetadata/offset()|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/CURRENT_OFFSET_VALUE_SCHEMA_VERSION()|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/OFFSET_VALUE_EXPIRE_TIMESTAMP_FIELD_V1()|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/OFFSET_VALUE_OFFSET_FIELD_V1()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/OFFSET_VALUE_METADATA_FIELD_V1()|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/OFFSET_VALUE_COMMIT_TIMESTAMP_FIELD_V1()|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/writeTo(java.nio.ByteBuffer)|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///kafka/common/OffsetAndMetadata/expireTimestamp()|",
      "|java+method:///kafka/common/OffsetAndMetadata/metadata()|",
      "|java+method:///kafka/common/OffsetAndMetadata/commitTimestamp()|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/sizeOf()|",
      "|java+method:///java/nio/ByteBuffer/putShort(short)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/set(org.apache.kafka.common.protocol.types.Field,java.lang.Object)|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/CURRENT_OFFSET_VALUE_SCHEMA()|"
    ],
    "v2Body": [
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+constructor:///org/apache/kafka/common/protocol/types/Struct/Struct(org.apache.kafka.common.protocol.types.Schema)|",
      "|java+method:///kafka/common/OffsetAndMetadata/offset()|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/CURRENT_OFFSET_VALUE_SCHEMA_VERSION()|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/OFFSET_VALUE_EXPIRE_TIMESTAMP_FIELD_V1()|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/OFFSET_VALUE_OFFSET_FIELD_V1()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/OFFSET_VALUE_METADATA_FIELD_V1()|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/OFFSET_VALUE_COMMIT_TIMESTAMP_FIELD_V1()|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/writeTo(java.nio.ByteBuffer)|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///kafka/common/OffsetAndMetadata/expireTimestamp()|",
      "|java+method:///kafka/common/OffsetAndMetadata/metadata()|",
      "|java+method:///kafka/common/OffsetAndMetadata/commitTimestamp()|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/sizeOf()|",
      "|java+method:///java/nio/ByteBuffer/putShort(short)|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/CURRENT_OFFSET_VALUE_SCHEMA()|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/set(org.apache.kafka.common.protocol.types.BoundField,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/tools/SimpleConsumerShell$/main(java.lang.String%5B%5D)|",
    "called": "|java+method:///org/apache/kafka/common/utils/KafkaThread/nonDaemon(java.lang.String,java.lang.Runnable)|",
    "v1Body": [
      "|java+method:///kafka/cluster/BrokerEndPoint/host()|",
      "|java+method:///kafka/utils/Exit$/exit(int,scala.Option)|",
      "|java+method:///kafka/api/FetchRequestBuilder/replicaId(int)|",
      "|java+method:///scala/collection/Seq/head()|",
      "|java+method:///joptsimple/OptionSet/valuesOf(joptsimple.OptionSpec)|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///kafka/cluster/BrokerEndPoint/port()|",
      "|java+method:///joptsimple/OptionParser/parse(java.lang.String%5B%5D)|",
      "|java+method:///kafka/api/TopicMetadata/partitionsMetadata()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///kafka/consumer/SimpleConsumer/earliestOrLatestOffset(kafka.common.TopicAndPartition,long,int)|",
      "|java+constructor:///kafka/api/FetchRequestBuilder/FetchRequestBuilder()|",
      "|java+method:///kafka/api/FetchRequestBuilder/clientId(java.lang.String)|",
      "|java+method:///java/io/PrintStream/flush()|",
      "|java+method:///kafka/client/ClientUtils$/fetchTopicMetadata$default$5()|",
      "|java+method:///org/apache/kafka/common/utils/Utils/stackTrace(java.lang.Throwable)|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///kafka/common/MessageFormatter/close()|",
      "|java+method:///kafka/consumer/ConsumerConfig$/SocketBufferSize()|",
      "|java+method:///kafka/utils/CommandLineUtils$/parseKeyValueArgs$default$2()|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///kafka/api/OffsetRequest$/EarliestTime()|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///kafka/client/ClientUtils$/fetchTopicMetadata(scala.collection.Set,scala.collection.Seq,java.lang.String,int,int)|",
      "|java+method:///kafka/utils/CommandLineUtils$/checkRequiredArgs(joptsimple.OptionParser,joptsimple.OptionSet,scala.collection.Seq)|",
      "|java+method:///scala/collection/Seq/find(scala.Function1)|",
      "|java+method:///scala/Predef$/Set()|",
      "|java+method:///kafka/common/MessageFormatter/init(java.util.Properties)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///kafka/api/FetchRequestBuilder/maxWait(int)|",
      "|java+method:///kafka/api/PartitionMetadata/replicas()|",
      "|java+method:///kafka/consumer/ConsumerConfig$/MinFetchBytes()|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/describedAs(java.lang.String)|",
      "|java+constructor:///kafka/tools/SimpleConsumerShell$$anonfun$main$4/SimpleConsumerShell$$anonfun$main$4(java.lang.String,int,int,scala.runtime.LongRef,scala.runtime.ObjectRef,java.lang.String)|",
      "|java+method:///java/lang/Thread/start()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///kafka/tools/SimpleConsumerShell$$anon$1/SimpleConsumerShell$$anon$1(java.lang.String,int,int,scala.runtime.LongRef,int,int,boolean,boolean,boolean,kafka.api.FetchRequestBuilder,kafka.common.MessageFormatter,kafka.consumer.SimpleConsumer)|",
      "|java+method:///kafka/client/ClientUtils$/parseBrokerList(java.lang.String)|",
      "|java+method:///scala/Option/isEmpty()|",
      "|java+constructor:///kafka/tools/SimpleConsumerShell$$anonfun$main$3/SimpleConsumerShell$$anonfun$main$3(int)|",
      "|java+method:///org/apache/kafka/common/utils/Utils/newThread(java.lang.String,java.lang.Runnable,boolean)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+constructor:///kafka/tools/SimpleConsumerShell$$anonfun$1/SimpleConsumerShell$$anonfun$1(int)|",
      "|java+method:///kafka/utils/ToolsUtils$/validatePortOrDie(joptsimple.OptionParser,java.lang.String)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+constructor:///joptsimple/OptionParser/OptionParser(boolean)|",
      "|java+constructor:///kafka/consumer/SimpleConsumer/SimpleConsumer(java.lang.String,int,int,int,java.lang.String)|",
      "|java+method:///kafka/utils/CommandLineUtils$/printUsageAndDie(joptsimple.OptionParser,java.lang.String)|",
      "|java+method:///java/lang/String/toString()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///scala/collection/JavaConverters$/asScalaBufferConverter(java.util.List)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///scala/runtime/LongRef/create(long)|",
      "|java+method:///joptsimple/OptionSpecBuilder/withRequiredArg()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///kafka/utils/Exit$/exit$default$2()|",
      "|java+constructor:///kafka/common/TopicAndPartition/TopicAndPartition(java.lang.String,int)|",
      "|java+constructor:///kafka/tools/SimpleConsumerShell$$anonfun$main$1/SimpleConsumerShell$$anonfun$main$1()|",
      "|java+method:///kafka/consumer/ConsumerConfig$/SocketTimeout()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/collection/Seq/size()|",
      "|java+method:///kafka/tools/SimpleConsumerShell$/info(scala.Function0)|",
      "|java+method:///scala/Predef$/int2Integer(int)|",
      "|java+method:///kafka/utils/CommandLineUtils$/parseKeyValueArgs(scala.collection.Iterable,boolean)|",
      "|java+method:///java/lang/Thread/join()|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+method:///kafka/api/PartitionMetadata/leader()|",
      "|java+constructor:///kafka/tools/SimpleConsumerShell$$anonfun$main$2/SimpleConsumerShell$$anonfun$main$2()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/defaultsTo(java.lang.Object,java.lang.Object%5B%5D)|",
      "|java+method:///joptsimple/OptionParser/accepts(java.lang.String,java.lang.String)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///kafka/tools/SimpleConsumerShell$/UseLeaderReplica()|",
      "|java+method:///joptsimple/OptionParser/accepts(java.lang.String)|",
      "|java+method:///scala/collection/immutable/Set$/apply(scala.collection.Seq)|",
      "|java+method:///kafka/api/TopicMetadataResponse/topicsMetadata()|",
      "|java+method:///kafka/api/TopicMetadata/topic()|",
      "|java+method:///scala/Predef$/long2Long(long)|",
      "|java+method:///kafka/consumer/SimpleConsumer/close()|",
      "|java+method:///kafka/api/Request$/DebuggingConsumerId()|",
      "|java+method:///kafka/api/FetchRequestBuilder/minBytes(int)|",
      "|java+method:///scala/runtime/ObjectRef/create(java.lang.Object)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///kafka/tools/SimpleConsumerShell$/warn(scala.Function0)|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/ofType(java.lang.Class)|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+method:///scala/Option/get()|"
    ],
    "v2Body": [
      "|java+method:///kafka/cluster/BrokerEndPoint/host()|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///kafka/utils/Exit$/exit(int,scala.Option)|",
      "|java+method:///kafka/api/FetchRequestBuilder/replicaId(int)|",
      "|java+method:///scala/collection/Seq/head()|",
      "|java+method:///joptsimple/OptionSet/valuesOf(joptsimple.OptionSpec)|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///kafka/cluster/BrokerEndPoint/port()|",
      "|java+method:///joptsimple/OptionParser/parse(java.lang.String%5B%5D)|",
      "|java+method:///kafka/api/TopicMetadata/partitionsMetadata()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///kafka/consumer/SimpleConsumer/earliestOrLatestOffset(kafka.common.TopicAndPartition,long,int)|",
      "|java+constructor:///kafka/api/FetchRequestBuilder/FetchRequestBuilder()|",
      "|java+method:///kafka/api/FetchRequestBuilder/clientId(java.lang.String)|",
      "|java+method:///java/io/PrintStream/flush()|",
      "|java+method:///kafka/client/ClientUtils$/fetchTopicMetadata$default$5()|",
      "|java+method:///org/apache/kafka/common/utils/Utils/stackTrace(java.lang.Throwable)|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///kafka/common/MessageFormatter/close()|",
      "|java+method:///kafka/consumer/ConsumerConfig$/SocketBufferSize()|",
      "|java+method:///org/apache/kafka/common/utils/KafkaThread/nonDaemon(java.lang.String,java.lang.Runnable)|",
      "|java+method:///kafka/utils/CommandLineUtils$/parseKeyValueArgs$default$2()|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///kafka/api/OffsetRequest$/EarliestTime()|",
      "|java+method:///org/apache/kafka/common/utils/KafkaThread/join()|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///kafka/client/ClientUtils$/fetchTopicMetadata(scala.collection.Set,scala.collection.Seq,java.lang.String,int,int)|",
      "|java+method:///kafka/utils/CommandLineUtils$/checkRequiredArgs(joptsimple.OptionParser,joptsimple.OptionSet,scala.collection.Seq)|",
      "|java+method:///scala/collection/Seq/find(scala.Function1)|",
      "|java+method:///scala/Predef$/Set()|",
      "|java+method:///kafka/common/MessageFormatter/init(java.util.Properties)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///kafka/api/FetchRequestBuilder/maxWait(int)|",
      "|java+method:///kafka/api/PartitionMetadata/replicas()|",
      "|java+method:///kafka/consumer/ConsumerConfig$/MinFetchBytes()|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/describedAs(java.lang.String)|",
      "|java+constructor:///kafka/tools/SimpleConsumerShell$$anonfun$main$4/SimpleConsumerShell$$anonfun$main$4(java.lang.String,int,int,scala.runtime.LongRef,scala.runtime.ObjectRef,java.lang.String)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///kafka/tools/SimpleConsumerShell$$anon$1/SimpleConsumerShell$$anon$1(java.lang.String,int,int,scala.runtime.LongRef,int,int,boolean,boolean,boolean,kafka.api.FetchRequestBuilder,kafka.common.MessageFormatter,kafka.consumer.SimpleConsumer)|",
      "|java+method:///kafka/client/ClientUtils$/parseBrokerList(java.lang.String)|",
      "|java+method:///scala/Option/isEmpty()|",
      "|java+constructor:///kafka/tools/SimpleConsumerShell$$anonfun$main$3/SimpleConsumerShell$$anonfun$main$3(int)|",
      "|java+constructor:///kafka/tools/SimpleConsumerShell$$anonfun$1/SimpleConsumerShell$$anonfun$1(int)|",
      "|java+method:///kafka/utils/ToolsUtils$/validatePortOrDie(joptsimple.OptionParser,java.lang.String)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+constructor:///joptsimple/OptionParser/OptionParser(boolean)|",
      "|java+constructor:///kafka/consumer/SimpleConsumer/SimpleConsumer(java.lang.String,int,int,int,java.lang.String)|",
      "|java+method:///kafka/utils/CommandLineUtils$/printUsageAndDie(joptsimple.OptionParser,java.lang.String)|",
      "|java+method:///java/lang/String/toString()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///scala/collection/JavaConverters$/asScalaBufferConverter(java.util.List)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///scala/runtime/LongRef/create(long)|",
      "|java+method:///joptsimple/OptionSpecBuilder/withRequiredArg()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///kafka/utils/Exit$/exit$default$2()|",
      "|java+constructor:///kafka/common/TopicAndPartition/TopicAndPartition(java.lang.String,int)|",
      "|java+constructor:///kafka/tools/SimpleConsumerShell$$anonfun$main$1/SimpleConsumerShell$$anonfun$main$1()|",
      "|java+method:///kafka/consumer/ConsumerConfig$/SocketTimeout()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/collection/Seq/size()|",
      "|java+method:///kafka/tools/SimpleConsumerShell$/info(scala.Function0)|",
      "|java+method:///scala/Predef$/int2Integer(int)|",
      "|java+method:///kafka/utils/CommandLineUtils$/parseKeyValueArgs(scala.collection.Iterable,boolean)|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+method:///kafka/api/PartitionMetadata/leader()|",
      "|java+constructor:///kafka/tools/SimpleConsumerShell$$anonfun$main$2/SimpleConsumerShell$$anonfun$main$2()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/defaultsTo(java.lang.Object,java.lang.Object%5B%5D)|",
      "|java+method:///joptsimple/OptionParser/accepts(java.lang.String,java.lang.String)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///kafka/tools/SimpleConsumerShell$/UseLeaderReplica()|",
      "|java+method:///joptsimple/OptionParser/accepts(java.lang.String)|",
      "|java+method:///scala/collection/immutable/Set$/apply(scala.collection.Seq)|",
      "|java+method:///kafka/api/TopicMetadataResponse/topicsMetadata()|",
      "|java+method:///kafka/api/TopicMetadata/topic()|",
      "|java+method:///org/apache/kafka/common/utils/KafkaThread/start()|",
      "|java+method:///scala/Predef$/long2Long(long)|",
      "|java+method:///kafka/consumer/SimpleConsumer/close()|",
      "|java+method:///kafka/api/Request$/DebuggingConsumerId()|",
      "|java+method:///kafka/api/FetchRequestBuilder/minBytes(int)|",
      "|java+method:///scala/runtime/ObjectRef/create(java.lang.Object)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///kafka/tools/SimpleConsumerShell$/warn(scala.Function0)|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/ofType(java.lang.Class)|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+method:///scala/Option/get()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/ReplicaManager$$anonfun$lastOffsetForLeaderEpoch$1/apply(scala.Tuple2)|",
    "called": "|java+constructor:///org/apache/kafka/common/requests/EpochEndOffset/EpochEndOffset(org.apache.kafka.common.protocol.Errors,long)|",
    "v1Body": [
      "|java+method:///scala/Some/x()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///kafka/server/ReplicaManager/getPartition(org.apache.kafka.common.TopicPartition)|",
      "|java+method:///scala/Predef$/ArrowAssoc(java.lang.Object)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///scala/Predef$ArrowAssoc$/$minus$greater$extension(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/cluster/Partition/lastOffsetForLeaderEpoch(int)|",
      "|java+method:///scala/Predef$/Integer2int(java.lang.Integer)|",
      "|java+constructor:///org/apache/kafka/common/requests/EpochEndOffset/EpochEndOffset(org.apache.kafka.common.protocol.Errors,long)|"
    ],
    "v2Body": [
      "|java+method:///scala/Some/x()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///kafka/server/ReplicaManager/getPartition(org.apache.kafka.common.TopicPartition)|",
      "|java+method:///kafka/server/ReplicaManager$/OfflinePartition()|",
      "|java+method:///scala/Predef$/ArrowAssoc(java.lang.Object)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///scala/Predef$ArrowAssoc$/$minus$greater$extension(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/cluster/Partition/lastOffsetForLeaderEpoch(int)|",
      "|java+method:///scala/Predef$/Integer2int(java.lang.Integer)|",
      "|java+constructor:///org/apache/kafka/common/requests/EpochEndOffset/EpochEndOffset(org.apache.kafka.common.protocol.Errors,long)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/coordinator/group/GroupMetadataManager$/readMessageKey(java.nio.ByteBuffer)|",
    "called": "|java+method:///org/apache/kafka/common/protocol/types/Struct/get(org.apache.kafka.common.protocol.types.BoundField)|",
    "v1Body": [
      "|java+method:///org/apache/kafka/common/protocol/types/Schema/read(java.nio.ByteBuffer)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/schemaForKey(int)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToShort(short)|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/OFFSET_KEY_GROUP_FIELD()|",
      "|java+constructor:///kafka/coordinator/group/OffsetKey/OffsetKey(short,kafka.coordinator.group.GroupTopicPartition)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/get(org.apache.kafka.common.protocol.types.Field)|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/GROUP_KEY_GROUP_FIELD()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToInt(java.lang.Object)|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/CURRENT_GROUP_KEY_SCHEMA_VERSION()|",
      "|java+constructor:///kafka/coordinator/group/GroupTopicPartition/GroupTopicPartition(java.lang.String,org.apache.kafka.common.TopicPartition)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///java/nio/ByteBuffer/getShort()|",
      "|java+constructor:///org/apache/kafka/common/TopicPartition/TopicPartition(java.lang.String,int)|",
      "|java+constructor:///kafka/coordinator/group/GroupMetadataKey/GroupMetadataKey(short,java.lang.String)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/OFFSET_KEY_PARTITION_FIELD()|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/CURRENT_OFFSET_KEY_SCHEMA_VERSION()|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/OFFSET_KEY_TOPIC_FIELD()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/kafka/common/protocol/types/Schema/read(java.nio.ByteBuffer)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToShort(short)|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/OFFSET_KEY_GROUP_FIELD()|",
      "|java+constructor:///kafka/coordinator/group/OffsetKey/OffsetKey(short,kafka.coordinator.group.GroupTopicPartition)|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/GROUP_KEY_GROUP_FIELD()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToInt(java.lang.Object)|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/CURRENT_GROUP_KEY_SCHEMA_VERSION()|",
      "|java+constructor:///kafka/coordinator/group/GroupTopicPartition/GroupTopicPartition(java.lang.String,org.apache.kafka.common.TopicPartition)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///java/nio/ByteBuffer/getShort()|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/get(org.apache.kafka.common.protocol.types.BoundField)|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/schemaForKey(int)|",
      "|java+constructor:///org/apache/kafka/common/TopicPartition/TopicPartition(java.lang.String,int)|",
      "|java+constructor:///kafka/coordinator/group/GroupMetadataKey/GroupMetadataKey(short,java.lang.String)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/OFFSET_KEY_PARTITION_FIELD()|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/CURRENT_OFFSET_KEY_SCHEMA_VERSION()|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/OFFSET_KEY_TOPIC_FIELD()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/ReplicaManager$$anonfun$13/apply(scala.Tuple2)|",
    "called": "|java+constructor:///org/apache/kafka/common/requests/ProduceResponse$PartitionResponse/ProduceResponse$PartitionResponse(org.apache.kafka.common.protocol.Errors,long,long,long)|",
    "v1Body": [
      "|java+method:///kafka/log/LogAppendInfo$/UnknownLogAppendInfo()|",
      "|java+method:///kafka/log/LogAppendInfo/firstOffset()|",
      "|java+method:///scala/Predef$/ArrowAssoc(java.lang.Object)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Predef$ArrowAssoc$/$minus$greater$extension(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///org/apache/kafka/common/requests/ProduceResponse$PartitionResponse/ProduceResponse$PartitionResponse(org.apache.kafka.common.protocol.Errors,long,long)|"
    ],
    "v2Body": [
      "|java+method:///kafka/log/LogAppendInfo$/UnknownLogAppendInfo()|",
      "|java+method:///kafka/log/LogAppendInfo/logStartOffset()|",
      "|java+method:///kafka/log/LogAppendInfo/firstOffset()|",
      "|java+method:///scala/Predef$/ArrowAssoc(java.lang.Object)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+constructor:///org/apache/kafka/common/requests/ProduceResponse$PartitionResponse/ProduceResponse$PartitionResponse(org.apache.kafka.common.protocol.Errors,long,long,long)|",
      "|java+method:///scala/Predef$ArrowAssoc$/$minus$greater$extension(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/log/ProducerAppendInfo/appendEndTxnMarker(org.apache.kafka.common.record.EndTransactionMarker,short,long,long)|",
    "called": "|java+constructor:///org/apache/kafka/common/errors/TransactionCoordinatorFencedException/TransactionCoordinatorFencedException(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///kafka/log/CompletedTxn/CompletedTxn(long,long,long,boolean)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToShort(short)|",
      "|java+method:///kafka/log/ProducerAppendInfo/producerEpoch_$eq(short)|",
      "|java+method:///kafka/log/ProducerAppendInfo/producerId()|",
      "|java+method:///org/apache/kafka/common/record/EndTransactionMarker/coordinatorEpoch()|",
      "|java+method:///kafka/log/ProducerAppendInfo/transactions()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///kafka/log/ProducerAppendInfo/lastOffset_$eq(long)|",
      "|java+method:///kafka/log/ProducerAppendInfo/currentTxnFirstOffset_$eq(scala.Option)|",
      "|java+method:///scala/Some/x()|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToLong(java.lang.Object)|",
      "|java+constructor:///org/apache/kafka/common/errors/TransactionCoordinatorFencedException/TransactionCoordinatorFencedException(java.lang.String)|",
      "|java+method:///kafka/log/ProducerAppendInfo/lastSeq()|",
      "|java+constructor:///org/apache/kafka/common/errors/ProducerFencedException/ProducerFencedException(java.lang.String)|",
      "|java+method:///kafka/log/ProducerAppendInfo/lastSeq_$eq(int)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///kafka/log/ProducerAppendInfo/maxTimestamp_$eq(long)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///kafka/log/ProducerAppendInfo/currentTxnFirstOffset()|",
      "|java+method:///kafka/log/ProducerAppendInfo/coordinatorEpoch_$eq(int)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///kafka/log/ProducerAppendInfo/isFenced(short)|",
      "|java+method:///kafka/log/ProducerAppendInfo/producerEpoch()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+constructor:///kafka/log/TxnMetadata/TxnMetadata(long,long)|",
      "|java+method:///kafka/log/ProducerAppendInfo/coordinatorEpoch()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///scala/collection/mutable/ListBuffer/$plus$eq(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/record/EndTransactionMarker/controlType()|",
      "|java+method:///kafka/log/ProducerAppendInfo/firstSeq_$eq(int)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+constructor:///kafka/log/CompletedTxn/CompletedTxn(long,long,long,boolean)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToShort(short)|",
      "|java+method:///kafka/log/ProducerAppendInfo/producerId()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/kafka/common/record/EndTransactionMarker/coordinatorEpoch()|",
      "|java+method:///kafka/log/ProducerIdEntry/coordinatorEpoch()|",
      "|java+method:///kafka/log/ProducerAppendInfo/transactions()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///scala/Some/x()|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToLong(java.lang.Object)|",
      "|java+constructor:///org/apache/kafka/common/errors/TransactionCoordinatorFencedException/TransactionCoordinatorFencedException(java.lang.String)|",
      "|java+constructor:///org/apache/kafka/common/errors/ProducerFencedException/ProducerFencedException(java.lang.String)|",
      "|java+method:///kafka/log/ProducerIdEntry/currentTxnFirstOffset_$eq(scala.Option)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///kafka/log/ProducerAppendInfo/isFenced(short)|",
      "|java+method:///kafka/log/ProducerIdEntry/currentTxnFirstOffset()|",
      "|java+method:///kafka/log/ProducerIdEntry/coordinatorEpoch_$eq(int)|",
      "|java+method:///kafka/log/ProducerIdEntry/producerEpoch()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///kafka/log/TxnMetadata/TxnMetadata(long,long)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///scala/collection/mutable/ListBuffer/$plus$eq(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/record/EndTransactionMarker/controlType()|",
      "|java+method:///kafka/log/ProducerIdEntry/maybeUpdateEpoch(short)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+constructor:///kafka/log/Cleaner/Cleaner(int,kafka.log.OffsetMap,int,int,double,kafka.utils.Throttler,org.apache.kafka.common.utils.Time,scala.Function1)|",
    "called": "|java+method:///org/apache/kafka/common/record/BufferSupplier/create()|",
    "v1Body": [
      "|java+method:///org/apache/kafka/common/record/BufferSupplier/create()|",
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///scala/Predef$/require(boolean,scala.Function0)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///kafka/log/OffsetMap/slots()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///kafka/log/Cleaner$$anonfun$9/Cleaner$$anonfun$9(kafka.log.Cleaner)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///kafka/utils/Logging$class/$init$(kafka.utils.Logging)|",
      "|java+method:///kafka/log/Cleaner/logIdent_$eq(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/kafka/common/record/BufferSupplier/create()|",
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+constructor:///kafka/log/Cleaner$$anonfun$10/Cleaner$$anonfun$10(kafka.log.Cleaner)|",
      "|java+method:///scala/Predef$/require(boolean,scala.Function0)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///kafka/log/OffsetMap/slots()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///kafka/utils/Logging$class/$init$(kafka.utils.Logging)|",
      "|java+method:///kafka/log/Cleaner/logIdent_$eq(java.lang.String)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+constructor:///kafka/server/ClientQuotaManager/ClientQuotaManager(kafka.server.ClientQuotaManagerConfig,org.apache.kafka.common.metrics.Metrics,kafka.server.QuotaType,org.apache.kafka.common.utils.Time)|",
    "called": "|java+method:///org/apache/kafka/common/metrics/Quota/upperBound(double)|",
    "v1Body": [
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap()|",
      "|java+method:///org/apache/kafka/common/metrics/Metrics/sensor(java.lang.String)|",
      "|java+method:///scala/Predef$any2stringadd$/$plus$extension(java.lang.Object,java.lang.String)|",
      "|java+constructor:///java/util/concurrent/locks/ReentrantReadWriteLock/ReentrantReadWriteLock()|",
      "|java+method:///kafka/server/ClientQuotaManager/start()|",
      "|java+method:///kafka/server/ClientQuotaManager/delayQueue()|",
      "|java+constructor:///java/util/concurrent/DelayQueue/DelayQueue()|",
      "|java+constructor:///kafka/server/ClientQuotaManager$ThrottledRequestReaper/ClientQuotaManager$ThrottledRequestReaper(kafka.server.ClientQuotaManager,java.util.concurrent.DelayQueue)|",
      "|java+method:///kafka/server/QuotaTypes$/ClientIdQuotaEnabled()|",
      "|java+method:///scala/Predef$/any2stringadd(java.lang.Object)|",
      "|java+method:///kafka/utils/Logging$class/$init$(kafka.utils.Logging)|",
      "|java+method:///kafka/server/QuotaTypes$/NoQuotas()|",
      "|java+method:///kafka/server/ClientQuotaManagerConfig/quotaBytesPerSecondDefault()|",
      "|java+method:///org/apache/kafka/common/metrics/Quota/upperBound(double)|",
      "|java+constructor:///kafka/server/SensorAccess/SensorAccess()|",
      "|java+method:///org/apache/kafka/common/metrics/Metrics/metricName(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///kafka/server/ClientQuotaManager/kafka$server$ClientQuotaManager$$delayQueueSensor()|",
      "|java+constructor:///org/apache/kafka/common/metrics/stats/Total/Total()|",
      "|java+method:///org/apache/kafka/common/metrics/Sensor/add(org.apache.kafka.common.MetricName,org.apache.kafka.common.metrics.MeasurableStat)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap()|",
      "|java+method:///org/apache/kafka/common/metrics/Metrics/sensor(java.lang.String)|",
      "|java+method:///kafka/server/ClientQuotaManager/start()|",
      "|java+method:///kafka/server/ClientQuotaManager/delayQueue()|",
      "|java+constructor:///java/util/concurrent/DelayQueue/DelayQueue()|",
      "|java+constructor:///kafka/server/ClientQuotaManager$ThrottledRequestReaper/ClientQuotaManager$ThrottledRequestReaper(kafka.server.ClientQuotaManager,java.util.concurrent.DelayQueue)|",
      "|java+method:///kafka/server/QuotaTypes$/ClientIdQuotaEnabled()|",
      "|java+method:///scala/Predef$/any2stringadd(java.lang.Object)|",
      "|java+method:///kafka/utils/Logging$class/$init$(kafka.utils.Logging)|",
      "|java+method:///kafka/server/QuotaTypes$/NoQuotas()|",
      "|java+method:///kafka/server/ClientQuotaManagerConfig/quotaBytesPerSecondDefault()|",
      "|java+method:///org/apache/kafka/common/metrics/Quota/upperBound(double)|",
      "|java+method:///org/apache/kafka/common/metrics/Metrics/metricName(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+constructor:///kafka/server/SensorAccess/SensorAccess(java.util.concurrent.locks.ReadWriteLock,org.apache.kafka.common.metrics.Metrics)|",
      "|java+method:///scala/Predef$any2stringadd$/$plus$extension(java.lang.Object,java.lang.String)|",
      "|java+constructor:///java/util/concurrent/locks/ReentrantReadWriteLock/ReentrantReadWriteLock()|",
      "|java+method:///kafka/server/ClientQuotaManager/lock()|",
      "|java+method:///kafka/server/ClientQuotaManager/kafka$server$ClientQuotaManager$$delayQueueSensor()|",
      "|java+constructor:///org/apache/kafka/common/metrics/stats/Total/Total()|",
      "|java+method:///org/apache/kafka/common/metrics/Sensor/add(org.apache.kafka.common.MetricName,org.apache.kafka.common.metrics.MeasurableStat)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+constructor:///kafka/server/ReplicationQuotaManager/ReplicationQuotaManager(kafka.server.ReplicationQuotaManagerConfig,org.apache.kafka.common.metrics.Metrics,kafka.server.QuotaType,org.apache.kafka.common.utils.Time)|",
    "called": "|java+method:///org/apache/kafka/common/metrics/Metrics/metricName(java.lang.String,java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+constructor:///java/util/concurrent/locks/ReentrantReadWriteLock/ReentrantReadWriteLock()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/utils/Logging$class/$init$(kafka.utils.Logging)|",
      "|java+constructor:///kafka/server/SensorAccess/SensorAccess()|",
      "|java+method:///org/apache/kafka/common/metrics/Metrics/metricName(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/kafka/common/metrics/Metrics/metricName(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+constructor:///kafka/server/SensorAccess/SensorAccess(java.util.concurrent.locks.ReadWriteLock,org.apache.kafka.common.metrics.Metrics)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+constructor:///java/util/concurrent/locks/ReentrantReadWriteLock/ReentrantReadWriteLock()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/server/ReplicationQuotaManager/lock()|",
      "|java+method:///kafka/utils/Logging$class/$init$(kafka.utils.Logging)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/common/InterBrokerSendThread$$anonfun$doWork$2/apply(kafka.common.RequestAndCompletionHandler)|",
    "called": "|java+method:///org/apache/kafka/clients/NetworkClient/ready(org.apache.kafka.common.Node,long)|",
    "v1Body": [
      "|java+method:///kafka/common/RequestAndCompletionHandler/handler()|",
      "|java+method:///kafka/common/RequestAndCompletionHandler/request()|",
      "|java+method:///org/apache/kafka/clients/NetworkClient/newClientRequest(java.lang.String,org.apache.kafka.common.requests.AbstractRequest$Builder,long,boolean,org.apache.kafka.clients.RequestCompletionHandler)|",
      "|java+method:///java/lang/Integer/toString(int)|",
      "|java+constructor:///org/apache/kafka/clients/ClientResponse/ClientResponse(org.apache.kafka.common.requests.RequestHeader,org.apache.kafka.clients.RequestCompletionHandler,java.lang.String,long,long,boolean,org.apache.kafka.common.errors.UnsupportedVersionException,org.apache.kafka.common.requests.AbstractResponse)|",
      "|java+method:///org/apache/kafka/clients/RequestCompletionHandler/onComplete(org.apache.kafka.clients.ClientResponse)|",
      "|java+method:///org/apache/kafka/clients/NetworkClient/send(org.apache.kafka.clients.ClientRequest,long)|",
      "|java+method:///org/apache/kafka/common/Node/id()|",
      "|java+method:///java/lang/Math/min(long,long)|",
      "|java+method:///org/apache/kafka/common/requests/AbstractRequest$Builder/desiredOrLatestVersion()|",
      "|java+method:///org/apache/kafka/clients/NetworkClient/connectionDelay(org.apache.kafka.common.Node,long)|",
      "|java+method:///org/apache/kafka/clients/ClientRequest/makeHeader(short)|",
      "|java+method:///org/apache/kafka/clients/NetworkClient/ready(org.apache.kafka.common.Node,long)|",
      "|java+method:///kafka/common/RequestAndCompletionHandler/destination()|"
    ],
    "v2Body": [
      "|java+method:///kafka/common/RequestAndCompletionHandler/handler()|",
      "|java+method:///java/lang/Math/min(long,long)|",
      "|java+method:///kafka/common/RequestAndCompletionHandler/request()|",
      "|java+method:///org/apache/kafka/clients/NetworkClient/newClientRequest(java.lang.String,org.apache.kafka.common.requests.AbstractRequest$Builder,long,boolean,org.apache.kafka.clients.RequestCompletionHandler)|",
      "|java+method:///java/lang/Integer/toString(int)|",
      "|java+constructor:///org/apache/kafka/clients/ClientResponse/ClientResponse(org.apache.kafka.common.requests.RequestHeader,org.apache.kafka.clients.RequestCompletionHandler,java.lang.String,long,long,boolean,org.apache.kafka.common.errors.UnsupportedVersionException,org.apache.kafka.common.requests.AbstractResponse)|",
      "|java+method:///org/apache/kafka/clients/RequestCompletionHandler/onComplete(org.apache.kafka.clients.ClientResponse)|",
      "|java+method:///org/apache/kafka/clients/NetworkClient/send(org.apache.kafka.clients.ClientRequest,long)|",
      "|java+method:///org/apache/kafka/common/Node/id()|",
      "|java+method:///org/apache/kafka/clients/NetworkClient/connectionDelay(org.apache.kafka.common.Node,long)|",
      "|java+method:///org/apache/kafka/clients/ClientRequest/makeHeader(short)|",
      "|java+method:///org/apache/kafka/common/requests/AbstractRequest$Builder/latestAllowedVersion()|",
      "|java+method:///org/apache/kafka/clients/NetworkClient/ready(org.apache.kafka.common.Node,long)|",
      "|java+method:///kafka/common/RequestAndCompletionHandler/destination()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/network/SocketServer$$anonfun$startup$1/apply(kafka.cluster.EndPoint)|",
    "called": "|java+method:///org/apache/kafka/common/utils/KafkaThread/nonDaemon(java.lang.String,java.lang.Runnable)|",
    "v1Body": [
      "|java+method:///org/apache/kafka/common/utils/Utils/newThread(java.lang.String,java.lang.Runnable,boolean)|",
      "|java+method:///kafka/network/SocketServer/kafka$network$SocketServer$$connectionQuotas()|",
      "|java+method:///scala/collection/immutable/Range/foreach$mVc$sp(scala.Function1)|",
      "|java+method:///kafka/cluster/EndPoint/listenerName()|",
      "|java+method:///scala/Predef$/Integer2int(java.lang.Integer)|",
      "|java+method:///scala/runtime/RichInt$/until$extension0(int,int)|",
      "|java+method:///scala/Predef$/intWrapper(int)|",
      "|java+method:///java/lang/Thread/start()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/collection/mutable/ArrayOps/slice(int,int)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///kafka/cluster/EndPoint/securityProtocol()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///kafka/network/SocketServer/acceptors()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/collection/mutable/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///kafka/network/SocketServer/kafka$network$SocketServer$$processors()|",
      "|java+constructor:///kafka/network/SocketServer$$anonfun$startup$1$$anonfun$apply$1/SocketServer$$anonfun$startup$1$$anonfun$apply$1(kafka.network.SocketServer$$anonfun$startup$1,org.apache.kafka.common.network.ListenerName,org.apache.kafka.common.protocol.SecurityProtocol)|",
      "|java+constructor:///kafka/network/Acceptor/Acceptor(kafka.cluster.EndPoint,int,int,int,kafka.network.Processor%5B%5D,kafka.network.ConnectionQuotas)|",
      "|java+method:///kafka/cluster/EndPoint/port()|",
      "|java+method:///kafka/network/Acceptor/awaitStartup()|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///kafka/network/SocketServer/kafka$network$SocketServer$$numProcessorThreads()|"
    ],
    "v2Body": [
      "|java+constructor:///kafka/network/SocketServer$$anonfun$startup$1$$anonfun$apply$1/SocketServer$$anonfun$startup$1$$anonfun$apply$1(kafka.network.SocketServer$$anonfun$startup$1,org.apache.kafka.common.network.ListenerName,org.apache.kafka.common.security.auth.SecurityProtocol)|",
      "|java+method:///kafka/network/SocketServer/kafka$network$SocketServer$$connectionQuotas()|",
      "|java+method:///scala/collection/immutable/Range/foreach$mVc$sp(scala.Function1)|",
      "|java+method:///kafka/network/SocketServer/kafka$network$SocketServer$$processors()|",
      "|java+method:///kafka/cluster/EndPoint/listenerName()|",
      "|java+method:///scala/Predef$/Integer2int(java.lang.Integer)|",
      "|java+method:///org/apache/kafka/common/utils/KafkaThread/start()|",
      "|java+method:///scala/runtime/RichInt$/until$extension0(int,int)|",
      "|java+method:///scala/Predef$/intWrapper(int)|",
      "|java+method:///org/apache/kafka/common/utils/KafkaThread/nonDaemon(java.lang.String,java.lang.Runnable)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/collection/mutable/ArrayOps/slice(int,int)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///kafka/cluster/EndPoint/securityProtocol()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///kafka/network/SocketServer/acceptors()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/collection/mutable/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///kafka/network/Acceptor/Acceptor(kafka.cluster.EndPoint,int,int,int,kafka.network.Processor%5B%5D,kafka.network.ConnectionQuotas)|",
      "|java+method:///kafka/cluster/EndPoint/port()|",
      "|java+method:///kafka/network/Acceptor/awaitStartup()|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///kafka/network/SocketServer/kafka$network$SocketServer$$numProcessorThreads()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/KafkaServer/startup()|",
    "called": "|java+constructor:///org/apache/kafka/common/utils/LogContext/LogContext(java.lang.String)|",
    "v1Body": [
      "|java+method:///kafka/controller/KafkaController/startup()|",
      "|java+method:///kafka/server/KafkaServer/transactionCoordinator_$eq(kafka.coordinator.transaction.TransactionCoordinator)|",
      "|java+constructor:///kafka/server/KafkaApis/KafkaApis(kafka.network.RequestChannel,kafka.server.ReplicaManager,kafka.server.AdminManager,kafka.coordinator.group.GroupCoordinator,kafka.coordinator.transaction.TransactionCoordinator,kafka.controller.KafkaController,kafka.utils.ZkUtils,int,kafka.server.KafkaConfig,kafka.server.MetadataCache,org.apache.kafka.common.metrics.Metrics,scala.Option,kafka.server.QuotaFactory$QuotaManagers,kafka.server.BrokerTopicStats,java.lang.String,org.apache.kafka.common.utils.Time)|",
      "|java+method:///kafka/server/KafkaServer/groupCoordinator_$eq(kafka.coordinator.group.GroupCoordinator)|",
      "|java+method:///kafka/server/KafkaServer/kafkaHealthcheck_$eq(kafka.server.KafkaHealthcheck)|",
      "|java+method:///kafka/server/BrokerState/newState(kafka.server.BrokerStates)|",
      "|java+method:///kafka/server/KafkaConfig$/BrokerIdProp()|",
      "|java+method:///kafka/log/LogManager$/apply(kafka.server.KafkaConfig,kafka.utils.ZkUtils,kafka.server.BrokerState,kafka.utils.KafkaScheduler,org.apache.kafka.common.utils.Time,kafka.server.BrokerTopicStats)|",
      "|java+method:///kafka/server/ReplicaManager/startup()|",
      "|java+method:///kafka/server/KafkaServer/authorizer_$eq(scala.Option)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///kafka/server/KafkaConfig/getConfiguredInstances(java.lang.String,java.lang.Class,java.util.Map)|",
      "|java+method:///kafka/server/KafkaServer/adminManager()|",
      "|java+method:///kafka/server/KafkaServer/replicaManager_$eq(kafka.server.ReplicaManager)|",
      "|java+method:///kafka/server/KafkaConfig/numIoThreads()|",
      "|java+method:///kafka/server/KafkaServer/info(scala.Function0)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///kafka/server/KafkaConfig/saslEnabledMechanisms()|",
      "|java+method:///kafka/coordinator/transaction/TransactionCoordinator$/apply(kafka.server.KafkaConfig,kafka.server.ReplicaManager,kafka.utils.Scheduler,kafka.utils.ZkUtils,org.apache.kafka.common.metrics.Metrics,kafka.server.MetadataCache,org.apache.kafka.common.utils.Time)|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///kafka/server/KafkaServer/metadataCache()|",
      "|java+method:///kafka/utils/Mx4jLoader$/maybeLoad()|",
      "|java+method:///kafka/server/KafkaServer/logManager_$eq(kafka.log.LogManager)|",
      "|java+method:///kafka/utils/KafkaScheduler$/$lessinit$greater$default$3()|",
      "|java+method:///kafka/server/KafkaConfig$/MetricReporterClassesProp()|",
      "|java+method:///kafka/utils/KafkaScheduler/startup()|",
      "|java+method:///kafka/server/KafkaServer/metadataCache_$eq(kafka.server.MetadataCache)|",
      "|java+constructor:///kafka/server/BrokerConfigHandler/BrokerConfigHandler(kafka.server.KafkaConfig,kafka.server.QuotaFactory$QuotaManagers)|",
      "|java+method:///kafka/log/LogManager/startup()|",
      "|java+method:///kafka/server/KafkaServer/initZk()|",
      "|java+method:///kafka/server/KafkaServer/clusterId()|",
      "|java+method:///kafka/server/KafkaServer/_clusterId_$eq(java.lang.String)|",
      "|java+method:///kafka/server/KafkaServer/startupComplete()|",
      "|java+constructor:///kafka/server/KafkaServer$$anonfun$2/KafkaServer$$anonfun$2(kafka.server.KafkaServer)|",
      "|java+constructor:///kafka/server/KafkaServer$$anonfun$startup$6/KafkaServer$$anonfun$startup$6(kafka.server.KafkaServer)|",
      "|java+constructor:///kafka/server/KafkaServer$$anonfun$startup$5/KafkaServer$$anonfun$startup$5(kafka.server.KafkaServer)|",
      "|java+constructor:///kafka/server/KafkaServer$$anonfun$startup$4/KafkaServer$$anonfun$startup$4(kafka.server.KafkaServer)|",
      "|java+constructor:///kafka/server/KafkaServer$$anonfun$startup$2/KafkaServer$$anonfun$startup$2(kafka.server.KafkaServer)|",
      "|java+method:///kafka/server/KafkaServer/config()|",
      "|java+constructor:///kafka/server/KafkaServer$$anonfun$startup$3/KafkaServer$$anonfun$startup$3(kafka.server.KafkaServer)|",
      "|java+constructor:///kafka/server/KafkaServer$$anonfun$startup$1/KafkaServer$$anonfun$startup$1(kafka.server.KafkaServer)|",
      "|java+constructor:///kafka/server/KafkaServer$$anonfun$startup$7/KafkaServer$$anonfun$startup$7(kafka.server.KafkaServer,java.lang.Throwable)|",
      "|java+method:///kafka/network/SocketServer/startup()|",
      "|java+constructor:///kafka/server/AdminManager/AdminManager(kafka.server.KafkaConfig,org.apache.kafka.common.metrics.Metrics,kafka.server.MetadataCache,kafka.utils.ZkUtils)|",
      "|java+method:///kafka/server/KafkaServer/brokerState()|",
      "|java+method:///scala/Predef$/ArrowAssoc(java.lang.Object)|",
      "|java+method:///kafka/server/KafkaServer/zkUtils_$eq(kafka.utils.ZkUtils)|",
      "|java+method:///kafka/server/KafkaConfig/authorizerClassName()|",
      "|java+constructor:///org/apache/kafka/common/metrics/JmxReporter/JmxReporter(java.lang.String)|",
      "|java+method:///kafka/server/KafkaServer/isStartingUp()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///kafka/coordinator/transaction/TransactionCoordinator/startup(boolean)|",
      "|java+method:///kafka/server/KafkaServer/kafkaHealthcheck()|",
      "|java+constructor:///kafka/security/CredentialProvider/CredentialProvider(java.util.List)|",
      "|java+method:///kafka/server/KafkaConfig/brokerId_$eq(int)|",
      "|java+method:///kafka/server/KafkaServer/shutdownLatch_$eq(java.util.concurrent.CountDownLatch)|",
      "|java+method:///kafka/server/KafkaServer/kafkaController_$eq(kafka.controller.KafkaController)|",
      "|java+constructor:///java/util/concurrent/CountDownLatch/CountDownLatch(int)|",
      "|java+constructor:///kafka/server/BrokerTopicStats/BrokerTopicStats()|",
      "|java+constructor:///kafka/utils/KafkaScheduler/KafkaScheduler(int,java.lang.String,boolean)|",
      "|java+constructor:///kafka/server/KafkaHealthcheck/KafkaHealthcheck(int,scala.collection.Seq,kafka.utils.ZkUtils,scala.Option,kafka.api.ApiVersion)|",
      "|java+method:///kafka/coordinator/group/GroupCoordinator/startup(boolean)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///kafka/server/KafkaServer/credentialProvider()|",
      "|java+method:///kafka/server/KafkaServer/metrics_$eq(org.apache.kafka.common.metrics.Metrics)|",
      "|java+method:///kafka/server/KafkaServer/logManager()|",
      "|java+constructor:///kafka/server/TopicConfigHandler/TopicConfigHandler(kafka.log.LogManager,kafka.server.KafkaConfig,kafka.server.QuotaFactory$QuotaManagers)|",
      "|java+method:///scala/Option$/apply(java.lang.Object)|",
      "|java+method:///kafka/server/KafkaServer/authorizer()|",
      "|java+method:///kafka/server/KafkaServer/socketServer_$eq(kafka.network.SocketServer)|",
      "|java+method:///kafka/server/KafkaServer/brokerTopicStats()|",
      "|java+method:///kafka/server/KafkaServer/quotaManagers()|",
      "|java+method:///kafka/server/DynamicConfigManager$/$lessinit$greater$default$3()|",
      "|java+method:///kafka/server/KafkaServer/_brokerTopicStats_$eq(kafka.server.BrokerTopicStats)|",
      "|java+constructor:///kafka/server/MetadataCache/MetadataCache(int)|",
      "|java+method:///scala/Option/filter(scala.Function1)|",
      "|java+method:///scala/Option/map(scala.Function1)|",
      "|java+method:///kafka/server/DynamicConfigManager$/$lessinit$greater$default$4()|",
      "|java+method:///kafka/server/KafkaServer/zkUtils()|",
      "|java+constructor:///kafka/controller/KafkaController/KafkaController(kafka.server.KafkaConfig,kafka.utils.ZkUtils,org.apache.kafka.common.utils.Time,org.apache.kafka.common.metrics.Metrics,scala.Option)|",
      "|java+method:///kafka/server/ConfigType$/User()|",
      "|java+method:///kafka/server/KafkaConfig/interBrokerProtocolVersion()|",
      "|java+method:///kafka/server/KafkaServer/dynamicConfigManager()|",
      "|java+method:///kafka/server/ConfigType$/Client()|",
      "|java+method:///scala/collection/Seq/$plus$plus(scala.collection.GenTraversableOnce,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///kafka/server/KafkaServer/adminManager_$eq(kafka.server.AdminManager)|",
      "|java+method:///scala/Predef$ArrowAssoc$/$minus$greater$extension(java.lang.Object,java.lang.Object)|",
      "|java+method:///kafka/server/KafkaConfig/advertisedListeners()|",
      "|java+constructor:///kafka/server/ClientIdConfigHandler/ClientIdConfigHandler(kafka.server.QuotaFactory$QuotaManagers)|",
      "|java+method:///scala/collection/JavaConverters$/asScalaBufferConverter(java.util.List)|",
      "|java+method:///kafka/server/KafkaServer/kafka$server$KafkaServer$$jmxPrefix()|",
      "|java+method:///scala/collection/JavaConverters$/mapAsJavaMapConverter(scala.collection.Map)|",
      "|java+method:///kafka/server/KafkaServer/requestHandlerPool_$eq(kafka.server.KafkaRequestHandlerPool)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///kafka/server/QuotaFactory$/instantiate(kafka.server.KafkaConfig,org.apache.kafka.common.metrics.Metrics,org.apache.kafka.common.utils.Time)|",
      "|java+method:///kafka/server/KafkaServer/isShuttingDown()|",
      "|java+method:///kafka/server/KafkaHealthcheck/startup()|",
      "|java+method:///kafka/server/KafkaServer/kafkaController()|",
      "|java+method:///kafka/server/KafkaServer/apis_$eq(kafka.server.KafkaApis)|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/get()|",
      "|java+method:///scala/collection/Map$/apply(scala.collection.Seq)|",
      "|java+method:///kafka/server/KafkaServer/metrics()|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/compareAndSet(boolean,boolean)|",
      "|java+constructor:///kafka/server/DynamicConfigManager/DynamicConfigManager(kafka.utils.ZkUtils,scala.collection.Map,long,org.apache.kafka.common.utils.Time)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///kafka/server/KafkaServer/dynamicConfigManager_$eq(kafka.server.DynamicConfigManager)|",
      "|java+method:///kafka/coordinator/group/GroupCoordinator$/apply(kafka.server.KafkaConfig,kafka.utils.ZkUtils,kafka.server.ReplicaManager,org.apache.kafka.common.utils.Time)|",
      "|java+method:///kafka/server/KafkaServer/checkpointBrokerId(int)|",
      "|java+method:///kafka/server/KafkaServer/groupCoordinator()|",
      "|java+method:///org/apache/kafka/common/utils/AppInfoParser/registerAppInfo(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///kafka/server/KafkaServer/transactionCoordinator()|",
      "|java+method:///kafka/server/KafkaServer/quotaManagers_$eq(kafka.server.QuotaFactory$QuotaManagers)|",
      "|java+method:///kafka/server/KafkaServer/dynamicConfigHandlers_$eq(scala.collection.Map)|",
      "|java+method:///kafka/server/KafkaServer$/metricConfig(kafka.server.KafkaConfig)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///kafka/server/DynamicConfigManager/startup()|",
      "|java+constructor:///kafka/server/KafkaRequestHandlerPool/KafkaRequestHandlerPool(int,kafka.network.RequestChannel,kafka.server.KafkaApis,org.apache.kafka.common.utils.Time,int)|",
      "|java+method:///kafka/server/KafkaServer/kafkaScheduler()|",
      "|java+method:///kafka/server/KafkaServer/credentialProvider_$eq(kafka.security.CredentialProvider)|",
      "|java+method:///kafka/server/KafkaConfig/brokerId()|",
      "|java+constructor:///org/apache/kafka/common/metrics/Metrics/Metrics(org.apache.kafka.common.metrics.MetricConfig,java.util.List,org.apache.kafka.common.utils.Time,boolean)|",
      "|java+method:///kafka/server/KafkaServer/replicaManager()|",
      "|java+constructor:///kafka/server/UserConfigHandler/UserConfigHandler(kafka.server.QuotaFactory$QuotaManagers,kafka.security.CredentialProvider)|",
      "|java+method:///kafka/server/KafkaServer/getBrokerId()|",
      "|java+constructor:///kafka/network/SocketServer/SocketServer(kafka.server.KafkaConfig,org.apache.kafka.common.metrics.Metrics,org.apache.kafka.common.utils.Time,kafka.security.CredentialProvider)|",
      "|java+method:///kafka/server/KafkaServer/shutdown()|",
      "|java+method:///kafka/coordinator/group/GroupCoordinator/startup$default$1()|",
      "|java+method:///kafka/server/KafkaServer/socketServer()|",
      "|java+method:///scala/Predef$/Integer2int(java.lang.Integer)|",
      "|java+method:///kafka/server/KafkaServer/dynamicConfigHandlers()|",
      "|java+method:///scala/collection/Seq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///kafka/server/KafkaServer/notifyClusterListeners(scala.collection.Seq)|",
      "|java+method:///kafka/server/KafkaServer/fatal(scala.Function0,scala.Function0)|",
      "|java+method:///kafka/server/KafkaServer/logIdent_$eq(java.lang.String)|",
      "|java+method:///kafka/coordinator/transaction/TransactionCoordinator/startup$default$1()|",
      "|java+method:///kafka/server/KafkaConfig/rack()|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/set(boolean)|",
      "|java+method:///kafka/server/KafkaServer/apis()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///kafka/network/SocketServer/requestChannel()|",
      "|java+method:///kafka/server/ConfigType$/Topic()|",
      "|java+method:///kafka/server/KafkaServer/getOrGenerateClusterId(kafka.utils.ZkUtils)|",
      "|java+method:///kafka/server/ConfigType$/Broker()|",
      "|java+method:///kafka/server/KafkaServer/createReplicaManager(java.util.concurrent.atomic.AtomicBoolean)|"
    ],
    "v2Body": [
      "|java+method:///kafka/server/DynamicConfigManager/startup()|",
      "|java+method:///kafka/controller/KafkaController/startup()|",
      "|java+method:///kafka/server/KafkaServer/transactionCoordinator_$eq(kafka.coordinator.transaction.TransactionCoordinator)|",
      "|java+constructor:///kafka/server/KafkaApis/KafkaApis(kafka.network.RequestChannel,kafka.server.ReplicaManager,kafka.server.AdminManager,kafka.coordinator.group.GroupCoordinator,kafka.coordinator.transaction.TransactionCoordinator,kafka.controller.KafkaController,kafka.utils.ZkUtils,int,kafka.server.KafkaConfig,kafka.server.MetadataCache,org.apache.kafka.common.metrics.Metrics,scala.Option,kafka.server.QuotaFactory$QuotaManagers,kafka.server.BrokerTopicStats,java.lang.String,org.apache.kafka.common.utils.Time)|",
      "|java+method:///kafka/log/LogManager$/apply(kafka.server.KafkaConfig,scala.collection.Seq,kafka.utils.ZkUtils,kafka.server.BrokerState,kafka.utils.KafkaScheduler,org.apache.kafka.common.utils.Time,kafka.server.BrokerTopicStats,kafka.server.LogDirFailureChannel)|",
      "|java+method:///kafka/server/KafkaServer/groupCoordinator_$eq(kafka.coordinator.group.GroupCoordinator)|",
      "|java+method:///kafka/server/KafkaServer/kafkaHealthcheck_$eq(kafka.server.KafkaHealthcheck)|",
      "|java+method:///kafka/server/BrokerState/newState(kafka.server.BrokerStates)|",
      "|java+method:///kafka/server/KafkaConfig$/BrokerIdProp()|",
      "|java+method:///kafka/server/ReplicaManager/startup()|",
      "|java+method:///kafka/server/KafkaServer/authorizer_$eq(scala.Option)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///kafka/server/KafkaConfig/getConfiguredInstances(java.lang.String,java.lang.Class,java.util.Map)|",
      "|java+method:///kafka/server/KafkaServer/adminManager()|",
      "|java+method:///kafka/server/KafkaServer/replicaManager_$eq(kafka.server.ReplicaManager)|",
      "|java+method:///kafka/server/KafkaConfig/numIoThreads()|",
      "|java+method:///kafka/server/KafkaServer/info(scala.Function0)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///kafka/server/KafkaConfig/saslEnabledMechanisms()|",
      "|java+method:///kafka/coordinator/transaction/TransactionCoordinator$/apply(kafka.server.KafkaConfig,kafka.server.ReplicaManager,kafka.utils.Scheduler,kafka.utils.ZkUtils,org.apache.kafka.common.metrics.Metrics,kafka.server.MetadataCache,org.apache.kafka.common.utils.Time)|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///kafka/server/KafkaServer/metadataCache()|",
      "|java+method:///kafka/utils/Mx4jLoader$/maybeLoad()|",
      "|java+method:///kafka/server/KafkaServer/logManager_$eq(kafka.log.LogManager)|",
      "|java+method:///kafka/utils/KafkaScheduler$/$lessinit$greater$default$3()|",
      "|java+method:///kafka/server/KafkaConfig$/MetricReporterClassesProp()|",
      "|java+method:///kafka/utils/KafkaScheduler/startup()|",
      "|java+method:///kafka/server/KafkaServer/metadataCache_$eq(kafka.server.MetadataCache)|",
      "|java+constructor:///kafka/server/BrokerConfigHandler/BrokerConfigHandler(kafka.server.KafkaConfig,kafka.server.QuotaFactory$QuotaManagers)|",
      "|java+method:///kafka/log/LogManager/startup()|",
      "|java+method:///kafka/server/KafkaServer/initZk()|",
      "|java+method:///kafka/server/KafkaServer/clusterId()|",
      "|java+method:///kafka/server/KafkaServer/_clusterId_$eq(java.lang.String)|",
      "|java+method:///kafka/server/KafkaServer/startupComplete()|",
      "|java+constructor:///kafka/server/KafkaServer$$anonfun$2/KafkaServer$$anonfun$2(kafka.server.KafkaServer)|",
      "|java+method:///kafka/server/KafkaServer/logDirFailureChannel()|",
      "|java+constructor:///kafka/server/KafkaServer$$anonfun$startup$6/KafkaServer$$anonfun$startup$6(kafka.server.KafkaServer)|",
      "|java+constructor:///kafka/server/KafkaServer$$anonfun$startup$5/KafkaServer$$anonfun$startup$5(kafka.server.KafkaServer)|",
      "|java+constructor:///kafka/server/KafkaServer$$anonfun$startup$4/KafkaServer$$anonfun$startup$4(kafka.server.KafkaServer)|",
      "|java+constructor:///kafka/server/KafkaServer$$anonfun$startup$2/KafkaServer$$anonfun$startup$2(kafka.server.KafkaServer)|",
      "|java+method:///kafka/server/KafkaServer/config()|",
      "|java+constructor:///kafka/server/KafkaServer$$anonfun$startup$3/KafkaServer$$anonfun$startup$3(kafka.server.KafkaServer)|",
      "|java+constructor:///kafka/server/KafkaServer$$anonfun$startup$1/KafkaServer$$anonfun$startup$1(kafka.server.KafkaServer)|",
      "|java+constructor:///kafka/server/KafkaServer$$anonfun$startup$7/KafkaServer$$anonfun$startup$7(kafka.server.KafkaServer,java.lang.Throwable)|",
      "|java+method:///kafka/network/SocketServer/startup()|",
      "|java+constructor:///kafka/server/AdminManager/AdminManager(kafka.server.KafkaConfig,org.apache.kafka.common.metrics.Metrics,kafka.server.MetadataCache,kafka.utils.ZkUtils)|",
      "|java+method:///kafka/server/KafkaServer/brokerState()|",
      "|java+method:///kafka/server/KafkaServer/logDirFailureChannel_$eq(kafka.server.LogDirFailureChannel)|",
      "|java+method:///scala/Predef$/ArrowAssoc(java.lang.Object)|",
      "|java+method:///kafka/server/KafkaServer/zkUtils_$eq(kafka.utils.ZkUtils)|",
      "|java+constructor:///org/apache/kafka/common/utils/LogContext/LogContext(java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig/authorizerClassName()|",
      "|java+constructor:///org/apache/kafka/common/metrics/JmxReporter/JmxReporter(java.lang.String)|",
      "|java+method:///kafka/server/KafkaServer/isStartingUp()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///kafka/coordinator/transaction/TransactionCoordinator/startup(boolean)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///kafka/server/KafkaServer/kafkaHealthcheck()|",
      "|java+constructor:///kafka/security/CredentialProvider/CredentialProvider(java.util.List)|",
      "|java+method:///kafka/server/KafkaConfig/brokerId_$eq(int)|",
      "|java+method:///kafka/server/KafkaServer/shutdownLatch_$eq(java.util.concurrent.CountDownLatch)|",
      "|java+method:///kafka/server/KafkaServer/kafkaController_$eq(kafka.controller.KafkaController)|",
      "|java+constructor:///java/util/concurrent/CountDownLatch/CountDownLatch(int)|",
      "|java+constructor:///kafka/server/BrokerTopicStats/BrokerTopicStats()|",
      "|java+constructor:///kafka/utils/KafkaScheduler/KafkaScheduler(int,java.lang.String,boolean)|",
      "|java+constructor:///kafka/server/KafkaHealthcheck/KafkaHealthcheck(int,scala.collection.Seq,kafka.utils.ZkUtils,scala.Option,kafka.api.ApiVersion)|",
      "|java+method:///kafka/coordinator/group/GroupCoordinator/startup(boolean)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///kafka/server/KafkaServer/credentialProvider()|",
      "|java+method:///kafka/server/KafkaServer/getBrokerIdAndOfflineDirs()|",
      "|java+method:///kafka/server/KafkaServer/metrics_$eq(org.apache.kafka.common.metrics.Metrics)|",
      "|java+method:///kafka/server/KafkaServer/logManager()|",
      "|java+constructor:///kafka/server/TopicConfigHandler/TopicConfigHandler(kafka.log.LogManager,kafka.server.KafkaConfig,kafka.server.QuotaFactory$QuotaManagers)|",
      "|java+method:///scala/Option$/apply(java.lang.Object)|",
      "|java+method:///kafka/server/KafkaServer/authorizer()|",
      "|java+method:///kafka/server/KafkaServer/socketServer_$eq(kafka.network.SocketServer)|",
      "|java+method:///kafka/server/KafkaServer/brokerTopicStats()|",
      "|java+method:///org/apache/kafka/common/utils/LogContext/logPrefix()|",
      "|java+method:///kafka/server/KafkaServer/quotaManagers()|",
      "|java+method:///kafka/server/DynamicConfigManager$/$lessinit$greater$default$3()|",
      "|java+method:///org/apache/kafka/common/utils/AppInfoParser/registerAppInfo(java.lang.String,java.lang.String,org.apache.kafka.common.metrics.Metrics)|",
      "|java+method:///kafka/server/KafkaServer/_brokerTopicStats_$eq(kafka.server.BrokerTopicStats)|",
      "|java+constructor:///kafka/server/MetadataCache/MetadataCache(int)|",
      "|java+method:///scala/Option/filter(scala.Function1)|",
      "|java+method:///scala/Option/map(scala.Function1)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///kafka/server/KafkaServer/logContext()|",
      "|java+method:///kafka/server/DynamicConfigManager$/$lessinit$greater$default$4()|",
      "|java+method:///kafka/server/KafkaServer/zkUtils()|",
      "|java+constructor:///kafka/controller/KafkaController/KafkaController(kafka.server.KafkaConfig,kafka.utils.ZkUtils,org.apache.kafka.common.utils.Time,org.apache.kafka.common.metrics.Metrics,scala.Option)|",
      "|java+method:///kafka/server/ConfigType$/User()|",
      "|java+method:///kafka/server/KafkaConfig/interBrokerProtocolVersion()|",
      "|java+method:///kafka/server/KafkaServer/dynamicConfigManager()|",
      "|java+method:///kafka/server/ConfigType$/Client()|",
      "|java+method:///scala/collection/Seq/$plus$plus(scala.collection.GenTraversableOnce,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///kafka/server/KafkaServer/adminManager_$eq(kafka.server.AdminManager)|",
      "|java+method:///scala/Predef$ArrowAssoc$/$minus$greater$extension(java.lang.Object,java.lang.Object)|",
      "|java+method:///kafka/server/KafkaConfig/advertisedListeners()|",
      "|java+constructor:///kafka/server/ClientIdConfigHandler/ClientIdConfigHandler(kafka.server.QuotaFactory$QuotaManagers)|",
      "|java+method:///scala/collection/JavaConverters$/asScalaBufferConverter(java.util.List)|",
      "|java+method:///kafka/server/KafkaServer/kafka$server$KafkaServer$$jmxPrefix()|",
      "|java+method:///scala/collection/JavaConverters$/mapAsJavaMapConverter(scala.collection.Map)|",
      "|java+method:///kafka/server/KafkaServer/requestHandlerPool_$eq(kafka.server.KafkaRequestHandlerPool)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///kafka/server/QuotaFactory$/instantiate(kafka.server.KafkaConfig,org.apache.kafka.common.metrics.Metrics,org.apache.kafka.common.utils.Time)|",
      "|java+method:///kafka/server/KafkaServer/isShuttingDown()|",
      "|java+method:///kafka/server/KafkaHealthcheck/startup()|",
      "|java+method:///kafka/server/KafkaServer/kafkaController()|",
      "|java+method:///kafka/server/KafkaServer/apis_$eq(kafka.server.KafkaApis)|",
      "|java+method:///kafka/server/KafkaServer/logContext_$eq(org.apache.kafka.common.utils.LogContext)|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/get()|",
      "|java+method:///scala/collection/Map$/apply(scala.collection.Seq)|",
      "|java+method:///kafka/server/KafkaServer/metrics()|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/compareAndSet(boolean,boolean)|",
      "|java+constructor:///kafka/server/DynamicConfigManager/DynamicConfigManager(kafka.utils.ZkUtils,scala.collection.Map,long,org.apache.kafka.common.utils.Time)|",
      "|java+method:///kafka/server/KafkaServer/dynamicConfigManager_$eq(kafka.server.DynamicConfigManager)|",
      "|java+method:///scala/collection/Seq/size()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/coordinator/group/GroupCoordinator$/apply(kafka.server.KafkaConfig,kafka.utils.ZkUtils,kafka.server.ReplicaManager,org.apache.kafka.common.utils.Time)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/server/KafkaServer/checkpointBrokerId(int)|",
      "|java+method:///kafka/server/KafkaServer/groupCoordinator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///kafka/server/KafkaServer/transactionCoordinator()|",
      "|java+method:///kafka/server/KafkaServer/quotaManagers_$eq(kafka.server.QuotaFactory$QuotaManagers)|",
      "|java+method:///kafka/server/KafkaServer/dynamicConfigHandlers_$eq(scala.collection.Map)|",
      "|java+method:///kafka/server/KafkaServer$/metricConfig(kafka.server.KafkaConfig)|",
      "|java+constructor:///kafka/server/LogDirFailureChannel/LogDirFailureChannel(int)|",
      "|java+constructor:///kafka/server/KafkaRequestHandlerPool/KafkaRequestHandlerPool(int,kafka.network.RequestChannel,kafka.server.KafkaApis,org.apache.kafka.common.utils.Time,int)|",
      "|java+method:///kafka/server/KafkaServer/kafkaScheduler()|",
      "|java+method:///kafka/server/KafkaServer/credentialProvider_$eq(kafka.security.CredentialProvider)|",
      "|java+method:///kafka/server/KafkaConfig/brokerId()|",
      "|java+constructor:///org/apache/kafka/common/metrics/Metrics/Metrics(org.apache.kafka.common.metrics.MetricConfig,java.util.List,org.apache.kafka.common.utils.Time,boolean)|",
      "|java+method:///kafka/server/KafkaConfig/logDirs()|",
      "|java+method:///kafka/server/KafkaServer/replicaManager()|",
      "|java+constructor:///kafka/server/UserConfigHandler/UserConfigHandler(kafka.server.QuotaFactory$QuotaManagers,kafka.security.CredentialProvider)|",
      "|java+constructor:///kafka/network/SocketServer/SocketServer(kafka.server.KafkaConfig,org.apache.kafka.common.metrics.Metrics,org.apache.kafka.common.utils.Time,kafka.security.CredentialProvider)|",
      "|java+method:///kafka/server/KafkaServer/shutdown()|",
      "|java+method:///kafka/coordinator/group/GroupCoordinator/startup$default$1()|",
      "|java+method:///kafka/server/KafkaServer/socketServer()|",
      "|java+method:///scala/Predef$/Integer2int(java.lang.Integer)|",
      "|java+method:///kafka/server/KafkaServer/dynamicConfigHandlers()|",
      "|java+method:///scala/collection/Seq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///kafka/server/KafkaServer/notifyClusterListeners(scala.collection.Seq)|",
      "|java+method:///kafka/server/KafkaServer/fatal(scala.Function0,scala.Function0)|",
      "|java+method:///kafka/server/KafkaServer/logIdent_$eq(java.lang.String)|",
      "|java+method:///kafka/coordinator/transaction/TransactionCoordinator/startup$default$1()|",
      "|java+method:///kafka/server/KafkaConfig/rack()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/set(boolean)|",
      "|java+method:///kafka/server/KafkaServer/apis()|",
      "|java+method:///scala/Tuple2/_1$mcI$sp()|",
      "|java+method:///kafka/network/SocketServer/requestChannel()|",
      "|java+method:///kafka/server/ConfigType$/Topic()|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///kafka/server/KafkaServer/getOrGenerateClusterId(kafka.utils.ZkUtils)|",
      "|java+method:///kafka/server/ConfigType$/Broker()|",
      "|java+method:///kafka/server/KafkaServer/createReplicaManager(java.util.concurrent.atomic.AtomicBoolean)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/controller/RequestSendThread$$anonfun$doWork$3/apply()|",
    "called": "|java+method:///org/apache/kafka/common/requests/AbstractResponse/toString(short)|",
    "v1Body": [
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///kafka/controller/RequestSendThread/controllerId()|",
      "|java+method:///kafka/controller/RequestSendThread$$anonfun$doWork$3/apply()|",
      "|java+method:///kafka/controller/RequestSendThread/brokerNode()|",
      "|java+method:///org/apache/kafka/common/Node/toString()|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///kafka/controller/ControllerContext/epoch()|",
      "|java+method:///org/apache/kafka/common/requests/AbstractResponse/toString(short)|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///org/apache/kafka/common/requests/RequestHeader/apiVersion()|",
      "|java+method:///kafka/controller/RequestSendThread/controllerContext()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///kafka/controller/RequestSendThread$$anonfun$doWork$3/apply()|",
      "|java+method:///kafka/controller/RequestSendThread/brokerNode()|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///org/apache/kafka/common/requests/RequestHeader/apiVersion()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///org/apache/kafka/common/requests/AbstractResponse/toString(short)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+constructor:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/ConsumerPerformance$ConsumerPerfConfig(java.lang.String%5B%5D)|",
    "called": "|java+method:///org/apache/kafka/common/utils/Utils/loadProps(java.lang.String)|",
    "v1Body": [
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/parser()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/topicOpt()|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/describedAs(java.lang.String)|",
      "|java+method:///scala/Predef$/int2Integer(int)|",
      "|java+constructor:///java/text/SimpleDateFormat/SimpleDateFormat(java.lang.String)|",
      "|java+method:///joptsimple/OptionParser/accepts(java.lang.String,java.lang.String)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/fetchSizeOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/groupIdOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/zkConnectOpt()|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/ofType(java.lang.Class)|",
      "|java+method:///org/apache/kafka/common/utils/Utils/loadProps(java.lang.String)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/newConsumerOpt()|",
      "|java+method:///joptsimple/OptionParser/parse(java.lang.String%5B%5D)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/dateFormatOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/props()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/numThreadsOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/reportingIntervalOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/showDetailedStatsOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/bootstrapServersOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/numMessagesOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/numFetchersOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/resetBeginningOffsetOpt()|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/reportingInterval()|",
      "|java+method:///kafka/utils/CommandLineUtils$/checkRequiredArgs(joptsimple.OptionParser,joptsimple.OptionSet,scala.collection.Seq)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Integer/toString()|",
      "|java+method:///java/util/Random/nextInt(int)|",
      "|java+method:///java/util/Properties/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/consumerConfigOpt()|",
      "|java+constructor:///kafka/tools/PerfConfig/PerfConfig(java.lang.String%5B%5D)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/printMetricsOpt()|",
      "|java+method:///kafka/utils/CommandLineUtils$/printUsageAndDie(joptsimple.OptionParser,java.lang.String)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/options()|",
      "|java+constructor:///java/util/Properties/Properties()|",
      "|java+constructor:///java/util/Random/Random()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/socketBufferSizeOpt()|",
      "|java+method:///joptsimple/OptionSpecBuilder/withRequiredArg()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/hideHeaderOpt()|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/defaultsTo(java.lang.Object,java.lang.Object%5B%5D)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/useOldConsumer()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/parser()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/topicOpt()|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/describedAs(java.lang.String)|",
      "|java+method:///scala/Predef$/int2Integer(int)|",
      "|java+constructor:///java/text/SimpleDateFormat/SimpleDateFormat(java.lang.String)|",
      "|java+method:///joptsimple/OptionParser/accepts(java.lang.String,java.lang.String)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/fetchSizeOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/groupIdOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/zkConnectOpt()|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/ofType(java.lang.Class)|",
      "|java+method:///org/apache/kafka/common/utils/Utils/loadProps(java.lang.String)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/newConsumerOpt()|",
      "|java+method:///joptsimple/OptionParser/parse(java.lang.String%5B%5D)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/dateFormatOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/props()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/numThreadsOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/reportingIntervalOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/showDetailedStatsOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/bootstrapServersOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/numMessagesOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/numFetchersOpt()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/resetBeginningOffsetOpt()|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/reportingInterval()|",
      "|java+method:///scala/Console$/err()|",
      "|java+method:///kafka/utils/CommandLineUtils$/checkRequiredArgs(joptsimple.OptionParser,joptsimple.OptionSet,scala.collection.Seq)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Integer/toString()|",
      "|java+method:///java/util/Random/nextInt(int)|",
      "|java+method:///java/util/Properties/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/consumerConfigOpt()|",
      "|java+constructor:///kafka/tools/PerfConfig/PerfConfig(java.lang.String%5B%5D)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/printMetricsOpt()|",
      "|java+method:///kafka/utils/CommandLineUtils$/printUsageAndDie(joptsimple.OptionParser,java.lang.String)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/options()|",
      "|java+constructor:///java/util/Properties/Properties()|",
      "|java+constructor:///java/util/Random/Random()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/socketBufferSizeOpt()|",
      "|java+method:///joptsimple/OptionSpecBuilder/withRequiredArg()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/hideHeaderOpt()|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/defaultsTo(java.lang.Object,java.lang.Object%5B%5D)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/useOldConsumer()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/utils/KafkaScheduler$$anon$1/newThread(java.lang.Runnable)|",
    "called": "|java+constructor:///org/apache/kafka/common/utils/KafkaThread/KafkaThread(java.lang.String,java.lang.Runnable,boolean)|",
    "v1Body": [
      "|java+method:///kafka/utils/KafkaScheduler/kafka$utils$KafkaScheduler$$schedulerThreadId()|",
      "|java+method:///java/util/concurrent/atomic/AtomicInteger/getAndIncrement()|",
      "|java+method:///org/apache/kafka/common/utils/Utils/newThread(java.lang.String,java.lang.Runnable,boolean)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///kafka/utils/KafkaScheduler/threadNamePrefix()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+method:///kafka/utils/KafkaScheduler/kafka$utils$KafkaScheduler$$schedulerThreadId()|",
      "|java+method:///java/util/concurrent/atomic/AtomicInteger/getAndIncrement()|",
      "|java+constructor:///org/apache/kafka/common/utils/KafkaThread/KafkaThread(java.lang.String,java.lang.Runnable,boolean)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///kafka/utils/KafkaScheduler/threadNamePrefix()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/log/Cleaner/cleanSegments(kafka.log.Log,scala.collection.Seq,kafka.log.OffsetMap,long,kafka.log.CleanerStats)|",
    "called": "|java+method:///org/apache/kafka/common/record/FileRecords/open(java.io.File,boolean,int,boolean)|",
    "v1Body": [
      "|java+method:///kafka/log/Cleaner/info(scala.Function0)|",
      "|java+constructor:///kafka/log/Cleaner$$anonfun$cleanSegments$1/Cleaner$$anonfun$cleanSegments$1(kafka.log.Cleaner,kafka.log.Log,kafka.log.LogSegment,kafka.log.LogSegment,long,boolean)|",
      "|java+method:///scala/Option/isDefined()|",
      "|java+method:///scala/collection/Seq/last()|",
      "|java+method:///kafka/log/LogSegment/baseOffset()|",
      "|java+method:///kafka/log/OffsetIndex/maxIndexSize()|",
      "|java+method:///kafka/log/CleanedTransactionMetadata$/apply(scala.collection.immutable.List,scala.Option)|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|",
      "|java+method:///kafka/log/Log/replaceSegments(kafka.log.LogSegment,scala.collection.Seq,boolean)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///kafka/log/Log/replaceSegments$default$3()|",
      "|java+method:///kafka/log/LogSegment/index()|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToLong(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/record/FileRecords/trim()|",
      "|java+method:///scala/collection/Seq/iterator()|",
      "|java+method:///kafka/log/Cleaner/cleanInto(org.apache.kafka.common.TopicPartition,kafka.log.LogSegment,kafka.log.LogSegment,kafka.log.OffsetMap,boolean,int,kafka.log.CleanedTransactionMetadata,scala.collection.immutable.Map,kafka.log.CleanerStats)|",
      "|java+constructor:///kafka/log/Cleaner$$anonfun$11/Cleaner$$anonfun$11(kafka.log.Cleaner)|",
      "|java+constructor:///kafka/log/Cleaner$$anonfun$cleanSegments$2/Cleaner$$anonfun$cleanSegments$2(kafka.log.Cleaner,kafka.log.Log,scala.collection.Seq,kafka.log.LogSegment)|",
      "|java+method:///scala/collection/Iterator/next()|",
      "|java+method:///kafka/log/Log/initFileSize()|",
      "|java+constructor:///kafka/log/OffsetIndex/OffsetIndex(java.io.File,long,int,boolean)|",
      "|java+method:///kafka/log/LogSegment/lastModified()|",
      "|java+method:///kafka/log/TimeIndex/maxIndexSize()|",
      "|java+constructor:///kafka/log/Cleaner$$anonfun$2/Cleaner$$anonfun$2(kafka.log.Cleaner,kafka.log.OffsetMap)|",
      "|java+method:///kafka/log/Log/collectAbortedTransactions(long,long)|",
      "|java+constructor:///kafka/log/TransactionIndex/TransactionIndex(long,java.io.File)|",
      "|java+method:///scala/Predef$/Boolean2boolean(java.lang.Boolean)|",
      "|java+method:///kafka/log/TimeIndex$/$lessinit$greater$default$4()|",
      "|java+method:///scala/collection/Iterator/hasNext()|",
      "|java+method:///scala/Option/map(scala.Function1)|",
      "|java+method:///kafka/log/LogSegment/txnIndex()|",
      "|java+method:///kafka/log/LogSegment/onBecomeInactiveSegment()|",
      "|java+method:///kafka/log/LogSegment/flush()|",
      "|java+method:///kafka/log/LogSegment/log()|",
      "|java+method:///kafka/log/LogSegment/delete()|",
      "|java+method:///kafka/log/LogSegment/timeIndex()|",
      "|java+method:///kafka/log/OffsetIndex$/$lessinit$greater$default$4()|",
      "|java+method:///kafka/log/Log/topicPartition()|",
      "|java+method:///kafka/log/TimeIndex/file()|",
      "|java+method:///scala/collection/Seq/head()|",
      "|java+method:///kafka/log/Log$/CleanedFileSuffix()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/kafka/common/record/FileRecords/open(java.io.File,boolean,int,boolean)|",
      "|java+method:///kafka/log/OffsetIndex/trimToValidSize()|",
      "|java+method:///kafka/log/Log/activeProducers()|",
      "|java+method:///kafka/log/OffsetIndex/file()|",
      "|java+method:///org/apache/kafka/common/record/FileRecords/file()|",
      "|java+constructor:///kafka/log/TimeIndex/TimeIndex(java.io.File,long,int,boolean)|",
      "|java+method:///kafka/log/LogConfig/randomSegmentJitter()|",
      "|java+method:///kafka/log/Log/config()|",
      "|java+method:///scala/Predef$/Integer2int(java.lang.Integer)|",
      "|java+method:///kafka/log/LogConfig/maxMessageSize()|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+method:///kafka/log/LogSegment/lastModified_$eq(long)|",
      "|java+method:///kafka/log/LogSegment/indexIntervalBytes()|",
      "|java+constructor:///kafka/log/LogSegment/LogSegment(org.apache.kafka.common.record.FileRecords,kafka.log.OffsetIndex,kafka.log.TimeIndex,kafka.log.TransactionIndex,long,int,long,org.apache.kafka.common.utils.Time)|",
      "|java+method:///java/io/File/delete()|",
      "|java+method:///kafka/log/TimeIndex/trimToValidSize()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///java/io/File/getPath()|",
      "|java+method:///scala/Option/get()|",
      "|java+method:///kafka/log/LogConfig/preallocate()|",
      "|java+method:///kafka/log/TransactionIndex/file()|"
    ],
    "v2Body": [
      "|java+method:///kafka/log/Cleaner/info(scala.Function0)|",
      "|java+constructor:///kafka/log/Cleaner$$anonfun$cleanSegments$1/Cleaner$$anonfun$cleanSegments$1(kafka.log.Cleaner,kafka.log.Log,kafka.log.LogSegment,kafka.log.LogSegment,long,boolean)|",
      "|java+method:///scala/Option/isDefined()|",
      "|java+method:///scala/collection/Seq/last()|",
      "|java+method:///kafka/log/LogSegment/baseOffset()|",
      "|java+method:///kafka/log/OffsetIndex/maxIndexSize()|",
      "|java+method:///kafka/log/CleanedTransactionMetadata$/apply(scala.collection.immutable.List,scala.Option)|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|",
      "|java+method:///kafka/log/Log/replaceSegments(kafka.log.LogSegment,scala.collection.Seq,boolean)|",
      "|java+method:///kafka/log/OffsetIndex/trimToValidSize()|",
      "|java+method:///kafka/log/Log/replaceSegments$default$3()|",
      "|java+method:///kafka/log/LogSegment/index()|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToLong(java.lang.Object)|",
      "|java+constructor:///kafka/log/Cleaner$$anonfun$12/Cleaner$$anonfun$12(kafka.log.Cleaner)|",
      "|java+method:///org/apache/kafka/common/record/FileRecords/trim()|",
      "|java+method:///scala/collection/Seq/iterator()|",
      "|java+constructor:///kafka/log/Cleaner$$anonfun$cleanSegments$2/Cleaner$$anonfun$cleanSegments$2(kafka.log.Cleaner,kafka.log.Log,scala.collection.Seq,kafka.log.LogSegment)|",
      "|java+method:///scala/collection/Iterator/next()|",
      "|java+method:///kafka/log/Log/initFileSize()|",
      "|java+constructor:///kafka/log/OffsetIndex/OffsetIndex(java.io.File,long,int,boolean)|",
      "|java+method:///kafka/log/LogSegment/lastModified()|",
      "|java+method:///kafka/log/TimeIndex/maxIndexSize()|",
      "|java+constructor:///kafka/log/Cleaner$$anonfun$2/Cleaner$$anonfun$2(kafka.log.Cleaner,kafka.log.OffsetMap)|",
      "|java+method:///kafka/log/Log/collectAbortedTransactions(long,long)|",
      "|java+constructor:///kafka/log/TransactionIndex/TransactionIndex(long,java.io.File)|",
      "|java+method:///scala/Predef$/Boolean2boolean(java.lang.Boolean)|",
      "|java+method:///kafka/log/TimeIndex$/$lessinit$greater$default$4()|",
      "|java+method:///scala/collection/Iterator/hasNext()|",
      "|java+method:///scala/Option/map(scala.Function1)|",
      "|java+method:///kafka/log/LogSegment/txnIndex()|",
      "|java+method:///kafka/log/LogSegment/onBecomeInactiveSegment()|",
      "|java+method:///kafka/log/LogSegment/flush()|",
      "|java+method:///kafka/log/LogSegment/log()|",
      "|java+method:///kafka/log/LogSegment/delete()|",
      "|java+method:///kafka/log/LogSegment/timeIndex()|",
      "|java+method:///kafka/log/OffsetIndex$/$lessinit$greater$default$4()|",
      "|java+method:///kafka/log/Log/topicPartition()|",
      "|java+method:///kafka/log/TimeIndex/file()|",
      "|java+method:///scala/collection/Seq/head()|",
      "|java+method:///kafka/log/Cleaner/cleanInto(org.apache.kafka.common.TopicPartition,org.apache.kafka.common.record.FileRecords,kafka.log.LogSegment,kafka.log.OffsetMap,boolean,int,kafka.log.CleanedTransactionMetadata,scala.collection.immutable.Map,kafka.log.CleanerStats)|",
      "|java+method:///kafka/log/Log/activeProducersWithLastSequence()|",
      "|java+method:///org/apache/kafka/common/record/FileRecords/open(java.io.File,boolean,int,boolean)|",
      "|java+method:///kafka/log/OffsetIndex/file()|",
      "|java+method:///org/apache/kafka/common/record/FileRecords/file()|",
      "|java+constructor:///kafka/log/TimeIndex/TimeIndex(java.io.File,long,int,boolean)|",
      "|java+method:///kafka/log/LogConfig/randomSegmentJitter()|",
      "|java+method:///kafka/log/Log/config()|",
      "|java+method:///scala/Predef$/Integer2int(java.lang.Integer)|",
      "|java+method:///kafka/log/LogConfig/maxMessageSize()|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+method:///kafka/log/LogSegment/lastModified_$eq(long)|",
      "|java+method:///kafka/log/LogSegment/indexIntervalBytes()|",
      "|java+constructor:///kafka/log/LogSegment/LogSegment(org.apache.kafka.common.record.FileRecords,kafka.log.OffsetIndex,kafka.log.TimeIndex,kafka.log.TransactionIndex,long,int,long,org.apache.kafka.common.utils.Time)|",
      "|java+method:///kafka/log/Cleaner/deleteAndGetCleanedFile$1(java.io.File)|",
      "|java+method:///kafka/log/TimeIndex/trimToValidSize()|",
      "|java+method:///scala/Option/get()|",
      "|java+method:///kafka/log/LogConfig/preallocate()|",
      "|java+method:///kafka/log/TransactionIndex/file()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/KafkaConfig/getInterBrokerListenerNameAndSecurityProtocol()|",
    "called": "|java+constructor:///org/apache/kafka/common/config/ConfigException/ConfigException(java.lang.String)|",
    "v1Body": [
      "|java+method:///kafka/server/KafkaConfig/kafka$server$KafkaConfig$$getSecurityProtocol(java.lang.String,java.lang.String)|",
      "|java+constructor:///kafka/server/KafkaConfig$$anonfun$14/KafkaConfig$$anonfun$14(kafka.server.KafkaConfig,org.apache.kafka.common.network.ListenerName)|",
      "|java+method:///kafka/server/KafkaConfig$/InterBrokerListenerNameProp()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/kafka/common/network/ListenerName/forSecurityProtocol(org.apache.kafka.common.protocol.SecurityProtocol)|",
      "|java+method:///scala/Option$/apply(java.lang.Object)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///org/apache/kafka/common/network/ListenerName/normalised(java.lang.String)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///scala/collection/Map/getOrElse(java.lang.Object,scala.Function0)|",
      "|java+method:///kafka/server/KafkaConfig$/InterBrokerSecurityProtocolProp()|",
      "|java+method:///scala/Some/x()|",
      "|java+method:///kafka/server/KafkaConfig/listenerSecurityProtocolMap()|",
      "|java+method:///kafka/server/KafkaConfig/getString(java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig/originals()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/kafka/common/config/ConfigException/ConfigException(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///kafka/server/KafkaConfig/kafka$server$KafkaConfig$$getSecurityProtocol(java.lang.String,java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig$/InterBrokerListenerNameProp()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/Option$/apply(java.lang.Object)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///org/apache/kafka/common/network/ListenerName/normalised(java.lang.String)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///scala/collection/Map/getOrElse(java.lang.Object,scala.Function0)|",
      "|java+method:///scala/Some/x()|",
      "|java+method:///kafka/server/KafkaConfig/listenerSecurityProtocolMap()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+constructor:///kafka/server/KafkaConfig$$anonfun$13/KafkaConfig$$anonfun$13(kafka.server.KafkaConfig,org.apache.kafka.common.network.ListenerName)|",
      "|java+method:///kafka/server/KafkaConfig/getString(java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig/originals()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/network/ListenerName/forSecurityProtocol(org.apache.kafka.common.security.auth.SecurityProtocol)|",
      "|java+method:///kafka/server/KafkaConfig$/InterBrokerSecurityProtocolProp()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/kafka/common/config/ConfigException/ConfigException(java.lang.String)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/log/ProducerAppendInfo/append(short,int,int,long,long,boolean)|",
    "called": "|java+constructor:///org/apache/kafka/common/errors/InvalidTxnStateException/InvalidTxnStateException(java.lang.String)|",
    "v1Body": [
      "|java+method:///scala/Option/isDefined()|",
      "|java+method:///kafka/log/ProducerAppendInfo/producerEpoch_$eq(short)|",
      "|java+method:///kafka/log/ProducerAppendInfo/producerId()|",
      "|java+method:///kafka/log/ProducerAppendInfo/transactions()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/log/ProducerAppendInfo/validateAppend(short,int,int)|",
      "|java+method:///scala/collection/mutable/ListBuffer/$plus$eq(java.lang.Object)|",
      "|java+method:///kafka/log/ProducerAppendInfo/firstSeq_$eq(int)|",
      "|java+method:///kafka/log/ProducerAppendInfo/lastOffset_$eq(long)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///kafka/log/ProducerAppendInfo/currentTxnFirstOffset_$eq(scala.Option)|",
      "|java+method:///kafka/log/ProducerAppendInfo/lastSeq_$eq(int)|",
      "|java+method:///kafka/log/ProducerAppendInfo/maxTimestamp_$eq(long)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///kafka/log/ProducerAppendInfo/currentTxnFirstOffset()|",
      "|java+constructor:///org/apache/kafka/common/errors/InvalidTxnStateException/InvalidTxnStateException(java.lang.String)|",
      "|java+method:///scala/Option/isEmpty()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+constructor:///kafka/log/TxnMetadata/TxnMetadata(long,long)|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///kafka/log/ProducerIdEntry/currentTxnFirstOffset_$eq(scala.Option)|",
      "|java+method:///scala/Option/isDefined()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///kafka/log/ProducerAppendInfo/transactions()|",
      "|java+method:///kafka/log/ProducerAppendInfo/maybeValidateAppend(short,int,int)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/collection/mutable/ListBuffer/$plus$eq(java.lang.Object)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///kafka/log/ProducerIdEntry/addBatchMetadata(short,int,long,int,long)|",
      "|java+method:///kafka/log/ProducerAppendInfo/producerId()|",
      "|java+constructor:///org/apache/kafka/common/errors/InvalidTxnStateException/InvalidTxnStateException(java.lang.String)|",
      "|java+method:///scala/Option/isEmpty()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///kafka/log/ProducerIdEntry/currentTxnFirstOffset()|",
      "|java+constructor:///kafka/log/TxnMetadata/TxnMetadata(long,long)|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/Kafka$/getPropsFromArgs(java.lang.String%5B%5D)|",
    "called": "|java+method:///org/apache/kafka/common/utils/Utils/loadProps(java.lang.String)|",
    "v1Body": [
      "|java+method:///joptsimple/OptionParser/parse(java.lang.String%5B%5D)|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///java/lang/Class/getSimpleName()|",
      "|java+method:///kafka/utils/CommandLineUtils$/parseKeyValueArgs$default$2()|",
      "|java+method:///joptsimple/OptionSet/nonOptionArguments()|",
      "|java+method:///java/util/List/toArray()|",
      "|java+method:///scala/collection/mutable/ArrayOps/mkString(java.lang.String)|",
      "|java+method:///scala/collection/mutable/ArrayOps/slice(int,int)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///joptsimple/OptionParser/OptionParser(boolean)|",
      "|java+method:///kafka/utils/CommandLineUtils$/printUsageAndDie(joptsimple.OptionParser,java.lang.String)|",
      "|java+method:///scala/collection/JavaConverters$/asScalaBufferConverter(java.util.List)|",
      "|java+method:///joptsimple/OptionSpecBuilder/withRequiredArg()|",
      "|java+method:///kafka/utils/CommandLineUtils$/parseKeyValueArgs(scala.collection.Iterable,boolean)|",
      "|java+method:///joptsimple/OptionSet/valuesOf(joptsimple.OptionSpec)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///org/apache/kafka/common/utils/Utils/loadProps(java.lang.String)|",
      "|java+method:///java/util/Properties/putAll(java.util.Map)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///joptsimple/OptionParser/accepts(java.lang.String,java.lang.String)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/ofType(java.lang.Class)|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/kafka/common/utils/Utils/loadProps(java.lang.String)|",
      "|java+method:///joptsimple/OptionParser/parse(java.lang.String%5B%5D)|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///java/lang/Class/getSimpleName()|",
      "|java+method:///kafka/utils/CommandLineUtils$/parseKeyValueArgs$default$2()|",
      "|java+method:///joptsimple/OptionSet/nonOptionArguments()|",
      "|java+method:///java/util/List/toArray()|",
      "|java+method:///scala/collection/mutable/ArrayOps/mkString(java.lang.String)|",
      "|java+method:///scala/collection/mutable/ArrayOps/slice(int,int)|",
      "|java+method:///kafka/utils/Implicits$PropertiesOps/$plus$plus$eq(java.util.Properties)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///joptsimple/OptionParser/OptionParser(boolean)|",
      "|java+method:///kafka/utils/CommandLineUtils$/printUsageAndDie(joptsimple.OptionParser,java.lang.String)|",
      "|java+method:///scala/collection/JavaConverters$/asScalaBufferConverter(java.util.List)|",
      "|java+method:///joptsimple/OptionSpecBuilder/withRequiredArg()|",
      "|java+method:///kafka/utils/Implicits$/PropertiesOps(java.util.Properties)|",
      "|java+method:///kafka/utils/CommandLineUtils$/parseKeyValueArgs(scala.collection.Iterable,boolean)|",
      "|java+method:///joptsimple/OptionSet/valuesOf(joptsimple.OptionSpec)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///joptsimple/OptionParser/accepts(java.lang.String,java.lang.String)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/ofType(java.lang.Class)|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/log/LogManager/asyncDelete(org.apache.kafka.common.TopicPartition)|",
    "called": "|java+constructor:///org/apache/kafka/common/errors/KafkaStorageException/KafkaStorageException(java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///kafka/log/Log/logSegments()|",
      "|java+constructor:///kafka/common/KafkaStorageException/KafkaStorageException(java.lang.String)|",
      "|java+method:///kafka/log/LogManager/logCreationOrDeletionLock()|",
      "|java+method:///kafka/log/Log/dir()|",
      "|java+method:///kafka/log/LogManager/kafka$log$LogManager$$checkpointLogStartOffsetsInDir(java.io.File)|",
      "|java+method:///kafka/log/LogManager/kafka$log$LogManager$$logsToBeDeleted()|",
      "|java+constructor:///java/io/File/File(java.lang.String,java.lang.String)|",
      "|java+method:///java/io/File/renameTo(java.io.File)|",
      "|java+constructor:///kafka/log/LogManager$$anonfun$asyncDelete$1/LogManager$$anonfun$asyncDelete$1(kafka.log.LogManager,java.io.File)|",
      "|java+method:///kafka/log/Log/removeLogMetrics()|",
      "|java+method:///java/io/File/getParentFile()|",
      "|java+method:///kafka/log/Log/dir_$eq(java.io.File)|",
      "|java+method:///java/io/File/getParent()|",
      "|java+method:///scala/collection/Iterable/foreach(scala.Function1)|",
      "|java+method:///kafka/log/LogManager/kafka$log$LogManager$$logs()|",
      "|java+method:///kafka/log/Log/name()|",
      "|java+method:///java/util/concurrent/LinkedBlockingQueue/add(java.lang.Object)|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///kafka/log/Log/close()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+constructor:///kafka/log/LogManager$$anonfun$asyncDelete$2/LogManager$$anonfun$asyncDelete$2(kafka.log.LogManager,kafka.log.Log)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///kafka/utils/Pool/remove(java.lang.Object)|",
      "|java+method:///kafka/log/LogManager/info(scala.Function0)|",
      "|java+method:///kafka/log/LogCleaner/abortCleaning(org.apache.kafka.common.TopicPartition)|",
      "|java+method:///kafka/log/Log$/logDeleteDirName(java.lang.String)|",
      "|java+method:///kafka/log/LogCleaner/updateCheckpoints(java.io.File)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///kafka/log/LogManager/cleaner()|"
    ],
    "v2Body": [
      "|java+method:///kafka/log/Log/logSegments()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+constructor:///kafka/log/LogManager$$anonfun$asyncDelete$3/LogManager$$anonfun$asyncDelete$3(kafka.log.LogManager,java.lang.String)|",
      "|java+method:///kafka/log/LogManager/logCreationOrDeletionLock()|",
      "|java+method:///kafka/log/Log/dir()|",
      "|java+method:///scala/collection/Iterable/nonEmpty()|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+constructor:///java/io/File/File(java.lang.String,java.lang.String)|",
      "|java+constructor:///kafka/log/LogManager$$anonfun$asyncDelete$1/LogManager$$anonfun$asyncDelete$1(kafka.log.LogManager,java.io.File)|",
      "|java+method:///java/io/File/getParentFile()|",
      "|java+constructor:///org/apache/kafka/common/errors/KafkaStorageException/KafkaStorageException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///org/apache/kafka/common/errors/KafkaStorageException/KafkaStorageException(java.lang.String)|",
      "|java+method:///kafka/log/Log/dir_$eq(java.io.File)|",
      "|java+method:///java/io/File/getParent()|",
      "|java+method:///scala/collection/Iterable/foreach(scala.Function1)|",
      "|java+method:///kafka/log/LogManager/kafka$log$LogManager$$logs()|",
      "|java+method:///kafka/log/Log/name()|",
      "|java+method:///java/util/concurrent/LinkedBlockingQueue/add(java.lang.Object)|",
      "|java+method:///kafka/log/LogManager/kafka$log$LogManager$$checkpointLogStartOffsetsInDir(java.io.File)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///kafka/log/LogManager/logsToBeDeleted()|",
      "|java+method:///java/io/File/renameTo(java.io.File)|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///kafka/log/Log/close()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+constructor:///kafka/log/LogManager$$anonfun$asyncDelete$2/LogManager$$anonfun$asyncDelete$2(kafka.log.LogManager,kafka.log.Log)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///scala/collection/Iterable/mkString(java.lang.String)|",
      "|java+method:///kafka/utils/Pool/remove(java.lang.Object)|",
      "|java+method:///kafka/log/LogManager/info(scala.Function0)|",
      "|java+method:///kafka/log/LogCleaner/abortCleaning(org.apache.kafka.common.TopicPartition)|",
      "|java+method:///kafka/log/Log$/logDeleteDirName(java.lang.String)|",
      "|java+method:///kafka/log/LogCleaner/updateCheckpoints(java.io.File)|",
      "|java+method:///kafka/server/LogDirFailureChannel/maybeAddOfflineLogDir(java.lang.String,scala.Function0,java.io.IOException)|",
      "|java+method:///kafka/log/LogManager/kafka$log$LogManager$$offlineLogDirs()|",
      "|java+method:///kafka/log/Log/removeLogMetrics()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///kafka/log/LogManager/cleaner()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/ReplicaManager$$anonfun$deleteRecordsOnLocalLog$2/apply(scala.Tuple2)|",
    "called": "|java+method:///org/apache/kafka/common/internals/Topic/isInternal(java.lang.String)|",
    "v1Body": [
      "|java+method:///scala/Some/x()|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///java/lang/Runtime/getRuntime()|",
      "|java+method:///kafka/server/LogOffsetMetadata/messageOffset()|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/apache/kafka/common/errors/NotLeaderForPartitionException/NotLeaderForPartitionException(java.lang.String)|",
      "|java+constructor:///kafka/server/ReplicaManager$$anonfun$deleteRecordsOnLocalLog$2$$anonfun$apply$3/ReplicaManager$$anonfun$deleteRecordsOnLocalLog$2$$anonfun$apply$3(kafka.server.ReplicaManager$$anonfun$deleteRecordsOnLocalLog$2,org.apache.kafka.common.TopicPartition)|",
      "|java+method:///java/lang/Runtime/halt(int)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+constructor:///kafka/server/ReplicaManager$$anonfun$deleteRecordsOnLocalLog$2$$anonfun$14/ReplicaManager$$anonfun$deleteRecordsOnLocalLog$2$$anonfun$14(kafka.server.ReplicaManager$$anonfun$deleteRecordsOnLocalLog$2,org.apache.kafka.common.TopicPartition)|",
      "|java+method:///kafka/server/ReplicaManager/kafka$server$ReplicaManager$$localBrokerId()|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///kafka/server/ReplicaManager/getPartition(org.apache.kafka.common.TopicPartition)|",
      "|java+method:///kafka/server/ReplicaManager/error(scala.Function0,scala.Function0)|",
      "|java+method:///kafka/server/ReplicaManager/fatal(scala.Function0,scala.Function0)|",
      "|java+method:///kafka/cluster/Replica/highWatermark()|",
      "|java+constructor:///kafka/server/ReplicaManager$$anonfun$deleteRecordsOnLocalLog$2$$anonfun$apply$2/ReplicaManager$$anonfun$deleteRecordsOnLocalLog$2$$anonfun$apply$2(kafka.server.ReplicaManager$$anonfun$deleteRecordsOnLocalLog$2,kafka.common.KafkaStorageException)|",
      "|java+constructor:///kafka/server/LogDeleteRecordsResult/LogDeleteRecordsResult(long,long,scala.Option)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/server/LogDeleteRecordsResult$/apply$default$3()|",
      "|java+constructor:///org/apache/kafka/common/errors/OffsetOutOfRangeException/OffsetOutOfRangeException(java.lang.String)|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|",
      "|java+constructor:///kafka/server/ReplicaManager$$anonfun$deleteRecordsOnLocalLog$2$$anonfun$apply$1/ReplicaManager$$anonfun$deleteRecordsOnLocalLog$2$$anonfun$apply$1(kafka.server.ReplicaManager$$anonfun$deleteRecordsOnLocalLog$2)|",
      "|java+constructor:///kafka/server/ReplicaManager$$anonfun$deleteRecordsOnLocalLog$2$$anonfun$apply$4/ReplicaManager$$anonfun$deleteRecordsOnLocalLog$2$$anonfun$apply$4(kafka.server.ReplicaManager$$anonfun$deleteRecordsOnLocalLog$2,java.lang.Throwable)|",
      "|java+method:///org/apache/kafka/common/internals/Topic/isInternal(java.lang.String)|",
      "|java+method:///org/apache/kafka/common/TopicPartition/topic()|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///kafka/cluster/Partition/deleteRecordsOnLeader(long)|",
      "|java+method:///kafka/cluster/Partition/leaderReplicaIfLocal()|",
      "|java+method:///scala/Tuple2/_2$mcJ$sp()|",
      "|java+constructor:///org/apache/kafka/common/errors/InvalidTopicException/InvalidTopicException(java.lang.String)|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///scala/Some/x()|",
      "|java+constructor:///org/apache/kafka/common/errors/KafkaStorageException/KafkaStorageException(java.lang.String)|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///kafka/server/ReplicaManager$/OfflinePartition()|",
      "|java+method:///kafka/server/LogOffsetMetadata/messageOffset()|",
      "|java+method:///kafka/cluster/Replica/highWatermark()|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///kafka/server/ReplicaManager$$anonfun$deleteRecordsOnLocalLog$2$$anonfun$apply$3/ReplicaManager$$anonfun$deleteRecordsOnLocalLog$2$$anonfun$apply$3(kafka.server.ReplicaManager$$anonfun$deleteRecordsOnLocalLog$2,org.apache.kafka.common.TopicPartition)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/server/ReplicaManager/kafka$server$ReplicaManager$$localBrokerId()|",
      "|java+constructor:///kafka/server/ReplicaManager$$anonfun$deleteRecordsOnLocalLog$2$$anonfun$apply$4/ReplicaManager$$anonfun$deleteRecordsOnLocalLog$2$$anonfun$apply$4(kafka.server.ReplicaManager$$anonfun$deleteRecordsOnLocalLog$2,java.lang.Throwable)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///kafka/server/ReplicaManager/getPartition(org.apache.kafka.common.TopicPartition)|",
      "|java+method:///kafka/server/ReplicaManager/error(scala.Function0,scala.Function0)|",
      "|java+constructor:///org/apache/kafka/common/errors/NotLeaderForPartitionException/NotLeaderForPartitionException(java.lang.String)|",
      "|java+constructor:///org/apache/kafka/common/errors/UnknownTopicOrPartitionException/UnknownTopicOrPartitionException(java.lang.String)|",
      "|java+constructor:///kafka/server/LogDeleteRecordsResult/LogDeleteRecordsResult(long,long,scala.Option)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/server/LogDeleteRecordsResult$/apply$default$3()|",
      "|java+constructor:///org/apache/kafka/common/errors/OffsetOutOfRangeException/OffsetOutOfRangeException(java.lang.String)|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/internals/Topic/isInternal(java.lang.String)|",
      "|java+method:///org/apache/kafka/common/TopicPartition/topic()|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///kafka/cluster/Partition/deleteRecordsOnLeader(long)|",
      "|java+method:///kafka/cluster/Partition/leaderReplicaIfLocal()|",
      "|java+method:///scala/Tuple2/_2$mcJ$sp()|",
      "|java+constructor:///org/apache/kafka/common/errors/InvalidTopicException/InvalidTopicException(java.lang.String)|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/utils/ZkPath/checkNamespace()|",
    "called": "|java+constructor:///org/apache/kafka/common/config/ConfigException/ConfigException(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/I0Itec/zkclient/ZkClient/exists(java.lang.String)|",
      "|java+method:///kafka/utils/ZkPath/isNamespacePresent_$eq(boolean)|",
      "|java+method:///kafka/utils/ZkPath/isNamespacePresent()|",
      "|java+constructor:///org/apache/kafka/common/config/ConfigException/ConfigException(java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///kafka/utils/ZkPath$$anonfun$checkNamespace$1/ZkPath$$anonfun$checkNamespace$1(kafka.utils.ZkPath)|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToBoolean(java.lang.Object)|",
      "|java+method:///kafka/utils/ZkPath/isNamespacePresent_$eq(boolean)|",
      "|java+method:///kafka/utils/ZkPath/isNamespacePresent()|",
      "|java+method:///kafka/utils/ZooKeeperClientWrapper/apply(scala.Function1)|",
      "|java+constructor:///org/apache/kafka/common/config/ConfigException/ConfigException(java.lang.String)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/admin/AdminClient$/create(kafka.admin.AdminClient$AdminConfig)|",
    "called": "|java+constructor:///org/apache/kafka/clients/NetworkClient/NetworkClient(org.apache.kafka.common.network.Selectable,org.apache.kafka.clients.Metadata,java.lang.String,int,long,long,int,int,int,org.apache.kafka.common.utils.Time,boolean,org.apache.kafka.clients.ApiVersions,org.apache.kafka.common.utils.LogContext)|",
    "v1Body": [
      "|java+method:///org/apache/kafka/clients/Metadata/update(org.apache.kafka.common.Cluster,java.util.Set,long)|",
      "|java+method:///kafka/admin/AdminClient$/DefaultReceiveBufferBytes()|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///java/util/Collections/emptySet()|",
      "|java+method:///kafka/admin/AdminClient$/DefaultReconnectBackoffMax()|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+constructor:///kafka/admin/AdminClient/AdminClient(org.apache.kafka.common.utils.Time,int,long,org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient,scala.collection.immutable.List)|",
      "|java+method:///kafka/admin/AdminClient$/AdminClientIdSequence()|",
      "|java+method:///kafka/admin/AdminClient$/DefaultConnectionMaxIdleMs()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///scala/Predef$/Integer2int(java.lang.Integer)|",
      "|java+method:///org/apache/kafka/clients/ClientUtils/createChannelBuilder(org.apache.kafka.common.config.AbstractConfig)|",
      "|java+method:///kafka/admin/AdminClient$/DefaultMaxInFlightRequestsPerConnection()|",
      "|java+method:///java/util/concurrent/atomic/AtomicInteger/getAndIncrement()|",
      "|java+constructor:///org/apache/kafka/clients/Metadata/Metadata(long,long,boolean)|",
      "|java+method:///org/apache/kafka/common/Cluster/bootstrap(java.util.List)|",
      "|java+method:///scala/collection/JavaConverters$/asScalaBufferConverter(java.util.List)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///org/apache/kafka/common/Cluster/nodes()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/kafka/clients/ClientUtils/parseAndValidateAddresses(java.util.List)|",
      "|java+constructor:///org/apache/kafka/clients/NetworkClient/NetworkClient(org.apache.kafka.common.network.Selectable,org.apache.kafka.clients.Metadata,java.lang.String,int,long,long,int,int,int,org.apache.kafka.common.utils.Time,boolean,org.apache.kafka.clients.ApiVersions)|",
      "|java+constructor:///org/apache/kafka/clients/ApiVersions/ApiVersions()|",
      "|java+method:///kafka/admin/AdminClient$/DefaultReconnectBackoffMs()|",
      "|java+constructor:///org/apache/kafka/common/network/Selector/Selector(long,org.apache.kafka.common.metrics.Metrics,org.apache.kafka.common.utils.Time,java.lang.String,org.apache.kafka.common.network.ChannelBuilder)|",
      "|java+method:///kafka/admin/AdminClient$AdminConfig/getLong(java.lang.String)|",
      "|java+method:///kafka/admin/AdminClient$AdminConfig/getList(java.lang.String)|",
      "|java+constructor:///org/apache/kafka/common/metrics/Metrics/Metrics(org.apache.kafka.common.utils.Time)|",
      "|java+method:///kafka/admin/AdminClient$/DefaultSendBufferBytes()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///scala/collection/TraversableOnce/toList()|",
      "|java+constructor:///org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient/ConsumerNetworkClient(org.apache.kafka.clients.KafkaClient,org.apache.kafka.clients.Metadata,org.apache.kafka.common.utils.Time,long,long)|",
      "|java+method:///kafka/admin/AdminClient$AdminConfig/getInt(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/kafka/clients/Metadata/update(org.apache.kafka.common.Cluster,java.util.Set,long)|",
      "|java+constructor:///org/apache/kafka/common/network/Selector/Selector(long,org.apache.kafka.common.metrics.Metrics,org.apache.kafka.common.utils.Time,java.lang.String,org.apache.kafka.common.network.ChannelBuilder,org.apache.kafka.common.utils.LogContext)|",
      "|java+method:///kafka/admin/AdminClient$/DefaultReceiveBufferBytes()|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///java/util/Collections/emptySet()|",
      "|java+method:///kafka/admin/AdminClient$/DefaultReconnectBackoffMax()|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+constructor:///kafka/admin/AdminClient/AdminClient(org.apache.kafka.common.utils.Time,int,long,org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient,scala.collection.immutable.List)|",
      "|java+constructor:///org/apache/kafka/common/utils/LogContext/LogContext()|",
      "|java+method:///kafka/admin/AdminClient$/AdminClientIdSequence()|",
      "|java+method:///kafka/admin/AdminClient$/DefaultConnectionMaxIdleMs()|",
      "|java+method:///kafka/admin/AdminClient$AdminConfig/getLong(java.lang.String)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///scala/Predef$/Integer2int(java.lang.Integer)|",
      "|java+method:///org/apache/kafka/clients/ClientUtils/createChannelBuilder(org.apache.kafka.common.config.AbstractConfig)|",
      "|java+method:///kafka/admin/AdminClient$/DefaultMaxInFlightRequestsPerConnection()|",
      "|java+method:///kafka/admin/AdminClient$AdminConfig/getInt(java.lang.String)|",
      "|java+method:///java/util/concurrent/atomic/AtomicInteger/getAndIncrement()|",
      "|java+constructor:///org/apache/kafka/clients/Metadata/Metadata(long,long,boolean)|",
      "|java+constructor:///org/apache/kafka/clients/NetworkClient/NetworkClient(org.apache.kafka.common.network.Selectable,org.apache.kafka.clients.Metadata,java.lang.String,int,long,long,int,int,int,org.apache.kafka.common.utils.Time,boolean,org.apache.kafka.clients.ApiVersions,org.apache.kafka.common.utils.LogContext)|",
      "|java+constructor:///org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient/ConsumerNetworkClient(org.apache.kafka.common.utils.LogContext,org.apache.kafka.clients.KafkaClient,org.apache.kafka.clients.Metadata,org.apache.kafka.common.utils.Time,long,long)|",
      "|java+method:///org/apache/kafka/common/Cluster/bootstrap(java.util.List)|",
      "|java+method:///scala/collection/JavaConverters$/asScalaBufferConverter(java.util.List)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///org/apache/kafka/common/Cluster/nodes()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/kafka/clients/ClientUtils/parseAndValidateAddresses(java.util.List)|",
      "|java+constructor:///org/apache/kafka/clients/ApiVersions/ApiVersions()|",
      "|java+method:///kafka/admin/AdminClient$/DefaultReconnectBackoffMs()|",
      "|java+method:///kafka/admin/AdminClient$AdminConfig/getList(java.lang.String)|",
      "|java+constructor:///org/apache/kafka/common/metrics/Metrics/Metrics(org.apache.kafka.common.utils.Time)|",
      "|java+method:///kafka/admin/AdminClient$/DefaultSendBufferBytes()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///scala/collection/TraversableOnce/toList()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/log/LogSegment/delete()|",
    "called": "|java+method:///org/apache/kafka/common/record/FileRecords/delete()|",
    "v1Body": [
      "|java+method:///kafka/log/LogSegment/index()|",
      "|java+method:///kafka/log/TimeIndex/delete()|",
      "|java+method:///java/io/File/getName()|",
      "|java+constructor:///kafka/common/KafkaStorageException/KafkaStorageException(java.lang.String)|",
      "|java+method:///kafka/log/TransactionIndex/delete()|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///kafka/log/LogSegment/txnIndex()|",
      "|java+method:///kafka/log/LogSegment/log()|",
      "|java+method:///kafka/log/LogSegment/timeIndex()|",
      "|java+method:///kafka/log/TimeIndex/file()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///kafka/log/TransactionIndex/file()|",
      "|java+method:///kafka/log/OffsetIndex/delete()|",
      "|java+method:///org/apache/kafka/common/record/FileRecords/delete()|",
      "|java+method:///kafka/log/OffsetIndex/file()|",
      "|java+method:///org/apache/kafka/common/record/FileRecords/file()|"
    ],
    "v2Body": [
      "|java+method:///kafka/log/LogSegment/index()|",
      "|java+method:///kafka/log/TimeIndex/delete()|",
      "|java+method:///java/io/File/getName()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///kafka/log/TransactionIndex/delete()|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///kafka/log/LogSegment/txnIndex()|",
      "|java+method:///kafka/log/LogSegment/log()|",
      "|java+method:///kafka/log/LogSegment/timeIndex()|",
      "|java+method:///kafka/log/TimeIndex/file()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///kafka/log/TransactionIndex/file()|",
      "|java+method:///kafka/log/OffsetIndex/delete()|",
      "|java+method:///org/apache/kafka/common/record/FileRecords/delete()|",
      "|java+method:///kafka/log/OffsetIndex/file()|",
      "|java+method:///org/apache/kafka/common/record/FileRecords/file()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/KafkaApis/kafka$server$KafkaApis$$maybeSendResponseCallback$1(long,org.apache.kafka.common.requests.TransactionResult,scala.collection.Map,kafka.network.RequestChannel$Request,java.util.concurrent.ConcurrentHashMap,java.util.concurrent.atomic.AtomicInteger)|",
    "called": "|java+constructor:///org/apache/kafka/common/requests/WriteTxnMarkersResponse/WriteTxnMarkersResponse(java.util.Map)|",
    "v1Body": [
      "|java+method:///kafka/server/KafkaApis/groupCoordinator()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$kafka$server$KafkaApis$$maybeSendResponseCallback$1$3/KafkaApis$$anonfun$kafka$server$KafkaApis$$maybeSendResponseCallback$1$3(kafka.server.KafkaApis,java.lang.Exception)|",
      "|java+method:///scala/collection/Iterable/foreach(scala.Function1)|",
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap()|",
      "|java+method:///kafka/server/KafkaApis/trace(scala.Function0)|",
      "|java+constructor:///org/apache/kafka/common/requests/WriteTxnMarkersResponse/WriteTxnMarkersResponse(java.util.Map)|",
      "|java+method:///scala/collection/Iterable/nonEmpty()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$kafka$server$KafkaApis$$maybeSendResponseCallback$1$2/KafkaApis$$anonfun$kafka$server$KafkaApis$$maybeSendResponseCallback$1$2(kafka.server.KafkaApis)|",
      "|java+method:///scala/collection/JavaConverters$/mapAsJavaMapConverter(scala.collection.Map)|",
      "|java+method:///scala/collection/MapLike/keys()|",
      "|java+method:///scala/collection/Map/mapValues(scala.Function1)|",
      "|java+method:///kafka/server/KafkaApis/sendResponseExemptThrottle(kafka.network.RequestChannel$Response)|",
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///kafka/server/KafkaApis/error(scala.Function0,scala.Function0)|",
      "|java+method:///scala/collection/Map/filter(scala.Function1)|",
      "|java+method:///java/util/concurrent/atomic/AtomicInteger/decrementAndGet()|",
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap(java.util.Map)|",
      "|java+method:///kafka/server/KafkaApis/kafka$server$KafkaApis$$updateErrors$1(long,java.util.concurrent.ConcurrentHashMap,java.util.concurrent.ConcurrentHashMap)|",
      "|java+method:///kafka/network/RequestChannel$Response$/apply(kafka.network.RequestChannel$Request,org.apache.kafka.common.requests.AbstractResponse)|",
      "|java+method:///kafka/coordinator/group/GroupCoordinator/scheduleHandleTxnCompletion(long,scala.collection.Iterable,org.apache.kafka.common.requests.TransactionResult)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$kafka$server$KafkaApis$$maybeSendResponseCallback$1$4/KafkaApis$$anonfun$kafka$server$KafkaApis$$maybeSendResponseCallback$1$4(kafka.server.KafkaApis,java.util.concurrent.ConcurrentHashMap)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$68/KafkaApis$$anonfun$68(kafka.server.KafkaApis)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$69/KafkaApis$$anonfun$69(kafka.server.KafkaApis)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$kafka$server$KafkaApis$$maybeSendResponseCallback$1$1/KafkaApis$$anonfun$kafka$server$KafkaApis$$maybeSendResponseCallback$1$1(kafka.server.KafkaApis,long,scala.collection.Map)|"
    ],
    "v2Body": [
      "|java+method:///kafka/server/KafkaApis/groupCoordinator()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$kafka$server$KafkaApis$$maybeSendResponseCallback$1$3/KafkaApis$$anonfun$kafka$server$KafkaApis$$maybeSendResponseCallback$1$3(kafka.server.KafkaApis,java.lang.Exception)|",
      "|java+method:///scala/collection/Iterable/foreach(scala.Function1)|",
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap()|",
      "|java+method:///kafka/server/KafkaApis/trace(scala.Function0)|",
      "|java+constructor:///org/apache/kafka/common/requests/WriteTxnMarkersResponse/WriteTxnMarkersResponse(java.util.Map)|",
      "|java+method:///scala/collection/Iterable/nonEmpty()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$kafka$server$KafkaApis$$maybeSendResponseCallback$1$2/KafkaApis$$anonfun$kafka$server$KafkaApis$$maybeSendResponseCallback$1$2(kafka.server.KafkaApis)|",
      "|java+method:///scala/collection/JavaConverters$/mapAsJavaMapConverter(scala.collection.Map)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$55/KafkaApis$$anonfun$55(kafka.server.KafkaApis)|",
      "|java+method:///scala/collection/MapLike/keys()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$56/KafkaApis$$anonfun$56(kafka.server.KafkaApis)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$kafka$server$KafkaApis$$maybeSendResponseCallback$1$4/KafkaApis$$anonfun$kafka$server$KafkaApis$$maybeSendResponseCallback$1$4(kafka.server.KafkaApis,java.util.concurrent.ConcurrentHashMap)|",
      "|java+method:///scala/collection/Map/mapValues(scala.Function1)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$kafka$server$KafkaApis$$maybeSendResponseCallback$1$1/KafkaApis$$anonfun$kafka$server$KafkaApis$$maybeSendResponseCallback$1$1(kafka.server.KafkaApis,long,scala.collection.Map)|",
      "|java+method:///kafka/coordinator/group/GroupCoordinator/handleTxnCompletion(long,scala.collection.Iterable,org.apache.kafka.common.requests.TransactionResult)|",
      "|java+method:///kafka/server/KafkaApis/sendResponseExemptThrottle(kafka.network.RequestChannel$Request,org.apache.kafka.common.requests.AbstractResponse)|",
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///kafka/server/KafkaApis/error(scala.Function0,scala.Function0)|",
      "|java+method:///scala/collection/Map/filter(scala.Function1)|",
      "|java+method:///java/util/concurrent/atomic/AtomicInteger/decrementAndGet()|",
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap(java.util.Map)|",
      "|java+method:///kafka/server/KafkaApis/kafka$server$KafkaApis$$updateErrors$1(long,java.util.concurrent.ConcurrentHashMap,java.util.concurrent.ConcurrentHashMap)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/controller/ControllerBrokerRequestBatch/sendRequestsToBrokers(int)|",
    "called": "|java+constructor:///org/apache/kafka/common/requests/UpdateMetadataRequest$Builder/UpdateMetadataRequest$Builder(short,int,int,java.util.Map,java.util.Set)|",
    "v1Body": [
      "|java+method:///scala/collection/Set$/canBuildFrom()|",
      "|java+method:///scala/collection/mutable/Map/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/collection/mutable/Set/clear()|",
      "|java+method:///kafka/controller/ControllerBrokerRequestBatch/controllerContext()|",
      "|java+method:///scala/collection/JavaConverters$/setAsJavaSetConverter(scala.collection.Set)|",
      "|java+method:///kafka/api/ApiVersion/$greater$eq(java.lang.Object)|",
      "|java+method:///scala/collection/mutable/Set/foreach(scala.Function1)|",
      "|java+method:///kafka/controller/ControllerBrokerRequestBatch/controllerId()|",
      "|java+method:///kafka/controller/ControllerBrokerRequestBatch/error(scala.Function0)|",
      "|java+method:///scala/collection/Set/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$5/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$5(kafka.controller.ControllerBrokerRequestBatch,java.lang.Throwable)|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$3/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$3(kafka.controller.ControllerBrokerRequestBatch,int)|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$2/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$2(kafka.controller.ControllerBrokerRequestBatch,int)|",
      "|java+method:///scala/collection/mutable/Map/nonEmpty()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///scala/collection/mutable/Map/clear()|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$12/ControllerBrokerRequestBatch$$anonfun$12(kafka.controller.ControllerBrokerRequestBatch)|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$13/ControllerBrokerRequestBatch$$anonfun$13(kafka.controller.ControllerBrokerRequestBatch)|",
      "|java+constructor:///org/apache/kafka/common/requests/UpdateMetadataRequest$Builder/UpdateMetadataRequest$Builder(short,int,int,java.util.Map,java.util.Set)|",
      "|java+method:///scala/collection/JavaConverters$/mutableMapAsJavaMapConverter(scala.collection.mutable.Map)|",
      "|java+method:///kafka/controller/ControllerBrokerRequestBatch/leaderAndIsrRequestMap()|",
      "|java+method:///kafka/controller/ControllerBrokerRequestBatch/updateMetadataRequestBrokerSet()|",
      "|java+method:///kafka/server/KafkaConfig/interBrokerProtocolVersion()|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$9/ControllerBrokerRequestBatch$$anonfun$9(kafka.controller.ControllerBrokerRequestBatch)|",
      "|java+method:///kafka/controller/ControllerBrokerRequestBatch/updateMetadataRequestPartitionInfoMap()|",
      "|java+method:///kafka/controller/KafkaController/config()|",
      "|java+method:///scala/collection/mutable/Map/foreach(scala.Function1)|",
      "|java+method:///scala/collection/mutable/Map$/canBuildFrom()|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$7/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$7(kafka.controller.ControllerBrokerRequestBatch,java.lang.Throwable)|",
      "|java+method:///scala/collection/mutable/Set/nonEmpty()|",
      "|java+method:///kafka/controller/ControllerBrokerRequestBatch/stopReplicaRequestMap()|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$6/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$6(kafka.controller.ControllerBrokerRequestBatch,java.lang.Throwable)|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4(kafka.controller.ControllerBrokerRequestBatch,int)|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$1/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$1(kafka.controller.ControllerBrokerRequestBatch,org.apache.kafka.common.requests.UpdateMetadataRequest$Builder)|",
      "|java+method:///kafka/controller/ControllerContext/liveOrShuttingDownBrokers()|"
    ],
    "v2Body": [
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$3/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$3(kafka.controller.ControllerBrokerRequestBatch,kafka.controller.StateChangeLogger)|",
      "|java+method:///scala/Predef$/Map()|",
      "|java+method:///kafka/controller/ControllerBrokerRequestBatch/leaderAndIsrRequestMap()|",
      "|java+method:///scala/collection/Set$/canBuildFrom()|",
      "|java+method:///scala/collection/mutable/Set/clear()|",
      "|java+method:///kafka/controller/ControllerBrokerRequestBatch/controllerContext()|",
      "|java+method:///scala/collection/JavaConverters$/setAsJavaSetConverter(scala.collection.Set)|",
      "|java+method:///kafka/api/ApiVersion/$greater$eq(java.lang.Object)|",
      "|java+method:///scala/collection/mutable/Set/foreach(scala.Function1)|",
      "|java+method:///kafka/controller/ControllerBrokerRequestBatch/controllerId()|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$7/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$7(kafka.controller.ControllerBrokerRequestBatch,java.lang.Throwable)|",
      "|java+method:///scala/collection/Set/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///kafka/controller/StateChangeLogger/withControllerEpoch(int)|",
      "|java+method:///scala/collection/mutable/Map/nonEmpty()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///scala/collection/mutable/Map/clear()|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$11/ControllerBrokerRequestBatch$$anonfun$11(kafka.controller.ControllerBrokerRequestBatch)|",
      "|java+constructor:///org/apache/kafka/common/requests/UpdateMetadataRequest$Builder/UpdateMetadataRequest$Builder(short,int,int,java.util.Map,java.util.Set)|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$12/ControllerBrokerRequestBatch$$anonfun$12(kafka.controller.ControllerBrokerRequestBatch)|",
      "|java+method:///kafka/controller/ControllerBrokerRequestBatch/updateMetadataRequestBrokerSet()|",
      "|java+method:///kafka/server/KafkaConfig/interBrokerProtocolVersion()|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$2/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$2(kafka.controller.ControllerBrokerRequestBatch,int,kafka.controller.StateChangeLogger,short)|",
      "|java+method:///kafka/controller/ControllerBrokerRequestBatch/updateMetadataRequestPartitionInfoMap()|",
      "|java+method:///scala/collection/JavaConverters$/mapAsJavaMapConverter(scala.collection.Map)|",
      "|java+method:///kafka/controller/KafkaController/config()|",
      "|java+method:///scala/collection/mutable/Map/foreach(scala.Function1)|",
      "|java+method:///kafka/controller/ControllerBrokerRequestBatch/error(scala.Function0)|",
      "|java+method:///scala/collection/immutable/Map$/empty()|",
      "|java+method:///scala/collection/mutable/Set/nonEmpty()|",
      "|java+method:///kafka/controller/ControllerBrokerRequestBatch/stopReplicaRequestMap()|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$6/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$6(kafka.controller.ControllerBrokerRequestBatch,java.lang.Throwable)|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4(kafka.controller.ControllerBrokerRequestBatch,int)|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$1/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$1(kafka.controller.ControllerBrokerRequestBatch,org.apache.kafka.common.requests.UpdateMetadataRequest$Builder)|",
      "|java+method:///kafka/controller/ControllerContext/liveOrShuttingDownBrokers()|",
      "|java+method:///scala/collection/immutable/Map/$plus$plus(scala.collection.GenTraversableOnce)|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$5/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$5(kafka.controller.ControllerBrokerRequestBatch,java.lang.Throwable)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/log/LogSegment/changeFileSuffixes(java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/apache/kafka/common/record/FileRecords/renameTo(java.io.File)|",
    "v1Body": [
      "|java+method:///kafka/log/LogSegment/index()|",
      "|java+method:///kafka/log/LogSegment/kafkaStorageException$1(java.lang.String,java.io.IOException,java.lang.String,java.lang.String)|",
      "|java+method:///kafka/log/LogSegment/txnIndex()|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///kafka/log/LogSegment/log()|",
      "|java+method:///kafka/log/LogSegment/timeIndex()|",
      "|java+method:///kafka/log/TimeIndex/file()|",
      "|java+method:///kafka/log/TimeIndex/renameTo(java.io.File)|",
      "|java+method:///java/io/File/getPath()|",
      "|java+method:///kafka/utils/CoreUtils$/replaceSuffix(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///kafka/log/TransactionIndex/renameTo(java.io.File)|",
      "|java+method:///kafka/log/OffsetIndex/file()|",
      "|java+method:///org/apache/kafka/common/record/FileRecords/file()|",
      "|java+method:///kafka/log/OffsetIndex/renameTo(java.io.File)|",
      "|java+method:///org/apache/kafka/common/record/FileRecords/renameTo(java.io.File)|",
      "|java+method:///kafka/log/TransactionIndex/file()|"
    ],
    "v2Body": [
      "|java+method:///kafka/log/LogSegment/index()|",
      "|java+method:///kafka/log/LogSegment/txnIndex()|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///kafka/log/LogSegment/log()|",
      "|java+method:///kafka/log/LogSegment/timeIndex()|",
      "|java+method:///kafka/log/TimeIndex/file()|",
      "|java+method:///kafka/log/TimeIndex/renameTo(java.io.File)|",
      "|java+method:///java/io/File/getPath()|",
      "|java+method:///kafka/utils/CoreUtils$/replaceSuffix(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///kafka/log/TransactionIndex/renameTo(java.io.File)|",
      "|java+method:///kafka/log/OffsetIndex/file()|",
      "|java+method:///org/apache/kafka/common/record/FileRecords/file()|",
      "|java+method:///kafka/log/OffsetIndex/renameTo(java.io.File)|",
      "|java+method:///org/apache/kafka/common/record/FileRecords/renameTo(java.io.File)|",
      "|java+method:///kafka/log/TransactionIndex/file()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/KafkaApis$$anonfun$handleDeleteAcls$8/apply(scala.Tuple2)|",
    "called": "|java+constructor:///org/apache/kafka/common/requests/DeleteAclsResponse$AclFilterResponse/DeleteAclsResponse$AclFilterResponse(java.util.Collection)|",
    "v1Body": [
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///scala/collection/mutable/ArrayBuffer/flatMap(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+constructor:///org/apache/kafka/common/requests/DeleteAclsResponse$AclFilterResponse/DeleteAclsResponse$AclFilterResponse(java.util.Collection)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$handleDeleteAcls$8$$anonfun$85/KafkaApis$$anonfun$handleDeleteAcls$8$$anonfun$85(kafka.server.KafkaApis$$anonfun$handleDeleteAcls$8)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///scala/Tuple2/_1$mcI$sp()|",
      "|java+method:///scala/collection/mutable/ArrayBuffer$/canBuildFrom()|",
      "|java+method:///scala/collection/mutable/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///scala/collection/JavaConverters$/bufferAsJavaListConverter(scala.collection.mutable.Buffer)|"
    ],
    "v2Body": [
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///scala/collection/mutable/ArrayBuffer/flatMap(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///scala/Tuple2/_1$mcI$sp()|",
      "|java+constructor:///org/apache/kafka/common/requests/DeleteAclsResponse$AclFilterResponse/DeleteAclsResponse$AclFilterResponse(java.util.Collection)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$handleDeleteAcls$8$$anonfun$62/KafkaApis$$anonfun$handleDeleteAcls$8$$anonfun$62(kafka.server.KafkaApis$$anonfun$handleDeleteAcls$8)|",
      "|java+method:///scala/collection/mutable/ArrayBuffer$/canBuildFrom()|",
      "|java+method:///scala/collection/mutable/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///scala/collection/JavaConverters$/bufferAsJavaListConverter(scala.collection.mutable.Buffer)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/KafkaApis/handleWriteTxnMarkersRequest(kafka.network.RequestChannel$Request)|",
    "called": "|java+constructor:///org/apache/kafka/common/requests/WriteTxnMarkersResponse/WriteTxnMarkersResponse(java.util.Map)|",
    "v1Body": [
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$handleWriteTxnMarkersRequest$1/KafkaApis$$anonfun$handleWriteTxnMarkersRequest$1(kafka.server.KafkaApis,kafka.network.RequestChannel$Request,java.util.concurrent.ConcurrentHashMap)|",
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap()|",
      "|java+method:///java/util/concurrent/atomic/AtomicInteger/get()|",
      "|java+method:///kafka/server/KafkaApis/authorizeClusterAction(kafka.network.RequestChannel$Request)|",
      "|java+method:///kafka/utils/NotNothing$/notNothingEvidence(scala.Predef$$eq$colon$eq)|",
      "|java+method:///kafka/network/RequestChannel$Response$/apply(kafka.network.RequestChannel$Request,org.apache.kafka.common.requests.AbstractResponse)|",
      "|java+method:///scala/runtime/IntRef/create(int)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicInteger/AtomicInteger(int)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$handleWriteTxnMarkersRequest$2/KafkaApis$$anonfun$handleWriteTxnMarkersRequest$2(kafka.server.KafkaApis,kafka.network.RequestChannel$Request,java.util.concurrent.ConcurrentHashMap,java.util.concurrent.atomic.AtomicInteger,scala.runtime.IntRef)|",
      "|java+method:///kafka/server/KafkaApis/sendResponseExemptThrottle(kafka.network.RequestChannel$Response)|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///scala/Predef$$eq$colon$eq$/tpEquals()|",
      "|java+method:///org/apache/kafka/common/requests/WriteTxnMarkersRequest/markers()|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///scala/collection/IterableLike/foreach(scala.Function1)|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///org/apache/kafka/common/requests/WriteTxnMarkersResponse/WriteTxnMarkersResponse(java.util.Map)|",
      "|java+method:///scala/collection/JavaConverters$/asScalaBufferConverter(java.util.List)|",
      "|java+method:///kafka/network/RequestChannel$Request/body(scala.reflect.ClassTag,kafka.utils.NotNothing)|",
      "|java+method:///kafka/server/KafkaApis/sendResponseExemptThrottle(kafka.network.RequestChannel$Request,scala.Function0)|",
      "|java+method:///kafka/server/KafkaApis/ensureInterBrokerVersion(kafka.api.ApiVersion)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap()|",
      "|java+method:///java/util/concurrent/atomic/AtomicInteger/get()|",
      "|java+method:///kafka/server/KafkaApis/authorizeClusterAction(kafka.network.RequestChannel$Request)|",
      "|java+method:///kafka/utils/NotNothing$/notNothingEvidence(scala.Predef$$eq$colon$eq)|",
      "|java+method:///scala/runtime/IntRef/create(int)|",
      "|java+method:///kafka/server/KafkaApis/ensureInterBrokerVersion(kafka.api.ApiVersion)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicInteger/AtomicInteger(int)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$handleWriteTxnMarkersRequest$1/KafkaApis$$anonfun$handleWriteTxnMarkersRequest$1(kafka.server.KafkaApis,kafka.network.RequestChannel$Request,java.util.concurrent.ConcurrentHashMap,java.util.concurrent.atomic.AtomicInteger,scala.runtime.IntRef)|",
      "|java+method:///kafka/server/KafkaApis/sendResponseExemptThrottle(kafka.network.RequestChannel$Request,org.apache.kafka.common.requests.AbstractResponse)|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///scala/Predef$$eq$colon$eq$/tpEquals()|",
      "|java+method:///org/apache/kafka/common/requests/WriteTxnMarkersRequest/markers()|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///scala/collection/IterableLike/foreach(scala.Function1)|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///org/apache/kafka/common/requests/WriteTxnMarkersResponse/WriteTxnMarkersResponse(java.util.Map)|",
      "|java+method:///scala/collection/JavaConverters$/asScalaBufferConverter(java.util.List)|",
      "|java+method:///kafka/network/RequestChannel$Request/body(scala.reflect.ClassTag,kafka.utils.NotNothing)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/utils/timer/SystemTimer$$anon$1/newThread(java.lang.Runnable)|",
    "called": "|java+method:///org/apache/kafka/common/utils/KafkaThread/nonDaemon(java.lang.String,java.lang.Runnable)|",
    "v1Body": [
      "|java+method:///org/apache/kafka/common/utils/Utils/newThread(java.lang.String,java.lang.Runnable,boolean)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/kafka/common/utils/KafkaThread/nonDaemon(java.lang.String,java.lang.Runnable)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/ClientQuotaManager$$anonfun$updateQuota$2/apply(scala.Tuple2)|",
    "called": "|java+method:///org/apache/kafka/common/utils/Sanitizer/sanitize(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/metrics/Quota/bound()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/server/QuotaEntity/quota()|",
      "|java+method:///kafka/server/ClientQuotaManager/kafka$server$ClientQuotaManager$$quotaEntity(java.lang.String,java.lang.String)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///org/apache/kafka/common/metrics/KafkaMetric/config(org.apache.kafka.common.metrics.MetricConfig)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/MetricName/tags()|",
      "|java+method:///kafka/server/ClientQuotaManager/getQuotaMetricConfig(org.apache.kafka.common.metrics.Quota)|",
      "|java+method:///org/apache/kafka/common/metrics/KafkaMetric/config()|",
      "|java+method:///org/apache/kafka/common/metrics/MetricConfig/quota()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToDouble(double)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/server/ClientQuotaManager/logger()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///kafka/server/QuotaEntity/quotaId()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/kafka/common/utils/Sanitizer/sanitize(java.lang.String)|",
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/metrics/Quota/bound()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/server/ClientQuotaManager/kafka$server$ClientQuotaManager$$quotaEntity(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///kafka/server/QuotaEntity/quota()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///org/apache/kafka/common/metrics/KafkaMetric/config(org.apache.kafka.common.metrics.MetricConfig)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/MetricName/tags()|",
      "|java+method:///kafka/server/ClientQuotaManager/getQuotaMetricConfig(org.apache.kafka.common.metrics.Quota)|",
      "|java+method:///org/apache/kafka/common/metrics/KafkaMetric/config()|",
      "|java+method:///org/apache/kafka/common/metrics/MetricConfig/quota()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToDouble(double)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/server/ClientQuotaManager/logger()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///kafka/server/QuotaEntity/quotaId()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/AdminManager$$anonfun$2/apply(scala.Tuple2)|",
    "called": "|java+method:///org/apache/kafka/common/requests/ApiError/fromThrowable(java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///scala/Some/x()|",
      "|java+constructor:///org/apache/kafka/server/policy/CreateTopicPolicy$RequestMetadata/CreateTopicPolicy$RequestMetadata(java.lang.String,java.lang.Integer,java.lang.Short,java.util.Map,java.util.Map)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///kafka/admin/AdminUtils$/validateCreateOrUpdateTopic(kafka.utils.ZkUtils,java.lang.String,scala.collection.Map,java.util.Properties,boolean)|",
      "|java+method:///kafka/admin/AdminUtils$/assignReplicasToBrokers$default$5()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///kafka/server/AdminManager/zkUtils()|",
      "|java+constructor:///java/util/Properties/Properties()|",
      "|java+method:///scala/collection/Map$/apply(scala.collection.Seq)|",
      "|java+method:///scala/collection/TraversableLike/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+constructor:///kafka/server/CreateTopicMetadata/CreateTopicMetadata(java.lang.String,scala.collection.Map,org.apache.kafka.common.requests.ApiError)|",
      "|java+method:///org/apache/kafka/common/requests/ApiError/fromThrowable(java.lang.Throwable)|",
      "|java+method:///kafka/server/AdminManager/trace(scala.Function0)|",
      "|java+method:///kafka/admin/AdminUtils$/assignReplicasToBrokers$default$4()|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$2$$anonfun$apply$2/AdminManager$$anonfun$2$$anonfun$apply$2(kafka.server.AdminManager$$anonfun$2,java.util.Properties)|",
      "|java+method:///scala/collection/JavaConverters$/mapAsScalaMapConverter(java.util.Map)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///kafka/admin/AdminUtils$/createOrUpdateTopicPartitionAssignmentPathInZK(kafka.utils.ZkUtils,java.lang.String,scala.collection.Map,java.util.Properties,boolean)|",
      "|java+method:///kafka/server/AdminManager/kafka$server$AdminManager$$createTopicPolicy()|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$2$$anonfun$apply$8/AdminManager$$anonfun$2$$anonfun$apply$8(kafka.server.AdminManager$$anonfun$2,java.lang.Throwable)|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$2$$anonfun$apply$6/AdminManager$$anonfun$2$$anonfun$apply$6(kafka.server.AdminManager$$anonfun$2,java.lang.Throwable)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///scala/collection/IterableLike/foreach(scala.Function1)|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$2$$anonfun$3/AdminManager$$anonfun$2$$anonfun$3(kafka.server.AdminManager$$anonfun$2)|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$2$$anonfun$apply$5/AdminManager$$anonfun$2$$anonfun$apply$5(kafka.server.AdminManager$$anonfun$2,java.lang.String,org.apache.kafka.common.requests.CreateTopicsRequest$TopicDetails)|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$2$$anonfun$apply$7/AdminManager$$anonfun$2$$anonfun$apply$7(kafka.server.AdminManager$$anonfun$2,java.lang.String,org.apache.kafka.common.requests.CreateTopicsRequest$TopicDetails)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///scala/Predef$/int2Integer(int)|",
      "|java+method:///kafka/admin/AdminUtils$/assignReplicasToBrokers(scala.collection.Seq,int,int,int,int)|",
      "|java+method:///scala/collection/mutable/Map$/canBuildFrom()|",
      "|java+method:///kafka/server/AdminManager/error(scala.Function0,scala.Function0)|",
      "|java+constructor:///org/apache/kafka/common/errors/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/kafka/server/policy/CreateTopicPolicy/validate(org.apache.kafka.server.policy.CreateTopicPolicy$RequestMetadata)|",
      "|java+method:///kafka/log/LogConfig$/validate(java.util.Properties)|",
      "|java+method:///kafka/server/AdminManager/info(scala.Function0,scala.Function0)|",
      "|java+method:///scala/Predef$/short2Short(short)|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$2$$anonfun$apply$4/AdminManager$$anonfun$2$$anonfun$apply$4(kafka.server.AdminManager$$anonfun$2,java.lang.String,scala.collection.Map)|"
    ],
    "v2Body": [
      "|java+method:///scala/Some/x()|",
      "|java+constructor:///org/apache/kafka/server/policy/CreateTopicPolicy$RequestMetadata/CreateTopicPolicy$RequestMetadata(java.lang.String,java.lang.Integer,java.lang.Short,java.util.Map,java.util.Map)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+constructor:///kafka/server/CreatePartitionsMetadata/CreatePartitionsMetadata(java.lang.String,scala.collection.Map,org.apache.kafka.common.requests.ApiError)|",
      "|java+method:///kafka/admin/AdminUtils$/validateCreateOrUpdateTopic(kafka.utils.ZkUtils,java.lang.String,scala.collection.Map,java.util.Properties,boolean)|",
      "|java+method:///kafka/admin/AdminUtils$/assignReplicasToBrokers$default$5()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///kafka/server/AdminManager/zkUtils()|",
      "|java+constructor:///java/util/Properties/Properties()|",
      "|java+method:///scala/collection/Map$/apply(scala.collection.Seq)|",
      "|java+method:///scala/collection/TraversableLike/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///org/apache/kafka/common/requests/ApiError/fromThrowable(java.lang.Throwable)|",
      "|java+method:///kafka/server/AdminManager/trace(scala.Function0)|",
      "|java+method:///kafka/admin/AdminUtils$/assignReplicasToBrokers$default$4()|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$2$$anonfun$apply$2/AdminManager$$anonfun$2$$anonfun$apply$2(kafka.server.AdminManager$$anonfun$2,java.util.Properties)|",
      "|java+method:///scala/collection/JavaConverters$/mapAsScalaMapConverter(java.util.Map)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///kafka/admin/AdminUtils$/createOrUpdateTopicPartitionAssignmentPathInZK(kafka.utils.ZkUtils,java.lang.String,scala.collection.Map,java.util.Properties,boolean)|",
      "|java+method:///kafka/server/AdminManager/kafka$server$AdminManager$$createTopicPolicy()|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$2$$anonfun$apply$8/AdminManager$$anonfun$2$$anonfun$apply$8(kafka.server.AdminManager$$anonfun$2,java.lang.Throwable)|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$2$$anonfun$apply$6/AdminManager$$anonfun$2$$anonfun$apply$6(kafka.server.AdminManager$$anonfun$2,java.lang.Throwable)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///scala/collection/IterableLike/foreach(scala.Function1)|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$2$$anonfun$3/AdminManager$$anonfun$2$$anonfun$3(kafka.server.AdminManager$$anonfun$2)|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$2$$anonfun$apply$5/AdminManager$$anonfun$2$$anonfun$apply$5(kafka.server.AdminManager$$anonfun$2,java.lang.String,org.apache.kafka.common.requests.CreateTopicsRequest$TopicDetails)|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$2$$anonfun$apply$7/AdminManager$$anonfun$2$$anonfun$apply$7(kafka.server.AdminManager$$anonfun$2,java.lang.String,org.apache.kafka.common.requests.CreateTopicsRequest$TopicDetails)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///scala/Predef$/int2Integer(int)|",
      "|java+method:///kafka/admin/AdminUtils$/assignReplicasToBrokers(scala.collection.Seq,int,int,int,int)|",
      "|java+method:///scala/collection/mutable/Map$/canBuildFrom()|",
      "|java+method:///kafka/server/AdminManager/error(scala.Function0,scala.Function0)|",
      "|java+constructor:///org/apache/kafka/common/errors/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///org/apache/kafka/server/policy/CreateTopicPolicy/validate(org.apache.kafka.server.policy.CreateTopicPolicy$RequestMetadata)|",
      "|java+method:///kafka/log/LogConfig$/validate(java.util.Properties)|",
      "|java+method:///kafka/server/AdminManager/info(scala.Function0,scala.Function0)|",
      "|java+method:///scala/Predef$/short2Short(short)|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$2$$anonfun$apply$4/AdminManager$$anonfun$2$$anonfun$apply$4(kafka.server.AdminManager$$anonfun$2,java.lang.String,scala.collection.Map)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/log/LogValidator$$anonfun$validateMessagesAndAssignOffsetsCompressed$1/apply(org.apache.kafka.common.record.MutableRecordBatch)|",
    "called": "|java+method:///org/apache/kafka/common/record/AbstractRecords/recordBatchHeaderSizeInBytes(byte,org.apache.kafka.common.record.CompressionType)|",
    "v1Body": [
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/collection/JavaConverters$/iterableAsScalaIterableConverter(java.lang.Iterable)|",
      "|java+method:///org/apache/kafka/common/record/MutableRecordBatch/isControlBatch()|",
      "|java+method:///kafka/log/LogValidator$/kafka$log$LogValidator$$validateBatch(org.apache.kafka.common.record.RecordBatch,boolean,byte)|",
      "|java+constructor:///kafka/log/LogValidator$$anonfun$validateMessagesAndAssignOffsetsCompressed$1$$anonfun$apply$3/LogValidator$$anonfun$validateMessagesAndAssignOffsetsCompressed$1$$anonfun$apply$3(kafka.log.LogValidator$$anonfun$validateMessagesAndAssignOffsetsCompressed$1,org.apache.kafka.common.record.MutableRecordBatch)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///scala/collection/IterableLike/foreach(scala.Function1)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/record/AbstractRecords/recordBatchHeaderSizeInBytes(byte,org.apache.kafka.common.record.CompressionType)|",
      "|java+method:///org/apache/kafka/common/record/MutableRecordBatch/compressionType()|",
      "|java+method:///scala/collection/JavaConverters$/iterableAsScalaIterableConverter(java.lang.Iterable)|",
      "|java+method:///org/apache/kafka/common/record/MutableRecordBatch/isControlBatch()|",
      "|java+method:///kafka/log/LogValidator$/kafka$log$LogValidator$$validateBatch(org.apache.kafka.common.record.RecordBatch,boolean,byte)|",
      "|java+constructor:///kafka/log/LogValidator$$anonfun$validateMessagesAndAssignOffsetsCompressed$1$$anonfun$apply$3/LogValidator$$anonfun$validateMessagesAndAssignOffsetsCompressed$1$$anonfun$apply$3(kafka.log.LogValidator$$anonfun$validateMessagesAndAssignOffsetsCompressed$1,org.apache.kafka.common.record.MutableRecordBatch)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///scala/collection/IterableLike/foreach(scala.Function1)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/ReplicaManager/stopReplica(org.apache.kafka.common.TopicPartition,boolean)|",
    "called": "|java+constructor:///org/apache/kafka/common/errors/KafkaStorageException/KafkaStorageException(java.lang.String)|",
    "v1Body": [
      "|java+method:///kafka/server/ReplicaManager/kafka$server$ReplicaManager$$allPartitions()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///kafka/server/ReplicaManager/getPartition(org.apache.kafka.common.TopicPartition)|",
      "|java+method:///kafka/log/LogManager/asyncDelete(org.apache.kafka.common.TopicPartition)|",
      "|java+method:///kafka/server/BrokerTopicStats/removeMetrics(java.lang.String)|",
      "|java+constructor:///kafka/server/ReplicaManager$$anonfun$stopReplica$2/ReplicaManager$$anonfun$stopReplica$2(kafka.server.ReplicaManager,org.apache.kafka.common.TopicPartition,boolean)|",
      "|java+constructor:///kafka/server/ReplicaManager$$anonfun$stopReplica$3/ReplicaManager$$anonfun$stopReplica$3(kafka.server.ReplicaManager,org.apache.kafka.common.TopicPartition,boolean)|",
      "|java+method:///scala/collection/mutable/Set/exists(scala.Function1)|",
      "|java+constructor:///kafka/server/ReplicaManager$$anonfun$9/ReplicaManager$$anonfun$9(kafka.server.ReplicaManager,org.apache.kafka.common.TopicPartition)|",
      "|java+method:///kafka/controller/KafkaController$StateChangeLogger/trace(scala.Function0)|",
      "|java+method:///kafka/cluster/Partition/delete()|",
      "|java+method:///scala/Option/isDefined()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/server/ReplicaManager/stateChangeLogger()|",
      "|java+method:///kafka/utils/Pool/remove(java.lang.Object)|",
      "|java+constructor:///kafka/server/ReplicaManager$$anonfun$stopReplica$1/ReplicaManager$$anonfun$stopReplica$1(kafka.server.ReplicaManager,org.apache.kafka.common.TopicPartition,boolean)|",
      "|java+method:///org/apache/kafka/common/TopicPartition/topic()|",
      "|java+method:///kafka/server/ReplicaManager/logManager()|",
      "|java+method:///kafka/server/ReplicaManager/brokerTopicStats()|",
      "|java+method:///kafka/log/LogManager/getLog(org.apache.kafka.common.TopicPartition)|",
      "|java+method:///kafka/utils/Pool/keys()|"
    ],
    "v2Body": [
      "|java+method:///scala/Some/x()|",
      "|java+constructor:///org/apache/kafka/common/errors/KafkaStorageException/KafkaStorageException(java.lang.String)|",
      "|java+method:///kafka/server/ReplicaManager/kafka$server$ReplicaManager$$allPartitions()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///kafka/server/ReplicaManager/getPartition(org.apache.kafka.common.TopicPartition)|",
      "|java+method:///kafka/server/ReplicaManager$/OfflinePartition()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///kafka/log/LogManager/asyncDelete(org.apache.kafka.common.TopicPartition)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///kafka/server/BrokerTopicStats/removeMetrics(java.lang.String)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///kafka/server/ReplicaManager$$anonfun$stopReplica$2/ReplicaManager$$anonfun$stopReplica$2(kafka.server.ReplicaManager,org.apache.kafka.common.TopicPartition,boolean)|",
      "|java+method:///kafka/log/LogManager/getLog(org.apache.kafka.common.TopicPartition)|",
      "|java+constructor:///kafka/server/ReplicaManager$$anonfun$stopReplica$3/ReplicaManager$$anonfun$stopReplica$3(kafka.server.ReplicaManager,org.apache.kafka.common.TopicPartition,boolean)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///kafka/cluster/Partition/delete()|",
      "|java+method:///scala/Option/isDefined()|",
      "|java+method:///kafka/server/ReplicaManager/kafka$server$ReplicaManager$$stateChangeLogger()|",
      "|java+method:///scala/collection/Iterable/exists(scala.Function1)|",
      "|java+method:///kafka/utils/Pool/values()|",
      "|java+method:///kafka/utils/Pool/remove(java.lang.Object)|",
      "|java+constructor:///kafka/server/ReplicaManager$$anonfun$stopReplica$1/ReplicaManager$$anonfun$stopReplica$1(kafka.server.ReplicaManager,org.apache.kafka.common.TopicPartition,boolean)|",
      "|java+method:///org/apache/kafka/common/TopicPartition/topic()|",
      "|java+method:///kafka/server/ReplicaManager/logManager()|",
      "|java+method:///kafka/server/ReplicaManager/brokerTopicStats()|",
      "|java+constructor:///kafka/server/ReplicaManager$$anonfun$8/ReplicaManager$$anonfun$8(kafka.server.ReplicaManager,org.apache.kafka.common.TopicPartition)|",
      "|java+method:///kafka/controller/StateChangeLogger/trace(scala.Function0)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/admin/ConfigCommand$/kafka$admin$ConfigCommand$$sanitizeName$1(java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/apache/kafka/common/utils/Sanitizer/sanitize(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///kafka/server/ConfigEntityName$/Default()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///kafka/admin/ConfigCommand$/validateChars(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///kafka/server/ConfigType$/Client()|",
      "|java+method:///kafka/server/ConfigType$/User()|",
      "|java+method:///kafka/server/QuotaId$/sanitize(java.lang.String)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/utils/Sanitizer/sanitize(java.lang.String)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///kafka/server/ConfigEntityName$/Default()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///kafka/server/ConfigType$/Client()|",
      "|java+method:///kafka/server/ConfigType$/User()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/consumer/NewShinyConsumer/consumerInit()|",
    "called": "|java+method:///org/apache/kafka/clients/consumer/KafkaConsumer/subscribe(java.util.regex.Pattern)|",
    "v1Body": [
      "|java+method:///org/apache/kafka/clients/consumer/KafkaConsumer/subscribe(java.util.Collection)|",
      "|java+method:///java/util/regex/Pattern/compile(java.lang.String)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/Tuple4/_1()|",
      "|java+method:///scala/Tuple4/_2()|",
      "|java+method:///scala/Tuple4/_4()|",
      "|java+constructor:///org/apache/kafka/clients/consumer/internals/NoOpConsumerRebalanceListener/NoOpConsumerRebalanceListener()|",
      "|java+method:///org/apache/kafka/clients/consumer/KafkaConsumer/subscribe(java.util.regex.Pattern,org.apache.kafka.clients.consumer.ConsumerRebalanceListener)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///kafka/consumer/NewShinyConsumer/consumer()|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToInt(java.lang.Object)|",
      "|java+constructor:///scala/Tuple4/Tuple4(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/Some/x()|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToLong(java.lang.Object)|",
      "|java+method:///scala/Tuple4/_3()|",
      "|java+method:///kafka/consumer/NewShinyConsumer/seek(java.lang.String,int,long)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///kafka/api/OffsetRequest$/LatestTime()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/kafka/clients/consumer/KafkaConsumer/subscribe(java.util.Collection)|",
      "|java+method:///java/util/regex/Pattern/compile(java.lang.String)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/Tuple4/_1()|",
      "|java+method:///scala/Tuple4/_2()|",
      "|java+method:///scala/Tuple4/_4()|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///kafka/consumer/NewShinyConsumer/consumer()|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToInt(java.lang.Object)|",
      "|java+method:///org/apache/kafka/clients/consumer/KafkaConsumer/subscribe(java.util.regex.Pattern)|",
      "|java+constructor:///scala/Tuple4/Tuple4(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/Some/x()|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToLong(java.lang.Object)|",
      "|java+method:///scala/Tuple4/_3()|",
      "|java+method:///kafka/consumer/NewShinyConsumer/seek(java.lang.String,int,long)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///kafka/api/OffsetRequest$/LatestTime()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$addLeaderAndIsrRequestForBrokers$2/apply(int)|",
    "called": "|java+constructor:///org/apache/kafka/common/requests/LeaderAndIsrRequest$PartitionState/LeaderAndIsrRequest$PartitionState(int,int,int,java.util.List,int,java.util.List,boolean)|",
    "v1Body": [
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$addLeaderAndIsrRequestForBrokers$2$$anonfun$2/ControllerBrokerRequestBatch$$anonfun$addLeaderAndIsrRequestForBrokers$2$$anonfun$2(kafka.controller.ControllerBrokerRequestBatch$$anonfun$addLeaderAndIsrRequestForBrokers$2)|",
      "|java+method:///kafka/controller/ControllerBrokerRequestBatch/leaderAndIsrRequestMap()|",
      "|java+constructor:///kafka/api/PartitionStateInfo/PartitionStateInfo(kafka.controller.LeaderIsrAndControllerEpoch,scala.collection.Seq)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///scala/collection/mutable/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/collection/mutable/Map/getOrElseUpdate(java.lang.Object,scala.Function0)|"
    ],
    "v2Body": [
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$addLeaderAndIsrRequestForBrokers$2$$anonfun$4/ControllerBrokerRequestBatch$$anonfun$addLeaderAndIsrRequestForBrokers$2$$anonfun$4(kafka.controller.ControllerBrokerRequestBatch$$anonfun$addLeaderAndIsrRequestForBrokers$2)|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///kafka/controller/ControllerBrokerRequestBatch/leaderAndIsrRequestMap()|",
      "|java+method:///kafka/api/LeaderAndIsr/zkVersion()|",
      "|java+method:///kafka/api/LeaderAndIsr/isr()|",
      "|java+method:///scala/Option/exists(scala.Function1)|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$addLeaderAndIsrRequestForBrokers$2$$anonfun$apply$2/ControllerBrokerRequestBatch$$anonfun$addLeaderAndIsrRequestForBrokers$2$$anonfun$apply$2(kafka.controller.ControllerBrokerRequestBatch$$anonfun$addLeaderAndIsrRequestForBrokers$2)|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$addLeaderAndIsrRequestForBrokers$2$$anonfun$apply$1/ControllerBrokerRequestBatch$$anonfun$addLeaderAndIsrRequestForBrokers$2$$anonfun$apply$1(kafka.controller.ControllerBrokerRequestBatch$$anonfun$addLeaderAndIsrRequestForBrokers$2)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///scala/collection/mutable/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/collection/mutable/Map/get(java.lang.Object)|",
      "|java+method:///scala/collection/immutable/List/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$addLeaderAndIsrRequestForBrokers$2$$anonfun$3/ControllerBrokerRequestBatch$$anonfun$addLeaderAndIsrRequestForBrokers$2$$anonfun$3(kafka.controller.ControllerBrokerRequestBatch$$anonfun$addLeaderAndIsrRequestForBrokers$2)|",
      "|java+method:///scala/collection/immutable/List$/canBuildFrom()|",
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///kafka/api/LeaderAndIsr/leaderEpoch()|",
      "|java+method:///kafka/controller/LeaderIsrAndControllerEpoch/controllerEpoch()|",
      "|java+method:///kafka/controller/LeaderIsrAndControllerEpoch/leaderAndIsr()|",
      "|java+method:///scala/collection/mutable/Map/getOrElseUpdate(java.lang.Object,scala.Function0)|",
      "|java+method:///scala/collection/Seq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/collection/JavaConverters$/seqAsJavaListConverter(scala.collection.Seq)|",
      "|java+method:///kafka/api/LeaderAndIsr/leader()|",
      "|java+constructor:///org/apache/kafka/common/requests/LeaderAndIsrRequest$PartitionState/LeaderAndIsrRequest$PartitionState(int,int,int,java.util.List,int,java.util.List,boolean)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/tools/UpdateOffsetsInZK$$anonfun$getAndSetOffsets$2/apply$mcVI$sp(int)|",
    "called": "|java+method:///org/apache/kafka/common/network/ListenerName/forSecurityProtocol(org.apache.kafka.common.security.auth.SecurityProtocol)|",
    "v1Body": [
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///kafka/cluster/BrokerEndPoint/host()|",
      "|java+method:///scala/Predef$/ArrowAssoc(java.lang.Object)|",
      "|java+method:///kafka/api/OffsetRequest$/apply$default$2()|",
      "|java+method:///kafka/consumer/ConsumerConfig/groupId()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/utils/ZkUtils/updatePersistentPath(java.lang.String,java.lang.String,java.util.List)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToInt(java.lang.Object)|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+method:///kafka/cluster/BrokerEndPoint/port()|",
      "|java+method:///scala/Some/x()|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToLong(java.lang.Object)|",
      "|java+method:///kafka/api/PartitionOffsetsResponse/offsets()|",
      "|java+method:///kafka/api/OffsetResponse/partitionErrorAndOffsets()|",
      "|java+method:///scala/collection/immutable/Map$/apply(scala.collection.Seq)|",
      "|java+method:///kafka/utils/ZkUtils/updatePersistentPath$default$3()|",
      "|java+method:///scala/Predef$/println(java.lang.Object)|",
      "|java+method:///kafka/cluster/Broker/getBrokerEndPoint(org.apache.kafka.common.network.ListenerName)|",
      "|java+method:///scala/Predef$/Map()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///kafka/api/OffsetRequest$/apply$default$3()|",
      "|java+method:///org/apache/kafka/common/network/ListenerName/forSecurityProtocol(org.apache.kafka.common.protocol.SecurityProtocol)|",
      "|java+method:///kafka/consumer/SimpleConsumer/getOffsetsBefore(kafka.api.OffsetRequest)|",
      "|java+method:///kafka/api/OffsetRequest$/apply$default$4()|",
      "|java+constructor:///kafka/api/OffsetRequest/OffsetRequest(scala.collection.immutable.Map,short,int,java.lang.String,int)|",
      "|java+method:///scala/collection/immutable/Map/apply(java.lang.Object)|",
      "|java+method:///kafka/api/OffsetRequest$/apply$default$5()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+constructor:///kafka/common/KafkaException/KafkaException(java.lang.String)|",
      "|java+constructor:///kafka/consumer/SimpleConsumer/SimpleConsumer(java.lang.String,int,int,int,java.lang.String)|",
      "|java+method:///scala/Predef$ArrowAssoc$/$minus$greater$extension(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///kafka/common/TopicAndPartition/TopicAndPartition(java.lang.String,int)|",
      "|java+method:///scala/collection/Seq/head()|",
      "|java+method:///kafka/utils/ZkUtils/getBrokerInfo(int)|",
      "|java+constructor:///kafka/api/PartitionOffsetRequestInfo/PartitionOffsetRequestInfo(long,int)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/utils/ZKGroupTopicDirs/consumerOffsetDir()|",
      "|java+constructor:///kafka/utils/ZKGroupTopicDirs/ZKGroupTopicDirs(java.lang.String,java.lang.String)|",
      "|java+method:///kafka/utils/ZkUtils/getLeaderForPartition(java.lang.String,int)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///kafka/cluster/BrokerEndPoint/host()|",
      "|java+method:///scala/Predef$/ArrowAssoc(java.lang.Object)|",
      "|java+method:///kafka/api/OffsetRequest$/apply$default$2()|",
      "|java+method:///kafka/consumer/ConsumerConfig/groupId()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/utils/ZkUtils/updatePersistentPath(java.lang.String,java.lang.String,java.util.List)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToInt(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/network/ListenerName/forSecurityProtocol(org.apache.kafka.common.security.auth.SecurityProtocol)|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+method:///kafka/cluster/BrokerEndPoint/port()|",
      "|java+method:///scala/Some/x()|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToLong(java.lang.Object)|",
      "|java+method:///kafka/api/PartitionOffsetsResponse/offsets()|",
      "|java+method:///kafka/api/OffsetResponse/partitionErrorAndOffsets()|",
      "|java+method:///scala/collection/immutable/Map$/apply(scala.collection.Seq)|",
      "|java+method:///kafka/utils/ZkUtils/updatePersistentPath$default$3()|",
      "|java+method:///scala/Predef$/println(java.lang.Object)|",
      "|java+method:///kafka/cluster/Broker/getBrokerEndPoint(org.apache.kafka.common.network.ListenerName)|",
      "|java+method:///scala/Predef$/Map()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///kafka/api/OffsetRequest$/apply$default$3()|",
      "|java+method:///kafka/consumer/SimpleConsumer/getOffsetsBefore(kafka.api.OffsetRequest)|",
      "|java+method:///kafka/api/OffsetRequest$/apply$default$4()|",
      "|java+constructor:///kafka/api/OffsetRequest/OffsetRequest(scala.collection.immutable.Map,short,int,java.lang.String,int)|",
      "|java+method:///scala/collection/immutable/Map/apply(java.lang.Object)|",
      "|java+method:///kafka/api/OffsetRequest$/apply$default$5()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+constructor:///kafka/common/KafkaException/KafkaException(java.lang.String)|",
      "|java+constructor:///kafka/consumer/SimpleConsumer/SimpleConsumer(java.lang.String,int,int,int,java.lang.String)|",
      "|java+method:///scala/Predef$ArrowAssoc$/$minus$greater$extension(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///kafka/common/TopicAndPartition/TopicAndPartition(java.lang.String,int)|",
      "|java+method:///scala/collection/Seq/head()|",
      "|java+method:///kafka/utils/ZkUtils/getBrokerInfo(int)|",
      "|java+constructor:///kafka/api/PartitionOffsetRequestInfo/PartitionOffsetRequestInfo(long,int)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/utils/ZKGroupTopicDirs/consumerOffsetDir()|",
      "|java+constructor:///kafka/utils/ZKGroupTopicDirs/ZKGroupTopicDirs(java.lang.String,java.lang.String)|",
      "|java+method:///kafka/utils/ZkUtils/getLeaderForPartition(java.lang.String,int)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/coordinator/transaction/TransactionLog$/readTxnRecordValue(java.lang.String,java.nio.ByteBuffer)|",
    "called": "|java+method:///org/apache/kafka/common/protocol/types/Struct/getShort(org.apache.kafka.common.protocol.types.BoundField)|",
    "v1Body": [
      "|java+constructor:///kafka/coordinator/transaction/TransactionMetadata/TransactionMetadata(java.lang.String,long,short,int,kafka.coordinator.transaction.TransactionState,scala.collection.mutable.Set,long,long)|",
      "|java+method:///kafka/coordinator/transaction/TransactionMetadata$/byteToState(byte)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Schema/read(java.nio.ByteBuffer)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/TxnTimeoutField()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$/kafka$coordinator$transaction$TransactionLog$$schemaForValue(int)|",
      "|java+method:///scala/collection/mutable/Set$/empty()|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/TxnStartTimestampField()|",
      "|java+method:///scala/Predef$/Short2short(java.lang.Short)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/TxnPartitionsField()|",
      "|java+method:///scala/Predef$/Byte2byte(java.lang.Byte)|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|",
      "|java+method:///java/nio/ByteBuffer/getShort()|",
      "|java+constructor:///kafka/coordinator/transaction/TransactionLog$$anonfun$readTxnRecordValue$1/TransactionLog$$anonfun$readTxnRecordValue$1(kafka.coordinator.transaction.TransactionMetadata)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToShort(short)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/getLong(org.apache.kafka.common.protocol.types.Field)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/TxnStatusField()|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/getInt(org.apache.kafka.common.protocol.types.Field)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/CurrentVersion()|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/ProducerIdField()|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/getByte(org.apache.kafka.common.protocol.types.Field)|",
      "|java+method:///scala/collection/mutable/ArrayOps/foreach(scala.Function1)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/ProducerEpochField()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/getArray(org.apache.kafka.common.protocol.types.Field)|",
      "|java+method:///scala/Predef$/Integer2int(java.lang.Integer)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/getShort(org.apache.kafka.common.protocol.types.Field)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/TxnEntryTimestampField()|"
    ],
    "v2Body": [
      "|java+constructor:///kafka/coordinator/transaction/TransactionMetadata/TransactionMetadata(java.lang.String,long,short,int,kafka.coordinator.transaction.TransactionState,scala.collection.mutable.Set,long,long)|",
      "|java+method:///kafka/coordinator/transaction/TransactionMetadata$/byteToState(byte)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Schema/read(java.nio.ByteBuffer)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/TxnTimeoutField()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$/kafka$coordinator$transaction$TransactionLog$$schemaForValue(int)|",
      "|java+method:///scala/collection/mutable/Set$/empty()|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/TxnStartTimestampField()|",
      "|java+method:///scala/collection/mutable/ArrayOps/foreach(scala.Function1)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/TxnPartitionsField()|",
      "|java+method:///scala/Predef$/Integer2int(java.lang.Integer)|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|",
      "|java+constructor:///kafka/coordinator/transaction/TransactionLog$$anonfun$readTxnRecordValue$1/TransactionLog$$anonfun$readTxnRecordValue$1(kafka.coordinator.transaction.TransactionMetadata)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToShort(short)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/getLong(org.apache.kafka.common.protocol.types.BoundField)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/TxnStatusField()|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/CurrentVersion()|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/ProducerIdField()|",
      "|java+method:///scala/Predef$/Short2short(java.lang.Short)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/getShort(org.apache.kafka.common.protocol.types.BoundField)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/ProducerEpochField()|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/getArray(org.apache.kafka.common.protocol.types.BoundField)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/getByte(org.apache.kafka.common.protocol.types.BoundField)|",
      "|java+method:///scala/Predef$/Byte2byte(java.lang.Byte)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$ValueSchema$/TxnEntryTimestampField()|",
      "|java+method:///java/nio/ByteBuffer/getShort()|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/getInt(org.apache.kafka.common.protocol.types.BoundField)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/KafkaRequestHandlerPool$$anonfun$1/apply$mcVI$sp(int)|",
    "called": "|java+method:///org/apache/kafka/common/utils/KafkaThread/daemon(java.lang.String,java.lang.Runnable)|",
    "v1Body": [
      "|java+method:///kafka/server/KafkaRequestHandlerPool/kafka$server$KafkaRequestHandlerPool$$aggregateIdleMeter()|",
      "|java+method:///kafka/server/KafkaRequestHandlerPool/apis()|",
      "|java+method:///java/lang/Thread/start()|",
      "|java+constructor:///kafka/server/KafkaRequestHandler/KafkaRequestHandler(int,int,com.yammer.metrics.core.Meter,int,kafka.network.RequestChannel,kafka.server.KafkaApis,org.apache.kafka.common.utils.Time)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///kafka/server/KafkaRequestHandlerPool/runnables()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///kafka/server/KafkaRequestHandlerPool/brokerId()|",
      "|java+method:///kafka/server/KafkaRequestHandlerPool/requestChannel()|",
      "|java+method:///org/apache/kafka/common/utils/Utils/daemonThread(java.lang.String,java.lang.Runnable)|"
    ],
    "v2Body": [
      "|java+method:///kafka/server/KafkaRequestHandlerPool/kafka$server$KafkaRequestHandlerPool$$aggregateIdleMeter()|",
      "|java+method:///kafka/server/KafkaRequestHandlerPool/apis()|",
      "|java+method:///org/apache/kafka/common/utils/KafkaThread/daemon(java.lang.String,java.lang.Runnable)|",
      "|java+constructor:///kafka/server/KafkaRequestHandler/KafkaRequestHandler(int,int,com.yammer.metrics.core.Meter,int,kafka.network.RequestChannel,kafka.server.KafkaApis,org.apache.kafka.common.utils.Time)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///kafka/server/KafkaRequestHandlerPool/runnables()|",
      "|java+method:///org/apache/kafka/common/utils/KafkaThread/start()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///kafka/server/KafkaRequestHandlerPool/brokerId()|",
      "|java+method:///kafka/server/KafkaRequestHandlerPool/requestChannel()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/coordinator/group/GroupMetadataManager$$anonfun$cleanupGroupMetadata$1/apply(scala.Tuple2)|",
    "called": "|java+constructor:///org/apache/kafka/common/TopicPartition/TopicPartition(java.lang.String,int)|",
    "v1Body": [
      "|java+method:///scala/Some/x()|",
      "|java+method:///scala/Option/foreach(scala.Function1)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/Tuple3/_1()|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToByte(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/utils/Time/milliseconds()|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager/partitionFor(java.lang.String)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToBoolean(boolean)|",
      "|java+constructor:///kafka/coordinator/group/GroupMetadataManager$$anonfun$cleanupGroupMetadata$1$$anonfun$22/GroupMetadataManager$$anonfun$cleanupGroupMetadata$1$$anonfun$22(kafka.coordinator.group.GroupMetadataManager$$anonfun$cleanupGroupMetadata$1,java.lang.String,kafka.coordinator.group.GroupMetadata)|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToInt(java.lang.Object)|",
      "|java+constructor:///kafka/coordinator/group/GroupMetadataManager$$anonfun$cleanupGroupMetadata$1$$anonfun$apply$25/GroupMetadataManager$$anonfun$cleanupGroupMetadata$1$$anonfun$apply$25(kafka.coordinator.group.GroupMetadataManager$$anonfun$cleanupGroupMetadata$1,java.lang.String,kafka.coordinator.group.GroupMetadata,scala.collection.immutable.Map,boolean,int,org.apache.kafka.common.TopicPartition,byte,org.apache.kafka.common.record.TimestampType,long)|",
      "|java+constructor:///kafka/coordinator/group/GroupMetadataManager$$anonfun$cleanupGroupMetadata$1$$anonfun$apply$33/GroupMetadataManager$$anonfun$cleanupGroupMetadata$1$$anonfun$apply$33(kafka.coordinator.group.GroupMetadataManager$$anonfun$cleanupGroupMetadata$1,java.lang.String)|",
      "|java+method:///kafka/server/ReplicaManager/getPartition(org.apache.kafka.common.TopicPartition)|",
      "|java+constructor:///org/apache/kafka/common/TopicPartition/TopicPartition(java.lang.String,int)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Tuple3/_2()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///scala/Tuple3/_3()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///kafka/coordinator/group/GroupMetadata/inLock(scala.Function0)|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToBoolean(java.lang.Object)|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager/info(scala.Function0)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///scala/Tuple3/Tuple3(java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager/kafka$coordinator$group$GroupMetadataManager$$getMagic(int)|"
    ],
    "v2Body": [
      "|java+method:///scala/Some/x()|",
      "|java+method:///scala/Option/foreach(scala.Function1)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/Tuple3/_1()|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToByte(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/utils/Time/milliseconds()|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager/partitionFor(java.lang.String)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToBoolean(boolean)|",
      "|java+constructor:///kafka/coordinator/group/GroupMetadataManager$$anonfun$cleanupGroupMetadata$1$$anonfun$22/GroupMetadataManager$$anonfun$cleanupGroupMetadata$1$$anonfun$22(kafka.coordinator.group.GroupMetadataManager$$anonfun$cleanupGroupMetadata$1,java.lang.String,kafka.coordinator.group.GroupMetadata)|",
      "|java+method:///kafka/server/ReplicaManager/nonOfflinePartition(org.apache.kafka.common.TopicPartition)|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToInt(java.lang.Object)|",
      "|java+constructor:///kafka/coordinator/group/GroupMetadataManager$$anonfun$cleanupGroupMetadata$1$$anonfun$apply$25/GroupMetadataManager$$anonfun$cleanupGroupMetadata$1$$anonfun$apply$25(kafka.coordinator.group.GroupMetadataManager$$anonfun$cleanupGroupMetadata$1,java.lang.String,kafka.coordinator.group.GroupMetadata,scala.collection.immutable.Map,boolean,int,org.apache.kafka.common.TopicPartition,byte,org.apache.kafka.common.record.TimestampType,long)|",
      "|java+constructor:///kafka/coordinator/group/GroupMetadataManager$$anonfun$cleanupGroupMetadata$1$$anonfun$apply$33/GroupMetadataManager$$anonfun$cleanupGroupMetadata$1$$anonfun$apply$33(kafka.coordinator.group.GroupMetadataManager$$anonfun$cleanupGroupMetadata$1,java.lang.String)|",
      "|java+constructor:///org/apache/kafka/common/TopicPartition/TopicPartition(java.lang.String,int)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Tuple3/_2()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///scala/Tuple3/_3()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///kafka/coordinator/group/GroupMetadata/inLock(scala.Function0)|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToBoolean(java.lang.Object)|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager/info(scala.Function0)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///scala/Tuple3/Tuple3(java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager/kafka$coordinator$group$GroupMetadataManager$$getMagic(int)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/coordinator/transaction/TransactionLog$/keyToBytes(java.lang.String)|",
    "called": "|java+method:///org/apache/kafka/common/protocol/types/Struct/set(org.apache.kafka.common.protocol.types.BoundField,java.lang.Object)|",
    "v1Body": [
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+constructor:///org/apache/kafka/common/protocol/types/Struct/Struct(org.apache.kafka.common.protocol.types.Schema)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$KeySchema$/CURRENT_VERSION()|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$KeySchema$/TXN_ID_FIELD()|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/writeTo(java.nio.ByteBuffer)|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/sizeOf()|",
      "|java+method:///java/nio/ByteBuffer/putShort(short)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$KeySchema$/CURRENT()|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/set(org.apache.kafka.common.protocol.types.Field,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+constructor:///org/apache/kafka/common/protocol/types/Struct/Struct(org.apache.kafka.common.protocol.types.Schema)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$KeySchema$/CURRENT_VERSION()|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$KeySchema$/TXN_ID_FIELD()|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/writeTo(java.nio.ByteBuffer)|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/sizeOf()|",
      "|java+method:///java/nio/ByteBuffer/putShort(short)|",
      "|java+method:///kafka/coordinator/transaction/TransactionLog$KeySchema$/CURRENT()|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/set(org.apache.kafka.common.protocol.types.BoundField,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/AdminManager$$anonfun$alterConfigs$1/apply(scala.Tuple2)|",
    "called": "|java+constructor:///org/apache/kafka/common/errors/InvalidRequestException/InvalidRequestException(java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+constructor:///org/apache/kafka/common/config/ConfigResource/ConfigResource(org.apache.kafka.common.config.ConfigResource$Type,java.lang.String)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$alterConfigs$1$$anonfun$apply$16/AdminManager$$anonfun$alterConfigs$1$$anonfun$apply$16(kafka.server.AdminManager$$anonfun$alterConfigs$1,java.util.Properties)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///kafka/server/AdminManager/zkUtils()|",
      "|java+method:///org/apache/kafka/common/requests/Resource/type()|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///kafka/server/AdminManager/info(scala.Function0)|",
      "|java+method:///scala/Some/x()|",
      "|java+method:///org/apache/kafka/common/requests/Resource/name()|",
      "|java+constructor:///org/apache/kafka/server/policy/AlterConfigPolicy$RequestMetadata/AlterConfigPolicy$RequestMetadata(org.apache.kafka.common.config.ConfigResource,java.util.Map)|",
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///org/apache/kafka/common/requests/ApiError/fromThrowable(java.lang.Throwable)|",
      "|java+method:///scala/collection/Iterable$/canBuildFrom()|",
      "|java+method:///scala/Predef$/ArrowAssoc(java.lang.Object)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$alterConfigs$1$$anonfun$13/AdminManager$$anonfun$alterConfigs$1$$anonfun$13(kafka.server.AdminManager$$anonfun$alterConfigs$1)|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$alterConfigs$1$$anonfun$apply$21/AdminManager$$anonfun$alterConfigs$1$$anonfun$apply$21(kafka.server.AdminManager$$anonfun$alterConfigs$1,java.lang.Throwable)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///scala/collection/IterableLike/foreach(scala.Function1)|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$alterConfigs$1$$anonfun$apply$19/AdminManager$$anonfun$alterConfigs$1$$anonfun$apply$19(kafka.server.AdminManager$$anonfun$alterConfigs$1,java.lang.Throwable)|",
      "|java+method:///kafka/server/AdminManager/kafka$server$AdminManager$$alterConfigPolicy()|",
      "|java+method:///scala/Predef$ArrowAssoc$/$minus$greater$extension(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/kafka/server/policy/AlterConfigPolicy/validate(org.apache.kafka.server.policy.AlterConfigPolicy$RequestMetadata)|",
      "|java+constructor:///java/util/Properties/Properties()|",
      "|java+method:///scala/collection/JavaConverters$/mapAsJavaMapConverter(scala.collection.Map)|",
      "|java+method:///org/apache/kafka/common/requests/AlterConfigsRequest$Config/entries()|",
      "|java+method:///scala/collection/TraversableOnce/toMap(scala.Predef$$less$colon$less)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/admin/AdminUtils$/changeTopicConfig(kafka.utils.ZkUtils,java.lang.String,java.util.Properties)|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$alterConfigs$1$$anonfun$apply$17/AdminManager$$anonfun$alterConfigs$1$$anonfun$apply$17(kafka.server.AdminManager$$anonfun$alterConfigs$1,java.lang.String)|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$alterConfigs$1$$anonfun$apply$20/AdminManager$$anonfun$alterConfigs$1$$anonfun$apply$20(kafka.server.AdminManager$$anonfun$alterConfigs$1,java.lang.String)|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$alterConfigs$1$$anonfun$apply$18/AdminManager$$anonfun$alterConfigs$1$$anonfun$apply$18(kafka.server.AdminManager$$anonfun$alterConfigs$1,java.lang.String)|",
      "|java+method:///scala/collection/TraversableLike/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/Predef$/$conforms()|",
      "|java+method:///org/apache/kafka/common/config/ConfigException/getMessage()|",
      "|java+constructor:///org/apache/kafka/common/errors/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+constructor:///org/apache/kafka/common/errors/InvalidRequestException/InvalidRequestException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///kafka/server/AdminManager/info(scala.Function0,scala.Function0)|",
      "|java+method:///kafka/admin/AdminUtils$/validateTopicConfig(kafka.utils.ZkUtils,java.lang.String,java.util.Properties)|",
      "|java+method:///kafka/server/AdminManager/error(scala.Function0,scala.Function0)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/collection/JavaConverters$/collectionAsScalaIterableConverter(java.util.Collection)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/kafka/common/config/ConfigResource/ConfigResource(org.apache.kafka.common.config.ConfigResource$Type,java.lang.String)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$alterConfigs$1$$anonfun$apply$19/AdminManager$$anonfun$alterConfigs$1$$anonfun$apply$19(kafka.server.AdminManager$$anonfun$alterConfigs$1,java.util.Properties)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///kafka/server/AdminManager/zkUtils()|",
      "|java+method:///org/apache/kafka/common/requests/Resource/type()|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///kafka/server/AdminManager/info(scala.Function0)|",
      "|java+method:///scala/Some/x()|",
      "|java+method:///org/apache/kafka/common/requests/Resource/name()|",
      "|java+constructor:///org/apache/kafka/server/policy/AlterConfigPolicy$RequestMetadata/AlterConfigPolicy$RequestMetadata(org.apache.kafka.common.config.ConfigResource,java.util.Map)|",
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///org/apache/kafka/common/requests/ApiError/fromThrowable(java.lang.Throwable)|",
      "|java+method:///scala/collection/Iterable$/canBuildFrom()|",
      "|java+method:///scala/Predef$/ArrowAssoc(java.lang.Object)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$alterConfigs$1$$anonfun$apply$24/AdminManager$$anonfun$alterConfigs$1$$anonfun$apply$24(kafka.server.AdminManager$$anonfun$alterConfigs$1,java.lang.Throwable)|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$alterConfigs$1$$anonfun$20/AdminManager$$anonfun$alterConfigs$1$$anonfun$20(kafka.server.AdminManager$$anonfun$alterConfigs$1)|",
      "|java+method:///scala/collection/IterableLike/foreach(scala.Function1)|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$alterConfigs$1$$anonfun$apply$22/AdminManager$$anonfun$alterConfigs$1$$anonfun$apply$22(kafka.server.AdminManager$$anonfun$alterConfigs$1,java.lang.Throwable)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///kafka/server/AdminManager/kafka$server$AdminManager$$alterConfigPolicy()|",
      "|java+method:///scala/Predef$ArrowAssoc$/$minus$greater$extension(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/kafka/server/policy/AlterConfigPolicy/validate(org.apache.kafka.server.policy.AlterConfigPolicy$RequestMetadata)|",
      "|java+constructor:///java/util/Properties/Properties()|",
      "|java+method:///scala/collection/JavaConverters$/mapAsJavaMapConverter(scala.collection.Map)|",
      "|java+method:///org/apache/kafka/common/requests/AlterConfigsRequest$Config/entries()|",
      "|java+method:///scala/collection/TraversableOnce/toMap(scala.Predef$$less$colon$less)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$alterConfigs$1$$anonfun$apply$20/AdminManager$$anonfun$alterConfigs$1$$anonfun$apply$20(kafka.server.AdminManager$$anonfun$alterConfigs$1,java.lang.String)|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$alterConfigs$1$$anonfun$apply$23/AdminManager$$anonfun$alterConfigs$1$$anonfun$apply$23(kafka.server.AdminManager$$anonfun$alterConfigs$1,java.lang.String)|",
      "|java+method:///kafka/admin/AdminUtils$/changeTopicConfig(kafka.utils.ZkUtils,java.lang.String,java.util.Properties)|",
      "|java+constructor:///kafka/server/AdminManager$$anonfun$alterConfigs$1$$anonfun$apply$21/AdminManager$$anonfun$alterConfigs$1$$anonfun$apply$21(kafka.server.AdminManager$$anonfun$alterConfigs$1,java.lang.String)|",
      "|java+method:///scala/collection/TraversableLike/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/Predef$/$conforms()|",
      "|java+method:///org/apache/kafka/common/config/ConfigException/getMessage()|",
      "|java+constructor:///org/apache/kafka/common/errors/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+constructor:///org/apache/kafka/common/errors/InvalidRequestException/InvalidRequestException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///kafka/server/AdminManager/info(scala.Function0,scala.Function0)|",
      "|java+method:///kafka/admin/AdminUtils$/validateTopicConfig(kafka.utils.ZkUtils,java.lang.String,java.util.Properties)|",
      "|java+method:///kafka/server/AdminManager/error(scala.Function0,scala.Function0)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/collection/JavaConverters$/collectionAsScalaIterableConverter(java.util.Collection)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/admin/ConsumerGroupCommand$ZkConsumerGroupService$$anonfun$getZkConsumer$1/apply(kafka.cluster.Broker)|",
    "called": "|java+method:///org/apache/kafka/common/network/ListenerName/forSecurityProtocol(org.apache.kafka.common.security.auth.SecurityProtocol)|",
    "v1Body": [
      "|java+method:///kafka/cluster/Broker/getBrokerEndPoint(org.apache.kafka.common.network.ListenerName)|",
      "|java+method:///org/apache/kafka/common/network/ListenerName/forSecurityProtocol(org.apache.kafka.common.protocol.SecurityProtocol)|"
    ],
    "v2Body": [
      "|java+method:///kafka/cluster/Broker/getBrokerEndPoint(org.apache.kafka.common.network.ListenerName)|",
      "|java+method:///org/apache/kafka/common/network/ListenerName/forSecurityProtocol(org.apache.kafka.common.security.auth.SecurityProtocol)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/ReplicaFetcherThread/processPartitionData(org.apache.kafka.common.TopicPartition,long,kafka.server.ReplicaFetcherThread$PartitionData)|",
    "called": "|java+method:///org/apache/kafka/common/record/MemoryRecords/sizeInBytes()|",
    "v1Body": [
      "|java+method:///kafka/server/ReplicaFetcherThread$PartitionData/toRecords()|",
      "|java+method:///scala/Predef$/longWrapper(long)|",
      "|java+method:///kafka/server/ReplicationQuotaManager/record(long)|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///kafka/server/ReplicaFetcherThread/fatal(scala.Function0,scala.Function0)|",
      "|java+constructor:///kafka/server/LogOffsetMetadata/LogOffsetMetadata(long,long,int)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///kafka/utils/Exit$/halt(int,scala.Option)|",
      "|java+method:///kafka/server/ReplicaManager/getReplica(org.apache.kafka.common.TopicPartition)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/utils/Exit$/halt$default$2()|",
      "|java+method:///kafka/cluster/Replica/highWatermark_$eq(kafka.server.LogOffsetMetadata)|",
      "|java+method:///org/apache/kafka/common/record/MemoryRecords/sizeInBytes()|",
      "|java+method:///kafka/server/ReplicaFetcherThread$PartitionData/highWatermark()|",
      "|java+constructor:///kafka/server/ReplicaFetcherThread$$anonfun$processPartitionData$5/ReplicaFetcherThread$$anonfun$processPartitionData$5(kafka.server.ReplicaFetcherThread,kafka.common.KafkaStorageException)|",
      "|java+method:///kafka/server/ReplicaFetcherThread/trace(scala.Function0)|",
      "|java+method:///kafka/server/LogOffsetMetadata/messageOffset()|",
      "|java+method:///kafka/cluster/Replica/log()|",
      "|java+method:///kafka/cluster/Replica/maybeIncrementLogStartOffset(long)|",
      "|java+method:///kafka/server/BrokerTopicStats/updateReplicationBytesIn(long)|",
      "|java+method:///kafka/server/ReplicaFetcherThread$PartitionData/logStartOffset()|",
      "|java+constructor:///kafka/server/ReplicaFetcherThread$$anonfun$processPartitionData$2/ReplicaFetcherThread$$anonfun$processPartitionData$2(kafka.server.ReplicaFetcherThread,org.apache.kafka.common.TopicPartition,kafka.cluster.Replica,org.apache.kafka.common.record.MemoryRecords)|",
      "|java+constructor:///kafka/server/ReplicaFetcherThread$$anonfun$processPartitionData$1/ReplicaFetcherThread$$anonfun$processPartitionData$1(kafka.server.ReplicaFetcherThread,org.apache.kafka.common.TopicPartition,kafka.server.ReplicaFetcherThread$PartitionData,kafka.cluster.Replica,org.apache.kafka.common.record.MemoryRecords)|",
      "|java+method:///scala/runtime/RichLong$/min$extension(long,long)|",
      "|java+method:///org/apache/log4j/Logger/isTraceEnabled()|",
      "|java+method:///kafka/cluster/Replica/logEndOffset()|",
      "|java+method:///kafka/server/ReplicationQuotaManager/isThrottled(org.apache.kafka.common.TopicPartition)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///kafka/log/Log/appendAsFollower(org.apache.kafka.common.record.MemoryRecords)|",
      "|java+method:///kafka/server/ReplicaManager/brokerTopicStats()|",
      "|java+method:///kafka/server/LogOffsetMetadata$/$lessinit$greater$default$2()|",
      "|java+method:///kafka/server/ReplicaFetcherThread/maybeWarnIfOversizedRecords(org.apache.kafka.common.record.MemoryRecords,org.apache.kafka.common.TopicPartition)|",
      "|java+method:///kafka/server/ReplicaFetcherThread/logger()|",
      "|java+method:///kafka/server/LogOffsetMetadata$/$lessinit$greater$default$3()|",
      "|java+constructor:///kafka/server/ReplicaFetcherThread$$anonfun$processPartitionData$4/ReplicaFetcherThread$$anonfun$processPartitionData$4(kafka.server.ReplicaFetcherThread,org.apache.kafka.common.TopicPartition)|",
      "|java+constructor:///kafka/server/ReplicaFetcherThread$$anonfun$processPartitionData$3/ReplicaFetcherThread$$anonfun$processPartitionData$3(kafka.server.ReplicaFetcherThread,org.apache.kafka.common.TopicPartition,kafka.cluster.Replica,long)|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+method:///scala/Option/get()|"
    ],
    "v2Body": [
      "|java+method:///kafka/server/ReplicaFetcherThread$PartitionData/toRecords()|",
      "|java+method:///scala/Predef$/longWrapper(long)|",
      "|java+method:///kafka/server/ReplicationQuotaManager/record(long)|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+constructor:///kafka/server/LogOffsetMetadata/LogOffsetMetadata(long,long,int)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/cluster/Replica/highWatermark_$eq(kafka.server.LogOffsetMetadata)|",
      "|java+method:///org/apache/kafka/common/record/MemoryRecords/sizeInBytes()|",
      "|java+method:///kafka/server/ReplicaFetcherThread$PartitionData/highWatermark()|",
      "|java+method:///kafka/server/ReplicaFetcherThread/trace(scala.Function0)|",
      "|java+method:///kafka/server/LogOffsetMetadata/messageOffset()|",
      "|java+method:///kafka/cluster/Replica/log()|",
      "|java+method:///kafka/cluster/Replica/maybeIncrementLogStartOffset(long)|",
      "|java+method:///kafka/server/BrokerTopicStats/updateReplicationBytesIn(long)|",
      "|java+method:///kafka/server/ReplicaFetcherThread$PartitionData/logStartOffset()|",
      "|java+constructor:///kafka/server/ReplicaFetcherThread$$anonfun$processPartitionData$3/ReplicaFetcherThread$$anonfun$processPartitionData$3(kafka.server.ReplicaFetcherThread,org.apache.kafka.common.TopicPartition,long)|",
      "|java+method:///kafka/server/ReplicaManager/getReplicaOrException(org.apache.kafka.common.TopicPartition)|",
      "|java+constructor:///kafka/server/ReplicaFetcherThread$$anonfun$processPartitionData$2/ReplicaFetcherThread$$anonfun$processPartitionData$2(kafka.server.ReplicaFetcherThread,org.apache.kafka.common.TopicPartition,kafka.cluster.Replica,org.apache.kafka.common.record.MemoryRecords)|",
      "|java+constructor:///kafka/server/ReplicaFetcherThread$$anonfun$processPartitionData$1/ReplicaFetcherThread$$anonfun$processPartitionData$1(kafka.server.ReplicaFetcherThread,org.apache.kafka.common.TopicPartition,kafka.server.ReplicaFetcherThread$PartitionData,kafka.cluster.Replica,org.apache.kafka.common.record.MemoryRecords)|",
      "|java+method:///scala/runtime/RichLong$/min$extension(long,long)|",
      "|java+method:///org/apache/log4j/Logger/isTraceEnabled()|",
      "|java+method:///kafka/cluster/Replica/logEndOffset()|",
      "|java+method:///kafka/server/ReplicationQuotaManager/isThrottled(org.apache.kafka.common.TopicPartition)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///kafka/log/Log/appendAsFollower(org.apache.kafka.common.record.MemoryRecords)|",
      "|java+method:///kafka/server/ReplicaManager/brokerTopicStats()|",
      "|java+method:///kafka/server/LogOffsetMetadata$/$lessinit$greater$default$2()|",
      "|java+method:///kafka/server/ReplicaFetcherThread/maybeWarnIfOversizedRecords(org.apache.kafka.common.record.MemoryRecords,org.apache.kafka.common.TopicPartition)|",
      "|java+method:///kafka/server/ReplicaFetcherThread/logger()|",
      "|java+method:///kafka/server/LogOffsetMetadata$/$lessinit$greater$default$3()|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+method:///scala/Option/get()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/KafkaApis/handleUpdateMetadataRequest(kafka.network.RequestChannel$Request)|",
    "called": "|java+constructor:///org/apache/kafka/common/requests/UpdateMetadataResponse/UpdateMetadataResponse(org.apache.kafka.common.protocol.Errors)|",
    "v1Body": [
      "|java+method:///scala/collection/SetLike/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///org/apache/kafka/common/requests/UpdateMetadataRequest/partitionStates()|",
      "|java+constructor:///org/apache/kafka/common/requests/UpdateMetadataResponse/UpdateMetadataResponse(org.apache.kafka.common.protocol.Errors)|",
      "|java+method:///kafka/network/RequestChannel$Request/header()|",
      "|java+method:///kafka/network/RequestChannel$Request/body(scala.reflect.ClassTag,kafka.utils.NotNothing)|",
      "|java+method:///kafka/network/RequestChannel$Response$/apply(kafka.network.RequestChannel$Request,org.apache.kafka.common.requests.AbstractResponse)|",
      "|java+method:///scala/collection/Seq/nonEmpty()|",
      "|java+method:///kafka/coordinator/group/GroupCoordinator/handleDeletedPartitions(scala.collection.Seq)|",
      "|java+method:///kafka/server/KafkaApis/sendResponseExemptThrottle(kafka.network.RequestChannel$Response)|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///kafka/server/KafkaApis/groupCoordinator()|",
      "|java+method:///scala/Predef$$eq$colon$eq$/tpEquals()|",
      "|java+method:///scala/collection/JavaConverters$/asScalaSetConverter(java.util.Set)|",
      "|java+method:///kafka/server/KafkaApis/kafka$server$KafkaApis$$authorize(kafka.network.RequestChannel$Session,kafka.security.auth.Operation,kafka.security.auth.Resource)|",
      "|java+method:///kafka/server/AdminManager/hasDelayedTopicOperations()|",
      "|java+method:///kafka/server/KafkaApis/replicaManager()|",
      "|java+method:///kafka/server/KafkaApis/sendResponseMaybeThrottle(kafka.network.RequestChannel$Request,scala.Function1)|",
      "|java+method:///kafka/server/ReplicaManager/maybeUpdateMetadataCache(int,org.apache.kafka.common.requests.UpdateMetadataRequest)|",
      "|java+method:///kafka/network/RequestChannel$Request/session()|",
      "|java+method:///kafka/security/auth/Resource$/ClusterResource()|",
      "|java+method:///kafka/server/KafkaApis/adminManager()|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///scala/collection/IterableLike/foreach(scala.Function1)|",
      "|java+method:///kafka/utils/NotNothing$/notNothingEvidence(scala.Predef$$eq$colon$eq)|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$handleUpdateMetadataRequest$2/KafkaApis$$anonfun$handleUpdateMetadataRequest$2(kafka.server.KafkaApis)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$handleUpdateMetadataRequest$1/KafkaApis$$anonfun$handleUpdateMetadataRequest$1(kafka.server.KafkaApis)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$handleUpdateMetadataRequest$3/KafkaApis$$anonfun$handleUpdateMetadataRequest$3(kafka.server.KafkaApis)|",
      "|java+method:///scala/collection/mutable/Set$/canBuildFrom()|",
      "|java+method:///org/apache/kafka/common/requests/RequestHeader/correlationId()|"
    ],
    "v2Body": [
      "|java+method:///scala/collection/SetLike/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///org/apache/kafka/common/requests/UpdateMetadataRequest/partitionStates()|",
      "|java+constructor:///org/apache/kafka/common/requests/UpdateMetadataResponse/UpdateMetadataResponse(org.apache.kafka.common.protocol.Errors)|",
      "|java+method:///kafka/network/RequestChannel$Request/header()|",
      "|java+method:///kafka/network/RequestChannel$Request/body(scala.reflect.ClassTag,kafka.utils.NotNothing)|",
      "|java+method:///scala/collection/Seq/nonEmpty()|",
      "|java+method:///kafka/coordinator/group/GroupCoordinator/handleDeletedPartitions(scala.collection.Seq)|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///kafka/server/KafkaApis/groupCoordinator()|",
      "|java+method:///scala/Predef$$eq$colon$eq$/tpEquals()|",
      "|java+method:///scala/collection/JavaConverters$/asScalaSetConverter(java.util.Set)|",
      "|java+method:///kafka/server/KafkaApis/kafka$server$KafkaApis$$authorize(kafka.network.RequestChannel$Session,kafka.security.auth.Operation,kafka.security.auth.Resource)|",
      "|java+method:///kafka/server/AdminManager/hasDelayedTopicOperations()|",
      "|java+method:///kafka/server/KafkaApis/replicaManager()|",
      "|java+method:///kafka/server/KafkaApis/sendResponseMaybeThrottle(kafka.network.RequestChannel$Request,scala.Function1)|",
      "|java+method:///kafka/server/ReplicaManager/maybeUpdateMetadataCache(int,org.apache.kafka.common.requests.UpdateMetadataRequest)|",
      "|java+method:///kafka/network/RequestChannel$Request/session()|",
      "|java+method:///kafka/security/auth/Resource$/ClusterResource()|",
      "|java+method:///kafka/server/KafkaApis/adminManager()|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///scala/collection/IterableLike/foreach(scala.Function1)|",
      "|java+method:///kafka/utils/NotNothing$/notNothingEvidence(scala.Predef$$eq$colon$eq)|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$handleUpdateMetadataRequest$2/KafkaApis$$anonfun$handleUpdateMetadataRequest$2(kafka.server.KafkaApis)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$handleUpdateMetadataRequest$1/KafkaApis$$anonfun$handleUpdateMetadataRequest$1(kafka.server.KafkaApis)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$handleUpdateMetadataRequest$3/KafkaApis$$anonfun$handleUpdateMetadataRequest$3(kafka.server.KafkaApis)|",
      "|java+method:///scala/collection/mutable/Set$/canBuildFrom()|",
      "|java+method:///kafka/server/KafkaApis/sendResponseExemptThrottle(kafka.network.RequestChannel$Request,org.apache.kafka.common.requests.AbstractResponse)|",
      "|java+method:///org/apache/kafka/common/requests/RequestHeader/correlationId()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/MetadataCache$$anonfun$kafka$server$MetadataCache$$getPartitionMetadata$1$$anonfun$apply$1/apply(scala.Tuple2)|",
    "called": "|java+constructor:///org/apache/kafka/common/requests/MetadataResponse$PartitionMetadata/MetadataResponse$PartitionMetadata(org.apache.kafka.common.protocol.Errors,int,org.apache.kafka.common.Node,java.util.List,java.util.List,java.util.List)|",
    "v1Body": [
      "|java+method:///scala/Some/x()|",
      "|java+method:///kafka/server/MetadataCache/kafka$server$MetadataCache$$getEndpoints(scala.collection.Iterable,org.apache.kafka.common.network.ListenerName,boolean)|",
      "|java+constructor:///kafka/server/MetadataCache$$anonfun$kafka$server$MetadataCache$$getPartitionMetadata$1$$anonfun$apply$1$$anonfun$apply$5/MetadataCache$$anonfun$kafka$server$MetadataCache$$getPartitionMetadata$1$$anonfun$apply$1$$anonfun$apply$5(kafka.server.MetadataCache$$anonfun$kafka$server$MetadataCache$$getPartitionMetadata$1$$anonfun$apply$1,kafka.common.TopicAndPartition,scala.collection.immutable.List,scala.collection.Seq)|",
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/Node/noNode()|",
      "|java+method:///kafka/server/MetadataCache/debug(scala.Function0)|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+constructor:///kafka/server/MetadataCache$$anonfun$kafka$server$MetadataCache$$getPartitionMetadata$1$$anonfun$apply$1$$anonfun$apply$2/MetadataCache$$anonfun$kafka$server$MetadataCache$$getPartitionMetadata$1$$anonfun$apply$1$$anonfun$apply$2(kafka.server.MetadataCache$$anonfun$kafka$server$MetadataCache$$getPartitionMetadata$1$$anonfun$apply$1,kafka.common.TopicAndPartition)|",
      "|java+constructor:///kafka/server/MetadataCache$$anonfun$kafka$server$MetadataCache$$getPartitionMetadata$1$$anonfun$apply$1$$anonfun$apply$3/MetadataCache$$anonfun$kafka$server$MetadataCache$$getPartitionMetadata$1$$anonfun$apply$1$$anonfun$apply$3(kafka.server.MetadataCache$$anonfun$kafka$server$MetadataCache$$getPartitionMetadata$1$$anonfun$apply$1,kafka.common.TopicAndPartition,scala.collection.Seq,scala.collection.Seq)|",
      "|java+method:///scala/collection/Seq/size()|",
      "|java+method:///scala/collection/immutable/List/size()|",
      "|java+method:///scala/Tuple2/_1$mcI$sp()|",
      "|java+method:///kafka/server/MetadataCache/getAliveEndpoint(int,org.apache.kafka.common.network.ListenerName)|",
      "|java+method:///kafka/server/MetadataCache$$anonfun$kafka$server$MetadataCache$$getPartitionMetadata$1/kafka$server$MetadataCache$$anonfun$$$outer()|",
      "|java+method:///kafka/api/LeaderAndIsr/isr()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///kafka/api/PartitionStateInfo/leaderIsrAndControllerEpoch()|",
      "|java+constructor:///kafka/common/TopicAndPartition/TopicAndPartition(java.lang.String,int)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///org/apache/kafka/common/requests/MetadataResponse$PartitionMetadata/MetadataResponse$PartitionMetadata(org.apache.kafka.common.protocol.Errors,int,org.apache.kafka.common.Node,java.util.List,java.util.List)|",
      "|java+method:///kafka/controller/LeaderIsrAndControllerEpoch/leaderAndIsr()|",
      "|java+method:///kafka/api/PartitionStateInfo/allReplicas()|",
      "|java+method:///kafka/api/LeaderAndIsr/leader()|",
      "|java+method:///scala/collection/JavaConverters$/seqAsJavaListConverter(scala.collection.Seq)|"
    ],
    "v2Body": [
      "|java+method:///kafka/server/MetadataCache/kafka$server$MetadataCache$$getEndpoints(scala.collection.Iterable,org.apache.kafka.common.network.ListenerName,boolean)|",
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///org/apache/kafka/common/Node/noNode()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+constructor:///kafka/server/MetadataCache$$anonfun$kafka$server$MetadataCache$$getPartitionMetadata$1$$anonfun$apply$1$$anonfun$apply$2/MetadataCache$$anonfun$kafka$server$MetadataCache$$getPartitionMetadata$1$$anonfun$apply$1$$anonfun$apply$2(kafka.server.MetadataCache$$anonfun$kafka$server$MetadataCache$$getPartitionMetadata$1$$anonfun$apply$1,kafka.common.TopicAndPartition)|",
      "|java+method:///scala/collection/JavaConverters$/asScalaBufferConverter(java.util.List)|",
      "|java+constructor:///kafka/common/TopicAndPartition/TopicAndPartition(java.lang.String,int)|",
      "|java+constructor:///org/apache/kafka/common/requests/MetadataResponse$PartitionMetadata/MetadataResponse$PartitionMetadata(org.apache.kafka.common.protocol.Errors,int,org.apache.kafka.common.Node,java.util.List,java.util.List,java.util.List)|",
      "|java+method:///scala/collection/Seq/size()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///scala/collection/TraversableLike/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/collection/mutable/Buffer/size()|",
      "|java+method:///scala/collection/JavaConverters$/seqAsJavaListConverter(scala.collection.Seq)|",
      "|java+method:///scala/Tuple2/_1$mcI$sp()|",
      "|java+method:///scala/Some/x()|",
      "|java+constructor:///kafka/server/MetadataCache$$anonfun$kafka$server$MetadataCache$$getPartitionMetadata$1$$anonfun$apply$1$$anonfun$apply$5/MetadataCache$$anonfun$kafka$server$MetadataCache$$getPartitionMetadata$1$$anonfun$apply$1$$anonfun$apply$5(kafka.server.MetadataCache$$anonfun$kafka$server$MetadataCache$$getPartitionMetadata$1$$anonfun$apply$1,kafka.common.TopicAndPartition,scala.collection.mutable.Buffer,scala.collection.Seq)|",
      "|java+method:///scala/collection/mutable/Buffer$/canBuildFrom()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+constructor:///kafka/server/MetadataCache$$anonfun$kafka$server$MetadataCache$$getPartitionMetadata$1$$anonfun$apply$1$$anonfun$apply$3/MetadataCache$$anonfun$kafka$server$MetadataCache$$getPartitionMetadata$1$$anonfun$apply$1$$anonfun$apply$3(kafka.server.MetadataCache$$anonfun$kafka$server$MetadataCache$$getPartitionMetadata$1$$anonfun$apply$1,kafka.common.TopicAndPartition,scala.collection.mutable.Buffer,scala.collection.Seq)|",
      "|java+constructor:///kafka/server/MetadataCache$$anonfun$kafka$server$MetadataCache$$getPartitionMetadata$1$$anonfun$apply$1$$anonfun$3/MetadataCache$$anonfun$kafka$server$MetadataCache$$getPartitionMetadata$1$$anonfun$apply$1$$anonfun$3(kafka.server.MetadataCache$$anonfun$kafka$server$MetadataCache$$getPartitionMetadata$1$$anonfun$apply$1)|",
      "|java+constructor:///kafka/server/MetadataCache$$anonfun$kafka$server$MetadataCache$$getPartitionMetadata$1$$anonfun$apply$1$$anonfun$2/MetadataCache$$anonfun$kafka$server$MetadataCache$$getPartitionMetadata$1$$anonfun$apply$1$$anonfun$2(kafka.server.MetadataCache$$anonfun$kafka$server$MetadataCache$$getPartitionMetadata$1$$anonfun$apply$1)|",
      "|java+method:///kafka/server/MetadataCache/getAliveEndpoint(int,org.apache.kafka.common.network.ListenerName)|",
      "|java+method:///kafka/server/MetadataCache$$anonfun$kafka$server$MetadataCache$$getPartitionMetadata$1/kafka$server$MetadataCache$$anonfun$$$outer()|",
      "|java+method:///kafka/server/MetadataCache/debug(scala.Function0)|",
      "|java+constructor:///kafka/server/MetadataCache$$anonfun$kafka$server$MetadataCache$$getPartitionMetadata$1$$anonfun$apply$1$$anonfun$1/MetadataCache$$anonfun$kafka$server$MetadataCache$$getPartitionMetadata$1$$anonfun$apply$1$$anonfun$1(kafka.server.MetadataCache$$anonfun$kafka$server$MetadataCache$$getPartitionMetadata$1$$anonfun$apply$1)|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/coordinator/transaction/TransactionCoordinator$/apply(kafka.server.KafkaConfig,kafka.server.ReplicaManager,kafka.utils.Scheduler,kafka.utils.ZkUtils,org.apache.kafka.common.metrics.Metrics,kafka.server.MetadataCache,org.apache.kafka.common.utils.Time)|",
    "called": "|java+constructor:///org/apache/kafka/common/utils/LogContext/LogContext(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///kafka/coordinator/transaction/TransactionStateManager/TransactionStateManager(int,kafka.utils.ZkUtils,kafka.utils.Scheduler,kafka.server.ReplicaManager,kafka.coordinator.transaction.TransactionConfig,org.apache.kafka.common.utils.Time)|",
      "|java+method:///kafka/server/KafkaConfig/transactionalIdExpirationMs()|",
      "|java+method:///kafka/server/DelayedOperationPurgatory$/apply$default$3()|",
      "|java+constructor:///kafka/coordinator/transaction/TransactionCoordinator/TransactionCoordinator(int,kafka.coordinator.transaction.TransactionConfig,kafka.utils.Scheduler,kafka.coordinator.transaction.ProducerIdManager,kafka.coordinator.transaction.TransactionStateManager,kafka.coordinator.transaction.TransactionMarkerChannelManager,org.apache.kafka.common.utils.Time)|",
      "|java+method:///kafka/server/KafkaConfig/transactionTopicMinISR()|",
      "|java+method:///kafka/server/KafkaConfig/transactionTopicSegmentBytes()|",
      "|java+method:///kafka/server/KafkaConfig/transactionMaxTimeoutMs()|",
      "|java+method:///scala/Predef$/Short2short(java.lang.Short)|",
      "|java+method:///kafka/server/KafkaConfig/transactionRemoveExpiredTransactionalIdCleanupIntervalMs()|",
      "|java+method:///kafka/coordinator/transaction/TransactionMarkerChannelManager$/apply(kafka.server.KafkaConfig,org.apache.kafka.common.metrics.Metrics,kafka.server.MetadataCache,kafka.coordinator.transaction.TransactionStateManager,kafka.server.DelayedOperationPurgatory,org.apache.kafka.common.utils.Time)|",
      "|java+method:///kafka/server/KafkaConfig/requestTimeoutMs()|",
      "|java+method:///kafka/server/KafkaConfig/transactionAbortTimedOutTransactionCleanupIntervalMs()|",
      "|java+method:///kafka/server/KafkaConfig/transactionTopicPartitions()|",
      "|java+constructor:///kafka/coordinator/transaction/TransactionConfig/TransactionConfig(int,int,int,short,int,int,int,int,int,int)|",
      "|java+method:///kafka/server/KafkaConfig/transactionsLoadBufferSize()|",
      "|java+method:///kafka/server/KafkaConfig/brokerId()|",
      "|java+method:///kafka/server/KafkaConfig/transactionTopicReplicationFactor()|",
      "|java+method:///kafka/server/DelayedOperationPurgatory$/apply(java.lang.String,int,int,boolean,boolean)|",
      "|java+constructor:///kafka/coordinator/transaction/ProducerIdManager/ProducerIdManager(int,kafka.utils.ZkUtils)|",
      "|java+method:///scala/Predef$/Integer2int(java.lang.Integer)|"
    ],
    "v2Body": [
      "|java+constructor:///kafka/coordinator/transaction/TransactionStateManager/TransactionStateManager(int,kafka.utils.ZkUtils,kafka.utils.Scheduler,kafka.server.ReplicaManager,kafka.coordinator.transaction.TransactionConfig,org.apache.kafka.common.utils.Time)|",
      "|java+method:///kafka/server/KafkaConfig/transactionalIdExpirationMs()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///kafka/server/KafkaConfig/transactionTopicMinISR()|",
      "|java+method:///kafka/server/KafkaConfig/transactionTopicSegmentBytes()|",
      "|java+method:///scala/Predef$/Short2short(java.lang.Short)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///kafka/server/KafkaConfig/transactionRemoveExpiredTransactionalIdCleanupIntervalMs()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/server/KafkaConfig/transactionAbortTimedOutTransactionCleanupIntervalMs()|",
      "|java+method:///kafka/server/KafkaConfig/transactionTopicPartitions()|",
      "|java+constructor:///kafka/coordinator/transaction/TransactionConfig/TransactionConfig(int,int,int,short,int,int,int,int,int,int)|",
      "|java+method:///kafka/server/KafkaConfig/transactionsLoadBufferSize()|",
      "|java+constructor:///org/apache/kafka/common/utils/LogContext/LogContext(java.lang.String)|",
      "|java+method:///kafka/server/DelayedOperationPurgatory$/apply$default$3()|",
      "|java+constructor:///kafka/coordinator/transaction/TransactionCoordinator/TransactionCoordinator(int,kafka.coordinator.transaction.TransactionConfig,kafka.utils.Scheduler,kafka.coordinator.transaction.ProducerIdManager,kafka.coordinator.transaction.TransactionStateManager,kafka.coordinator.transaction.TransactionMarkerChannelManager,org.apache.kafka.common.utils.Time,org.apache.kafka.common.utils.LogContext)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///kafka/server/KafkaConfig/transactionMaxTimeoutMs()|",
      "|java+method:///kafka/coordinator/transaction/TransactionMarkerChannelManager$/apply(kafka.server.KafkaConfig,org.apache.kafka.common.metrics.Metrics,kafka.server.MetadataCache,kafka.coordinator.transaction.TransactionStateManager,kafka.server.DelayedOperationPurgatory,org.apache.kafka.common.utils.Time,org.apache.kafka.common.utils.LogContext)|",
      "|java+method:///kafka/server/KafkaConfig/brokerId()|",
      "|java+method:///kafka/server/KafkaConfig/transactionTopicReplicationFactor()|",
      "|java+method:///kafka/server/DelayedOperationPurgatory$/apply(java.lang.String,int,int,boolean,boolean)|",
      "|java+constructor:///kafka/coordinator/transaction/ProducerIdManager/ProducerIdManager(int,kafka.utils.ZkUtils)|",
      "|java+method:///scala/Predef$/Integer2int(java.lang.Integer)|",
      "|java+method:///kafka/server/KafkaConfig/requestTimeoutMs()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+constructor:///kafka/network/RequestChannel$Session/RequestChannel$Session(org.apache.kafka.common.security.auth.KafkaPrincipal,java.net.InetAddress)|",
    "called": "|java+method:///org/apache/kafka/common/utils/Sanitizer/sanitize(java.lang.String)|",
    "v1Body": [
      "|java+method:///scala/Product$class/$init$(scala.Product)|",
      "|java+method:///org/apache/kafka/common/security/auth/KafkaPrincipal/getName()|",
      "|java+method:///kafka/server/QuotaId$/sanitize(java.lang.String)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///scala/Product$class/$init$(scala.Product)|",
      "|java+method:///org/apache/kafka/common/utils/Sanitizer/sanitize(java.lang.String)|",
      "|java+method:///org/apache/kafka/common/security/auth/KafkaPrincipal/getName()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$2/apply(scala.Tuple2)|",
    "called": "|java+constructor:///org/apache/kafka/common/requests/LeaderAndIsrRequest$Builder/LeaderAndIsrRequest$Builder(short,int,int,java.util.Map,java.util.Set)|",
    "v1Body": [
      "|java+method:///scala/collection/SetLike/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///scala/collection/Set$/canBuildFrom()|",
      "|java+method:///scala/collection/mutable/Map/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///kafka/controller/ControllerBrokerRequestBatch/controllerContext()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///scala/collection/mutable/Iterable$/canBuildFrom()|",
      "|java+method:///scala/collection/mutable/Map/foreach(scala.Function1)|",
      "|java+method:///kafka/controller/KafkaController/sendRequest$default$4()|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$2$$anonfun$4/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$2$$anonfun$4(kafka.controller.ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$2,scala.collection.immutable.Set)|",
      "|java+method:///kafka/controller/ControllerContext/liveOrShuttingDownBrokers()|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$2$$anonfun$apply$1/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$2$$anonfun$apply$1(kafka.controller.ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$2,int)|",
      "|java+method:///scala/Tuple2/_1$mcI$sp()|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$2$$anonfun$6/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$2$$anonfun$6(kafka.controller.ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$2)|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$2$$anonfun$3/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$2$$anonfun$3(kafka.controller.ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$2)|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$2$$anonfun$5/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$2$$anonfun$5(kafka.controller.ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$2)|",
      "|java+method:///kafka/controller/KafkaController/sendRequest(int,org.apache.kafka.common.protocol.ApiKeys,org.apache.kafka.common.requests.AbstractRequest$Builder,scala.Function1)|",
      "|java+method:///scala/collection/JavaConverters$/mutableMapAsJavaMapConverter(scala.collection.mutable.Map)|",
      "|java+method:///scala/collection/Set/filter(scala.Function1)|",
      "|java+method:///scala/collection/JavaConverters$/setAsJavaSetConverter(scala.collection.Set)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/controller/ControllerBrokerRequestBatch/controllerId()|",
      "|java+constructor:///org/apache/kafka/common/requests/LeaderAndIsrRequest$Builder/LeaderAndIsrRequest$Builder(int,int,java.util.Map,java.util.Set)|",
      "|java+method:///scala/collection/mutable/Map$/canBuildFrom()|",
      "|java+method:///scala/collection/TraversableOnce/toSet()|"
    ],
    "v2Body": [
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$2$$anonfun$8/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$2$$anonfun$8(kafka.controller.ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$2)|",
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///scala/collection/Set$/canBuildFrom()|",
      "|java+method:///kafka/controller/ControllerBrokerRequestBatch/controllerContext()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///scala/collection/mutable/Iterable$/canBuildFrom()|",
      "|java+method:///scala/collection/mutable/Map/foreach(scala.Function1)|",
      "|java+method:///scala/collection/TraversableOnce/toSet()|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$2$$anonfun$9/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$2$$anonfun$9(kafka.controller.ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$2,scala.collection.immutable.Set)|",
      "|java+method:///kafka/controller/ControllerContext/liveOrShuttingDownBrokers()|",
      "|java+method:///scala/Tuple2/_1$mcI$sp()|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$2$$anonfun$10/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$2$$anonfun$10(kafka.controller.ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$2)|",
      "|java+method:///scala/collection/SetLike/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///kafka/controller/KafkaController/sendRequest(int,org.apache.kafka.common.protocol.ApiKeys,org.apache.kafka.common.requests.AbstractRequest$Builder,scala.Function1)|",
      "|java+method:///scala/collection/JavaConverters$/mutableMapAsJavaMapConverter(scala.collection.mutable.Map)|",
      "|java+constructor:///org/apache/kafka/common/requests/LeaderAndIsrRequest$Builder/LeaderAndIsrRequest$Builder(short,int,int,java.util.Map,java.util.Set)|",
      "|java+method:///scala/collection/mutable/Map/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/collection/Set/filter(scala.Function1)|",
      "|java+method:///scala/collection/JavaConverters$/setAsJavaSetConverter(scala.collection.Set)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/controller/ControllerBrokerRequestBatch/controllerId()|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$2$$anonfun$apply$5/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$2$$anonfun$apply$5(kafka.controller.ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$2,int)|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$2$$anonfun$apply$3/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$2$$anonfun$apply$3(kafka.controller.ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$2,int)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/network/Processor/configureNewConnections()|",
    "called": "|java+method:///org/apache/kafka/common/network/Selector/register(java.lang.String,java.nio.channels.SocketChannel)|",
    "v1Body": [
      "|java+method:///java/net/InetAddress/getHostAddress()|",
      "|java+method:///java/nio/channels/SocketChannel/getRemoteAddress()|",
      "|java+method:///java/net/Socket/getLocalPort()|",
      "|java+method:///kafka/network/Processor/debug(scala.Function0)|",
      "|java+method:///kafka/network/Processor$ConnectionId$/apply(java.lang.String,int,java.lang.String,int)|",
      "|java+method:///kafka/network/Processor/kafka$network$Processor$$selector()|",
      "|java+method:///kafka/network/Processor/error(scala.Function0,scala.Function0)|",
      "|java+method:///java/util/concurrent/ConcurrentLinkedQueue/isEmpty()|",
      "|java+method:///org/apache/kafka/common/network/Selector/register(java.lang.String,java.nio.channels.SocketChannel)|",
      "|java+method:///java/net/Socket/getLocalAddress()|",
      "|java+method:///scala/Option/get()|",
      "|java+method:///java/util/concurrent/ConcurrentLinkedQueue/poll()|",
      "|java+method:///java/net/Socket/getInetAddress()|",
      "|java+method:///kafka/network/Processor/close(java.nio.channels.SocketChannel)|",
      "|java+constructor:///kafka/network/Processor$$anonfun$configureNewConnections$3/Processor$$anonfun$configureNewConnections$3(kafka.network.Processor,java.lang.Throwable)|",
      "|java+method:///kafka/network/Processor$ConnectionId/toString()|",
      "|java+constructor:///kafka/network/Processor$$anonfun$configureNewConnections$2/Processor$$anonfun$configureNewConnections$2(kafka.network.Processor,java.net.SocketAddress)|",
      "|java+method:///java/nio/channels/SocketChannel/socket()|",
      "|java+method:///scala/util/control/NonFatal$/unapply(java.lang.Throwable)|",
      "|java+method:///kafka/network/Processor/kafka$network$Processor$$ConnectionId()|",
      "|java+method:///scala/Option/isEmpty()|",
      "|java+method:///kafka/network/Processor/newConnections()|",
      "|java+constructor:///kafka/network/Processor$$anonfun$configureNewConnections$1/Processor$$anonfun$configureNewConnections$1(kafka.network.Processor,java.nio.channels.SocketChannel)|",
      "|java+method:///java/net/Socket/getPort()|"
    ],
    "v2Body": [
      "|java+method:///java/nio/channels/SocketChannel/socket()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///kafka/network/Processor/kafka$network$Processor$$selector()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///java/util/concurrent/ConcurrentLinkedQueue/isEmpty()|",
      "|java+method:///org/apache/kafka/common/network/Selector/register(java.lang.String,java.nio.channels.SocketChannel)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///kafka/network/Processor/close(java.nio.channels.SocketChannel)|",
      "|java+method:///java/util/concurrent/ConcurrentLinkedQueue/poll()|",
      "|java+method:///kafka/network/Processor/debug(scala.Function0)|",
      "|java+method:///kafka/network/Processor/kafka$network$Processor$$processException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///kafka/network/Processor/newConnections()|",
      "|java+constructor:///kafka/network/Processor$$anonfun$configureNewConnections$1/Processor$$anonfun$configureNewConnections$1(kafka.network.Processor,java.nio.channels.SocketChannel)|",
      "|java+method:///kafka/network/Processor/connectionId(java.net.Socket)|",
      "|java+method:///java/net/Socket/getRemoteSocketAddress()|",
      "|java+method:///kafka/network/Processor/id()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/tools/ConsoleProducer$/producerProps(kafka.tools.ConsoleProducer$ProducerConfig)|",
    "called": "|java+method:///org/apache/kafka/common/utils/Utils/loadProps(java.lang.String)|",
    "v1Body": [
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///kafka/tools/ConsoleProducer$ProducerConfig/extraProducerProps()|",
      "|java+constructor:///java/util/Properties/Properties()|",
      "|java+method:///kafka/tools/ConsoleProducer$ProducerConfig/options()|",
      "|java+method:///kafka/tools/ConsoleProducer$ProducerConfig/producerConfigOpt()|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+method:///org/apache/kafka/common/utils/Utils/loadProps(java.lang.String)|",
      "|java+method:///java/util/Properties/putAll(java.util.Map)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/kafka/common/utils/Utils/loadProps(java.lang.String)|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///kafka/utils/Implicits$PropertiesOps/$plus$plus$eq(java.util.Properties)|",
      "|java+method:///kafka/tools/ConsoleProducer$ProducerConfig/extraProducerProps()|",
      "|java+constructor:///java/util/Properties/Properties()|",
      "|java+method:///kafka/utils/Implicits$/PropertiesOps(java.util.Properties)|",
      "|java+method:///kafka/tools/ConsoleProducer$ProducerConfig/options()|",
      "|java+method:///kafka/tools/ConsoleProducer$ProducerConfig/producerConfigOpt()|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/KafkaConfig/kafka$server$KafkaConfig$$getSecurityProtocol(java.lang.String,java.lang.String)|",
    "called": "|java+constructor:///org/apache/kafka/common/config/ConfigException/ConfigException(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/kafka/common/protocol/SecurityProtocol/forName(java.lang.String)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+constructor:///org/apache/kafka/common/config/ConfigException/ConfigException(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/kafka/common/security/auth/SecurityProtocol/forName(java.lang.String)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+constructor:///org/apache/kafka/common/config/ConfigException/ConfigException(java.lang.String)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+constructor:///kafka/server/ClientQuotaManagerConfig$/ClientQuotaManagerConfig$()|",
    "called": "|java+method:///org/apache/kafka/common/metrics/Quota/upperBound(double)|",
    "v1Body": [
      "|java+method:///org/apache/kafka/common/metrics/Quota/upperBound(double)|",
      "|java+constructor:///kafka/server/QuotaId/QuotaId(scala.Option,scala.Option)|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|",
      "|java+method:///kafka/server/ConfigEntityName$/Default()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///java/util/concurrent/TimeUnit/toNanos(long)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/kafka/common/metrics/Quota/upperBound(double)|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|",
      "|java+constructor:///kafka/server/QuotaId/QuotaId(scala.Option,scala.Option,scala.Option)|",
      "|java+method:///kafka/server/ConfigEntityName$/Default()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///java/util/concurrent/TimeUnit/toNanos(long)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/controller/RequestSendThread/doWork()|",
    "called": "|java+method:///org/apache/kafka/clients/NetworkClient/close(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///kafka/controller/RequestSendThread$$anonfun$doWork$1/RequestSendThread$$anonfun$doWork$1(kafka.controller.RequestSendThread,org.apache.kafka.common.requests.AbstractRequest$Builder)|",
      "|java+method:///org/apache/kafka/clients/NetworkClientUtils/sendAndReceive(org.apache.kafka.clients.KafkaClient,org.apache.kafka.clients.ClientRequest,org.apache.kafka.common.utils.Time)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///kafka/controller/RequestSendThread/error(scala.Function0,scala.Function0)|",
      "|java+method:///java/util/concurrent/BlockingQueue/take()|",
      "|java+method:///org/apache/kafka/clients/NetworkClient/close(java.lang.String)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/controller/RequestSendThread/time()|",
      "|java+method:///kafka/controller/KafkaController$StateChangeLogger/trace(scala.Function0)|",
      "|java+constructor:///kafka/controller/RequestSendThread$$anonfun$doWork$2/RequestSendThread$$anonfun$doWork$2(kafka.controller.RequestSendThread,java.lang.Throwable)|",
      "|java+method:///scala/Tuple3/_1()|",
      "|java+constructor:///kafka/controller/RequestSendThread$$anonfun$doWork$3/RequestSendThread$$anonfun$doWork$3(kafka.controller.RequestSendThread,org.apache.kafka.common.requests.RequestHeader,org.apache.kafka.common.requests.AbstractResponse)|",
      "|java+method:///scala/Tuple3/_2()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/Tuple3/_3()|",
      "|java+method:///kafka/controller/RequestSendThread/brokerReady()|",
      "|java+method:///org/apache/kafka/common/protocol/ApiKeys/forId(int)|",
      "|java+method:///org/apache/kafka/common/utils/Time/milliseconds()|",
      "|java+constructor:///kafka/controller/RequestSendThread$$anonfun$doWork$4/RequestSendThread$$anonfun$doWork$4(kafka.controller.RequestSendThread)|",
      "|java+method:///kafka/controller/RequestSendThread/brokerNode()|",
      "|java+constructor:///kafka/controller/RequestSendThread$$anonfun$doWork$5/RequestSendThread$$anonfun$doWork$5(kafka.controller.RequestSendThread,java.lang.Throwable)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///org/apache/kafka/common/Node/idString()|",
      "|java+constructor:///kafka/common/KafkaException/KafkaException(java.lang.String)|",
      "|java+method:///kafka/controller/RequestSendThread/stateChangeLogger()|",
      "|java+method:///kafka/controller/RequestSendThread/queue()|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/get()|",
      "|java+method:///kafka/controller/QueueItem/request()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///scala/Tuple3/Tuple3(java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///kafka/controller/QueueItem/apiKey()|",
      "|java+method:///kafka/controller/QueueItem/callback()|",
      "|java+method:///kafka/controller/RequestSendThread/isRunning()|",
      "|java+method:///kafka/controller/RequestSendThread/backoff$1()|",
      "|java+method:///kafka/controller/RequestSendThread/warn(scala.Function0,scala.Function0)|",
      "|java+method:///scala/Function1/apply(java.lang.Object)|",
      "|java+method:///org/apache/kafka/clients/ClientResponse/responseBody()|",
      "|java+method:///org/apache/kafka/common/requests/RequestHeader/apiKey()|",
      "|java+method:///kafka/controller/RequestSendThread/networkClient()|",
      "|java+method:///org/apache/kafka/clients/ClientResponse/requestHeader()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///org/apache/kafka/clients/NetworkClient/newClientRequest(java.lang.String,org.apache.kafka.common.requests.AbstractRequest$Builder,long,boolean)|"
    ],
    "v2Body": [
      "|java+method:///kafka/controller/RequestSendThread/time()|",
      "|java+constructor:///kafka/controller/RequestSendThread$$anonfun$doWork$1/RequestSendThread$$anonfun$doWork$1(kafka.controller.RequestSendThread,org.apache.kafka.common.requests.AbstractRequest$Builder)|",
      "|java+method:///org/apache/kafka/clients/NetworkClientUtils/sendAndReceive(org.apache.kafka.clients.KafkaClient,org.apache.kafka.clients.ClientRequest,org.apache.kafka.common.utils.Time)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///kafka/controller/RequestSendThread/error(scala.Function0,scala.Function0)|",
      "|java+method:///kafka/controller/RequestSendThread/brokerReady()|",
      "|java+method:///java/util/concurrent/BlockingQueue/take()|",
      "|java+method:///org/apache/kafka/clients/NetworkClient/close(java.lang.String)|",
      "|java+method:///kafka/controller/ControllerContext/epoch()|",
      "|java+method:///kafka/controller/StateChangeLogger/trace(scala.Function0)|",
      "|java+constructor:///kafka/controller/RequestSendThread$$anonfun$doWork$2/RequestSendThread$$anonfun$doWork$2(kafka.controller.RequestSendThread,java.lang.Throwable)|",
      "|java+method:///scala/Tuple3/_1()|",
      "|java+constructor:///kafka/controller/RequestSendThread$$anonfun$doWork$3/RequestSendThread$$anonfun$doWork$3(kafka.controller.RequestSendThread,org.apache.kafka.common.requests.RequestHeader,org.apache.kafka.common.requests.AbstractResponse)|",
      "|java+method:///scala/Tuple3/_2()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/Tuple3/_3()|",
      "|java+method:///org/apache/kafka/common/utils/Time/milliseconds()|",
      "|java+constructor:///kafka/controller/RequestSendThread$$anonfun$doWork$4/RequestSendThread$$anonfun$doWork$4(kafka.controller.RequestSendThread)|",
      "|java+method:///kafka/controller/RequestSendThread/brokerNode()|",
      "|java+constructor:///kafka/controller/RequestSendThread$$anonfun$doWork$5/RequestSendThread$$anonfun$doWork$5(kafka.controller.RequestSendThread,java.lang.Throwable)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///org/apache/kafka/common/Node/idString()|",
      "|java+constructor:///kafka/common/KafkaException/KafkaException(java.lang.String)|",
      "|java+method:///kafka/controller/RequestSendThread/stateChangeLogger()|",
      "|java+method:///kafka/controller/RequestSendThread/queue()|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/get()|",
      "|java+method:///kafka/controller/QueueItem/request()|",
      "|java+method:///kafka/controller/RequestSendThread/controllerContext()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///scala/Tuple3/Tuple3(java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///kafka/controller/QueueItem/apiKey()|",
      "|java+method:///kafka/controller/QueueItem/callback()|",
      "|java+method:///kafka/controller/RequestSendThread/isRunning()|",
      "|java+method:///kafka/controller/RequestSendThread/backoff$1()|",
      "|java+method:///kafka/controller/RequestSendThread/warn(scala.Function0,scala.Function0)|",
      "|java+method:///scala/Function1/apply(java.lang.Object)|",
      "|java+method:///org/apache/kafka/clients/ClientResponse/responseBody()|",
      "|java+method:///org/apache/kafka/common/requests/RequestHeader/apiKey()|",
      "|java+method:///kafka/controller/RequestSendThread/networkClient()|",
      "|java+method:///org/apache/kafka/clients/ClientResponse/requestHeader()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///kafka/controller/StateChangeLogger/withControllerEpoch(int)|",
      "|java+method:///org/apache/kafka/clients/NetworkClient/newClientRequest(java.lang.String,org.apache.kafka.common.requests.AbstractRequest$Builder,long,boolean)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/tools/ConsumerPerformance$/main(java.lang.String%5B%5D)|",
    "called": "|java+constructor:///org/apache/kafka/clients/consumer/KafkaConsumer/KafkaConsumer(java.util.Properties)|",
    "v1Body": [
      "|java+method:///scala/collection/immutable/Map$/apply(scala.collection.Seq)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/dateFormat()|",
      "|java+method:///kafka/utils/ToolsUtils$/printMetrics(scala.collection.mutable.Map)|",
      "|java+method:///scala/Predef$ArrowAssoc$/$minus$greater$extension(java.lang.Object,java.lang.Object)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/hideHeader()|",
      "|java+constructor:///kafka/tools/ConsumerPerformance$$anonfun$main$2/ConsumerPerformance$$anonfun$main$2()|",
      "|java+constructor:///kafka/tools/ConsumerPerformance$$anonfun$main$3/ConsumerPerformance$$anonfun$main$3()|",
      "|java+method:///scala/runtime/ObjectRef/create(java.lang.Object)|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+method:///org/apache/kafka/clients/consumer/KafkaConsumer/subscribe(java.util.Collection)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/topic()|",
      "|java+method:///scala/Predef$/println(java.lang.Object)|",
      "|java+method:///scala/Predef$/Map()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/props()|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///java/text/SimpleDateFormat/format(java.lang.Object)|",
      "|java+method:///java/lang/Thread/sleep(long)|",
      "|java+constructor:///kafka/tools/ConsumerPerformance$$anonfun$main$1/ConsumerPerformance$$anonfun$main$1(kafka.tools.ConsumerPerformance$ConsumerPerfConfig,java.util.concurrent.atomic.AtomicLong,java.util.concurrent.atomic.AtomicLong,java.util.concurrent.atomic.AtomicBoolean,scala.runtime.ObjectRef)|",
      "|java+method:///scala/collection/Iterable/foreach(scala.Function1)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/numMessages()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/showDetailedStats()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/numThreads()|",
      "|java+method:///kafka/consumer/ConsumerConfig/consumerTimeoutMs()|",
      "|java+constructor:///org/apache/kafka/clients/consumer/KafkaConsumer/KafkaConsumer(java.util.Properties)|",
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///scala/Predef$/ArrowAssoc(java.lang.Object)|",
      "|java+method:///kafka/tools/ConsumerPerformance$/consume(org.apache.kafka.clients.consumer.KafkaConsumer,scala.collection.immutable.List,long,long,kafka.tools.ConsumerPerformance$ConsumerPerfConfig,java.util.concurrent.atomic.AtomicLong,java.util.concurrent.atomic.AtomicLong)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicBoolean/AtomicBoolean(boolean)|",
      "|java+method:///scala/collection/JavaConverters$/mapAsScalaMapConverter(java.util.Map)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicLong/AtomicLong(long)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/collection/immutable/List/foreach(scala.Function1)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+constructor:///kafka/consumer/ConsumerConfig/ConsumerConfig(java.util.Properties)|",
      "|java+method:///org/apache/kafka/clients/consumer/KafkaConsumer/close()|",
      "|java+constructor:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/ConsumerPerformance$ConsumerPerfConfig(java.lang.String%5B%5D)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToDouble(double)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///scala/collection/immutable/List$/apply(scala.collection.Seq)|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/get()|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/get()|",
      "|java+method:///kafka/tools/ConsumerPerformance$/logger()|",
      "|java+method:///kafka/consumer/Consumer$/create(kafka.consumer.ConsumerConfig)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/consumer/ConsumerConnector/createMessageStreams(scala.collection.Map)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/useOldConsumer()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/printMetrics()|",
      "|java+method:///scala/collection/Map/values()|",
      "|java+method:///org/apache/kafka/clients/consumer/KafkaConsumer/metrics()|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///kafka/consumer/ConsumerConnector/shutdown()|"
    ],
    "v2Body": [
      "|java+method:///scala/Predef$/print(java.lang.Object)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/dateFormat()|",
      "|java+method:///kafka/utils/ToolsUtils$/printMetrics(scala.collection.mutable.Map)|",
      "|java+method:///scala/Predef$ArrowAssoc$/$minus$greater$extension(java.lang.Object,java.lang.Object)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/hideHeader()|",
      "|java+method:///kafka/tools/ConsumerPerformance$/printHeader(boolean,boolean)|",
      "|java+constructor:///kafka/tools/ConsumerPerformance$$anonfun$main$2/ConsumerPerformance$$anonfun$main$2()|",
      "|java+constructor:///kafka/tools/ConsumerPerformance$$anonfun$main$3/ConsumerPerformance$$anonfun$main$3()|",
      "|java+method:///scala/runtime/ObjectRef/create(java.lang.Object)|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+method:///scala/collection/immutable/Map$/apply(scala.collection.Seq)|",
      "|java+method:///kafka/tools/ConsumerPerformance$/consume(org.apache.kafka.clients.consumer.KafkaConsumer,scala.collection.immutable.List,long,long,kafka.tools.ConsumerPerformance$ConsumerPerfConfig,java.util.concurrent.atomic.AtomicLong,java.util.concurrent.atomic.AtomicLong,java.util.concurrent.atomic.AtomicLong,long)|",
      "|java+method:///org/apache/kafka/clients/consumer/KafkaConsumer/subscribe(java.util.Collection)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/topic()|",
      "|java+method:///scala/Predef$/Map()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/props()|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///java/text/SimpleDateFormat/format(java.lang.Object)|",
      "|java+method:///java/lang/Thread/sleep(long)|",
      "|java+constructor:///kafka/tools/ConsumerPerformance$$anonfun$main$1/ConsumerPerformance$$anonfun$main$1(kafka.tools.ConsumerPerformance$ConsumerPerfConfig,java.util.concurrent.atomic.AtomicLong,java.util.concurrent.atomic.AtomicLong,java.util.concurrent.atomic.AtomicBoolean,scala.runtime.ObjectRef)|",
      "|java+method:///scala/collection/Iterable/foreach(scala.Function1)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/numMessages()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/showDetailedStats()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/numThreads()|",
      "|java+method:///kafka/consumer/ConsumerConfig/consumerTimeoutMs()|",
      "|java+constructor:///org/apache/kafka/clients/consumer/KafkaConsumer/KafkaConsumer(java.util.Properties)|",
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///scala/Predef$/ArrowAssoc(java.lang.Object)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicBoolean/AtomicBoolean(boolean)|",
      "|java+method:///scala/collection/JavaConverters$/mapAsScalaMapConverter(java.util.Map)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicLong/AtomicLong(long)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/collection/immutable/List/foreach(scala.Function1)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+constructor:///kafka/consumer/ConsumerConfig/ConsumerConfig(java.util.Properties)|",
      "|java+method:///org/apache/kafka/clients/consumer/KafkaConsumer/close()|",
      "|java+constructor:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/ConsumerPerformance$ConsumerPerfConfig(java.lang.String%5B%5D)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToDouble(double)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///scala/collection/immutable/List$/apply(scala.collection.Seq)|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/get()|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/get()|",
      "|java+method:///kafka/tools/ConsumerPerformance$/logger()|",
      "|java+method:///scala/Predef$/println()|",
      "|java+method:///kafka/consumer/Consumer$/create(kafka.consumer.ConsumerConfig)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/consumer/ConsumerConnector/createMessageStreams(scala.collection.Map)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/useOldConsumer()|",
      "|java+method:///kafka/tools/ConsumerPerformance$ConsumerPerfConfig/printMetrics()|",
      "|java+method:///scala/collection/Map/values()|",
      "|java+method:///org/apache/kafka/clients/consumer/KafkaConsumer/metrics()|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///kafka/consumer/ConsumerConnector/shutdown()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/cluster/EndPoint$/createEndPoint(java.lang.String,scala.Option)|",
    "called": "|java+method:///org/apache/kafka/common/network/ListenerName/normalised(java.lang.String)|",
    "v1Body": [
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/collection/LinearSeqOptimized/apply(int)|",
      "|java+method:///scala/Option/isEmpty()|",
      "|java+method:///kafka/cluster/EndPoint$/securityProtocol$1(org.apache.kafka.common.network.ListenerName,scala.collection.Map)|",
      "|java+constructor:///kafka/cluster/EndPoint$$anonfun$2/EndPoint$$anonfun$2()|",
      "|java+method:///scala/util/matching/Regex/unapplySeq(java.lang.CharSequence)|",
      "|java+method:///org/apache/kafka/common/network/ListenerName/normalised(java.lang.String)|",
      "|java+method:///kafka/cluster/EndPoint$/uriParseExp()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/collection/LinearSeqOptimized/lengthCompare(int)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/Option/get()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/collection/immutable/StringOps/toInt()|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+constructor:///kafka/common/KafkaException/KafkaException(java.lang.String)|",
      "|java+constructor:///kafka/cluster/EndPoint/EndPoint(java.lang.String,int,org.apache.kafka.common.network.ListenerName,org.apache.kafka.common.protocol.SecurityProtocol)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|"
    ],
    "v2Body": [
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/collection/LinearSeqOptimized/apply(int)|",
      "|java+method:///scala/Option/isEmpty()|",
      "|java+method:///kafka/cluster/EndPoint$/securityProtocol$1(org.apache.kafka.common.network.ListenerName,scala.collection.Map)|",
      "|java+constructor:///kafka/cluster/EndPoint$$anonfun$2/EndPoint$$anonfun$2()|",
      "|java+method:///scala/util/matching/Regex/unapplySeq(java.lang.CharSequence)|",
      "|java+method:///org/apache/kafka/common/network/ListenerName/normalised(java.lang.String)|",
      "|java+method:///kafka/cluster/EndPoint$/uriParseExp()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/collection/LinearSeqOptimized/lengthCompare(int)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/Option/get()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/collection/immutable/StringOps/toInt()|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+constructor:///kafka/common/KafkaException/KafkaException(java.lang.String)|",
      "|java+constructor:///kafka/cluster/EndPoint/EndPoint(java.lang.String,int,org.apache.kafka.common.network.ListenerName,org.apache.kafka.common.security.auth.SecurityProtocol)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$sendRequestsToBrokers$4$$anonfun$19/apply(kafka.controller.StopReplicaRequestInfo)|",
    "called": "|java+constructor:///org/apache/kafka/common/TopicPartition/TopicPartition(java.lang.String,int)|",
    "v1Body": [
      "|java+method:///kafka/controller/StopReplicaRequestInfo/callback()|",
      "|java+method:///kafka/controller/StopReplicaRequestInfo/deletePartition()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/kafka/common/TopicPartition/TopicPartition(java.lang.String,int)|",
      "|java+method:///kafka/controller/PartitionAndReplica/topic()|",
      "|java+method:///kafka/controller/PartitionAndReplica/partition()|",
      "|java+method:///kafka/controller/StopReplicaRequestInfo/replica()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/KafkaApis$$anonfun$21/apply(scala.Tuple2)|",
    "called": "|java+constructor:///org/apache/kafka/common/requests/ListOffsetResponse$PartitionData/ListOffsetResponse$PartitionData(org.apache.kafka.common.protocol.Errors,long,long)|",
    "v1Body": [
      "|java+method:///kafka/server/KafkaApis/kafka$server$KafkaApis$$authorize(kafka.network.RequestChannel$Session,kafka.security.auth.Operation,kafka.security.auth.Resource)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/network/RequestChannel$Request/session()|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///org/apache/kafka/common/TopicPartition/topic()|",
      "|java+constructor:///kafka/security/auth/Resource/Resource(kafka.security.auth.ResourceType,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///kafka/server/KafkaApis/error(scala.Function0,scala.Function0)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$21$$anonfun$23/KafkaApis$$anonfun$21$$anonfun$23(kafka.server.KafkaApis$$anonfun$21)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+constructor:///org/apache/kafka/common/requests/ListOffsetResponse$PartitionData/ListOffsetResponse$PartitionData(org.apache.kafka.common.protocol.Errors,long,long)|",
      "|java+method:///kafka/server/ReplicaManager/getReplicaOrException(org.apache.kafka.common.TopicPartition)|",
      "|java+method:///scala/runtime/BoxesRunTime/equalsNumObject(java.lang.Number,java.lang.Object)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$21$$anonfun$apply$14/KafkaApis$$anonfun$21$$anonfun$apply$14(kafka.server.KafkaApis$$anonfun$21,java.lang.Throwable)|",
      "|java+method:///kafka/log/TimestampOffset/timestamp()|",
      "|java+method:///kafka/server/ReplicaManager/getLeaderReplicaIfLocal(org.apache.kafka.common.TopicPartition)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+method:///kafka/server/KafkaApis/debug(scala.Function0)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///kafka/server/KafkaApis/replicaManager()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$21$$anonfun$24/KafkaApis$$anonfun$21$$anonfun$24(kafka.server.KafkaApis$$anonfun$21)|",
      "|java+method:///kafka/log/TimestampOffset/offset()|",
      "|java+method:///org/apache/kafka/common/protocol/Errors/forException(java.lang.Throwable)|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///kafka/server/LogOffsetMetadata/messageOffset()|",
      "|java+method:///org/apache/kafka/common/requests/ListOffsetRequest/isolationLevel()|",
      "|java+method:///kafka/cluster/Replica/highWatermark()|",
      "|java+method:///scala/Option/filter(scala.Function1)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///kafka/cluster/Replica/lastStableOffset()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$21$$anonfun$apply$13/KafkaApis$$anonfun$21$$anonfun$apply$13(kafka.server.KafkaApis$$anonfun$21)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///kafka/log/TimestampOffset/TimestampOffset(long,long)|",
      "|java+method:///org/apache/kafka/common/requests/ListOffsetRequest/replicaId()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$21$$anonfun$22/KafkaApis$$anonfun$21$$anonfun$22(kafka.server.KafkaApis$$anonfun$21,java.lang.Long,long)|",
      "|java+method:///org/apache/kafka/common/requests/ListOffsetRequest/duplicatePartitions()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$21$$anonfun$apply$12/KafkaApis$$anonfun$21$$anonfun$apply$12(kafka.server.KafkaApis$$anonfun$21,org.apache.kafka.common.TopicPartition,java.lang.Throwable)|",
      "|java+method:///kafka/server/KafkaApis/kafka$server$KafkaApis$$fetchOffsetForTimestamp(org.apache.kafka.common.TopicPartition,long)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$21$$anonfun$apply$11/KafkaApis$$anonfun$21$$anonfun$apply$11(kafka.server.KafkaApis$$anonfun$21,org.apache.kafka.common.TopicPartition)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+constructor:///kafka/network/SocketServer/SocketServer(kafka.server.KafkaConfig,org.apache.kafka.common.metrics.Metrics,org.apache.kafka.common.utils.Time,kafka.security.CredentialProvider)|",
    "called": "|java+constructor:///org/apache/kafka/common/metrics/stats/Meter/Meter(java.util.concurrent.TimeUnit,org.apache.kafka.common.MetricName,org.apache.kafka.common.MetricName)|",
    "v1Body": [
      "|java+constructor:///kafka/network/SocketServer$$anonfun$1/SocketServer$$anonfun$1(kafka.network.SocketServer)|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///kafka/network/SocketServer/endpoints()|",
      "|java+method:///kafka/server/KafkaConfig/listeners()|",
      "|java+method:///kafka/server/KafkaConfig/numNetworkThreads()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///kafka/network/RequestChannel/addResponseListener(scala.Function1)|",
      "|java+method:///scala/Predef$/$conforms()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///scala/Predef$/Integer2int(java.lang.Integer)|",
      "|java+method:///scala/collection/mutable/Map$/apply(scala.collection.Seq)|",
      "|java+method:///kafka/network/SocketServer/logIdent_$eq(java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig/maxConnectionsPerIp()|",
      "|java+method:///kafka/server/KafkaConfig/queuedMaxRequests()|",
      "|java+method:///scala/collection/immutable/Map/size()|",
      "|java+constructor:///kafka/network/SocketServer$$anonfun$4/SocketServer$$anonfun$4(kafka.network.SocketServer)|",
      "|java+method:///kafka/network/SocketServer/maxQueuedRequests()|",
      "|java+method:///scala/collection/TraversableOnce/toMap(scala.Predef$$less$colon$less)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+constructor:///kafka/network/RequestChannel/RequestChannel(int,int)|",
      "|java+method:///kafka/server/KafkaConfig/brokerId()|",
      "|java+method:///kafka/server/KafkaConfig/maxConnectionsPerIpOverrides()|",
      "|java+method:///kafka/network/SocketServer/kafka$network$SocketServer$$totalProcessorThreads()|",
      "|java+method:///scala/collection/Seq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///kafka/network/SocketServer/kafka$network$SocketServer$$numProcessorThreads()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///kafka/network/SocketServer/requestChannel()|",
      "|java+method:///kafka/metrics/KafkaMetricsGroup$class/$init$(kafka.metrics.KafkaMetricsGroup)|",
      "|java+method:///kafka/utils/Logging$class/$init$(kafka.utils.Logging)|"
    ],
    "v2Body": [
      "|java+method:///kafka/network/SocketServer/memoryPoolSensor()|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///kafka/network/SocketServer/maxQueuedRequests()|",
      "|java+constructor:///org/apache/kafka/common/metrics/stats/Meter/Meter(java.util.concurrent.TimeUnit,org.apache.kafka.common.MetricName,org.apache.kafka.common.MetricName)|",
      "|java+method:///kafka/network/SocketServer/endpoints()|",
      "|java+constructor:///org/apache/kafka/common/utils/LogContext/LogContext(java.lang.String)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/kafka/common/metrics/Metrics/sensor(java.lang.String)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///kafka/server/KafkaConfig/numNetworkThreads()|",
      "|java+constructor:///org/apache/kafka/common/memory/SimpleMemoryPool/SimpleMemoryPool(long,int,boolean,org.apache.kafka.common.metrics.Sensor)|",
      "|java+method:///scala/Predef$/$conforms()|",
      "|java+method:///scala/collection/mutable/Map$/apply(scala.collection.Seq)|",
      "|java+method:///kafka/server/KafkaConfig/queuedMaxBytes()|",
      "|java+constructor:///kafka/network/SocketServer$$anonfun$1/SocketServer$$anonfun$1(kafka.network.SocketServer)|",
      "|java+method:///kafka/network/SocketServer/logIdent_$eq(java.lang.String)|",
      "|java+method:///kafka/network/SocketServer/memoryPoolDepletedPercentMetricName()|",
      "|java+method:///kafka/server/KafkaConfig/maxConnectionsPerIp()|",
      "|java+method:///kafka/server/KafkaConfig/queuedMaxRequests()|",
      "|java+method:///scala/collection/immutable/Map/size()|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///org/apache/kafka/common/metrics/Sensor/add(org.apache.kafka.common.metrics.CompoundStat)|",
      "|java+constructor:///kafka/network/SocketServer$$anonfun$5/SocketServer$$anonfun$5(kafka.network.SocketServer)|",
      "|java+method:///org/apache/kafka/common/metrics/Metrics/metricName(java.lang.String,java.lang.String)|",
      "|java+method:///kafka/server/KafkaConfig/listeners()|",
      "|java+method:///org/apache/kafka/common/utils/LogContext/logPrefix()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///kafka/server/KafkaConfig/socketRequestMaxBytes()|",
      "|java+method:///scala/collection/TraversableOnce/toMap(scala.Predef$$less$colon$less)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/network/RequestChannel/addResponseListener(scala.Function1)|",
      "|java+method:///kafka/network/SocketServer/logContext()|",
      "|java+constructor:///kafka/network/RequestChannel/RequestChannel(int,int)|",
      "|java+method:///kafka/server/KafkaConfig/brokerId()|",
      "|java+method:///kafka/server/KafkaConfig/maxConnectionsPerIpOverrides()|",
      "|java+method:///kafka/network/SocketServer/memoryPoolDepletedTimeMetricName()|",
      "|java+method:///scala/Predef$/Integer2int(java.lang.Integer)|",
      "|java+method:///kafka/network/SocketServer/kafka$network$SocketServer$$totalProcessorThreads()|",
      "|java+method:///scala/collection/Seq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///kafka/network/SocketServer/kafka$network$SocketServer$$numProcessorThreads()|",
      "|java+method:///kafka/network/SocketServer/requestChannel()|",
      "|java+method:///kafka/metrics/KafkaMetricsGroup$class/$init$(kafka.metrics.KafkaMetricsGroup)|",
      "|java+method:///kafka/utils/Logging$class/$init$(kafka.utils.Logging)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/admin/ConsumerGroupCommand$KafkaConsumerGroupService/createNewConsumer()|",
    "called": "|java+constructor:///org/apache/kafka/clients/consumer/KafkaConsumer/KafkaConsumer(java.util.Properties)|",
    "v1Body": [
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+constructor:///org/apache/kafka/clients/consumer/KafkaConsumer/KafkaConsumer(java.util.Properties)|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/bootstrapServerOpt()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/options()|",
      "|java+method:///java/util/Properties/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/groupOpt()|",
      "|java+method:///org/apache/kafka/common/utils/Utils/loadProps(java.lang.String)|",
      "|java+method:///java/util/Properties/putAll(java.util.Map)|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/commandConfigOpt()|",
      "|java+constructor:///org/apache/kafka/common/serialization/StringDeserializer/StringDeserializer()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$KafkaConsumerGroupService/opts()|",
      "|java+constructor:///java/util/Properties/Properties()|",
      "|java+method:///java/lang/Class/getName()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/kafka/common/utils/Utils/loadProps(java.lang.String)|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+constructor:///org/apache/kafka/clients/consumer/KafkaConsumer/KafkaConsumer(java.util.Properties)|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/bootstrapServerOpt()|",
      "|java+method:///java/util/Properties/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///kafka/utils/Implicits$/PropertiesOps(java.util.Properties)|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/groupOpt()|",
      "|java+method:///kafka/utils/Implicits$PropertiesOps/$plus$plus$eq(java.util.Properties)|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/options()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$ConsumerGroupCommandOptions/commandConfigOpt()|",
      "|java+constructor:///org/apache/kafka/common/serialization/StringDeserializer/StringDeserializer()|",
      "|java+method:///kafka/admin/ConsumerGroupCommand$KafkaConsumerGroupService/opts()|",
      "|java+constructor:///java/util/Properties/Properties()|",
      "|java+method:///java/lang/Class/getName()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/log/ProducerStateManager$/kafka$log$ProducerStateManager$$writeSnapshot(java.io.File,scala.collection.mutable.Map)|",
    "called": "|java+method:///org/apache/kafka/common/protocol/types/Struct/sizeOf()|",
    "v1Body": [
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/sizeOf()|",
      "|java+constructor:///org/apache/kafka/common/protocol/types/Struct/Struct(org.apache.kafka.common.protocol.types.Schema)|",
      "|java+method:///java/nio/ByteBuffer/flip()|",
      "|java+method:///org/apache/kafka/common/utils/ByteUtils/writeUnsignedInt(java.nio.ByteBuffer,int,long)|",
      "|java+method:///kafka/log/ProducerStateManager$/CrcField()|",
      "|java+method:///kafka/log/ProducerStateManager$/kafka$log$ProducerStateManager$$ProducerEntriesField()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///kafka/log/ProducerStateManager$/ProducerSnapshotVersion()|",
      "|java+method:///scala/collection/mutable/Iterable$/canBuildFrom()|",
      "|java+method:///kafka/log/ProducerStateManager$/PidSnapshotMapSchema()|",
      "|java+method:///java/nio/ByteBuffer/limit()|",
      "|java+method:///java/io/FileOutputStream/close()|",
      "|java+method:///org/apache/kafka/common/utils/Crc32C/compute(java.nio.ByteBuffer,int,int)|",
      "|java+constructor:///java/io/FileOutputStream/FileOutputStream(java.io.File)|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///kafka/log/ProducerStateManager$/ProducerEntriesOffset()|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/set(java.lang.String,java.lang.Object)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToShort(short)|",
      "|java+method:///scala/collection/mutable/Map/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///java/nio/ByteBuffer/arrayOffset()|",
      "|java+method:///kafka/log/ProducerStateManager$/VersionField()|",
      "|java+method:///java/io/FileOutputStream/write(byte%5B%5D,int,int)|",
      "|java+constructor:///kafka/log/ProducerStateManager$$anonfun$2/ProducerStateManager$$anonfun$2(org.apache.kafka.common.protocol.types.Struct)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/writeTo(java.nio.ByteBuffer)|",
      "|java+method:///scala/collection/TraversableOnce/toArray(scala.reflect.ClassTag)|",
      "|java+method:///kafka/log/ProducerStateManager$/CrcOffset()|",
      "|java+method:///java/nio/ByteBuffer/array()|"
    ],
    "v2Body": [
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/sizeOf()|",
      "|java+constructor:///org/apache/kafka/common/protocol/types/Struct/Struct(org.apache.kafka.common.protocol.types.Schema)|",
      "|java+method:///java/nio/ByteBuffer/flip()|",
      "|java+method:///org/apache/kafka/common/utils/ByteUtils/writeUnsignedInt(java.nio.ByteBuffer,int,long)|",
      "|java+method:///kafka/log/ProducerStateManager$/CrcField()|",
      "|java+method:///kafka/log/ProducerStateManager$/kafka$log$ProducerStateManager$$ProducerEntriesField()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///scala/collection/mutable/Iterable$/canBuildFrom()|",
      "|java+method:///java/io/FileOutputStream/write(byte%5B%5D,int,int)|",
      "|java+method:///kafka/log/ProducerStateManager$/PidSnapshotMapSchema()|",
      "|java+method:///java/nio/ByteBuffer/limit()|",
      "|java+method:///java/io/FileOutputStream/close()|",
      "|java+method:///org/apache/kafka/common/utils/Crc32C/compute(java.nio.ByteBuffer,int,int)|",
      "|java+constructor:///java/io/FileOutputStream/FileOutputStream(java.io.File)|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///kafka/log/ProducerStateManager$/ProducerEntriesOffset()|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/set(java.lang.String,java.lang.Object)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToShort(short)|",
      "|java+method:///scala/collection/mutable/Map/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///java/nio/ByteBuffer/arrayOffset()|",
      "|java+method:///kafka/log/ProducerStateManager$/VersionField()|",
      "|java+method:///kafka/log/ProducerStateManager$/ProducerSnapshotVersion()|",
      "|java+constructor:///kafka/log/ProducerStateManager$$anonfun$3/ProducerStateManager$$anonfun$3(org.apache.kafka.common.protocol.types.Struct)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/writeTo(java.nio.ByteBuffer)|",
      "|java+method:///scala/collection/TraversableOnce/toArray(scala.reflect.ClassTag)|",
      "|java+method:///kafka/log/ProducerStateManager$/CrcOffset()|",
      "|java+method:///java/nio/ByteBuffer/array()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/ClientQuotaManager$$anonfun$getOrCreateQuotaSensors$3/apply()|",
    "called": "|java+constructor:///org/apache/kafka/common/metrics/stats/Rate/Rate()|",
    "v1Body": [
      "|java+method:///kafka/server/ClientQuotaManager/kafka$server$ClientQuotaManager$$measurableStat()|",
      "|java+method:///kafka/server/ClientQuotaManager$$anonfun$getOrCreateQuotaSensors$3/apply()|"
    ],
    "v2Body": [
      "|java+method:///kafka/server/ClientQuotaManager$$anonfun$getOrCreateQuotaSensors$3/apply()|",
      "|java+constructor:///org/apache/kafka/common/metrics/stats/Rate/Rate()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/log/ProducerStateManager$$anonfun$readSnapshot$1/apply(java.lang.Object)|",
    "called": "|java+method:///org/apache/kafka/common/protocol/types/Struct/getShort(java.lang.String)|",
    "v1Body": [
      "|java+method:///kafka/log/ProducerStateManager$/kafka$log$ProducerStateManager$$CoordinatorEpochField()|",
      "|java+method:///kafka/log/ProducerStateManager$/kafka$log$ProducerStateManager$$LastSequenceField()|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/getShort(java.lang.String)|",
      "|java+method:///scala/Predef$/Short2short(java.lang.Short)|",
      "|java+method:///kafka/log/ProducerStateManager$/kafka$log$ProducerStateManager$$LastOffsetField()|",
      "|java+method:///kafka/log/ProducerStateManager$$anonfun$readSnapshot$1/apply(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/getInt(java.lang.String)|",
      "|java+method:///kafka/log/ProducerStateManager$/kafka$log$ProducerStateManager$$OffsetDeltaField()|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+constructor:///kafka/log/ProducerIdEntry/ProducerIdEntry(long,short,int,long,int,long,int,scala.Option)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///kafka/log/ProducerStateManager$/kafka$log$ProducerStateManager$$ProducerIdField()|",
      "|java+method:///kafka/log/ProducerStateManager$/kafka$log$ProducerStateManager$$ProducerEpochField()|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|",
      "|java+method:///kafka/log/ProducerStateManager$/kafka$log$ProducerStateManager$$TimestampField()|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/getLong(java.lang.String)|",
      "|java+method:///kafka/log/ProducerStateManager$/kafka$log$ProducerStateManager$$CurrentTxnFirstOffsetField()|",
      "|java+method:///scala/Predef$/Integer2int(java.lang.Integer)|"
    ],
    "v2Body": [
      "|java+method:///kafka/log/ProducerStateManager$/kafka$log$ProducerStateManager$$CoordinatorEpochField()|",
      "|java+constructor:///kafka/log/ProducerIdEntry/ProducerIdEntry(long,scala.collection.mutable.Queue,short,int,scala.Option)|",
      "|java+method:///kafka/log/ProducerStateManager$/kafka$log$ProducerStateManager$$LastSequenceField()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/getShort(java.lang.String)|",
      "|java+method:///scala/Predef$/Short2short(java.lang.Short)|",
      "|java+method:///kafka/log/ProducerStateManager$/kafka$log$ProducerStateManager$$LastOffsetField()|",
      "|java+method:///kafka/log/ProducerStateManager$$anonfun$readSnapshot$1/apply(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/getInt(java.lang.String)|",
      "|java+method:///kafka/log/ProducerStateManager$/kafka$log$ProducerStateManager$$OffsetDeltaField()|",
      "|java+method:///scala/Predef$/Long2long(java.lang.Long)|",
      "|java+method:///scala/collection/mutable/Queue$/apply(scala.collection.Seq)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///kafka/log/ProducerStateManager$/kafka$log$ProducerStateManager$$ProducerIdField()|",
      "|java+method:///kafka/log/ProducerStateManager$/kafka$log$ProducerStateManager$$ProducerEpochField()|",
      "|java+constructor:///kafka/log/BatchMetadata/BatchMetadata(int,long,int,long)|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|",
      "|java+method:///kafka/log/ProducerStateManager$/kafka$log$ProducerStateManager$$TimestampField()|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/getLong(java.lang.String)|",
      "|java+method:///kafka/log/ProducerStateManager$/kafka$log$ProducerStateManager$$CurrentTxnFirstOffsetField()|",
      "|java+method:///scala/Predef$/Integer2int(java.lang.Integer)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/ClientQuotaManager/recordAndThrottleOnQuotaViolation(kafka.server.ClientSensors,double,scala.Function1)|",
    "called": "|java+method:///org/apache/kafka/common/metrics/Sensor/record()|",
    "v1Body": [
      "|java+method:///org/apache/kafka/common/metrics/Sensor/record(double)|",
      "|java+method:///scala/Predef$/longWrapper(long)|",
      "|java+method:///org/apache/kafka/common/metrics/Metrics/metrics()|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///kafka/server/ClientQuotaManager/getQuotaMetricConfig(org.apache.kafka.common.metrics.Quota)|",
      "|java+method:///scala/runtime/RichLong$/round$extension(long)|",
      "|java+method:///org/apache/kafka/common/metrics/Sensor/name()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///kafka/server/ClientQuotaManager/delayQueue()|",
      "|java+method:///kafka/server/ClientQuotaManager/logger()|",
      "|java+method:///scala/Function1/apply$mcVI$sp(int)|",
      "|java+method:///kafka/server/QuotaEntity/clientId()|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+method:///kafka/server/ClientSensors/quotaSensor()|",
      "|java+method:///org/apache/log4j/Logger/debug(java.lang.Object)|",
      "|java+method:///kafka/server/QuotaEntity/sanitizedUser()|",
      "|java+method:///java/util/concurrent/DelayQueue/add(java.util.concurrent.Delayed)|",
      "|java+method:///kafka/server/ClientQuotaManager/clientRateMetricName(java.lang.String,java.lang.String)|",
      "|java+constructor:///kafka/server/ThrottledResponse/ThrottledResponse(org.apache.kafka.common.utils.Time,int,scala.Function1)|",
      "|java+method:///org/apache/kafka/common/metrics/Sensor/record()|",
      "|java+method:///kafka/server/ClientSensors/quotaEntity()|",
      "|java+method:///kafka/server/ClientSensors/throttleTimeSensor()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///kafka/server/ClientQuotaManager/metrics()|",
      "|java+method:///kafka/server/ClientQuotaManager/time()|",
      "|java+method:///kafka/server/ClientQuotaManager/throttleTime(org.apache.kafka.common.metrics.KafkaMetric,org.apache.kafka.common.metrics.MetricConfig)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/server/QuotaEntity/quota()|",
      "|java+method:///kafka/server/ClientQuotaManager/kafka$server$ClientQuotaManager$$delayQueueSensor()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/kafka/common/metrics/Sensor/record(double)|",
      "|java+method:///org/apache/kafka/common/metrics/Metrics/metrics()|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///kafka/server/ClientQuotaManager/getQuotaMetricConfig(org.apache.kafka.common.metrics.Quota)|",
      "|java+method:///org/apache/kafka/common/metrics/Sensor/name()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///kafka/server/ClientQuotaManager/delayQueue()|",
      "|java+method:///kafka/server/ClientQuotaManager/logger()|",
      "|java+method:///scala/Function1/apply$mcVI$sp(int)|",
      "|java+method:///kafka/server/QuotaEntity/clientId()|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+method:///kafka/server/ClientSensors/quotaSensor()|",
      "|java+method:///org/apache/log4j/Logger/debug(java.lang.Object)|",
      "|java+method:///kafka/server/QuotaEntity/sanitizedUser()|",
      "|java+method:///java/util/concurrent/DelayQueue/add(java.util.concurrent.Delayed)|",
      "|java+method:///kafka/server/ClientQuotaManager/clientRateMetricName(java.lang.String,java.lang.String)|",
      "|java+constructor:///kafka/server/ThrottledResponse/ThrottledResponse(org.apache.kafka.common.utils.Time,int,scala.Function1)|",
      "|java+method:///org/apache/kafka/common/metrics/Sensor/record()|",
      "|java+method:///kafka/server/ClientSensors/quotaEntity()|",
      "|java+method:///kafka/server/ClientSensors/throttleTimeSensor()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///kafka/server/ClientQuotaManager/metrics()|",
      "|java+method:///kafka/server/ClientQuotaManager/time()|",
      "|java+method:///kafka/server/ClientQuotaManager/throttleTime(org.apache.kafka.common.metrics.KafkaMetric,org.apache.kafka.common.metrics.MetricConfig)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/server/QuotaEntity/quota()|",
      "|java+method:///kafka/server/ClientQuotaManager/kafka$server$ClientQuotaManager$$delayQueueSensor()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/KafkaApis/kafka$server$KafkaApis$$configsAuthorizationApiError(kafka.network.RequestChannel$Session,org.apache.kafka.common.requests.Resource)|",
    "called": "|java+constructor:///org/apache/kafka/common/requests/ApiError/ApiError(org.apache.kafka.common.protocol.Errors,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/kafka/common/requests/Resource/name()|",
      "|java+method:///kafka/server/KafkaApis/kafka$server$KafkaApis$$authorize(kafka.network.RequestChannel$Session,kafka.security.auth.Operation,kafka.security.auth.Resource)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/kafka/common/requests/Resource/type()|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+constructor:///kafka/security/auth/Resource/Resource(kafka.security.auth.ResourceType,java.lang.String)|",
      "|java+constructor:///org/apache/kafka/common/errors/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+constructor:///org/apache/kafka/common/requests/ApiError/ApiError(org.apache.kafka.common.protocol.Errors,java.lang.String)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/kafka/common/requests/Resource/name()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/kafka/common/requests/Resource/type()|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+constructor:///org/apache/kafka/common/errors/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+constructor:///org/apache/kafka/common/requests/ApiError/ApiError(org.apache.kafka.common.protocol.Errors,java.lang.String)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/KafkaApis/handleFindCoordinatorRequest(kafka.network.RequestChannel$Request)|",
    "called": "|java+constructor:///org/apache/kafka/common/errors/InvalidRequestException/InvalidRequestException(java.lang.String)|",
    "v1Body": [
      "|java+method:///kafka/network/RequestChannel$Request/session()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$handleFindCoordinatorRequest$1/KafkaApis$$anonfun$handleFindCoordinatorRequest$1(kafka.server.KafkaApis,kafka.network.RequestChannel$Request,int,org.apache.kafka.common.requests.MetadataResponse$TopicMetadata)|",
      "|java+method:///kafka/server/KafkaApis/getOrCreateInternalTopic(java.lang.String,org.apache.kafka.common.network.ListenerName)|",
      "|java+method:///kafka/utils/NotNothing$/notNothingEvidence(scala.Predef$$eq$colon$eq)|",
      "|java+method:///kafka/network/RequestChannel$Request/body(scala.reflect.ClassTag,kafka.utils.NotNothing)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///scala/Tuple2/_1$mcI$sp()|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///kafka/server/KafkaApis/groupCoordinator()|",
      "|java+method:///scala/Predef$$eq$colon$eq$/tpEquals()|",
      "|java+method:///kafka/server/KafkaApis/kafka$server$KafkaApis$$authorize(kafka.network.RequestChannel$Session,kafka.security.auth.Operation,kafka.security.auth.Resource)|",
      "|java+method:///kafka/network/RequestChannel$Request/listenerName()|",
      "|java+method:///kafka/server/KafkaApis/sendResponseMaybeThrottle(kafka.network.RequestChannel$Request,scala.Function1)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/requests/FindCoordinatorRequest/coordinatorType()|",
      "|java+method:///kafka/server/KafkaApis/txnCoordinator()|",
      "|java+method:///kafka/coordinator/transaction/TransactionCoordinator/partitionFor(java.lang.String)|",
      "|java+constructor:///kafka/security/auth/Resource/Resource(kafka.security.auth.ResourceType,java.lang.String)|",
      "|java+method:///org/apache/kafka/common/requests/FindCoordinatorRequest/coordinatorKey()|",
      "|java+constructor:///org/apache/kafka/common/errors/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///kafka/coordinator/group/GroupCoordinator/partitionFor(java.lang.String)|",
      "|java+method:///kafka/server/KafkaApis/sendErrorResponse$2(org.apache.kafka.common.protocol.Errors,kafka.network.RequestChannel$Request)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///kafka/server/KafkaApis/kafka$server$KafkaApis$$authorize(kafka.network.RequestChannel$Session,kafka.security.auth.Operation,kafka.security.auth.Resource)|",
      "|java+method:///kafka/network/RequestChannel$Request/context()|",
      "|java+method:///kafka/network/RequestChannel$Request/session()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$handleFindCoordinatorRequest$1/KafkaApis$$anonfun$handleFindCoordinatorRequest$1(kafka.server.KafkaApis,kafka.network.RequestChannel$Request,int,org.apache.kafka.common.requests.MetadataResponse$TopicMetadata)|",
      "|java+method:///kafka/server/KafkaApis/getOrCreateInternalTopic(java.lang.String,org.apache.kafka.common.network.ListenerName)|",
      "|java+method:///kafka/utils/NotNothing$/notNothingEvidence(scala.Predef$$eq$colon$eq)|",
      "|java+method:///kafka/network/RequestChannel$Request/body(scala.reflect.ClassTag,kafka.utils.NotNothing)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///scala/Tuple2/_1$mcI$sp()|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///kafka/server/KafkaApis/groupCoordinator()|",
      "|java+method:///scala/Predef$$eq$colon$eq$/tpEquals()|",
      "|java+method:///kafka/server/KafkaApis/sendResponseMaybeThrottle(kafka.network.RequestChannel$Request,scala.Function1)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/requests/FindCoordinatorRequest/coordinatorType()|",
      "|java+method:///kafka/server/KafkaApis/txnCoordinator()|",
      "|java+method:///org/apache/kafka/common/protocol/Errors/exception()|",
      "|java+method:///kafka/server/KafkaApis/sendErrorResponseMaybeThrottle(kafka.network.RequestChannel$Request,java.lang.Throwable)|",
      "|java+method:///kafka/coordinator/transaction/TransactionCoordinator/partitionFor(java.lang.String)|",
      "|java+constructor:///kafka/security/auth/Resource/Resource(kafka.security.auth.ResourceType,java.lang.String)|",
      "|java+method:///org/apache/kafka/common/requests/FindCoordinatorRequest/coordinatorKey()|",
      "|java+constructor:///org/apache/kafka/common/errors/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///kafka/coordinator/group/GroupCoordinator/partitionFor(java.lang.String)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/KafkaApis$$anonfun$38/apply(java.lang.String)|",
    "called": "|java+method:///org/apache/kafka/common/requests/DescribeGroupsResponse$GroupMetadata/forError(org.apache.kafka.common.protocol.Errors)|",
    "v1Body": [
      "|java+method:///kafka/server/KafkaApis/kafka$server$KafkaApis$$authorize(kafka.network.RequestChannel$Session,kafka.security.auth.Operation,kafka.security.auth.Resource)|",
      "|java+method:///kafka/network/RequestChannel$Request/session()|",
      "|java+constructor:///kafka/security/auth/Resource/Resource(kafka.security.auth.ResourceType,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///kafka/server/KafkaApis/groupCoordinator()|",
      "|java+method:///kafka/server/KafkaApis/kafka$server$KafkaApis$$authorize(kafka.network.RequestChannel$Session,kafka.security.auth.Operation,kafka.security.auth.Resource)|",
      "|java+method:///scala/collection/immutable/List$/canBuildFrom()|",
      "|java+method:///kafka/coordinator/group/GroupSummary/protocol()|",
      "|java+method:///scala/Predef$/ArrowAssoc(java.lang.Object)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///scala/Predef$ArrowAssoc$/$minus$greater$extension(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/requests/DescribeGroupsResponse$GroupMetadata/forError(org.apache.kafka.common.protocol.Errors)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///kafka/security/auth/Resource/Resource(kafka.security.auth.ResourceType,java.lang.String)|",
      "|java+method:///scala/collection/JavaConverters$/seqAsJavaListConverter(scala.collection.Seq)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///kafka/coordinator/group/GroupSummary/members()|",
      "|java+method:///kafka/network/RequestChannel$Request/session()|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$38$$anonfun$39/KafkaApis$$anonfun$38$$anonfun$39(kafka.server.KafkaApis$$anonfun$38)|",
      "|java+constructor:///org/apache/kafka/common/requests/DescribeGroupsResponse$GroupMetadata/DescribeGroupsResponse$GroupMetadata(org.apache.kafka.common.protocol.Errors,java.lang.String,java.lang.String,java.lang.String,java.util.List)|",
      "|java+method:///kafka/coordinator/group/GroupCoordinator/handleDescribeGroup(java.lang.String)|",
      "|java+method:///kafka/coordinator/group/GroupSummary/state()|",
      "|java+method:///scala/collection/immutable/List/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///kafka/coordinator/group/GroupSummary/protocolType()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/network/Processor/poll()|",
    "called": "|java+method:///org/apache/kafka/common/network/Selector/poll(long)|",
    "v1Body": [
      "|java+constructor:///kafka/network/Processor$$anonfun$poll$2/Processor$$anonfun$poll$2(kafka.network.Processor)|",
      "|java+constructor:///kafka/network/Processor$$anonfun$poll$1/Processor$$anonfun$poll$1(kafka.network.Processor)|",
      "|java+method:///org/apache/kafka/common/network/Selector/poll(long)|",
      "|java+method:///kafka/network/Processor/shutdownComplete()|",
      "|java+method:///kafka/network/Processor/kafka$network$Processor$$selector()|",
      "|java+method:///kafka/network/Processor/error(scala.Function0)|",
      "|java+method:///kafka/network/Processor/swallow(scala.Function0)|"
    ],
    "v2Body": [
      "|java+constructor:///kafka/network/Processor$$anonfun$poll$1/Processor$$anonfun$poll$1(kafka.network.Processor)|",
      "|java+method:///org/apache/kafka/common/network/Selector/poll(long)|",
      "|java+method:///kafka/network/Processor/kafka$network$Processor$$selector()|",
      "|java+method:///kafka/network/Processor/error(scala.Function0)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/KafkaApis$$anonfun$handleTopicMetadataRequest$2/apply(int)|",
    "called": "|java+constructor:///org/apache/kafka/common/requests/MetadataResponse/MetadataResponse(int,java.util.List,java.lang.String,int,java.util.List)|",
    "v1Body": [
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///kafka/server/MetadataCache/getControllerId()|",
      "|java+method:///kafka/server/KafkaApis/metadataCache()|",
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$handleTopicMetadataRequest$2$$anonfun$apply$17/KafkaApis$$anonfun$handleTopicMetadataRequest$2$$anonfun$apply$17(kafka.server.KafkaApis$$anonfun$handleTopicMetadataRequest$2)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$handleTopicMetadataRequest$2$$anonfun$apply$1/KafkaApis$$anonfun$handleTopicMetadataRequest$2$$anonfun$apply$1(kafka.server.KafkaApis$$anonfun$handleTopicMetadataRequest$2)|",
      "|java+constructor:///org/apache/kafka/common/requests/MetadataResponse/MetadataResponse(int,java.util.List,java.lang.String,int,java.util.List)|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToInt(java.lang.Object)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+method:///kafka/server/KafkaApis/clusterId()|",
      "|java+method:///scala/collection/Seq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/collection/JavaConverters$/seqAsJavaListConverter(scala.collection.Seq)|"
    ],
    "v2Body": [
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$handleTopicMetadataRequest$2$$anonfun$apply$16/KafkaApis$$anonfun$handleTopicMetadataRequest$2$$anonfun$apply$16(kafka.server.KafkaApis$$anonfun$handleTopicMetadataRequest$2)|",
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///kafka/server/MetadataCache/getControllerId()|",
      "|java+method:///kafka/server/KafkaApis/metadataCache()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$handleTopicMetadataRequest$2$$anonfun$apply$1/KafkaApis$$anonfun$handleTopicMetadataRequest$2$$anonfun$apply$1(kafka.server.KafkaApis$$anonfun$handleTopicMetadataRequest$2)|",
      "|java+constructor:///org/apache/kafka/common/requests/MetadataResponse/MetadataResponse(int,java.util.List,java.lang.String,int,java.util.List)|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToInt(java.lang.Object)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+method:///kafka/server/KafkaApis/clusterId()|",
      "|java+method:///scala/collection/Seq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/collection/JavaConverters$/seqAsJavaListConverter(scala.collection.Seq)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/coordinator/group/GroupMetadataManager$/readOffsetMessageValue(java.nio.ByteBuffer)|",
    "called": "|java+method:///org/apache/kafka/common/protocol/types/Struct/get(org.apache.kafka.common.protocol.types.BoundField)|",
    "v1Body": [
      "|java+method:///scala/runtime/BoxesRunTime/unboxToLong(java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///kafka/common/OffsetAndMetadata$/apply(long,java.lang.String,long,long)|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/OFFSET_VALUE_EXPIRE_TIMESTAMP_FIELD_V1()|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/get(org.apache.kafka.common.protocol.types.Field)|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/OFFSET_VALUE_OFFSET_FIELD_V0()|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/OFFSET_VALUE_OFFSET_FIELD_V1()|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/OFFSET_VALUE_METADATA_FIELD_V0()|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/OFFSET_VALUE_METADATA_FIELD_V1()|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/OFFSET_VALUE_COMMIT_TIMESTAMP_FIELD_V1()|",
      "|java+method:///kafka/common/OffsetAndMetadata$/apply(long,java.lang.String,long)|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/OFFSET_VALUE_TIMESTAMP_FIELD_V0()|",
      "|java+method:///java/nio/ByteBuffer/getShort()|",
      "|java+method:///org/apache/kafka/common/protocol/types/Schema/read(java.nio.ByteBuffer)|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/schemaForOffset(int)|"
    ],
    "v2Body": [
      "|java+method:///scala/runtime/BoxesRunTime/unboxToLong(java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/get(org.apache.kafka.common.protocol.types.BoundField)|",
      "|java+method:///kafka/common/OffsetAndMetadata$/apply(long,java.lang.String,long,long)|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/OFFSET_VALUE_EXPIRE_TIMESTAMP_FIELD_V1()|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/OFFSET_VALUE_OFFSET_FIELD_V0()|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/OFFSET_VALUE_OFFSET_FIELD_V1()|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/OFFSET_VALUE_METADATA_FIELD_V0()|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/OFFSET_VALUE_METADATA_FIELD_V1()|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/OFFSET_VALUE_COMMIT_TIMESTAMP_FIELD_V1()|",
      "|java+method:///kafka/common/OffsetAndMetadata$/apply(long,java.lang.String,long)|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/OFFSET_VALUE_TIMESTAMP_FIELD_V0()|",
      "|java+method:///java/nio/ByteBuffer/getShort()|",
      "|java+method:///org/apache/kafka/common/protocol/types/Schema/read(java.nio.ByteBuffer)|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/schemaForOffset(int)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/KafkaApis/handleStopReplicaRequest(kafka.network.RequestChannel$Request)|",
    "called": "|java+constructor:///org/apache/kafka/common/requests/StopReplicaResponse/StopReplicaResponse(org.apache.kafka.common.protocol.Errors,java.util.Map)|",
    "v1Body": [
      "|java+method:///kafka/server/KafkaApis/kafka$server$KafkaApis$$authorize(kafka.network.RequestChannel$Session,kafka.security.auth.Operation,kafka.security.auth.Resource)|",
      "|java+method:///scala/collection/SetLike/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///scala/collection/JavaConverters$/mutableMapAsJavaMapConverter(scala.collection.mutable.Map)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+constructor:///org/apache/kafka/common/requests/StopReplicaResponse/StopReplicaResponse(org.apache.kafka.common.protocol.Errors,java.util.Map)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$handleStopReplicaRequest$1/KafkaApis$$anonfun$handleStopReplicaRequest$1(kafka.server.KafkaApis)|",
      "|java+method:///kafka/utils/NotNothing$/notNothingEvidence(scala.Predef$$eq$colon$eq)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$6/KafkaApis$$anonfun$6(kafka.server.KafkaApis)|",
      "|java+method:///kafka/network/RequestChannel$Request/body(scala.reflect.ClassTag,kafka.utils.NotNothing)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///scala/Predef$/$conforms()|",
      "|java+method:///kafka/server/ReplicaManager/stopReplicas(org.apache.kafka.common.requests.StopReplicaRequest)|",
      "|java+method:///kafka/server/KafkaApis/sendResponseExemptThrottle(kafka.network.RequestChannel$Response)|",
      "|java+method:///scala/collection/mutable/Set$/canBuildFrom()|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///scala/Predef$$eq$colon$eq$/tpEquals()|",
      "|java+method:///scala/collection/JavaConverters$/asScalaSetConverter(java.util.Set)|",
      "|java+method:///kafka/server/KafkaApis/replicaManager()|",
      "|java+method:///kafka/server/KafkaApis/sendResponseMaybeThrottle(kafka.network.RequestChannel$Request,scala.Function1)|",
      "|java+method:///kafka/network/RequestChannel$Request/session()|",
      "|java+method:///kafka/security/auth/Resource$/ClusterResource()|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///kafka/utils/CoreUtils$/swallow(scala.Function0)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$handleStopReplicaRequest$3/KafkaApis$$anonfun$handleStopReplicaRequest$3(kafka.server.KafkaApis,scala.collection.immutable.Map)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///kafka/network/RequestChannel$Response$/apply(kafka.network.RequestChannel$Request,org.apache.kafka.common.requests.AbstractResponse)|",
      "|java+method:///org/apache/kafka/common/requests/StopReplicaRequest/partitions()|",
      "|java+method:///scala/collection/TraversableOnce/toMap(scala.Predef$$less$colon$less)|",
      "|java+method:///scala/collection/mutable/Map/foreach(scala.Function1)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$handleStopReplicaRequest$2/KafkaApis$$anonfun$handleStopReplicaRequest$2(kafka.server.KafkaApis,org.apache.kafka.common.requests.StopReplicaRequest)|"
    ],
    "v2Body": [
      "|java+method:///kafka/server/KafkaApis/kafka$server$KafkaApis$$authorize(kafka.network.RequestChannel$Session,kafka.security.auth.Operation,kafka.security.auth.Resource)|",
      "|java+method:///scala/collection/SetLike/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///scala/collection/JavaConverters$/mutableMapAsJavaMapConverter(scala.collection.mutable.Map)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+constructor:///org/apache/kafka/common/requests/StopReplicaResponse/StopReplicaResponse(org.apache.kafka.common.protocol.Errors,java.util.Map)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$handleStopReplicaRequest$1/KafkaApis$$anonfun$handleStopReplicaRequest$1(kafka.server.KafkaApis)|",
      "|java+method:///kafka/utils/NotNothing$/notNothingEvidence(scala.Predef$$eq$colon$eq)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$6/KafkaApis$$anonfun$6(kafka.server.KafkaApis)|",
      "|java+method:///kafka/network/RequestChannel$Request/body(scala.reflect.ClassTag,kafka.utils.NotNothing)|",
      "|java+method:///org/apache/kafka/common/requests/StopReplicaRequest/partitions()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///scala/Predef$/$conforms()|",
      "|java+method:///kafka/server/ReplicaManager/stopReplicas(org.apache.kafka.common.requests.StopReplicaRequest)|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///scala/Predef$$eq$colon$eq$/tpEquals()|",
      "|java+method:///scala/collection/JavaConverters$/asScalaSetConverter(java.util.Set)|",
      "|java+method:///kafka/server/KafkaApis/replicaManager()|",
      "|java+method:///kafka/server/KafkaApis/sendResponseMaybeThrottle(kafka.network.RequestChannel$Request,scala.Function1)|",
      "|java+method:///kafka/network/RequestChannel$Request/session()|",
      "|java+method:///kafka/security/auth/Resource$/ClusterResource()|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///kafka/utils/CoreUtils$/swallow(scala.Function0)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$handleStopReplicaRequest$3/KafkaApis$$anonfun$handleStopReplicaRequest$3(kafka.server.KafkaApis,scala.collection.immutable.Map)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///scala/collection/TraversableOnce/toMap(scala.Predef$$less$colon$less)|",
      "|java+method:///scala/collection/mutable/Map/foreach(scala.Function1)|",
      "|java+method:///scala/collection/mutable/Set$/canBuildFrom()|",
      "|java+method:///kafka/server/KafkaApis/sendResponseExemptThrottle(kafka.network.RequestChannel$Request,org.apache.kafka.common.requests.AbstractResponse)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$handleStopReplicaRequest$2/KafkaApis$$anonfun$handleStopReplicaRequest$2(kafka.server.KafkaApis,org.apache.kafka.common.requests.StopReplicaRequest)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+constructor:///kafka/tools/ConsoleConsumer$ConsumerConfig/ConsoleConsumer$ConsumerConfig(java.lang.String%5B%5D)|",
    "called": "|java+method:///org/apache/kafka/common/utils/Utils/loadProps(java.lang.String)|",
    "v1Body": [
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/maxMessagesOpt()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/valueDeserializerOpt()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/csvMetricsReporterEnabledOpt()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/isolationLevelOpt()|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///org/apache/kafka/common/utils/Utils/loadProps(java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/metricsDirectoryOpt()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/enableSystestEventsLoggingOpt()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/keyDeserializerOpt()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/bootstrapServerOpt()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/formatter()|",
      "|java+method:///kafka/utils/CommandLineUtils$/parseKeyValueArgs$default$2()|",
      "|java+method:///java/util/Properties/setProperty(java.lang.String,java.lang.String)|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///kafka/api/OffsetRequest$/EarliestTime()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/topicArg()|",
      "|java+method:///scala/Console$/err()|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///kafka/utils/CommandLineUtils$/checkRequiredArgs(joptsimple.OptionParser,joptsimple.OptionSet,scala.collection.Seq)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/messageFormatterOpt()|",
      "|java+method:///scala/collection/immutable/List/filter(scala.Function1)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/topicIdOpt()|",
      "|java+method:///kafka/common/MessageFormatter/init(java.util.Properties)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///scala/Option/isDefined()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/liftedTree1$1(java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/keyDeserializer()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/skipMessageOnErrorOpt()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/fromBeginning()|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/describedAs(java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/whitelistOpt()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///kafka/consumer/Whitelist/Whitelist(java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/tryParse(joptsimple.OptionParser,java.lang.String%5B%5D)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/timeoutMsOpt()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/partitionArg()|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/messageFormatterClass()|",
      "|java+method:///java/lang/String/toLowerCase(java.util.Locale)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/filterSpec_$eq(kafka.consumer.TopicFilter)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/groupIdPassed_$eq(boolean)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/partitionIdOpt()|",
      "|java+method:///java/util/Random/nextInt(int)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///java/util/Properties/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///kafka/metrics/KafkaMetricsReporter$/startReporters(kafka.utils.VerifiableProperties)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+constructor:///joptsimple/OptionParser/OptionParser(boolean)|",
      "|java+method:///kafka/utils/CommandLineUtils$/printUsageAndDie(joptsimple.OptionParser,java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/consumerProps()|",
      "|java+method:///java/lang/String/toString()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/topicArg_$eq(java.lang.String)|",
      "|java+method:///scala/collection/JavaConverters$/asScalaBufferConverter(java.util.List)|",
      "|java+constructor:///java/util/Properties/Properties()|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/consumerConfigOpt()|",
      "|java+constructor:///java/util/Random/Random()|",
      "|java+method:///joptsimple/OptionSpecBuilder/withRequiredArg()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///scala/collection/immutable/List$/apply(scala.collection.Seq)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/blacklistOpt()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/options()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/useOldConsumer()|",
      "|java+method:///scala/collection/immutable/List/head()|",
      "|java+method:///kafka/utils/CommandLineUtils$/parseKeyValueArgs(scala.collection.Iterable,boolean)|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|",
      "|java+constructor:///kafka/consumer/Blacklist/Blacklist(java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/offsetOpt()|",
      "|java+method:///scala/collection/immutable/List/size()|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+constructor:///kafka/tools/ConsoleConsumer$ConsumerConfig$$anonfun$5/ConsoleConsumer$ConsumerConfig$$anonfun$5(kafka.tools.ConsoleConsumer$ConsumerConfig)|",
      "|java+constructor:///kafka/utils/VerifiableProperties/VerifiableProperties(java.util.Properties)|",
      "|java+method:///joptsimple/OptionSet/valuesOf(joptsimple.OptionSpec)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/defaultsTo(java.lang.Object,java.lang.Object%5B%5D)|",
      "|java+method:///kafka/api/OffsetRequest$/LatestTime()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/zkConnectOpt()|",
      "|java+constructor:///kafka/tools/ConsoleConsumer$ConsumerConfig$$anonfun$6/ConsoleConsumer$ConsumerConfig$$anonfun$6(kafka.tools.ConsoleConsumer$ConsumerConfig)|",
      "|java+method:///joptsimple/OptionParser/accepts(java.lang.String,java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/whitelistArg_$eq(java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/valueDeserializer()|",
      "|java+method:///joptsimple/OptionParser/accepts(java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/invalidOffset(java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/resetBeginningOpt()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/newConsumerOpt()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/formatterArgs()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/parser()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/messageFormatterArgOpt()|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/ofType(java.lang.Class)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/consumerPropertyOpt()|"
    ],
    "v2Body": [
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/maxMessagesOpt()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/csvMetricsReporterEnabledOpt()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/isolationLevelOpt()|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///org/apache/kafka/common/utils/Utils/loadProps(java.lang.String)|",
      "|java+method:///scala/Some/x()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/metricsDirectoryOpt()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/enableSystestEventsLoggingOpt()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/keyDeserializerOpt()|",
      "|java+method:///java/util/Properties/get(java.lang.Object)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/bootstrapServerOpt()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/formatter()|",
      "|java+method:///kafka/utils/CommandLineUtils$/parseKeyValueArgs$default$2()|",
      "|java+method:///java/util/Properties/setProperty(java.lang.String,java.lang.String)|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///kafka/api/OffsetRequest$/EarliestTime()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/topicArg()|",
      "|java+method:///scala/Console$/err()|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///kafka/utils/CommandLineUtils$/checkRequiredArgs(joptsimple.OptionParser,joptsimple.OptionSet,scala.collection.Seq)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/messageFormatterOpt()|",
      "|java+method:///scala/collection/immutable/List/filter(scala.Function1)|",
      "|java+method:///scala/collection/immutable/Set/mkString(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/topicIdOpt()|",
      "|java+method:///scala/Predef$/Set()|",
      "|java+method:///kafka/common/MessageFormatter/init(java.util.Properties)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///scala/Option/isDefined()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/liftedTree1$1(java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/keyDeserializer()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/skipMessageOnErrorOpt()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/extraConsumerProps()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/fromBeginning()|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/describedAs(java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/whitelistOpt()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///kafka/consumer/Whitelist/Whitelist(java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/tryParse(joptsimple.OptionParser,java.lang.String%5B%5D)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/timeoutMsOpt()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/partitionArg()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/messageFormatterClass()|",
      "|java+method:///java/lang/String/toLowerCase(java.util.Locale)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/filterSpec_$eq(kafka.consumer.TopicFilter)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/groupIdPassed_$eq(boolean)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/partitionIdOpt()|",
      "|java+method:///java/util/Random/nextInt(int)|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///java/util/Properties/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///kafka/metrics/KafkaMetricsReporter$/startReporters(kafka.utils.VerifiableProperties)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/valueDeserializerOpt()|",
      "|java+method:///scala/Option$/apply(java.lang.Object)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+constructor:///joptsimple/OptionParser/OptionParser(boolean)|",
      "|java+method:///kafka/utils/CommandLineUtils$/printUsageAndDie(joptsimple.OptionParser,java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/consumerProps()|",
      "|java+method:///java/lang/String/toString()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/topicArg_$eq(java.lang.String)|",
      "|java+method:///scala/collection/JavaConverters$/asScalaBufferConverter(java.util.List)|",
      "|java+constructor:///java/util/Properties/Properties()|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/consumerConfigOpt()|",
      "|java+constructor:///java/util/Random/Random()|",
      "|java+method:///joptsimple/OptionSpecBuilder/withRequiredArg()|",
      "|java+method:///scala/collection/immutable/List$/apply(scala.collection.Seq)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///scala/collection/immutable/Set/headOption()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/blacklistOpt()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/options()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/useOldConsumer()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///scala/collection/immutable/List/head()|",
      "|java+method:///kafka/utils/CommandLineUtils$/parseKeyValueArgs(scala.collection.Iterable,boolean)|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|",
      "|java+constructor:///kafka/consumer/Blacklist/Blacklist(java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/offsetOpt()|",
      "|java+method:///scala/collection/immutable/List/size()|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+constructor:///kafka/tools/ConsoleConsumer$ConsumerConfig$$anonfun$5/ConsoleConsumer$ConsumerConfig$$anonfun$5(kafka.tools.ConsoleConsumer$ConsumerConfig)|",
      "|java+constructor:///kafka/utils/VerifiableProperties/VerifiableProperties(java.util.Properties)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/groupIdOpt()|",
      "|java+method:///joptsimple/OptionSet/valuesOf(joptsimple.OptionSpec)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/defaultsTo(java.lang.Object,java.lang.Object%5B%5D)|",
      "|java+method:///kafka/api/OffsetRequest$/LatestTime()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/zkConnectOpt()|",
      "|java+constructor:///kafka/tools/ConsoleConsumer$ConsumerConfig$$anonfun$6/ConsoleConsumer$ConsumerConfig$$anonfun$6(kafka.tools.ConsoleConsumer$ConsumerConfig)|",
      "|java+method:///joptsimple/OptionParser/accepts(java.lang.String,java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/whitelistArg_$eq(java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/valueDeserializer()|",
      "|java+method:///joptsimple/OptionParser/accepts(java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/groupIdsProvided()|",
      "|java+constructor:///kafka/tools/ConsoleConsumer$ConsumerConfig$$anonfun$7/ConsoleConsumer$ConsumerConfig$$anonfun$7(kafka.tools.ConsoleConsumer$ConsumerConfig)|",
      "|java+method:///scala/collection/immutable/Set$/apply(scala.collection.Seq)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/invalidOffset(java.lang.String)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/resetBeginningOpt()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/newConsumerOpt()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/formatterArgs()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/parser()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/messageFormatterArgOpt()|",
      "|java+method:///joptsimple/ArgumentAcceptingOptionSpec/ofType(java.lang.Class)|",
      "|java+method:///scala/collection/immutable/Set/size()|",
      "|java+method:///kafka/tools/ConsoleConsumer$ConsumerConfig/consumerPropertyOpt()|",
      "|java+method:///scala/collection/GenTraversable/flatten(scala.Function1)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/network/Processor$$anonfun$processCompletedSends$1/apply(org.apache.kafka.common.network.Send)|",
    "called": "|java+method:///org/apache/kafka/common/network/Selector/unmute(java.lang.String)|",
    "v1Body": [
      "|java+method:///kafka/network/Processor/kafka$network$Processor$$inflightResponses()|",
      "|java+method:///kafka/network/RequestChannel$Response/request()|",
      "|java+method:///org/apache/kafka/common/network/Send/destination()|",
      "|java+method:///kafka/network/Processor/kafka$network$Processor$$updateRequestMetrics(kafka.network.RequestChannel$Request)|",
      "|java+method:///scala/collection/mutable/Map/remove(java.lang.Object)|",
      "|java+method:///kafka/network/Processor/kafka$network$Processor$$selector()|",
      "|java+method:///org/apache/kafka/common/network/Selector/unmute(java.lang.String)|",
      "|java+constructor:///kafka/network/Processor$$anonfun$processCompletedSends$1$$anonfun$8/Processor$$anonfun$processCompletedSends$1$$anonfun$8(kafka.network.Processor$$anonfun$processCompletedSends$1,org.apache.kafka.common.network.Send)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|"
    ],
    "v2Body": [
      "|java+method:///kafka/network/Processor/kafka$network$Processor$$inflightResponses()|",
      "|java+method:///org/apache/kafka/common/network/Send/destination()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///kafka/network/Processor/kafka$network$Processor$$updateRequestMetrics(kafka.network.RequestChannel$Response)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///scala/collection/mutable/Map/remove(java.lang.Object)|",
      "|java+method:///kafka/network/Processor/kafka$network$Processor$$selector()|",
      "|java+method:///org/apache/kafka/common/network/Selector/unmute(java.lang.String)|",
      "|java+constructor:///kafka/network/Processor$$anonfun$processCompletedSends$1$$anonfun$9/Processor$$anonfun$processCompletedSends$1$$anonfun$9(kafka.network.Processor$$anonfun$processCompletedSends$1,org.apache.kafka.common.network.Send)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+method:///kafka/network/Processor/kafka$network$Processor$$processChannelException(java.lang.String,java.lang.String,java.lang.Throwable)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/KafkaApis/handleProduceRequest(kafka.network.RequestChannel$Request)|",
    "called": "|java+method:///org/apache/kafka/common/requests/RequestHeader/toStruct()|",
    "v1Body": [
      "|java+method:///org/apache/kafka/common/requests/ProduceRequest/timeout()|",
      "|java+method:///org/apache/kafka/common/requests/ProduceRequest/clearPartitionRecords()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$14/KafkaApis$$anonfun$14(kafka.server.KafkaApis,kafka.network.RequestChannel$Request)|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///kafka/network/RequestChannel$Request/header()|",
      "|java+method:///kafka/utils/NotNothing$/notNothingEvidence(scala.Predef$$eq$colon$eq)|",
      "|java+method:///kafka/network/RequestChannel$Request/body(scala.reflect.ClassTag,kafka.utils.NotNothing)|",
      "|java+method:///org/apache/kafka/common/requests/ProduceRequest/isIdempotent()|",
      "|java+method:///scala/collection/mutable/Map/isEmpty()|",
      "|java+constructor:///kafka/security/auth/Resource/Resource(kafka.security.auth.ResourceType,java.lang.String)|",
      "|java+method:///kafka/server/ReplicaManager/appendRecords$default$7()|",
      "|java+method:///org/apache/kafka/common/requests/ProduceRequest/acks()|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///scala/Predef$$eq$colon$eq$/tpEquals()|",
      "|java+method:///kafka/server/KafkaApis/kafka$server$KafkaApis$$authorize(kafka.network.RequestChannel$Session,kafka.security.auth.Operation,kafka.security.auth.Resource)|",
      "|java+method:///org/apache/kafka/common/requests/ProduceRequest/isTransactional()|",
      "|java+method:///kafka/server/KafkaApis/replicaManager()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/sizeOf()|",
      "|java+method:///scala/collection/TraversableLike/partition(scala.Function1)|",
      "|java+method:///kafka/server/ReplicaManager/appendRecords(long,short,boolean,boolean,scala.collection.Map,scala.Function1,scala.Option)|",
      "|java+method:///org/apache/kafka/common/requests/RequestHeader/toStruct()|",
      "|java+method:///org/apache/kafka/common/requests/ProduceRequest/transactionalId()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$15/KafkaApis$$anonfun$15(kafka.server.KafkaApis,kafka.network.RequestChannel$Request)|",
      "|java+method:///kafka/network/RequestChannel$Request/session()|",
      "|java+method:///kafka/security/auth/Resource$/ClusterResource()|",
      "|java+method:///scala/collection/JavaConverters$/mapAsScalaMapConverter(java.util.Map)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/collection/Map$/empty()|",
      "|java+method:///kafka/network/RequestChannel$Request/bodyAndSize()|",
      "|java+method:///org/apache/kafka/common/requests/ProduceRequest/partitionRecordsOrFail()|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///scala/collection/mutable/Map/partition(scala.Function1)|",
      "|java+method:///kafka/server/KafkaApis/kafka$server$KafkaApis$$sendResponseCallback$2(scala.collection.Map,kafka.network.RequestChannel$Request,org.apache.kafka.common.requests.ProduceRequest,int,scala.collection.mutable.Map,scala.collection.mutable.Map)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/server/KafkaApis/sendErrorResponse$1(org.apache.kafka.common.protocol.Errors,kafka.network.RequestChannel$Request,org.apache.kafka.common.requests.ProduceRequest)|",
      "|java+method:///kafka/admin/AdminUtils$/AdminClientId()|",
      "|java+method:///org/apache/kafka/common/requests/RequestHeader/clientId()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$handleProduceRequest$1/KafkaApis$$anonfun$handleProduceRequest$1(kafka.server.KafkaApis,kafka.network.RequestChannel$Request,org.apache.kafka.common.requests.ProduceRequest,int,scala.collection.mutable.Map,scala.collection.mutable.Map)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/kafka/common/requests/ProduceRequest/timeout()|",
      "|java+method:///org/apache/kafka/common/requests/RequestHeader/toStruct()|",
      "|java+method:///org/apache/kafka/common/requests/ProduceRequest/transactionalId()|",
      "|java+method:///org/apache/kafka/common/requests/ProduceRequest/clearPartitionRecords()|",
      "|java+method:///scala/collection/TraversableLike/withFilter(scala.Function1)|",
      "|java+method:///kafka/utils/NotNothing$/notNothingEvidence(scala.Predef$$eq$colon$eq)|",
      "|java+method:///kafka/network/RequestChannel$Request/body(scala.reflect.ClassTag,kafka.utils.NotNothing)|",
      "|java+method:///kafka/server/KafkaApis/kafka$server$KafkaApis$$sendResponseCallback$2(scala.collection.Map,kafka.network.RequestChannel$Request,org.apache.kafka.common.requests.ProduceRequest,int,scala.collection.mutable.Map,scala.collection.mutable.Map)|",
      "|java+method:///org/apache/kafka/common/requests/ProduceRequest/isIdempotent()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$handleProduceRequest$2/KafkaApis$$anonfun$handleProduceRequest$2(kafka.server.KafkaApis,kafka.network.RequestChannel$Request,scala.collection.mutable.Map,scala.collection.mutable.Map,scala.collection.mutable.Map)|",
      "|java+constructor:///kafka/security/auth/Resource/Resource(kafka.security.auth.ResourceType,java.lang.String)|",
      "|java+method:///org/apache/kafka/common/requests/ProduceRequest/acks()|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///scala/Predef$$eq$colon$eq$/tpEquals()|",
      "|java+method:///kafka/server/ReplicaManager/appendRecords(long,short,boolean,boolean,scala.collection.Map,scala.Function1,scala.Option,scala.Function1)|",
      "|java+method:///kafka/network/RequestChannel$Request/sizeOfBodyInBytes()|",
      "|java+method:///kafka/server/KafkaApis/kafka$server$KafkaApis$$authorize(kafka.network.RequestChannel$Session,kafka.security.auth.Operation,kafka.security.auth.Resource)|",
      "|java+method:///org/apache/kafka/common/requests/ProduceRequest/isTransactional()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$12/KafkaApis$$anonfun$12(kafka.server.KafkaApis,kafka.network.RequestChannel$Request,org.apache.kafka.common.requests.ProduceRequest,int,scala.collection.mutable.Map,scala.collection.mutable.Map)|",
      "|java+method:///kafka/server/KafkaApis/replicaManager()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/sizeOf()|",
      "|java+method:///kafka/network/RequestChannel$Request/session()|",
      "|java+method:///kafka/security/auth/Resource$/ClusterResource()|",
      "|java+method:///scala/collection/JavaConverters$/mapAsScalaMapConverter(java.util.Map)|",
      "|java+method:///scala/collection/Map$/empty()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$13/KafkaApis$$anonfun$13(kafka.server.KafkaApis,kafka.network.RequestChannel$Request)|",
      "|java+method:///org/apache/kafka/common/requests/ProduceRequest/partitionRecordsOrFail()|",
      "|java+method:///scala/collection/convert/Decorators$AsScala/asScala()|",
      "|java+method:///kafka/network/RequestChannel$Request/header()|",
      "|java+method:///scala/collection/generic/FilterMonadic/foreach(scala.Function1)|",
      "|java+method:///org/apache/kafka/common/protocol/Errors/exception()|",
      "|java+method:///scala/collection/mutable/Map/isEmpty()|",
      "|java+method:///kafka/server/KafkaApis/sendErrorResponseMaybeThrottle(kafka.network.RequestChannel$Request,java.lang.Throwable)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$handleProduceRequest$1/KafkaApis$$anonfun$handleProduceRequest$1(kafka.server.KafkaApis)|",
      "|java+method:///kafka/admin/AdminUtils$/AdminClientId()|",
      "|java+method:///org/apache/kafka/common/requests/RequestHeader/clientId()|",
      "|java+method:///kafka/server/ReplicaManager/appendRecords$default$7()|",
      "|java+method:///scala/collection/mutable/Map$/apply(scala.collection.Seq)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/ClientQuotaManager/quota(java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/apache/kafka/common/utils/Sanitizer/sanitize(java.lang.String)|",
    "v1Body": [
      "|java+method:///kafka/server/QuotaId$/sanitize(java.lang.String)|",
      "|java+method:///kafka/server/QuotaEntity/quota()|",
      "|java+method:///kafka/server/ClientQuotaManager/kafka$server$ClientQuotaManager$$quotaEntity(java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/kafka/common/utils/Sanitizer/sanitize(java.lang.String)|",
      "|java+method:///kafka/server/ClientQuotaManager/kafka$server$ClientQuotaManager$$quotaEntity(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///kafka/server/QuotaEntity/quota()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/controller/ControllerBrokerRequestBatch/kafka$controller$ControllerBrokerRequestBatch$$updateMetadataRequestPartitionInfo$1(kafka.common.TopicAndPartition,boolean)|",
    "called": "|java+constructor:///org/apache/kafka/common/requests/UpdateMetadataRequest$PartitionState/UpdateMetadataRequest$PartitionState(int,int,int,java.util.List,int,java.util.List,java.util.List)|",
    "v1Body": [
      "|java+method:///scala/Some/x()|",
      "|java+method:///kafka/common/TopicAndPartition/topic()|",
      "|java+method:///kafka/controller/LeaderIsrAndControllerEpoch/controllerEpoch()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+constructor:///org/apache/kafka/common/TopicPartition/TopicPartition(java.lang.String,int)|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$kafka$controller$ControllerBrokerRequestBatch$$updateMetadataRequestPartitionInfo$1$1/ControllerBrokerRequestBatch$$anonfun$kafka$controller$ControllerBrokerRequestBatch$$updateMetadataRequestPartitionInfo$1$1(kafka.controller.ControllerBrokerRequestBatch,kafka.common.TopicAndPartition)|",
      "|java+constructor:///kafka/api/PartitionStateInfo/PartitionStateInfo(kafka.controller.LeaderIsrAndControllerEpoch,scala.collection.Seq)|",
      "|java+method:///kafka/controller/ControllerBrokerRequestBatch/info(scala.Function0)|",
      "|java+method:///kafka/controller/ControllerBrokerRequestBatch/controllerContext()|",
      "|java+method:///kafka/controller/ControllerBrokerRequestBatch/updateMetadataRequestPartitionInfoMap()|",
      "|java+method:///scala/collection/mutable/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/controller/LeaderIsrAndControllerEpoch/leaderAndIsr()|",
      "|java+method:///kafka/common/TopicAndPartition/partition()|",
      "|java+method:///kafka/controller/ControllerContext/partitionReplicaAssignment()|",
      "|java+method:///kafka/api/LeaderAndIsr$/duringDelete(scala.collection.immutable.List)|",
      "|java+method:///kafka/api/LeaderAndIsr/isr()|",
      "|java+method:///scala/collection/mutable/Map/apply(java.lang.Object)|",
      "|java+method:///kafka/controller/ControllerContext/partitionLeadershipInfo()|",
      "|java+constructor:///kafka/controller/LeaderIsrAndControllerEpoch/LeaderIsrAndControllerEpoch(kafka.api.LeaderAndIsr,int)|",
      "|java+method:///scala/collection/mutable/Map/get(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///scala/Some/x()|",
      "|java+method:///kafka/common/TopicAndPartition/topic()|",
      "|java+method:///scala/collection/immutable/List$/canBuildFrom()|",
      "|java+constructor:///org/apache/kafka/common/TopicPartition/TopicPartition(java.lang.String,int)|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$kafka$controller$ControllerBrokerRequestBatch$$updateMetadataRequestPartitionInfo$1$1/ControllerBrokerRequestBatch$$anonfun$kafka$controller$ControllerBrokerRequestBatch$$updateMetadataRequestPartitionInfo$1$1(kafka.controller.ControllerBrokerRequestBatch,kafka.common.TopicAndPartition)|",
      "|java+method:///scala/collection/mutable/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$6/ControllerBrokerRequestBatch$$anonfun$6(kafka.controller.ControllerBrokerRequestBatch)|",
      "|java+method:///kafka/controller/ControllerContext/partitionReplicaAssignment()|",
      "|java+method:///scala/collection/immutable/List/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$1/ControllerBrokerRequestBatch$$anonfun$1(kafka.controller.ControllerBrokerRequestBatch,kafka.common.TopicAndPartition)|",
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///kafka/api/LeaderAndIsr/leaderEpoch()|",
      "|java+method:///kafka/controller/LeaderIsrAndControllerEpoch/controllerEpoch()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///kafka/controller/ControllerBrokerRequestBatch/info(scala.Function0)|",
      "|java+method:///scala/collection/Seq/filter(scala.Function1)|",
      "|java+method:///kafka/controller/ControllerBrokerRequestBatch/controllerContext()|",
      "|java+method:///kafka/api/LeaderAndIsr/zkVersion()|",
      "|java+method:///kafka/api/LeaderAndIsr$/duringDelete(scala.collection.immutable.List)|",
      "|java+method:///kafka/api/LeaderAndIsr/isr()|",
      "|java+method:///scala/collection/mutable/Map/apply(java.lang.Object)|",
      "|java+method:///kafka/controller/ControllerContext/partitionLeadershipInfo()|",
      "|java+constructor:///org/apache/kafka/common/requests/UpdateMetadataRequest$PartitionState/UpdateMetadataRequest$PartitionState(int,int,int,java.util.List,int,java.util.List,java.util.List)|",
      "|java+method:///kafka/controller/ControllerBrokerRequestBatch/updateMetadataRequestPartitionInfoMap()|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$7/ControllerBrokerRequestBatch$$anonfun$7(kafka.controller.ControllerBrokerRequestBatch)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///kafka/controller/LeaderIsrAndControllerEpoch/LeaderIsrAndControllerEpoch(kafka.api.LeaderAndIsr,int)|",
      "|java+method:///scala/collection/mutable/Map/get(java.lang.Object)|",
      "|java+method:///kafka/controller/LeaderIsrAndControllerEpoch/leaderAndIsr()|",
      "|java+constructor:///kafka/controller/ControllerBrokerRequestBatch$$anonfun$5/ControllerBrokerRequestBatch$$anonfun$5(kafka.controller.ControllerBrokerRequestBatch)|",
      "|java+method:///kafka/common/TopicAndPartition/partition()|",
      "|java+method:///kafka/api/LeaderAndIsr/leader()|",
      "|java+method:///scala/collection/Seq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/collection/JavaConverters$/seqAsJavaListConverter(scala.collection.Seq)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/coordinator/group/GroupMetadataManager$/groupMetadataKey(java.lang.String)|",
    "called": "|java+method:///org/apache/kafka/common/protocol/types/Struct/set(org.apache.kafka.common.protocol.types.BoundField,java.lang.Object)|",
    "v1Body": [
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/CURRENT_GROUP_KEY_SCHEMA()|",
      "|java+constructor:///org/apache/kafka/common/protocol/types/Struct/Struct(org.apache.kafka.common.protocol.types.Schema)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/set(org.apache.kafka.common.protocol.types.Field,java.lang.Object)|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/CURRENT_GROUP_KEY_SCHEMA_VERSION()|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/sizeOf()|",
      "|java+method:///java/nio/ByteBuffer/putShort(short)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/writeTo(java.nio.ByteBuffer)|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/GROUP_KEY_GROUP_FIELD()|"
    ],
    "v2Body": [
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/CURRENT_GROUP_KEY_SCHEMA()|",
      "|java+constructor:///org/apache/kafka/common/protocol/types/Struct/Struct(org.apache.kafka.common.protocol.types.Schema)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/set(org.apache.kafka.common.protocol.types.BoundField,java.lang.Object)|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/CURRENT_GROUP_KEY_SCHEMA_VERSION()|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/sizeOf()|",
      "|java+method:///java/nio/ByteBuffer/putShort(short)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/writeTo(java.nio.ByteBuffer)|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/GROUP_KEY_GROUP_FIELD()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/cluster/Broker$/createBroker(int,java.lang.String)|",
    "called": "|java+method:///org/apache/kafka/common/network/ListenerName/forSecurityProtocol(org.apache.kafka.common.security.auth.SecurityProtocol)|",
    "v1Body": [
      "|java+method:///scala/Some/x()|",
      "|java+method:///kafka/cluster/Broker$/kafka$cluster$Broker$$RackKey()|",
      "|java+method:///scala/collection/immutable/List$/canBuildFrom()|",
      "|java+method:///kafka/cluster/Broker$/VersionKey()|",
      "|java+constructor:///kafka/cluster/Broker$$anonfun$3/Broker$$anonfun$3()|",
      "|java+constructor:///kafka/cluster/Broker$$anonfun$2/Broker$$anonfun$2(scala.Option)|",
      "|java+constructor:///kafka/cluster/Broker$$anonfun$4/Broker$$anonfun$4()|",
      "|java+method:///org/apache/kafka/common/network/ListenerName/forSecurityProtocol(org.apache.kafka.common.protocol.SecurityProtocol)|",
      "|java+method:///scala/collection/immutable/Map/apply(java.lang.Object)|",
      "|java+constructor:///kafka/common/BrokerNotAvailableException/BrokerNotAvailableException(java.lang.String)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/cluster/Broker$/PortKey()|",
      "|java+method:///kafka/cluster/Broker$/EndpointsKey()|",
      "|java+method:///kafka/utils/Json$/parseFull(java.lang.String)|",
      "|java+constructor:///kafka/cluster/Broker$$anonfun$1/Broker$$anonfun$1()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+constructor:///kafka/cluster/Broker/Broker(int,scala.collection.Seq,scala.Option)|",
      "|java+method:///kafka/cluster/Broker$/ListenerSecurityProtocolMapKey()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/Option/filter(scala.Function1)|",
      "|java+constructor:///kafka/common/KafkaException/KafkaException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///scala/Option/map(scala.Function1)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+constructor:///kafka/common/KafkaException/KafkaException(java.lang.String)|",
      "|java+method:///kafka/cluster/Broker$/HostKey()|",
      "|java+method:///scala/collection/Seq$/apply(scala.collection.Seq)|",
      "|java+method:///scala/collection/immutable/Map/get(java.lang.Object)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToInt(java.lang.Object)|",
      "|java+constructor:///kafka/cluster/EndPoint/EndPoint(java.lang.String,int,org.apache.kafka.common.network.ListenerName,org.apache.kafka.common.protocol.SecurityProtocol)|",
      "|java+method:///scala/collection/immutable/List/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|"
    ],
    "v2Body": [
      "|java+method:///scala/Some/x()|",
      "|java+method:///kafka/cluster/Broker$/kafka$cluster$Broker$$RackKey()|",
      "|java+method:///kafka/cluster/Broker$/VersionKey()|",
      "|java+method:///kafka/utils/json/JsonObject/get(java.lang.String)|",
      "|java+constructor:///kafka/cluster/Broker$$anonfun$3/Broker$$anonfun$3()|",
      "|java+method:///kafka/utils/json/DecodeJson$/decodeSeq(kafka.utils.json.DecodeJson,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/cluster/Broker$/PortKey()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///kafka/utils/Json$/parseFull(java.lang.String)|",
      "|java+constructor:///kafka/cluster/Broker$$anonfun$1/Broker$$anonfun$1()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+constructor:///kafka/cluster/Broker$$anonfun$2/Broker$$anonfun$2(scala.Option)|",
      "|java+method:///scala/Option/flatMap(scala.Function1)|",
      "|java+constructor:///kafka/cluster/Broker/Broker(int,scala.collection.Seq,scala.Option)|",
      "|java+method:///kafka/cluster/Broker$/ListenerSecurityProtocolMapKey()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/Predef$/fallbackStringCanBuildFrom()|",
      "|java+constructor:///kafka/common/KafkaException/KafkaException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///scala/Option/map(scala.Function1)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+constructor:///kafka/common/KafkaException/KafkaException(java.lang.String)|",
      "|java+method:///kafka/cluster/Broker$/HostKey()|",
      "|java+method:///scala/collection/Seq$/apply(scala.collection.Seq)|",
      "|java+method:///kafka/utils/json/JsonValue/to(kafka.utils.json.DecodeJson)|",
      "|java+constructor:///kafka/common/BrokerNotAvailableException/BrokerNotAvailableException(java.lang.String)|",
      "|java+method:///kafka/utils/json/JsonValue/asJsonObject()|",
      "|java+method:///scala/runtime/BoxesRunTime/unboxToInt(java.lang.Object)|",
      "|java+constructor:///kafka/cluster/EndPoint/EndPoint(java.lang.String,int,org.apache.kafka.common.network.ListenerName,org.apache.kafka.common.security.auth.SecurityProtocol)|",
      "|java+method:///org/apache/kafka/common/network/ListenerName/forSecurityProtocol(org.apache.kafka.common.security.auth.SecurityProtocol)|",
      "|java+method:///scala/collection/Seq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///kafka/cluster/Broker$/EndpointsKey()|",
      "|java+method:///kafka/utils/json/JsonObject/apply(java.lang.String)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/KafkaApis$$anonfun$18/apply(scala.Tuple2)|",
    "called": "|java+constructor:///org/apache/kafka/common/requests/ListOffsetResponse$PartitionData/ListOffsetResponse$PartitionData(org.apache.kafka.common.protocol.Errors,java.util.List)|",
    "v1Body": [
      "|java+method:///org/apache/kafka/common/protocol/Errors/exceptionName()|",
      "|java+method:///scala/Predef$/ArrowAssoc(java.lang.Object)|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///scala/Predef$ArrowAssoc$/$minus$greater$extension(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///scala/collection/Seq/exists(scala.Function1)|",
      "|java+method:///kafka/cluster/Replica/highWatermark()|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///scala/collection/Seq/dropWhile(scala.Function1)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$18$$anonfun$apply$10/KafkaApis$$anonfun$18$$anonfun$apply$10(kafka.server.KafkaApis$$anonfun$18,java.lang.Throwable)|",
      "|java+method:///kafka/server/KafkaApis/fetchOffsets(kafka.log.LogManager,org.apache.kafka.common.TopicPartition,long,int)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///kafka/server/KafkaApis/error(scala.Function0,scala.Function0)|",
      "|java+method:///kafka/server/KafkaApis/replicaManager()|",
      "|java+method:///scala/collection/SeqLike/$plus$colon(java.lang.Object,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///org/apache/kafka/common/protocol/Errors/forException(java.lang.Throwable)|",
      "|java+method:///kafka/server/LogOffsetMetadata/messageOffset()|",
      "|java+method:///kafka/server/ReplicaManager/getReplicaOrException(org.apache.kafka.common.TopicPartition)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$18$$anonfun$apply$8/KafkaApis$$anonfun$18$$anonfun$apply$8(kafka.server.KafkaApis$$anonfun$18,org.apache.kafka.common.TopicPartition,java.lang.Throwable)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$18$$anonfun$2/KafkaApis$$anonfun$18$$anonfun$2(kafka.server.KafkaApis$$anonfun$18,long)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$18$$anonfun$3/KafkaApis$$anonfun$18$$anonfun$3(kafka.server.KafkaApis$$anonfun$18,long)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/requests/ListOffsetRequest/replicaId()|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$18$$anonfun$apply$9/KafkaApis$$anonfun$18$$anonfun$apply$9(kafka.server.KafkaApis$$anonfun$18)|",
      "|java+constructor:///kafka/server/KafkaApis$$anonfun$18$$anonfun$apply$7/KafkaApis$$anonfun$18$$anonfun$apply$7(kafka.server.KafkaApis$$anonfun$18)|",
      "|java+method:///kafka/server/ReplicaManager/getLeaderReplicaIfLocal(org.apache.kafka.common.TopicPartition)|",
      "|java+method:///kafka/server/ReplicaManager/logManager()|",
      "|java+constructor:///org/apache/kafka/common/requests/ListOffsetResponse$PartitionData/ListOffsetResponse$PartitionData(org.apache.kafka.common.protocol.Errors,java.util.List)|",
      "|java+method:///kafka/server/KafkaApis/debug(scala.Function0)|",
      "|java+method:///scala/collection/Seq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/collection/JavaConverters$/seqAsJavaListConverter(scala.collection.Seq)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/coordinator/group/GroupMetadataManager$/offsetCommitKey(java.lang.String,org.apache.kafka.common.TopicPartition,short)|",
    "called": "|java+method:///org/apache/kafka/common/protocol/types/Struct/set(org.apache.kafka.common.protocol.types.BoundField,java.lang.Object)|",
    "v1Body": [
      "|java+constructor:///org/apache/kafka/common/protocol/types/Struct/Struct(org.apache.kafka.common.protocol.types.Schema)|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/OFFSET_KEY_GROUP_FIELD()|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/set(org.apache.kafka.common.protocol.types.Field,java.lang.Object)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/writeTo(java.nio.ByteBuffer)|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/CURRENT_OFFSET_KEY_SCHEMA()|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/sizeOf()|",
      "|java+method:///java/nio/ByteBuffer/putShort(short)|",
      "|java+method:///org/apache/kafka/common/TopicPartition/partition()|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/OFFSET_KEY_PARTITION_FIELD()|",
      "|java+method:///org/apache/kafka/common/TopicPartition/topic()|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/CURRENT_OFFSET_KEY_SCHEMA_VERSION()|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/OFFSET_KEY_TOPIC_FIELD()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/kafka/common/protocol/types/Struct/Struct(org.apache.kafka.common.protocol.types.Schema)|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/OFFSET_KEY_GROUP_FIELD()|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/set(org.apache.kafka.common.protocol.types.BoundField,java.lang.Object)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/writeTo(java.nio.ByteBuffer)|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/CURRENT_OFFSET_KEY_SCHEMA()|",
      "|java+method:///org/apache/kafka/common/protocol/types/Struct/sizeOf()|",
      "|java+method:///java/nio/ByteBuffer/putShort(short)|",
      "|java+method:///org/apache/kafka/common/TopicPartition/partition()|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/OFFSET_KEY_PARTITION_FIELD()|",
      "|java+method:///org/apache/kafka/common/TopicPartition/topic()|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/CURRENT_OFFSET_KEY_SCHEMA_VERSION()|",
      "|java+method:///kafka/coordinator/group/GroupMetadataManager$/OFFSET_KEY_TOPIC_FIELD()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/log/Log$$anonfun$completeSwapOperations$1/apply(java.io.File)|",
    "called": "|java+method:///org/apache/kafka/common/record/FileRecords/open(java.io.File)|",
    "v1Body": [
      "|java+constructor:///kafka/log/Log$$anonfun$completeSwapOperations$1$$anonfun$apply$4/Log$$anonfun$completeSwapOperations$1$$anonfun$apply$4(kafka.log.Log$$anonfun$completeSwapOperations$1,java.io.File)|",
      "|java+method:///kafka/log/LogConfig/maxIndexSize()|",
      "|java+constructor:///kafka/log/OffsetIndex/OffsetIndex(java.io.File,long,int,boolean)|",
      "|java+method:///scala/collection/Iterable/toSeq()|",
      "|java+method:///kafka/log/Log/info(scala.Function0)|",
      "|java+method:///kafka/log/OffsetIndex$/$lessinit$greater$default$4()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+constructor:///kafka/log/LogSegment/LogSegment(org.apache.kafka.common.record.FileRecords,kafka.log.OffsetIndex,kafka.log.TimeIndex,kafka.log.TransactionIndex,long,int,long,org.apache.kafka.common.utils.Time)|",
      "|java+method:///kafka/log/Log/kafka$log$Log$$recoverSegment$default$2()|",
      "|java+method:///kafka/utils/CoreUtils$/replaceSuffix(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/io/File/getName()|",
      "|java+method:///kafka/log/Log$/TxnIndexFileSuffix()|",
      "|java+method:///kafka/log/Log/kafka$log$Log$$recoverSegment(kafka.log.LogSegment,scala.Option)|",
      "|java+method:///kafka/log/LogSegment/baseOffset()|",
      "|java+method:///kafka/log/LogSegment/nextOffset()|",
      "|java+constructor:///kafka/log/TransactionIndex/TransactionIndex(long,java.io.File)|",
      "|java+method:///kafka/log/TimeIndex$/$lessinit$greater$default$4()|",
      "|java+method:///org/apache/kafka/common/record/FileRecords/open(java.io.File)|",
      "|java+method:///kafka/log/Log$/LogFileSuffix()|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///kafka/log/Log$/TimeIndexFileSuffix()|",
      "|java+method:///kafka/log/LogConfig/indexInterval()|",
      "|java+method:///kafka/log/Log$/offsetFromFilename(java.lang.String)|",
      "|java+method:///kafka/log/Log/replaceSegments(kafka.log.LogSegment,scala.collection.Seq,boolean)|",
      "|java+method:///kafka/log/Log$/SwapFileSuffix()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///kafka/log/Log/logSegments(long,long)|",
      "|java+constructor:///kafka/log/TimeIndex/TimeIndex(java.io.File,long,int,boolean)|",
      "|java+method:///kafka/log/LogConfig/randomSegmentJitter()|",
      "|java+method:///kafka/log/Log/config()|",
      "|java+method:///scala/Predef$/Integer2int(java.lang.Integer)|",
      "|java+method:///kafka/log/Log$/IndexFileSuffix()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///java/io/File/getPath()|"
    ],
    "v2Body": [
      "|java+constructor:///kafka/log/Log$$anonfun$completeSwapOperations$1$$anonfun$apply$5/Log$$anonfun$completeSwapOperations$1$$anonfun$apply$5(kafka.log.Log$$anonfun$completeSwapOperations$1,java.io.File)|",
      "|java+method:///kafka/utils/CoreUtils$/replaceSuffix(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///kafka/log/LogConfig/maxIndexSize()|",
      "|java+constructor:///kafka/log/OffsetIndex/OffsetIndex(java.io.File,long,int,boolean)|",
      "|java+method:///scala/collection/Iterable/toSeq()|",
      "|java+method:///kafka/log/Log/info(scala.Function0)|",
      "|java+method:///kafka/log/OffsetIndex$/$lessinit$greater$default$4()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///kafka/log/LogConfig/indexInterval()|",
      "|java+method:///kafka/log/Log$/offsetFromFile(java.io.File)|",
      "|java+constructor:///kafka/log/LogSegment/LogSegment(org.apache.kafka.common.record.FileRecords,kafka.log.OffsetIndex,kafka.log.TimeIndex,kafka.log.TransactionIndex,long,int,long,org.apache.kafka.common.utils.Time)|",
      "|java+method:///kafka/log/Log/kafka$log$Log$$recoverSegment$default$2()|",
      "|java+method:///kafka/log/Log$/TxnIndexFileSuffix()|",
      "|java+method:///kafka/log/Log/kafka$log$Log$$recoverSegment(kafka.log.LogSegment,scala.Option)|",
      "|java+method:///kafka/log/LogSegment/baseOffset()|",
      "|java+method:///kafka/log/LogSegment/nextOffset()|",
      "|java+constructor:///kafka/log/TransactionIndex/TransactionIndex(long,java.io.File)|",
      "|java+method:///kafka/log/TimeIndex$/$lessinit$greater$default$4()|",
      "|java+method:///org/apache/kafka/common/record/FileRecords/open(java.io.File)|",
      "|java+method:///kafka/log/Log$/LogFileSuffix()|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///kafka/log/Log$/TimeIndexFileSuffix()|",
      "|java+method:///kafka/log/Log/replaceSegments(kafka.log.LogSegment,scala.collection.Seq,boolean)|",
      "|java+method:///kafka/log/Log$/SwapFileSuffix()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///kafka/log/Log/logSegments(long,long)|",
      "|java+constructor:///kafka/log/TimeIndex/TimeIndex(java.io.File,long,int,boolean)|",
      "|java+method:///kafka/log/LogConfig/randomSegmentJitter()|",
      "|java+method:///kafka/log/Log/config()|",
      "|java+method:///scala/Predef$/Integer2int(java.lang.Integer)|",
      "|java+method:///kafka/log/Log$/IndexFileSuffix()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///java/io/File/getPath()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/admin/ReassignPartitionsCommand$/main(java.lang.String%5B%5D)|",
    "called": "|java+method:///org/apache/kafka/common/security/JaasUtils/isZkSecurityEnabled()|",
    "v1Body": [
      "|java+method:///kafka/admin/ReassignPartitionsCommand$/executeAssignment(kafka.utils.ZkUtils,kafka.admin.ReassignPartitionsCommand$ReassignPartitionsCommandOptions)|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$/verifyAssignment(kafka.utils.ZkUtils,kafka.admin.ReassignPartitionsCommand$ReassignPartitionsCommandOptions)|",
      "|java+method:///java/lang/Throwable/getMessage()|",
      "|java+method:///org/apache/kafka/common/security/JaasUtils/isZkSecurityEnabled()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/verifyOpt()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/zkConnectOpt()|",
      "|java+method:///kafka/utils/ZkUtils$/apply(java.lang.String,int,int,boolean)|",
      "|java+method:///scala/Predef$/println(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/utils/Utils/stackTrace(java.lang.Throwable)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$/generateAssignment(kafka.utils.ZkUtils,kafka.admin.ReassignPartitionsCommand$ReassignPartitionsCommandOptions)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$/validateAndParseArgs(java.lang.String%5B%5D)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/options()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/generateOpt()|",
      "|java+method:///kafka/utils/ZkUtils/close()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/executeOpt()|"
    ],
    "v2Body": [
      "|java+method:///kafka/admin/ReassignPartitionsCommand$/createAdminClient(kafka.admin.ReassignPartitionsCommand$ReassignPartitionsCommandOptions)|",
      "|java+method:///java/lang/Throwable/getMessage()|",
      "|java+method:///org/apache/kafka/common/security/JaasUtils/isZkSecurityEnabled()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/verifyOpt()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///joptsimple/OptionSet/valueOf(joptsimple.OptionSpec)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/zkConnectOpt()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$/verifyAssignment(kafka.utils.ZkUtils,scala.Option,kafka.admin.ReassignPartitionsCommand$ReassignPartitionsCommandOptions)|",
      "|java+method:///kafka/utils/ZkUtils$/apply(java.lang.String,int,int,boolean)|",
      "|java+method:///scala/Predef$/println(java.lang.Object)|",
      "|java+method:///org/apache/kafka/common/utils/Utils/stackTrace(java.lang.Throwable)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$/executeAssignment(kafka.utils.ZkUtils,scala.Option,kafka.admin.ReassignPartitionsCommand$ReassignPartitionsCommandOptions)|",
      "|java+method:///joptsimple/OptionSet/has(joptsimple.OptionSpec)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$/generateAssignment(kafka.utils.ZkUtils,kafka.admin.ReassignPartitionsCommand$ReassignPartitionsCommandOptions)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$/validateAndParseArgs(java.lang.String%5B%5D)|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/options()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/generateOpt()|",
      "|java+method:///kafka/utils/ZkUtils/close()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///kafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions/executeOpt()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.kafka:kafka_2.11:0.11.0.3",
    "coordinatesV2": "org.apache.kafka:kafka_2.11:1.0.0",
    "caller": "|java+method:///kafka/server/ReplicaManager/getLeaderReplicaIfLocal(org.apache.kafka.common.TopicPartition)|",
    "called": "|java+constructor:///org/apache/kafka/common/errors/UnknownTopicOrPartitionException/UnknownTopicOrPartitionException(java.lang.String)|",
    "v1Body": [
      "|java+method:///scala/Some/x()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///kafka/server/ReplicaManager/getPartition(org.apache.kafka.common.TopicPartition)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/server/ReplicaManager/kafka$server$ReplicaManager$$localBrokerId()|",
      "|java+method:///kafka/cluster/Partition/leaderReplicaIfLocal()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+constructor:///org/apache/kafka/common/errors/NotLeaderForPartitionException/NotLeaderForPartitionException(java.lang.String)|",
      "|java+constructor:///org/apache/kafka/common/errors/UnknownTopicOrPartitionException/UnknownTopicOrPartitionException(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///scala/Some/x()|",
      "|java+constructor:///org/apache/kafka/common/errors/KafkaStorageException/KafkaStorageException(java.lang.String)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///kafka/server/ReplicaManager/getPartition(org.apache.kafka.common.TopicPartition)|",
      "|java+method:///kafka/server/ReplicaManager$/OfflinePartition()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///kafka/server/ReplicaManager/kafka$server$ReplicaManager$$localBrokerId()|",
      "|java+method:///kafka/cluster/Partition/leaderReplicaIfLocal()|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+constructor:///org/apache/kafka/common/errors/NotLeaderForPartitionException/NotLeaderForPartitionException(java.lang.String)|",
      "|java+constructor:///org/apache/kafka/common/errors/UnknownTopicOrPartitionException/UnknownTopicOrPartitionException(java.lang.String)|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:1.0.0",
    "change": "UPDATED"
  }
]