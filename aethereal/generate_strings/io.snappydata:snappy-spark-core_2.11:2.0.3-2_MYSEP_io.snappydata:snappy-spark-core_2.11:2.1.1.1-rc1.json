[
  {
    "coordinatesV1": "io.snappydata:snappy-spark-core_2.11:2.1.1.1-rc1",
    "coordinatesV2": "io.snappydata:snappy-spark-core_2.11:2.0.3-2",
    "caller": "|java+method:///org/apache/spark/SparkContext$/org$apache$spark$SparkContext$$createTaskScheduler(org.apache.spark.SparkContext,java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/apache/mesos/MesosNativeLibrary/load()|",
    "v1Body": [
      "|java+method:///org/apache/spark/SparkMasterRegex$/MESOS_REGEX()|",
      "|java+constructor:///org/apache/spark/SparkContext$$anonfun$40/SparkContext$$anonfun$40()|",
      "|java+method:///scala/Option/isEmpty()|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///org/apache/spark/deploy/LocalSparkCluster/start()|",
      "|java+method:///org/apache/spark/scheduler/ExternalClusterManager/initialize(org.apache.spark.scheduler.TaskScheduler,org.apache.spark.scheduler.SchedulerBackend)|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///scala/Some/x()|",
      "|java+method:///org/apache/spark/SparkMasterRegex$/LOCAL_N_REGEX()|",
      "|java+method:///org/apache/spark/SparkContext/getConf()|",
      "|java+constructor:///org/apache/spark/SparkException/SparkException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+constructor:///org/apache/spark/SparkException/SparkException(java.lang.String)|",
      "|java+method:///org/apache/spark/SparkConf/getBoolean(java.lang.String,boolean)|",
      "|java+method:///org/apache/spark/SparkContext/executorMemory()|",
      "|java+method:///scala/util/control/NonFatal$/unapply(java.lang.Throwable)|",
      "|java+method:///scala/Array$/canBuildFrom(scala.reflect.ClassTag)|",
      "|java+method:///org/apache/spark/SparkMasterRegex$/SPARK_REGEX()|",
      "|java+constructor:///org/apache/spark/SparkContext$$anonfun$org$apache$spark$SparkContext$$createTaskScheduler$1/SparkContext$$anonfun$org$apache$spark$SparkContext$$createTaskScheduler$1(org.apache.spark.deploy.LocalSparkCluster)|",
      "|java+method:///org/apache/mesos/MesosNativeLibrary/load()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+constructor:///org/apache/spark/scheduler/cluster/mesos/MesosCoarseGrainedSchedulerBackend/MesosCoarseGrainedSchedulerBackend(org.apache.spark.scheduler.TaskSchedulerImpl,org.apache.spark.SparkContext,java.lang.String,org.apache.spark.SecurityManager)|",
      "|java+method:///scala/collection/LinearSeqOptimized/apply(int)|",
      "|java+method:///scala/collection/mutable/ArrayOps/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+constructor:///org/apache/spark/scheduler/local/LocalSchedulerBackend/LocalSchedulerBackend(org.apache.spark.SparkConf,org.apache.spark.scheduler.TaskSchedulerImpl,int)|",
      "|java+method:///org/apache/spark/scheduler/ExternalClusterManager/createTaskScheduler(org.apache.spark.SparkContext,java.lang.String)|",
      "|java+constructor:///org/apache/spark/scheduler/cluster/StandaloneSchedulerBackend/StandaloneSchedulerBackend(org.apache.spark.scheduler.TaskSchedulerImpl,org.apache.spark.SparkContext,java.lang.String%5B%5D)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/collection/immutable/StringOps/toInt()|",
      "|java+method:///org/apache/spark/SparkMasterRegex$/LOCAL_N_FAILURES_REGEX()|",
      "|java+method:///org/apache/spark/SparkMasterRegex$/LOCAL_CLUSTER_REGEX()|",
      "|java+method:///scala/util/matching/Regex/unapplySeq(java.lang.CharSequence)|",
      "|java+method:///org/apache/spark/scheduler/cluster/StandaloneSchedulerBackend/shutdownCallback_$eq(scala.Function1)|",
      "|java+method:///org/apache/spark/scheduler/TaskSchedulerImpl/initialize(org.apache.spark.scheduler.SchedulerBackend)|",
      "|java+method:///org/apache/spark/SparkEnv/securityManager()|",
      "|java+method:///org/apache/spark/scheduler/ExternalClusterManager/createSchedulerBackend(org.apache.spark.SparkContext,java.lang.String,org.apache.spark.scheduler.TaskScheduler)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///org/apache/spark/deploy/LocalSparkCluster/LocalSparkCluster(int,int,int,org.apache.spark.SparkConf)|",
      "|java+method:///org/apache/spark/SparkContext/conf()|",
      "|java+method:///org/apache/spark/SparkContext$/localCpuCount$1()|",
      "|java+method:///org/apache/spark/SparkContext/env()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///org/apache/spark/SparkContext$/localCpuCount$2()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///scala/collection/LinearSeqOptimized/lengthCompare(int)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///org/apache/spark/scheduler/TaskSchedulerImpl/TaskSchedulerImpl(org.apache.spark.SparkContext)|",
      "|java+method:///org/apache/spark/SparkContext$/getClusterManager(java.lang.String)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+constructor:///org/apache/spark/scheduler/TaskSchedulerImpl/TaskSchedulerImpl(org.apache.spark.SparkContext,int,boolean)|",
      "|java+constructor:///org/apache/spark/scheduler/cluster/mesos/MesosFineGrainedSchedulerBackend/MesosFineGrainedSchedulerBackend(org.apache.spark.scheduler.TaskSchedulerImpl,org.apache.spark.SparkContext,java.lang.String)|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/Option/get()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+constructor:///org/apache/spark/SparkContext$$anonfun$40/SparkContext$$anonfun$40()|",
      "|java+method:///scala/Option/isEmpty()|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///org/apache/spark/SparkContext$/localCpuCount$1()|",
      "|java+method:///org/apache/spark/deploy/LocalSparkCluster/start()|",
      "|java+method:///org/apache/spark/scheduler/ExternalClusterManager/initialize(org.apache.spark.scheduler.TaskScheduler,org.apache.spark.scheduler.SchedulerBackend)|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///scala/Some/x()|",
      "|java+method:///org/apache/spark/SparkMasterRegex$/LOCAL_N_REGEX()|",
      "|java+method:///org/apache/spark/SparkContext/getConf()|",
      "|java+constructor:///org/apache/spark/SparkException/SparkException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+constructor:///org/apache/spark/SparkException/SparkException(java.lang.String)|",
      "|java+method:///org/apache/spark/SparkContext/executorMemory()|",
      "|java+method:///scala/util/control/NonFatal$/unapply(java.lang.Throwable)|",
      "|java+method:///scala/Array$/canBuildFrom(scala.reflect.ClassTag)|",
      "|java+method:///org/apache/spark/SparkMasterRegex$/SPARK_REGEX()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+constructor:///org/apache/spark/SparkContext$$anonfun$org$apache$spark$SparkContext$$createTaskScheduler$1/SparkContext$$anonfun$org$apache$spark$SparkContext$$createTaskScheduler$1(org.apache.spark.deploy.LocalSparkCluster)|",
      "|java+method:///scala/collection/LinearSeqOptimized/apply(int)|",
      "|java+method:///scala/collection/mutable/ArrayOps/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+constructor:///org/apache/spark/scheduler/local/LocalSchedulerBackend/LocalSchedulerBackend(org.apache.spark.SparkConf,org.apache.spark.scheduler.TaskSchedulerImpl,int)|",
      "|java+method:///org/apache/spark/scheduler/ExternalClusterManager/createTaskScheduler(org.apache.spark.SparkContext,java.lang.String)|",
      "|java+constructor:///org/apache/spark/scheduler/cluster/StandaloneSchedulerBackend/StandaloneSchedulerBackend(org.apache.spark.scheduler.TaskSchedulerImpl,org.apache.spark.SparkContext,java.lang.String%5B%5D)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/collection/immutable/StringOps/toInt()|",
      "|java+method:///org/apache/spark/SparkMasterRegex$/LOCAL_N_FAILURES_REGEX()|",
      "|java+method:///org/apache/spark/SparkMasterRegex$/LOCAL_CLUSTER_REGEX()|",
      "|java+method:///scala/util/matching/Regex/unapplySeq(java.lang.CharSequence)|",
      "|java+method:///org/apache/spark/scheduler/cluster/StandaloneSchedulerBackend/shutdownCallback_$eq(scala.Function1)|",
      "|java+method:///org/apache/spark/scheduler/TaskSchedulerImpl/initialize(org.apache.spark.scheduler.SchedulerBackend)|",
      "|java+method:///org/apache/spark/scheduler/ExternalClusterManager/createSchedulerBackend(org.apache.spark.SparkContext,java.lang.String,org.apache.spark.scheduler.TaskScheduler)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///org/apache/spark/deploy/LocalSparkCluster/LocalSparkCluster(int,int,int,org.apache.spark.SparkConf)|",
      "|java+method:///org/apache/spark/SparkContext/conf()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///org/apache/spark/SparkContext$/localCpuCount$2()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///scala/collection/LinearSeqOptimized/lengthCompare(int)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///org/apache/spark/scheduler/TaskSchedulerImpl/TaskSchedulerImpl(org.apache.spark.SparkContext)|",
      "|java+method:///org/apache/spark/SparkContext$/getClusterManager(java.lang.String)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+constructor:///org/apache/spark/scheduler/TaskSchedulerImpl/TaskSchedulerImpl(org.apache.spark.SparkContext,int,boolean)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///scala/collection/immutable/StringOps/format(scala.collection.Seq)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/Option/get()|"
    ],
    "affectedLib": "org.apache.mesos:mesos:0.21.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.snappydata:snappy-spark-core_2.11:2.0.3-2",
    "coordinatesV2": "io.snappydata:snappy-spark-core_2.11:2.1.1.1-rc1",
    "caller": "|java+method:///org/apache/spark/api/r/RBackend$$anon$1/initChannel(io.netty.channel.socket.SocketChannel)|",
    "called": "|java+constructor:///io/netty/handler/codec/LengthFieldBasedFrameDecoder/LengthFieldBasedFrameDecoder(int,int,int,int,int)|",
    "v1Body": [
      "|java+method:///io/netty/channel/ChannelPipeline/addLast(java.lang.String,io.netty.channel.ChannelHandler)|",
      "|java+method:///io/netty/channel/socket/SocketChannel/pipeline()|",
      "|java+constructor:///io/netty/handler/codec/LengthFieldBasedFrameDecoder/LengthFieldBasedFrameDecoder(int,int,int,int,int)|",
      "|java+constructor:///io/netty/handler/codec/bytes/ByteArrayEncoder/ByteArrayEncoder()|",
      "|java+constructor:///io/netty/handler/codec/bytes/ByteArrayDecoder/ByteArrayDecoder()|"
    ],
    "v2Body": [
      "|java+method:///io/netty/channel/ChannelPipeline/addLast(java.lang.String,io.netty.channel.ChannelHandler)|",
      "|java+method:///io/netty/channel/socket/SocketChannel/pipeline()|",
      "|java+constructor:///io/netty/handler/codec/LengthFieldBasedFrameDecoder/LengthFieldBasedFrameDecoder(int,int,int,int,int)|",
      "|java+constructor:///io/netty/handler/timeout/ReadTimeoutHandler/ReadTimeoutHandler(int)|",
      "|java+constructor:///io/netty/handler/codec/bytes/ByteArrayEncoder/ByteArrayEncoder()|",
      "|java+constructor:///io/netty/handler/codec/bytes/ByteArrayDecoder/ByteArrayDecoder()|"
    ],
    "affectedLib": "io.netty:netty-all:4.0.42.Final",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappy-spark-core_2.11:2.0.3-2",
    "coordinatesV2": "io.snappydata:snappy-spark-core_2.11:2.1.1.1-rc1",
    "caller": "|java+method:///org/apache/spark/api/r/RBackend/init()|",
    "called": "|java+method:///io/netty/bootstrap/ServerBootstrap/group(io.netty.channel.EventLoopGroup,io.netty.channel.EventLoopGroup)|",
    "v1Body": [
      "|java+method:///io/netty/bootstrap/ServerBootstrap/channel(java.lang.Class)|",
      "|java+method:///org/apache/spark/SparkConf/getInt(java.lang.String,int)|",
      "|java+method:///io/netty/channel/ChannelFuture/syncUninterruptibly()|",
      "|java+constructor:///java/net/InetSocketAddress/InetSocketAddress(java.lang.String,int)|",
      "|java+constructor:///io/netty/channel/nio/NioEventLoopGroup/NioEventLoopGroup(int)|",
      "|java+constructor:///org/apache/spark/SparkConf/SparkConf()|",
      "|java+constructor:///io/netty/bootstrap/ServerBootstrap/ServerBootstrap()|",
      "|java+method:///io/netty/bootstrap/ServerBootstrap/group(io.netty.channel.EventLoopGroup,io.netty.channel.EventLoopGroup)|",
      "|java+method:///io/netty/bootstrap/ServerBootstrap/childHandler(io.netty.channel.ChannelHandler)|",
      "|java+method:///io/netty/bootstrap/ServerBootstrap/bind(java.net.SocketAddress)|",
      "|java+method:///java/net/InetSocketAddress/getPort()|",
      "|java+method:///io/netty/channel/ChannelFuture/channel()|",
      "|java+constructor:///org/apache/spark/api/r/RBackend$$anon$1/RBackend$$anon$1(org.apache.spark.api.r.RBackend,org.apache.spark.api.r.RBackendHandler)|",
      "|java+method:///io/netty/channel/Channel/localAddress()|",
      "|java+constructor:///org/apache/spark/api/r/RBackendHandler/RBackendHandler(org.apache.spark.api.r.RBackend)|"
    ],
    "v2Body": [
      "|java+method:///io/netty/bootstrap/ServerBootstrap/channel(java.lang.Class)|",
      "|java+method:///org/apache/spark/SparkConf/getInt(java.lang.String,int)|",
      "|java+method:///io/netty/channel/ChannelFuture/syncUninterruptibly()|",
      "|java+constructor:///java/net/InetSocketAddress/InetSocketAddress(java.lang.String,int)|",
      "|java+method:///org/apache/spark/api/r/SparkRDefaults$/DEFAULT_NUM_RBACKEND_THREADS()|",
      "|java+constructor:///org/apache/spark/SparkConf/SparkConf()|",
      "|java+constructor:///io/netty/bootstrap/ServerBootstrap/ServerBootstrap()|",
      "|java+method:///io/netty/channel/ChannelFuture/channel()|",
      "|java+method:///io/netty/bootstrap/ServerBootstrap/group(io.netty.channel.EventLoopGroup,io.netty.channel.EventLoopGroup)|",
      "|java+constructor:///org/apache/spark/api/r/RBackend$$anon$1/RBackend$$anon$1(org.apache.spark.api.r.RBackend,int,org.apache.spark.api.r.RBackendHandler)|",
      "|java+method:///io/netty/bootstrap/ServerBootstrap/childHandler(io.netty.channel.ChannelHandler)|",
      "|java+constructor:///io/netty/channel/nio/NioEventLoopGroup/NioEventLoopGroup(int)|",
      "|java+method:///org/apache/spark/api/r/SparkRDefaults$/DEFAULT_CONNECTION_TIMEOUT()|",
      "|java+method:///io/netty/bootstrap/ServerBootstrap/bind(java.net.SocketAddress)|",
      "|java+method:///java/net/InetSocketAddress/getPort()|",
      "|java+method:///io/netty/channel/Channel/localAddress()|",
      "|java+constructor:///org/apache/spark/api/r/RBackendHandler/RBackendHandler(org.apache.spark.api.r.RBackend)|"
    ],
    "affectedLib": "io.netty:netty-all:4.0.42.Final",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappy-spark-core_2.11:2.0.3-2",
    "coordinatesV2": "io.snappydata:snappy-spark-core_2.11:2.1.1.1-rc1",
    "caller": "|java+method:///org/apache/spark/storage/BlockManager/org$apache$spark$storage$BlockManager$$replicate(org.apache.spark.storage.BlockId,org.apache.spark.util.io.ChunkedByteBuffer,org.apache.spark.storage.StorageLevel,scala.reflect.ClassTag)|",
    "called": "|java+constructor:///org/apache/spark/network/buffer/NettyManagedBuffer/NettyManagedBuffer(io.netty.buffer.ByteBuf)|",
    "v1Body": [
      "|java+method:///org/apache/spark/storage/BlockManager/isDebugEnabled()|",
      "|java+method:///org/apache/spark/storage/BlockManager/logTrace(scala.Function0)|",
      "|java+method:///org/apache/spark/storage/BlockManager/blockTransferService()|",
      "|java+method:///scala/Option/isEmpty()|",
      "|java+constructor:///org/apache/spark/storage/BlockManager$$anonfun$org$apache$spark$storage$BlockManager$$replicate$5/BlockManager$$anonfun$org$apache$spark$storage$BlockManager$$replicate$5(org.apache.spark.storage.BlockManager,org.apache.spark.storage.BlockId,int,scala.collection.mutable.ArrayBuffer)|",
      "|java+method:///org/apache/spark/storage/StorageLevel$/apply(boolean,boolean,boolean,boolean,int)|",
      "|java+constructor:///org/apache/spark/storage/BlockManager$$anonfun$org$apache$spark$storage$BlockManager$$replicate$4/BlockManager$$anonfun$org$apache$spark$storage$BlockManager$$replicate$4(org.apache.spark.storage.BlockManager,org.apache.spark.storage.BlockId,org.apache.spark.util.io.ChunkedByteBuffer,scala.collection.mutable.ArrayBuffer,long)|",
      "|java+constructor:///org/apache/spark/storage/BlockManager$$anonfun$org$apache$spark$storage$BlockManager$$replicate$2/BlockManager$$anonfun$org$apache$spark$storage$BlockManager$$replicate$2(org.apache.spark.storage.BlockManager,org.apache.spark.storage.BlockId,org.apache.spark.util.io.ChunkedByteBuffer,org.apache.spark.storage.BlockManagerId,long)|",
      "|java+method:///scala/runtime/IntRef/create(int)|",
      "|java+constructor:///org/apache/spark/network/buffer/NettyManagedBuffer/NettyManagedBuffer(io.netty.buffer.ByteBuf)|",
      "|java+method:///org/apache/spark/storage/StorageLevel/useOffHeap()|",
      "|java+method:///scala/collection/mutable/ArrayBuffer/$plus$plus$eq(scala.collection.TraversableOnce)|",
      "|java+method:///org/apache/spark/storage/StorageLevel/replication()|",
      "|java+method:///scala/Option/get()|",
      "|java+method:///org/apache/spark/storage/BlockManagerId/executorId()|",
      "|java+method:///scala/Some/x()|",
      "|java+method:///scala/runtime/BooleanRef/create(boolean)|",
      "|java+method:///org/apache/spark/util/io/ChunkedByteBuffer/toNetty()|",
      "|java+method:///scala/collection/mutable/ArrayBuffer/$plus$eq(java.lang.Object)|",
      "|java+method:///scala/util/control/NonFatal$/unapply(java.lang.Throwable)|",
      "|java+method:///org/apache/spark/SparkConf/getInt(java.lang.String,int)|",
      "|java+method:///scala/collection/mutable/ArrayBuffer/$minus$eq(java.lang.Object)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/apache/spark/storage/BlockManager/getRandomPeer$1(scala.collection.mutable.ArrayBuffer,scala.collection.mutable.ArrayBuffer,scala.collection.mutable.ArrayBuffer,scala.util.Random,scala.runtime.BooleanRef)|",
      "|java+method:///scala/collection/mutable/ArrayBuffer/size()|",
      "|java+method:///org/apache/spark/storage/StorageLevel/deserialized()|",
      "|java+constructor:///org/apache/spark/storage/BlockManager$$anonfun$org$apache$spark$storage$BlockManager$$replicate$3/BlockManager$$anonfun$org$apache$spark$storage$BlockManager$$replicate$3(org.apache.spark.storage.BlockManager,org.apache.spark.storage.BlockId,scala.runtime.IntRef,org.apache.spark.storage.BlockManagerId)|",
      "|java+method:///org/apache/spark/storage/BlockManager/conf()|",
      "|java+method:///org/apache/spark/storage/BlockManager/logWarning(scala.Function0,java.lang.Throwable)|",
      "|java+method:///org/apache/spark/storage/BlockManager/logWarning(scala.Function0)|",
      "|java+constructor:///scala/collection/mutable/ArrayBuffer/ArrayBuffer()|",
      "|java+method:///org/apache/spark/storage/BlockManager/isTraceEnabled()|",
      "|java+method:///org/apache/spark/storage/BlockManagerId/port()|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+method:///org/apache/spark/storage/StorageLevel/useDisk()|",
      "|java+method:///org/apache/spark/storage/BlockManager/getPeers(boolean)|",
      "|java+method:///org/apache/spark/network/BlockTransferService/uploadBlockSync(java.lang.String,int,java.lang.String,org.apache.spark.storage.BlockId,org.apache.spark.network.buffer.ManagedBuffer,org.apache.spark.storage.StorageLevel,scala.reflect.ClassTag)|",
      "|java+constructor:///scala/util/Random/Random(int)|",
      "|java+method:///org/apache/spark/storage/BlockId/hashCode()|",
      "|java+method:///org/apache/spark/storage/BlockManager/logDebug(scala.Function0)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+constructor:///org/apache/spark/storage/BlockManager$$anonfun$org$apache$spark$storage$BlockManager$$replicate$1/BlockManager$$anonfun$org$apache$spark$storage$BlockManager$$replicate$1(org.apache.spark.storage.BlockManager,org.apache.spark.storage.BlockId,org.apache.spark.util.io.ChunkedByteBuffer,org.apache.spark.storage.BlockManagerId)|",
      "|java+method:///org/apache/spark/storage/StorageLevel/useMemory()|",
      "|java+method:///org/apache/spark/storage/BlockManagerId/host()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/spark/util/io/ChunkedByteBuffer/toNetty()|",
      "|java+method:///org/apache/spark/storage/BlockManager/isDebugEnabled()|",
      "|java+method:///scala/collection/immutable/List/tail()|",
      "|java+method:///scala/Option/isEmpty()|",
      "|java+method:///org/apache/spark/storage/StorageLevel$/apply(boolean,boolean,boolean,boolean,int)|",
      "|java+method:///org/apache/spark/storage/BlockManagerId/port()|",
      "|java+method:///scala/runtime/IntRef/create(int)|",
      "|java+constructor:///org/apache/spark/network/buffer/NettyManagedBuffer/NettyManagedBuffer(io.netty.buffer.ByteBuf)|",
      "|java+method:///org/apache/spark/storage/StorageLevel/useOffHeap()|",
      "|java+method:///org/apache/spark/network/BlockTransferService/uploadBlockSync(java.lang.String,int,java.lang.String,org.apache.spark.storage.BlockId,org.apache.spark.network.buffer.ManagedBuffer,org.apache.spark.storage.StorageLevel,scala.reflect.ClassTag)|",
      "|java+method:///scala/collection/mutable/HashSet$/empty()|",
      "|java+method:///org/apache/spark/storage/BlockManagerId/executorId()|",
      "|java+method:///org/apache/spark/storage/BlockReplicationPolicy/prioritize(org.apache.spark.storage.BlockManagerId,scala.collection.Seq,scala.collection.mutable.HashSet,org.apache.spark.storage.BlockId,int)|",
      "|java+method:///scala/collection/immutable/List/isEmpty()|",
      "|java+method:///scala/util/control/NonFatal$/unapply(java.lang.Throwable)|",
      "|java+method:///org/apache/spark/SparkConf/getInt(java.lang.String,int)|",
      "|java+constructor:///org/apache/spark/storage/BlockManager$$anonfun$org$apache$spark$storage$BlockManager$$replicate$5/BlockManager$$anonfun$org$apache$spark$storage$BlockManager$$replicate$5(org.apache.spark.storage.BlockManager,org.apache.spark.storage.BlockId,int,scala.runtime.ObjectRef)|",
      "|java+method:///scala/collection/mutable/HashSet/$plus$eq(java.lang.Object)|",
      "|java+method:///org/apache/spark/storage/BlockManager/logTrace(scala.Function0)|",
      "|java+method:///org/apache/spark/storage/BlockManager/blockManagerId()|",
      "|java+method:///org/apache/spark/storage/StorageLevel/deserialized()|",
      "|java+method:///scala/collection/Seq/filter(scala.Function1)|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+constructor:///org/apache/spark/storage/BlockManager$$anonfun$org$apache$spark$storage$BlockManager$$replicate$3/BlockManager$$anonfun$org$apache$spark$storage$BlockManager$$replicate$3(org.apache.spark.storage.BlockManager,org.apache.spark.storage.BlockId,scala.runtime.IntRef,org.apache.spark.storage.BlockManagerId)|",
      "|java+method:///scala/collection/mutable/HashSet/size()|",
      "|java+constructor:///org/apache/spark/storage/BlockManager$$anonfun$org$apache$spark$storage$BlockManager$$replicate$6/BlockManager$$anonfun$org$apache$spark$storage$BlockManager$$replicate$6(org.apache.spark.storage.BlockManager,org.apache.spark.storage.BlockId,scala.runtime.ObjectRef)|",
      "|java+method:///org/apache/spark/storage/BlockManager/blockTransferService()|",
      "|java+method:///org/apache/spark/storage/BlockManager/conf()|",
      "|java+method:///org/apache/spark/storage/BlockManager/logWarning(scala.Function0,java.lang.Throwable)|",
      "|java+method:///org/apache/spark/storage/BlockManager/logWarning(scala.Function0)|",
      "|java+constructor:///org/apache/spark/storage/BlockManager$$anonfun$21/BlockManager$$anonfun$21(org.apache.spark.storage.BlockManager,scala.runtime.ObjectRef,scala.runtime.ObjectRef)|",
      "|java+constructor:///org/apache/spark/storage/BlockManager$$anonfun$org$apache$spark$storage$BlockManager$$replicate$2/BlockManager$$anonfun$org$apache$spark$storage$BlockManager$$replicate$2(org.apache.spark.storage.BlockManager,org.apache.spark.storage.BlockId,org.apache.spark.util.io.ChunkedByteBuffer,org.apache.spark.storage.BlockManagerId,long)|",
      "|java+method:///scala/collection/immutable/List/head()|",
      "|java+method:///org/apache/spark/storage/StorageLevel/useDisk()|",
      "|java+method:///org/apache/spark/storage/BlockManager/getPeers(boolean)|",
      "|java+method:///org/apache/spark/storage/BlockManager/logDebug(scala.Function0)|",
      "|java+constructor:///org/apache/spark/storage/BlockManager$$anonfun$org$apache$spark$storage$BlockManager$$replicate$1/BlockManager$$anonfun$org$apache$spark$storage$BlockManager$$replicate$1(org.apache.spark.storage.BlockManager,org.apache.spark.storage.BlockId,org.apache.spark.util.io.ChunkedByteBuffer,org.apache.spark.storage.BlockManagerId)|",
      "|java+method:///org/apache/spark/storage/StorageLevel/useMemory()|",
      "|java+method:///org/apache/spark/storage/BlockManagerId/host()|",
      "|java+method:///org/apache/spark/storage/BlockManager/blockReplicationPolicy()|",
      "|java+method:///scala/runtime/ObjectRef/create(java.lang.Object)|",
      "|java+method:///org/apache/spark/storage/StorageLevel/replication()|",
      "|java+method:///scala/Option/get()|",
      "|java+constructor:///org/apache/spark/storage/BlockManager$$anonfun$org$apache$spark$storage$BlockManager$$replicate$4/BlockManager$$anonfun$org$apache$spark$storage$BlockManager$$replicate$4(org.apache.spark.storage.BlockManager,org.apache.spark.storage.BlockId,org.apache.spark.util.io.ChunkedByteBuffer,long,scala.runtime.ObjectRef)|"
    ],
    "affectedLib": "io.snappydata:snappy-spark-network-common_2.11:2.1.1.1-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappy-spark-core_2.11:2.0.3-2",
    "coordinatesV2": "io.snappydata:snappy-spark-core_2.11:2.1.1.1-rc1",
    "caller": "|java+method:///org/apache/spark/rpc/netty/RpcOutboxMessage/onTimeout()|",
    "called": "|java+method:///org/apache/spark/network/client/TransportClient/removeRpcRequest(long)|",
    "v1Body": [
      "|java+method:///org/apache/spark/network/client/TransportClient/removeRpcRequest(long)|",
      "|java+constructor:///org/apache/spark/rpc/netty/RpcOutboxMessage$$anonfun$onTimeout$1/RpcOutboxMessage$$anonfun$onTimeout$1(org.apache.spark.rpc.netty.RpcOutboxMessage)|",
      "|java+method:///scala/Predef$/require(boolean,scala.Function0)|",
      "|java+method:///org/apache/spark/rpc/netty/RpcOutboxMessage/client()|",
      "|java+method:///org/apache/spark/rpc/netty/RpcOutboxMessage/requestId()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/spark/network/client/TransportClient/removeRpcRequest(long)|",
      "|java+method:///org/apache/spark/rpc/netty/RpcOutboxMessage/logError(scala.Function0)|",
      "|java+constructor:///org/apache/spark/rpc/netty/RpcOutboxMessage$$anonfun$onTimeout$1/RpcOutboxMessage$$anonfun$onTimeout$1(org.apache.spark.rpc.netty.RpcOutboxMessage)|",
      "|java+method:///org/apache/spark/rpc/netty/RpcOutboxMessage/client()|",
      "|java+method:///org/apache/spark/rpc/netty/RpcOutboxMessage/requestId()|"
    ],
    "affectedLib": "io.snappydata:snappy-spark-network-common_2.11:2.1.1.1-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappy-spark-core_2.11:2.0.3-2",
    "coordinatesV2": "io.snappydata:snappy-spark-core_2.11:2.1.1.1-rc1",
    "caller": "|java+constructor:///org/apache/spark/deploy/ExternalShuffleService/ExternalShuffleService(org.apache.spark.SparkConf,org.apache.spark.SecurityManager)|",
    "called": "|java+constructor:///org/apache/spark/network/TransportContext/TransportContext(org.apache.spark.network.util.TransportConf,org.apache.spark.network.server.RpcHandler,boolean)|",
    "v1Body": [
      "|java+method:///org/apache/spark/deploy/ExternalShuffleService/newShuffleBlockHandler(org.apache.spark.network.util.TransportConf)|",
      "|java+method:///org/apache/spark/network/netty/SparkTransportConf$/fromSparkConf(org.apache.spark.SparkConf,java.lang.String,int)|",
      "|java+method:///org/apache/spark/SecurityManager/isAuthenticationEnabled()|",
      "|java+method:///org/apache/spark/deploy/ExternalShuffleService/transportConf()|",
      "|java+method:///org/apache/spark/internal/Logging$class/$init$(org.apache.spark.internal.Logging)|",
      "|java+method:///org/apache/spark/deploy/ExternalShuffleService/blockHandler()|",
      "|java+method:///org/apache/spark/SparkConf/getBoolean(java.lang.String,boolean)|",
      "|java+method:///org/apache/spark/SparkConf/getInt(java.lang.String,int)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+constructor:///org/apache/spark/network/TransportContext/TransportContext(org.apache.spark.network.util.TransportConf,org.apache.spark.network.server.RpcHandler,boolean)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/spark/deploy/ExternalShuffleService/newShuffleBlockHandler(org.apache.spark.network.util.TransportConf)|",
      "|java+method:///org/apache/spark/network/netty/SparkTransportConf$/fromSparkConf(org.apache.spark.SparkConf,java.lang.String,int)|",
      "|java+method:///org/apache/spark/SecurityManager/isAuthenticationEnabled()|",
      "|java+method:///org/apache/spark/metrics/MetricsSystem$/createMetricsSystem(java.lang.String,org.apache.spark.SparkConf,org.apache.spark.SecurityManager)|",
      "|java+method:///org/apache/spark/deploy/ExternalShuffleService/transportConf()|",
      "|java+method:///org/apache/spark/internal/Logging$class/$init$(org.apache.spark.internal.Logging)|",
      "|java+method:///org/apache/spark/deploy/ExternalShuffleService/blockHandler()|",
      "|java+method:///org/apache/spark/SparkConf/getBoolean(java.lang.String,boolean)|",
      "|java+constructor:///org/apache/spark/deploy/ExternalShuffleServiceSource/ExternalShuffleServiceSource(org.apache.spark.network.shuffle.ExternalShuffleBlockHandler)|",
      "|java+method:///org/apache/spark/SparkConf/getInt(java.lang.String,int)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+constructor:///org/apache/spark/network/TransportContext/TransportContext(org.apache.spark.network.util.TransportConf,org.apache.spark.network.server.RpcHandler,boolean)|"
    ],
    "affectedLib": "io.snappydata:snappy-spark-network-common_2.11:2.1.1.1-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappy-spark-core_2.11:2.0.3-2",
    "coordinatesV2": "io.snappydata:snappy-spark-core_2.11:2.1.1.1-rc1",
    "caller": "|java+method:///org/apache/spark/deploy/ExternalShuffleService/start()|",
    "called": "|java+constructor:///org/apache/spark/network/sasl/SaslServerBootstrap/SaslServerBootstrap(org.apache.spark.network.util.TransportConf,org.apache.spark.network.sasl.SecretKeyHolder)|",
    "v1Body": [
      "|java+constructor:///org/apache/spark/network/sasl/SaslServerBootstrap/SaslServerBootstrap(org.apache.spark.network.util.TransportConf,org.apache.spark.network.sasl.SecretKeyHolder)|",
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///org/apache/spark/deploy/ExternalShuffleService/server_$eq(org.apache.spark.network.server.TransportServer)|",
      "|java+method:///org/apache/spark/deploy/ExternalShuffleService/server()|",
      "|java+method:///org/apache/spark/deploy/ExternalShuffleService/transportContext()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/spark/deploy/ExternalShuffleService/org$apache$spark$deploy$ExternalShuffleService$$port()|",
      "|java+method:///scala/Predef$/require(boolean,scala.Function0)|",
      "|java+method:///scala/collection/Seq$/apply(scala.collection.Seq)|",
      "|java+method:///org/apache/spark/deploy/ExternalShuffleService/logInfo(scala.Function0)|",
      "|java+method:///org/apache/spark/deploy/ExternalShuffleService/org$apache$spark$deploy$ExternalShuffleService$$useSasl()|",
      "|java+constructor:///org/apache/spark/deploy/ExternalShuffleService$$anonfun$start$1/ExternalShuffleService$$anonfun$start$1(org.apache.spark.deploy.ExternalShuffleService)|",
      "|java+method:///scala/collection/JavaConverters$/seqAsJavaListConverter(scala.collection.Seq)|",
      "|java+constructor:///org/apache/spark/deploy/ExternalShuffleService$$anonfun$start$2/ExternalShuffleService$$anonfun$start$2(org.apache.spark.deploy.ExternalShuffleService)|",
      "|java+method:///org/apache/spark/network/TransportContext/createServer(int,java.util.List)|",
      "|java+method:///org/apache/spark/deploy/ExternalShuffleService/transportConf()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/spark/network/sasl/SaslServerBootstrap/SaslServerBootstrap(org.apache.spark.network.util.TransportConf,org.apache.spark.network.sasl.SecretKeyHolder)|",
      "|java+method:///org/apache/spark/deploy/ExternalShuffleService/masterMetricsSystem()|",
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///org/apache/spark/deploy/ExternalShuffleService/server_$eq(org.apache.spark.network.server.TransportServer)|",
      "|java+method:///org/apache/spark/deploy/ExternalShuffleService/server()|",
      "|java+method:///org/apache/spark/deploy/ExternalShuffleService/transportContext()|",
      "|java+method:///org/apache/spark/deploy/ExternalShuffleService/org$apache$spark$deploy$ExternalShuffleService$$port()|",
      "|java+method:///scala/collection/Seq$/apply(scala.collection.Seq)|",
      "|java+method:///org/apache/spark/deploy/ExternalShuffleService/logInfo(scala.Function0)|",
      "|java+method:///org/apache/spark/deploy/ExternalShuffleService/org$apache$spark$deploy$ExternalShuffleService$$useSasl()|",
      "|java+method:///scala/collection/JavaConverters$/seqAsJavaListConverter(scala.collection.Seq)|",
      "|java+constructor:///org/apache/spark/deploy/ExternalShuffleService$$anonfun$start$2/ExternalShuffleService$$anonfun$start$2(org.apache.spark.deploy.ExternalShuffleService)|",
      "|java+method:///org/apache/spark/network/TransportContext/createServer(int,java.util.List)|",
      "|java+method:///org/apache/spark/deploy/ExternalShuffleService/transportConf()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/spark/metrics/MetricsSystem/start()|",
      "|java+method:///scala/Predef$/require(boolean,scala.Function0)|",
      "|java+method:///org/apache/spark/metrics/MetricsSystem/registerSource(org.apache.spark.metrics.source.Source)|",
      "|java+method:///org/apache/spark/deploy/ExternalShuffleService/shuffleServiceSource()|",
      "|java+constructor:///org/apache/spark/deploy/ExternalShuffleService$$anonfun$start$1/ExternalShuffleService$$anonfun$start$1(org.apache.spark.deploy.ExternalShuffleService)|"
    ],
    "affectedLib": "io.snappydata:snappy-spark-network-common_2.11:2.1.1.1-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappy-spark-core_2.11:2.0.3-2",
    "coordinatesV2": "io.snappydata:snappy-spark-core_2.11:2.1.1.1-rc1",
    "caller": "|java+method:///org/apache/spark/network/netty/NettyBlockTransferService/org$apache$spark$network$netty$NettyBlockTransferService$$startService$1(int,scala.collection.immutable.List)|",
    "called": "|java+method:///org/apache/spark/network/TransportContext/createServer(java.lang.String,int,java.util.List)|",
    "v1Body": [
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///org/apache/spark/network/TransportContext/createServer(java.lang.String,int,java.util.List)|",
      "|java+method:///org/apache/spark/network/server/TransportServer/getPort()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///org/apache/spark/network/netty/NettyBlockTransferService/hostName()|",
      "|java+method:///scala/collection/JavaConverters$/seqAsJavaListConverter(scala.collection.Seq)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///org/apache/spark/network/TransportContext/createServer(java.lang.String,int,java.util.List)|",
      "|java+method:///org/apache/spark/network/server/TransportServer/getPort()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///scala/collection/JavaConverters$/seqAsJavaListConverter(scala.collection.Seq)|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "io.snappydata:snappy-spark-network-common_2.11:2.1.1.1-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappy-spark-core_2.11:2.0.3-2",
    "coordinatesV2": "io.snappydata:snappy-spark-core_2.11:2.1.1.1-rc1",
    "caller": "|java+method:///org/apache/spark/shuffle/sort/UnsafeShuffleWriter/mergeSpillsWithFileStream(org.apache.spark.shuffle.sort.SpillInfo%5B%5D,java.io.File,org.apache.spark.io.CompressionCodec)|",
    "called": "|java+constructor:///org/apache/spark/network/util/LimitedInputStream/LimitedInputStream(java.io.InputStream,long,boolean)|",
    "v1Body": [
      "|java+method:///java/io/OutputStream/close()|",
      "|java+method:///com/google/common/io/Closeables/close(java.io.Closeable,boolean)|",
      "|java+constructor:///java/io/FileOutputStream/FileOutputStream(java.io.File,boolean)|",
      "|java+method:///com/google/common/io/ByteStreams/copy(java.io.InputStream,java.io.OutputStream)|",
      "|java+method:///org/apache/spark/Partitioner/numPartitions()|",
      "|java+method:///java/io/OutputStream/flush()|",
      "|java+method:///org/apache/spark/io/CompressionCodec/compressedInputStream(java.io.InputStream)|",
      "|java+constructor:///org/apache/spark/storage/TimeTrackingOutputStream/TimeTrackingOutputStream(org.apache.spark.executor.ShuffleWriteMetrics,java.io.OutputStream)|",
      "|java+constructor:///org/apache/spark/network/util/LimitedInputStream/LimitedInputStream(java.io.InputStream,long,boolean)|",
      "|java+method:///java/io/File/length()|",
      "|java+constructor:///java/io/FileInputStream/FileInputStream(java.io.File)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/spark/io/CompressionCodec/compressedOutputStream(java.io.OutputStream)|"
    ],
    "v2Body": [
      "|java+method:///java/io/OutputStream/close()|",
      "|java+method:///com/google/common/io/Closeables/close(java.io.Closeable,boolean)|",
      "|java+method:///org/apache/spark/serializer/SerializerManager/wrapForEncryption(java.io.InputStream)|",
      "|java+method:///com/google/common/io/ByteStreams/copy(java.io.InputStream,java.io.OutputStream)|",
      "|java+method:///org/apache/spark/Partitioner/numPartitions()|",
      "|java+method:///java/io/OutputStream/flush()|",
      "|java+constructor:///org/apache/commons/io/output/CountingOutputStream/CountingOutputStream(java.io.OutputStream)|",
      "|java+constructor:///org/apache/spark/storage/TimeTrackingOutputStream/TimeTrackingOutputStream(org.apache.spark.executor.ShuffleWriteMetrics,java.io.OutputStream)|",
      "|java+constructor:///org/apache/commons/io/output/CloseShieldOutputStream/CloseShieldOutputStream(java.io.OutputStream)|",
      "|java+constructor:///java/io/FileInputStream/FileInputStream(java.io.File)|",
      "|java+method:///org/apache/spark/io/CompressionCodec/compressedOutputStream(java.io.OutputStream)|",
      "|java+method:///org/apache/commons/io/output/CountingOutputStream/getByteCount()|",
      "|java+method:///org/apache/spark/storage/BlockManager/serializerManager()|",
      "|java+method:///org/apache/spark/io/CompressionCodec/compressedInputStream(java.io.InputStream)|",
      "|java+method:///java/io/InputStream/close()|",
      "|java+constructor:///org/apache/spark/network/util/LimitedInputStream/LimitedInputStream(java.io.InputStream,long,boolean)|",
      "|java+method:///org/apache/spark/serializer/SerializerManager/wrapForEncryption(java.io.OutputStream)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+constructor:///java/io/FileOutputStream/FileOutputStream(java.io.File)|"
    ],
    "affectedLib": "io.snappydata:snappy-spark-network-common_2.11:2.1.1.1-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappy-spark-core_2.11:2.0.3-2",
    "coordinatesV2": "io.snappydata:snappy-spark-core_2.11:2.1.1.1-rc1",
    "caller": "|java+method:///org/apache/spark/scheduler/DAGScheduler/submitMissingTasks(org.apache.spark.scheduler.Stage,int)|",
    "called": "|java+method:///org/apache/spark/network/util/JavaUtils/bufferToArray(java.nio.ByteBuffer)|",
    "v1Body": [
      "|java+method:///scala/collection/Seq/toArray(scala.reflect.ClassTag)|",
      "|java+method:///org/apache/spark/scheduler/StageInfo/submissionTime_$eq(scala.Option)|",
      "|java+method:///org/apache/spark/scheduler/Stage/pendingPartitions()|",
      "|java+method:///org/apache/spark/scheduler/Stage/taskData_$eq(org.apache.spark.scheduler.TaskData)|",
      "|java+method:///org/apache/spark/SparkEnv/createCompressionCodec()|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///org/apache/spark/scheduler/DAGScheduler/jobIdToActiveJob()|",
      "|java+method:///org/apache/spark/scheduler/OutputCommitCoordinator/stageStart(int,int)|",
      "|java+constructor:///org/apache/spark/scheduler/DAGScheduler$$anonfun$17/DAGScheduler$$anonfun$17(org.apache.spark.scheduler.DAGScheduler,java.util.Properties,scala.collection.Map,scala.runtime.ObjectRef,scala.runtime.ObjectRef,org.apache.spark.scheduler.ResultStage)|",
      "|java+method:///org/apache/spark/scheduler/ResultStage/id()|",
      "|java+method:///org/apache/spark/scheduler/ShuffleMapStage/shuffleDep()|",
      "|java+method:///org/apache/spark/scheduler/ResultStage/rdd()|",
      "|java+method:///org/apache/spark/network/util/JavaUtils/bufferToArray(java.nio.ByteBuffer)|",
      "|java+constructor:///org/apache/spark/scheduler/DAGScheduler$$anonfun$submitMissingTasks$2/DAGScheduler$$anonfun$submitMissingTasks$2(org.apache.spark.scheduler.DAGScheduler,org.apache.spark.scheduler.Stage,scala.collection.Seq)|",
      "|java+method:///org/apache/spark/scheduler/StageInfo/attemptId()|",
      "|java+method:///scala/collection/mutable/HashMap/apply(java.lang.Object)|",
      "|java+method:///org/apache/spark/scheduler/ActiveJob/properties()|",
      "|java+method:///org/apache/spark/scheduler/Stage/findMissingPartitions()|",
      "|java+method:///scala/util/control/NonFatal$/unapply(java.lang.Throwable)|",
      "|java+method:///org/apache/spark/scheduler/Stage/id()|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///org/apache/spark/scheduler/ShuffleMapStage/id()|",
      "|java+method:///scala/collection/mutable/HashSet/$plus$eq(java.lang.Object)|",
      "|java+method:///org/apache/spark/scheduler/DAGScheduler/org$apache$spark$scheduler$DAGScheduler$$markStageAsFinished(org.apache.spark.scheduler.Stage,scala.Option)|",
      "|java+method:///org/apache/spark/scheduler/DAGScheduler/closureSerializer()|",
      "|java+constructor:///org/apache/spark/scheduler/DAGScheduler$$anonfun$16/DAGScheduler$$anonfun$16(org.apache.spark.scheduler.DAGScheduler,java.util.Properties,scala.collection.Map,scala.runtime.ObjectRef,scala.runtime.ObjectRef,org.apache.spark.scheduler.ShuffleMapStage)|",
      "|java+method:///org/apache/spark/rdd/RDD/partitions()|",
      "|java+method:///org/apache/spark/scheduler/ResultStage/activeJob()|",
      "|java+constructor:///org/apache/spark/scheduler/TaskData/TaskData(byte%5B%5D,int)|",
      "|java+method:///scala/reflect/ClassTag$/AnyRef()|",
      "|java+method:///org/apache/spark/scheduler/ShuffleMapStage/isAvailable()|",
      "|java+method:///org/apache/spark/SparkContext/broadcast(java.lang.Object,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/spark/scheduler/DAGScheduler/logInfo(scala.Function0)|",
      "|java+method:///org/apache/spark/scheduler/ResultStage/func()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/spark/scheduler/DAGScheduler/logDebug(scala.Function0)|",
      "|java+method:///scala/collection/Iterable/toSeq()|",
      "|java+method:///org/apache/spark/serializer/SerializerInstance/serialize(java.lang.Object,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/spark/scheduler/DAGScheduler/sc()|",
      "|java+method:///scala/Option/isEmpty()|",
      "|java+method:///scala/runtime/ScalaRunTime$/arrayClass(java.lang.Class)|",
      "|java+constructor:///org/apache/spark/scheduler/DAGScheduler$$anonfun$submitMissingTasks$5/DAGScheduler$$anonfun$submitMissingTasks$5(org.apache.spark.scheduler.DAGScheduler,java.lang.String)|",
      "|java+method:///org/apache/spark/scheduler/DAGScheduler/runningStages()|",
      "|java+method:///org/apache/spark/scheduler/DAGScheduler/abortStage(org.apache.spark.scheduler.Stage,java.lang.String,scala.Option)|",
      "|java+constructor:///org/apache/spark/scheduler/DAGScheduler$$anonfun$14/DAGScheduler$$anonfun$14(org.apache.spark.scheduler.DAGScheduler,org.apache.spark.scheduler.Stage)|",
      "|java+constructor:///org/apache/spark/scheduler/DAGScheduler$$anonfun$submitMissingTasks$1/DAGScheduler$$anonfun$submitMissingTasks$1(org.apache.spark.scheduler.DAGScheduler,org.apache.spark.scheduler.Stage)|",
      "|java+constructor:///org/apache/spark/scheduler/DAGScheduler$$anonfun$submitMissingTasks$4/DAGScheduler$$anonfun$submitMissingTasks$4(org.apache.spark.scheduler.DAGScheduler,org.apache.spark.scheduler.Stage)|",
      "|java+method:///org/apache/spark/io/CompressionCodec/compress(byte%5B%5D,int)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToBoolean(boolean)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///org/apache/spark/scheduler/DAGScheduler/taskScheduler()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///org/apache/spark/scheduler/TaskData$/EMPTY()|",
      "|java+method:///org/apache/spark/scheduler/DAGScheduler$/TASK_INLINE_LIMIT()|",
      "|java+constructor:///org/apache/spark/scheduler/DAGScheduler$$anonfun$15/DAGScheduler$$anonfun$15(org.apache.spark.scheduler.DAGScheduler,org.apache.spark.scheduler.Stage,org.apache.spark.scheduler.ResultStage)|",
      "|java+method:///org/apache/spark/scheduler/DAGScheduler/outputCommitCoordinator()|",
      "|java+method:///org/apache/spark/scheduler/Stage/taskBinaryBytes()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///org/apache/spark/scheduler/TaskData/uncompressedLen()|",
      "|java+method:///scala/collection/TraversableOnce/toMap(scala.Predef$$less$colon$less)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/spark/scheduler/SparkListenerStageSubmitted/SparkListenerStageSubmitted(org.apache.spark.scheduler.StageInfo,java.util.Properties)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/collection/Seq/size()|",
      "|java+constructor:///org/apache/spark/scheduler/DAGScheduler$$anonfun$submitMissingTasks$3/DAGScheduler$$anonfun$submitMissingTasks$3(org.apache.spark.scheduler.DAGScheduler)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|",
      "|java+method:///scala/Predef$/$conforms()|",
      "|java+method:///org/apache/spark/util/Utils$/exceptionString(java.lang.Throwable)|",
      "|java+method:///org/apache/spark/scheduler/TaskScheduler/submitTasks(org.apache.spark.scheduler.TaskSet)|",
      "|java+method:///org/apache/spark/scheduler/Stage/taskData()|",
      "|java+method:///scala/collection/mutable/HashSet/$plus$plus$eq(scala.collection.TraversableOnce)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/spark/scheduler/ShuffleMapStage/numAvailableOutputs()|",
      "|java+method:///org/apache/spark/scheduler/Stage/taskBinaryBytes_$eq(byte%5B%5D)|",
      "|java+method:///org/apache/spark/scheduler/Stage/makeNewStageAttempt$default$2()|",
      "|java+method:///scala/collection/Map/values()|",
      "|java+method:///org/apache/spark/scheduler/ShuffleMapStage/numPartitions()|",
      "|java+method:///org/apache/spark/scheduler/Stage/makeNewStageAttempt(int,scala.collection.Seq)|",
      "|java+method:///scala/collection/Seq/length()|",
      "|java+method:///scala/collection/mutable/HashSet/clear()|",
      "|java+constructor:///org/apache/spark/scheduler/TaskSet/TaskSet(org.apache.spark.scheduler.Task%5B%5D,int,int,int,java.util.Properties)|",
      "|java+method:///org/apache/spark/scheduler/LiveListenerBus/post(org.apache.spark.scheduler.SparkListenerEvent)|",
      "|java+method:///org/apache/spark/scheduler/ShuffleMapStage/rdd()|",
      "|java+method:///org/apache/spark/scheduler/DAGScheduler$/TASK_INLINE_PARTITION_LIMIT()|",
      "|java+method:///scala/collection/Seq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/runtime/ObjectRef/create(java.lang.Object)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///java/io/NotSerializableException/toString()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///org/apache/spark/scheduler/Stage/latestInfo()|",
      "|java+method:///scala/collection/mutable/HashSet/$minus$eq(java.lang.Object)|",
      "|java+method:///org/apache/spark/scheduler/ResultStage/numPartitions()|",
      "|java+method:///org/apache/spark/util/Clock/getTimeMillis()|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/Option/get()|"
    ],
    "v2Body": [
      "|java+method:///scala/collection/Seq/toArray(scala.reflect.ClassTag)|",
      "|java+method:///org/apache/spark/scheduler/StageInfo/submissionTime_$eq(scala.Option)|",
      "|java+method:///org/apache/spark/scheduler/Stage/pendingPartitions()|",
      "|java+method:///org/apache/spark/SparkEnv/createCompressionCodec()|",
      "|java+method:///scala/reflect/ClassTag$/apply(java.lang.Class)|",
      "|java+method:///org/apache/spark/scheduler/DAGScheduler/jobIdToActiveJob()|",
      "|java+method:///org/apache/spark/scheduler/OutputCommitCoordinator/stageStart(int,int)|",
      "|java+method:///org/apache/spark/scheduler/ResultStage/id()|",
      "|java+method:///org/apache/spark/scheduler/ShuffleMapStage/shuffleDep()|",
      "|java+method:///org/apache/spark/scheduler/ResultStage/rdd()|",
      "|java+method:///org/apache/spark/network/util/JavaUtils/bufferToArray(java.nio.ByteBuffer)|",
      "|java+constructor:///org/apache/spark/scheduler/DAGScheduler$$anonfun$submitMissingTasks$2/DAGScheduler$$anonfun$submitMissingTasks$2(org.apache.spark.scheduler.DAGScheduler,org.apache.spark.scheduler.Stage,scala.collection.Seq)|",
      "|java+method:///org/apache/spark/scheduler/StageInfo/attemptId()|",
      "|java+method:///scala/collection/mutable/HashMap/apply(java.lang.Object)|",
      "|java+method:///org/apache/spark/scheduler/ActiveJob/properties()|",
      "|java+method:///org/apache/spark/scheduler/Stage/findMissingPartitions()|",
      "|java+method:///scala/util/control/NonFatal$/unapply(java.lang.Throwable)|",
      "|java+method:///org/apache/spark/scheduler/Stage/id()|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+constructor:///org/apache/spark/scheduler/DAGScheduler$$anonfun$18/DAGScheduler$$anonfun$18(org.apache.spark.scheduler.DAGScheduler,int,java.util.Properties,scala.collection.Map,scala.runtime.ObjectRef,scala.runtime.ObjectRef,org.apache.spark.scheduler.ResultStage)|",
      "|java+method:///org/apache/spark/scheduler/ShuffleMapStage/id()|",
      "|java+method:///scala/collection/mutable/HashSet/$plus$eq(java.lang.Object)|",
      "|java+method:///org/apache/spark/scheduler/DAGScheduler/org$apache$spark$scheduler$DAGScheduler$$markStageAsFinished(org.apache.spark.scheduler.Stage,scala.Option)|",
      "|java+method:///org/apache/spark/scheduler/DAGScheduler/closureSerializer()|",
      "|java+method:///org/apache/spark/rdd/RDD/partitions()|",
      "|java+constructor:///org/apache/spark/scheduler/TaskData/TaskData(byte%5B%5D,int)|",
      "|java+method:///scala/reflect/ClassTag$/AnyRef()|",
      "|java+method:///org/apache/spark/scheduler/ShuffleMapStage/isAvailable()|",
      "|java+constructor:///org/apache/spark/scheduler/DAGScheduler$$anonfun$17/DAGScheduler$$anonfun$17(org.apache.spark.scheduler.DAGScheduler,int,java.util.Properties,scala.collection.Map,scala.runtime.ObjectRef,scala.runtime.ObjectRef,org.apache.spark.scheduler.ShuffleMapStage)|",
      "|java+method:///org/apache/spark/SparkContext/broadcast(java.lang.Object,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/spark/scheduler/DAGScheduler/logInfo(scala.Function0)|",
      "|java+method:///org/apache/spark/scheduler/ResultStage/func()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/spark/scheduler/DAGScheduler/logDebug(scala.Function0)|",
      "|java+method:///scala/collection/Iterable/toSeq()|",
      "|java+method:///org/apache/spark/serializer/SerializerInstance/serialize(java.lang.Object,scala.reflect.ClassTag)|",
      "|java+method:///org/apache/spark/scheduler/DAGScheduler/sc()|",
      "|java+method:///scala/Option/isEmpty()|",
      "|java+method:///scala/runtime/ScalaRunTime$/arrayClass(java.lang.Class)|",
      "|java+constructor:///org/apache/spark/scheduler/DAGScheduler$$anonfun$submitMissingTasks$5/DAGScheduler$$anonfun$submitMissingTasks$5(org.apache.spark.scheduler.DAGScheduler,java.lang.String)|",
      "|java+method:///org/apache/spark/scheduler/DAGScheduler/runningStages()|",
      "|java+method:///org/apache/spark/scheduler/DAGScheduler/abortStage(org.apache.spark.scheduler.Stage,java.lang.String,scala.Option)|",
      "|java+constructor:///org/apache/spark/scheduler/DAGScheduler$$anonfun$submitMissingTasks$1/DAGScheduler$$anonfun$submitMissingTasks$1(org.apache.spark.scheduler.DAGScheduler,org.apache.spark.scheduler.Stage)|",
      "|java+constructor:///org/apache/spark/scheduler/DAGScheduler$$anonfun$submitMissingTasks$4/DAGScheduler$$anonfun$submitMissingTasks$4(org.apache.spark.scheduler.DAGScheduler,org.apache.spark.scheduler.Stage)|",
      "|java+method:///org/apache/spark/io/CompressionCodec/compress(byte%5B%5D,int)|",
      "|java+constructor:///org/apache/spark/scheduler/DAGScheduler$$anonfun$15/DAGScheduler$$anonfun$15(org.apache.spark.scheduler.DAGScheduler,org.apache.spark.scheduler.Stage)|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToBoolean(boolean)|",
      "|java+constructor:///scala/StringContext/StringContext(scala.collection.Seq)|",
      "|java+method:///org/apache/spark/scheduler/DAGScheduler/taskScheduler()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToLong(long)|",
      "|java+method:///org/apache/spark/scheduler/TaskData$/EMPTY()|",
      "|java+method:///org/apache/spark/scheduler/DAGScheduler$/TASK_INLINE_LIMIT()|",
      "|java+method:///org/apache/spark/scheduler/DAGScheduler/outputCommitCoordinator()|",
      "|java+constructor:///org/apache/spark/scheduler/DAGScheduler$$anonfun$16/DAGScheduler$$anonfun$16(org.apache.spark.scheduler.DAGScheduler,org.apache.spark.scheduler.Stage,org.apache.spark.scheduler.ResultStage)|",
      "|java+method:///org/apache/spark/scheduler/Stage/taskBinaryBytes()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///org/apache/spark/scheduler/TaskData/uncompressedLen()|",
      "|java+method:///org/apache/spark/scheduler/DAGScheduler/submitWaitingChildStages(org.apache.spark.scheduler.Stage)|",
      "|java+method:///org/apache/spark/scheduler/Stage/taskData_$eq(org.apache.spark.scheduler.TaskData)|",
      "|java+method:///scala/collection/TraversableOnce/toMap(scala.Predef$$less$colon$less)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/spark/scheduler/SparkListenerStageSubmitted/SparkListenerStageSubmitted(org.apache.spark.scheduler.StageInfo,java.util.Properties)|",
      "|java+method:///scala/Predef$/genericWrapArray(java.lang.Object)|",
      "|java+method:///scala/collection/Seq/size()|",
      "|java+constructor:///org/apache/spark/scheduler/DAGScheduler$$anonfun$submitMissingTasks$3/DAGScheduler$$anonfun$submitMissingTasks$3(org.apache.spark.scheduler.DAGScheduler)|",
      "|java+constructor:///scala/MatchError/MatchError(java.lang.Object)|",
      "|java+constructor:///scala/Some/Some(java.lang.Object)|",
      "|java+method:///scala/Predef$/$conforms()|",
      "|java+method:///org/apache/spark/util/Utils$/exceptionString(java.lang.Throwable)|",
      "|java+method:///org/apache/spark/scheduler/TaskScheduler/submitTasks(org.apache.spark.scheduler.TaskSet)|",
      "|java+method:///org/apache/spark/scheduler/Stage/taskData()|",
      "|java+method:///scala/collection/mutable/HashSet/$plus$plus$eq(scala.collection.TraversableOnce)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/spark/scheduler/ShuffleMapStage/numAvailableOutputs()|",
      "|java+method:///org/apache/spark/scheduler/Stage/taskBinaryBytes_$eq(byte%5B%5D)|",
      "|java+method:///org/apache/spark/scheduler/Stage/makeNewStageAttempt$default$2()|",
      "|java+method:///scala/collection/Map/values()|",
      "|java+method:///org/apache/spark/scheduler/ShuffleMapStage/numPartitions()|",
      "|java+method:///org/apache/spark/scheduler/Stage/makeNewStageAttempt(int,scala.collection.Seq)|",
      "|java+method:///scala/collection/Seq/length()|",
      "|java+method:///scala/collection/mutable/HashSet/clear()|",
      "|java+constructor:///org/apache/spark/scheduler/TaskSet/TaskSet(org.apache.spark.scheduler.Task%5B%5D,int,int,int,java.util.Properties)|",
      "|java+method:///org/apache/spark/scheduler/LiveListenerBus/post(org.apache.spark.scheduler.SparkListenerEvent)|",
      "|java+method:///org/apache/spark/scheduler/ShuffleMapStage/rdd()|",
      "|java+method:///org/apache/spark/scheduler/DAGScheduler$/TASK_INLINE_PARTITION_LIMIT()|",
      "|java+method:///scala/collection/Seq/map(scala.Function1,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///scala/runtime/ObjectRef/create(java.lang.Object)|",
      "|java+method:///scala/StringContext/s(scala.collection.Seq)|",
      "|java+method:///java/io/NotSerializableException/toString()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///org/apache/spark/scheduler/Stage/latestInfo()|",
      "|java+method:///scala/collection/mutable/HashSet/$minus$eq(java.lang.Object)|",
      "|java+method:///org/apache/spark/scheduler/ResultStage/numPartitions()|",
      "|java+method:///org/apache/spark/util/Clock/getTimeMillis()|",
      "|java+constructor:///scala/Tuple2/Tuple2(java.lang.Object,java.lang.Object)|",
      "|java+method:///scala/Option/get()|"
    ],
    "affectedLib": "io.snappydata:snappy-spark-network-common_2.11:2.1.1.1-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappy-spark-core_2.11:2.0.3-2",
    "coordinatesV2": "io.snappydata:snappy-spark-core_2.11:2.1.1.1-rc1",
    "caller": "|java+constructor:///org/apache/spark/storage/BlockManager/BlockManager(java.lang.String,org.apache.spark.rpc.RpcEnv,org.apache.spark.storage.BlockManagerMaster,org.apache.spark.serializer.SerializerManager,org.apache.spark.SparkConf,org.apache.spark.memory.MemoryManager,org.apache.spark.MapOutputTracker,org.apache.spark.shuffle.ShuffleManager,org.apache.spark.network.BlockTransferService,org.apache.spark.SecurityManager,int)|",
    "called": "|java+constructor:///org/apache/spark/network/shuffle/ExternalShuffleClient/ExternalShuffleClient(org.apache.spark.network.util.TransportConf,org.apache.spark.network.sasl.SecretKeyHolder,boolean,boolean)|",
    "v1Body": [
      "|java+constructor:///org/apache/spark/network/shuffle/ExternalShuffleClient/ExternalShuffleClient(org.apache.spark.network.util.TransportConf,org.apache.spark.network.sasl.SecretKeyHolder,boolean,boolean)|",
      "|java+method:///org/apache/spark/internal/Logging$class/$init$(org.apache.spark.internal.Logging)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/apache/spark/util/ThreadUtils$/newDaemonCachedThreadPool$default$3()|",
      "|java+method:///org/apache/spark/storage/BlockManager$/org$apache$spark$storage$BlockManager$$ID_GENERATOR()|",
      "|java+method:///scala/collection/immutable/StringOps/toInt()|",
      "|java+method:///org/apache/spark/network/netty/SparkTransportConf$/fromSparkConf(org.apache.spark.SparkConf,java.lang.String,int)|",
      "|java+method:///org/apache/spark/util/ThreadUtils$/newDaemonCachedThreadPool(java.lang.String,int,int)|",
      "|java+method:///org/apache/spark/SecurityManager/isAuthenticationEnabled()|",
      "|java+method:///org/apache/spark/memory/MemoryManager/maxOnHeapStorageMemory()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///org/apache/spark/storage/BlockInfoManager/BlockInfoManager()|",
      "|java+method:///scala/concurrent/ExecutionContext$/fromExecutorService(java.util.concurrent.ExecutorService)|",
      "|java+method:///org/apache/spark/memory/MemoryManager/setMemoryStore(org.apache.spark.storage.memory.MemoryStore)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///org/apache/spark/rpc/RpcEnv/setupEndpoint(java.lang.String,org.apache.spark.rpc.RpcEndpoint)|",
      "|java+method:///org/apache/spark/SecurityManager/isSaslEncryptionEnabled()|",
      "|java+method:///org/apache/spark/storage/BlockManager/blockInfoManager()|",
      "|java+constructor:///org/apache/spark/storage/memory/MemoryStore/MemoryStore(org.apache.spark.SparkConf,org.apache.spark.storage.BlockInfoManager,org.apache.spark.serializer.SerializerManager,org.apache.spark.memory.MemoryManager,org.apache.spark.storage.memory.BlockEvictionHandler)|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///org/apache/spark/SparkConf/getBoolean(java.lang.String,boolean)|",
      "|java+method:///org/apache/spark/storage/BlockManager/externalShuffleServiceEnabled()|",
      "|java+method:///org/apache/spark/SparkConf/getInt(java.lang.String,int)|",
      "|java+method:///org/apache/spark/util/IdGenerator/next()|",
      "|java+method:///org/apache/spark/util/Utils$/getSparkOrYarnConfig(org.apache.spark.SparkConf,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/spark/storage/BlockManager/memoryStore()|",
      "|java+method:///org/apache/spark/storage/BlockManager/diskBlockManager()|",
      "|java+constructor:///org/apache/spark/storage/BlockManagerSlaveEndpoint/BlockManagerSlaveEndpoint(org.apache.spark.rpc.RpcEnv,org.apache.spark.storage.BlockManager,org.apache.spark.MapOutputTracker)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/spark/SparkConf/get(java.lang.String)|",
      "|java+method:///org/apache/spark/SparkContext$/DRIVER_IDENTIFIER()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///org/apache/spark/storage/DiskStore/DiskStore(org.apache.spark.SparkConf,org.apache.spark.storage.DiskBlockManager)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+constructor:///org/apache/spark/storage/DiskBlockManager/DiskBlockManager(org.apache.spark.SparkConf,boolean)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/spark/network/shuffle/ExternalShuffleClient/ExternalShuffleClient(org.apache.spark.network.util.TransportConf,org.apache.spark.network.sasl.SecretKeyHolder,boolean,boolean)|",
      "|java+method:///org/apache/spark/internal/Logging$class/$init$(org.apache.spark.internal.Logging)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/apache/spark/util/ThreadUtils$/newDaemonCachedThreadPool$default$3()|",
      "|java+method:///org/apache/spark/storage/BlockManager$/org$apache$spark$storage$BlockManager$$ID_GENERATOR()|",
      "|java+method:///scala/collection/immutable/StringOps/toInt()|",
      "|java+method:///org/apache/spark/network/netty/SparkTransportConf$/fromSparkConf(org.apache.spark.SparkConf,java.lang.String,int)|",
      "|java+method:///org/apache/spark/util/ThreadUtils$/newDaemonCachedThreadPool(java.lang.String,int,int)|",
      "|java+method:///org/apache/spark/SecurityManager/isAuthenticationEnabled()|",
      "|java+method:///org/apache/spark/memory/MemoryManager/maxOnHeapStorageMemory()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+constructor:///org/apache/spark/storage/BlockInfoManager/BlockInfoManager()|",
      "|java+method:///scala/concurrent/ExecutionContext$/fromExecutorService(java.util.concurrent.ExecutorService)|",
      "|java+constructor:///scala/collection/immutable/StringOps/StringOps(java.lang.String)|",
      "|java+method:///org/apache/spark/rpc/RpcEnv/setupEndpoint(java.lang.String,org.apache.spark.rpc.RpcEndpoint)|",
      "|java+method:///org/apache/spark/SecurityManager/isSaslEncryptionEnabled()|",
      "|java+method:///org/apache/spark/storage/BlockManager/blockInfoManager()|",
      "|java+constructor:///org/apache/spark/storage/memory/MemoryStore/MemoryStore(org.apache.spark.SparkConf,org.apache.spark.storage.BlockInfoManager,org.apache.spark.serializer.SerializerManager,org.apache.spark.memory.MemoryManager,org.apache.spark.storage.memory.BlockEvictionHandler)|",
      "|java+method:///scala/Predef$/augmentString(java.lang.String)|",
      "|java+method:///org/apache/spark/SparkConf/getBoolean(java.lang.String,boolean)|",
      "|java+method:///org/apache/spark/storage/BlockManager/externalShuffleServiceEnabled()|",
      "|java+method:///org/apache/spark/SparkConf/getInt(java.lang.String,int)|",
      "|java+method:///org/apache/spark/util/IdGenerator/next()|",
      "|java+method:///org/apache/spark/util/Utils$/getSparkOrYarnConfig(org.apache.spark.SparkConf,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/spark/storage/BlockManager/memoryStore()|",
      "|java+method:///org/apache/spark/storage/BlockManager/diskBlockManager()|",
      "|java+constructor:///org/apache/spark/storage/BlockManagerSlaveEndpoint/BlockManagerSlaveEndpoint(org.apache.spark.rpc.RpcEnv,org.apache.spark.storage.BlockManager,org.apache.spark.MapOutputTracker)|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/spark/SparkConf/get(java.lang.String)|",
      "|java+method:///org/apache/spark/SparkContext$/DRIVER_IDENTIFIER()|",
      "|java+method:///org/apache/spark/memory/MemoryManager/setMemoryStore(org.apache.spark.storage.memory.MemoryStore)|",
      "|java+method:///org/apache/spark/memory/MemoryManager/maxOffHeapStorageMemory()|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///org/apache/spark/storage/DiskStore/DiskStore(org.apache.spark.SparkConf,org.apache.spark.storage.DiskBlockManager)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+constructor:///org/apache/spark/storage/DiskBlockManager/DiskBlockManager(org.apache.spark.SparkConf,boolean)|"
    ],
    "affectedLib": "io.snappydata:snappy-spark-network-shuffle_2.11:2.1.1.1-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappy-spark-core_2.11:2.0.3-2",
    "coordinatesV2": "io.snappydata:snappy-spark-core_2.11:2.1.1.1-rc1",
    "caller": "|java+method:///org/apache/spark/storage/BlockManager$$anonfun$registerWithExternalShuffleServer$1/apply$mcVI$sp(int)|",
    "called": "|java+method:///org/apache/spark/network/shuffle/ExternalShuffleClient/registerWithShuffleServer(java.lang.String,int,java.lang.String,org.apache.spark.network.shuffle.protocol.ExecutorShuffleInfo)|",
    "v1Body": [
      "|java+method:///java/lang/Thread/sleep(long)|",
      "|java+method:///org/apache/spark/storage/BlockManager/logError(scala.Function0,java.lang.Throwable)|",
      "|java+constructor:///org/apache/spark/storage/BlockManager$$anonfun$registerWithExternalShuffleServer$1$$anonfun$apply$mcVI$sp$1/BlockManager$$anonfun$registerWithExternalShuffleServer$1$$anonfun$apply$mcVI$sp$1(org.apache.spark.storage.BlockManager$$anonfun$registerWithExternalShuffleServer$1,int)|",
      "|java+method:///org/apache/spark/storage/BlockManager/shuffleClient()|",
      "|java+method:///org/apache/spark/storage/BlockManagerId/port()|",
      "|java+method:///org/apache/spark/network/shuffle/ExternalShuffleClient/registerWithShuffleServer(java.lang.String,int,java.lang.String,org.apache.spark.network.shuffle.protocol.ExecutorShuffleInfo)|",
      "|java+method:///org/apache/spark/storage/BlockManagerId/host()|",
      "|java+constructor:///scala/runtime/NonLocalReturnControl$mcV$sp/NonLocalReturnControl$mcV$sp(java.lang.Object,scala.runtime.BoxedUnit)|",
      "|java+method:///org/apache/spark/storage/BlockManagerId/executorId()|",
      "|java+method:///org/apache/spark/storage/BlockManager/shuffleServerId()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Thread/sleep(long)|",
      "|java+method:///org/apache/spark/storage/BlockManager/logError(scala.Function0,java.lang.Throwable)|",
      "|java+constructor:///org/apache/spark/storage/BlockManager$$anonfun$registerWithExternalShuffleServer$1$$anonfun$apply$mcVI$sp$1/BlockManager$$anonfun$registerWithExternalShuffleServer$1$$anonfun$apply$mcVI$sp$1(org.apache.spark.storage.BlockManager$$anonfun$registerWithExternalShuffleServer$1,int)|",
      "|java+method:///scala/Option/isEmpty()|",
      "|java+method:///org/apache/spark/storage/BlockManager/shuffleClient()|",
      "|java+method:///java/lang/Throwable/getMessage()|",
      "|java+method:///org/apache/spark/storage/BlockManagerId/port()|",
      "|java+constructor:///scala/collection/mutable/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/spark/network/shuffle/ExternalShuffleClient/registerWithShuffleServer(java.lang.String,int,java.lang.String,org.apache.spark.network.shuffle.protocol.ExecutorShuffleInfo)|",
      "|java+method:///scala/collection/mutable/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/spark/storage/BlockManagerId/host()|",
      "|java+constructor:///scala/runtime/NonLocalReturnControl$mcV$sp/NonLocalReturnControl$mcV$sp(java.lang.Object,scala.runtime.BoxedUnit)|",
      "|java+method:///scala/collection/mutable/StringBuilder/toString()|",
      "|java+method:///scala/Option/get()|",
      "|java+method:///org/apache/spark/storage/BlockManagerId/executorId()|",
      "|java+method:///org/apache/spark/storage/BlockManager/shuffleServerId()|",
      "|java+constructor:///org/apache/spark/SparkException/SparkException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///scala/util/control/NonFatal$/unapply(java.lang.Throwable)|"
    ],
    "affectedLib": "io.snappydata:snappy-spark-network-shuffle_2.11:2.1.1.1-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappy-spark-core_2.11:2.0.3-2",
    "coordinatesV2": "io.snappydata:snappy-spark-core_2.11:2.1.1.1-rc1",
    "caller": "|java+method:///org/apache/spark/deploy/PythonRunner$/main(java.lang.String%5B%5D)|",
    "called": "|java+method:///py4j/GatewayServer/getListeningPort()|",
    "v1Body": [
      "|java+constructor:///java/lang/ProcessBuilder/ProcessBuilder(java.util.List)|",
      "|java+method:///scala/sys/package$/env()|",
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///java/lang/String/valueOf(java.lang.Object)|",
      "|java+method:///org/apache/spark/api/python/PythonUtils$/mergePythonPaths(scala.collection.Seq)|",
      "|java+method:///py4j/GatewayServer/shutdown()|",
      "|java+method:///org/apache/spark/deploy/PythonRunner$/formatPath(java.lang.String,boolean)|",
      "|java+method:///org/apache/spark/api/python/PythonUtils$/sparkPythonPath()|",
      "|java+constructor:///org/apache/spark/deploy/PythonRunner$$anonfun$main$1/PythonRunner$$anonfun$main$1()|",
      "|java+constructor:///org/apache/spark/util/RedirectThread/RedirectThread(java.io.InputStream,java.io.OutputStream,java.lang.String,boolean)|",
      "|java+method:///java/lang/Thread/join()|",
      "|java+method:///org/apache/spark/deploy/PythonRunner$/formatPaths(java.lang.String,boolean)|",
      "|java+method:///java/lang/ProcessBuilder/environment()|",
      "|java+method:///java/lang/Process/getInputStream()|",
      "|java+method:///scala/collection/mutable/ArrayBuffer/$plus$eq(java.lang.Object)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/ProcessBuilder/redirectErrorStream(boolean)|",
      "|java+method:///org/apache/spark/deploy/PythonRunner$/formatPaths$default$2()|",
      "|java+method:///java/lang/Thread/start()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/collection/mutable/ArrayOps/slice(int,int)|",
      "|java+constructor:///java/lang/Thread/Thread(java.lang.Runnable)|",
      "|java+method:///scala/collection/immutable/Map/getOrElse(java.lang.Object,scala.Function0)|",
      "|java+method:///java/lang/ProcessBuilder/start()|",
      "|java+method:///java/lang/Thread/setDaemon(boolean)|",
      "|java+constructor:///org/apache/spark/SparkUserAppException/SparkUserAppException(int)|",
      "|java+method:///java/lang/Thread/setName(java.lang.String)|",
      "|java+method:///scala/collection/Seq$/apply(scala.collection.Seq)|",
      "|java+constructor:///scala/collection/mutable/ArrayBuffer/ArrayBuffer()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///scala/collection/TraversableLike/$plus$plus(scala.collection.GenTraversableOnce,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///org/apache/spark/util/RedirectThread$/$lessinit$greater$default$4()|",
      "|java+method:///org/apache/spark/util/RedirectThread/start()|",
      "|java+method:///org/apache/spark/deploy/PythonRunner$/formatPath$default$2()|",
      "|java+constructor:///py4j/GatewayServer/GatewayServer(java.lang.Object,int)|",
      "|java+constructor:///org/apache/spark/deploy/PythonRunner$$anon$1/PythonRunner$$anon$1(py4j.GatewayServer)|",
      "|java+method:///py4j/GatewayServer/getListeningPort()|",
      "|java+constructor:///org/apache/spark/deploy/PythonRunner$$anonfun$1/PythonRunner$$anonfun$1()|",
      "|java+method:///java/lang/Process/waitFor()|",
      "|java+method:///scala/collection/JavaConverters$/seqAsJavaListConverter(scala.collection.Seq)|",
      "|java+method:///scala/collection/mutable/ArrayBuffer/$plus$plus$eq(scala.collection.TraversableOnce)|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///scala/sys/package$/env()|",
      "|java+method:///scala/collection/convert/Decorators$AsJava/asJava()|",
      "|java+method:///scala/collection/Seq$/canBuildFrom()|",
      "|java+method:///java/lang/String/valueOf(java.lang.Object)|",
      "|java+constructor:///org/apache/spark/deploy/PythonRunner$$anonfun$main$2/PythonRunner$$anonfun$main$2(java.util.Map)|",
      "|java+method:///org/apache/spark/api/python/PythonUtils$/mergePythonPaths(scala.collection.Seq)|",
      "|java+method:///py4j/GatewayServer/shutdown()|",
      "|java+method:///org/apache/spark/api/python/PythonUtils$/sparkPythonPath()|",
      "|java+constructor:///org/apache/spark/deploy/PythonRunner$$anonfun$main$1/PythonRunner$$anonfun$main$1()|",
      "|java+constructor:///org/apache/spark/util/RedirectThread/RedirectThread(java.io.InputStream,java.io.OutputStream,java.lang.String,boolean)|",
      "|java+method:///java/lang/Thread/join()|",
      "|java+constructor:///java/lang/ProcessBuilder/ProcessBuilder(java.util.List)|",
      "|java+constructor:///org/apache/spark/deploy/PythonRunner$$anonfun$3/PythonRunner$$anonfun$3()|",
      "|java+method:///java/lang/Process/getInputStream()|",
      "|java+method:///scala/Option/foreach(scala.Function1)|",
      "|java+method:///scala/collection/mutable/ArrayBuffer/$plus$eq(java.lang.Object)|",
      "|java+constructor:///org/apache/spark/deploy/PythonRunner$$anonfun$1/PythonRunner$$anonfun$1(org.apache.spark.SparkConf)|",
      "|java+constructor:///org/apache/spark/deploy/PythonRunner$$anonfun$4/PythonRunner$$anonfun$4()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/ProcessBuilder/redirectErrorStream(boolean)|",
      "|java+method:///org/apache/spark/deploy/PythonRunner$/formatPaths$default$2()|",
      "|java+method:///java/lang/Thread/start()|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|",
      "|java+method:///scala/collection/mutable/ArrayOps/slice(int,int)|",
      "|java+method:///org/apache/spark/deploy/PythonRunner$/formatPath(java.lang.String,boolean)|",
      "|java+method:///org/apache/spark/SparkConf/get(org.apache.spark.internal.config.ConfigEntry)|",
      "|java+constructor:///org/apache/spark/SparkConf/SparkConf()|",
      "|java+constructor:///java/lang/Thread/Thread(java.lang.Runnable)|",
      "|java+method:///scala/Option/orElse(scala.Function0)|",
      "|java+method:///scala/collection/immutable/Map/getOrElse(java.lang.Object,scala.Function0)|",
      "|java+method:///java/lang/ProcessBuilder/start()|",
      "|java+method:///java/lang/Thread/setDaemon(boolean)|",
      "|java+method:///org/apache/spark/internal/config/package$/PYSPARK_PYTHON()|",
      "|java+constructor:///org/apache/spark/SparkUserAppException/SparkUserAppException(int)|",
      "|java+method:///java/lang/Thread/setName(java.lang.String)|",
      "|java+method:///scala/collection/Seq$/apply(scala.collection.Seq)|",
      "|java+constructor:///scala/collection/mutable/ArrayBuffer/ArrayBuffer()|",
      "|java+method:///scala/runtime/BoxesRunTime/boxToInteger(int)|",
      "|java+method:///org/apache/spark/internal/config/package$/PYSPARK_DRIVER_PYTHON()|",
      "|java+method:///scala/collection/TraversableLike/$plus$plus(scala.collection.GenTraversableOnce,scala.collection.generic.CanBuildFrom)|",
      "|java+method:///org/apache/spark/util/RedirectThread$/$lessinit$greater$default$4()|",
      "|java+method:///org/apache/spark/util/RedirectThread/start()|",
      "|java+method:///org/apache/spark/deploy/PythonRunner$/formatPath$default$2()|",
      "|java+constructor:///py4j/GatewayServer/GatewayServer(java.lang.Object,int)|",
      "|java+constructor:///org/apache/spark/deploy/PythonRunner$$anon$1/PythonRunner$$anon$1(py4j.GatewayServer)|",
      "|java+method:///py4j/GatewayServer/getListeningPort()|",
      "|java+method:///org/apache/spark/deploy/PythonRunner$/formatPaths(java.lang.String,boolean)|",
      "|java+method:///scala/Option/getOrElse(scala.Function0)|",
      "|java+method:///java/lang/Process/waitFor()|",
      "|java+method:///scala/collection/JavaConverters$/seqAsJavaListConverter(scala.collection.Seq)|",
      "|java+method:///scala/collection/mutable/ArrayBuffer/$plus$plus$eq(scala.collection.TraversableOnce)|",
      "|java+method:///scala/Predef$/refArrayOps(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/ProcessBuilder/environment()|",
      "|java+constructor:///org/apache/spark/deploy/PythonRunner$$anonfun$2/PythonRunner$$anonfun$2()|"
    ],
    "affectedLib": "net.sf.py4j:py4j:0.10.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappy-spark-core_2.11:2.0.3-2",
    "coordinatesV2": "io.snappydata:snappy-spark-core_2.11:2.1.1.1-rc1",
    "caller": "|java+method:///org/apache/spark/util/collection/unsafe/sort/UnsafeInMemorySorter$SortedIterator/loadNext()|",
    "called": "|java+method:///org/apache/spark/unsafe/UnsafeAlignedOffset/getSize(java.lang.Object,long)|",
    "v1Body": [
      "|java+method:///org/apache/spark/unsafe/Platform/getInt(java.lang.Object,long)|",
      "|java+method:///org/apache/spark/util/collection/unsafe/sort/UnsafeInMemorySorter/access$100(org.apache.spark.util.collection.unsafe.sort.UnsafeInMemorySorter)|",
      "|java+method:///org/apache/spark/memory/TaskMemoryManager/getOffsetInPage(long)|",
      "|java+method:///org/apache/spark/memory/TaskMemoryManager/decodePageNumber(long)|",
      "|java+method:///org/apache/spark/memory/TaskMemoryManager/getPage(long)|",
      "|java+method:///org/apache/spark/util/collection/unsafe/sort/UnsafeInMemorySorter/access$000(org.apache.spark.util.collection.unsafe.sort.UnsafeInMemorySorter)|",
      "|java+method:///org/apache/spark/unsafe/array/LongArray/get(int)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/spark/TaskKilledException/TaskKilledException()|",
      "|java+method:///org/apache/spark/TaskContext/isInterrupted()|",
      "|java+method:///org/apache/spark/unsafe/UnsafeAlignedOffset/getUaoSize()|",
      "|java+method:///org/apache/spark/util/collection/unsafe/sort/UnsafeInMemorySorter/access$100(org.apache.spark.util.collection.unsafe.sort.UnsafeInMemorySorter)|",
      "|java+method:///org/apache/spark/memory/TaskMemoryManager/getOffsetInPage(long)|",
      "|java+method:///org/apache/spark/memory/TaskMemoryManager/decodePageNumber(long)|",
      "|java+method:///org/apache/spark/memory/TaskMemoryManager/getPage(long)|",
      "|java+method:///org/apache/spark/unsafe/UnsafeAlignedOffset/getSize(java.lang.Object,long)|",
      "|java+method:///org/apache/spark/util/collection/unsafe/sort/UnsafeInMemorySorter/access$000(org.apache.spark.util.collection.unsafe.sort.UnsafeInMemorySorter)|",
      "|java+method:///org/apache/spark/unsafe/array/LongArray/get(int)|"
    ],
    "affectedLib": "io.snappydata:snappy-spark-unsafe_2.11:2.1.1.1-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappy-spark-core_2.11:2.0.3-2",
    "coordinatesV2": "io.snappydata:snappy-spark-core_2.11:2.1.1.1-rc1",
    "caller": "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap$MapIterator/advanceToNextPage()|",
    "called": "|java+method:///org/apache/spark/unsafe/Platform/throwException(java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/apache/spark/util/collection/unsafe/sort/UnsafeSorterSpillWriter/getReader(org.apache.spark.serializer.SerializerManager)|",
      "|java+method:///org/apache/spark/unsafe/memory/MemoryBlock/getBaseOffset()|",
      "|java+method:///java/util/LinkedList/remove(java.lang.Object)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$500(org.apache.spark.unsafe.map.BytesToBytesMap)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$400(org.apache.spark.unsafe.map.BytesToBytesMap)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$300(org.apache.spark.unsafe.map.BytesToBytesMap)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$100(org.apache.spark.unsafe.map.BytesToBytesMap)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/spark/util/collection/unsafe/sort/UnsafeSorterSpillWriter/getFile()|",
      "|java+method:///java/util/LinkedList/indexOf(java.lang.Object)|",
      "|java+method:///org/apache/spark/unsafe/Platform/throwException(java.lang.Throwable)|",
      "|java+method:///java/io/File/delete()|",
      "|java+method:///java/util/LinkedList/get(int)|",
      "|java+method:///org/apache/spark/unsafe/Platform/getInt(java.lang.Object,long)|",
      "|java+method:///com/google/common/io/Closeables/close(java.io.Closeable,boolean)|",
      "|java+method:///java/util/LinkedList/removeFirst()|",
      "|java+method:///java/util/LinkedList/getFirst()|",
      "|java+method:///org/apache/spark/unsafe/memory/MemoryBlock/getBaseObject()|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$200(org.apache.spark.unsafe.map.BytesToBytesMap,org.apache.spark.unsafe.memory.MemoryBlock)|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///java/util/LinkedList/size()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/io/Closeables/close(java.io.Closeable,boolean)|",
      "|java+method:///org/apache/spark/util/collection/unsafe/sort/UnsafeSorterSpillWriter/getReader(org.apache.spark.serializer.SerializerManager)|",
      "|java+method:///org/apache/spark/unsafe/memory/MemoryBlock/getBaseOffset()|",
      "|java+method:///java/util/LinkedList/remove(java.lang.Object)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$300(org.apache.spark.unsafe.map.BytesToBytesMap)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$100(org.apache.spark.unsafe.map.BytesToBytesMap)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/spark/util/collection/unsafe/sort/UnsafeSorterSpillWriter/getFile()|",
      "|java+method:///java/util/LinkedList/indexOf(java.lang.Object)|",
      "|java+method:///org/apache/spark/unsafe/UnsafeAlignedOffset/getSize(java.lang.Object,long)|",
      "|java+method:///java/io/File/delete()|",
      "|java+method:///java/util/LinkedList/get(int)|",
      "|java+method:///org/apache/spark/unsafe/UnsafeAlignedOffset/getUaoSize()|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$500(org.apache.spark.unsafe.map.BytesToBytesMap)|",
      "|java+method:///java/util/LinkedList/removeFirst()|",
      "|java+method:///java/util/LinkedList/getFirst()|",
      "|java+method:///org/apache/spark/unsafe/memory/MemoryBlock/getBaseObject()|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$200(org.apache.spark.unsafe.map.BytesToBytesMap,org.apache.spark.unsafe.memory.MemoryBlock)|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///java/util/LinkedList/size()|",
      "|java+method:///org/apache/spark/unsafe/Platform/throwException(java.lang.Throwable)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$400()|"
    ],
    "affectedLib": "io.snappydata:snappy-spark-unsafe_2.11:2.1.1.1-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappy-spark-core_2.11:2.0.3-2",
    "coordinatesV2": "io.snappydata:snappy-spark-core_2.11:2.1.1.1-rc1",
    "caller": "|java+method:///org/apache/spark/shuffle/sort/ShuffleExternalSorter/writeSortedFile(boolean)|",
    "called": "|java+method:///org/apache/spark/unsafe/Platform/copyMemory(java.lang.Object,long,java.lang.Object,long,long)|",
    "v1Body": [
      "|java+method:///org/apache/spark/storage/DiskBlockObjectWriter/write(byte%5B%5D,int,int)|",
      "|java+method:///org/apache/spark/unsafe/Platform/getInt(java.lang.Object,long)|",
      "|java+method:///org/apache/spark/unsafe/Platform/copyMemory(java.lang.Object,long,java.lang.Object,long,long)|",
      "|java+method:///org/apache/spark/shuffle/sort/ShuffleInMemorySorter/getSortedIterator()|",
      "|java+method:///org/apache/spark/storage/DiskBlockObjectWriter/fileSegment()|",
      "|java+method:///org/apache/spark/executor/ShuffleWriteMetrics/bytesWritten()|",
      "|java+method:///org/apache/spark/executor/ShuffleWriteMetrics/incRecordsWritten(long)|",
      "|java+method:///java/util/LinkedList/add(java.lang.Object)|",
      "|java+method:///org/apache/spark/storage/DiskBlockManager/createTempShuffleBlock()|",
      "|java+method:///org/apache/spark/executor/ShuffleWriteMetrics/recordsWritten()|",
      "|java+constructor:///org/apache/spark/executor/ShuffleWriteMetrics/ShuffleWriteMetrics()|",
      "|java+method:///java/lang/Math/min(int,int)|",
      "|java+method:///org/apache/spark/shuffle/sort/ShuffleInMemorySorter$ShuffleSorterIterator/hasNext()|",
      "|java+method:///org/apache/spark/storage/BlockManager/diskBlockManager()|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///org/apache/spark/TaskContext/taskMetrics()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+constructor:///org/apache/spark/shuffle/sort/SpillInfo/SpillInfo(int,java.io.File,org.apache.spark.storage.TempShuffleBlockId)|",
      "|java+method:///org/apache/spark/memory/TaskMemoryManager/getOffsetInPage(long)|",
      "|java+method:///org/apache/spark/storage/FileSegment/length()|",
      "|java+method:///org/apache/spark/executor/TaskMetrics/incDiskBytesSpilled(long)|",
      "|java+method:///org/apache/spark/memory/TaskMemoryManager/getPage(long)|",
      "|java+method:///org/apache/spark/storage/DiskBlockObjectWriter/recordWritten()|",
      "|java+method:///org/apache/spark/shuffle/sort/PackedRecordPointer/getPartitionId()|",
      "|java+method:///org/apache/spark/storage/BlockManager/getDiskWriter(org.apache.spark.storage.BlockId,java.io.File,org.apache.spark.serializer.SerializerInstance,int,org.apache.spark.executor.ShuffleWriteMetrics)|",
      "|java+method:///org/apache/spark/shuffle/sort/ShuffleInMemorySorter$ShuffleSorterIterator/loadNext()|",
      "|java+method:///org/apache/spark/storage/DiskBlockObjectWriter/commitAndClose()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/spark/shuffle/sort/PackedRecordPointer/getRecordPointer()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/spark/storage/DiskBlockObjectWriter/write(byte%5B%5D,int,int)|",
      "|java+method:///org/apache/spark/unsafe/Platform/getInt(java.lang.Object,long)|",
      "|java+method:///org/apache/spark/unsafe/Platform/copyMemory(java.lang.Object,long,java.lang.Object,long,long)|",
      "|java+method:///org/apache/spark/shuffle/sort/ShuffleInMemorySorter/getSortedIterator()|",
      "|java+method:///org/apache/spark/storage/DiskBlockObjectWriter/close()|",
      "|java+method:///org/apache/spark/executor/ShuffleWriteMetrics/bytesWritten()|",
      "|java+method:///org/apache/spark/executor/ShuffleWriteMetrics/incRecordsWritten(long)|",
      "|java+method:///java/util/LinkedList/add(java.lang.Object)|",
      "|java+method:///org/apache/spark/storage/DiskBlockManager/createTempShuffleBlock()|",
      "|java+method:///org/apache/spark/executor/ShuffleWriteMetrics/recordsWritten()|",
      "|java+constructor:///org/apache/spark/executor/ShuffleWriteMetrics/ShuffleWriteMetrics()|",
      "|java+method:///org/apache/spark/shuffle/sort/ShuffleInMemorySorter$ShuffleSorterIterator/hasNext()|",
      "|java+method:///org/apache/spark/storage/BlockManager/diskBlockManager()|",
      "|java+method:///scala/Tuple2/_1()|",
      "|java+method:///org/apache/spark/TaskContext/taskMetrics()|",
      "|java+method:///scala/Tuple2/_2()|",
      "|java+constructor:///org/apache/spark/shuffle/sort/SpillInfo/SpillInfo(int,java.io.File,org.apache.spark.storage.TempShuffleBlockId)|",
      "|java+method:///org/apache/spark/memory/TaskMemoryManager/getOffsetInPage(long)|",
      "|java+method:///org/apache/spark/storage/FileSegment/length()|",
      "|java+method:///org/apache/spark/executor/TaskMetrics/incDiskBytesSpilled(long)|",
      "|java+method:///org/apache/spark/memory/TaskMemoryManager/getPage(long)|",
      "|java+method:///org/apache/spark/storage/DiskBlockObjectWriter/recordWritten()|",
      "|java+method:///org/apache/spark/shuffle/sort/PackedRecordPointer/getPartitionId()|",
      "|java+method:///org/apache/spark/storage/DiskBlockObjectWriter/commitAndGet()|",
      "|java+method:///java/lang/Math/min(int,int)|",
      "|java+method:///org/apache/spark/storage/BlockManager/getDiskWriter(org.apache.spark.storage.BlockId,java.io.File,org.apache.spark.serializer.SerializerInstance,int,org.apache.spark.executor.ShuffleWriteMetrics)|",
      "|java+method:///org/apache/spark/shuffle/sort/ShuffleInMemorySorter$ShuffleSorterIterator/loadNext()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/spark/shuffle/sort/PackedRecordPointer/getRecordPointer()|"
    ],
    "affectedLib": "io.snappydata:snappy-spark-unsafe_2.11:2.1.1.1-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappy-spark-core_2.11:2.0.3-2",
    "coordinatesV2": "io.snappydata:snappy-spark-core_2.11:2.1.1.1-rc1",
    "caller": "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap$MapIterator/next()|",
    "called": "|java+method:///org/apache/spark/unsafe/Platform/throwException(java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/apache/spark/unsafe/Platform/getInt(java.lang.Object,long)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$400(org.apache.spark.unsafe.map.BytesToBytesMap)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap$Location/access$700(org.apache.spark.unsafe.map.BytesToBytesMap$Location,java.lang.Object,long,int)|",
      "|java+method:///org/apache/spark/util/collection/unsafe/sort/UnsafeSorterSpillReader/close()|",
      "|java+method:///org/apache/spark/util/collection/unsafe/sort/UnsafeSorterSpillReader/getBaseOffset()|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap$MapIterator/next()|",
      "|java+method:///org/apache/spark/util/collection/unsafe/sort/UnsafeSorterSpillReader/getBaseObject()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/spark/util/collection/unsafe/sort/UnsafeSorterSpillReader/getRecordLength()|",
      "|java+method:///org/apache/spark/util/collection/unsafe/sort/UnsafeSorterSpillReader/hasNext()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap$MapIterator/advanceToNextPage()|",
      "|java+method:///org/apache/spark/unsafe/Platform/throwException(java.lang.Throwable)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap$Location/access$600(org.apache.spark.unsafe.map.BytesToBytesMap$Location,org.apache.spark.unsafe.memory.MemoryBlock,long)|",
      "|java+method:///org/apache/spark/util/collection/unsafe/sort/UnsafeSorterSpillReader/loadNext()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/spark/unsafe/UnsafeAlignedOffset/getUaoSize()|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap$Location/access$700(org.apache.spark.unsafe.map.BytesToBytesMap$Location,java.lang.Object,long,int)|",
      "|java+method:///org/apache/spark/util/collection/unsafe/sort/UnsafeSorterSpillReader/close()|",
      "|java+method:///org/apache/spark/util/collection/unsafe/sort/UnsafeSorterSpillReader/getBaseOffset()|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap$MapIterator/next()|",
      "|java+method:///org/apache/spark/util/collection/unsafe/sort/UnsafeSorterSpillReader/getBaseObject()|",
      "|java+method:///org/apache/spark/unsafe/UnsafeAlignedOffset/getSize(java.lang.Object,long)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/spark/util/collection/unsafe/sort/UnsafeSorterSpillReader/getRecordLength()|",
      "|java+method:///org/apache/spark/util/collection/unsafe/sort/UnsafeSorterSpillReader/hasNext()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap$MapIterator/advanceToNextPage()|",
      "|java+method:///org/apache/spark/unsafe/Platform/throwException(java.lang.Throwable)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap$Location/access$600(org.apache.spark.unsafe.map.BytesToBytesMap$Location,org.apache.spark.unsafe.memory.MemoryBlock,long)|",
      "|java+method:///org/apache/spark/util/collection/unsafe/sort/UnsafeSorterSpillReader/loadNext()|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$400()|"
    ],
    "affectedLib": "io.snappydata:snappy-spark-unsafe_2.11:2.1.1.1-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappy-spark-core_2.11:2.0.3-2",
    "coordinatesV2": "io.snappydata:snappy-spark-core_2.11:2.1.1.1-rc1",
    "caller": "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap$Location/updateAddressesAndSizes(java.lang.Object,long)|",
    "called": "|java+method:///org/apache/spark/unsafe/UnsafeAlignedOffset/getSize(java.lang.Object,long)|",
    "v1Body": [
      "|java+method:///org/apache/spark/unsafe/Platform/getInt(java.lang.Object,long)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/spark/unsafe/UnsafeAlignedOffset/getUaoSize()|",
      "|java+method:///org/apache/spark/unsafe/UnsafeAlignedOffset/getSize(java.lang.Object,long)|"
    ],
    "affectedLib": "io.snappydata:snappy-spark-unsafe_2.11:2.1.1.1-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappy-spark-core_2.11:2.0.3-2",
    "coordinatesV2": "io.snappydata:snappy-spark-core_2.11:2.1.1.1-rc1",
    "caller": "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/acquireNewPage(long)|",
    "called": "|java+method:///org/apache/spark/unsafe/UnsafeAlignedOffset/putSize(java.lang.Object,long,int)|",
    "v1Body": [
      "|java+method:///org/apache/spark/unsafe/memory/MemoryBlock/getBaseOffset()|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/allocatePage(long)|",
      "|java+method:///org/apache/spark/unsafe/Platform/putInt(java.lang.Object,long,int)|",
      "|java+method:///org/apache/spark/unsafe/memory/MemoryBlock/getBaseObject()|",
      "|java+method:///java/util/LinkedList/add(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/spark/unsafe/UnsafeAlignedOffset/putSize(java.lang.Object,long,int)|",
      "|java+method:///org/apache/spark/unsafe/memory/MemoryBlock/getBaseOffset()|",
      "|java+method:///org/apache/spark/unsafe/UnsafeAlignedOffset/getUaoSize()|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/allocatePage(long)|",
      "|java+method:///org/apache/spark/unsafe/memory/MemoryBlock/getBaseObject()|",
      "|java+method:///java/util/LinkedList/add(java.lang.Object)|"
    ],
    "affectedLib": "io.snappydata:snappy-spark-unsafe_2.11:2.1.1.1-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappy-spark-core_2.11:2.0.3-2",
    "coordinatesV2": "io.snappydata:snappy-spark-core_2.11:2.1.1.1-rc1",
    "caller": "|java+method:///org/apache/spark/shuffle/sort/ShuffleInMemorySorter/getSortedIterator()|",
    "called": "|java+constructor:///org/apache/spark/unsafe/array/LongArray/LongArray(org.apache.spark.unsafe.memory.MemoryBlock)|",
    "v1Body": [
      "|java+method:///org/apache/spark/util/collection/unsafe/sort/RadixSort/sort(org.apache.spark.unsafe.array.LongArray,int,int,int,boolean,boolean)|",
      "|java+method:///org/apache/spark/unsafe/array/LongArray/size()|",
      "|java+constructor:///org/apache/spark/util/collection/Sorter/Sorter(org.apache.spark.util.collection.SortDataFormat)|",
      "|java+constructor:///org/apache/spark/unsafe/memory/MemoryBlock/MemoryBlock(java.lang.Object,long,long)|",
      "|java+constructor:///org/apache/spark/shuffle/sort/ShuffleInMemorySorter$ShuffleSorterIterator/ShuffleInMemorySorter$ShuffleSorterIterator(int,org.apache.spark.unsafe.array.LongArray,int)|",
      "|java+constructor:///org/apache/spark/unsafe/array/LongArray/LongArray(org.apache.spark.unsafe.memory.MemoryBlock)|",
      "|java+method:///org/apache/spark/unsafe/array/LongArray/getBaseObject()|",
      "|java+constructor:///org/apache/spark/shuffle/sort/ShuffleSortDataFormat/ShuffleSortDataFormat(org.apache.spark.unsafe.array.LongArray)|",
      "|java+method:///org/apache/spark/unsafe/array/LongArray/getBaseOffset()|",
      "|java+method:///org/apache/spark/util/collection/Sorter/sort(java.lang.Object,int,int,java.util.Comparator)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/spark/unsafe/array/LongArray/size()|",
      "|java+constructor:///org/apache/spark/util/collection/Sorter/Sorter(org.apache.spark.util.collection.SortDataFormat)|",
      "|java+constructor:///org/apache/spark/unsafe/memory/MemoryBlock/MemoryBlock(java.lang.Object,long,long)|",
      "|java+constructor:///org/apache/spark/shuffle/sort/ShuffleInMemorySorter$ShuffleSorterIterator/ShuffleInMemorySorter$ShuffleSorterIterator(int,org.apache.spark.unsafe.array.LongArray,int)|",
      "|java+constructor:///org/apache/spark/unsafe/array/LongArray/LongArray(org.apache.spark.unsafe.memory.MemoryBlock)|",
      "|java+method:///org/apache/spark/unsafe/array/LongArray/getBaseObject()|",
      "|java+method:///org/apache/spark/unsafe/array/LongArray/getBaseOffset()|",
      "|java+method:///org/apache/spark/util/collection/Sorter/sort(java.lang.Object,int,int,java.util.Comparator)|",
      "|java+method:///org/apache/spark/util/collection/unsafe/sort/RadixSort/sort(org.apache.spark.unsafe.array.LongArray,long,int,int,boolean,boolean)|",
      "|java+constructor:///org/apache/spark/shuffle/sort/ShuffleSortDataFormat/ShuffleSortDataFormat(org.apache.spark.unsafe.array.LongArray)|"
    ],
    "affectedLib": "io.snappydata:snappy-spark-unsafe_2.11:2.1.1.1-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappy-spark-core_2.11:2.0.3-2",
    "coordinatesV2": "io.snappydata:snappy-spark-core_2.11:2.1.1.1-rc1",
    "caller": "|java+method:///org/apache/spark/storage/BlockManager$$anonfun$19/apply(int)|",
    "called": "|java+method:///org/apache/spark/unsafe/Platform/allocateDirectBuffer(int)|",
    "v1Body": [
      "|java+method:///java/nio/ByteBuffer/allocate(int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/spark/unsafe/Platform/allocateDirectBuffer(int)|"
    ],
    "affectedLib": "io.snappydata:snappy-spark-unsafe_2.11:2.1.1.1-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappy-spark-core_2.11:2.0.3-2",
    "coordinatesV2": "io.snappydata:snappy-spark-core_2.11:2.1.1.1-rc1",
    "caller": "|java+method:///org/apache/spark/rdd/InputFileNameHolder$/setInputFileName(java.lang.String)|",
    "called": "|java+method:///org/apache/spark/unsafe/types/UTF8String/fromString(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/spark/unsafe/types/UTF8String/fromString(java.lang.String)|",
      "|java+method:///java/lang/ThreadLocal/set(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/spark/rdd/InputFileNameHolder$$anonfun$setInputFileName$1/InputFileNameHolder$$anonfun$setInputFileName$1()|",
      "|java+method:///org/apache/spark/unsafe/types/UTF8String/fromString(java.lang.String)|",
      "|java+method:///java/lang/ThreadLocal/set(java.lang.Object)|",
      "|java+method:///scala/Predef$/require(boolean,scala.Function0)|"
    ],
    "affectedLib": "io.snappydata:snappy-spark-unsafe_2.11:2.1.1.1-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappy-spark-core_2.11:2.0.3-2",
    "coordinatesV2": "io.snappydata:snappy-spark-core_2.11:2.1.1.1-rc1",
    "caller": "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap$MapIterator/spill(long)|",
    "called": "|java+method:///org/apache/spark/unsafe/UnsafeAlignedOffset/getSize(java.lang.Object,long)|",
    "v1Body": [
      "|java+method:///org/apache/spark/unsafe/Platform/getInt(java.lang.Object,long)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$300(org.apache.spark.unsafe.map.BytesToBytesMap)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$100(org.apache.spark.unsafe.map.BytesToBytesMap)|",
      "|java+method:///org/apache/spark/unsafe/memory/MemoryBlock/size()|",
      "|java+method:///org/apache/spark/util/collection/unsafe/sort/UnsafeSorterSpillWriter/write(java.lang.Object,long,int,long)|",
      "|java+method:///java/util/LinkedList/size()|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$900(org.apache.spark.unsafe.map.BytesToBytesMap,org.apache.spark.unsafe.memory.MemoryBlock)|",
      "|java+constructor:///org/apache/spark/executor/ShuffleWriteMetrics/ShuffleWriteMetrics()|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$800(org.apache.spark.unsafe.map.BytesToBytesMap)|",
      "|java+method:///org/apache/spark/unsafe/memory/MemoryBlock/getBaseOffset()|",
      "|java+method:///java/util/LinkedList/removeLast()|",
      "|java+method:///java/util/LinkedList/getLast()|",
      "|java+method:///org/apache/spark/unsafe/memory/MemoryBlock/getBaseObject()|",
      "|java+method:///java/util/LinkedList/add(java.lang.Object)|",
      "|java+constructor:///org/apache/spark/util/collection/unsafe/sort/UnsafeSorterSpillWriter/UnsafeSorterSpillWriter(org.apache.spark.storage.BlockManager,int,org.apache.spark.executor.ShuffleWriteMetrics,int)|",
      "|java+method:///org/apache/spark/util/collection/unsafe/sort/UnsafeSorterSpillWriter/close()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/spark/unsafe/UnsafeAlignedOffset/getUaoSize()|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$300(org.apache.spark.unsafe.map.BytesToBytesMap)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$100(org.apache.spark.unsafe.map.BytesToBytesMap)|",
      "|java+method:///org/apache/spark/unsafe/memory/MemoryBlock/size()|",
      "|java+method:///org/apache/spark/util/collection/unsafe/sort/UnsafeSorterSpillWriter/write(java.lang.Object,long,int,long)|",
      "|java+method:///java/util/LinkedList/size()|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$900(org.apache.spark.unsafe.map.BytesToBytesMap,org.apache.spark.unsafe.memory.MemoryBlock)|",
      "|java+constructor:///org/apache/spark/executor/ShuffleWriteMetrics/ShuffleWriteMetrics()|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$800(org.apache.spark.unsafe.map.BytesToBytesMap)|",
      "|java+method:///org/apache/spark/unsafe/memory/MemoryBlock/getBaseOffset()|",
      "|java+method:///java/util/LinkedList/removeLast()|",
      "|java+method:///java/util/LinkedList/getLast()|",
      "|java+method:///org/apache/spark/unsafe/memory/MemoryBlock/getBaseObject()|",
      "|java+method:///java/util/LinkedList/add(java.lang.Object)|",
      "|java+constructor:///org/apache/spark/util/collection/unsafe/sort/UnsafeSorterSpillWriter/UnsafeSorterSpillWriter(org.apache.spark.storage.BlockManager,int,org.apache.spark.executor.ShuffleWriteMetrics,int)|",
      "|java+method:///org/apache/spark/unsafe/UnsafeAlignedOffset/getSize(java.lang.Object,long)|",
      "|java+method:///org/apache/spark/util/collection/unsafe/sort/UnsafeSorterSpillWriter/close()|"
    ],
    "affectedLib": "io.snappydata:snappy-spark-unsafe_2.11:2.1.1.1-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappy-spark-core_2.11:2.0.3-2",
    "coordinatesV2": "io.snappydata:snappy-spark-core_2.11:2.1.1.1-rc1",
    "caller": "|java+method:///org/apache/spark/util/collection/unsafe/sort/UnsafeInMemorySorter/getSortedIterator()|",
    "called": "|java+constructor:///org/apache/spark/unsafe/array/LongArray/LongArray(org.apache.spark.unsafe.memory.MemoryBlock)|",
    "v1Body": [
      "|java+method:///org/apache/spark/unsafe/array/LongArray/size()|",
      "|java+method:///org/apache/spark/util/collection/unsafe/sort/PrefixComparators$RadixSortSupport/sortDescending()|",
      "|java+constructor:///org/apache/spark/util/collection/Sorter/Sorter(org.apache.spark.util.collection.SortDataFormat)|",
      "|java+constructor:///org/apache/spark/unsafe/memory/MemoryBlock/MemoryBlock(java.lang.Object,long,long)|",
      "|java+constructor:///org/apache/spark/util/collection/unsafe/sort/UnsafeInMemorySorter$SortedIterator/UnsafeInMemorySorter$SortedIterator(org.apache.spark.util.collection.unsafe.sort.UnsafeInMemorySorter,int,int,org.apache.spark.util.collection.unsafe.sort.UnsafeInMemorySorter$1)|",
      "|java+constructor:///org/apache/spark/util/collection/unsafe/sort/UnsafeSortDataFormat/UnsafeSortDataFormat(org.apache.spark.unsafe.array.LongArray)|",
      "|java+constructor:///org/apache/spark/unsafe/array/LongArray/LongArray(org.apache.spark.unsafe.memory.MemoryBlock)|",
      "|java+method:///org/apache/spark/unsafe/array/LongArray/getBaseObject()|",
      "|java+method:///org/apache/spark/util/collection/unsafe/sort/RadixSort/sortKeyPrefixArray(org.apache.spark.unsafe.array.LongArray,int,int,int,boolean,boolean)|",
      "|java+method:///org/apache/spark/util/collection/unsafe/sort/PrefixComparators$RadixSortSupport/sortSigned()|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///org/apache/spark/unsafe/array/LongArray/getBaseOffset()|",
      "|java+method:///org/apache/spark/util/collection/Sorter/sort(java.lang.Object,int,int,java.util.Comparator)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/spark/unsafe/array/LongArray/size()|",
      "|java+method:///org/apache/spark/util/collection/unsafe/sort/PrefixComparators$RadixSortSupport/sortDescending()|",
      "|java+constructor:///org/apache/spark/util/collection/Sorter/Sorter(org.apache.spark.util.collection.SortDataFormat)|",
      "|java+constructor:///org/apache/spark/util/collection/unsafe/sort/UnsafeExternalSorter$ChainedIterator/UnsafeExternalSorter$ChainedIterator(java.util.Queue)|",
      "|java+constructor:///org/apache/spark/unsafe/memory/MemoryBlock/MemoryBlock(java.lang.Object,long,long)|",
      "|java+method:///java/util/LinkedList/add(java.lang.Object)|",
      "|java+constructor:///org/apache/spark/util/collection/unsafe/sort/UnsafeSortDataFormat/UnsafeSortDataFormat(org.apache.spark.unsafe.array.LongArray)|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///org/apache/spark/util/collection/unsafe/sort/PrefixComparators$RadixSortSupport/nullsFirst()|",
      "|java+constructor:///org/apache/spark/unsafe/array/LongArray/LongArray(org.apache.spark.unsafe.memory.MemoryBlock)|",
      "|java+method:///org/apache/spark/unsafe/array/LongArray/getBaseObject()|",
      "|java+method:///org/apache/spark/util/collection/unsafe/sort/RadixSort/sortKeyPrefixArray(org.apache.spark.unsafe.array.LongArray,long,long,int,int,boolean,boolean)|",
      "|java+method:///org/apache/spark/util/collection/unsafe/sort/PrefixComparators$RadixSortSupport/sortSigned()|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+constructor:///org/apache/spark/util/collection/unsafe/sort/UnsafeInMemorySorter$SortedIterator/UnsafeInMemorySorter$SortedIterator(org.apache.spark.util.collection.unsafe.sort.UnsafeInMemorySorter,int,int,org.apache.spark.util.collection.unsafe.sort.UnsafeInMemorySorter$1)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError(java.lang.Object)|",
      "|java+method:///org/apache/spark/unsafe/array/LongArray/getBaseOffset()|",
      "|java+method:///org/apache/spark/util/collection/Sorter/sort(java.lang.Object,int,int,java.util.Comparator)|"
    ],
    "affectedLib": "io.snappydata:snappy-spark-unsafe_2.11:2.1.1.1-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappy-spark-core_2.11:2.0.3-2",
    "coordinatesV2": "io.snappydata:snappy-spark-core_2.11:2.1.1.1-rc1",
    "caller": "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap$Location/with(java.lang.Object,long,int)|",
    "called": "|java+method:///org/apache/spark/unsafe/UnsafeAlignedOffset/getSize(java.lang.Object,long)|",
    "v1Body": [
      "|java+method:///org/apache/spark/unsafe/Platform/getInt(java.lang.Object,long)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/spark/unsafe/UnsafeAlignedOffset/getUaoSize()|",
      "|java+method:///org/apache/spark/unsafe/UnsafeAlignedOffset/getSize(java.lang.Object,long)|"
    ],
    "affectedLib": "io.snappydata:snappy-spark-unsafe_2.11:2.1.1.1-rc1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:snappy-spark-core_2.11:2.0.3-2",
    "coordinatesV2": "io.snappydata:snappy-spark-core_2.11:2.1.1.1-rc1",
    "caller": "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap$Location/append(java.lang.Object,long,int,java.lang.Object,long,int)|",
    "called": "|java+method:///org/apache/spark/unsafe/UnsafeAlignedOffset/getSize(java.lang.Object,long)|",
    "v1Body": [
      "|java+method:///org/apache/spark/unsafe/Platform/getInt(java.lang.Object,long)|",
      "|java+method:///org/apache/spark/unsafe/Platform/copyMemory(java.lang.Object,long,java.lang.Object,long,long)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$1408(org.apache.spark.unsafe.map.BytesToBytesMap)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$1800(org.apache.spark.unsafe.map.BytesToBytesMap)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$1400(org.apache.spark.unsafe.map.BytesToBytesMap)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$1200(org.apache.spark.unsafe.map.BytesToBytesMap)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/growAndRehash()|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$1814(org.apache.spark.unsafe.map.BytesToBytesMap,long)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap$Location/updateAddressesAndSizes(long)|",
      "|java+method:///org/apache/spark/unsafe/array/LongArray/set(int,long)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/spark/unsafe/memory/MemoryBlock/getBaseOffset()|",
      "|java+method:///org/apache/spark/unsafe/array/LongArray/size()|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$1700(org.apache.spark.unsafe.map.BytesToBytesMap)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$2008(org.apache.spark.unsafe.map.BytesToBytesMap)|",
      "|java+method:///org/apache/spark/unsafe/memory/MemoryBlock/size()|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$1600(org.apache.spark.unsafe.map.BytesToBytesMap)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$1500(org.apache.spark.unsafe.map.BytesToBytesMap)|",
      "|java+method:///org/apache/spark/unsafe/array/LongArray/get(int)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$1502(org.apache.spark.unsafe.map.BytesToBytesMap,boolean)|",
      "|java+method:///org/apache/spark/unsafe/memory/MemoryBlock/getBaseObject()|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$1300(org.apache.spark.unsafe.map.BytesToBytesMap)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$1900(org.apache.spark.unsafe.map.BytesToBytesMap,long)|",
      "|java+method:///org/apache/spark/memory/TaskMemoryManager/encodePageNumberAndOffset(org.apache.spark.unsafe.memory.MemoryBlock,long)|",
      "|java+method:///org/apache/spark/unsafe/Platform/putInt(java.lang.Object,long,int)|",
      "|java+method:///org/apache/spark/unsafe/Platform/putLong(java.lang.Object,long,long)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/spark/unsafe/UnsafeAlignedOffset/putSize(java.lang.Object,long,int)|",
      "|java+method:///org/apache/spark/unsafe/Platform/copyMemory(java.lang.Object,long,java.lang.Object,long,long)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$1800(org.apache.spark.unsafe.map.BytesToBytesMap)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$1400(org.apache.spark.unsafe.map.BytesToBytesMap)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$1200(org.apache.spark.unsafe.map.BytesToBytesMap)|",
      "|java+method:///org/apache/spark/unsafe/Platform/putLong(java.lang.Object,long,long)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap$Location/updateAddressesAndSizes(long)|",
      "|java+method:///org/apache/spark/unsafe/array/LongArray/set(int,long)|",
      "|java+method:///org/apache/spark/unsafe/UnsafeAlignedOffset/getSize(java.lang.Object,long)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/spark/unsafe/memory/MemoryBlock/getBaseOffset()|",
      "|java+method:///org/apache/spark/unsafe/array/LongArray/size()|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$1408(org.apache.spark.unsafe.map.BytesToBytesMap)|",
      "|java+method:///org/apache/spark/unsafe/UnsafeAlignedOffset/getUaoSize()|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$1700(org.apache.spark.unsafe.map.BytesToBytesMap)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$2008(org.apache.spark.unsafe.map.BytesToBytesMap)|",
      "|java+method:///org/apache/spark/unsafe/memory/MemoryBlock/size()|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$1600(org.apache.spark.unsafe.map.BytesToBytesMap)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$1500(org.apache.spark.unsafe.map.BytesToBytesMap)|",
      "|java+method:///org/apache/spark/unsafe/array/LongArray/get(int)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$1502(org.apache.spark.unsafe.map.BytesToBytesMap,boolean)|",
      "|java+method:///org/apache/spark/unsafe/memory/MemoryBlock/getBaseObject()|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$1300(org.apache.spark.unsafe.map.BytesToBytesMap)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$1900(org.apache.spark.unsafe.map.BytesToBytesMap,long)|",
      "|java+method:///org/apache/spark/memory/TaskMemoryManager/encodePageNumberAndOffset(org.apache.spark.unsafe.memory.MemoryBlock,long)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/access$1802(org.apache.spark.unsafe.map.BytesToBytesMap,long)|",
      "|java+method:///org/apache/spark/unsafe/map/BytesToBytesMap/growAndRehash()|"
    ],
    "affectedLib": "io.snappydata:snappy-spark-unsafe_2.11:2.1.1.1-rc1",
    "change": "UPDATED"
  }
]