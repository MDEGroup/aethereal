[
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.4",
    "caller": "|java+method:///org/sonar/xoo/scm/XooBlameCommand/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.scm.BlameCommand$BlameOutput)|",
    "called": "|java+method:///org/apache/commons/lang3/StringUtils/splitPreserveAllTokens(java.lang.String,char)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///java/io/File/getName()|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/sonar/api/batch/scm/BlameLine/BlameLine()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/sonar/api/batch/scm/BlameCommand$BlameOutput/blameResult(org.sonar.api.batch.fs.InputFile,java.util.List)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/commons/lang3/StringUtils/trimToNull(java.lang.String)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isNotBlank(java.lang.CharSequence)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/api/batch/scm/BlameLine/date(java.util.Date)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/batch/fs/InputFile/file()|",
      "|java+method:///org/sonar/api/utils/DateUtils/parseDate(java.lang.String)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/splitPreserveAllTokens(java.lang.String,char)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.nio.charset.Charset)|",
      "|java+method:///org/sonar/api/batch/scm/BlameLine/revision(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|",
      "|java+method:///org/sonar/api/batch/scm/BlameLine/author(java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///java/io/File/getName()|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/api/batch/scm/BlameLine/date(java.util.Date)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/batch/fs/InputFile/file()|",
      "|java+method:///org/sonar/api/utils/DateUtils/parseDate(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+constructor:///org/sonar/api/batch/scm/BlameLine/BlameLine()|",
      "|java+method:///org/apache/commons/lang/StringUtils/splitPreserveAllTokens(java.lang.String,char)|",
      "|java+method:///org/sonar/api/batch/scm/BlameCommand$BlameOutput/blameResult(org.sonar.api.batch.fs.InputFile,java.util.List)|",
      "|java+method:///org/apache/commons/lang/StringUtils/trimToNull(java.lang.String)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.nio.charset.Charset)|",
      "|java+method:///org/sonar/api/batch/scm/BlameLine/revision(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|",
      "|java+method:///org/sonar/api/batch/scm/BlameLine/author(java.lang.String)|"
    ],
    "affectedLib": "org.apache.commons:commons-lang3:3.3.2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.4",
    "caller": "|java+method:///org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)|",
    "called": "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
    "v1Body": [
      "|java+method:///java/io/File/getName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/sensor/coverage/NewCoverage/lineHits(int,int)|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///org/sonar/api/batch/sensor/coverage/NewCoverage/save()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/on(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/fs/InputFile/file()|",
      "|java+method:///org/sonar/xoo/coverage/AbstractCoverageSensor/getCoverageType()|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/split(java.lang.CharSequence)|",
      "|java+method:///org/sonar/api/batch/sensor/coverage/NewCoverage/conditions(int,int,int)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/sonar/api/batch/sensor/coverage/NewCoverage/onFile(org.sonar.api.batch.fs.InputFile)|",
      "|java+method:///org/sonar/xoo/coverage/AbstractCoverageSensor/getCoverageExtension()|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/encoding()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/api/batch/sensor/coverage/NewCoverage/ofType(org.sonar.api.batch.sensor.coverage.CoverageType)|",
      "|java+method:///org/sonar/api/batch/sensor/SensorContext/newCoverage()|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///org/sonar/api/batch/sensor/SensorContext/fileSystem()|",
      "|java+method:///java/nio/charset/Charset/name()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/io/File/getName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/sensor/coverage/NewCoverage/lineHits(int,int)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///org/sonar/api/batch/sensor/coverage/NewCoverage/save()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/on(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/fs/InputFile/file()|",
      "|java+method:///org/sonar/xoo/coverage/AbstractCoverageSensor/getCoverageType()|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/split(java.lang.CharSequence)|",
      "|java+method:///org/sonar/api/batch/sensor/coverage/NewCoverage/conditions(int,int,int)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/sonar/api/batch/sensor/coverage/NewCoverage/onFile(org.sonar.api.batch.fs.InputFile)|",
      "|java+method:///org/sonar/xoo/coverage/AbstractCoverageSensor/getCoverageExtension()|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/encoding()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/api/batch/sensor/coverage/NewCoverage/ofType(org.sonar.api.batch.sensor.coverage.CoverageType)|",
      "|java+method:///org/sonar/api/batch/sensor/SensorContext/newCoverage()|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///org/sonar/api/batch/sensor/SensorContext/fileSystem()|",
      "|java+method:///java/nio/charset/Charset/name()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|"
    ],
    "affectedLib": "org.apache.commons:commons-lang3:3.3.2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.4",
    "caller": "|java+method:///org/sonar/xoo/lang/SymbolReferencesSensor/processFileSymbol(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)|",
    "called": "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///org/sonar/api/batch/fs/InputFile/file()|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
      "|java+method:///java/io/File/getName()|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/api/component/ResourcePerspectives/as(java.lang.Class,org.sonar.api.batch.fs.InputPath)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)|",
      "|java+method:///java/io/File/exists()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/api/source/Symbolizable$SymbolTableBuilder/build()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///org/sonar/xoo/lang/SymbolReferencesSensor/processLine(java.io.File,int,org.sonar.api.source.Symbolizable$SymbolTableBuilder,java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/source/Symbolizable/newSymbolTableBuilder()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/encoding()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/source/Symbolizable/setSymbolTable(org.sonar.api.source.Symbolizable$SymbolTable)|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///org/sonar/api/batch/sensor/SensorContext/fileSystem()|",
      "|java+method:///java/nio/charset/Charset/name()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///org/sonar/api/batch/fs/InputFile/file()|",
      "|java+method:///java/io/File/getName()|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/api/component/ResourcePerspectives/as(java.lang.Class,org.sonar.api.batch.fs.InputPath)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/File/exists()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/api/source/Symbolizable$SymbolTableBuilder/build()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///org/sonar/xoo/lang/SymbolReferencesSensor/processLine(java.io.File,int,org.sonar.api.source.Symbolizable$SymbolTableBuilder,java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/source/Symbolizable/newSymbolTableBuilder()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/encoding()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/source/Symbolizable/setSymbolTable(org.sonar.api.source.Symbolizable$SymbolTable)|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///org/sonar/api/batch/sensor/SensorContext/fileSystem()|",
      "|java+method:///java/nio/charset/Charset/name()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|"
    ],
    "affectedLib": "org.apache.commons:commons-lang3:3.3.2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.4",
    "caller": "|java+method:///org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)|",
    "called": "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
    "v1Body": [
      "|java+method:///org/sonar/api/batch/fs/InputFile/file()|",
      "|java+method:///java/io/File/getName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///org/sonar/api/test/TestCase$Status/valueOf(java.lang.String)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isNotBlank(java.lang.CharSequence)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/on(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setStackTrace(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/google/common/base/Splitter/split(java.lang.CharSequence)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+method:///org/sonar/api/component/ResourcePerspectives/as(java.lang.Class,org.sonar.api.batch.fs.InputPath)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/encoding()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setDurationInMs(java.lang.Long)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setMessage(java.lang.String)|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///java/nio/charset/Charset/name()|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setStatus(org.sonar.api.test.TestCase$Status)|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setType(java.lang.String)|",
      "|java+method:///org/sonar/api/test/MutableTestPlan/addTestCase(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/batch/fs/InputFile/file()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/io/File/getName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///org/sonar/api/test/TestCase$Status/valueOf(java.lang.String)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/on(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setStackTrace(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/split(java.lang.CharSequence)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+method:///org/sonar/api/component/ResourcePerspectives/as(java.lang.Class,org.sonar.api.batch.fs.InputPath)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/encoding()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setDurationInMs(java.lang.Long)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setMessage(java.lang.String)|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///java/nio/charset/Charset/name()|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setStatus(org.sonar.api.test.TestCase$Status)|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setType(java.lang.String)|",
      "|java+method:///org/sonar/api/test/MutableTestPlan/addTestCase(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|"
    ],
    "affectedLib": "org.apache.commons:commons-lang3:3.3.2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.4",
    "caller": "|java+method:///org/sonar/xoo/lang/MeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)|",
    "called": "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///org/sonar/api/batch/fs/InputFile/file()|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
      "|java+method:///java/io/File/getName()|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)|",
      "|java+method:///java/io/File/exists()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/encoding()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///org/sonar/api/batch/sensor/SensorContext/fileSystem()|",
      "|java+method:///java/nio/charset/Charset/name()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|",
      "|java+method:///org/sonar/xoo/lang/MeasureSensor/processMeasure(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.io.File,int,java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///org/sonar/api/batch/fs/InputFile/file()|",
      "|java+method:///java/io/File/getName()|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/File/exists()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/encoding()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///org/sonar/api/batch/sensor/SensorContext/fileSystem()|",
      "|java+method:///java/nio/charset/Charset/name()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|",
      "|java+method:///org/sonar/xoo/lang/MeasureSensor/processMeasure(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.io.File,int,java.lang.String)|"
    ],
    "affectedLib": "org.apache.commons:commons-lang3:3.3.2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.4",
    "caller": "|java+method:///org/sonar/xoo/lang/SyntaxHighlightingSensor/processFileHighlighting(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)|",
    "called": "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///org/sonar/api/batch/sensor/highlighting/NewHighlighting/onFile(org.sonar.api.batch.fs.InputFile)|",
      "|java+method:///org/sonar/api/batch/fs/InputFile/file()|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
      "|java+method:///java/io/File/getName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)|",
      "|java+method:///java/io/File/exists()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/sensor/SensorContext/newHighlighting()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///org/sonar/api/batch/sensor/highlighting/NewHighlighting/save()|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/encoding()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///org/sonar/api/batch/sensor/SensorContext/fileSystem()|",
      "|java+method:///java/nio/charset/Charset/name()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/xoo/lang/SyntaxHighlightingSensor/processLine(java.io.File,int,org.sonar.api.batch.sensor.highlighting.NewHighlighting,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///org/sonar/api/batch/sensor/highlighting/NewHighlighting/onFile(org.sonar.api.batch.fs.InputFile)|",
      "|java+method:///org/sonar/api/batch/fs/InputFile/file()|",
      "|java+method:///java/io/File/getName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/File/exists()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/sensor/SensorContext/newHighlighting()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///org/sonar/api/batch/sensor/highlighting/NewHighlighting/save()|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/encoding()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///org/sonar/api/batch/sensor/SensorContext/fileSystem()|",
      "|java+method:///java/nio/charset/Charset/name()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/xoo/lang/SyntaxHighlightingSensor/processLine(java.io.File,int,org.sonar.api.batch.sensor.highlighting.NewHighlighting,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|"
    ],
    "affectedLib": "org.apache.commons:commons-lang3:3.3.2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.4",
    "caller": "|java+method:///org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)|",
    "called": "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
    "v1Body": [
      "|java+method:///org/sonar/api/batch/fs/FilePredicates/hasPath(java.lang.String)|",
      "|java+method:///java/io/File/getName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/api/component/ResourcePerspectives/as(java.lang.Class,org.sonar.api.batch.fs.InputPath)|",
      "|java+method:///org/sonar/api/test/MutableTestPlan/testCasesByName(java.lang.String)|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setCoverageBlock(org.sonar.api.test.Testable,java.util.List)|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/predicates()|",
      "|java+method:///com/google/common/base/Splitter/on(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/fs/InputFile/file()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/split(java.lang.CharSequence)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/inputFile(org.sonar.api.batch.fs.FilePredicate)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/encoding()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///org/sonar/api/batch/sensor/SensorContext/fileSystem()|",
      "|java+method:///java/nio/charset/Charset/name()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/batch/fs/FilePredicates/hasPath(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/io/File/getName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/api/component/ResourcePerspectives/as(java.lang.Class,org.sonar.api.batch.fs.InputPath)|",
      "|java+method:///org/sonar/api/test/MutableTestPlan/testCasesByName(java.lang.String)|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setCoverageBlock(org.sonar.api.test.Testable,java.util.List)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/predicates()|",
      "|java+method:///com/google/common/base/Splitter/on(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/fs/InputFile/file()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/split(java.lang.CharSequence)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/inputFile(org.sonar.api.batch.fs.FilePredicate)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/encoding()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///org/sonar/api/batch/sensor/SensorContext/fileSystem()|",
      "|java+method:///java/nio/charset/Charset/name()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|"
    ],
    "affectedLib": "org.apache.commons:commons-lang3:3.3.2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.5-RC1",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.4",
    "caller": "|java+method:///org/sonar/xoo/lang/MeasureSensor/processMeasure(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.io.File,int,java.lang.String)|",
    "called": "|java+method:///org/apache/commons/lang3/StringUtils/substringBefore(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/sonar/xoo/lang/MeasureSensor/saveMeasure(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputFile,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/substringBefore(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///java/lang/String/length()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/lang/StringUtils/substringBefore(java.lang.String,java.lang.String)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/sonar/xoo/lang/MeasureSensor/saveMeasure(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputFile,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///java/lang/String/length()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "affectedLib": "org.apache.commons:commons-lang3:3.3.2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.5-RC1",
    "caller": "|java+method:///org/sonar/xoo/scm/XooBlameCommand/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.scm.BlameCommand$BlameOutput)|",
    "called": "|java+method:///org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///java/io/File/getName()|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/sonar/api/batch/scm/BlameLine/BlameLine()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/sonar/api/batch/scm/BlameCommand$BlameOutput/blameResult(org.sonar.api.batch.fs.InputFile,java.util.List)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/commons/lang3/StringUtils/trimToNull(java.lang.String)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isNotBlank(java.lang.CharSequence)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/api/batch/scm/BlameLine/date(java.util.Date)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/batch/fs/InputFile/file()|",
      "|java+method:///org/sonar/api/utils/DateUtils/parseDate(java.lang.String)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/splitPreserveAllTokens(java.lang.String,char)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.nio.charset.Charset)|",
      "|java+method:///org/sonar/api/batch/scm/BlameLine/revision(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|",
      "|java+method:///org/sonar/api/batch/scm/BlameLine/author(java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///java/io/File/getName()|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/api/batch/scm/BlameLine/date(java.util.Date)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/batch/fs/InputFile/file()|",
      "|java+method:///org/sonar/api/utils/DateUtils/parseDate(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+constructor:///org/sonar/api/batch/scm/BlameLine/BlameLine()|",
      "|java+method:///org/apache/commons/lang/StringUtils/splitPreserveAllTokens(java.lang.String,char)|",
      "|java+method:///org/sonar/api/batch/scm/BlameCommand$BlameOutput/blameResult(org.sonar.api.batch.fs.InputFile,java.util.List)|",
      "|java+method:///org/apache/commons/lang/StringUtils/trimToNull(java.lang.String)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.nio.charset.Charset)|",
      "|java+method:///org/sonar/api/batch/scm/BlameLine/revision(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|",
      "|java+method:///org/sonar/api/batch/scm/BlameLine/author(java.lang.String)|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.5-RC1",
    "caller": "|java+method:///org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)|",
    "called": "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/io/File/getName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/sensor/coverage/NewCoverage/lineHits(int,int)|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///org/sonar/api/batch/sensor/coverage/NewCoverage/save()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/on(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/fs/InputFile/file()|",
      "|java+method:///org/sonar/xoo/coverage/AbstractCoverageSensor/getCoverageType()|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/split(java.lang.CharSequence)|",
      "|java+method:///org/sonar/api/batch/sensor/coverage/NewCoverage/conditions(int,int,int)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/sonar/api/batch/sensor/coverage/NewCoverage/onFile(org.sonar.api.batch.fs.InputFile)|",
      "|java+method:///org/sonar/xoo/coverage/AbstractCoverageSensor/getCoverageExtension()|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/encoding()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/api/batch/sensor/coverage/NewCoverage/ofType(org.sonar.api.batch.sensor.coverage.CoverageType)|",
      "|java+method:///org/sonar/api/batch/sensor/SensorContext/newCoverage()|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///org/sonar/api/batch/sensor/SensorContext/fileSystem()|",
      "|java+method:///java/nio/charset/Charset/name()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/io/File/getName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/sensor/coverage/NewCoverage/lineHits(int,int)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///org/sonar/api/batch/sensor/coverage/NewCoverage/save()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/on(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/fs/InputFile/file()|",
      "|java+method:///org/sonar/xoo/coverage/AbstractCoverageSensor/getCoverageType()|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/split(java.lang.CharSequence)|",
      "|java+method:///org/sonar/api/batch/sensor/coverage/NewCoverage/conditions(int,int,int)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/sonar/api/batch/sensor/coverage/NewCoverage/onFile(org.sonar.api.batch.fs.InputFile)|",
      "|java+method:///org/sonar/xoo/coverage/AbstractCoverageSensor/getCoverageExtension()|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/encoding()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/api/batch/sensor/coverage/NewCoverage/ofType(org.sonar.api.batch.sensor.coverage.CoverageType)|",
      "|java+method:///org/sonar/api/batch/sensor/SensorContext/newCoverage()|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///org/sonar/api/batch/sensor/SensorContext/fileSystem()|",
      "|java+method:///java/nio/charset/Charset/name()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.5-RC1",
    "caller": "|java+method:///org/sonar/xoo/lang/SymbolReferencesSensor/processFileSymbol(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)|",
    "called": "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///org/sonar/api/batch/fs/InputFile/file()|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
      "|java+method:///java/io/File/getName()|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/api/component/ResourcePerspectives/as(java.lang.Class,org.sonar.api.batch.fs.InputPath)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)|",
      "|java+method:///java/io/File/exists()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/api/source/Symbolizable$SymbolTableBuilder/build()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///org/sonar/xoo/lang/SymbolReferencesSensor/processLine(java.io.File,int,org.sonar.api.source.Symbolizable$SymbolTableBuilder,java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/source/Symbolizable/newSymbolTableBuilder()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/encoding()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/source/Symbolizable/setSymbolTable(org.sonar.api.source.Symbolizable$SymbolTable)|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///org/sonar/api/batch/sensor/SensorContext/fileSystem()|",
      "|java+method:///java/nio/charset/Charset/name()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///org/sonar/api/batch/fs/InputFile/file()|",
      "|java+method:///java/io/File/getName()|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/api/component/ResourcePerspectives/as(java.lang.Class,org.sonar.api.batch.fs.InputPath)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/File/exists()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/api/source/Symbolizable$SymbolTableBuilder/build()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///org/sonar/xoo/lang/SymbolReferencesSensor/processLine(java.io.File,int,org.sonar.api.source.Symbolizable$SymbolTableBuilder,java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/source/Symbolizable/newSymbolTableBuilder()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/encoding()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/source/Symbolizable/setSymbolTable(org.sonar.api.source.Symbolizable$SymbolTable)|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///org/sonar/api/batch/sensor/SensorContext/fileSystem()|",
      "|java+method:///java/nio/charset/Charset/name()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.5-RC1",
    "caller": "|java+method:///org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)|",
    "called": "|java+method:///org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/api/batch/fs/InputFile/file()|",
      "|java+method:///java/io/File/getName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///org/sonar/api/test/TestCase$Status/valueOf(java.lang.String)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isNotBlank(java.lang.CharSequence)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/on(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setStackTrace(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/google/common/base/Splitter/split(java.lang.CharSequence)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+method:///org/sonar/api/component/ResourcePerspectives/as(java.lang.Class,org.sonar.api.batch.fs.InputPath)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/encoding()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setDurationInMs(java.lang.Long)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setMessage(java.lang.String)|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///java/nio/charset/Charset/name()|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setStatus(org.sonar.api.test.TestCase$Status)|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setType(java.lang.String)|",
      "|java+method:///org/sonar/api/test/MutableTestPlan/addTestCase(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/batch/fs/InputFile/file()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/io/File/getName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///org/sonar/api/test/TestCase$Status/valueOf(java.lang.String)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/on(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setStackTrace(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/split(java.lang.CharSequence)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+method:///org/sonar/api/component/ResourcePerspectives/as(java.lang.Class,org.sonar.api.batch.fs.InputPath)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/encoding()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setDurationInMs(java.lang.Long)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setMessage(java.lang.String)|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///java/nio/charset/Charset/name()|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setStatus(org.sonar.api.test.TestCase$Status)|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setType(java.lang.String)|",
      "|java+method:///org/sonar/api/test/MutableTestPlan/addTestCase(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.5-RC1",
    "caller": "|java+method:///org/sonar/xoo/lang/MeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)|",
    "called": "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///org/sonar/api/batch/fs/InputFile/file()|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
      "|java+method:///java/io/File/getName()|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)|",
      "|java+method:///java/io/File/exists()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/encoding()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///org/sonar/api/batch/sensor/SensorContext/fileSystem()|",
      "|java+method:///java/nio/charset/Charset/name()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|",
      "|java+method:///org/sonar/xoo/lang/MeasureSensor/processMeasure(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.io.File,int,java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///org/sonar/api/batch/fs/InputFile/file()|",
      "|java+method:///java/io/File/getName()|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/File/exists()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/encoding()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///org/sonar/api/batch/sensor/SensorContext/fileSystem()|",
      "|java+method:///java/nio/charset/Charset/name()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|",
      "|java+method:///org/sonar/xoo/lang/MeasureSensor/processMeasure(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.io.File,int,java.lang.String)|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.5-RC1",
    "caller": "|java+method:///org/sonar/xoo/lang/SyntaxHighlightingSensor/processFileHighlighting(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)|",
    "called": "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///org/sonar/api/batch/sensor/highlighting/NewHighlighting/onFile(org.sonar.api.batch.fs.InputFile)|",
      "|java+method:///org/sonar/api/batch/fs/InputFile/file()|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
      "|java+method:///java/io/File/getName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)|",
      "|java+method:///java/io/File/exists()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/sensor/SensorContext/newHighlighting()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///org/sonar/api/batch/sensor/highlighting/NewHighlighting/save()|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/encoding()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///org/sonar/api/batch/sensor/SensorContext/fileSystem()|",
      "|java+method:///java/nio/charset/Charset/name()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/xoo/lang/SyntaxHighlightingSensor/processLine(java.io.File,int,org.sonar.api.batch.sensor.highlighting.NewHighlighting,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///org/sonar/api/batch/sensor/highlighting/NewHighlighting/onFile(org.sonar.api.batch.fs.InputFile)|",
      "|java+method:///org/sonar/api/batch/fs/InputFile/file()|",
      "|java+method:///java/io/File/getName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/File/exists()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/sensor/SensorContext/newHighlighting()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///org/sonar/api/batch/sensor/highlighting/NewHighlighting/save()|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/encoding()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///org/sonar/api/batch/sensor/SensorContext/fileSystem()|",
      "|java+method:///java/nio/charset/Charset/name()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/xoo/lang/SyntaxHighlightingSensor/processLine(java.io.File,int,org.sonar.api.batch.sensor.highlighting.NewHighlighting,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.5-RC1",
    "caller": "|java+method:///org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)|",
    "called": "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/api/batch/fs/FilePredicates/hasPath(java.lang.String)|",
      "|java+method:///java/io/File/getName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/api/component/ResourcePerspectives/as(java.lang.Class,org.sonar.api.batch.fs.InputPath)|",
      "|java+method:///org/sonar/api/test/MutableTestPlan/testCasesByName(java.lang.String)|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setCoverageBlock(org.sonar.api.test.Testable,java.util.List)|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/predicates()|",
      "|java+method:///com/google/common/base/Splitter/on(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/fs/InputFile/file()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/split(java.lang.CharSequence)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/inputFile(org.sonar.api.batch.fs.FilePredicate)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/encoding()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///org/sonar/api/batch/sensor/SensorContext/fileSystem()|",
      "|java+method:///java/nio/charset/Charset/name()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/batch/fs/FilePredicates/hasPath(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/io/File/getName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/api/component/ResourcePerspectives/as(java.lang.Class,org.sonar.api.batch.fs.InputPath)|",
      "|java+method:///org/sonar/api/test/MutableTestPlan/testCasesByName(java.lang.String)|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setCoverageBlock(org.sonar.api.test.Testable,java.util.List)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/predicates()|",
      "|java+method:///com/google/common/base/Splitter/on(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/fs/InputFile/file()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/split(java.lang.CharSequence)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/inputFile(org.sonar.api.batch.fs.FilePredicate)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/encoding()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///org/sonar/api/batch/sensor/SensorContext/fileSystem()|",
      "|java+method:///java/nio/charset/Charset/name()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.5-RC1",
    "caller": "|java+method:///org/sonar/xoo/lang/MeasureSensor/processMeasure(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.io.File,int,java.lang.String)|",
    "called": "|java+method:///org/apache/commons/lang/StringUtils/substringBefore(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/sonar/xoo/lang/MeasureSensor/saveMeasure(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputFile,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/substringBefore(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///java/lang/String/length()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/lang/StringUtils/substringBefore(java.lang.String,java.lang.String)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/sonar/xoo/lang/MeasureSensor/saveMeasure(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputFile,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///java/lang/String/length()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.5-RC1",
    "caller": "|java+method:///org/sonar/xoo/lang/XooTokenizer/tokenize(net.sourceforge.pmd.cpd.SourceCode,net.sourceforge.pmd.cpd.Tokens)|",
    "called": "|java+method:///com/google/common/base/Splitter/on(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///net/sourceforge/pmd/cpd/TokenEntry/TokenEntry(java.lang.String,java.lang.String,int)|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.nio.charset.Charset)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///com/google/common/base/Splitter/on(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///net/sourceforge/pmd/cpd/TokenEntry/getEOF()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///net/sourceforge/pmd/cpd/SourceCode/getFileName()|",
      "|java+method:///com/google/common/base/Splitter/split(java.lang.CharSequence)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/encoding()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///net/sourceforge/pmd/cpd/Tokens/add(net.sourceforge.pmd.cpd.TokenEntry)|",
      "|java+constructor:///java/io/File/File(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///net/sourceforge/pmd/cpd/TokenEntry/TokenEntry(java.lang.String,java.lang.String,int)|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.nio.charset.Charset)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///org/sonar/api/utils/log/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///com/google/common/base/Splitter/on(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///net/sourceforge/pmd/cpd/TokenEntry/getEOF()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///net/sourceforge/pmd/cpd/SourceCode/getFileName()|",
      "|java+method:///com/google/common/base/Splitter/split(java.lang.CharSequence)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/encoding()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///net/sourceforge/pmd/cpd/Tokens/add(net.sourceforge.pmd.cpd.TokenEntry)|",
      "|java+constructor:///java/io/File/File(java.lang.String)|"
    ],
    "affectedLib": "com.google.guava:guava:17.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.5-RC1",
    "caller": "|java+method:///org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)|",
    "called": "|java+method:///com/google/common/base/Splitter/on(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/io/File/getName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/sensor/coverage/NewCoverage/lineHits(int,int)|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///org/sonar/api/batch/sensor/coverage/NewCoverage/save()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/on(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/fs/InputFile/file()|",
      "|java+method:///org/sonar/xoo/coverage/AbstractCoverageSensor/getCoverageType()|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/split(java.lang.CharSequence)|",
      "|java+method:///org/sonar/api/batch/sensor/coverage/NewCoverage/conditions(int,int,int)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/sonar/api/batch/sensor/coverage/NewCoverage/onFile(org.sonar.api.batch.fs.InputFile)|",
      "|java+method:///org/sonar/xoo/coverage/AbstractCoverageSensor/getCoverageExtension()|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/encoding()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/api/batch/sensor/coverage/NewCoverage/ofType(org.sonar.api.batch.sensor.coverage.CoverageType)|",
      "|java+method:///org/sonar/api/batch/sensor/SensorContext/newCoverage()|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///org/sonar/api/batch/sensor/SensorContext/fileSystem()|",
      "|java+method:///java/nio/charset/Charset/name()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/io/File/getName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/sensor/coverage/NewCoverage/lineHits(int,int)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///org/sonar/api/batch/sensor/coverage/NewCoverage/save()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/on(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/fs/InputFile/file()|",
      "|java+method:///org/sonar/xoo/coverage/AbstractCoverageSensor/getCoverageType()|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/split(java.lang.CharSequence)|",
      "|java+method:///org/sonar/api/batch/sensor/coverage/NewCoverage/conditions(int,int,int)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/sonar/api/batch/sensor/coverage/NewCoverage/onFile(org.sonar.api.batch.fs.InputFile)|",
      "|java+method:///org/sonar/xoo/coverage/AbstractCoverageSensor/getCoverageExtension()|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/encoding()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/api/batch/sensor/coverage/NewCoverage/ofType(org.sonar.api.batch.sensor.coverage.CoverageType)|",
      "|java+method:///org/sonar/api/batch/sensor/SensorContext/newCoverage()|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///org/sonar/api/batch/sensor/SensorContext/fileSystem()|",
      "|java+method:///java/nio/charset/Charset/name()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|"
    ],
    "affectedLib": "com.google.guava:guava:17.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.5-RC1",
    "caller": "|java+method:///org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)|",
    "called": "|java+method:///com/google/common/base/Splitter/on(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/api/batch/fs/InputFile/file()|",
      "|java+method:///java/io/File/getName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///org/sonar/api/test/TestCase$Status/valueOf(java.lang.String)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isNotBlank(java.lang.CharSequence)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/on(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setStackTrace(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/google/common/base/Splitter/split(java.lang.CharSequence)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+method:///org/sonar/api/component/ResourcePerspectives/as(java.lang.Class,org.sonar.api.batch.fs.InputPath)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/encoding()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setDurationInMs(java.lang.Long)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setMessage(java.lang.String)|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///java/nio/charset/Charset/name()|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setStatus(org.sonar.api.test.TestCase$Status)|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setType(java.lang.String)|",
      "|java+method:///org/sonar/api/test/MutableTestPlan/addTestCase(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/batch/fs/InputFile/file()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/io/File/getName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///org/sonar/api/test/TestCase$Status/valueOf(java.lang.String)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/on(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setStackTrace(java.lang.String)|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/split(java.lang.CharSequence)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+method:///org/sonar/api/component/ResourcePerspectives/as(java.lang.Class,org.sonar.api.batch.fs.InputPath)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/encoding()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setDurationInMs(java.lang.Long)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setMessage(java.lang.String)|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///java/nio/charset/Charset/name()|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setStatus(org.sonar.api.test.TestCase$Status)|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setType(java.lang.String)|",
      "|java+method:///org/sonar/api/test/MutableTestPlan/addTestCase(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|"
    ],
    "affectedLib": "com.google.guava:guava:17.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.4",
    "coordinatesV2": "org.sonarsource.sonarqube:sonar-xoo-plugin:5.5-RC1",
    "caller": "|java+method:///org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)|",
    "called": "|java+method:///com/google/common/base/Splitter/on(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/sonar/api/batch/fs/FilePredicates/hasPath(java.lang.String)|",
      "|java+method:///java/io/File/getName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/api/component/ResourcePerspectives/as(java.lang.Class,org.sonar.api.batch.fs.InputPath)|",
      "|java+method:///org/sonar/api/test/MutableTestPlan/testCasesByName(java.lang.String)|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setCoverageBlock(org.sonar.api.test.Testable,java.util.List)|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/predicates()|",
      "|java+method:///com/google/common/base/Splitter/on(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/fs/InputFile/file()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/split(java.lang.CharSequence)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/inputFile(org.sonar.api.batch.fs.FilePredicate)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/encoding()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///org/sonar/api/batch/sensor/SensorContext/fileSystem()|",
      "|java+method:///java/nio/charset/Charset/name()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|"
    ],
    "v2Body": [
      "|java+method:///org/sonar/api/batch/fs/FilePredicates/hasPath(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/io/File/getName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/sonar/api/component/ResourcePerspectives/as(java.lang.Class,org.sonar.api.batch.fs.InputPath)|",
      "|java+method:///org/sonar/api/test/MutableTestPlan/testCasesByName(java.lang.String)|",
      "|java+method:///org/sonar/api/test/MutableTestCase/setCoverageBlock(org.sonar.api.test.Testable,java.util.List)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/predicates()|",
      "|java+method:///com/google/common/base/Splitter/on(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/sonar/api/utils/log/Logger/debug(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/fs/InputFile/file()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///com/google/common/base/Splitter/split(java.lang.CharSequence)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/inputFile(org.sonar.api.batch.fs.FilePredicate)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///org/sonar/api/batch/fs/FileSystem/encoding()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///org/sonar/api/batch/sensor/SensorContext/fileSystem()|",
      "|java+method:///java/nio/charset/Charset/name()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/io/File/getParentFile()|"
    ],
    "affectedLib": "com.google.guava:guava:17.0",
    "change": "UPDATED"
  }
]