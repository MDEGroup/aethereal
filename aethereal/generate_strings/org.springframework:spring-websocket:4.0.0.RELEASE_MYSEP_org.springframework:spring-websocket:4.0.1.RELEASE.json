[
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.0.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.0.1.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/server/standard/TomcatRequestUpgradeStrategy/upgradeInternal(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,java.lang.String,java.util.List,javax.websocket.Endpoint)|",
    "called": "|java+method:///org/apache/tomcat/websocket/server/WsServerContainer/doUpgrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.websocket.server.ServerEndpointConfig,java.util.Map)|",
    "v1Body": [
      "|java+method:///java/util/Collections/emptyMap()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/springframework/web/socket/server/HandshakeFailureException/HandshakeFailureException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/tomcat/websocket/server/WsServerContainer/doUpgrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.websocket.server.ServerEndpointConfig,java.util.Map)|",
      "|java+method:///org/springframework/http/server/ServletServerHttpRequest/getServletRequest()|",
      "|java+method:///javax/servlet/http/HttpServletRequest/getRequestURL()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/server/standard/ServerEndpointRegistration/setSubprotocols(java.util.List)|",
      "|java+method:///org/springframework/web/socket/server/standard/TomcatRequestUpgradeStrategy/getContainer(javax.servlet.http.HttpServletRequest)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/springframework/web/socket/server/standard/ServerEndpointRegistration/ServerEndpointRegistration(java.lang.String,javax.websocket.Endpoint)|",
      "|java+method:///org/springframework/util/Assert/isTrue(boolean)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/web/socket/server/standard/ServerEndpointRegistration/setExtensions(java.util.List)|",
      "|java+method:///javax/servlet/http/HttpServletRequest/getRequestURI()|",
      "|java+method:///org/springframework/http/server/ServletServerHttpResponse/getServletResponse()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Collections/emptyMap()|",
      "|java+constructor:///org/springframework/web/socket/server/standard/ServerEndpointRegistration/ServerEndpointRegistration(java.lang.String,javax.websocket.Endpoint)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/springframework/web/socket/server/HandshakeFailureException/HandshakeFailureException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///javax/servlet/http/HttpServletRequest/getRequestURI()|",
      "|java+method:///javax/servlet/http/HttpServletRequest/getRequestURL()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/server/standard/ServerEndpointRegistration/setSubprotocols(java.util.List)|",
      "|java+method:///org/springframework/web/socket/server/standard/TomcatRequestUpgradeStrategy/getContainer(javax.servlet.http.HttpServletRequest)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/web/socket/server/standard/ServerEndpointRegistration/setExtensions(java.util.List)|",
      "|java+method:///org/springframework/web/socket/server/standard/TomcatRequestUpgradeStrategy/getHttpServletRequest(org.springframework.http.server.ServerHttpRequest)|",
      "|java+method:///org/apache/tomcat/websocket/server/WsServerContainer/doUpgrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.websocket.server.ServerEndpointConfig,java.util.Map)|",
      "|java+method:///org/springframework/web/socket/server/standard/TomcatRequestUpgradeStrategy/getHttpServletResponse(org.springframework.http.server.ServerHttpResponse)|"
    ],
    "affectedLib": "org.apache.tomcat:tomcat-websocket:8.0.0-RC10",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.0.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.0.1.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/client/jetty/JettyWebSocketClient/doHandshakeInternal(org.springframework.web.socket.WebSocketHandler,org.springframework.http.HttpHeaders,java.net.URI,java.util.List,java.util.List,java.util.Map)|",
    "called": "|java+constructor:///org/eclipse/jetty/websocket/client/ClientUpgradeRequest/ClientUpgradeRequest()|",
    "v1Body": [
      "|java+method:///org/eclipse/jetty/websocket/client/ClientUpgradeRequest/setSubProtocols(java.util.List)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/core/task/AsyncListenableTaskExecutor/submitListenable(java.util.concurrent.Callable)|",
      "|java+method:///org/eclipse/jetty/websocket/client/ClientUpgradeRequest/setHeader(java.lang.String,java.util.List)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/eclipse/jetty/websocket/client/ClientUpgradeRequest/addExtensions(org.eclipse.jetty.websocket.api.extensions.ExtensionConfig%5B%5D)|",
      "|java+constructor:///org/springframework/web/socket/adapter/jetty/JettyWebSocketHandlerAdapter/JettyWebSocketHandlerAdapter(org.springframework.web.socket.WebSocketHandler,org.springframework.web.socket.adapter.jetty.JettyWebSocketSession)|",
      "|java+constructor:///org/eclipse/jetty/websocket/client/ClientUpgradeRequest/ClientUpgradeRequest()|",
      "|java+method:///org/springframework/web/socket/client/jetty/JettyWebSocketClient/getUser()|",
      "|java+method:///org/springframework/http/HttpHeaders/get(java.lang.Object)|",
      "|java+method:///org/springframework/http/HttpHeaders/keySet()|",
      "|java+constructor:///org/springframework/web/socket/client/jetty/JettyWebSocketClient$1/JettyWebSocketClient$1(org.springframework.web.socket.client.jetty.JettyWebSocketClient,org.springframework.web.socket.adapter.jetty.JettyWebSocketHandlerAdapter,java.net.URI,org.eclipse.jetty.websocket.client.ClientUpgradeRequest,org.springframework.web.socket.adapter.jetty.JettyWebSocketSession)|",
      "|java+constructor:///org/springframework/web/socket/adapter/jetty/JettyWebSocketSession/JettyWebSocketSession(java.security.Principal,java.util.Map)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///org/springframework/web/socket/adapter/jetty/WebSocketToJettyExtensionConfigAdapter/WebSocketToJettyExtensionConfigAdapter(org.springframework.web.socket.WebSocketExtension)|"
    ],
    "v2Body": [
      "|java+method:///org/eclipse/jetty/websocket/client/ClientUpgradeRequest/setSubProtocols(java.util.List)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/core/task/AsyncListenableTaskExecutor/submitListenable(java.util.concurrent.Callable)|",
      "|java+method:///org/eclipse/jetty/websocket/client/ClientUpgradeRequest/setHeader(java.lang.String,java.util.List)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/eclipse/jetty/websocket/client/ClientUpgradeRequest/addExtensions(org.eclipse.jetty.websocket.api.extensions.ExtensionConfig%5B%5D)|",
      "|java+constructor:///org/springframework/web/socket/adapter/jetty/JettyWebSocketHandlerAdapter/JettyWebSocketHandlerAdapter(org.springframework.web.socket.WebSocketHandler,org.springframework.web.socket.adapter.jetty.JettyWebSocketSession)|",
      "|java+constructor:///org/eclipse/jetty/websocket/client/ClientUpgradeRequest/ClientUpgradeRequest()|",
      "|java+method:///org/springframework/web/socket/client/jetty/JettyWebSocketClient/getUser()|",
      "|java+method:///org/springframework/http/HttpHeaders/get(java.lang.Object)|",
      "|java+method:///org/springframework/http/HttpHeaders/keySet()|",
      "|java+constructor:///org/springframework/web/socket/client/jetty/JettyWebSocketClient$1/JettyWebSocketClient$1(org.springframework.web.socket.client.jetty.JettyWebSocketClient,org.springframework.web.socket.adapter.jetty.JettyWebSocketHandlerAdapter,java.net.URI,org.eclipse.jetty.websocket.client.ClientUpgradeRequest,org.springframework.web.socket.adapter.jetty.JettyWebSocketSession)|",
      "|java+constructor:///org/springframework/web/socket/adapter/jetty/JettyWebSocketSession/JettyWebSocketSession(java.util.Map,java.security.Principal)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///org/springframework/web/socket/adapter/jetty/WebSocketToJettyExtensionConfigAdapter/WebSocketToJettyExtensionConfigAdapter(org.springframework.web.socket.WebSocketExtension)|"
    ],
    "affectedLib": "org.eclipse.jetty.websocket:websocket-client:9.1.1.v20140108",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.0.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.0.1.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/doHandshake(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,org.springframework.web.socket.WebSocketHandler,java.util.Map)|",
    "called": "|java+method:///org/springframework/http/HttpHeaders/setAllow(java.util.Set)|",
    "v1Body": [
      "|java+method:///org/springframework/http/server/ServerHttpResponse/getHeaders()|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getHeaders()|",
      "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/handleInvalidConnectHeader(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse)|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/setStatusCode(org.springframework.http.HttpStatus)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/web/socket/server/RequestUpgradeStrategy/getSupportedExtensions(org.springframework.http.server.ServerHttpRequest)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/getSecWebSocketKey()|",
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/getConnection()|",
      "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/handleWebSocketVersionNotSupported(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse)|",
      "|java+method:///org/springframework/http/HttpHeaders/setAllow(java.util.Set)|",
      "|java+constructor:///org/springframework/web/socket/server/HandshakeFailureException/HandshakeFailureException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/getSecWebSocketExtensions()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/getUpgrade()|",
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/getSecWebSocketProtocol()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getURI()|",
      "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/isValidOrigin(org.springframework.http.server.ServerHttpRequest)|",
      "|java+method:///org/springframework/http/HttpMethod/equals(java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/selectProtocol(java.util.List,org.springframework.web.socket.WebSocketHandler)|",
      "|java+method:///org/springframework/web/socket/server/RequestUpgradeStrategy/upgrade(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,java.lang.String,java.util.List,org.springframework.web.socket.WebSocketHandler,java.util.Map)|",
      "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/isWebSocketVersionSupported(org.springframework.web.socket.WebSocketHttpHeaders)|",
      "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/filterRequestedExtensions(org.springframework.http.server.ServerHttpRequest,java.util.List,java.util.List)|",
      "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/handleInvalidUpgradeHeader(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse)|",
      "|java+constructor:///org/springframework/web/socket/WebSocketHttpHeaders/WebSocketHttpHeaders(org.springframework.http.HttpHeaders)|",
      "|java+method:///java/util/List/contains(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/Collections/singleton(java.lang.Object)|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getMethod()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/http/server/ServerHttpResponse/getHeaders()|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getHeaders()|",
      "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/handleInvalidConnectHeader(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse)|",
      "|java+method:///org/springframework/http/server/ServerHttpResponse/setStatusCode(org.springframework.http.HttpStatus)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/web/socket/server/RequestUpgradeStrategy/getSupportedExtensions(org.springframework.http.server.ServerHttpRequest)|",
      "|java+method:///org/apache/commons/logging/Log/isDebugEnabled()|",
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/getSecWebSocketKey()|",
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/getConnection()|",
      "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/handleWebSocketVersionNotSupported(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse)|",
      "|java+method:///org/springframework/http/HttpHeaders/setAllow(java.util.Set)|",
      "|java+constructor:///org/springframework/web/socket/server/HandshakeFailureException/HandshakeFailureException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/getSecWebSocketExtensions()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/getUpgrade()|",
      "|java+method:///org/springframework/web/socket/WebSocketHttpHeaders/getSecWebSocketProtocol()|",
      "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/determineUser(org.springframework.http.server.ServerHttpRequest,org.springframework.web.socket.WebSocketHandler,java.util.Map)|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/debug(java.lang.Object)|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getURI()|",
      "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/isValidOrigin(org.springframework.http.server.ServerHttpRequest)|",
      "|java+method:///org/springframework/http/HttpMethod/equals(java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/selectProtocol(java.util.List,org.springframework.web.socket.WebSocketHandler)|",
      "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/isWebSocketVersionSupported(org.springframework.web.socket.WebSocketHttpHeaders)|",
      "|java+method:///org/springframework/web/socket/server/RequestUpgradeStrategy/upgrade(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,java.lang.String,java.util.List,java.security.Principal,org.springframework.web.socket.WebSocketHandler,java.util.Map)|",
      "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/filterRequestedExtensions(org.springframework.http.server.ServerHttpRequest,java.util.List,java.util.List)|",
      "|java+method:///org/springframework/web/socket/server/support/DefaultHandshakeHandler/handleInvalidUpgradeHeader(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse)|",
      "|java+constructor:///org/springframework/web/socket/WebSocketHttpHeaders/WebSocketHttpHeaders(org.springframework.http.HttpHeaders)|",
      "|java+method:///java/util/List/contains(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/Collections/singleton(java.lang.Object)|",
      "|java+method:///org/springframework/http/server/ServerHttpRequest/getMethod()|"
    ],
    "affectedLib": "org.springframework:spring-web:4.0.1.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.0.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.0.1.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/client/jetty/JettyWebSocketClient/doHandshakeInternal(org.springframework.web.socket.WebSocketHandler,org.springframework.http.HttpHeaders,java.net.URI,java.util.List,java.util.List,java.util.Map)|",
    "called": "|java+method:///org/springframework/http/HttpHeaders/keySet()|",
    "v1Body": [
      "|java+method:///org/eclipse/jetty/websocket/client/ClientUpgradeRequest/setSubProtocols(java.util.List)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/core/task/AsyncListenableTaskExecutor/submitListenable(java.util.concurrent.Callable)|",
      "|java+method:///org/eclipse/jetty/websocket/client/ClientUpgradeRequest/setHeader(java.lang.String,java.util.List)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/eclipse/jetty/websocket/client/ClientUpgradeRequest/addExtensions(org.eclipse.jetty.websocket.api.extensions.ExtensionConfig%5B%5D)|",
      "|java+constructor:///org/springframework/web/socket/adapter/jetty/JettyWebSocketHandlerAdapter/JettyWebSocketHandlerAdapter(org.springframework.web.socket.WebSocketHandler,org.springframework.web.socket.adapter.jetty.JettyWebSocketSession)|",
      "|java+constructor:///org/eclipse/jetty/websocket/client/ClientUpgradeRequest/ClientUpgradeRequest()|",
      "|java+method:///org/springframework/web/socket/client/jetty/JettyWebSocketClient/getUser()|",
      "|java+method:///org/springframework/http/HttpHeaders/get(java.lang.Object)|",
      "|java+method:///org/springframework/http/HttpHeaders/keySet()|",
      "|java+constructor:///org/springframework/web/socket/client/jetty/JettyWebSocketClient$1/JettyWebSocketClient$1(org.springframework.web.socket.client.jetty.JettyWebSocketClient,org.springframework.web.socket.adapter.jetty.JettyWebSocketHandlerAdapter,java.net.URI,org.eclipse.jetty.websocket.client.ClientUpgradeRequest,org.springframework.web.socket.adapter.jetty.JettyWebSocketSession)|",
      "|java+constructor:///org/springframework/web/socket/adapter/jetty/JettyWebSocketSession/JettyWebSocketSession(java.security.Principal,java.util.Map)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///org/springframework/web/socket/adapter/jetty/WebSocketToJettyExtensionConfigAdapter/WebSocketToJettyExtensionConfigAdapter(org.springframework.web.socket.WebSocketExtension)|"
    ],
    "v2Body": [
      "|java+method:///org/eclipse/jetty/websocket/client/ClientUpgradeRequest/setSubProtocols(java.util.List)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/core/task/AsyncListenableTaskExecutor/submitListenable(java.util.concurrent.Callable)|",
      "|java+method:///org/eclipse/jetty/websocket/client/ClientUpgradeRequest/setHeader(java.lang.String,java.util.List)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/eclipse/jetty/websocket/client/ClientUpgradeRequest/addExtensions(org.eclipse.jetty.websocket.api.extensions.ExtensionConfig%5B%5D)|",
      "|java+constructor:///org/springframework/web/socket/adapter/jetty/JettyWebSocketHandlerAdapter/JettyWebSocketHandlerAdapter(org.springframework.web.socket.WebSocketHandler,org.springframework.web.socket.adapter.jetty.JettyWebSocketSession)|",
      "|java+constructor:///org/eclipse/jetty/websocket/client/ClientUpgradeRequest/ClientUpgradeRequest()|",
      "|java+method:///org/springframework/web/socket/client/jetty/JettyWebSocketClient/getUser()|",
      "|java+method:///org/springframework/http/HttpHeaders/get(java.lang.Object)|",
      "|java+method:///org/springframework/http/HttpHeaders/keySet()|",
      "|java+constructor:///org/springframework/web/socket/client/jetty/JettyWebSocketClient$1/JettyWebSocketClient$1(org.springframework.web.socket.client.jetty.JettyWebSocketClient,org.springframework.web.socket.adapter.jetty.JettyWebSocketHandlerAdapter,java.net.URI,org.eclipse.jetty.websocket.client.ClientUpgradeRequest,org.springframework.web.socket.adapter.jetty.JettyWebSocketSession)|",
      "|java+constructor:///org/springframework/web/socket/adapter/jetty/JettyWebSocketSession/JettyWebSocketSession(java.util.Map,java.security.Principal)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///org/springframework/web/socket/adapter/jetty/WebSocketToJettyExtensionConfigAdapter/WebSocketToJettyExtensionConfigAdapter(org.springframework.web.socket.WebSocketExtension)|"
    ],
    "affectedLib": "org.springframework:spring-web:4.0.1.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.0.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.0.1.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/handleMessageFromClient(org.springframework.web.socket.WebSocketSession,org.springframework.web.socket.WebSocketMessage,org.springframework.messaging.MessageChannel)|",
    "called": "|java+method:///org/springframework/messaging/simp/stomp/StompDecoder/decode(java.nio.ByteBuffer)|",
    "v1Body": [
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/wrap(org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/getId()|",
      "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/sendErrorMessage(org.springframework.web.socket.WebSocketSession,java.lang.Throwable)|",
      "|java+method:///org/springframework/messaging/MessageChannel/send(org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/messaging/Message/getPayload()|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/setSessionId(java.lang.String)|",
      "|java+method:///java/nio/ByteBuffer/wrap(byte%5B%5D)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/setUser(java.security.Principal)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/web/socket/TextMessage/getPayload()|",
      "|java+method:///org/springframework/messaging/support/MessageBuilder/build()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/messaging/support/MessageBuilder/withPayload(java.lang.Object)|",
      "|java+method:///org/springframework/messaging/simp/SimpMessageType/equals(java.lang.Object)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/getMessageType()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/messaging/support/MessageBuilder/setHeaders(org.springframework.messaging.support.MessageHeaderAccessor)|",
      "|java+method:///org/apache/commons/logging/Log/trace(java.lang.Object)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompDecoder/decode(java.nio.ByteBuffer)|",
      "|java+method:///java/lang/String/getBytes(java.nio.charset.Charset)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/springframework/util/Assert/isInstanceOf(java.lang.Class,java.lang.Object)|",
      "|java+method:///org/apache/commons/logging/Log/isTraceEnabled()|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/getPrincipal()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/wrap(org.springframework.messaging.Message)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/getId()|",
      "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/sendErrorMessage(org.springframework.web.socket.WebSocketSession,java.lang.Throwable)|",
      "|java+method:///org/springframework/messaging/MessageChannel/send(org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/messaging/Message/getPayload()|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/setSessionId(java.lang.String)|",
      "|java+method:///java/nio/ByteBuffer/wrap(byte%5B%5D)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/setUser(java.security.Principal)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/web/socket/TextMessage/getPayload()|",
      "|java+method:///org/springframework/messaging/support/MessageBuilder/build()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/messaging/support/MessageBuilder/withPayload(java.lang.Object)|",
      "|java+method:///org/springframework/messaging/simp/SimpMessageType/equals(java.lang.Object)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/getMessageType()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/messaging/support/MessageBuilder/setHeaders(org.springframework.messaging.support.MessageHeaderAccessor)|",
      "|java+method:///org/apache/commons/logging/Log/trace(java.lang.Object)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompDecoder/decode(java.nio.ByteBuffer)|",
      "|java+method:///java/lang/String/getBytes(java.nio.charset.Charset)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/springframework/util/Assert/isInstanceOf(java.lang.Class,java.lang.Object)|",
      "|java+method:///org/apache/commons/logging/Log/isTraceEnabled()|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/getPrincipal()|"
    ],
    "affectedLib": "org.springframework:spring-messaging:4.0.1.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.0.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.0.1.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/afterSessionEnded(org.springframework.web.socket.WebSocketSession,org.springframework.web.socket.CloseStatus,org.springframework.messaging.MessageChannel)|",
    "called": "|java+method:///org/springframework/messaging/support/MessageBuilder/build()|",
    "v1Body": [
      "|java+method:///org/springframework/messaging/support/MessageBuilder/build()|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/getId()|",
      "|java+method:///org/springframework/messaging/support/MessageBuilder/withPayload(java.lang.Object)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/create(org.springframework.messaging.simp.stomp.StompCommand)|",
      "|java+method:///org/springframework/messaging/MessageChannel/send(org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/setSessionId(java.lang.String)|",
      "|java+method:///org/springframework/messaging/simp/user/UserSessionRegistry/unregisterSessionId(java.lang.String,java.lang.String)|",
      "|java+method:///org/springframework/messaging/support/MessageBuilder/setHeaders(org.springframework.messaging.support.MessageHeaderAccessor)|",
      "|java+method:///java/security/Principal/getName()|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/getPrincipal()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/messaging/support/MessageBuilder/build()|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/getId()|",
      "|java+method:///org/springframework/messaging/support/MessageBuilder/withPayload(java.lang.Object)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/create(org.springframework.messaging.simp.stomp.StompCommand)|",
      "|java+method:///org/springframework/messaging/MessageChannel/send(org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/setSessionId(java.lang.String)|",
      "|java+method:///org/springframework/messaging/simp/user/UserSessionRegistry/unregisterSessionId(java.lang.String,java.lang.String)|",
      "|java+method:///org/springframework/messaging/support/MessageBuilder/setHeaders(org.springframework.messaging.support.MessageHeaderAccessor)|",
      "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/resolveNameForUserSessionRegistry(java.security.Principal)|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/getPrincipal()|"
    ],
    "affectedLib": "org.springframework:spring-messaging:4.0.1.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.0.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.0.1.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)|",
    "called": "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/pushContainingComponent(org.springframework.beans.factory.parsing.CompositeComponentDefinition)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/getMessageChannel(java.lang.String,org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerBrokerMessagingTemplate(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/popAndRegisterContainingComponent()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/springframework/beans/MutablePropertyValues/add(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/w3c/dom/Element/getTagName()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///org/springframework/beans/factory/parsing/CompositeComponentDefinition/CompositeComponentDefinition(java.lang.String,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerUserDestinationResolver(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElementByTagName(org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerHttpRequestHandler(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/support/ManagedMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerBeanDef(org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/ManagedMap/setSource(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/extractSource(java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerUserDestinationMessageHandler(org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerMessageBroker(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerBrokerMessageConverter(org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/getPropertyValues()|",
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElementsByTagName(org.w3c.dom.Element,java.lang.String)|",
      "|java+constructor:///org/springframework/beans/factory/config/RuntimeBeanReference/RuntimeBeanReference(java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///org/springframework/beans/factory/support/RootBeanDefinition/RootBeanDefinition(java.lang.Class)|",
      "|java+constructor:///org/springframework/beans/factory/support/ManagedMap/ManagedMap()|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerAnnotationMethodMessageHandler(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerSubProtocolWebSocketHandler(org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|",
      "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/pushContainingComponent(org.springframework.beans.factory.parsing.CompositeComponentDefinition)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/getMessageChannel(java.lang.String,org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerBrokerMessagingTemplate(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/popAndRegisterContainingComponent()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/springframework/beans/MutablePropertyValues/add(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/w3c/dom/Element/getTagName()|",
      "|java+method:///org/springframework/util/StringUtils/tokenizeToStringArray(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///org/springframework/beans/factory/parsing/CompositeComponentDefinition/CompositeComponentDefinition(java.lang.String,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerUserDestinationResolver(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElementByTagName(org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerHttpRequestHandler(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerBrokerMessageConverter(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/support/ManagedMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerBeanDef(org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/ManagedMap/setSource(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/extractSource(java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerUserDestinationMessageHandler(org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerMessageBroker(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/getPropertyValues()|",
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElementsByTagName(org.w3c.dom.Element,java.lang.String)|",
      "|java+constructor:///org/springframework/beans/factory/config/RuntimeBeanReference/RuntimeBeanReference(java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///org/springframework/beans/factory/support/RootBeanDefinition/RootBeanDefinition(java.lang.Class)|",
      "|java+constructor:///org/springframework/beans/factory/support/ManagedMap/ManagedMap()|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerAnnotationMethodMessageHandler(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerSubProtocolWebSocketHandler(org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|",
      "|java+method:///org/springframework/util/Assert/state(boolean,java.lang.String)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.0.1.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.0.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.0.1.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerMessageBroker(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
    "called": "|java+method:///org/springframework/util/StringUtils/tokenizeToStringArray(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElementByTagName(org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+constructor:///org/springframework/beans/factory/config/ConstructorArgumentValues/ConstructorArgumentValues()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/springframework/beans/MutablePropertyValues/add(java.lang.String,java.lang.Object)|",
      "|java+constructor:///org/springframework/beans/MutablePropertyValues/MutablePropertyValues()|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/config/ConstructorArgumentValues/addIndexedArgumentValue(int,java.lang.Object)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerBeanDef(org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+constructor:///org/springframework/beans/factory/support/RootBeanDefinition/RootBeanDefinition(java.lang.Class,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.MutablePropertyValues)|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/util/StringUtils/tokenizeToStringArray(java.lang.String,java.lang.String)|",
      "|java+method:///org/springframework/util/xml/DomUtils/getChildElementByTagName(org.w3c.dom.Element,java.lang.String)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+constructor:///org/springframework/beans/factory/config/ConstructorArgumentValues/ConstructorArgumentValues()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/springframework/beans/MutablePropertyValues/add(java.lang.String,java.lang.Object)|",
      "|java+constructor:///org/springframework/beans/MutablePropertyValues/MutablePropertyValues()|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/config/ConstructorArgumentValues/addIndexedArgumentValue(int,java.lang.Object)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerBeanDef(org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+constructor:///org/springframework/beans/factory/support/RootBeanDefinition/RootBeanDefinition(java.lang.Class,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.MutablePropertyValues)|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.0.1.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.0.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.0.1.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/config/HandlersBeanDefinitionParser$SockJSHandlerMappingStrategy/createMappings(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)|",
    "called": "|java+method:///org/springframework/util/StringUtils/tokenizeToStringArray(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/getReaderContext()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/support/ManagedMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/xml/XmlReaderContext/registerWithGeneratedName(org.springframework.beans.factory.config.BeanDefinition)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/springframework/beans/factory/config/ConstructorArgumentValues/ConstructorArgumentValues()|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/setRole(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///org/springframework/beans/factory/support/RootBeanDefinition/RootBeanDefinition(java.lang.Class,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.MutablePropertyValues)|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/config/ConstructorArgumentValues/addIndexedArgumentValue(int,java.lang.Object,java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/extractSource(java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/setSource(java.lang.Object)|",
      "|java+constructor:///org/springframework/beans/factory/config/RuntimeBeanReference/RuntimeBeanReference(java.lang.String)|",
      "|java+constructor:///org/springframework/beans/factory/support/ManagedMap/ManagedMap()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/support/ManagedMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/xml/XmlReaderContext/registerWithGeneratedName(org.springframework.beans.factory.config.BeanDefinition)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+constructor:///org/springframework/beans/factory/config/ConstructorArgumentValues/ConstructorArgumentValues()|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/setRole(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/getReaderContext()|",
      "|java+method:///org/springframework/util/StringUtils/tokenizeToStringArray(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/springframework/beans/factory/support/RootBeanDefinition/RootBeanDefinition(java.lang.Class,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.MutablePropertyValues)|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/config/ConstructorArgumentValues/addIndexedArgumentValue(int,java.lang.Object,java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/extractSource(java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/setSource(java.lang.Object)|",
      "|java+constructor:///org/springframework/beans/factory/config/RuntimeBeanReference/RuntimeBeanReference(java.lang.String)|",
      "|java+constructor:///org/springframework/beans/factory/support/ManagedMap/ManagedMap()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.0.1.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.0.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.0.1.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/config/HandlersBeanDefinitionParser$WebSocketHandlerMappingStrategy/createMappings(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)|",
    "called": "|java+method:///org/springframework/util/StringUtils/tokenizeToStringArray(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/getReaderContext()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/beans/factory/support/ManagedMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/xml/XmlReaderContext/registerWithGeneratedName(org.springframework.beans.factory.config.BeanDefinition)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/springframework/beans/factory/config/ConstructorArgumentValues/ConstructorArgumentValues()|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/setRole(int)|",
      "|java+method:///org/springframework/beans/MutablePropertyValues/add(java.lang.String,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/getPropertyValues()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/config/ConstructorArgumentValues/addIndexedArgumentValue(int,java.lang.Object)|",
      "|java+constructor:///org/springframework/beans/factory/support/RootBeanDefinition/RootBeanDefinition(java.lang.Class,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.MutablePropertyValues)|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/extractSource(java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/setSource(java.lang.Object)|",
      "|java+constructor:///org/springframework/beans/factory/config/RuntimeBeanReference/RuntimeBeanReference(java.lang.String)|",
      "|java+constructor:///org/springframework/beans/factory/support/ManagedMap/ManagedMap()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/beans/factory/config/ConstructorArgumentValues/addIndexedArgumentValue(int,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/springframework/beans/factory/support/ManagedMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/xml/XmlReaderContext/registerWithGeneratedName(org.springframework.beans.factory.config.BeanDefinition)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/springframework/beans/factory/config/ConstructorArgumentValues/ConstructorArgumentValues()|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/setRole(int)|",
      "|java+method:///org/springframework/beans/MutablePropertyValues/add(java.lang.String,java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/getPropertyValues()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/getReaderContext()|",
      "|java+method:///org/springframework/util/StringUtils/tokenizeToStringArray(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/springframework/beans/factory/support/RootBeanDefinition/RootBeanDefinition(java.lang.Class,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.MutablePropertyValues)|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/xml/ParserContext/extractSource(java.lang.Object)|",
      "|java+method:///org/springframework/beans/factory/support/RootBeanDefinition/setSource(java.lang.Object)|",
      "|java+constructor:///org/springframework/beans/factory/config/RuntimeBeanReference/RuntimeBeanReference(java.lang.String)|",
      "|java+constructor:///org/springframework/beans/factory/support/ManagedMap/ManagedMap()|"
    ],
    "affectedLib": "org.springframework:spring-core:4.0.1.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.0.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.0.1.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/handleMessageFromClient(org.springframework.web.socket.WebSocketSession,org.springframework.web.socket.WebSocketMessage,org.springframework.messaging.MessageChannel)|",
    "called": "|java+method:///org/springframework/util/Assert/isInstanceOf(java.lang.Class,java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/wrap(org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/getId()|",
      "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/sendErrorMessage(org.springframework.web.socket.WebSocketSession,java.lang.Throwable)|",
      "|java+method:///org/springframework/messaging/MessageChannel/send(org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/messaging/Message/getPayload()|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/setSessionId(java.lang.String)|",
      "|java+method:///java/nio/ByteBuffer/wrap(byte%5B%5D)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/setUser(java.security.Principal)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/web/socket/TextMessage/getPayload()|",
      "|java+method:///org/springframework/messaging/support/MessageBuilder/build()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/messaging/support/MessageBuilder/withPayload(java.lang.Object)|",
      "|java+method:///org/springframework/messaging/simp/SimpMessageType/equals(java.lang.Object)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/getMessageType()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/messaging/support/MessageBuilder/setHeaders(org.springframework.messaging.support.MessageHeaderAccessor)|",
      "|java+method:///org/apache/commons/logging/Log/trace(java.lang.Object)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompDecoder/decode(java.nio.ByteBuffer)|",
      "|java+method:///java/lang/String/getBytes(java.nio.charset.Charset)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/springframework/util/Assert/isInstanceOf(java.lang.Class,java.lang.Object)|",
      "|java+method:///org/apache/commons/logging/Log/isTraceEnabled()|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/getPrincipal()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/wrap(org.springframework.messaging.Message)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/getId()|",
      "|java+method:///org/springframework/web/socket/messaging/StompSubProtocolHandler/sendErrorMessage(org.springframework.web.socket.WebSocketSession,java.lang.Throwable)|",
      "|java+method:///org/springframework/messaging/MessageChannel/send(org.springframework.messaging.Message)|",
      "|java+method:///org/springframework/messaging/Message/getPayload()|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/setSessionId(java.lang.String)|",
      "|java+method:///java/nio/ByteBuffer/wrap(byte%5B%5D)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/setUser(java.security.Principal)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/web/socket/TextMessage/getPayload()|",
      "|java+method:///org/springframework/messaging/support/MessageBuilder/build()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/messaging/support/MessageBuilder/withPayload(java.lang.Object)|",
      "|java+method:///org/springframework/messaging/simp/SimpMessageType/equals(java.lang.Object)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompHeaderAccessor/getMessageType()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/messaging/support/MessageBuilder/setHeaders(org.springframework.messaging.support.MessageHeaderAccessor)|",
      "|java+method:///org/apache/commons/logging/Log/trace(java.lang.Object)|",
      "|java+method:///org/springframework/messaging/simp/stomp/StompDecoder/decode(java.nio.ByteBuffer)|",
      "|java+method:///java/lang/String/getBytes(java.nio.charset.Charset)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/springframework/util/Assert/isInstanceOf(java.lang.Class,java.lang.Object)|",
      "|java+method:///org/apache/commons/logging/Log/isTraceEnabled()|",
      "|java+method:///org/springframework/web/socket/WebSocketSession/getPrincipal()|"
    ],
    "affectedLib": "org.springframework:spring-core:4.0.1.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework:spring-websocket:4.0.0.RELEASE",
    "coordinatesV2": "org.springframework:spring-websocket:4.0.1.RELEASE",
    "caller": "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerAnnotationMethodMessageHandler(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
    "called": "|java+method:///org/springframework/util/StringUtils/tokenizeToStringArray(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/springframework/beans/factory/config/ConstructorArgumentValues/ConstructorArgumentValues()|",
      "|java+method:///org/springframework/beans/MutablePropertyValues/add(java.lang.String,java.lang.Object)|",
      "|java+constructor:///org/springframework/beans/MutablePropertyValues/MutablePropertyValues()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/config/ConstructorArgumentValues/addIndexedArgumentValue(int,java.lang.Object)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerBeanDef(org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+constructor:///org/springframework/beans/factory/support/RootBeanDefinition/RootBeanDefinition(java.lang.Class,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.MutablePropertyValues)|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/util/StringUtils/tokenizeToStringArray(java.lang.String,java.lang.String)|",
      "|java+method:///org/springframework/beans/factory/config/ConstructorArgumentValues/addIndexedArgumentValue(int,java.lang.Object)|",
      "|java+constructor:///org/springframework/beans/factory/config/ConstructorArgumentValues/ConstructorArgumentValues()|",
      "|java+method:///org/springframework/beans/MutablePropertyValues/add(java.lang.String,java.lang.Object)|",
      "|java+constructor:///org/springframework/beans/MutablePropertyValues/MutablePropertyValues()|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser/registerBeanDef(org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)|",
      "|java+constructor:///org/springframework/beans/factory/support/RootBeanDefinition/RootBeanDefinition(java.lang.Class,org.springframework.beans.factory.config.ConstructorArgumentValues,org.springframework.beans.MutablePropertyValues)|",
      "|java+method:///org/w3c/dom/Element/getAttribute(java.lang.String)|"
    ],
    "affectedLib": "org.springframework:spring-core:4.0.1.RELEASE",
    "change": "UPDATED"
  }
]