[
  {
    "coordinatesV1": "org.powertac:server-main:0.2.0",
    "coordinatesV2": "org.powertac:server-main:0.1.0",
    "caller": "|java+method:///org/powertac/server/PowerTacServer/main(java.lang.String%5B%5D)|",
    "called": "|java+method:///org/springframework/context/support/AbstractApplicationContext/getBeansOfType(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/powertac/server/CompetitionControlService/preGame()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/springframework/context/support/AbstractApplicationContext/getBeansOfType(java.lang.Class)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///java/util/Collection/toArray()|",
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///org/powertac/server/CompetitionControlService/setAuthorizedBrokerList(java.util.ArrayList)|",
      "|java+method:///java/util/ArrayList/size()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/powertac/server/ServerPropertiesService/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Thread/sleep(long)|",
      "|java+constructor:///org/springframework/context/support/ClassPathXmlApplicationContext/ClassPathXmlApplicationContext(java.lang.String)|",
      "|java+method:///org/powertac/server/CompetitionControlService/preGame(java.io.File)|",
      "|java+method:///org/powertac/server/CompetitionControlService/runOnce(java.io.Writer)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+constructor:///java/io/FileReader/FileReader(java.lang.String)|",
      "|java+method:///java/lang/System/exit(int)|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+constructor:///java/io/FileWriter/FileWriter(java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/util/ArrayList/add(java.lang.Object)|",
      "|java+constructor:///java/io/BufferedReader/BufferedReader(java.io.Reader)|",
      "|java+method:///java/io/BufferedReader/readLine()|",
      "|java+method:///org/powertac/server/ServerPropertiesService/setUserConfig(java.lang.String)|",
      "|java+method:///org/springframework/context/support/AbstractApplicationContext/registerShutdownHook()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/powertac/server/CompetitionControlService/runOnce(java.io.File)|"
    ],
    "v2Body": [
      "|java+constructor:///org/springframework/context/support/ClassPathXmlApplicationContext/ClassPathXmlApplicationContext(java.lang.String)|",
      "|java+method:///java/util/Collection/toArray()|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/lang/System/exit(int)|",
      "|java+method:///org/springframework/context/support/AbstractApplicationContext/registerShutdownHook()|",
      "|java+method:///org/springframework/context/support/AbstractApplicationContext/getBeansOfType(java.lang.Class)|",
      "|java+method:///org/powertac/server/CompetitionSetupService/processCmdLine(java.lang.String%5B%5D)|"
    ],
    "affectedLib": "org.springframework:spring-context:3.0.6.RELEASE",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.powertac:server-main:0.1.0",
    "coordinatesV2": "org.powertac:server-main:0.2.0",
    "caller": "|java+method:///org/powertac/server/CompetitionControlService/configurePlugins()|",
    "called": "|java+method:///org/powertac/common/spring/SpringApplicationContext/listBeansOfType(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/springframework/context/ApplicationContext/getBeansOfType(java.lang.Class)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/ArrayList/add(java.lang.Object)|",
      "|java+method:///java/util/ArrayList/size()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/clear()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/apache/log4j/Logger/error(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/remove(int)|",
      "|java+method:///org/powertac/common/interfaces/InitializationService/initialize(org.powertac.common.Competition,java.util.List)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/powertac/common/interfaces/InitializationService/initialize(org.powertac.common.Competition,java.util.List)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/ArrayList/add(java.lang.Object)|",
      "|java+method:///java/util/ArrayList/size()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/clear()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/log4j/Logger/error(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/powertac/common/spring/SpringApplicationContext/listBeansOfType(java.lang.Class)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/remove(int)|"
    ],
    "affectedLib": "org.powertac:server-interface:0.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.powertac:server-main:0.1.0",
    "coordinatesV2": "org.powertac:server-main:0.2.0",
    "caller": "|java+method:///org/powertac/server/ServerMessageReceiver/onMessage(java.lang.String)|",
    "called": "|java+method:///org/powertac/common/XMLMessageConverter/fromXML(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/Class/getSimpleName()|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/routeMessage(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/powertac/common/XMLMessageConverter/fromXML(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Class/getSimpleName()|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/routeMessage(java.lang.Object)|",
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/log4j/Logger/debug(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/powertac/common/XMLMessageConverter/fromXML(java.lang.String)|"
    ],
    "affectedLib": "org.powertac:server-interface:0.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.powertac:server-main:0.1.0",
    "coordinatesV2": "org.powertac:server-main:0.2.0",
    "caller": "|java+method:///org/powertac/server/WeatherService/activate(org.joda.time.Instant,int)|",
    "called": "|java+method:///org/powertac/common/repo/WeatherReportRepo/currentWeatherReport()|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///org/joda/time/Instant/getMillis()|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/broadcastMessage(java.lang.Object)|",
      "|java+method:///org/powertac/server/WeatherService/webRequest(org.powertac.common.Timeslot,int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/powertac/common/Timeslot/getId()|",
      "|java+method:///org/powertac/common/repo/TimeslotRepo/currentTimeslot()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/powertac/common/repo/WeatherForecastRepo/currentWeatherForecast()|",
      "|java+method:///org/powertac/common/repo/WeatherReportRepo/currentWeatherReport()|",
      "|java+method:///java/lang/StringBuilder/append(boolean)|",
      "|java+method:///java/lang/StringBuilder/append(long)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/broadcastMessage(java.lang.Object)|",
      "|java+method:///org/powertac/server/WeatherService/webRequest(org.powertac.common.Timeslot,int)|",
      "|java+method:///org/powertac/server/WeatherService/isBlocking()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/powertac/common/Timeslot/getId()|",
      "|java+method:///org/powertac/common/repo/TimeslotRepo/currentTimeslot()|",
      "|java+method:///org/apache/log4j/Logger/error(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/joda/time/Instant/getMillis()|",
      "|java+method:///org/powertac/server/WeatherService/getWeatherReqInterval()|",
      "|java+method:///org/powertac/common/repo/WeatherForecastRepo/currentWeatherForecast()|",
      "|java+method:///org/powertac/common/repo/WeatherReportRepo/currentWeatherReport()|",
      "|java+method:///java/lang/StringBuilder/append(boolean)|",
      "|java+method:///java/lang/StringBuilder/append(long)|"
    ],
    "affectedLib": "org.powertac:server-interface:0.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.powertac:server-main:0.1.0",
    "coordinatesV2": "org.powertac:server-main:0.2.0",
    "caller": "|java+method:///org/powertac/server/WeatherService/initialize(org.powertac.common.Competition,java.util.List)|",
    "called": "|java+method:///org/powertac/common/interfaces/TimeslotPhaseProcessor/init()|",
    "v1Body": [
      "|java+method:///org/powertac/common/repo/PluginConfigRepo/findByRoleName(java.lang.String)|",
      "|java+method:///org/powertac/server/WeatherService/init(org.powertac.common.PluginConfig)|",
      "|java+method:///org/apache/log4j/Logger/error(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/powertac/common/interfaces/ServerConfiguration/configureMe(java.lang.Object)|",
      "|java+method:///org/powertac/common/interfaces/TimeslotPhaseProcessor/init()|"
    ],
    "affectedLib": "org.powertac:server-interface:0.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.powertac:server-main:0.1.0",
    "coordinatesV2": "org.powertac:server-main:0.2.0",
    "caller": "|java+method:///org/powertac/server/CompetitionControlService/setup()|",
    "called": "|java+method:///org/powertac/common/repo/TimeslotRepo/enabledTimeslots()|",
    "v1Body": [
      "|java+method:///org/powertac/common/TimeService/getCurrentTime()|",
      "|java+method:///org/powertac/server/CompetitionControlService/configurePlugins()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/broadcastDeferredMessages()|",
      "|java+method:///org/powertac/common/Competition/getId()|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/broadcastMessage(java.lang.Object)|",
      "|java+method:///org/powertac/server/CompetitionControlService/createInitialTimeslots(org.joda.time.Instant,int,int)|",
      "|java+method:///org/powertac/server/CompetitionControlService/computeGameLength(int,int)|",
      "|java+method:///org/apache/log4j/Logger/error(java.lang.Object)|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/setDeferredBroadcast(boolean)|",
      "|java+method:///org/powertac/server/CompetitionControlService/setTimeParameters()|",
      "|java+method:///org/powertac/common/Competition/getMinimumTimeslotCount()|",
      "|java+method:///org/powertac/common/Competition/getBootstrapTimeslotCount()|",
      "|java+method:///org/powertac/server/CompetitionControlService/waitForBrokerLogin()|",
      "|java+method:///org/powertac/common/repo/TimeslotRepo/enabledTimeslots()|",
      "|java+method:///org/powertac/common/repo/CustomerRepo/list()|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/broadcastMessages(java.util.List)|",
      "|java+constructor:///org/powertac/common/msg/TimeslotUpdate/TimeslotUpdate(org.joda.time.Instant,java.util.List)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/powertac/common/Competition/addBroker(java.lang.String)|",
      "|java+method:///org/powertac/common/Competition/getExpectedTimeslotCount()|",
      "|java+method:///org/powertac/common/repo/PluginConfigRepo/findAllPublic()|",
      "|java+method:///org/powertac/common/repo/BrokerRepo/findRetailBrokerNames()|",
      "|java+method:///org/powertac/common/Competition/getTimeslotsOpen()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/powertac/common/repo/RandomSeedRepo/getRandomSeed(java.lang.String,long,java.lang.String)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/powertac/common/Competition/addCustomer(org.powertac.common.CustomerInfo)|",
      "|java+method:///org/powertac/common/Competition/getDeactivateTimeslotsAhead()|"
    ],
    "v2Body": [
      "|java+method:///org/powertac/common/TimeService/getCurrentTime()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/powertac/common/Competition/getId()|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/broadcastMessage(java.lang.Object)|",
      "|java+method:///org/powertac/server/CompetitionControlService/createInitialTimeslots(org.joda.time.Instant,int,int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/powertac/common/Competition/getSimulationBaseTime()|",
      "|java+method:///org/powertac/server/CompetitionControlService/computeGameLength(int,int)|",
      "|java+method:///org/apache/log4j/Logger/error(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/setDeferredBroadcast(boolean)|",
      "|java+method:///org/powertac/server/CompetitionControlService/setTimeParameters()|",
      "|java+method:///org/powertac/common/repo/TimeslotRepo/count()|",
      "|java+method:///org/powertac/server/CompetitionControlService/configurePlugins()|",
      "|java+method:///org/powertac/common/Competition/getMinimumTimeslotCount()|",
      "|java+method:///org/powertac/common/Competition/getBootstrapTimeslotCount()|",
      "|java+method:///org/powertac/server/CompetitionControlService/waitForBrokerLogin()|",
      "|java+method:///org/powertac/common/repo/TimeslotRepo/enabledTimeslots()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/broadcastDeferredMessages()|",
      "|java+method:///org/powertac/common/repo/CustomerRepo/list()|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/broadcastMessages(java.util.List)|",
      "|java+constructor:///org/powertac/common/msg/TimeslotUpdate/TimeslotUpdate(org.joda.time.Instant,java.util.List)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/powertac/common/Competition/addBroker(java.lang.String)|",
      "|java+method:///org/powertac/server/ServerPropertiesService/getPublishedConfiguration()|",
      "|java+method:///org/powertac/common/Competition/getExpectedTimeslotCount()|",
      "|java+method:///org/powertac/common/repo/BrokerRepo/findRetailBrokerNames()|",
      "|java+method:///org/powertac/common/Competition/getTimeslotsOpen()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/powertac/common/repo/RandomSeedRepo/getRandomSeed(java.lang.String,long,java.lang.String)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/powertac/common/Competition/getBootstrapDiscardedTimeslots()|",
      "|java+method:///org/powertac/common/Competition/addCustomer(org.powertac.common.CustomerInfo)|",
      "|java+method:///org/powertac/common/Competition/getDeactivateTimeslotsAhead()|"
    ],
    "affectedLib": "org.powertac:server-interface:0.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.powertac:server-main:0.1.0",
    "coordinatesV2": "org.powertac:server-main:0.2.0",
    "caller": "|java+method:///org/powertac/server/WeatherService/webRequest(org.powertac.common.Timeslot,int)|",
    "called": "|java+method:///org/powertac/common/repo/WeatherReportRepo/add(org.powertac.common.WeatherReport)|",
    "v1Body": [
      "|java+method:///java/io/BufferedReader/close()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/net/URL/openConnection()|",
      "|java+constructor:///org/powertac/common/WeatherForecast/WeatherForecast(org.powertac.common.Timeslot,java.util.List)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///java/lang/String/compareTo(java.lang.String)|",
      "|java+constructor:///java/net/URL/URL(java.lang.String)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/net/URLConnection/getInputStream()|",
      "|java+method:///java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)|",
      "|java+method:///java/lang/Exception/toString()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/log4j/Logger/error(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/powertac/common/repo/WeatherForecastRepo/add(org.powertac.common.WeatherForecast)|",
      "|java+constructor:///org/powertac/common/WeatherForecastPrediction/WeatherForecastPrediction(int,double,double,double,double)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///%5BLjava/lang/String;/clone()|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/powertac/common/Timeslot/getNext()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/powertac/common/repo/WeatherReportRepo/add(org.powertac.common.WeatherReport)|",
      "|java+constructor:///java/io/InputStreamReader/InputStreamReader(java.io.InputStream)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///java/io/BufferedReader/BufferedReader(java.io.Reader)|",
      "|java+method:///java/io/BufferedReader/readLine()|",
      "|java+constructor:///org/powertac/common/WeatherReport/WeatherReport(org.powertac.common.Timeslot,double,double,double,double)|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "v2Body": [
      "|java+method:///java/io/BufferedReader/close()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/net/URL/openConnection()|",
      "|java+constructor:///org/powertac/common/WeatherForecast/WeatherForecast(org.powertac.common.Timeslot,java.util.List)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///org/powertac/server/WeatherService/getServerUrl()|",
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///java/lang/String/compareTo(java.lang.String)|",
      "|java+constructor:///java/net/URL/URL(java.lang.String)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/net/URLConnection/getInputStream()|",
      "|java+method:///java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)|",
      "|java+method:///java/lang/Exception/toString()|",
      "|java+method:///org/apache/log4j/Logger/error(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/powertac/common/repo/WeatherForecastRepo/add(org.powertac.common.WeatherForecast)|",
      "|java+constructor:///org/powertac/common/WeatherForecastPrediction/WeatherForecastPrediction(int,double,double,double,double)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/powertac/server/WeatherService/getWeatherReqInterval()|",
      "|java+method:///%5BLjava/lang/String;/clone()|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/powertac/common/Timeslot/getNext()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/powertac/common/repo/WeatherReportRepo/add(org.powertac.common.WeatherReport)|",
      "|java+constructor:///java/io/InputStreamReader/InputStreamReader(java.io.InputStream)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///java/io/BufferedReader/BufferedReader(java.io.Reader)|",
      "|java+method:///java/io/BufferedReader/readLine()|",
      "|java+constructor:///org/powertac/common/WeatherReport/WeatherReport(org.powertac.common.Timeslot,double,double,double,double)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/powertac/server/WeatherService/getForecastHorizon()|"
    ],
    "affectedLib": "org.powertac:server-interface:0.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.powertac:server-main:0.1.0",
    "coordinatesV2": "org.powertac:server-main:0.2.0",
    "caller": "|java+method:///org/powertac/server/BrokerProxyService/localSendMessage(org.powertac.common.Broker,java.lang.Object)|",
    "called": "|java+method:///org/powertac/common/Broker/toQueueName()|",
    "v1Body": [
      "|java+constructor:///org/powertac/server/BrokerProxyService$1/BrokerProxyService$1(org.powertac.server.BrokerProxyService,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/powertac/common/Broker/isEnabled()|",
      "|java+method:///org/powertac/common/Broker/receiveMessage(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/powertac/common/XMLMessageConverter/toXML(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///org/springframework/jms/core/JmsTemplate/send(java.lang.String,org.springframework.jms.core.MessageCreator)|",
      "|java+method:///org/powertac/common/Broker/isLocal()|",
      "|java+method:///org/powertac/common/Broker/toQueueName()|"
    ],
    "v2Body": [
      "|java+constructor:///org/powertac/server/BrokerProxyService$1/BrokerProxyService$1(org.powertac.server.BrokerProxyService,java.lang.String)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/springframework/jms/core/JmsTemplate/send(java.lang.String,org.springframework.jms.core.MessageCreator)|",
      "|java+method:///org/powertac/common/Broker/isEnabled()|",
      "|java+method:///org/powertac/common/Broker/receiveMessage(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/powertac/common/XMLMessageConverter/toXML(java.lang.Object)|",
      "|java+method:///org/apache/log4j/Logger/error(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/log4j/Logger/warn(java.lang.Object)|",
      "|java+method:///org/powertac/common/Broker/getUsername()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/log4j/Logger/debug(java.lang.Object)|",
      "|java+method:///org/powertac/common/Broker/isLocal()|",
      "|java+method:///org/powertac/common/Broker/toQueueName()|"
    ],
    "affectedLib": "org.powertac:server-interface:0.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.powertac:server-main:0.1.0",
    "coordinatesV2": "org.powertac:server-main:0.2.0",
    "caller": "|java+method:///org/powertac/server/CompetitionControlService/configurePlugins()|",
    "called": "|java+method:///org/powertac/common/spring/SpringApplicationContext/listBeansOfType(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/springframework/context/ApplicationContext/getBeansOfType(java.lang.Class)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/ArrayList/add(java.lang.Object)|",
      "|java+method:///java/util/ArrayList/size()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/clear()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/apache/log4j/Logger/error(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/remove(int)|",
      "|java+method:///org/powertac/common/interfaces/InitializationService/initialize(org.powertac.common.Competition,java.util.List)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/powertac/common/interfaces/InitializationService/initialize(org.powertac.common.Competition,java.util.List)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/ArrayList/add(java.lang.Object)|",
      "|java+method:///java/util/ArrayList/size()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/clear()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/log4j/Logger/error(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/powertac/common/spring/SpringApplicationContext/listBeansOfType(java.lang.Class)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/remove(int)|"
    ],
    "affectedLib": "org.powertac:genco:0.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.powertac:server-main:0.1.0",
    "coordinatesV2": "org.powertac:server-main:0.2.0",
    "caller": "|java+method:///org/powertac/server/ServerMessageReceiver/onMessage(java.lang.String)|",
    "called": "|java+method:///org/powertac/common/XMLMessageConverter/fromXML(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/Class/getSimpleName()|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/routeMessage(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/powertac/common/XMLMessageConverter/fromXML(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Class/getSimpleName()|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/routeMessage(java.lang.Object)|",
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/log4j/Logger/debug(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/powertac/common/XMLMessageConverter/fromXML(java.lang.String)|"
    ],
    "affectedLib": "org.powertac:genco:0.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.powertac:server-main:0.1.0",
    "coordinatesV2": "org.powertac:server-main:0.2.0",
    "caller": "|java+method:///org/powertac/server/WeatherService/activate(org.joda.time.Instant,int)|",
    "called": "|java+method:///org/powertac/common/repo/WeatherReportRepo/currentWeatherReport()|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///org/joda/time/Instant/getMillis()|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/broadcastMessage(java.lang.Object)|",
      "|java+method:///org/powertac/server/WeatherService/webRequest(org.powertac.common.Timeslot,int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/powertac/common/Timeslot/getId()|",
      "|java+method:///org/powertac/common/repo/TimeslotRepo/currentTimeslot()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/powertac/common/repo/WeatherForecastRepo/currentWeatherForecast()|",
      "|java+method:///org/powertac/common/repo/WeatherReportRepo/currentWeatherReport()|",
      "|java+method:///java/lang/StringBuilder/append(boolean)|",
      "|java+method:///java/lang/StringBuilder/append(long)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/broadcastMessage(java.lang.Object)|",
      "|java+method:///org/powertac/server/WeatherService/webRequest(org.powertac.common.Timeslot,int)|",
      "|java+method:///org/powertac/server/WeatherService/isBlocking()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/powertac/common/Timeslot/getId()|",
      "|java+method:///org/powertac/common/repo/TimeslotRepo/currentTimeslot()|",
      "|java+method:///org/apache/log4j/Logger/error(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/joda/time/Instant/getMillis()|",
      "|java+method:///org/powertac/server/WeatherService/getWeatherReqInterval()|",
      "|java+method:///org/powertac/common/repo/WeatherForecastRepo/currentWeatherForecast()|",
      "|java+method:///org/powertac/common/repo/WeatherReportRepo/currentWeatherReport()|",
      "|java+method:///java/lang/StringBuilder/append(boolean)|",
      "|java+method:///java/lang/StringBuilder/append(long)|"
    ],
    "affectedLib": "org.powertac:genco:0.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.powertac:server-main:0.1.0",
    "coordinatesV2": "org.powertac:server-main:0.2.0",
    "caller": "|java+method:///org/powertac/server/CompetitionControlService/setup()|",
    "called": "|java+method:///org/powertac/common/repo/TimeslotRepo/enabledTimeslots()|",
    "v1Body": [
      "|java+method:///org/powertac/common/TimeService/getCurrentTime()|",
      "|java+method:///org/powertac/server/CompetitionControlService/configurePlugins()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/broadcastDeferredMessages()|",
      "|java+method:///org/powertac/common/Competition/getId()|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/broadcastMessage(java.lang.Object)|",
      "|java+method:///org/powertac/server/CompetitionControlService/createInitialTimeslots(org.joda.time.Instant,int,int)|",
      "|java+method:///org/powertac/server/CompetitionControlService/computeGameLength(int,int)|",
      "|java+method:///org/apache/log4j/Logger/error(java.lang.Object)|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/setDeferredBroadcast(boolean)|",
      "|java+method:///org/powertac/server/CompetitionControlService/setTimeParameters()|",
      "|java+method:///org/powertac/common/Competition/getMinimumTimeslotCount()|",
      "|java+method:///org/powertac/common/Competition/getBootstrapTimeslotCount()|",
      "|java+method:///org/powertac/server/CompetitionControlService/waitForBrokerLogin()|",
      "|java+method:///org/powertac/common/repo/TimeslotRepo/enabledTimeslots()|",
      "|java+method:///org/powertac/common/repo/CustomerRepo/list()|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/broadcastMessages(java.util.List)|",
      "|java+constructor:///org/powertac/common/msg/TimeslotUpdate/TimeslotUpdate(org.joda.time.Instant,java.util.List)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/powertac/common/Competition/addBroker(java.lang.String)|",
      "|java+method:///org/powertac/common/Competition/getExpectedTimeslotCount()|",
      "|java+method:///org/powertac/common/repo/PluginConfigRepo/findAllPublic()|",
      "|java+method:///org/powertac/common/repo/BrokerRepo/findRetailBrokerNames()|",
      "|java+method:///org/powertac/common/Competition/getTimeslotsOpen()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/powertac/common/repo/RandomSeedRepo/getRandomSeed(java.lang.String,long,java.lang.String)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/powertac/common/Competition/addCustomer(org.powertac.common.CustomerInfo)|",
      "|java+method:///org/powertac/common/Competition/getDeactivateTimeslotsAhead()|"
    ],
    "v2Body": [
      "|java+method:///org/powertac/common/TimeService/getCurrentTime()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/powertac/common/Competition/getId()|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/broadcastMessage(java.lang.Object)|",
      "|java+method:///org/powertac/server/CompetitionControlService/createInitialTimeslots(org.joda.time.Instant,int,int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/powertac/common/Competition/getSimulationBaseTime()|",
      "|java+method:///org/powertac/server/CompetitionControlService/computeGameLength(int,int)|",
      "|java+method:///org/apache/log4j/Logger/error(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/setDeferredBroadcast(boolean)|",
      "|java+method:///org/powertac/server/CompetitionControlService/setTimeParameters()|",
      "|java+method:///org/powertac/common/repo/TimeslotRepo/count()|",
      "|java+method:///org/powertac/server/CompetitionControlService/configurePlugins()|",
      "|java+method:///org/powertac/common/Competition/getMinimumTimeslotCount()|",
      "|java+method:///org/powertac/common/Competition/getBootstrapTimeslotCount()|",
      "|java+method:///org/powertac/server/CompetitionControlService/waitForBrokerLogin()|",
      "|java+method:///org/powertac/common/repo/TimeslotRepo/enabledTimeslots()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/broadcastDeferredMessages()|",
      "|java+method:///org/powertac/common/repo/CustomerRepo/list()|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/broadcastMessages(java.util.List)|",
      "|java+constructor:///org/powertac/common/msg/TimeslotUpdate/TimeslotUpdate(org.joda.time.Instant,java.util.List)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/powertac/common/Competition/addBroker(java.lang.String)|",
      "|java+method:///org/powertac/server/ServerPropertiesService/getPublishedConfiguration()|",
      "|java+method:///org/powertac/common/Competition/getExpectedTimeslotCount()|",
      "|java+method:///org/powertac/common/repo/BrokerRepo/findRetailBrokerNames()|",
      "|java+method:///org/powertac/common/Competition/getTimeslotsOpen()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/powertac/common/repo/RandomSeedRepo/getRandomSeed(java.lang.String,long,java.lang.String)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/powertac/common/Competition/getBootstrapDiscardedTimeslots()|",
      "|java+method:///org/powertac/common/Competition/addCustomer(org.powertac.common.CustomerInfo)|",
      "|java+method:///org/powertac/common/Competition/getDeactivateTimeslotsAhead()|"
    ],
    "affectedLib": "org.powertac:genco:0.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.powertac:server-main:0.1.0",
    "coordinatesV2": "org.powertac:server-main:0.2.0",
    "caller": "|java+method:///org/powertac/server/WeatherService/webRequest(org.powertac.common.Timeslot,int)|",
    "called": "|java+method:///org/powertac/common/repo/WeatherReportRepo/add(org.powertac.common.WeatherReport)|",
    "v1Body": [
      "|java+method:///java/io/BufferedReader/close()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/net/URL/openConnection()|",
      "|java+constructor:///org/powertac/common/WeatherForecast/WeatherForecast(org.powertac.common.Timeslot,java.util.List)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///java/lang/String/compareTo(java.lang.String)|",
      "|java+constructor:///java/net/URL/URL(java.lang.String)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/net/URLConnection/getInputStream()|",
      "|java+method:///java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)|",
      "|java+method:///java/lang/Exception/toString()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/log4j/Logger/error(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/powertac/common/repo/WeatherForecastRepo/add(org.powertac.common.WeatherForecast)|",
      "|java+constructor:///org/powertac/common/WeatherForecastPrediction/WeatherForecastPrediction(int,double,double,double,double)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///%5BLjava/lang/String;/clone()|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/powertac/common/Timeslot/getNext()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/powertac/common/repo/WeatherReportRepo/add(org.powertac.common.WeatherReport)|",
      "|java+constructor:///java/io/InputStreamReader/InputStreamReader(java.io.InputStream)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///java/io/BufferedReader/BufferedReader(java.io.Reader)|",
      "|java+method:///java/io/BufferedReader/readLine()|",
      "|java+constructor:///org/powertac/common/WeatherReport/WeatherReport(org.powertac.common.Timeslot,double,double,double,double)|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "v2Body": [
      "|java+method:///java/io/BufferedReader/close()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/net/URL/openConnection()|",
      "|java+constructor:///org/powertac/common/WeatherForecast/WeatherForecast(org.powertac.common.Timeslot,java.util.List)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///org/powertac/server/WeatherService/getServerUrl()|",
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///java/lang/String/compareTo(java.lang.String)|",
      "|java+constructor:///java/net/URL/URL(java.lang.String)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/net/URLConnection/getInputStream()|",
      "|java+method:///java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)|",
      "|java+method:///java/lang/Exception/toString()|",
      "|java+method:///org/apache/log4j/Logger/error(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/powertac/common/repo/WeatherForecastRepo/add(org.powertac.common.WeatherForecast)|",
      "|java+constructor:///org/powertac/common/WeatherForecastPrediction/WeatherForecastPrediction(int,double,double,double,double)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/powertac/server/WeatherService/getWeatherReqInterval()|",
      "|java+method:///%5BLjava/lang/String;/clone()|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/powertac/common/Timeslot/getNext()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/powertac/common/repo/WeatherReportRepo/add(org.powertac.common.WeatherReport)|",
      "|java+constructor:///java/io/InputStreamReader/InputStreamReader(java.io.InputStream)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///java/io/BufferedReader/BufferedReader(java.io.Reader)|",
      "|java+method:///java/io/BufferedReader/readLine()|",
      "|java+constructor:///org/powertac/common/WeatherReport/WeatherReport(org.powertac.common.Timeslot,double,double,double,double)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/powertac/server/WeatherService/getForecastHorizon()|"
    ],
    "affectedLib": "org.powertac:genco:0.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.powertac:server-main:0.1.0",
    "coordinatesV2": "org.powertac:server-main:0.2.0",
    "caller": "|java+method:///org/powertac/server/BrokerProxyService/localSendMessage(org.powertac.common.Broker,java.lang.Object)|",
    "called": "|java+method:///org/powertac/common/Broker/toQueueName()|",
    "v1Body": [
      "|java+constructor:///org/powertac/server/BrokerProxyService$1/BrokerProxyService$1(org.powertac.server.BrokerProxyService,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/powertac/common/Broker/isEnabled()|",
      "|java+method:///org/powertac/common/Broker/receiveMessage(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/powertac/common/XMLMessageConverter/toXML(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///org/springframework/jms/core/JmsTemplate/send(java.lang.String,org.springframework.jms.core.MessageCreator)|",
      "|java+method:///org/powertac/common/Broker/isLocal()|",
      "|java+method:///org/powertac/common/Broker/toQueueName()|"
    ],
    "v2Body": [
      "|java+constructor:///org/powertac/server/BrokerProxyService$1/BrokerProxyService$1(org.powertac.server.BrokerProxyService,java.lang.String)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/springframework/jms/core/JmsTemplate/send(java.lang.String,org.springframework.jms.core.MessageCreator)|",
      "|java+method:///org/powertac/common/Broker/isEnabled()|",
      "|java+method:///org/powertac/common/Broker/receiveMessage(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/powertac/common/XMLMessageConverter/toXML(java.lang.Object)|",
      "|java+method:///org/apache/log4j/Logger/error(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/log4j/Logger/warn(java.lang.Object)|",
      "|java+method:///org/powertac/common/Broker/getUsername()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/log4j/Logger/debug(java.lang.Object)|",
      "|java+method:///org/powertac/common/Broker/isLocal()|",
      "|java+method:///org/powertac/common/Broker/toQueueName()|"
    ],
    "affectedLib": "org.powertac:genco:0.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.powertac:server-main:0.1.0",
    "coordinatesV2": "org.powertac:server-main:0.2.0",
    "caller": "|java+method:///org/powertac/server/BrokerProxyService/localSendMessage(org.powertac.common.Broker,java.lang.Object)|",
    "called": "|java+method:///org/springframework/jms/core/JmsTemplate/send(java.lang.String,org.springframework.jms.core.MessageCreator)|",
    "v1Body": [
      "|java+constructor:///org/powertac/server/BrokerProxyService$1/BrokerProxyService$1(org.powertac.server.BrokerProxyService,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/powertac/common/Broker/isEnabled()|",
      "|java+method:///org/powertac/common/Broker/receiveMessage(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/powertac/common/XMLMessageConverter/toXML(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///org/springframework/jms/core/JmsTemplate/send(java.lang.String,org.springframework.jms.core.MessageCreator)|",
      "|java+method:///org/powertac/common/Broker/isLocal()|",
      "|java+method:///org/powertac/common/Broker/toQueueName()|"
    ],
    "v2Body": [
      "|java+constructor:///org/powertac/server/BrokerProxyService$1/BrokerProxyService$1(org.powertac.server.BrokerProxyService,java.lang.String)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/springframework/jms/core/JmsTemplate/send(java.lang.String,org.springframework.jms.core.MessageCreator)|",
      "|java+method:///org/powertac/common/Broker/isEnabled()|",
      "|java+method:///org/powertac/common/Broker/receiveMessage(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/powertac/common/XMLMessageConverter/toXML(java.lang.Object)|",
      "|java+method:///org/apache/log4j/Logger/error(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/log4j/Logger/warn(java.lang.Object)|",
      "|java+method:///org/powertac/common/Broker/getUsername()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/log4j/Logger/debug(java.lang.Object)|",
      "|java+method:///org/powertac/common/Broker/isLocal()|",
      "|java+method:///org/powertac/common/Broker/toQueueName()|"
    ],
    "affectedLib": "org.springframework:spring-jms:3.1.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.powertac:server-main:0.1.0",
    "coordinatesV2": "org.powertac:server-main:0.2.0",
    "caller": "|java+method:///org/powertac/server/CompetitionControlService/configurePlugins()|",
    "called": "|java+method:///org/powertac/common/spring/SpringApplicationContext/listBeansOfType(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/springframework/context/ApplicationContext/getBeansOfType(java.lang.Class)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/ArrayList/add(java.lang.Object)|",
      "|java+method:///java/util/ArrayList/size()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/clear()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/apache/log4j/Logger/error(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/remove(int)|",
      "|java+method:///org/powertac/common/interfaces/InitializationService/initialize(org.powertac.common.Competition,java.util.List)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/powertac/common/interfaces/InitializationService/initialize(org.powertac.common.Competition,java.util.List)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/ArrayList/add(java.lang.Object)|",
      "|java+method:///java/util/ArrayList/size()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/clear()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/log4j/Logger/error(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/powertac/common/spring/SpringApplicationContext/listBeansOfType(java.lang.Class)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/remove(int)|"
    ],
    "affectedLib": "org.powertac:common:0.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.powertac:server-main:0.1.0",
    "coordinatesV2": "org.powertac:server-main:0.2.0",
    "caller": "|java+method:///org/powertac/server/ServerMessageReceiver/onMessage(java.lang.String)|",
    "called": "|java+method:///org/powertac/common/XMLMessageConverter/fromXML(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/Class/getSimpleName()|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/routeMessage(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/powertac/common/XMLMessageConverter/fromXML(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Class/getSimpleName()|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/routeMessage(java.lang.Object)|",
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/log4j/Logger/debug(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/powertac/common/XMLMessageConverter/fromXML(java.lang.String)|"
    ],
    "affectedLib": "org.powertac:common:0.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.powertac:server-main:0.1.0",
    "coordinatesV2": "org.powertac:server-main:0.2.0",
    "caller": "|java+method:///org/powertac/server/WeatherService/activate(org.joda.time.Instant,int)|",
    "called": "|java+method:///org/powertac/common/repo/WeatherReportRepo/currentWeatherReport()|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///org/joda/time/Instant/getMillis()|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/broadcastMessage(java.lang.Object)|",
      "|java+method:///org/powertac/server/WeatherService/webRequest(org.powertac.common.Timeslot,int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/powertac/common/Timeslot/getId()|",
      "|java+method:///org/powertac/common/repo/TimeslotRepo/currentTimeslot()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/powertac/common/repo/WeatherForecastRepo/currentWeatherForecast()|",
      "|java+method:///org/powertac/common/repo/WeatherReportRepo/currentWeatherReport()|",
      "|java+method:///java/lang/StringBuilder/append(boolean)|",
      "|java+method:///java/lang/StringBuilder/append(long)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/broadcastMessage(java.lang.Object)|",
      "|java+method:///org/powertac/server/WeatherService/webRequest(org.powertac.common.Timeslot,int)|",
      "|java+method:///org/powertac/server/WeatherService/isBlocking()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/powertac/common/Timeslot/getId()|",
      "|java+method:///org/powertac/common/repo/TimeslotRepo/currentTimeslot()|",
      "|java+method:///org/apache/log4j/Logger/error(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/joda/time/Instant/getMillis()|",
      "|java+method:///org/powertac/server/WeatherService/getWeatherReqInterval()|",
      "|java+method:///org/powertac/common/repo/WeatherForecastRepo/currentWeatherForecast()|",
      "|java+method:///org/powertac/common/repo/WeatherReportRepo/currentWeatherReport()|",
      "|java+method:///java/lang/StringBuilder/append(boolean)|",
      "|java+method:///java/lang/StringBuilder/append(long)|"
    ],
    "affectedLib": "org.powertac:common:0.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.powertac:server-main:0.1.0",
    "coordinatesV2": "org.powertac:server-main:0.2.0",
    "caller": "|java+method:///org/powertac/server/CompetitionControlService/setup()|",
    "called": "|java+method:///org/powertac/common/repo/TimeslotRepo/enabledTimeslots()|",
    "v1Body": [
      "|java+method:///org/powertac/common/TimeService/getCurrentTime()|",
      "|java+method:///org/powertac/server/CompetitionControlService/configurePlugins()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/broadcastDeferredMessages()|",
      "|java+method:///org/powertac/common/Competition/getId()|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/broadcastMessage(java.lang.Object)|",
      "|java+method:///org/powertac/server/CompetitionControlService/createInitialTimeslots(org.joda.time.Instant,int,int)|",
      "|java+method:///org/powertac/server/CompetitionControlService/computeGameLength(int,int)|",
      "|java+method:///org/apache/log4j/Logger/error(java.lang.Object)|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/setDeferredBroadcast(boolean)|",
      "|java+method:///org/powertac/server/CompetitionControlService/setTimeParameters()|",
      "|java+method:///org/powertac/common/Competition/getMinimumTimeslotCount()|",
      "|java+method:///org/powertac/common/Competition/getBootstrapTimeslotCount()|",
      "|java+method:///org/powertac/server/CompetitionControlService/waitForBrokerLogin()|",
      "|java+method:///org/powertac/common/repo/TimeslotRepo/enabledTimeslots()|",
      "|java+method:///org/powertac/common/repo/CustomerRepo/list()|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/broadcastMessages(java.util.List)|",
      "|java+constructor:///org/powertac/common/msg/TimeslotUpdate/TimeslotUpdate(org.joda.time.Instant,java.util.List)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/powertac/common/Competition/addBroker(java.lang.String)|",
      "|java+method:///org/powertac/common/Competition/getExpectedTimeslotCount()|",
      "|java+method:///org/powertac/common/repo/PluginConfigRepo/findAllPublic()|",
      "|java+method:///org/powertac/common/repo/BrokerRepo/findRetailBrokerNames()|",
      "|java+method:///org/powertac/common/Competition/getTimeslotsOpen()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/powertac/common/repo/RandomSeedRepo/getRandomSeed(java.lang.String,long,java.lang.String)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/powertac/common/Competition/addCustomer(org.powertac.common.CustomerInfo)|",
      "|java+method:///org/powertac/common/Competition/getDeactivateTimeslotsAhead()|"
    ],
    "v2Body": [
      "|java+method:///org/powertac/common/TimeService/getCurrentTime()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/powertac/common/Competition/getId()|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/broadcastMessage(java.lang.Object)|",
      "|java+method:///org/powertac/server/CompetitionControlService/createInitialTimeslots(org.joda.time.Instant,int,int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/powertac/common/Competition/getSimulationBaseTime()|",
      "|java+method:///org/powertac/server/CompetitionControlService/computeGameLength(int,int)|",
      "|java+method:///org/apache/log4j/Logger/error(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/setDeferredBroadcast(boolean)|",
      "|java+method:///org/powertac/server/CompetitionControlService/setTimeParameters()|",
      "|java+method:///org/powertac/common/repo/TimeslotRepo/count()|",
      "|java+method:///org/powertac/server/CompetitionControlService/configurePlugins()|",
      "|java+method:///org/powertac/common/Competition/getMinimumTimeslotCount()|",
      "|java+method:///org/powertac/common/Competition/getBootstrapTimeslotCount()|",
      "|java+method:///org/powertac/server/CompetitionControlService/waitForBrokerLogin()|",
      "|java+method:///org/powertac/common/repo/TimeslotRepo/enabledTimeslots()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/broadcastDeferredMessages()|",
      "|java+method:///org/powertac/common/repo/CustomerRepo/list()|",
      "|java+method:///org/powertac/common/interfaces/BrokerProxy/broadcastMessages(java.util.List)|",
      "|java+constructor:///org/powertac/common/msg/TimeslotUpdate/TimeslotUpdate(org.joda.time.Instant,java.util.List)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/powertac/common/Competition/addBroker(java.lang.String)|",
      "|java+method:///org/powertac/server/ServerPropertiesService/getPublishedConfiguration()|",
      "|java+method:///org/powertac/common/Competition/getExpectedTimeslotCount()|",
      "|java+method:///org/powertac/common/repo/BrokerRepo/findRetailBrokerNames()|",
      "|java+method:///org/powertac/common/Competition/getTimeslotsOpen()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/powertac/common/repo/RandomSeedRepo/getRandomSeed(java.lang.String,long,java.lang.String)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/powertac/common/Competition/getBootstrapDiscardedTimeslots()|",
      "|java+method:///org/powertac/common/Competition/addCustomer(org.powertac.common.CustomerInfo)|",
      "|java+method:///org/powertac/common/Competition/getDeactivateTimeslotsAhead()|"
    ],
    "affectedLib": "org.powertac:common:0.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.powertac:server-main:0.1.0",
    "coordinatesV2": "org.powertac:server-main:0.2.0",
    "caller": "|java+method:///org/powertac/server/WeatherService/webRequest(org.powertac.common.Timeslot,int)|",
    "called": "|java+method:///org/powertac/common/repo/WeatherReportRepo/add(org.powertac.common.WeatherReport)|",
    "v1Body": [
      "|java+method:///java/io/BufferedReader/close()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/net/URL/openConnection()|",
      "|java+constructor:///org/powertac/common/WeatherForecast/WeatherForecast(org.powertac.common.Timeslot,java.util.List)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///java/lang/String/compareTo(java.lang.String)|",
      "|java+constructor:///java/net/URL/URL(java.lang.String)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/net/URLConnection/getInputStream()|",
      "|java+method:///java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)|",
      "|java+method:///java/lang/Exception/toString()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/log4j/Logger/error(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/powertac/common/repo/WeatherForecastRepo/add(org.powertac.common.WeatherForecast)|",
      "|java+constructor:///org/powertac/common/WeatherForecastPrediction/WeatherForecastPrediction(int,double,double,double,double)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///%5BLjava/lang/String;/clone()|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/powertac/common/Timeslot/getNext()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/powertac/common/repo/WeatherReportRepo/add(org.powertac.common.WeatherReport)|",
      "|java+constructor:///java/io/InputStreamReader/InputStreamReader(java.io.InputStream)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///java/io/BufferedReader/BufferedReader(java.io.Reader)|",
      "|java+method:///java/io/BufferedReader/readLine()|",
      "|java+constructor:///org/powertac/common/WeatherReport/WeatherReport(org.powertac.common.Timeslot,double,double,double,double)|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "v2Body": [
      "|java+method:///java/io/BufferedReader/close()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/net/URL/openConnection()|",
      "|java+constructor:///org/powertac/common/WeatherForecast/WeatherForecast(org.powertac.common.Timeslot,java.util.List)|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///org/powertac/server/WeatherService/getServerUrl()|",
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///java/lang/String/compareTo(java.lang.String)|",
      "|java+constructor:///java/net/URL/URL(java.lang.String)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/net/URLConnection/getInputStream()|",
      "|java+method:///java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)|",
      "|java+method:///java/lang/Exception/toString()|",
      "|java+method:///org/apache/log4j/Logger/error(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/powertac/common/repo/WeatherForecastRepo/add(org.powertac.common.WeatherForecast)|",
      "|java+constructor:///org/powertac/common/WeatherForecastPrediction/WeatherForecastPrediction(int,double,double,double,double)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/powertac/server/WeatherService/getWeatherReqInterval()|",
      "|java+method:///%5BLjava/lang/String;/clone()|",
      "|java+method:///java/lang/Double/parseDouble(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/powertac/common/Timeslot/getNext()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/powertac/common/repo/WeatherReportRepo/add(org.powertac.common.WeatherReport)|",
      "|java+constructor:///java/io/InputStreamReader/InputStreamReader(java.io.InputStream)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///java/io/BufferedReader/BufferedReader(java.io.Reader)|",
      "|java+method:///java/io/BufferedReader/readLine()|",
      "|java+constructor:///org/powertac/common/WeatherReport/WeatherReport(org.powertac.common.Timeslot,double,double,double,double)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/powertac/server/WeatherService/getForecastHorizon()|"
    ],
    "affectedLib": "org.powertac:common:0.2.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.powertac:server-main:0.1.0",
    "coordinatesV2": "org.powertac:server-main:0.2.0",
    "caller": "|java+method:///org/powertac/server/BrokerProxyService/localSendMessage(org.powertac.common.Broker,java.lang.Object)|",
    "called": "|java+method:///org/powertac/common/Broker/toQueueName()|",
    "v1Body": [
      "|java+constructor:///org/powertac/server/BrokerProxyService$1/BrokerProxyService$1(org.powertac.server.BrokerProxyService,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/powertac/common/Broker/isEnabled()|",
      "|java+method:///org/powertac/common/Broker/receiveMessage(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/powertac/common/XMLMessageConverter/toXML(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/log4j/Logger/info(java.lang.Object)|",
      "|java+method:///org/springframework/jms/core/JmsTemplate/send(java.lang.String,org.springframework.jms.core.MessageCreator)|",
      "|java+method:///org/powertac/common/Broker/isLocal()|",
      "|java+method:///org/powertac/common/Broker/toQueueName()|"
    ],
    "v2Body": [
      "|java+constructor:///org/powertac/server/BrokerProxyService$1/BrokerProxyService$1(org.powertac.server.BrokerProxyService,java.lang.String)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/springframework/jms/core/JmsTemplate/send(java.lang.String,org.springframework.jms.core.MessageCreator)|",
      "|java+method:///org/powertac/common/Broker/isEnabled()|",
      "|java+method:///org/powertac/common/Broker/receiveMessage(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/powertac/common/XMLMessageConverter/toXML(java.lang.Object)|",
      "|java+method:///org/apache/log4j/Logger/error(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/log4j/Logger/warn(java.lang.Object)|",
      "|java+method:///org/powertac/common/Broker/getUsername()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/log4j/Logger/debug(java.lang.Object)|",
      "|java+method:///org/powertac/common/Broker/isLocal()|",
      "|java+method:///org/powertac/common/Broker/toQueueName()|"
    ],
    "affectedLib": "org.powertac:common:0.2.0",
    "change": "UPDATED"
  }
]