[
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.2.3",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.2.4",
    "caller": "|java+initializer:///org/apache/cassandra/streaming/StreamReceiveTask/StreamReceiveTask$initializer|",
    "called": "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
    "v1Body": [
      "|java+method:///java/lang/Class/desiredAssertionStatus()|",
      "|java+method:///java/util/concurrent/Executors/newCachedThreadPool(java.util.concurrent.ThreadFactory)|",
      "|java+constructor:///org/apache/cassandra/concurrent/NamedThreadFactory/NamedThreadFactory(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+method:///java/lang/Class/desiredAssertionStatus()|",
      "|java+method:///java/util/concurrent/Executors/newCachedThreadPool(java.util.concurrent.ThreadFactory)|",
      "|java+constructor:///org/apache/cassandra/concurrent/NamedThreadFactory/NamedThreadFactory(java.lang.String)|"
    ],
    "affectedLib": "org.slf4j:slf4j-api:1.7.7",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.2.3",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.2.4",
    "caller": "|java+initializer:///org/apache/cassandra/locator/GossipingPropertyFileSnitch/GossipingPropertyFileSnitch$initializer|",
    "called": "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+method:///java/lang/Class/desiredAssertionStatus()|"
    ],
    "affectedLib": "org.slf4j:slf4j-api:1.7.7",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.2.3",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.2.4",
    "caller": "|java+initializer:///org/apache/cassandra/service/StartupChecks/StartupChecks$initializer|",
    "called": "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///org/apache/cassandra/service/StartupChecks$1/StartupChecks$1()|",
      "|java+constructor:///org/apache/cassandra/service/StartupChecks$2/StartupChecks$2()|",
      "|java+constructor:///org/apache/cassandra/service/StartupChecks$3/StartupChecks$3()|",
      "|java+constructor:///org/apache/cassandra/service/StartupChecks$4/StartupChecks$4()|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+constructor:///org/apache/cassandra/service/StartupChecks$5/StartupChecks$5()|",
      "|java+constructor:///org/apache/cassandra/service/StartupChecks$6/StartupChecks$6()|",
      "|java+constructor:///org/apache/cassandra/service/StartupChecks$7/StartupChecks$7()|",
      "|java+constructor:///org/apache/cassandra/service/StartupChecks$8/StartupChecks$8()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/cassandra/service/StartupChecks$1/StartupChecks$1()|",
      "|java+constructor:///org/apache/cassandra/service/StartupChecks$2/StartupChecks$2()|",
      "|java+constructor:///org/apache/cassandra/service/StartupChecks$3/StartupChecks$3()|",
      "|java+constructor:///org/apache/cassandra/service/StartupChecks$4/StartupChecks$4()|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+constructor:///org/apache/cassandra/service/StartupChecks$5/StartupChecks$5()|",
      "|java+constructor:///org/apache/cassandra/service/StartupChecks$6/StartupChecks$6()|",
      "|java+constructor:///org/apache/cassandra/service/StartupChecks$7/StartupChecks$7()|",
      "|java+constructor:///org/apache/cassandra/service/StartupChecks$8/StartupChecks$8()|",
      "|java+constructor:///org/apache/cassandra/service/StartupChecks$9/StartupChecks$9()|"
    ],
    "affectedLib": "org.slf4j:slf4j-api:1.7.7",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.2.3",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.2.4",
    "caller": "|java+constructor:///org/apache/cassandra/service/StartupChecks/StartupChecks()|",
    "called": "|java+method:///com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "com.google.guava:guava:16.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.2.3",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.2.4",
    "caller": "|java+method:///org/apache/cassandra/db/compaction/Scrubber/scrub()|",
    "called": "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/db/compaction/Scrubber/saveOutOfOrderRow(org.apache.cassandra.db.DecoratedKey,org.apache.cassandra.db.DecoratedKey,org.apache.cassandra.io.sstable.SSTableIdentityIterator)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError(long)|",
      "|java+method:///org/apache/cassandra/io/util/RandomAccessReader/length()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableRewriter/tryAppend(org.apache.cassandra.db.compaction.AbstractCompactedRow)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///org/apache/cassandra/io/sstable/format/SSTableWriter/finish(long,long,boolean)|",
      "|java+method:///org/apache/cassandra/db/compaction/Scrubber/seekToNextRow()|",
      "|java+method:///org/apache/cassandra/db/compaction/CompactionController/close()|",
      "|java+method:///java/nio/ByteBuffer/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/db/compaction/Scrubber$ScrubInfo/getCompactionInfo()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/lifecycle/LifecycleTransaction/update(org.apache.cassandra.io.sstable.format.SSTableReader,boolean)|",
      "|java+method:///java/util/SortedSet/size()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/db/compaction/Scrubber/throwIfFatal(java.lang.Throwable)|",
      "|java+constructor:///org/apache/cassandra/io/sstable/SSTableRewriter/SSTableRewriter(org.apache.cassandra.db.ColumnFamilyStore,org.apache.cassandra.db.lifecycle.LifecycleTransaction,long,boolean)|",
      "|java+constructor:///org/apache/cassandra/db/compaction/LazilyCompactedRow/LazilyCompactedRow(org.apache.cassandra.db.compaction.CompactionController,java.util.List)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/apache/cassandra/utils/OutputHandler/debug(java.lang.String)|",
      "|java+method:///org/apache/cassandra/io/util/RandomAccessReader/getFilePointer()|",
      "|java+method:///org/apache/cassandra/db/compaction/Scrubber/updateIndexKey()|",
      "|java+method:///org/apache/cassandra/io/util/RandomAccessReader/isEOF()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/readWithShortLength(java.io.DataInput)|",
      "|java+method:///org/apache/cassandra/db/compaction/Scrubber/indexAvailable()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/apache/cassandra/io/sstable/format/SSTableReader/getSSTableMetadata()|",
      "|java+constructor:///java/io/IOError/IOError(java.lang.Throwable)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableRewriter/close()|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/decorateKey(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/db/DecoratedKey/compareTo(org.apache.cassandra.db.RowPosition)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/SortedSet/iterator()|",
      "|java+constructor:///org/apache/cassandra/db/compaction/CompactionInterruptedException/CompactionInterruptedException(org.apache.cassandra.db.compaction.CompactionInfo)|",
      "|java+method:///java/nio/ByteBuffer/remaining()|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableRewriter/switchWriter(org.apache.cassandra.io.sstable.format.SSTableWriter)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/db/compaction/Scrubber/throwIfCannotContinue(org.apache.cassandra.db.DecoratedKey,java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableRewriter/finish()|",
      "|java+method:///java/util/SortedSet/isEmpty()|",
      "|java+method:///org/apache/cassandra/db/DecoratedKey/getKey()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/cassandra/utils/OutputHandler/output(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/io/sstable/SSTableIdentityIterator/SSTableIdentityIterator(org.apache.cassandra.io.sstable.format.SSTableReader,org.apache.cassandra.io.util.RandomAccessReader,org.apache.cassandra.db.DecoratedKey,boolean)|",
      "|java+method:///org/apache/cassandra/io/sstable/format/SSTableWriter/close()|",
      "|java+method:///org/apache/cassandra/io/sstable/format/SSTableWriter/append(org.apache.cassandra.db.DecoratedKey,org.apache.cassandra.db.ColumnFamily)|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableRewriter/setRepairedAt(long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/io/util/RandomAccessReader/seek(long)|",
      "|java+method:///org/apache/cassandra/db/RowIndexEntry$IndexSerializer/deserialize(java.io.DataInput,org.apache.cassandra.io.sstable.format.Version)|",
      "|java+method:///org/apache/cassandra/db/compaction/CompactionManager/createWriter(org.apache.cassandra.db.ColumnFamilyStore,java.io.File,long,long,org.apache.cassandra.io.sstable.format.SSTableReader)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/cassandra/utils/OutputHandler/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/db/compaction/Scrubber$ScrubInfo/isStopRequested()|",
      "|java+method:///org/apache/cassandra/utils/OutputHandler/warn(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/bytesToHex(java.nio.ByteBuffer)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/db/compaction/Scrubber/saveOutOfOrderRow(org.apache.cassandra.db.DecoratedKey,org.apache.cassandra.db.DecoratedKey,org.apache.cassandra.io.sstable.SSTableIdentityIterator)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError(long)|",
      "|java+method:///org/apache/cassandra/io/util/RandomAccessReader/length()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableRewriter/tryAppend(org.apache.cassandra.db.compaction.AbstractCompactedRow)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///org/apache/cassandra/db/compaction/Scrubber/seekToNextRow()|",
      "|java+method:///java/nio/ByteBuffer/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/db/compaction/Scrubber$ScrubInfo/getCompactionInfo()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/lifecycle/LifecycleTransaction/update(org.apache.cassandra.io.sstable.format.SSTableReader,boolean)|",
      "|java+method:///java/util/SortedSet/size()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/db/compaction/Scrubber/throwIfFatal(java.lang.Throwable)|",
      "|java+constructor:///org/apache/cassandra/io/sstable/SSTableRewriter/SSTableRewriter(org.apache.cassandra.db.ColumnFamilyStore,org.apache.cassandra.db.lifecycle.LifecycleTransaction,long,boolean)|",
      "|java+constructor:///org/apache/cassandra/db/compaction/LazilyCompactedRow/LazilyCompactedRow(org.apache.cassandra.db.compaction.CompactionController,java.util.List)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/apache/cassandra/utils/OutputHandler/debug(java.lang.String)|",
      "|java+method:///org/apache/cassandra/io/util/RandomAccessReader/getFilePointer()|",
      "|java+method:///org/apache/cassandra/db/compaction/Scrubber/updateIndexKey()|",
      "|java+method:///org/apache/cassandra/io/util/RandomAccessReader/isEOF()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/readWithShortLength(java.io.DataInput)|",
      "|java+method:///org/apache/cassandra/db/compaction/Scrubber/indexAvailable()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/apache/cassandra/io/sstable/format/SSTableReader/getSSTableMetadata()|",
      "|java+constructor:///java/io/IOError/IOError(java.lang.Throwable)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableRewriter/close()|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/decorateKey(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/db/DecoratedKey/compareTo(org.apache.cassandra.db.RowPosition)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/SortedSet/iterator()|",
      "|java+constructor:///org/apache/cassandra/db/compaction/CompactionInterruptedException/CompactionInterruptedException(org.apache.cassandra.db.compaction.CompactionInfo)|",
      "|java+method:///java/nio/ByteBuffer/remaining()|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableRewriter/switchWriter(org.apache.cassandra.io.sstable.format.SSTableWriter)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/db/compaction/Scrubber/throwIfCannotContinue(org.apache.cassandra.db.DecoratedKey,java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableRewriter/finish()|",
      "|java+method:///java/util/SortedSet/isEmpty()|",
      "|java+method:///org/apache/cassandra/io/sstable/format/SSTableWriter/finish(long,long,boolean)|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableIdentityIterator/createFragmentIterator(org.apache.cassandra.io.sstable.format.SSTableReader,org.apache.cassandra.io.util.RandomAccessReader,org.apache.cassandra.db.DecoratedKey,long,boolean)|",
      "|java+method:///org/apache/cassandra/db/DecoratedKey/getKey()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/cassandra/utils/OutputHandler/output(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/io/sstable/SSTableIdentityIterator/SSTableIdentityIterator(org.apache.cassandra.io.sstable.format.SSTableReader,org.apache.cassandra.io.util.RandomAccessReader,org.apache.cassandra.db.DecoratedKey,boolean)|",
      "|java+method:///org/apache/cassandra/io/sstable/format/SSTableWriter/close()|",
      "|java+method:///org/apache/cassandra/io/sstable/format/SSTableWriter/append(org.apache.cassandra.db.DecoratedKey,org.apache.cassandra.db.ColumnFamily)|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableRewriter/setRepairedAt(long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/io/util/RandomAccessReader/seek(long)|",
      "|java+method:///org/apache/cassandra/db/compaction/CompactionController/close()|",
      "|java+method:///org/apache/cassandra/db/compaction/Scrubber/saveOutOfOrderRow(org.apache.cassandra.db.DecoratedKey,org.apache.cassandra.io.sstable.SSTableIdentityIterator,java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/RowIndexEntry$IndexSerializer/deserialize(java.io.DataInput,org.apache.cassandra.io.sstable.format.Version)|",
      "|java+method:///org/apache/cassandra/db/compaction/CompactionManager/createWriter(org.apache.cassandra.db.ColumnFamilyStore,java.io.File,long,long,org.apache.cassandra.io.sstable.format.SSTableReader)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/cassandra/utils/OutputHandler/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/db/compaction/Scrubber$ScrubInfo/isStopRequested()|",
      "|java+method:///org/apache/cassandra/utils/OutputHandler/warn(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/bytesToHex(java.nio.ByteBuffer)|"
    ],
    "affectedLib": "com.google.guava:guava:16.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.2.3",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.2.4",
    "caller": "|java+method:///org/apache/cassandra/db/compaction/DateTieredCompactionStrategy/getCompactionCandidates(java.lang.Iterable,long,int)|",
    "called": "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Iterable)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/db/compaction/DateTieredCompactionStrategy/filterOldSSTables(java.util.List,long,long)|",
      "|java+method:///org/apache/cassandra/db/compaction/DateTieredCompactionStrategy/getBuckets(java.util.Collection,long,int,long)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Iterable)|",
      "|java+method:///org/apache/cassandra/db/compaction/DateTieredCompactionStrategy/updateEstimatedCompactionsByTasks(java.util.List)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/getMinimumCompactionThreshold()|",
      "|java+method:///org/apache/cassandra/db/compaction/DateTieredCompactionStrategy/createSSTableAndMinTimestampPairs(java.lang.Iterable)|",
      "|java+method:///org/slf4j/Logger/trace(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/db/compaction/DateTieredCompactionStrategy/newestBucket(java.util.List,int,int,long,long)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/getMaximumCompactionThreshold()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/db/compaction/DateTieredCompactionStrategy/filterOldSSTables(java.util.List,long,long)|",
      "|java+method:///org/apache/cassandra/db/compaction/DateTieredCompactionStrategy/newestBucket(java.util.List,int,int,long,long,long,org.apache.cassandra.db.compaction.SizeTieredCompactionStrategyOptions)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Iterable)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/db/compaction/DateTieredCompactionStrategy/updateEstimatedCompactionsByTasks(java.util.List)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/getMinimumCompactionThreshold()|",
      "|java+method:///org/apache/cassandra/db/compaction/DateTieredCompactionStrategy/createSSTableAndMinTimestampPairs(java.lang.Iterable)|",
      "|java+method:///org/apache/cassandra/db/compaction/DateTieredCompactionStrategy/getBuckets(java.util.Collection,long,int,long,long)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/getMaximumCompactionThreshold()|"
    ],
    "affectedLib": "com.google.guava:guava:16.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.2.3",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.2.4",
    "caller": "|java+method:///org/apache/cassandra/gms/Gossiper/advertiseRemoving(java.net.InetAddress,java.util.UUID,java.util.UUID)|",
    "called": "|java+method:///com/google/common/util/concurrent/Uninterruptibles/sleepUninterruptibly(long,java.util.concurrent.TimeUnit)|",
    "v1Body": [
      "|java+method:///com/google/common/util/concurrent/Uninterruptibles/sleepUninterruptibly(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///org/apache/cassandra/gms/HeartBeatState/getGeneration()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///java/util/concurrent/ConcurrentMap/get(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/cassandra/gms/VersionedValue$VersionedValueFactory/removingNonlocal(java.util.UUID)|",
      "|java+method:///org/apache/cassandra/gms/VersionedValue$VersionedValueFactory/removalCoordinator(java.util.UUID)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/gms/EndpointState/addApplicationState(org.apache.cassandra.gms.ApplicationState,org.apache.cassandra.gms.VersionedValue)|",
      "|java+method:///org/apache/cassandra/gms/EndpointState/getHeartBeatState()|",
      "|java+method:///java/util/concurrent/ConcurrentMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/gms/EndpointState/updateTimestamp()|",
      "|java+method:///org/apache/cassandra/gms/HeartBeatState/forceNewerGenerationUnsafe()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/EnumMap/EnumMap(java.lang.Class)|",
      "|java+method:///org/apache/cassandra/gms/EndpointState/addApplicationStates(java.util.Map)|",
      "|java+method:///com/google/common/util/concurrent/Uninterruptibles/sleepUninterruptibly(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///org/apache/cassandra/gms/HeartBeatState/getGeneration()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///java/util/concurrent/ConcurrentMap/get(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/cassandra/gms/VersionedValue$VersionedValueFactory/removingNonlocal(java.util.UUID)|",
      "|java+method:///org/apache/cassandra/gms/VersionedValue$VersionedValueFactory/removalCoordinator(java.util.UUID)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/gms/EndpointState/getHeartBeatState()|",
      "|java+method:///java/util/concurrent/ConcurrentMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/gms/EndpointState/updateTimestamp()|",
      "|java+method:///org/apache/cassandra/gms/HeartBeatState/forceNewerGenerationUnsafe()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|"
    ],
    "affectedLib": "com.google.guava:guava:16.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.2.3",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.2.4",
    "caller": "|java+method:///org/apache/cassandra/streaming/compress/CompressedStreamReader/read(java.nio.channels.ReadableByteChannel)|",
    "called": "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/utils/BytesReadTracker/getBytesRead()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/apache/cassandra/streaming/compress/CompressedStreamReader/writeRow(org.apache.cassandra.io.sstable.format.SSTableWriter,java.io.DataInput,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///java/io/DataInputStream/DataInputStream(java.io.InputStream)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/io/sstable/format/SSTableWriter/abort()|",
      "|java+method:///org/apache/cassandra/utils/BytesReadTracker/reset(long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/db/Keyspace/open(java.lang.String)|",
      "|java+method:///org/apache/cassandra/streaming/compress/CompressedStreamReader/totalSize()|",
      "|java+method:///org/apache/cassandra/db/Keyspace/getColumnFamilyStore(java.lang.String)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///java/nio/channels/Channels/newInputStream(java.nio.channels.ReadableByteChannel)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/streaming/compress/CompressedInputStream/getTotalCompressedBytesRead()|",
      "|java+method:///org/apache/cassandra/streaming/compress/CompressedStreamReader/createWriter(org.apache.cassandra.db.ColumnFamilyStore,long,long,org.apache.cassandra.io.sstable.format.SSTableFormat$Type)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/streaming/compress/CompressedInputStream/position(long)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/apache/cassandra/streaming/compress/CompressedStreamReader/drain(java.io.InputStream,long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/config/Schema/getCF(java.util.UUID)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+constructor:///org/apache/cassandra/utils/BytesReadTracker/BytesReadTracker(java.io.DataInput)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/cassandra/streaming/compress/CompressedInputStream/CompressedInputStream(java.io.InputStream,org.apache.cassandra.streaming.compress.CompressionInfo)|",
      "|java+method:///org/apache/cassandra/streaming/StreamSession/progress(org.apache.cassandra.io.sstable.Descriptor,org.apache.cassandra.streaming.ProgressInfo$Direction,long,long)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/utils/BytesReadTracker/getBytesRead()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/apache/cassandra/streaming/compress/CompressedStreamReader/writeRow(org.apache.cassandra.io.sstable.format.SSTableWriter,java.io.DataInput,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+method:///org/apache/cassandra/streaming/compress/CompressedInputStream/close()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+constructor:///java/io/DataInputStream/DataInputStream(java.io.InputStream)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/io/sstable/format/SSTableWriter/abort()|",
      "|java+method:///org/apache/cassandra/utils/BytesReadTracker/reset(long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/db/Keyspace/open(java.lang.String)|",
      "|java+method:///org/apache/cassandra/streaming/compress/CompressedStreamReader/totalSize()|",
      "|java+method:///org/apache/cassandra/db/Keyspace/getColumnFamilyStore(java.lang.String)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///java/nio/channels/Channels/newInputStream(java.nio.channels.ReadableByteChannel)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/streaming/compress/CompressedInputStream/getTotalCompressedBytesRead()|",
      "|java+method:///org/apache/cassandra/streaming/compress/CompressedStreamReader/createWriter(org.apache.cassandra.db.ColumnFamilyStore,long,long,org.apache.cassandra.io.sstable.format.SSTableFormat$Type)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/streaming/compress/CompressedInputStream/position(long)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/apache/cassandra/streaming/compress/CompressedStreamReader/drain(java.io.InputStream,long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/config/Schema/getCF(java.util.UUID)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+constructor:///org/apache/cassandra/utils/BytesReadTracker/BytesReadTracker(java.io.DataInput)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/cassandra/streaming/compress/CompressedInputStream/CompressedInputStream(java.io.InputStream,org.apache.cassandra.streaming.compress.CompressionInfo)|",
      "|java+method:///org/apache/cassandra/streaming/StreamSession/progress(org.apache.cassandra.io.sstable.Descriptor,org.apache.cassandra.streaming.ProgressInfo$Direction,long,long)|"
    ],
    "affectedLib": "com.google.guava:guava:16.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.2.3",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.2.4",
    "caller": "|java+method:///org/apache/cassandra/service/StartupChecks$8/execute()|",
    "called": "|java+method:///com/google/common/base/Joiner/join(java.lang.Iterable)|",
    "v1Body": [
      "|java+constructor:///org/apache/cassandra/exceptions/StartupException/StartupException(int,java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/config/Schema/getKeyspaceMetaData(java.lang.String)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/db/SystemKeyspace/checkHealth()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/scrubDataDirectories(org.apache.cassandra.config.CFMetaData)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Joiner/on(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///org/apache/cassandra/service/StartupChecks$8$1/StartupChecks$8$1(org.apache.cassandra.service.StartupChecks$8,java.util.Set)|",
      "|java+method:///com/google/common/base/Joiner/join(java.lang.Iterable)|",
      "|java+method:///java/nio/file/Files/walkFileTree(java.nio.file.Path,java.nio.file.FileVisitor)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+constructor:///org/apache/cassandra/exceptions/StartupException/StartupException(int,java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/exceptions/StartupException/StartupException(int,java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/nio/file/Paths/get(java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getAllDataFileLocations()|",
      "|java+method:///java/util/Set/isEmpty()|"
    ],
    "affectedLib": "com.google.guava:guava:16.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.2.3",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.2.4",
    "caller": "|java+method:///org/apache/cassandra/io/compress/CompressionMetadata$Writer/doPrepare()|",
    "called": "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///java/io/DataOutputStream/close()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/io/util/SafeMemory/getLong(long)|",
      "|java+method:///org/apache/cassandra/io/util/SafeMemory/copy(long)|",
      "|java+method:///org/apache/cassandra/io/util/SafeMemory/size()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/cassandra/io/util/SafeMemory/free()|",
      "|java+method:///org/apache/cassandra/io/compress/CompressionMetadata$Writer/writeHeader(java.io.DataOutput,long,int)|",
      "|java+constructor:///java/io/FileOutputStream/FileOutputStream(java.lang.String)|",
      "|java+method:///java/io/DataOutputStream/writeLong(long)|",
      "|java+constructor:///java/io/DataOutputStream/DataOutputStream(java.io.OutputStream)|",
      "|java+constructor:///java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream)|"
    ],
    "v2Body": [
      "|java+method:///java/io/DataOutputStream/close()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/io/util/SafeMemory/getLong(long)|",
      "|java+method:///org/apache/cassandra/io/util/SafeMemory/copy(long)|",
      "|java+method:///java/io/DataOutputStream/flush()|",
      "|java+method:///java/io/FileOutputStream/getFD()|",
      "|java+method:///org/apache/cassandra/io/util/SafeMemory/size()|",
      "|java+method:///java/io/FileOutputStream/close()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///java/io/FileDescriptor/sync()|",
      "|java+method:///org/apache/cassandra/io/util/SafeMemory/free()|",
      "|java+method:///org/apache/cassandra/io/compress/CompressionMetadata$Writer/writeHeader(java.io.DataOutput,long,int)|",
      "|java+constructor:///java/io/FileOutputStream/FileOutputStream(java.lang.String)|",
      "|java+method:///java/io/DataOutputStream/writeLong(long)|",
      "|java+constructor:///java/io/DataOutputStream/DataOutputStream(java.io.OutputStream)|",
      "|java+constructor:///java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream)|"
    ],
    "affectedLib": "com.google.guava:guava:16.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.2.3",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.2.4",
    "caller": "|java+method:///org/apache/cassandra/service/StorageService/joinTokenRing(int)|",
    "called": "|java+method:///com/google/common/util/concurrent/Uninterruptibles/sleepUninterruptibly(long,java.util.concurrent.TimeUnit)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/SystemKeyspace/setBootstrapState(org.apache.cassandra.db.SystemKeyspace$BootstrapState)|",
      "|java+method:///org/apache/cassandra/service/StorageService/maybeAddKeyspace(org.apache.cassandra.config.KSMetaData)|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+method:///java/net/InetAddress/equals(java.lang.Object)|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/service/PendingRangeCalculatorService/blockUntilFinished()|",
      "|java+method:///org/apache/cassandra/service/MigrationManager/isReadyForBootstrap()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/lang/Thread/sleep(long)|",
      "|java+method:///org/apache/cassandra/config/Schema/getKSMetaData(java.lang.String)|",
      "|java+method:///org/apache/cassandra/gms/EndpointState/getUpdateTimestamp()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/apache/cassandra/repair/SystemDistributedKeyspace/definition()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/dht/Token$TokenFactory/fromString(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/getBroadcastAddress()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/cassandra/service/MigrationManager/announceNewKeyspace(org.apache.cassandra.config.KSMetaData,long,boolean)|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///org/apache/cassandra/service/StorageService/doAuthSetup()|",
      "|java+method:///org/apache/cassandra/locator/TokenMetadata/getEndpoint(org.apache.cassandra.dht.Token)|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/cassandra/utils/BiMultiValMap/valueSet()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/locator/TokenMetadata/getBootstrapTokens()|",
      "|java+method:///org/apache/cassandra/db/SystemKeyspace/getSavedTokens()|",
      "|java+method:///java/util/Collection/isEmpty()|",
      "|java+method:///org/apache/cassandra/db/SystemKeyspace/getBootstrapState()|",
      "|java+method:///com/google/common/util/concurrent/Uninterruptibles/sleepUninterruptibly(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///org/apache/cassandra/service/StorageService/bootstrap(java.util.Collection)|",
      "|java+method:///org/apache/cassandra/service/StorageService/setMode(org.apache.cassandra.service.StorageService$Mode,java.lang.String,boolean)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/locator/TokenMetadata/sortedTokens()|",
      "|java+method:///org/apache/cassandra/gms/Gossiper/replacedEndpoint(java.net.InetAddress)|",
      "|java+method:///java/util/ArrayList/size()|",
      "|java+method:///org/apache/cassandra/locator/TokenMetadata/getMovingEndpoints()|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/dht/BootStrapper/getRandomTokens(org.apache.cassandra.locator.TokenMetadata,int)|",
      "|java+method:///org/apache/cassandra/db/SystemKeyspace/bootstrapInProgress()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+constructor:///java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getInitialTokens()|",
      "|java+method:///org/apache/cassandra/service/StorageService/shouldBootstrap()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/locator/TokenMetadata/isMember(java.net.InetAddress)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/isAutoBootstrap()|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getNumTokens()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getReplaceAddress()|",
      "|java+method:///org/apache/cassandra/dht/BootStrapper/getBootstrapTokens(org.apache.cassandra.locator.TokenMetadata)|",
      "|java+method:///org/apache/cassandra/service/StorageService/setTokens(java.util.Collection)|",
      "|java+method:///org/apache/cassandra/tracing/TraceKeyspace/definition()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///java/util/UUID/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/config/Schema/getVersion()|",
      "|java+method:///org/apache/cassandra/db/SystemKeyspace/bootstrapComplete()|",
      "|java+method:///org/slf4j/Logger/isDebugEnabled()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/gms/Gossiper/getEndpointStateForEndpoint(java.net.InetAddress)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getSeeds()|",
      "|java+method:///org/apache/cassandra/locator/TokenMetadata/getLeavingEndpoints()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getTokenFactory()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/cassandra/exceptions/ConfigurationException/ConfigurationException(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///java/lang/Thread/sleep(long)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/SystemKeyspace/setBootstrapState(org.apache.cassandra.db.SystemKeyspace$BootstrapState)|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+method:///java/net/InetAddress/equals(java.lang.Object)|",
      "|java+method:///java/util/Collection/add(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/service/PendingRangeCalculatorService/blockUntilFinished()|",
      "|java+method:///org/apache/cassandra/service/MigrationManager/isReadyForBootstrap()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///org/apache/cassandra/gms/EndpointState/getUpdateTimestamp()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/apache/cassandra/repair/SystemDistributedKeyspace/definition()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/dht/Token$TokenFactory/fromString(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/getBroadcastAddress()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///org/apache/cassandra/service/StorageService/doAuthSetup()|",
      "|java+method:///org/apache/cassandra/locator/TokenMetadata/getEndpoint(org.apache.cassandra.dht.Token)|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/cassandra/utils/BiMultiValMap/valueSet()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/locator/TokenMetadata/getBootstrapTokens()|",
      "|java+method:///org/apache/cassandra/db/SystemKeyspace/getSavedTokens()|",
      "|java+method:///java/util/Collection/isEmpty()|",
      "|java+method:///org/apache/cassandra/db/SystemKeyspace/getBootstrapState()|",
      "|java+method:///com/google/common/util/concurrent/Uninterruptibles/sleepUninterruptibly(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///org/apache/cassandra/service/StorageService/bootstrap(java.util.Collection)|",
      "|java+method:///org/apache/cassandra/service/StorageService/setMode(org.apache.cassandra.service.StorageService$Mode,java.lang.String,boolean)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/locator/TokenMetadata/sortedTokens()|",
      "|java+method:///org/apache/cassandra/gms/Gossiper/replacedEndpoint(java.net.InetAddress)|",
      "|java+method:///java/util/ArrayList/size()|",
      "|java+method:///org/apache/cassandra/locator/TokenMetadata/getMovingEndpoints()|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/dht/BootStrapper/getRandomTokens(org.apache.cassandra.locator.TokenMetadata,int)|",
      "|java+method:///org/apache/cassandra/db/SystemKeyspace/bootstrapInProgress()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+constructor:///java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getInitialTokens()|",
      "|java+method:///org/apache/cassandra/service/StorageService/shouldBootstrap()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getPartitioner()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/locator/TokenMetadata/isMember(java.net.InetAddress)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/isAutoBootstrap()|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getNumTokens()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getReplaceAddress()|",
      "|java+method:///org/apache/cassandra/dht/BootStrapper/getBootstrapTokens(org.apache.cassandra.locator.TokenMetadata)|",
      "|java+method:///org/apache/cassandra/service/StorageService/setTokens(java.util.Collection)|",
      "|java+method:///org/apache/cassandra/tracing/TraceKeyspace/definition()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///java/util/UUID/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/config/Schema/getVersion()|",
      "|java+method:///org/apache/cassandra/db/SystemKeyspace/bootstrapComplete()|",
      "|java+method:///org/slf4j/Logger/isDebugEnabled()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/service/StorageService/maybeAddOrUpdateKeyspace(org.apache.cassandra.config.KSMetaData)|",
      "|java+method:///org/apache/cassandra/gms/Gossiper/getEndpointStateForEndpoint(java.net.InetAddress)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getSeeds()|",
      "|java+method:///org/apache/cassandra/locator/TokenMetadata/getLeavingEndpoints()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/getTokenFactory()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/cassandra/exceptions/ConfigurationException/ConfigurationException(java.lang.String)|"
    ],
    "affectedLib": "com.google.guava:guava:16.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.2.3",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.2.4",
    "caller": "|java+method:///org/apache/cassandra/thrift/CassandraServer/cas(java.nio.ByteBuffer,java.lang.String,java.util.List,java.util.List,org.apache.cassandra.thrift.ConsistencyLevel,org.apache.cassandra.thrift.ConsistencyLevel)|",
    "called": "|java+method:///com/google/common/collect/ImmutableMap$Builder/put(java.lang.Object,java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestValidationException)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnNames(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.ColumnParent,java.lang.Iterable)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/getSortedColumns()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/rethrow(org.apache.cassandra.exceptions.RequestExecutionException)|",
      "|java+method:///com/google/common/collect/ImmutableMap$Builder/build()|",
      "|java+constructor:///org/apache/cassandra/thrift/CASResult/CASResult(boolean)|",
      "|java+constructor:///org/apache/cassandra/exceptions/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/ColumnParent/ColumnParent(java.lang.String)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/getKeyspace()|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/bytesToHex(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestTimeoutException)|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/cas(java.lang.String,java.lang.String,java.nio.ByteBuffer,org.apache.cassandra.service.CASRequest,org.apache.cassandra.db.ConsistencyLevel,org.apache.cassandra.db.ConsistencyLevel,org.apache.cassandra.service.ClientState)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/hasColumnFamilyAccess(java.lang.String,java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/fromThrift(org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///com/google/common/collect/ImmutableMap/builder()|",
      "|java+method:///com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/addColumn(org.apache.cassandra.db.composites.CellName,java.nio.ByteBuffer,long)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/thriftifyColumnsAsColumns(java.util.Collection,long)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String,boolean)|",
      "|java+method:///com/google/common/collect/ImmutableMap$Builder/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/thrift/ConsistencyLevel/name()|",
      "|java+method:///org/apache/cassandra/db/composites/CellNameType/cellFromByteBuffer(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily$Factory/create(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/thrift/CASResult/setCurrent_values(java.util.List)|",
      "|java+method:///org/slf4j/Logger/trace(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/schedule(long)|",
      "|java+method:///org/apache/cassandra/config/Schema/getCFMetaData(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getWriteRpcTimeout()|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/begin(java.lang.String,java.util.Map)|",
      "|java+constructor:///org/apache/cassandra/thrift/CassandraServer$1/CassandraServer$1(org.apache.cassandra.thrift.CassandraServer)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/stopSession()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnData(org.apache.cassandra.config.CFMetaData,java.nio.ByteBuffer,java.nio.ByteBuffer,org.apache.cassandra.thrift.Column)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKey(org.apache.cassandra.config.CFMetaData,java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/startSessionIfRequested()|",
      "|java+constructor:///org/apache/cassandra/thrift/CassandraServer$ThriftCASRequest/CassandraServer$ThriftCASRequest(org.apache.cassandra.db.ColumnFamily,org.apache.cassandra.db.ColumnFamily,org.apache.cassandra.thrift.CassandraServer$1)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestValidationException)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnNames(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.ColumnParent,java.lang.Iterable)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/getSortedColumns()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/rethrow(org.apache.cassandra.exceptions.RequestExecutionException)|",
      "|java+method:///com/google/common/collect/ImmutableMap$Builder/build()|",
      "|java+constructor:///org/apache/cassandra/thrift/CASResult/CASResult(boolean)|",
      "|java+constructor:///org/apache/cassandra/exceptions/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/ColumnParent/ColumnParent(java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/Keyspace/open(java.lang.String)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/getKeyspace()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestTimeoutException)|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/cas(java.lang.String,java.lang.String,java.nio.ByteBuffer,org.apache.cassandra.service.CASRequest,org.apache.cassandra.db.ConsistencyLevel,org.apache.cassandra.db.ConsistencyLevel,org.apache.cassandra.service.ClientState)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/hasColumnFamilyAccess(java.lang.String,java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/fromThrift(org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///com/google/common/collect/ImmutableMap/builder()|",
      "|java+method:///com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/addColumn(org.apache.cassandra.db.composites.CellName,java.nio.ByteBuffer,long)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/thriftifyColumnsAsColumns(java.util.Collection,long)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String,boolean)|",
      "|java+method:///com/google/common/collect/ImmutableMap$Builder/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/thrift/ConsistencyLevel/name()|",
      "|java+method:///org/apache/cassandra/db/composites/CellNameType/cellFromByteBuffer(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily$Factory/create(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/thrift/CASResult/setCurrent_values(java.util.List)|",
      "|java+method:///org/slf4j/Logger/trace(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/schedule(long)|",
      "|java+method:///org/apache/cassandra/config/Schema/getCFMetaData(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getWriteRpcTimeout()|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/begin(java.lang.String,java.util.Map)|",
      "|java+constructor:///org/apache/cassandra/thrift/CassandraServer$1/CassandraServer$1(org.apache.cassandra.thrift.CassandraServer)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/stopSession()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnData(org.apache.cassandra.config.CFMetaData,java.nio.ByteBuffer,java.nio.ByteBuffer,org.apache.cassandra.thrift.Column)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKey(org.apache.cassandra.config.CFMetaData,java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/db/Keyspace/getColumnFamilyStore(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/startSessionIfRequested()|",
      "|java+constructor:///org/apache/cassandra/thrift/CassandraServer$ThriftCASRequest/CassandraServer$ThriftCASRequest(org.apache.cassandra.db.ColumnFamily,org.apache.cassandra.db.ColumnFamily,org.apache.cassandra.thrift.CassandraServer$1)|",
      "|java+method:///org/apache/cassandra/db/index/SecondaryIndexManager/validateRowLevelIndexes(java.nio.ByteBuffer,org.apache.cassandra.db.ColumnFamily)|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/bytesToHex(java.nio.ByteBuffer)|"
    ],
    "affectedLib": "com.google.guava:guava:16.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.2.3",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.2.4",
    "caller": "|java+method:///org/apache/cassandra/service/StartupChecks$7/execute()|",
    "called": "|java+method:///com/google/common/collect/Iterables/concat(java.lang.Iterable,java.lang.Iterable)|",
    "v1Body": [
      "|java+method:///com/google/common/base/Joiner/on(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///org/apache/cassandra/service/StartupChecks$7$1/StartupChecks$7$1(org.apache.cassandra.service.StartupChecks$7,java.util.Set)|",
      "|java+method:///com/google/common/base/Joiner/join(java.lang.Iterable)|",
      "|java+method:///java/nio/file/Files/walkFileTree(java.nio.file.Path,java.nio.file.FileVisitor)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+constructor:///org/apache/cassandra/exceptions/StartupException/StartupException(int,java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/exceptions/StartupException/StartupException(int,java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/nio/file/Paths/get(java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getAllDataFileLocations()|",
      "|java+method:///java/util/Set/isEmpty()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/service/StartupChecks/access$000()|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/db/Directories/verifyFullPermissions(java.io.File,java.lang.String)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getAllDataFileLocations()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/io/File/mkdirs()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/cassandra/exceptions/StartupException/StartupException(int,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getSavedCachesLocation()|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getCommitLogLocation()|",
      "|java+method:///com/google/common/collect/Iterables/concat(java.lang.Iterable,java.lang.Iterable)|"
    ],
    "affectedLib": "com.google.guava:guava:16.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.2.3",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.2.4",
    "caller": "|java+method:///org/apache/cassandra/streaming/StreamReader/read(java.nio.channels.ReadableByteChannel)|",
    "called": "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///com/ning/compress/lzf/LZFInputStream/LZFInputStream(java.io.InputStream)|",
      "|java+constructor:///java/io/DataInputStream/DataInputStream(java.io.InputStream)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/streaming/StreamReader/createWriter(org.apache.cassandra.db.ColumnFamilyStore,long,long,org.apache.cassandra.io.sstable.format.SSTableFormat$Type)|",
      "|java+method:///org/apache/cassandra/io/sstable/format/SSTableWriter/abort()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/db/Keyspace/open(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/utils/BytesReadTracker/BytesReadTracker(java.io.DataInput)|",
      "|java+method:///org/apache/cassandra/db/Keyspace/getColumnFamilyStore(java.lang.String)|",
      "|java+method:///org/apache/cassandra/utils/BytesReadTracker/getBytesRead()|",
      "|java+method:///org/apache/cassandra/streaming/StreamReader/writeRow(org.apache.cassandra.io.sstable.format.SSTableWriter,java.io.DataInput,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+method:///java/nio/channels/Channels/newInputStream(java.nio.channels.ReadableByteChannel)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/cassandra/streaming/StreamReader/drain(java.io.InputStream,long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/config/Schema/getCF(java.util.UUID)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/streaming/StreamSession/progress(org.apache.cassandra.io.sstable.Descriptor,org.apache.cassandra.streaming.ProgressInfo$Direction,long,long)|",
      "|java+method:///org/apache/cassandra/streaming/StreamReader/totalSize()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///com/ning/compress/lzf/LZFInputStream/LZFInputStream(java.io.InputStream)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+constructor:///java/io/DataInputStream/DataInputStream(java.io.InputStream)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/streaming/StreamReader/createWriter(org.apache.cassandra.db.ColumnFamilyStore,long,long,org.apache.cassandra.io.sstable.format.SSTableFormat$Type)|",
      "|java+method:///org/apache/cassandra/io/sstable/format/SSTableWriter/abort()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/db/Keyspace/open(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/utils/BytesReadTracker/BytesReadTracker(java.io.DataInput)|",
      "|java+method:///org/apache/cassandra/db/Keyspace/getColumnFamilyStore(java.lang.String)|",
      "|java+method:///org/apache/cassandra/utils/BytesReadTracker/getBytesRead()|",
      "|java+method:///org/apache/cassandra/streaming/StreamReader/writeRow(org.apache.cassandra.io.sstable.format.SSTableWriter,java.io.DataInput,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+method:///java/nio/channels/Channels/newInputStream(java.nio.channels.ReadableByteChannel)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/cassandra/streaming/StreamReader/drain(java.io.InputStream,long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/config/Schema/getCF(java.util.UUID)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/streaming/StreamSession/progress(org.apache.cassandra.io.sstable.Descriptor,org.apache.cassandra.streaming.ProgressInfo$Direction,long,long)|",
      "|java+method:///org/apache/cassandra/streaming/StreamReader/totalSize()|"
    ],
    "affectedLib": "com.google.guava:guava:16.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.2.3",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.2.4",
    "caller": "|java+method:///org/apache/cassandra/hadoop/pig/CqlNativeStorage/initSchema(java.lang.String)|",
    "called": "|java+method:///org/apache/pig/impl/util/UDFContext/getUDFProperties(java.lang.Class)|",
    "v1Body": [
      "|java+method:///com/datastax/driver/core/Cluster/connect()|",
      "|java+method:///com/datastax/driver/core/Session/execute(java.lang.String)|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/hadoop/cql3/CqlConfigHelper/getInputCluster(java.lang.String,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///com/datastax/driver/core/Session/close()|",
      "|java+method:///org/apache/pig/impl/util/UDFContext/getUDFProperties(java.lang.Class)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputInitialAddress(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Properties/setProperty(java.lang.String,java.lang.String)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/pig/impl/util/UDFContext/getUDFContext()|",
      "|java+method:///org/apache/cassandra/hadoop/pig/CqlNativeStorage/cfdefToString(com.datastax.driver.core.TableMetadata)|",
      "|java+method:///org/apache/cassandra/hadoop/pig/CqlNativeStorage/getCfInfo(com.datastax.driver.core.Session)|"
    ],
    "v2Body": [
      "|java+method:///com/datastax/driver/core/Cluster/connect()|",
      "|java+method:///com/datastax/driver/core/Session/execute(java.lang.String)|",
      "|java+method:///java/util/Properties/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/hadoop/cql3/CqlConfigHelper/getInputCluster(java.lang.String,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///com/datastax/driver/core/Session/close()|",
      "|java+method:///org/apache/pig/impl/util/UDFContext/getUDFProperties(java.lang.Class)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getInputInitialAddress(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/datastax/driver/core/Cluster/close()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Properties/setProperty(java.lang.String,java.lang.String)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/pig/impl/util/UDFContext/getUDFContext()|",
      "|java+method:///org/apache/cassandra/hadoop/pig/CqlNativeStorage/cfdefToString(com.datastax.driver.core.TableMetadata)|",
      "|java+method:///org/apache/cassandra/hadoop/pig/CqlNativeStorage/getCfInfo(com.datastax.driver.core.Session)|"
    ],
    "affectedLib": "org.apache.pig:pig:0.12.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.2.3",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.2.4",
    "caller": "|java+constructor:///org/apache/cassandra/hadoop/cql3/CqlRecordWriter/CqlRecordWriter(org.apache.hadoop.conf.Configuration)|",
    "called": "|java+constructor:///org/apache/hadoop/mapreduce/RecordWriter/RecordWriter()|",
    "v1Body": [
      "|java+method:///com/datastax/driver/core/Session/getCluster()|",
      "|java+method:///java/lang/String/toLowerCase()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///com/datastax/driver/core/TableMetadata/getPartitionKey()|",
      "|java+method:///org/apache/cassandra/hadoop/cql3/CqlConfigHelper/getOutputCql(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/cql3/CqlConfigHelper/getOutputCluster(java.lang.String,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///com/datastax/driver/core/Metadata/getKeyspace(java.lang.String)|",
      "|java+method:///com/datastax/driver/core/KeyspaceMetadata/getTable(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/datastax/driver/core/Cluster/connect(java.lang.String)|",
      "|java+method:///com/datastax/driver/core/Cluster/getMetadata()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getLong(java.lang.String,long)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getOutputKeyspace(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/cassandra/hadoop/cql3/CqlRecordWriter$NativeRingCache/CqlRecordWriter$NativeRingCache(org.apache.cassandra.hadoop.cql3.CqlRecordWriter,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap()|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/getAvailableProcessors()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getOutputInitialAddress(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/RecordWriter/RecordWriter()|",
      "|java+method:///com/datastax/driver/core/Session/close()|",
      "|java+method:///com/datastax/driver/core/TableMetadata/getClusteringColumns()|",
      "|java+constructor:///java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)|",
      "|java+method:///com/datastax/driver/core/Session/getLoggedKeyspace()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getOutputColumnFamily(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getInt(java.lang.String,int)|",
      "|java+method:///org/apache/cassandra/hadoop/cql3/CqlRecordWriter/appendKeyWhereClauses(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/datastax/driver/core/Session/getCluster()|",
      "|java+method:///java/lang/String/toLowerCase()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///com/datastax/driver/core/TableMetadata/getPartitionKey()|",
      "|java+method:///org/apache/cassandra/hadoop/cql3/CqlConfigHelper/getOutputCql(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/cassandra/hadoop/cql3/CqlConfigHelper/getOutputCluster(java.lang.String,org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///com/datastax/driver/core/Metadata/getKeyspace(java.lang.String)|",
      "|java+method:///com/datastax/driver/core/KeyspaceMetadata/getTable(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/datastax/driver/core/Cluster/connect(java.lang.String)|",
      "|java+method:///com/datastax/driver/core/Cluster/getMetadata()|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getLong(java.lang.String,long)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getOutputKeyspace(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///org/apache/cassandra/hadoop/cql3/CqlRecordWriter$NativeRingCache/CqlRecordWriter$NativeRingCache(org.apache.cassandra.hadoop.cql3.CqlRecordWriter,org.apache.hadoop.conf.Configuration)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap()|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/getAvailableProcessors()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getOutputInitialAddress(org.apache.hadoop.conf.Configuration)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///org/apache/hadoop/mapreduce/RecordWriter/RecordWriter()|",
      "|java+method:///com/datastax/driver/core/Session/close()|",
      "|java+method:///com/datastax/driver/core/Cluster/close()|",
      "|java+method:///com/datastax/driver/core/TableMetadata/getClusteringColumns()|",
      "|java+constructor:///java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)|",
      "|java+method:///com/datastax/driver/core/Session/getLoggedKeyspace()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/hadoop/ConfigHelper/getOutputColumnFamily(org.apache.hadoop.conf.Configuration)|",
      "|java+method:///org/apache/hadoop/conf/Configuration/getInt(java.lang.String,int)|",
      "|java+method:///org/apache/cassandra/hadoop/cql3/CqlRecordWriter/appendKeyWhereClauses(java.lang.String)|"
    ],
    "affectedLib": "org.apache.hadoop:hadoop-core:1.0.3",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.2.3",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.2.4",
    "caller": "|java+method:///org/apache/cassandra/thrift/CassandraServer/cas(java.nio.ByteBuffer,java.lang.String,java.util.List,java.util.List,org.apache.cassandra.thrift.ConsistencyLevel,org.apache.cassandra.thrift.ConsistencyLevel)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/CASResult/CASResult(boolean)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestValidationException)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnNames(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.ColumnParent,java.lang.Iterable)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/getSortedColumns()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/rethrow(org.apache.cassandra.exceptions.RequestExecutionException)|",
      "|java+method:///com/google/common/collect/ImmutableMap$Builder/build()|",
      "|java+constructor:///org/apache/cassandra/thrift/CASResult/CASResult(boolean)|",
      "|java+constructor:///org/apache/cassandra/exceptions/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/ColumnParent/ColumnParent(java.lang.String)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/getKeyspace()|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/bytesToHex(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestTimeoutException)|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/cas(java.lang.String,java.lang.String,java.nio.ByteBuffer,org.apache.cassandra.service.CASRequest,org.apache.cassandra.db.ConsistencyLevel,org.apache.cassandra.db.ConsistencyLevel,org.apache.cassandra.service.ClientState)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/hasColumnFamilyAccess(java.lang.String,java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/fromThrift(org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///com/google/common/collect/ImmutableMap/builder()|",
      "|java+method:///com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/addColumn(org.apache.cassandra.db.composites.CellName,java.nio.ByteBuffer,long)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/thriftifyColumnsAsColumns(java.util.Collection,long)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String,boolean)|",
      "|java+method:///com/google/common/collect/ImmutableMap$Builder/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/thrift/ConsistencyLevel/name()|",
      "|java+method:///org/apache/cassandra/db/composites/CellNameType/cellFromByteBuffer(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily$Factory/create(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/thrift/CASResult/setCurrent_values(java.util.List)|",
      "|java+method:///org/slf4j/Logger/trace(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/schedule(long)|",
      "|java+method:///org/apache/cassandra/config/Schema/getCFMetaData(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getWriteRpcTimeout()|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/begin(java.lang.String,java.util.Map)|",
      "|java+constructor:///org/apache/cassandra/thrift/CassandraServer$1/CassandraServer$1(org.apache.cassandra.thrift.CassandraServer)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/stopSession()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnData(org.apache.cassandra.config.CFMetaData,java.nio.ByteBuffer,java.nio.ByteBuffer,org.apache.cassandra.thrift.Column)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKey(org.apache.cassandra.config.CFMetaData,java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/startSessionIfRequested()|",
      "|java+constructor:///org/apache/cassandra/thrift/CassandraServer$ThriftCASRequest/CassandraServer$ThriftCASRequest(org.apache.cassandra.db.ColumnFamily,org.apache.cassandra.db.ColumnFamily,org.apache.cassandra.thrift.CassandraServer$1)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestValidationException)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnNames(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.ColumnParent,java.lang.Iterable)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/getSortedColumns()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/rethrow(org.apache.cassandra.exceptions.RequestExecutionException)|",
      "|java+method:///com/google/common/collect/ImmutableMap$Builder/build()|",
      "|java+constructor:///org/apache/cassandra/thrift/CASResult/CASResult(boolean)|",
      "|java+constructor:///org/apache/cassandra/exceptions/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/thrift/ColumnParent/ColumnParent(java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/Keyspace/open(java.lang.String)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/getKeyspace()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestTimeoutException)|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/cas(java.lang.String,java.lang.String,java.nio.ByteBuffer,org.apache.cassandra.service.CASRequest,org.apache.cassandra.db.ConsistencyLevel,org.apache.cassandra.db.ConsistencyLevel,org.apache.cassandra.service.ClientState)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/hasColumnFamilyAccess(java.lang.String,java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/fromThrift(org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///com/google/common/collect/ImmutableMap/builder()|",
      "|java+method:///com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/addColumn(org.apache.cassandra.db.composites.CellName,java.nio.ByteBuffer,long)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/thriftifyColumnsAsColumns(java.util.Collection,long)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String,boolean)|",
      "|java+method:///com/google/common/collect/ImmutableMap$Builder/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/thrift/ConsistencyLevel/name()|",
      "|java+method:///org/apache/cassandra/db/composites/CellNameType/cellFromByteBuffer(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily$Factory/create(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/thrift/CASResult/setCurrent_values(java.util.List)|",
      "|java+method:///org/slf4j/Logger/trace(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/schedule(long)|",
      "|java+method:///org/apache/cassandra/config/Schema/getCFMetaData(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getWriteRpcTimeout()|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/begin(java.lang.String,java.util.Map)|",
      "|java+constructor:///org/apache/cassandra/thrift/CassandraServer$1/CassandraServer$1(org.apache.cassandra.thrift.CassandraServer)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/stopSession()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnData(org.apache.cassandra.config.CFMetaData,java.nio.ByteBuffer,java.nio.ByteBuffer,org.apache.cassandra.thrift.Column)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKey(org.apache.cassandra.config.CFMetaData,java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/db/Keyspace/getColumnFamilyStore(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/startSessionIfRequested()|",
      "|java+constructor:///org/apache/cassandra/thrift/CassandraServer$ThriftCASRequest/CassandraServer$ThriftCASRequest(org.apache.cassandra.db.ColumnFamily,org.apache.cassandra.db.ColumnFamily,org.apache.cassandra.thrift.CassandraServer$1)|",
      "|java+method:///org/apache/cassandra/db/index/SecondaryIndexManager/validateRowLevelIndexes(java.nio.ByteBuffer,org.apache.cassandra.db.ColumnFamily)|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/bytesToHex(java.nio.ByteBuffer)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:2.2.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.2.3",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.2.4",
    "caller": "|java+method:///org/apache/cassandra/locator/PropertyFileSnitch/reloadConfiguration(boolean)|",
    "called": "|java+method:///org/apache/commons/lang3/StringUtils/remove(java.lang.String,char)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/service/StorageService/gossipSnitchInfo()|",
      "|java+method:///org/apache/cassandra/locator/TokenMetadata/invalidateCachedRings()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/getBroadcastAddress()|",
      "|java+method:///java/util/HashMap/entrySet()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/io/InputStream/close()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)|",
      "|java+method:///java/util/Arrays/toString(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/Properties/entrySet()|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///java/util/HashMap/containsKey(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/service/StorageService/getTokenMetadata()|",
      "|java+method:///org/slf4j/Logger/isTraceEnabled()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/HashMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/service/StorageService/updateTopology()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///java/util/Properties/Properties()|",
      "|java+method:///java/lang/ClassLoader/getResourceAsStream(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/trace(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/lang/Class/getClassLoader()|",
      "|java+method:///java/util/Properties/load(java.io.InputStream)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/cassandra/exceptions/ConfigurationException/ConfigurationException(java.lang.String)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/removeEnd(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/exceptions/ConfigurationException/ConfigurationException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/net/InetAddress/getByName(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/service/StorageService/gossipSnitchInfo()|",
      "|java+method:///org/apache/cassandra/locator/TokenMetadata/invalidateCachedRings()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/getBroadcastAddress()|",
      "|java+method:///java/util/HashMap/entrySet()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(char)|",
      "|java+method:///java/util/Arrays/toString(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/Properties/entrySet()|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///java/util/HashMap/containsKey(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/service/StorageService/getTokenMetadata()|",
      "|java+method:///org/slf4j/Logger/isTraceEnabled()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/HashMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/service/StorageService/updateTopology()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///java/util/Properties/Properties()|",
      "|java+method:///org/apache/commons/lang3/StringUtils/remove(java.lang.String,char)|",
      "|java+method:///java/io/InputStream/close()|",
      "|java+method:///java/lang/ClassLoader/getResourceAsStream(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/trace(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/lang/Class/getClassLoader()|",
      "|java+method:///java/util/Properties/load(java.io.InputStream)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/cassandra/exceptions/ConfigurationException/ConfigurationException(java.lang.String)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/removeEnd(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/locator/PropertyFileSnitch/livenessCheck(java.util.HashMap,java.lang.String%5B%5D)|",
      "|java+constructor:///org/apache/cassandra/exceptions/ConfigurationException/ConfigurationException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/net/InetAddress/getByName(java.lang.String)|"
    ],
    "affectedLib": "org.apache.commons:commons-lang3:3.1",
    "change": "UPDATED"
  }
]