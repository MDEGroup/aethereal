[
  {
    "coordinatesV1": "com.linkedin.pegasus:r2-filter-compression:2.12.7",
    "coordinatesV2": "com.linkedin.pegasus:r2-filter-compression:3.1.1",
    "caller": "|java+method:///com/linkedin/r2/filter/compression/ServerCompressionFilter/onRestRequest(com.linkedin.r2.message.rest.RestRequest,com.linkedin.r2.message.RequestContext,java.util.Map,com.linkedin.r2.filter.NextFilter)|",
    "called": "|java+method:///com/linkedin/data/ByteString/asInputStream()|",
    "v1Body": [
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/setHeaders(java.util.Map)|",
      "|java+method:///java/lang/String/toLowerCase()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getHeaders()|",
      "|java+method:///com/linkedin/r2/filter/compression/EncodingType/getCompressor()|",
      "|java+method:///com/linkedin/r2/filter/NextFilter/onError(java.lang.Throwable,com.linkedin.r2.message.RequestContext,java.util.Map)|",
      "|java+method:///com/linkedin/r2/filter/compression/Compressor/inflate(java.io.InputStream)|",
      "|java+method:///java/lang/Integer/toString(int)|",
      "|java+method:///com/linkedin/r2/filter/compression/EncodingType/hasCompressor()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/setEntity(byte%5B%5D)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///com/linkedin/r2/message/rest/RestException/RestException(com.linkedin.r2.message.rest.RestResponse,java.lang.Throwable)|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/setStatus(int)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/builder()|",
      "|java+method:///com/linkedin/r2/filter/compression/ServerCompressionFilter/getResponseCompressionThreshold(com.linkedin.r2.message.rest.RestRequest)|",
      "|java+method:///com/linkedin/r2/filter/NextFilter/onRequest(com.linkedin.r2.message.Request,com.linkedin.r2.message.RequestContext,java.util.Map)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/build()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+constructor:///java/util/HashMap/HashMap(java.util.Map)|",
      "|java+method:///com/linkedin/r2/message/RequestContext/putLocalAttr(java.lang.String,java.lang.Object)|",
      "|java+constructor:///com/linkedin/r2/message/rest/RestResponseBuilder/RestResponseBuilder()|",
      "|java+constructor:///com/linkedin/r2/filter/compression/CompressionException/CompressionException(java.lang.String)|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/build()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getEntity()|",
      "|java+method:///com/linkedin/r2/filter/compression/CompressionException/getMessage()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getHeader(java.lang.String)|",
      "|java+method:///java/util/Map/remove(java.lang.Object)|",
      "|java+method:///com/linkedin/data/ByteString/asInputStream()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/linkedin/r2/filter/compression/EncodingType/get(java.lang.String)|",
      "|java+method:///com/linkedin/r2/filter/compression/CompressionException/getCause()|"
    ],
    "v2Body": [
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/setHeaders(java.util.Map)|",
      "|java+method:///java/lang/String/toLowerCase()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getHeaders()|",
      "|java+method:///com/linkedin/r2/filter/compression/EncodingType/getCompressor()|",
      "|java+method:///com/linkedin/r2/filter/NextFilter/onError(java.lang.Throwable,com.linkedin.r2.message.RequestContext,java.util.Map)|",
      "|java+method:///com/linkedin/r2/filter/compression/Compressor/inflate(java.io.InputStream)|",
      "|java+method:///java/lang/Integer/toString(int)|",
      "|java+method:///com/linkedin/r2/filter/compression/EncodingType/hasCompressor()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/setEntity(byte%5B%5D)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///com/linkedin/r2/message/rest/RestException/RestException(com.linkedin.r2.message.rest.RestResponse,java.lang.Throwable)|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/setStatus(int)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/builder()|",
      "|java+method:///com/linkedin/r2/filter/NextFilter/onRequest(com.linkedin.r2.message.Request,com.linkedin.r2.message.RequestContext,java.util.Map)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/build()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+constructor:///java/util/HashMap/HashMap(java.util.Map)|",
      "|java+method:///com/linkedin/r2/message/RequestContext/putLocalAttr(java.lang.String,java.lang.Object)|",
      "|java+method:///com/linkedin/r2/filter/compression/ServerCompressionHelper/getResponseCompressionThreshold(com.linkedin.r2.message.MessageHeaders)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///com/linkedin/r2/message/rest/RestResponseBuilder/RestResponseBuilder()|",
      "|java+constructor:///com/linkedin/r2/filter/compression/CompressionException/CompressionException(java.lang.String)|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/build()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getEntity()|",
      "|java+method:///com/linkedin/r2/filter/compression/CompressionException/getMessage()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getHeader(java.lang.String)|",
      "|java+method:///java/util/Map/remove(java.lang.Object)|",
      "|java+method:///com/linkedin/data/ByteString/asInputStream()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/linkedin/r2/filter/compression/EncodingType/get(java.lang.String)|",
      "|java+method:///com/linkedin/r2/filter/compression/CompressionException/getCause()|"
    ],
    "affectedLib": "com.linkedin.pegasus:data:3.1.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.pegasus:r2-filter-compression:2.12.7",
    "coordinatesV2": "com.linkedin.pegasus:r2-filter-compression:3.1.1",
    "caller": "|java+method:///com/linkedin/r2/filter/compression/ClientCompressionFilter/onRestRequest(com.linkedin.r2.message.rest.RestRequest,com.linkedin.r2.message.RequestContext,java.util.Map,com.linkedin.r2.filter.NextFilter)|",
    "called": "|java+method:///com/linkedin/data/ByteString/length()|",
    "v1Body": [
      "|java+method:///com/linkedin/r2/filter/compression/Compressor/deflate(java.io.InputStream)|",
      "|java+method:///com/linkedin/r2/filter/compression/EncodingType/getCompressor()|",
      "|java+method:///com/linkedin/r2/filter/compression/ClientCompressionFilter/addResponseCompressionHeaders(com.linkedin.r2.filter.CompressionOption,com.linkedin.r2.message.rest.RestRequest)|",
      "|java+method:///com/linkedin/r2/filter/compression/EncodingType/hasCompressor()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/setEntity(byte%5B%5D)|",
      "|java+method:///com/linkedin/r2/filter/compression/Compressor/getContentEncodingName()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/linkedin/data/ByteString/length()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/builder()|",
      "|java+method:///com/linkedin/r2/filter/compression/ClientCompressionFilter/shouldCompressResponseForOperation(java.lang.String)|",
      "|java+method:///com/linkedin/r2/filter/compression/CompressionException/getMessage()|",
      "|java+method:///com/linkedin/data/ByteString/asInputStream()|",
      "|java+method:///com/linkedin/r2/filter/compression/CompressionException/getCause()|",
      "|java+method:///com/linkedin/r2/filter/NextFilter/onRequest(com.linkedin.r2.message.Request,com.linkedin.r2.message.RequestContext,java.util.Map)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/build()|",
      "|java+method:///com/linkedin/r2/filter/compression/ClientCompressionFilter/shouldCompressRequest(int,com.linkedin.r2.filter.CompressionOption)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/setHeader(java.lang.String,java.lang.String)|",
      "|java+method:///com/linkedin/r2/message/RequestContext/getLocalAttr(java.lang.String)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getEntity()|"
    ],
    "v2Body": [
      "|java+method:///com/linkedin/r2/filter/compression/ClientCompressionHelper/shouldCompressResponseForOperation(java.lang.String)|",
      "|java+method:///com/linkedin/r2/filter/compression/Compressor/deflate(java.io.InputStream)|",
      "|java+method:///com/linkedin/r2/filter/compression/EncodingType/getCompressor()|",
      "|java+method:///com/linkedin/r2/filter/compression/ClientCompressionFilter/addResponseCompressionHeaders(com.linkedin.r2.filter.CompressionOption,com.linkedin.r2.message.rest.RestRequest)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/setEntity(byte%5B%5D)|",
      "|java+method:///com/linkedin/r2/filter/compression/Compressor/getContentEncodingName()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/linkedin/data/ByteString/length()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/setHeader(java.lang.String,java.lang.String)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/builder()|",
      "|java+method:///com/linkedin/r2/filter/compression/CompressionException/getMessage()|",
      "|java+method:///com/linkedin/data/ByteString/asInputStream()|",
      "|java+method:///com/linkedin/r2/filter/compression/CompressionException/getCause()|",
      "|java+method:///com/linkedin/r2/filter/NextFilter/onRequest(com.linkedin.r2.message.Request,com.linkedin.r2.message.RequestContext,java.util.Map)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/build()|",
      "|java+method:///com/linkedin/r2/filter/compression/ClientCompressionHelper/shouldCompressRequest(int,com.linkedin.r2.filter.CompressionOption)|",
      "|java+method:///com/linkedin/r2/filter/compression/EncodingType/hasCompressor()|",
      "|java+method:///com/linkedin/r2/message/RequestContext/getLocalAttr(java.lang.String)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getEntity()|"
    ],
    "affectedLib": "com.linkedin.pegasus:data:3.1.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.pegasus:r2-filter-compression:2.12.7",
    "coordinatesV2": "com.linkedin.pegasus:r2-filter-compression:3.1.1",
    "caller": "|java+method:///com/linkedin/r2/filter/compression/ClientCompressionFilter/onRestRequest(com.linkedin.r2.message.rest.RestRequest,com.linkedin.r2.message.RequestContext,java.util.Map,com.linkedin.r2.filter.NextFilter)|",
    "called": "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/build()|",
    "v1Body": [
      "|java+method:///com/linkedin/r2/filter/compression/Compressor/deflate(java.io.InputStream)|",
      "|java+method:///com/linkedin/r2/filter/compression/EncodingType/getCompressor()|",
      "|java+method:///com/linkedin/r2/filter/compression/ClientCompressionFilter/addResponseCompressionHeaders(com.linkedin.r2.filter.CompressionOption,com.linkedin.r2.message.rest.RestRequest)|",
      "|java+method:///com/linkedin/r2/filter/compression/EncodingType/hasCompressor()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/setEntity(byte%5B%5D)|",
      "|java+method:///com/linkedin/r2/filter/compression/Compressor/getContentEncodingName()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/linkedin/data/ByteString/length()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/builder()|",
      "|java+method:///com/linkedin/r2/filter/compression/ClientCompressionFilter/shouldCompressResponseForOperation(java.lang.String)|",
      "|java+method:///com/linkedin/r2/filter/compression/CompressionException/getMessage()|",
      "|java+method:///com/linkedin/data/ByteString/asInputStream()|",
      "|java+method:///com/linkedin/r2/filter/compression/CompressionException/getCause()|",
      "|java+method:///com/linkedin/r2/filter/NextFilter/onRequest(com.linkedin.r2.message.Request,com.linkedin.r2.message.RequestContext,java.util.Map)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/build()|",
      "|java+method:///com/linkedin/r2/filter/compression/ClientCompressionFilter/shouldCompressRequest(int,com.linkedin.r2.filter.CompressionOption)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/setHeader(java.lang.String,java.lang.String)|",
      "|java+method:///com/linkedin/r2/message/RequestContext/getLocalAttr(java.lang.String)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getEntity()|"
    ],
    "v2Body": [
      "|java+method:///com/linkedin/r2/filter/compression/ClientCompressionHelper/shouldCompressResponseForOperation(java.lang.String)|",
      "|java+method:///com/linkedin/r2/filter/compression/Compressor/deflate(java.io.InputStream)|",
      "|java+method:///com/linkedin/r2/filter/compression/EncodingType/getCompressor()|",
      "|java+method:///com/linkedin/r2/filter/compression/ClientCompressionFilter/addResponseCompressionHeaders(com.linkedin.r2.filter.CompressionOption,com.linkedin.r2.message.rest.RestRequest)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/setEntity(byte%5B%5D)|",
      "|java+method:///com/linkedin/r2/filter/compression/Compressor/getContentEncodingName()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/linkedin/data/ByteString/length()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/setHeader(java.lang.String,java.lang.String)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/builder()|",
      "|java+method:///com/linkedin/r2/filter/compression/CompressionException/getMessage()|",
      "|java+method:///com/linkedin/data/ByteString/asInputStream()|",
      "|java+method:///com/linkedin/r2/filter/compression/CompressionException/getCause()|",
      "|java+method:///com/linkedin/r2/filter/NextFilter/onRequest(com.linkedin.r2.message.Request,com.linkedin.r2.message.RequestContext,java.util.Map)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/build()|",
      "|java+method:///com/linkedin/r2/filter/compression/ClientCompressionHelper/shouldCompressRequest(int,com.linkedin.r2.filter.CompressionOption)|",
      "|java+method:///com/linkedin/r2/filter/compression/EncodingType/hasCompressor()|",
      "|java+method:///com/linkedin/r2/message/RequestContext/getLocalAttr(java.lang.String)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getEntity()|"
    ],
    "affectedLib": "com.linkedin.pegasus:r2-core:3.1.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.linkedin.pegasus:r2-filter-compression:2.12.7",
    "coordinatesV2": "com.linkedin.pegasus:r2-filter-compression:3.1.1",
    "caller": "|java+method:///com/linkedin/r2/filter/compression/ServerCompressionFilter/onRestRequest(com.linkedin.r2.message.rest.RestRequest,com.linkedin.r2.message.RequestContext,java.util.Map,com.linkedin.r2.filter.NextFilter)|",
    "called": "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/build()|",
    "v1Body": [
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/setHeaders(java.util.Map)|",
      "|java+method:///java/lang/String/toLowerCase()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getHeaders()|",
      "|java+method:///com/linkedin/r2/filter/compression/EncodingType/getCompressor()|",
      "|java+method:///com/linkedin/r2/filter/NextFilter/onError(java.lang.Throwable,com.linkedin.r2.message.RequestContext,java.util.Map)|",
      "|java+method:///com/linkedin/r2/filter/compression/Compressor/inflate(java.io.InputStream)|",
      "|java+method:///java/lang/Integer/toString(int)|",
      "|java+method:///com/linkedin/r2/filter/compression/EncodingType/hasCompressor()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/setEntity(byte%5B%5D)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///com/linkedin/r2/message/rest/RestException/RestException(com.linkedin.r2.message.rest.RestResponse,java.lang.Throwable)|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/setStatus(int)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/builder()|",
      "|java+method:///com/linkedin/r2/filter/compression/ServerCompressionFilter/getResponseCompressionThreshold(com.linkedin.r2.message.rest.RestRequest)|",
      "|java+method:///com/linkedin/r2/filter/NextFilter/onRequest(com.linkedin.r2.message.Request,com.linkedin.r2.message.RequestContext,java.util.Map)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/build()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+constructor:///java/util/HashMap/HashMap(java.util.Map)|",
      "|java+method:///com/linkedin/r2/message/RequestContext/putLocalAttr(java.lang.String,java.lang.Object)|",
      "|java+constructor:///com/linkedin/r2/message/rest/RestResponseBuilder/RestResponseBuilder()|",
      "|java+constructor:///com/linkedin/r2/filter/compression/CompressionException/CompressionException(java.lang.String)|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/build()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getEntity()|",
      "|java+method:///com/linkedin/r2/filter/compression/CompressionException/getMessage()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getHeader(java.lang.String)|",
      "|java+method:///java/util/Map/remove(java.lang.Object)|",
      "|java+method:///com/linkedin/data/ByteString/asInputStream()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/linkedin/r2/filter/compression/EncodingType/get(java.lang.String)|",
      "|java+method:///com/linkedin/r2/filter/compression/CompressionException/getCause()|"
    ],
    "v2Body": [
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/setHeaders(java.util.Map)|",
      "|java+method:///java/lang/String/toLowerCase()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getHeaders()|",
      "|java+method:///com/linkedin/r2/filter/compression/EncodingType/getCompressor()|",
      "|java+method:///com/linkedin/r2/filter/NextFilter/onError(java.lang.Throwable,com.linkedin.r2.message.RequestContext,java.util.Map)|",
      "|java+method:///com/linkedin/r2/filter/compression/Compressor/inflate(java.io.InputStream)|",
      "|java+method:///java/lang/Integer/toString(int)|",
      "|java+method:///com/linkedin/r2/filter/compression/EncodingType/hasCompressor()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/setEntity(byte%5B%5D)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///com/linkedin/r2/message/rest/RestException/RestException(com.linkedin.r2.message.rest.RestResponse,java.lang.Throwable)|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/setStatus(int)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/builder()|",
      "|java+method:///com/linkedin/r2/filter/NextFilter/onRequest(com.linkedin.r2.message.Request,com.linkedin.r2.message.RequestContext,java.util.Map)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequestBuilder/build()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+constructor:///java/util/HashMap/HashMap(java.util.Map)|",
      "|java+method:///com/linkedin/r2/message/RequestContext/putLocalAttr(java.lang.String,java.lang.Object)|",
      "|java+method:///com/linkedin/r2/filter/compression/ServerCompressionHelper/getResponseCompressionThreshold(com.linkedin.r2.message.MessageHeaders)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///com/linkedin/r2/message/rest/RestResponseBuilder/RestResponseBuilder()|",
      "|java+constructor:///com/linkedin/r2/filter/compression/CompressionException/CompressionException(java.lang.String)|",
      "|java+method:///com/linkedin/r2/message/rest/RestResponseBuilder/build()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getEntity()|",
      "|java+method:///com/linkedin/r2/filter/compression/CompressionException/getMessage()|",
      "|java+method:///com/linkedin/r2/message/rest/RestRequest/getHeader(java.lang.String)|",
      "|java+method:///java/util/Map/remove(java.lang.Object)|",
      "|java+method:///com/linkedin/data/ByteString/asInputStream()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/linkedin/r2/filter/compression/EncodingType/get(java.lang.String)|",
      "|java+method:///com/linkedin/r2/filter/compression/CompressionException/getCause()|"
    ],
    "affectedLib": "com.linkedin.pegasus:r2-core:3.1.1",
    "change": "UPDATED"
  }
]