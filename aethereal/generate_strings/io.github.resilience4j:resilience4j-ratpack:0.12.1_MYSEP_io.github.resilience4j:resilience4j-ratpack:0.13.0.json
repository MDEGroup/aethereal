[
  {
    "coordinatesV1": "io.github.resilience4j:resilience4j-ratpack:0.13.0",
    "coordinatesV2": "io.github.resilience4j:resilience4j-ratpack:0.12.1",
    "caller": "|java+method:///io/github/resilience4j/ratpack/retry/RetryMethodInterceptor/invoke(org.aopalliance.intercept.MethodInvocation)|",
    "called": "|java+method:///io/github/resilience4j/retry/transformer/RetryTransformer/of(io.github.resilience4j.retry.Retry)|",
    "v1Body": [
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///org/aopalliance/intercept/MethodInvocation/getMethod()|",
      "|java+method:///io/reactivex/Observable/onErrorReturn(io.reactivex.functions.Function)|",
      "|java+method:///io/github/resilience4j/ratpack/retry/RetryMethodInterceptor/proceed(org.aopalliance.intercept.MethodInvocation,io.github.resilience4j.retry.Retry,io.github.resilience4j.ratpack.recovery.RecoveryFunction)|",
      "|java+method:///io/github/resilience4j/ratpack/retry/RetryMethodInterceptor/executeCompletionStage(org.aopalliance.intercept.MethodInvocation,java.util.concurrent.CompletionStage,io.github.resilience4j.retry.Retry$Context,io.github.resilience4j.ratpack.recovery.RecoveryFunction)|",
      "|java+method:///io/github/resilience4j/retry/RetryRegistry/retry(java.lang.String)|",
      "|java+method:///java/lang/reflect/Method/getReturnType()|",
      "|java+method:///io/github/resilience4j/ratpack/retry/RetryTransformer/of(io.github.resilience4j.retry.Retry)|",
      "|java+method:///io/github/resilience4j/retry/Retry/context()|",
      "|java+method:///org/aopalliance/intercept/MethodInvocation/proceed()|",
      "|java+method:///io/github/resilience4j/retry/RetryRegistry/ofDefaults()|",
      "|java+method:///io/reactivex/Observable/compose(io.reactivex.ObservableTransformer)|",
      "|java+method:///io/reactivex/Flowable/compose(io.reactivex.FlowableTransformer)|",
      "|java+method:///io/reactivex/Single/compose(io.reactivex.SingleTransformer)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///java/lang/reflect/Method/getAnnotation(java.lang.Class)|",
      "|java+method:///io/github/resilience4j/ratpack/retry/Retry/name()|",
      "|java+method:///io/github/resilience4j/retry/transformer/RetryTransformer/of(io.github.resilience4j.retry.Retry)|",
      "|java+method:///ratpack/exec/Promise/transform(ratpack.func.Function)|",
      "|java+method:///io/github/resilience4j/ratpack/retry/RetryTransformer/recover(ratpack.func.Function)|",
      "|java+method:///io/github/resilience4j/ratpack/retry/Retry/recovery()|",
      "|java+method:///io/reactivex/Flowable/onErrorReturn(io.reactivex.functions.Function)|",
      "|java+method:///io/reactivex/Single/onErrorReturn(io.reactivex.functions.Function)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///org/aopalliance/intercept/MethodInvocation/getMethod()|",
      "|java+method:///io/github/resilience4j/ratpack/retry/RetryMethodInterceptor/proceed(org.aopalliance.intercept.MethodInvocation,io.github.resilience4j.retry.Retry,io.github.resilience4j.ratpack.recovery.RecoveryFunction)|",
      "|java+method:///io/github/resilience4j/ratpack/retry/RetryMethodInterceptor/executeCompletionStage(org.aopalliance.intercept.MethodInvocation,java.util.concurrent.CompletionStage,io.github.resilience4j.retry.Retry$Context,io.github.resilience4j.ratpack.recovery.RecoveryFunction)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///io/github/resilience4j/retry/RetryRegistry/retry(java.lang.String)|",
      "|java+method:///ratpack/exec/Promise/async(ratpack.exec.Upstream)|",
      "|java+method:///reactor/core/publisher/Mono/create(java.util.function.Consumer)|",
      "|java+method:///ratpack/exec/Promise/transform(ratpack.func.Function)|",
      "|java+method:///java/lang/reflect/Method/getReturnType()|",
      "|java+method:///org/aopalliance/intercept/MethodInvocation/proceed()|",
      "|java+method:///io/github/resilience4j/retry/RetryRegistry/ofDefaults()|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/onErrorResume(reactor.core.publisher.Mono)|",
      "|java+method:///java/lang/reflect/Method/getAnnotation(java.lang.Class)|",
      "|java+method:///io/github/resilience4j/ratpack/retry/Retry/name()|",
      "|java+method:///io/github/resilience4j/ratpack/retry/RetryTransformer/of(io.github.resilience4j.retry.Retry)|",
      "|java+method:///reactor/core/publisher/Flux/create(java.util.function.Consumer)|",
      "|java+method:///io/github/resilience4j/ratpack/retry/RetryTransformer/recover(ratpack.func.Function)|",
      "|java+method:///io/github/resilience4j/ratpack/retry/Retry/recovery()|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/onErrorResume(reactor.core.publisher.Flux)|",
      "|java+method:///io/github/resilience4j/retry/Retry/context()|"
    ],
    "affectedLib": "io.github.resilience4j:resilience4j-rxjava2:0.12.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.github.resilience4j:resilience4j-ratpack:0.13.0",
    "coordinatesV2": "io.github.resilience4j:resilience4j-ratpack:0.12.1",
    "caller": "|java+method:///io/github/resilience4j/ratpack/retry/endpoint/RetryChain/lambda$null$16(ratpack.handling.Chain,ratpack.handling.Context)|",
    "called": "|java+method:///io/github/resilience4j/adapter/RxJava2Adapter/toFlowable(io.github.resilience4j.core.EventPublisher)|",
    "v1Body": [
      "|java+method:///ratpack/path/PathTokens/get(java.lang.Object)|",
      "|java+method:///io/vavr/control/Option/getOrElseThrow(java.util.function.Supplier)|",
      "|java+method:///ratpack/sse/ServerSentEvents/serverSentEvents(org.reactivestreams.Publisher,ratpack.func.Action)|",
      "|java+method:///io/github/resilience4j/adapter/RxJava2Adapter/toFlowable(io.github.resilience4j.core.EventPublisher)|",
      "|java+method:///ratpack/handling/Context/render(java.lang.Object)|",
      "|java+method:///io/vavr/collection/Seq/find(java.util.function.Predicate)|",
      "|java+method:///ratpack/handling/Context/getPathTokens()|",
      "|java+method:///io/github/resilience4j/retry/RetryRegistry/getAllRetries()|",
      "|java+method:///io/github/resilience4j/retry/Retry/getEventPublisher()|"
    ],
    "v2Body": [
      "|java+method:///ratpack/path/PathTokens/get(java.lang.Object)|",
      "|java+method:///io/vavr/control/Option/getOrElseThrow(java.util.function.Supplier)|",
      "|java+method:///ratpack/sse/ServerSentEvents/serverSentEvents(org.reactivestreams.Publisher,ratpack.func.Action)|",
      "|java+method:///ratpack/handling/Context/render(java.lang.Object)|",
      "|java+method:///io/github/resilience4j/ratpack/adapter/ReactorAdapter/toFlux(io.github.resilience4j.core.EventPublisher)|",
      "|java+method:///io/vavr/collection/Seq/find(java.util.function.Predicate)|",
      "|java+method:///ratpack/handling/Context/getPathTokens()|",
      "|java+method:///io/github/resilience4j/retry/RetryRegistry/getAllRetries()|",
      "|java+method:///io/github/resilience4j/retry/Retry/getEventPublisher()|"
    ],
    "affectedLib": "io.github.resilience4j:resilience4j-rxjava2:0.12.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.github.resilience4j:resilience4j-ratpack:0.13.0",
    "coordinatesV2": "io.github.resilience4j:resilience4j-ratpack:0.12.1",
    "caller": "|java+method:///io/github/resilience4j/ratpack/ratelimiter/endpoint/RateLimiterChain/lambda$null$16(ratpack.handling.Chain,ratpack.handling.Context)|",
    "called": "|java+method:///io/github/resilience4j/adapter/RxJava2Adapter/toFlowable(io.github.resilience4j.core.EventPublisher)|",
    "v1Body": [
      "|java+method:///io/vavr/control/Option/getOrElseThrow(java.util.function.Supplier)|",
      "|java+method:///ratpack/sse/ServerSentEvents/serverSentEvents(org.reactivestreams.Publisher,ratpack.func.Action)|",
      "|java+method:///io/github/resilience4j/adapter/RxJava2Adapter/toFlowable(io.github.resilience4j.core.EventPublisher)|",
      "|java+method:///ratpack/handling/Context/render(java.lang.Object)|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiter/getEventPublisher()|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiterRegistry/getAllRateLimiters()|",
      "|java+method:///ratpack/path/PathTokens/get(java.lang.Object)|",
      "|java+method:///io/vavr/collection/Seq/find(java.util.function.Predicate)|",
      "|java+method:///ratpack/handling/Context/getPathTokens()|"
    ],
    "v2Body": [
      "|java+method:///io/vavr/control/Option/getOrElseThrow(java.util.function.Supplier)|",
      "|java+method:///ratpack/sse/ServerSentEvents/serverSentEvents(org.reactivestreams.Publisher,ratpack.func.Action)|",
      "|java+method:///ratpack/handling/Context/render(java.lang.Object)|",
      "|java+method:///io/github/resilience4j/ratpack/adapter/ReactorAdapter/toFlux(io.github.resilience4j.core.EventPublisher)|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiter/getEventPublisher()|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiterRegistry/getAllRateLimiters()|",
      "|java+method:///ratpack/path/PathTokens/get(java.lang.Object)|",
      "|java+method:///io/vavr/collection/Seq/find(java.util.function.Predicate)|",
      "|java+method:///ratpack/handling/Context/getPathTokens()|"
    ],
    "affectedLib": "io.github.resilience4j:resilience4j-rxjava2:0.12.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.github.resilience4j:resilience4j-ratpack:0.13.0",
    "coordinatesV2": "io.github.resilience4j:resilience4j-ratpack:0.12.1",
    "caller": "|java+method:///io/github/resilience4j/ratpack/ratelimiter/endpoint/RateLimiterChain/lambda$null$3(io.github.resilience4j.ratelimiter.RateLimiter)|",
    "called": "|java+method:///io/github/resilience4j/adapter/RxJava2Adapter/toFlowable(io.github.resilience4j.core.EventPublisher)|",
    "v1Body": [
      "|java+method:///io/github/resilience4j/adapter/RxJava2Adapter/toFlowable(io.github.resilience4j.core.EventPublisher)|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiter/getEventPublisher()|"
    ],
    "v2Body": [
      "|java+method:///io/github/resilience4j/ratpack/adapter/ReactorAdapter/toFlux(io.github.resilience4j.core.EventPublisher)|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiter/getEventPublisher()|"
    ],
    "affectedLib": "io.github.resilience4j:resilience4j-rxjava2:0.12.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.github.resilience4j:resilience4j-ratpack:0.13.0",
    "coordinatesV2": "io.github.resilience4j:resilience4j-ratpack:0.12.1",
    "caller": "|java+method:///io/github/resilience4j/ratpack/retry/endpoint/RetryChain/lambda$null$27(ratpack.handling.Chain,ratpack.handling.Context)|",
    "called": "|java+method:///io/github/resilience4j/adapter/RxJava2Adapter/toFlowable(io.github.resilience4j.core.EventPublisher)|",
    "v1Body": [
      "|java+method:///ratpack/path/PathTokens/get(java.lang.Object)|",
      "|java+method:///io/vavr/control/Option/getOrElseThrow(java.util.function.Supplier)|",
      "|java+method:///io/reactivex/Flowable/filter(io.reactivex.functions.Predicate)|",
      "|java+method:///ratpack/sse/ServerSentEvents/serverSentEvents(org.reactivestreams.Publisher,ratpack.func.Action)|",
      "|java+method:///io/github/resilience4j/adapter/RxJava2Adapter/toFlowable(io.github.resilience4j.core.EventPublisher)|",
      "|java+method:///ratpack/handling/Context/render(java.lang.Object)|",
      "|java+method:///io/vavr/collection/Seq/find(java.util.function.Predicate)|",
      "|java+method:///ratpack/handling/Context/getPathTokens()|",
      "|java+method:///io/github/resilience4j/retry/RetryRegistry/getAllRetries()|",
      "|java+method:///io/github/resilience4j/retry/Retry/getEventPublisher()|"
    ],
    "v2Body": [
      "|java+method:///reactor/core/publisher/Flux/filter(java.util.function.Predicate)|",
      "|java+method:///ratpack/path/PathTokens/get(java.lang.Object)|",
      "|java+method:///io/vavr/control/Option/getOrElseThrow(java.util.function.Supplier)|",
      "|java+method:///ratpack/sse/ServerSentEvents/serverSentEvents(org.reactivestreams.Publisher,ratpack.func.Action)|",
      "|java+method:///ratpack/handling/Context/render(java.lang.Object)|",
      "|java+method:///io/github/resilience4j/ratpack/adapter/ReactorAdapter/toFlux(io.github.resilience4j.core.EventPublisher)|",
      "|java+method:///io/vavr/collection/Seq/find(java.util.function.Predicate)|",
      "|java+method:///ratpack/handling/Context/getPathTokens()|",
      "|java+method:///io/github/resilience4j/retry/RetryRegistry/getAllRetries()|",
      "|java+method:///io/github/resilience4j/retry/Retry/getEventPublisher()|"
    ],
    "affectedLib": "io.github.resilience4j:resilience4j-rxjava2:0.12.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.github.resilience4j:resilience4j-ratpack:0.13.0",
    "coordinatesV2": "io.github.resilience4j:resilience4j-ratpack:0.12.1",
    "caller": "|java+method:///io/github/resilience4j/ratpack/bulkhead/endpoint/BulkheadChain/lambda$null$27(ratpack.handling.Chain,ratpack.handling.Context)|",
    "called": "|java+method:///io/github/resilience4j/adapter/RxJava2Adapter/toFlowable(io.github.resilience4j.core.EventPublisher)|",
    "v1Body": [
      "|java+method:///io/vavr/control/Option/getOrElseThrow(java.util.function.Supplier)|",
      "|java+method:///io/github/resilience4j/bulkhead/Bulkhead/getEventPublisher()|",
      "|java+method:///io/reactivex/Flowable/filter(io.reactivex.functions.Predicate)|",
      "|java+method:///ratpack/sse/ServerSentEvents/serverSentEvents(org.reactivestreams.Publisher,ratpack.func.Action)|",
      "|java+method:///io/github/resilience4j/adapter/RxJava2Adapter/toFlowable(io.github.resilience4j.core.EventPublisher)|",
      "|java+method:///ratpack/handling/Context/render(java.lang.Object)|",
      "|java+method:///io/github/resilience4j/bulkhead/BulkheadRegistry/getAllBulkheads()|",
      "|java+method:///ratpack/path/PathTokens/get(java.lang.Object)|",
      "|java+method:///io/vavr/collection/Seq/find(java.util.function.Predicate)|",
      "|java+method:///ratpack/handling/Context/getPathTokens()|"
    ],
    "v2Body": [
      "|java+method:///reactor/core/publisher/Flux/filter(java.util.function.Predicate)|",
      "|java+method:///io/vavr/control/Option/getOrElseThrow(java.util.function.Supplier)|",
      "|java+method:///io/github/resilience4j/bulkhead/Bulkhead/getEventPublisher()|",
      "|java+method:///ratpack/sse/ServerSentEvents/serverSentEvents(org.reactivestreams.Publisher,ratpack.func.Action)|",
      "|java+method:///ratpack/handling/Context/render(java.lang.Object)|",
      "|java+method:///io/github/resilience4j/ratpack/adapter/ReactorAdapter/toFlux(io.github.resilience4j.core.EventPublisher)|",
      "|java+method:///io/github/resilience4j/bulkhead/BulkheadRegistry/getAllBulkheads()|",
      "|java+method:///ratpack/path/PathTokens/get(java.lang.Object)|",
      "|java+method:///io/vavr/collection/Seq/find(java.util.function.Predicate)|",
      "|java+method:///ratpack/handling/Context/getPathTokens()|"
    ],
    "affectedLib": "io.github.resilience4j:resilience4j-rxjava2:0.12.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.github.resilience4j:resilience4j-ratpack:0.13.0",
    "coordinatesV2": "io.github.resilience4j:resilience4j-ratpack:0.12.1",
    "caller": "|java+method:///io/github/resilience4j/ratpack/ratelimiter/endpoint/RateLimiterChain/lambda$null$27(ratpack.handling.Chain,ratpack.handling.Context)|",
    "called": "|java+method:///io/github/resilience4j/adapter/RxJava2Adapter/toFlowable(io.github.resilience4j.core.EventPublisher)|",
    "v1Body": [
      "|java+method:///io/vavr/control/Option/getOrElseThrow(java.util.function.Supplier)|",
      "|java+method:///io/reactivex/Flowable/filter(io.reactivex.functions.Predicate)|",
      "|java+method:///ratpack/sse/ServerSentEvents/serverSentEvents(org.reactivestreams.Publisher,ratpack.func.Action)|",
      "|java+method:///io/github/resilience4j/adapter/RxJava2Adapter/toFlowable(io.github.resilience4j.core.EventPublisher)|",
      "|java+method:///ratpack/handling/Context/render(java.lang.Object)|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiter/getEventPublisher()|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiterRegistry/getAllRateLimiters()|",
      "|java+method:///ratpack/path/PathTokens/get(java.lang.Object)|",
      "|java+method:///io/vavr/collection/Seq/find(java.util.function.Predicate)|",
      "|java+method:///ratpack/handling/Context/getPathTokens()|"
    ],
    "v2Body": [
      "|java+method:///reactor/core/publisher/Flux/filter(java.util.function.Predicate)|",
      "|java+method:///io/vavr/control/Option/getOrElseThrow(java.util.function.Supplier)|",
      "|java+method:///ratpack/sse/ServerSentEvents/serverSentEvents(org.reactivestreams.Publisher,ratpack.func.Action)|",
      "|java+method:///ratpack/handling/Context/render(java.lang.Object)|",
      "|java+method:///io/github/resilience4j/ratpack/adapter/ReactorAdapter/toFlux(io.github.resilience4j.core.EventPublisher)|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiter/getEventPublisher()|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiterRegistry/getAllRateLimiters()|",
      "|java+method:///ratpack/path/PathTokens/get(java.lang.Object)|",
      "|java+method:///io/vavr/collection/Seq/find(java.util.function.Predicate)|",
      "|java+method:///ratpack/handling/Context/getPathTokens()|"
    ],
    "affectedLib": "io.github.resilience4j:resilience4j-rxjava2:0.12.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.github.resilience4j:resilience4j-ratpack:0.13.0",
    "coordinatesV2": "io.github.resilience4j:resilience4j-ratpack:0.12.1",
    "caller": "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiterMethodInterceptor/invoke(org.aopalliance.intercept.MethodInvocation)|",
    "called": "|java+method:///io/github/resilience4j/ratelimiter/operator/RateLimiterOperator/of(io.github.resilience4j.ratelimiter.RateLimiter)|",
    "v1Body": [
      "|java+method:///org/aopalliance/intercept/MethodInvocation/getMethod()|",
      "|java+method:///io/reactivex/Observable/onErrorReturn(io.reactivex.functions.Function)|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiterMethodInterceptor/proceed(org.aopalliance.intercept.MethodInvocation,io.github.resilience4j.ratelimiter.RateLimiter,io.github.resilience4j.ratpack.recovery.RecoveryFunction)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiterRegistry/rateLimiter(java.lang.String)|",
      "|java+constructor:///io/github/resilience4j/ratelimiter/RequestNotPermitted/RequestNotPermitted(java.lang.String)|",
      "|java+method:///ratpack/exec/Promise/transform(ratpack.func.Function)|",
      "|java+method:///java/lang/reflect/Method/getReturnType()|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/apply(java.lang.Object)|",
      "|java+method:///org/aopalliance/intercept/MethodInvocation/proceed()|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiterRegistry/ofDefaults()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/concurrent/CompletableFuture/complete(java.lang.Object)|",
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiterMethodInterceptor/handleProceedWithException(org.aopalliance.intercept.MethodInvocation,io.github.resilience4j.ratelimiter.RateLimiter,io.github.resilience4j.ratpack.recovery.RecoveryFunction)|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiter/getPermission(java.time.Duration)|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiter/getRateLimiterConfig()|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiter/getName()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiter/name()|",
      "|java+method:///java/lang/reflect/Method/getAnnotation(java.lang.Class)|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiterConfig/getTimeoutDuration()|",
      "|java+constructor:///java/util/concurrent/CompletableFuture/CompletableFuture()|",
      "|java+method:///java/util/concurrent/CompletableFuture/completeExceptionally(java.lang.Throwable)|",
      "|java+method:///io/reactivex/Flowable/lift(io.reactivex.FlowableOperator)|",
      "|java+method:///io/reactivex/Single/lift(io.reactivex.SingleOperator)|",
      "|java+method:///io/reactivex/Observable/lift(io.reactivex.ObservableOperator)|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiterTransformer/of(io.github.resilience4j.ratelimiter.RateLimiter)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiter/recovery()|",
      "|java+method:///io/github/resilience4j/ratelimiter/operator/RateLimiterOperator/of(io.github.resilience4j.ratelimiter.RateLimiter)|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiterTransformer/recover(ratpack.func.Function)|",
      "|java+method:///io/reactivex/Flowable/onErrorReturn(io.reactivex.functions.Function)|",
      "|java+method:///io/reactivex/Single/onErrorReturn(io.reactivex.functions.Function)|"
    ],
    "v2Body": [
      "|java+method:///org/aopalliance/intercept/MethodInvocation/getMethod()|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiterMethodInterceptor/proceed(org.aopalliance.intercept.MethodInvocation,io.github.resilience4j.ratelimiter.RateLimiter,io.github.resilience4j.ratpack.recovery.RecoveryFunction)|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiterRegistry/rateLimiter(java.lang.String)|",
      "|java+constructor:///io/github/resilience4j/ratelimiter/RequestNotPermitted/RequestNotPermitted(java.lang.String)|",
      "|java+method:///ratpack/exec/Promise/transform(ratpack.func.Function)|",
      "|java+method:///java/util/concurrent/CompletableFuture/completeExceptionally(java.lang.Throwable)|",
      "|java+method:///java/lang/reflect/Method/getReturnType()|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/onErrorResume(reactor.core.publisher.Flux)|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/apply(java.lang.Object)|",
      "|java+method:///org/aopalliance/intercept/MethodInvocation/proceed()|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiterRegistry/ofDefaults()|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/onErrorResume(reactor.core.publisher.Mono)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/concurrent/CompletableFuture/complete(java.lang.Object)|",
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///reactor/core/publisher/Flux/transform(java.util.function.Function)|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiterMethodInterceptor/handleProceedWithException(org.aopalliance.intercept.MethodInvocation,io.github.resilience4j.ratelimiter.RateLimiter,io.github.resilience4j.ratpack.recovery.RecoveryFunction)|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiter/getPermission(java.time.Duration)|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiter/getRateLimiterConfig()|",
      "|java+method:///reactor/core/publisher/Mono/transform(java.util.function.Function)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiter/getName()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiter/name()|",
      "|java+method:///java/lang/reflect/Method/getAnnotation(java.lang.Class)|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiterConfig/getTimeoutDuration()|",
      "|java+constructor:///java/util/concurrent/CompletableFuture/CompletableFuture()|",
      "|java+method:///io/github/resilience4j/reactor/ratelimiter/operator/RateLimiterOperator/of(io.github.resilience4j.ratelimiter.RateLimiter,reactor.core.scheduler.Scheduler)|",
      "|java+method:///reactor/core/scheduler/Schedulers/immediate()|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiterTransformer/of(io.github.resilience4j.ratelimiter.RateLimiter)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiter/recovery()|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiterTransformer/recover(ratpack.func.Function)|"
    ],
    "affectedLib": "io.github.resilience4j:resilience4j-rxjava2:0.12.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.github.resilience4j:resilience4j-ratpack:0.13.0",
    "coordinatesV2": "io.github.resilience4j:resilience4j-ratpack:0.12.1",
    "caller": "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/endpoint/CircuitBreakerChain/lambda$null$27(ratpack.handling.Chain,ratpack.handling.Context)|",
    "called": "|java+method:///io/github/resilience4j/adapter/RxJava2Adapter/toFlowable(io.github.resilience4j.core.EventPublisher)|",
    "v1Body": [
      "|java+method:///ratpack/path/PathTokens/get(java.lang.Object)|",
      "|java+method:///io/vavr/control/Option/getOrElseThrow(java.util.function.Supplier)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreaker/getEventPublisher()|",
      "|java+method:///io/reactivex/Flowable/filter(io.reactivex.functions.Predicate)|",
      "|java+method:///ratpack/sse/ServerSentEvents/serverSentEvents(org.reactivestreams.Publisher,ratpack.func.Action)|",
      "|java+method:///io/github/resilience4j/adapter/RxJava2Adapter/toFlowable(io.github.resilience4j.core.EventPublisher)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerRegistry/getAllCircuitBreakers()|",
      "|java+method:///ratpack/handling/Context/render(java.lang.Object)|",
      "|java+method:///io/vavr/collection/Seq/find(java.util.function.Predicate)|",
      "|java+method:///ratpack/handling/Context/getPathTokens()|"
    ],
    "v2Body": [
      "|java+method:///reactor/core/publisher/Flux/filter(java.util.function.Predicate)|",
      "|java+method:///ratpack/path/PathTokens/get(java.lang.Object)|",
      "|java+method:///io/vavr/control/Option/getOrElseThrow(java.util.function.Supplier)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreaker/getEventPublisher()|",
      "|java+method:///ratpack/sse/ServerSentEvents/serverSentEvents(org.reactivestreams.Publisher,ratpack.func.Action)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerRegistry/getAllCircuitBreakers()|",
      "|java+method:///ratpack/handling/Context/render(java.lang.Object)|",
      "|java+method:///io/github/resilience4j/ratpack/adapter/ReactorAdapter/toFlux(io.github.resilience4j.core.EventPublisher)|",
      "|java+method:///io/vavr/collection/Seq/find(java.util.function.Predicate)|",
      "|java+method:///ratpack/handling/Context/getPathTokens()|"
    ],
    "affectedLib": "io.github.resilience4j:resilience4j-rxjava2:0.12.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.github.resilience4j:resilience4j-ratpack:0.13.0",
    "coordinatesV2": "io.github.resilience4j:resilience4j-ratpack:0.12.1",
    "caller": "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/endpoint/CircuitBreakerChain/lambda$null$16(ratpack.handling.Chain,ratpack.handling.Context)|",
    "called": "|java+method:///io/github/resilience4j/adapter/RxJava2Adapter/toFlowable(io.github.resilience4j.core.EventPublisher)|",
    "v1Body": [
      "|java+method:///ratpack/path/PathTokens/get(java.lang.Object)|",
      "|java+method:///io/vavr/control/Option/getOrElseThrow(java.util.function.Supplier)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreaker/getEventPublisher()|",
      "|java+method:///ratpack/sse/ServerSentEvents/serverSentEvents(org.reactivestreams.Publisher,ratpack.func.Action)|",
      "|java+method:///io/github/resilience4j/adapter/RxJava2Adapter/toFlowable(io.github.resilience4j.core.EventPublisher)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerRegistry/getAllCircuitBreakers()|",
      "|java+method:///ratpack/handling/Context/render(java.lang.Object)|",
      "|java+method:///io/vavr/collection/Seq/find(java.util.function.Predicate)|",
      "|java+method:///ratpack/handling/Context/getPathTokens()|"
    ],
    "v2Body": [
      "|java+method:///ratpack/path/PathTokens/get(java.lang.Object)|",
      "|java+method:///io/vavr/control/Option/getOrElseThrow(java.util.function.Supplier)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreaker/getEventPublisher()|",
      "|java+method:///ratpack/sse/ServerSentEvents/serverSentEvents(org.reactivestreams.Publisher,ratpack.func.Action)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerRegistry/getAllCircuitBreakers()|",
      "|java+method:///ratpack/handling/Context/render(java.lang.Object)|",
      "|java+method:///io/github/resilience4j/ratpack/adapter/ReactorAdapter/toFlux(io.github.resilience4j.core.EventPublisher)|",
      "|java+method:///io/vavr/collection/Seq/find(java.util.function.Predicate)|",
      "|java+method:///ratpack/handling/Context/getPathTokens()|"
    ],
    "affectedLib": "io.github.resilience4j:resilience4j-rxjava2:0.12.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.github.resilience4j:resilience4j-ratpack:0.13.0",
    "coordinatesV2": "io.github.resilience4j:resilience4j-ratpack:0.12.1",
    "caller": "|java+method:///io/github/resilience4j/ratpack/retry/endpoint/RetryChain/lambda$null$3(io.github.resilience4j.retry.Retry)|",
    "called": "|java+method:///io/github/resilience4j/adapter/RxJava2Adapter/toFlowable(io.github.resilience4j.core.EventPublisher)|",
    "v1Body": [
      "|java+method:///io/github/resilience4j/adapter/RxJava2Adapter/toFlowable(io.github.resilience4j.core.EventPublisher)|",
      "|java+method:///io/github/resilience4j/retry/Retry/getEventPublisher()|"
    ],
    "v2Body": [
      "|java+method:///io/github/resilience4j/ratpack/adapter/ReactorAdapter/toFlux(io.github.resilience4j.core.EventPublisher)|",
      "|java+method:///io/github/resilience4j/retry/Retry/getEventPublisher()|"
    ],
    "affectedLib": "io.github.resilience4j:resilience4j-rxjava2:0.12.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.github.resilience4j:resilience4j-ratpack:0.13.0",
    "coordinatesV2": "io.github.resilience4j:resilience4j-ratpack:0.12.1",
    "caller": "|java+method:///io/github/resilience4j/ratpack/bulkhead/endpoint/BulkheadChain/lambda$null$16(ratpack.handling.Chain,ratpack.handling.Context)|",
    "called": "|java+method:///io/github/resilience4j/adapter/RxJava2Adapter/toFlowable(io.github.resilience4j.core.EventPublisher)|",
    "v1Body": [
      "|java+method:///io/vavr/control/Option/getOrElseThrow(java.util.function.Supplier)|",
      "|java+method:///io/github/resilience4j/bulkhead/Bulkhead/getEventPublisher()|",
      "|java+method:///ratpack/sse/ServerSentEvents/serverSentEvents(org.reactivestreams.Publisher,ratpack.func.Action)|",
      "|java+method:///io/github/resilience4j/adapter/RxJava2Adapter/toFlowable(io.github.resilience4j.core.EventPublisher)|",
      "|java+method:///ratpack/handling/Context/render(java.lang.Object)|",
      "|java+method:///io/github/resilience4j/bulkhead/BulkheadRegistry/getAllBulkheads()|",
      "|java+method:///ratpack/path/PathTokens/get(java.lang.Object)|",
      "|java+method:///io/vavr/collection/Seq/find(java.util.function.Predicate)|",
      "|java+method:///ratpack/handling/Context/getPathTokens()|"
    ],
    "v2Body": [
      "|java+method:///io/vavr/control/Option/getOrElseThrow(java.util.function.Supplier)|",
      "|java+method:///io/github/resilience4j/bulkhead/Bulkhead/getEventPublisher()|",
      "|java+method:///ratpack/sse/ServerSentEvents/serverSentEvents(org.reactivestreams.Publisher,ratpack.func.Action)|",
      "|java+method:///ratpack/handling/Context/render(java.lang.Object)|",
      "|java+method:///io/github/resilience4j/ratpack/adapter/ReactorAdapter/toFlux(io.github.resilience4j.core.EventPublisher)|",
      "|java+method:///io/github/resilience4j/bulkhead/BulkheadRegistry/getAllBulkheads()|",
      "|java+method:///ratpack/path/PathTokens/get(java.lang.Object)|",
      "|java+method:///io/vavr/collection/Seq/find(java.util.function.Predicate)|",
      "|java+method:///ratpack/handling/Context/getPathTokens()|"
    ],
    "affectedLib": "io.github.resilience4j:resilience4j-rxjava2:0.12.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.github.resilience4j:resilience4j-ratpack:0.13.0",
    "coordinatesV2": "io.github.resilience4j:resilience4j-ratpack:0.12.1",
    "caller": "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/endpoint/CircuitBreakerChain/lambda$null$3(io.github.resilience4j.circuitbreaker.CircuitBreaker)|",
    "called": "|java+method:///io/github/resilience4j/adapter/RxJava2Adapter/toFlowable(io.github.resilience4j.core.EventPublisher)|",
    "v1Body": [
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreaker/getEventPublisher()|",
      "|java+method:///io/github/resilience4j/adapter/RxJava2Adapter/toFlowable(io.github.resilience4j.core.EventPublisher)|"
    ],
    "v2Body": [
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreaker/getEventPublisher()|",
      "|java+method:///io/github/resilience4j/ratpack/adapter/ReactorAdapter/toFlux(io.github.resilience4j.core.EventPublisher)|"
    ],
    "affectedLib": "io.github.resilience4j:resilience4j-rxjava2:0.12.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.github.resilience4j:resilience4j-ratpack:0.13.0",
    "coordinatesV2": "io.github.resilience4j:resilience4j-ratpack:0.12.1",
    "caller": "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerMethodInterceptor/invoke(org.aopalliance.intercept.MethodInvocation)|",
    "called": "|java+method:///io/github/resilience4j/circuitbreaker/operator/CircuitBreakerOperator/of(io.github.resilience4j.circuitbreaker.CircuitBreaker)|",
    "v1Body": [
      "|java+method:///org/aopalliance/intercept/MethodInvocation/getMethod()|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerTransformer/recover(ratpack.func.Function)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreaker/isCallPermitted()|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreaker/recovery()|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///ratpack/exec/Promise/transform(ratpack.func.Function)|",
      "|java+method:///java/lang/reflect/Method/getReturnType()|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/apply(java.lang.Object)|",
      "|java+method:///org/aopalliance/intercept/MethodInvocation/proceed()|",
      "|java+method:///java/util/concurrent/CompletionStage/whenComplete(java.util.function.BiConsumer)|",
      "|java+method:///java/util/concurrent/CompletableFuture/complete(java.lang.Object)|",
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///io/reactivex/Observable/onErrorReturn(io.reactivex.functions.Function)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerRegistry/circuitBreaker(java.lang.String)|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerMethodInterceptor/proceed(org.aopalliance.intercept.MethodInvocation,io.github.resilience4j.circuitbreaker.CircuitBreaker,io.github.resilience4j.ratpack.recovery.RecoveryFunction)|",
      "|java+method:///java/lang/reflect/Method/getAnnotation(java.lang.Class)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/operator/CircuitBreakerOperator/of(io.github.resilience4j.circuitbreaker.CircuitBreaker)|",
      "|java+constructor:///io/github/resilience4j/circuitbreaker/CircuitBreakerOpenException/CircuitBreakerOpenException(java.lang.String)|",
      "|java+constructor:///java/util/concurrent/CompletableFuture/CompletableFuture()|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerRegistry/ofDefaults()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/concurrent/CompletableFuture/completeExceptionally(java.lang.Throwable)|",
      "|java+method:///io/reactivex/Flowable/lift(io.reactivex.FlowableOperator)|",
      "|java+method:///io/reactivex/Single/lift(io.reactivex.SingleOperator)|",
      "|java+method:///io/reactivex/Observable/lift(io.reactivex.ObservableOperator)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreaker/getName()|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerTransformer/of(io.github.resilience4j.circuitbreaker.CircuitBreaker)|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreaker/name()|",
      "|java+method:///io/reactivex/Flowable/onErrorReturn(io.reactivex.functions.Function)|",
      "|java+method:///io/reactivex/Single/onErrorReturn(io.reactivex.functions.Function)|"
    ],
    "v2Body": [
      "|java+method:///org/aopalliance/intercept/MethodInvocation/getMethod()|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerTransformer/recover(ratpack.func.Function)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreaker/isCallPermitted()|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreaker/recovery()|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///java/lang/reflect/Method/getAnnotation(java.lang.Class)|",
      "|java+method:///ratpack/exec/Promise/transform(ratpack.func.Function)|",
      "|java+method:///java/util/concurrent/CompletableFuture/completeExceptionally(java.lang.Throwable)|",
      "|java+method:///java/lang/reflect/Method/getReturnType()|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/apply(java.lang.Object)|",
      "|java+method:///org/aopalliance/intercept/MethodInvocation/proceed()|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/onErrorResume(reactor.core.publisher.Mono)|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreaker/name()|",
      "|java+method:///io/github/resilience4j/reactor/circuitbreaker/operator/CircuitBreakerOperator/of(io.github.resilience4j.circuitbreaker.CircuitBreaker)|",
      "|java+method:///java/util/concurrent/CompletionStage/whenComplete(java.util.function.BiConsumer)|",
      "|java+method:///java/util/concurrent/CompletableFuture/complete(java.lang.Object)|",
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///reactor/core/publisher/Flux/transform(java.util.function.Function)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerRegistry/circuitBreaker(java.lang.String)|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerMethodInterceptor/proceed(org.aopalliance.intercept.MethodInvocation,io.github.resilience4j.circuitbreaker.CircuitBreaker,io.github.resilience4j.ratpack.recovery.RecoveryFunction)|",
      "|java+method:///reactor/core/publisher/Mono/transform(java.util.function.Function)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+constructor:///io/github/resilience4j/circuitbreaker/CircuitBreakerOpenException/CircuitBreakerOpenException(java.lang.String)|",
      "|java+constructor:///java/util/concurrent/CompletableFuture/CompletableFuture()|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerRegistry/ofDefaults()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/onErrorResume(reactor.core.publisher.Flux)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreaker/getName()|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerTransformer/of(io.github.resilience4j.circuitbreaker.CircuitBreaker)|"
    ],
    "affectedLib": "io.github.resilience4j:resilience4j-rxjava2:0.12.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.github.resilience4j:resilience4j-ratpack:0.13.0",
    "coordinatesV2": "io.github.resilience4j:resilience4j-ratpack:0.12.1",
    "caller": "|java+method:///io/github/resilience4j/ratpack/bulkhead/BulkheadMethodInterceptor/invoke(org.aopalliance.intercept.MethodInvocation)|",
    "called": "|java+method:///io/github/resilience4j/bulkhead/operator/BulkheadOperator/of(io.github.resilience4j.bulkhead.Bulkhead)|",
    "v1Body": [
      "|java+method:///org/aopalliance/intercept/MethodInvocation/getMethod()|",
      "|java+method:///io/reactivex/Observable/onErrorReturn(io.reactivex.functions.Function)|",
      "|java+method:///io/github/resilience4j/ratpack/bulkhead/BulkheadTransformer/recover(ratpack.func.Function)|",
      "|java+method:///io/github/resilience4j/bulkhead/Bulkhead/isCallPermitted()|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///io/github/resilience4j/ratpack/bulkhead/Bulkhead/recovery()|",
      "|java+method:///java/util/concurrent/CompletionStage/handle(java.util.function.BiFunction)|",
      "|java+method:///java/lang/reflect/Method/getAnnotation(java.lang.Class)|",
      "|java+constructor:///java/util/concurrent/CompletableFuture/CompletableFuture()|",
      "|java+method:///ratpack/exec/Promise/transform(ratpack.func.Function)|",
      "|java+method:///io/github/resilience4j/bulkhead/BulkheadRegistry/bulkhead(java.lang.String)|",
      "|java+method:///java/lang/reflect/Method/getReturnType()|",
      "|java+constructor:///io/github/resilience4j/bulkhead/BulkheadFullException/BulkheadFullException(java.lang.String)|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/apply(java.lang.Object)|",
      "|java+method:///org/aopalliance/intercept/MethodInvocation/proceed()|",
      "|java+method:///io/github/resilience4j/ratpack/bulkhead/BulkheadMethodInterceptor/handleOther(org.aopalliance.intercept.MethodInvocation,io.github.resilience4j.bulkhead.Bulkhead,io.github.resilience4j.ratpack.recovery.RecoveryFunction)|",
      "|java+method:///java/util/concurrent/CompletableFuture/complete(java.lang.Object)|",
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///io/github/resilience4j/bulkhead/BulkheadRegistry/ofDefaults()|",
      "|java+method:///io/github/resilience4j/bulkhead/operator/BulkheadOperator/of(io.github.resilience4j.bulkhead.Bulkhead)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/concurrent/CompletableFuture/completeExceptionally(java.lang.Throwable)|",
      "|java+method:///io/reactivex/Flowable/lift(io.reactivex.FlowableOperator)|",
      "|java+method:///io/reactivex/Single/lift(io.reactivex.SingleOperator)|",
      "|java+method:///io/reactivex/Observable/lift(io.reactivex.ObservableOperator)|",
      "|java+method:///io/github/resilience4j/ratpack/bulkhead/BulkheadTransformer/of(io.github.resilience4j.bulkhead.Bulkhead)|",
      "|java+method:///io/github/resilience4j/bulkhead/Bulkhead/getName()|",
      "|java+method:///io/reactivex/Flowable/onErrorReturn(io.reactivex.functions.Function)|",
      "|java+method:///io/github/resilience4j/ratpack/bulkhead/Bulkhead/name()|",
      "|java+method:///io/reactivex/Single/onErrorReturn(io.reactivex.functions.Function)|"
    ],
    "v2Body": [
      "|java+method:///org/aopalliance/intercept/MethodInvocation/getMethod()|",
      "|java+method:///io/github/resilience4j/ratpack/bulkhead/BulkheadTransformer/recover(ratpack.func.Function)|",
      "|java+method:///io/github/resilience4j/bulkhead/Bulkhead/isCallPermitted()|",
      "|java+method:///io/github/resilience4j/ratpack/bulkhead/Bulkhead/recovery()|",
      "|java+method:///java/util/concurrent/CompletionStage/handle(java.util.function.BiFunction)|",
      "|java+method:///java/lang/reflect/Method/getAnnotation(java.lang.Class)|",
      "|java+constructor:///java/util/concurrent/CompletableFuture/CompletableFuture()|",
      "|java+method:///ratpack/exec/Promise/transform(ratpack.func.Function)|",
      "|java+method:///java/util/concurrent/CompletableFuture/completeExceptionally(java.lang.Throwable)|",
      "|java+method:///io/github/resilience4j/bulkhead/BulkheadRegistry/bulkhead(java.lang.String)|",
      "|java+method:///java/lang/reflect/Method/getReturnType()|",
      "|java+constructor:///io/github/resilience4j/bulkhead/BulkheadFullException/BulkheadFullException(java.lang.String)|",
      "|java+method:///io/github/resilience4j/reactor/bulkhead/operator/BulkheadOperator/of(io.github.resilience4j.bulkhead.Bulkhead,reactor.core.scheduler.Scheduler)|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/apply(java.lang.Object)|",
      "|java+method:///org/aopalliance/intercept/MethodInvocation/proceed()|",
      "|java+method:///io/github/resilience4j/ratpack/bulkhead/Bulkhead/name()|",
      "|java+method:///java/util/concurrent/CompletableFuture/complete(java.lang.Object)|",
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///reactor/core/publisher/Flux/transform(java.util.function.Function)|",
      "|java+method:///reactor/core/publisher/Mono/transform(java.util.function.Function)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///reactor/core/scheduler/Schedulers/immediate()|",
      "|java+method:///io/github/resilience4j/bulkhead/BulkheadRegistry/ofDefaults()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/onErrorResume(reactor.core.publisher.Flux)|",
      "|java+method:///io/github/resilience4j/ratpack/bulkhead/BulkheadTransformer/of(io.github.resilience4j.bulkhead.Bulkhead)|",
      "|java+method:///io/github/resilience4j/bulkhead/Bulkhead/getName()|",
      "|java+method:///io/github/resilience4j/ratpack/bulkhead/BulkheadMethodInterceptor/handleOther(org.aopalliance.intercept.MethodInvocation,io.github.resilience4j.bulkhead.Bulkhead,io.github.resilience4j.ratpack.recovery.RecoveryFunction)|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/onErrorResume(reactor.core.publisher.Mono)|"
    ],
    "affectedLib": "io.github.resilience4j:resilience4j-rxjava2:0.12.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.github.resilience4j:resilience4j-ratpack:0.13.0",
    "coordinatesV2": "io.github.resilience4j:resilience4j-ratpack:0.12.1",
    "caller": "|java+method:///io/github/resilience4j/ratpack/bulkhead/endpoint/BulkheadChain/lambda$null$3(io.github.resilience4j.bulkhead.Bulkhead)|",
    "called": "|java+method:///io/github/resilience4j/adapter/RxJava2Adapter/toFlowable(io.github.resilience4j.core.EventPublisher)|",
    "v1Body": [
      "|java+method:///io/github/resilience4j/bulkhead/Bulkhead/getEventPublisher()|",
      "|java+method:///io/github/resilience4j/adapter/RxJava2Adapter/toFlowable(io.github.resilience4j.core.EventPublisher)|"
    ],
    "v2Body": [
      "|java+method:///io/github/resilience4j/bulkhead/Bulkhead/getEventPublisher()|",
      "|java+method:///io/github/resilience4j/ratpack/adapter/ReactorAdapter/toFlux(io.github.resilience4j.core.EventPublisher)|"
    ],
    "affectedLib": "io.github.resilience4j:resilience4j-rxjava2:0.12.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.github.resilience4j:resilience4j-ratpack:0.12.1",
    "coordinatesV2": "io.github.resilience4j:resilience4j-ratpack:0.13.0",
    "caller": "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerMethodInterceptor/invoke(org.aopalliance.intercept.MethodInvocation)|",
    "called": "|java+method:///io/github/resilience4j/reactor/circuitbreaker/operator/CircuitBreakerOperator/of(io.github.resilience4j.circuitbreaker.CircuitBreaker)|",
    "v1Body": [
      "|java+method:///org/aopalliance/intercept/MethodInvocation/getMethod()|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerTransformer/recover(ratpack.func.Function)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreaker/isCallPermitted()|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreaker/recovery()|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///ratpack/exec/Promise/transform(ratpack.func.Function)|",
      "|java+method:///java/lang/reflect/Method/getReturnType()|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/apply(java.lang.Object)|",
      "|java+method:///org/aopalliance/intercept/MethodInvocation/proceed()|",
      "|java+method:///java/util/concurrent/CompletionStage/whenComplete(java.util.function.BiConsumer)|",
      "|java+method:///java/util/concurrent/CompletableFuture/complete(java.lang.Object)|",
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///io/reactivex/Observable/onErrorReturn(io.reactivex.functions.Function)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerRegistry/circuitBreaker(java.lang.String)|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerMethodInterceptor/proceed(org.aopalliance.intercept.MethodInvocation,io.github.resilience4j.circuitbreaker.CircuitBreaker,io.github.resilience4j.ratpack.recovery.RecoveryFunction)|",
      "|java+method:///java/lang/reflect/Method/getAnnotation(java.lang.Class)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/operator/CircuitBreakerOperator/of(io.github.resilience4j.circuitbreaker.CircuitBreaker)|",
      "|java+constructor:///io/github/resilience4j/circuitbreaker/CircuitBreakerOpenException/CircuitBreakerOpenException(java.lang.String)|",
      "|java+constructor:///java/util/concurrent/CompletableFuture/CompletableFuture()|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerRegistry/ofDefaults()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/concurrent/CompletableFuture/completeExceptionally(java.lang.Throwable)|",
      "|java+method:///io/reactivex/Flowable/lift(io.reactivex.FlowableOperator)|",
      "|java+method:///io/reactivex/Single/lift(io.reactivex.SingleOperator)|",
      "|java+method:///io/reactivex/Observable/lift(io.reactivex.ObservableOperator)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreaker/getName()|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerTransformer/of(io.github.resilience4j.circuitbreaker.CircuitBreaker)|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreaker/name()|",
      "|java+method:///io/reactivex/Flowable/onErrorReturn(io.reactivex.functions.Function)|",
      "|java+method:///io/reactivex/Single/onErrorReturn(io.reactivex.functions.Function)|"
    ],
    "v2Body": [
      "|java+method:///org/aopalliance/intercept/MethodInvocation/getMethod()|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerTransformer/recover(ratpack.func.Function)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreaker/isCallPermitted()|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreaker/recovery()|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///java/lang/reflect/Method/getAnnotation(java.lang.Class)|",
      "|java+method:///ratpack/exec/Promise/transform(ratpack.func.Function)|",
      "|java+method:///java/util/concurrent/CompletableFuture/completeExceptionally(java.lang.Throwable)|",
      "|java+method:///java/lang/reflect/Method/getReturnType()|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/apply(java.lang.Object)|",
      "|java+method:///org/aopalliance/intercept/MethodInvocation/proceed()|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/onErrorResume(reactor.core.publisher.Mono)|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreaker/name()|",
      "|java+method:///io/github/resilience4j/reactor/circuitbreaker/operator/CircuitBreakerOperator/of(io.github.resilience4j.circuitbreaker.CircuitBreaker)|",
      "|java+method:///java/util/concurrent/CompletionStage/whenComplete(java.util.function.BiConsumer)|",
      "|java+method:///java/util/concurrent/CompletableFuture/complete(java.lang.Object)|",
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///reactor/core/publisher/Flux/transform(java.util.function.Function)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerRegistry/circuitBreaker(java.lang.String)|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerMethodInterceptor/proceed(org.aopalliance.intercept.MethodInvocation,io.github.resilience4j.circuitbreaker.CircuitBreaker,io.github.resilience4j.ratpack.recovery.RecoveryFunction)|",
      "|java+method:///reactor/core/publisher/Mono/transform(java.util.function.Function)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+constructor:///io/github/resilience4j/circuitbreaker/CircuitBreakerOpenException/CircuitBreakerOpenException(java.lang.String)|",
      "|java+constructor:///java/util/concurrent/CompletableFuture/CompletableFuture()|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerRegistry/ofDefaults()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/onErrorResume(reactor.core.publisher.Flux)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreaker/getName()|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerTransformer/of(io.github.resilience4j.circuitbreaker.CircuitBreaker)|"
    ],
    "affectedLib": "io.github.resilience4j:resilience4j-reactor:0.13.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.github.resilience4j:resilience4j-ratpack:0.12.1",
    "coordinatesV2": "io.github.resilience4j:resilience4j-ratpack:0.13.0",
    "caller": "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiterMethodInterceptor/invoke(org.aopalliance.intercept.MethodInvocation)|",
    "called": "|java+method:///io/github/resilience4j/reactor/ratelimiter/operator/RateLimiterOperator/of(io.github.resilience4j.ratelimiter.RateLimiter,reactor.core.scheduler.Scheduler)|",
    "v1Body": [
      "|java+method:///org/aopalliance/intercept/MethodInvocation/getMethod()|",
      "|java+method:///io/reactivex/Observable/onErrorReturn(io.reactivex.functions.Function)|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiterMethodInterceptor/proceed(org.aopalliance.intercept.MethodInvocation,io.github.resilience4j.ratelimiter.RateLimiter,io.github.resilience4j.ratpack.recovery.RecoveryFunction)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiterRegistry/rateLimiter(java.lang.String)|",
      "|java+constructor:///io/github/resilience4j/ratelimiter/RequestNotPermitted/RequestNotPermitted(java.lang.String)|",
      "|java+method:///ratpack/exec/Promise/transform(ratpack.func.Function)|",
      "|java+method:///java/lang/reflect/Method/getReturnType()|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/apply(java.lang.Object)|",
      "|java+method:///org/aopalliance/intercept/MethodInvocation/proceed()|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiterRegistry/ofDefaults()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/concurrent/CompletableFuture/complete(java.lang.Object)|",
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiterMethodInterceptor/handleProceedWithException(org.aopalliance.intercept.MethodInvocation,io.github.resilience4j.ratelimiter.RateLimiter,io.github.resilience4j.ratpack.recovery.RecoveryFunction)|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiter/getPermission(java.time.Duration)|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiter/getRateLimiterConfig()|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiter/getName()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiter/name()|",
      "|java+method:///java/lang/reflect/Method/getAnnotation(java.lang.Class)|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiterConfig/getTimeoutDuration()|",
      "|java+constructor:///java/util/concurrent/CompletableFuture/CompletableFuture()|",
      "|java+method:///java/util/concurrent/CompletableFuture/completeExceptionally(java.lang.Throwable)|",
      "|java+method:///io/reactivex/Flowable/lift(io.reactivex.FlowableOperator)|",
      "|java+method:///io/reactivex/Single/lift(io.reactivex.SingleOperator)|",
      "|java+method:///io/reactivex/Observable/lift(io.reactivex.ObservableOperator)|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiterTransformer/of(io.github.resilience4j.ratelimiter.RateLimiter)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiter/recovery()|",
      "|java+method:///io/github/resilience4j/ratelimiter/operator/RateLimiterOperator/of(io.github.resilience4j.ratelimiter.RateLimiter)|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiterTransformer/recover(ratpack.func.Function)|",
      "|java+method:///io/reactivex/Flowable/onErrorReturn(io.reactivex.functions.Function)|",
      "|java+method:///io/reactivex/Single/onErrorReturn(io.reactivex.functions.Function)|"
    ],
    "v2Body": [
      "|java+method:///org/aopalliance/intercept/MethodInvocation/getMethod()|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiterMethodInterceptor/proceed(org.aopalliance.intercept.MethodInvocation,io.github.resilience4j.ratelimiter.RateLimiter,io.github.resilience4j.ratpack.recovery.RecoveryFunction)|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiterRegistry/rateLimiter(java.lang.String)|",
      "|java+constructor:///io/github/resilience4j/ratelimiter/RequestNotPermitted/RequestNotPermitted(java.lang.String)|",
      "|java+method:///ratpack/exec/Promise/transform(ratpack.func.Function)|",
      "|java+method:///java/util/concurrent/CompletableFuture/completeExceptionally(java.lang.Throwable)|",
      "|java+method:///java/lang/reflect/Method/getReturnType()|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/onErrorResume(reactor.core.publisher.Flux)|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/apply(java.lang.Object)|",
      "|java+method:///org/aopalliance/intercept/MethodInvocation/proceed()|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiterRegistry/ofDefaults()|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/onErrorResume(reactor.core.publisher.Mono)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/concurrent/CompletableFuture/complete(java.lang.Object)|",
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///reactor/core/publisher/Flux/transform(java.util.function.Function)|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiterMethodInterceptor/handleProceedWithException(org.aopalliance.intercept.MethodInvocation,io.github.resilience4j.ratelimiter.RateLimiter,io.github.resilience4j.ratpack.recovery.RecoveryFunction)|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiter/getPermission(java.time.Duration)|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiter/getRateLimiterConfig()|",
      "|java+method:///reactor/core/publisher/Mono/transform(java.util.function.Function)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiter/getName()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiter/name()|",
      "|java+method:///java/lang/reflect/Method/getAnnotation(java.lang.Class)|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiterConfig/getTimeoutDuration()|",
      "|java+constructor:///java/util/concurrent/CompletableFuture/CompletableFuture()|",
      "|java+method:///io/github/resilience4j/reactor/ratelimiter/operator/RateLimiterOperator/of(io.github.resilience4j.ratelimiter.RateLimiter,reactor.core.scheduler.Scheduler)|",
      "|java+method:///reactor/core/scheduler/Schedulers/immediate()|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiterTransformer/of(io.github.resilience4j.ratelimiter.RateLimiter)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiter/recovery()|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiterTransformer/recover(ratpack.func.Function)|"
    ],
    "affectedLib": "io.github.resilience4j:resilience4j-reactor:0.13.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.github.resilience4j:resilience4j-ratpack:0.12.1",
    "coordinatesV2": "io.github.resilience4j:resilience4j-ratpack:0.13.0",
    "caller": "|java+method:///io/github/resilience4j/ratpack/bulkhead/BulkheadMethodInterceptor/invoke(org.aopalliance.intercept.MethodInvocation)|",
    "called": "|java+method:///io/github/resilience4j/reactor/bulkhead/operator/BulkheadOperator/of(io.github.resilience4j.bulkhead.Bulkhead,reactor.core.scheduler.Scheduler)|",
    "v1Body": [
      "|java+method:///org/aopalliance/intercept/MethodInvocation/getMethod()|",
      "|java+method:///io/reactivex/Observable/onErrorReturn(io.reactivex.functions.Function)|",
      "|java+method:///io/github/resilience4j/ratpack/bulkhead/BulkheadTransformer/recover(ratpack.func.Function)|",
      "|java+method:///io/github/resilience4j/bulkhead/Bulkhead/isCallPermitted()|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///io/github/resilience4j/ratpack/bulkhead/Bulkhead/recovery()|",
      "|java+method:///java/util/concurrent/CompletionStage/handle(java.util.function.BiFunction)|",
      "|java+method:///java/lang/reflect/Method/getAnnotation(java.lang.Class)|",
      "|java+constructor:///java/util/concurrent/CompletableFuture/CompletableFuture()|",
      "|java+method:///ratpack/exec/Promise/transform(ratpack.func.Function)|",
      "|java+method:///io/github/resilience4j/bulkhead/BulkheadRegistry/bulkhead(java.lang.String)|",
      "|java+method:///java/lang/reflect/Method/getReturnType()|",
      "|java+constructor:///io/github/resilience4j/bulkhead/BulkheadFullException/BulkheadFullException(java.lang.String)|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/apply(java.lang.Object)|",
      "|java+method:///org/aopalliance/intercept/MethodInvocation/proceed()|",
      "|java+method:///io/github/resilience4j/ratpack/bulkhead/BulkheadMethodInterceptor/handleOther(org.aopalliance.intercept.MethodInvocation,io.github.resilience4j.bulkhead.Bulkhead,io.github.resilience4j.ratpack.recovery.RecoveryFunction)|",
      "|java+method:///java/util/concurrent/CompletableFuture/complete(java.lang.Object)|",
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///io/github/resilience4j/bulkhead/BulkheadRegistry/ofDefaults()|",
      "|java+method:///io/github/resilience4j/bulkhead/operator/BulkheadOperator/of(io.github.resilience4j.bulkhead.Bulkhead)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/concurrent/CompletableFuture/completeExceptionally(java.lang.Throwable)|",
      "|java+method:///io/reactivex/Flowable/lift(io.reactivex.FlowableOperator)|",
      "|java+method:///io/reactivex/Single/lift(io.reactivex.SingleOperator)|",
      "|java+method:///io/reactivex/Observable/lift(io.reactivex.ObservableOperator)|",
      "|java+method:///io/github/resilience4j/ratpack/bulkhead/BulkheadTransformer/of(io.github.resilience4j.bulkhead.Bulkhead)|",
      "|java+method:///io/github/resilience4j/bulkhead/Bulkhead/getName()|",
      "|java+method:///io/reactivex/Flowable/onErrorReturn(io.reactivex.functions.Function)|",
      "|java+method:///io/github/resilience4j/ratpack/bulkhead/Bulkhead/name()|",
      "|java+method:///io/reactivex/Single/onErrorReturn(io.reactivex.functions.Function)|"
    ],
    "v2Body": [
      "|java+method:///org/aopalliance/intercept/MethodInvocation/getMethod()|",
      "|java+method:///io/github/resilience4j/ratpack/bulkhead/BulkheadTransformer/recover(ratpack.func.Function)|",
      "|java+method:///io/github/resilience4j/bulkhead/Bulkhead/isCallPermitted()|",
      "|java+method:///io/github/resilience4j/ratpack/bulkhead/Bulkhead/recovery()|",
      "|java+method:///java/util/concurrent/CompletionStage/handle(java.util.function.BiFunction)|",
      "|java+method:///java/lang/reflect/Method/getAnnotation(java.lang.Class)|",
      "|java+constructor:///java/util/concurrent/CompletableFuture/CompletableFuture()|",
      "|java+method:///ratpack/exec/Promise/transform(ratpack.func.Function)|",
      "|java+method:///java/util/concurrent/CompletableFuture/completeExceptionally(java.lang.Throwable)|",
      "|java+method:///io/github/resilience4j/bulkhead/BulkheadRegistry/bulkhead(java.lang.String)|",
      "|java+method:///java/lang/reflect/Method/getReturnType()|",
      "|java+constructor:///io/github/resilience4j/bulkhead/BulkheadFullException/BulkheadFullException(java.lang.String)|",
      "|java+method:///io/github/resilience4j/reactor/bulkhead/operator/BulkheadOperator/of(io.github.resilience4j.bulkhead.Bulkhead,reactor.core.scheduler.Scheduler)|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/apply(java.lang.Object)|",
      "|java+method:///org/aopalliance/intercept/MethodInvocation/proceed()|",
      "|java+method:///io/github/resilience4j/ratpack/bulkhead/Bulkhead/name()|",
      "|java+method:///java/util/concurrent/CompletableFuture/complete(java.lang.Object)|",
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///reactor/core/publisher/Flux/transform(java.util.function.Function)|",
      "|java+method:///reactor/core/publisher/Mono/transform(java.util.function.Function)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///reactor/core/scheduler/Schedulers/immediate()|",
      "|java+method:///io/github/resilience4j/bulkhead/BulkheadRegistry/ofDefaults()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/onErrorResume(reactor.core.publisher.Flux)|",
      "|java+method:///io/github/resilience4j/ratpack/bulkhead/BulkheadTransformer/of(io.github.resilience4j.bulkhead.Bulkhead)|",
      "|java+method:///io/github/resilience4j/bulkhead/Bulkhead/getName()|",
      "|java+method:///io/github/resilience4j/ratpack/bulkhead/BulkheadMethodInterceptor/handleOther(org.aopalliance.intercept.MethodInvocation,io.github.resilience4j.bulkhead.Bulkhead,io.github.resilience4j.ratpack.recovery.RecoveryFunction)|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/onErrorResume(reactor.core.publisher.Mono)|"
    ],
    "affectedLib": "io.github.resilience4j:resilience4j-reactor:0.13.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.github.resilience4j:resilience4j-ratpack:0.12.1",
    "coordinatesV2": "io.github.resilience4j:resilience4j-ratpack:0.13.0",
    "caller": "|java+method:///io/github/resilience4j/ratpack/retry/RetryMethodInterceptor/invoke(org.aopalliance.intercept.MethodInvocation)|",
    "called": "|java+method:///io/github/resilience4j/retry/RetryRegistry/ofDefaults()|",
    "v1Body": [
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///org/aopalliance/intercept/MethodInvocation/getMethod()|",
      "|java+method:///io/reactivex/Observable/onErrorReturn(io.reactivex.functions.Function)|",
      "|java+method:///io/github/resilience4j/ratpack/retry/RetryMethodInterceptor/proceed(org.aopalliance.intercept.MethodInvocation,io.github.resilience4j.retry.Retry,io.github.resilience4j.ratpack.recovery.RecoveryFunction)|",
      "|java+method:///io/github/resilience4j/ratpack/retry/RetryMethodInterceptor/executeCompletionStage(org.aopalliance.intercept.MethodInvocation,java.util.concurrent.CompletionStage,io.github.resilience4j.retry.Retry$Context,io.github.resilience4j.ratpack.recovery.RecoveryFunction)|",
      "|java+method:///io/github/resilience4j/retry/RetryRegistry/retry(java.lang.String)|",
      "|java+method:///java/lang/reflect/Method/getReturnType()|",
      "|java+method:///io/github/resilience4j/ratpack/retry/RetryTransformer/of(io.github.resilience4j.retry.Retry)|",
      "|java+method:///io/github/resilience4j/retry/Retry/context()|",
      "|java+method:///org/aopalliance/intercept/MethodInvocation/proceed()|",
      "|java+method:///io/github/resilience4j/retry/RetryRegistry/ofDefaults()|",
      "|java+method:///io/reactivex/Observable/compose(io.reactivex.ObservableTransformer)|",
      "|java+method:///io/reactivex/Flowable/compose(io.reactivex.FlowableTransformer)|",
      "|java+method:///io/reactivex/Single/compose(io.reactivex.SingleTransformer)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///java/lang/reflect/Method/getAnnotation(java.lang.Class)|",
      "|java+method:///io/github/resilience4j/ratpack/retry/Retry/name()|",
      "|java+method:///io/github/resilience4j/retry/transformer/RetryTransformer/of(io.github.resilience4j.retry.Retry)|",
      "|java+method:///ratpack/exec/Promise/transform(ratpack.func.Function)|",
      "|java+method:///io/github/resilience4j/ratpack/retry/RetryTransformer/recover(ratpack.func.Function)|",
      "|java+method:///io/github/resilience4j/ratpack/retry/Retry/recovery()|",
      "|java+method:///io/reactivex/Flowable/onErrorReturn(io.reactivex.functions.Function)|",
      "|java+method:///io/reactivex/Single/onErrorReturn(io.reactivex.functions.Function)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///org/aopalliance/intercept/MethodInvocation/getMethod()|",
      "|java+method:///io/github/resilience4j/ratpack/retry/RetryMethodInterceptor/proceed(org.aopalliance.intercept.MethodInvocation,io.github.resilience4j.retry.Retry,io.github.resilience4j.ratpack.recovery.RecoveryFunction)|",
      "|java+method:///io/github/resilience4j/ratpack/retry/RetryMethodInterceptor/executeCompletionStage(org.aopalliance.intercept.MethodInvocation,java.util.concurrent.CompletionStage,io.github.resilience4j.retry.Retry$Context,io.github.resilience4j.ratpack.recovery.RecoveryFunction)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///io/github/resilience4j/retry/RetryRegistry/retry(java.lang.String)|",
      "|java+method:///ratpack/exec/Promise/async(ratpack.exec.Upstream)|",
      "|java+method:///reactor/core/publisher/Mono/create(java.util.function.Consumer)|",
      "|java+method:///ratpack/exec/Promise/transform(ratpack.func.Function)|",
      "|java+method:///java/lang/reflect/Method/getReturnType()|",
      "|java+method:///org/aopalliance/intercept/MethodInvocation/proceed()|",
      "|java+method:///io/github/resilience4j/retry/RetryRegistry/ofDefaults()|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/onErrorResume(reactor.core.publisher.Mono)|",
      "|java+method:///java/lang/reflect/Method/getAnnotation(java.lang.Class)|",
      "|java+method:///io/github/resilience4j/ratpack/retry/Retry/name()|",
      "|java+method:///io/github/resilience4j/ratpack/retry/RetryTransformer/of(io.github.resilience4j.retry.Retry)|",
      "|java+method:///reactor/core/publisher/Flux/create(java.util.function.Consumer)|",
      "|java+method:///io/github/resilience4j/ratpack/retry/RetryTransformer/recover(ratpack.func.Function)|",
      "|java+method:///io/github/resilience4j/ratpack/retry/Retry/recovery()|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/onErrorResume(reactor.core.publisher.Flux)|",
      "|java+method:///io/github/resilience4j/retry/Retry/context()|"
    ],
    "affectedLib": "io.github.resilience4j:resilience4j-retry:0.13.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.github.resilience4j:resilience4j-ratpack:0.12.1",
    "coordinatesV2": "io.github.resilience4j:resilience4j-ratpack:0.13.0",
    "caller": "|java+method:///io/github/resilience4j/ratpack/Resilience4jModule$Resilience4jService/lambda$onStart$0(io.github.resilience4j.circuitbreaker.CircuitBreakerRegistry,io.github.resilience4j.ratpack.EndpointsConfig,io.github.resilience4j.consumer.EventConsumerRegistry,java.lang.String,io.github.resilience4j.ratpack.circuitbreaker.CircuitBreakerConfig)|",
    "called": "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerConfig$Builder/failureRateThreshold(float)|",
    "v1Body": [
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerRegistry/circuitBreaker(java.lang.String)|",
      "|java+method:///java/time/Duration/ofMillis(long)|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerConfig/getRingBufferSizeInClosedState()|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerConfig$Builder/ringBufferSizeInHalfOpenState(int)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerRegistry/circuitBreaker(java.lang.String,io.github.resilience4j.circuitbreaker.CircuitBreakerConfig)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreaker/getEventPublisher()|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerConfig/getDefaults()|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerConfig/custom()|",
      "|java+method:///io/github/resilience4j/consumer/EventConsumerRegistry/createEventConsumer(java.lang.String,int)|",
      "|java+method:///io/github/resilience4j/ratpack/EndpointsConfig$EndpointConfig/getEventConsumerBufferSize()|",
      "|java+method:///io/github/resilience4j/ratpack/EndpointsConfig$EndpointConfig/isEnabled()|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerConfig/getRingBufferSizeInHalfOpenState()|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerConfig$Builder/ringBufferSizeInClosedState(int)|",
      "|java+method:///io/github/resilience4j/ratpack/EndpointsConfig/getCircuitBreakers()|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerConfig$Builder/build()|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerConfig$Builder/waitDurationInOpenState(java.time.Duration)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerConfig/getWaitIntervalInMillis()|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerConfig$Builder/failureRateThreshold(float)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreaker$EventPublisher/onEvent(io.github.resilience4j.core.EventConsumer)|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerConfig/getFailureRateThreshold()|"
    ],
    "v2Body": [
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerConfig/getRecordExceptionClasses()|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerConfig/getIgnoreExceptionClasses()|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerConfig/isAutomaticTransitionFromOpenToHalfOpen()|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerConfig/getRingBufferSizeInClosedState()|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerConfig$Builder/ringBufferSizeInHalfOpenState(int)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerRegistry/circuitBreaker(java.lang.String,io.github.resilience4j.circuitbreaker.CircuitBreakerConfig)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreaker/getEventPublisher()|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerConfig/getDefaults()|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerConfig/custom()|",
      "|java+method:///io/github/resilience4j/consumer/EventConsumerRegistry/createEventConsumer(java.lang.String,int)|",
      "|java+method:///io/github/resilience4j/ratpack/EndpointsConfig$EndpointConfig/getEventConsumerBufferSize()|",
      "|java+method:///io/github/resilience4j/ratpack/EndpointsConfig$EndpointConfig/isEnabled()|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerConfig$Builder/enableAutomaticTransitionFromOpenToHalfOpen()|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerConfig/getRingBufferSizeInHalfOpenState()|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerConfig$Builder/ringBufferSizeInClosedState(int)|",
      "|java+method:///io/github/resilience4j/ratpack/EndpointsConfig/getCircuitBreakers()|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerConfig$Builder/build()|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerConfig$Builder/waitDurationInOpenState(java.time.Duration)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerConfig/getWaitIntervalInMillis()|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerConfig$Builder/failureRateThreshold(float)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerConfig$Builder/ignoreExceptions(java.lang.Class%5B%5D)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerRegistry/circuitBreaker(java.lang.String)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerConfig$Builder/recordExceptions(java.lang.Class%5B%5D)|",
      "|java+method:///java/time/Duration/ofMillis(long)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreaker$EventPublisher/onEvent(io.github.resilience4j.core.EventConsumer)|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerConfig/getFailureRateThreshold()|"
    ],
    "affectedLib": "io.github.resilience4j:resilience4j-circuitbreaker:0.13.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.github.resilience4j:resilience4j-ratpack:0.12.1",
    "coordinatesV2": "io.github.resilience4j:resilience4j-ratpack:0.13.0",
    "caller": "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerTransformer/lambda$apply$0(ratpack.exec.Upstream,ratpack.exec.Downstream)|",
    "called": "|java+constructor:///io/github/resilience4j/circuitbreaker/CircuitBreakerOpenException/CircuitBreakerOpenException(java.lang.String)|",
    "v1Body": [
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreaker/isCallPermitted()|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///ratpack/func/Function/apply(java.lang.Object)|",
      "|java+constructor:///io/github/resilience4j/circuitbreaker/CircuitBreakerOpenException/CircuitBreakerOpenException(java.lang.String)|",
      "|java+method:///ratpack/exec/Downstream/success(java.lang.Object)|",
      "|java+method:///ratpack/exec/Downstream/error(java.lang.Throwable)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreaker/getName()|",
      "|java+constructor:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerTransformer$1/CircuitBreakerTransformer$1(io.github.resilience4j.ratpack.circuitbreaker.CircuitBreakerTransformer,long,ratpack.exec.Downstream)|",
      "|java+method:///ratpack/exec/Upstream/connect(ratpack.exec.Downstream)|"
    ],
    "v2Body": [
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreaker/isCallPermitted()|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+constructor:///io/github/resilience4j/circuitbreaker/CircuitBreakerOpenException/CircuitBreakerOpenException(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerTransformer/handleRecovery(ratpack.exec.Downstream,java.lang.Throwable)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreaker/getName()|",
      "|java+constructor:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerTransformer$1/CircuitBreakerTransformer$1(io.github.resilience4j.ratpack.circuitbreaker.CircuitBreakerTransformer,long,ratpack.exec.Downstream)|",
      "|java+method:///ratpack/exec/Upstream/connect(ratpack.exec.Downstream)|"
    ],
    "affectedLib": "io.github.resilience4j:resilience4j-circuitbreaker:0.13.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.github.resilience4j:resilience4j-ratpack:0.12.1",
    "coordinatesV2": "io.github.resilience4j:resilience4j-ratpack:0.13.0",
    "caller": "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerMethodInterceptor/invoke(org.aopalliance.intercept.MethodInvocation)|",
    "called": "|java+constructor:///io/github/resilience4j/circuitbreaker/CircuitBreakerOpenException/CircuitBreakerOpenException(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/aopalliance/intercept/MethodInvocation/getMethod()|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerTransformer/recover(ratpack.func.Function)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreaker/isCallPermitted()|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreaker/recovery()|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///ratpack/exec/Promise/transform(ratpack.func.Function)|",
      "|java+method:///java/lang/reflect/Method/getReturnType()|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/apply(java.lang.Object)|",
      "|java+method:///org/aopalliance/intercept/MethodInvocation/proceed()|",
      "|java+method:///java/util/concurrent/CompletionStage/whenComplete(java.util.function.BiConsumer)|",
      "|java+method:///java/util/concurrent/CompletableFuture/complete(java.lang.Object)|",
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///io/reactivex/Observable/onErrorReturn(io.reactivex.functions.Function)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerRegistry/circuitBreaker(java.lang.String)|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerMethodInterceptor/proceed(org.aopalliance.intercept.MethodInvocation,io.github.resilience4j.circuitbreaker.CircuitBreaker,io.github.resilience4j.ratpack.recovery.RecoveryFunction)|",
      "|java+method:///java/lang/reflect/Method/getAnnotation(java.lang.Class)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/operator/CircuitBreakerOperator/of(io.github.resilience4j.circuitbreaker.CircuitBreaker)|",
      "|java+constructor:///io/github/resilience4j/circuitbreaker/CircuitBreakerOpenException/CircuitBreakerOpenException(java.lang.String)|",
      "|java+constructor:///java/util/concurrent/CompletableFuture/CompletableFuture()|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerRegistry/ofDefaults()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/concurrent/CompletableFuture/completeExceptionally(java.lang.Throwable)|",
      "|java+method:///io/reactivex/Flowable/lift(io.reactivex.FlowableOperator)|",
      "|java+method:///io/reactivex/Single/lift(io.reactivex.SingleOperator)|",
      "|java+method:///io/reactivex/Observable/lift(io.reactivex.ObservableOperator)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreaker/getName()|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerTransformer/of(io.github.resilience4j.circuitbreaker.CircuitBreaker)|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreaker/name()|",
      "|java+method:///io/reactivex/Flowable/onErrorReturn(io.reactivex.functions.Function)|",
      "|java+method:///io/reactivex/Single/onErrorReturn(io.reactivex.functions.Function)|"
    ],
    "v2Body": [
      "|java+method:///org/aopalliance/intercept/MethodInvocation/getMethod()|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerTransformer/recover(ratpack.func.Function)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreaker/isCallPermitted()|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreaker/recovery()|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///java/lang/reflect/Method/getAnnotation(java.lang.Class)|",
      "|java+method:///ratpack/exec/Promise/transform(ratpack.func.Function)|",
      "|java+method:///java/util/concurrent/CompletableFuture/completeExceptionally(java.lang.Throwable)|",
      "|java+method:///java/lang/reflect/Method/getReturnType()|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/apply(java.lang.Object)|",
      "|java+method:///org/aopalliance/intercept/MethodInvocation/proceed()|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/onErrorResume(reactor.core.publisher.Mono)|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreaker/name()|",
      "|java+method:///io/github/resilience4j/reactor/circuitbreaker/operator/CircuitBreakerOperator/of(io.github.resilience4j.circuitbreaker.CircuitBreaker)|",
      "|java+method:///java/util/concurrent/CompletionStage/whenComplete(java.util.function.BiConsumer)|",
      "|java+method:///java/util/concurrent/CompletableFuture/complete(java.lang.Object)|",
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///reactor/core/publisher/Flux/transform(java.util.function.Function)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerRegistry/circuitBreaker(java.lang.String)|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerMethodInterceptor/proceed(org.aopalliance.intercept.MethodInvocation,io.github.resilience4j.circuitbreaker.CircuitBreaker,io.github.resilience4j.ratpack.recovery.RecoveryFunction)|",
      "|java+method:///reactor/core/publisher/Mono/transform(java.util.function.Function)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+constructor:///io/github/resilience4j/circuitbreaker/CircuitBreakerOpenException/CircuitBreakerOpenException(java.lang.String)|",
      "|java+constructor:///java/util/concurrent/CompletableFuture/CompletableFuture()|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreakerRegistry/ofDefaults()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/onErrorResume(reactor.core.publisher.Flux)|",
      "|java+method:///io/github/resilience4j/circuitbreaker/CircuitBreaker/getName()|",
      "|java+method:///io/github/resilience4j/ratpack/circuitbreaker/CircuitBreakerTransformer/of(io.github.resilience4j.circuitbreaker.CircuitBreaker)|"
    ],
    "affectedLib": "io.github.resilience4j:resilience4j-circuitbreaker:0.13.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.github.resilience4j:resilience4j-ratpack:0.12.1",
    "coordinatesV2": "io.github.resilience4j:resilience4j-ratpack:0.13.0",
    "caller": "|java+method:///io/github/resilience4j/ratpack/bulkhead/BulkheadTransformer/lambda$apply$0(ratpack.exec.Upstream,ratpack.exec.Downstream)|",
    "called": "|java+constructor:///io/github/resilience4j/bulkhead/BulkheadFullException/BulkheadFullException(java.lang.String)|",
    "v1Body": [
      "|java+method:///io/github/resilience4j/bulkhead/Bulkhead/isCallPermitted()|",
      "|java+method:///ratpack/exec/Downstream/success(java.lang.Object)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/github/resilience4j/bulkhead/BulkheadFullException/BulkheadFullException(java.lang.String)|",
      "|java+method:///ratpack/exec/Upstream/connect(ratpack.exec.Downstream)|",
      "|java+method:///ratpack/func/Function/apply(java.lang.Object)|",
      "|java+constructor:///io/github/resilience4j/ratpack/bulkhead/BulkheadTransformer$1/BulkheadTransformer$1(io.github.resilience4j.ratpack.bulkhead.BulkheadTransformer,ratpack.exec.Downstream)|",
      "|java+method:///ratpack/exec/Downstream/error(java.lang.Throwable)|",
      "|java+method:///io/github/resilience4j/bulkhead/Bulkhead/getName()|"
    ],
    "v2Body": [
      "|java+method:///io/github/resilience4j/bulkhead/Bulkhead/isCallPermitted()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/github/resilience4j/ratpack/bulkhead/BulkheadTransformer/handleRecovery(ratpack.exec.Downstream,java.lang.Throwable)|",
      "|java+constructor:///io/github/resilience4j/bulkhead/BulkheadFullException/BulkheadFullException(java.lang.String)|",
      "|java+method:///io/github/resilience4j/bulkhead/Bulkhead/getName()|",
      "|java+method:///ratpack/exec/Upstream/connect(ratpack.exec.Downstream)|",
      "|java+constructor:///io/github/resilience4j/ratpack/bulkhead/BulkheadTransformer$1/BulkheadTransformer$1(io.github.resilience4j.ratpack.bulkhead.BulkheadTransformer,ratpack.exec.Downstream)|"
    ],
    "affectedLib": "io.github.resilience4j:resilience4j-bulkhead:0.13.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.github.resilience4j:resilience4j-ratpack:0.12.1",
    "coordinatesV2": "io.github.resilience4j:resilience4j-ratpack:0.13.0",
    "caller": "|java+method:///io/github/resilience4j/ratpack/bulkhead/BulkheadMethodInterceptor/invoke(org.aopalliance.intercept.MethodInvocation)|",
    "called": "|java+constructor:///io/github/resilience4j/bulkhead/BulkheadFullException/BulkheadFullException(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/aopalliance/intercept/MethodInvocation/getMethod()|",
      "|java+method:///io/reactivex/Observable/onErrorReturn(io.reactivex.functions.Function)|",
      "|java+method:///io/github/resilience4j/ratpack/bulkhead/BulkheadTransformer/recover(ratpack.func.Function)|",
      "|java+method:///io/github/resilience4j/bulkhead/Bulkhead/isCallPermitted()|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///io/github/resilience4j/ratpack/bulkhead/Bulkhead/recovery()|",
      "|java+method:///java/util/concurrent/CompletionStage/handle(java.util.function.BiFunction)|",
      "|java+method:///java/lang/reflect/Method/getAnnotation(java.lang.Class)|",
      "|java+constructor:///java/util/concurrent/CompletableFuture/CompletableFuture()|",
      "|java+method:///ratpack/exec/Promise/transform(ratpack.func.Function)|",
      "|java+method:///io/github/resilience4j/bulkhead/BulkheadRegistry/bulkhead(java.lang.String)|",
      "|java+method:///java/lang/reflect/Method/getReturnType()|",
      "|java+constructor:///io/github/resilience4j/bulkhead/BulkheadFullException/BulkheadFullException(java.lang.String)|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/apply(java.lang.Object)|",
      "|java+method:///org/aopalliance/intercept/MethodInvocation/proceed()|",
      "|java+method:///io/github/resilience4j/ratpack/bulkhead/BulkheadMethodInterceptor/handleOther(org.aopalliance.intercept.MethodInvocation,io.github.resilience4j.bulkhead.Bulkhead,io.github.resilience4j.ratpack.recovery.RecoveryFunction)|",
      "|java+method:///java/util/concurrent/CompletableFuture/complete(java.lang.Object)|",
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///io/github/resilience4j/bulkhead/BulkheadRegistry/ofDefaults()|",
      "|java+method:///io/github/resilience4j/bulkhead/operator/BulkheadOperator/of(io.github.resilience4j.bulkhead.Bulkhead)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/concurrent/CompletableFuture/completeExceptionally(java.lang.Throwable)|",
      "|java+method:///io/reactivex/Flowable/lift(io.reactivex.FlowableOperator)|",
      "|java+method:///io/reactivex/Single/lift(io.reactivex.SingleOperator)|",
      "|java+method:///io/reactivex/Observable/lift(io.reactivex.ObservableOperator)|",
      "|java+method:///io/github/resilience4j/ratpack/bulkhead/BulkheadTransformer/of(io.github.resilience4j.bulkhead.Bulkhead)|",
      "|java+method:///io/github/resilience4j/bulkhead/Bulkhead/getName()|",
      "|java+method:///io/reactivex/Flowable/onErrorReturn(io.reactivex.functions.Function)|",
      "|java+method:///io/github/resilience4j/ratpack/bulkhead/Bulkhead/name()|",
      "|java+method:///io/reactivex/Single/onErrorReturn(io.reactivex.functions.Function)|"
    ],
    "v2Body": [
      "|java+method:///org/aopalliance/intercept/MethodInvocation/getMethod()|",
      "|java+method:///io/github/resilience4j/ratpack/bulkhead/BulkheadTransformer/recover(ratpack.func.Function)|",
      "|java+method:///io/github/resilience4j/bulkhead/Bulkhead/isCallPermitted()|",
      "|java+method:///io/github/resilience4j/ratpack/bulkhead/Bulkhead/recovery()|",
      "|java+method:///java/util/concurrent/CompletionStage/handle(java.util.function.BiFunction)|",
      "|java+method:///java/lang/reflect/Method/getAnnotation(java.lang.Class)|",
      "|java+constructor:///java/util/concurrent/CompletableFuture/CompletableFuture()|",
      "|java+method:///ratpack/exec/Promise/transform(ratpack.func.Function)|",
      "|java+method:///java/util/concurrent/CompletableFuture/completeExceptionally(java.lang.Throwable)|",
      "|java+method:///io/github/resilience4j/bulkhead/BulkheadRegistry/bulkhead(java.lang.String)|",
      "|java+method:///java/lang/reflect/Method/getReturnType()|",
      "|java+constructor:///io/github/resilience4j/bulkhead/BulkheadFullException/BulkheadFullException(java.lang.String)|",
      "|java+method:///io/github/resilience4j/reactor/bulkhead/operator/BulkheadOperator/of(io.github.resilience4j.bulkhead.Bulkhead,reactor.core.scheduler.Scheduler)|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/apply(java.lang.Object)|",
      "|java+method:///org/aopalliance/intercept/MethodInvocation/proceed()|",
      "|java+method:///io/github/resilience4j/ratpack/bulkhead/Bulkhead/name()|",
      "|java+method:///java/util/concurrent/CompletableFuture/complete(java.lang.Object)|",
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///reactor/core/publisher/Flux/transform(java.util.function.Function)|",
      "|java+method:///reactor/core/publisher/Mono/transform(java.util.function.Function)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///reactor/core/scheduler/Schedulers/immediate()|",
      "|java+method:///io/github/resilience4j/bulkhead/BulkheadRegistry/ofDefaults()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/onErrorResume(reactor.core.publisher.Flux)|",
      "|java+method:///io/github/resilience4j/ratpack/bulkhead/BulkheadTransformer/of(io.github.resilience4j.bulkhead.Bulkhead)|",
      "|java+method:///io/github/resilience4j/bulkhead/Bulkhead/getName()|",
      "|java+method:///io/github/resilience4j/ratpack/bulkhead/BulkheadMethodInterceptor/handleOther(org.aopalliance.intercept.MethodInvocation,io.github.resilience4j.bulkhead.Bulkhead,io.github.resilience4j.ratpack.recovery.RecoveryFunction)|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/onErrorResume(reactor.core.publisher.Mono)|"
    ],
    "affectedLib": "io.github.resilience4j:resilience4j-bulkhead:0.13.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.github.resilience4j:resilience4j-ratpack:0.12.1",
    "coordinatesV2": "io.github.resilience4j:resilience4j-ratpack:0.13.0",
    "caller": "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiterMethodInterceptor/invoke(org.aopalliance.intercept.MethodInvocation)|",
    "called": "|java+method:///io/github/resilience4j/ratelimiter/RateLimiterRegistry/ofDefaults()|",
    "v1Body": [
      "|java+method:///org/aopalliance/intercept/MethodInvocation/getMethod()|",
      "|java+method:///io/reactivex/Observable/onErrorReturn(io.reactivex.functions.Function)|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiterMethodInterceptor/proceed(org.aopalliance.intercept.MethodInvocation,io.github.resilience4j.ratelimiter.RateLimiter,io.github.resilience4j.ratpack.recovery.RecoveryFunction)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiterRegistry/rateLimiter(java.lang.String)|",
      "|java+constructor:///io/github/resilience4j/ratelimiter/RequestNotPermitted/RequestNotPermitted(java.lang.String)|",
      "|java+method:///ratpack/exec/Promise/transform(ratpack.func.Function)|",
      "|java+method:///java/lang/reflect/Method/getReturnType()|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/apply(java.lang.Object)|",
      "|java+method:///org/aopalliance/intercept/MethodInvocation/proceed()|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiterRegistry/ofDefaults()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/concurrent/CompletableFuture/complete(java.lang.Object)|",
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiterMethodInterceptor/handleProceedWithException(org.aopalliance.intercept.MethodInvocation,io.github.resilience4j.ratelimiter.RateLimiter,io.github.resilience4j.ratpack.recovery.RecoveryFunction)|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiter/getPermission(java.time.Duration)|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiter/getRateLimiterConfig()|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiter/getName()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiter/name()|",
      "|java+method:///java/lang/reflect/Method/getAnnotation(java.lang.Class)|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiterConfig/getTimeoutDuration()|",
      "|java+constructor:///java/util/concurrent/CompletableFuture/CompletableFuture()|",
      "|java+method:///java/util/concurrent/CompletableFuture/completeExceptionally(java.lang.Throwable)|",
      "|java+method:///io/reactivex/Flowable/lift(io.reactivex.FlowableOperator)|",
      "|java+method:///io/reactivex/Single/lift(io.reactivex.SingleOperator)|",
      "|java+method:///io/reactivex/Observable/lift(io.reactivex.ObservableOperator)|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiterTransformer/of(io.github.resilience4j.ratelimiter.RateLimiter)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiter/recovery()|",
      "|java+method:///io/github/resilience4j/ratelimiter/operator/RateLimiterOperator/of(io.github.resilience4j.ratelimiter.RateLimiter)|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiterTransformer/recover(ratpack.func.Function)|",
      "|java+method:///io/reactivex/Flowable/onErrorReturn(io.reactivex.functions.Function)|",
      "|java+method:///io/reactivex/Single/onErrorReturn(io.reactivex.functions.Function)|"
    ],
    "v2Body": [
      "|java+method:///org/aopalliance/intercept/MethodInvocation/getMethod()|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiterMethodInterceptor/proceed(org.aopalliance.intercept.MethodInvocation,io.github.resilience4j.ratelimiter.RateLimiter,io.github.resilience4j.ratpack.recovery.RecoveryFunction)|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiterRegistry/rateLimiter(java.lang.String)|",
      "|java+constructor:///io/github/resilience4j/ratelimiter/RequestNotPermitted/RequestNotPermitted(java.lang.String)|",
      "|java+method:///ratpack/exec/Promise/transform(ratpack.func.Function)|",
      "|java+method:///java/util/concurrent/CompletableFuture/completeExceptionally(java.lang.Throwable)|",
      "|java+method:///java/lang/reflect/Method/getReturnType()|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/onErrorResume(reactor.core.publisher.Flux)|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/apply(java.lang.Object)|",
      "|java+method:///org/aopalliance/intercept/MethodInvocation/proceed()|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiterRegistry/ofDefaults()|",
      "|java+method:///io/github/resilience4j/ratpack/recovery/RecoveryFunction/onErrorResume(reactor.core.publisher.Mono)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/concurrent/CompletableFuture/complete(java.lang.Object)|",
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///reactor/core/publisher/Flux/transform(java.util.function.Function)|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiterMethodInterceptor/handleProceedWithException(org.aopalliance.intercept.MethodInvocation,io.github.resilience4j.ratelimiter.RateLimiter,io.github.resilience4j.ratpack.recovery.RecoveryFunction)|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiter/getPermission(java.time.Duration)|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiter/getRateLimiterConfig()|",
      "|java+method:///reactor/core/publisher/Mono/transform(java.util.function.Function)|",
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiter/getName()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiter/name()|",
      "|java+method:///java/lang/reflect/Method/getAnnotation(java.lang.Class)|",
      "|java+method:///io/github/resilience4j/ratelimiter/RateLimiterConfig/getTimeoutDuration()|",
      "|java+constructor:///java/util/concurrent/CompletableFuture/CompletableFuture()|",
      "|java+method:///io/github/resilience4j/reactor/ratelimiter/operator/RateLimiterOperator/of(io.github.resilience4j.ratelimiter.RateLimiter,reactor.core.scheduler.Scheduler)|",
      "|java+method:///reactor/core/scheduler/Schedulers/immediate()|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiterTransformer/of(io.github.resilience4j.ratelimiter.RateLimiter)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiter/recovery()|",
      "|java+method:///io/github/resilience4j/ratpack/ratelimiter/RateLimiterTransformer/recover(ratpack.func.Function)|"
    ],
    "affectedLib": "io.github.resilience4j:resilience4j-ratelimiter:0.13.0",
    "change": "UPDATED"
  }
]