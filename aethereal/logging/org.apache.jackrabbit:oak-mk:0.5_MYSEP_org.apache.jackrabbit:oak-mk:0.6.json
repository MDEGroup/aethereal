[
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-mk:0.5",
    "coordinatesV2": "org.apache.jackrabbit:oak-mk:0.6",
    "caller": "|java+method:///org/apache/jackrabbit/mk/store/DefaultRevisionStore/initialize()|",
    "called": "|java+method:///com/google/common/cache/CacheBuilder/build()|",
    "v1Body": [
      "|java+method:///org/apache/jackrabbit/mk/model/Id/fromLong(long)|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String,int)|",
      "|java+method:///org/apache/jackrabbit/mk/persistence/Persistence/readIds()|",
      "|java+constructor:///org/apache/jackrabbit/mk/model/Id/Id(byte%5B%5D)|",
      "|java+method:///java/util/concurrent/Executors/newScheduledThreadPool(int,java.util.concurrent.ThreadFactory)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///java/util/concurrent/ScheduledExecutorService/scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)|",
      "|java+constructor:///org/apache/jackrabbit/mk/model/MutableNode/MutableNode(org.apache.jackrabbit.mk.store.RevisionProvider)|",
      "|java+constructor:///org/apache/jackrabbit/mk/store/DefaultRevisionStore$1/DefaultRevisionStore$1(org.apache.jackrabbit.mk.store.DefaultRevisionStore)|",
      "|java+constructor:///org/apache/jackrabbit/mk/store/DefaultRevisionStore$2/DefaultRevisionStore$2(org.apache.jackrabbit.mk.store.DefaultRevisionStore)|",
      "|java+method:///java/util/Collections/synchronizedMap(java.util.Map)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/model/Id/toString()|",
      "|java+method:///org/apache/jackrabbit/mk/model/MutableCommit/setRootNodeId(org.apache.jackrabbit.mk.model.Id)|",
      "|java+method:///org/apache/jackrabbit/mk/store/DefaultRevisionStore/determineInitialCacheSize()|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/set(long)|",
      "|java+method:///org/apache/jackrabbit/mk/persistence/Persistence/writeNode(org.apache.jackrabbit.mk.model.Node)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/incrementAndGet()|",
      "|java+method:///org/apache/jackrabbit/mk/model/Id/getBytes()|",
      "|java+method:///org/apache/jackrabbit/mk/model/MutableCommit/setCommitTS(long)|",
      "|java+method:///org/apache/jackrabbit/mk/persistence/Persistence/writeHead(org.apache.jackrabbit.mk.model.Id)|",
      "|java+constructor:///org/apache/jackrabbit/mk/model/MutableCommit/MutableCommit()|",
      "|java+method:///org/apache/jackrabbit/mk/persistence/Persistence/writeCommit(org.apache.jackrabbit.mk.model.Id,org.apache.jackrabbit.mk.model.Commit)|",
      "|java+method:///org/apache/jackrabbit/mk/util/SimpleLRUCache/newInstance(int)|",
      "|java+method:///org/apache/jackrabbit/mk/model/Id/compareTo(org.apache.jackrabbit.mk.model.Id)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/jackrabbit/mk/model/Id/fromLong(long)|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String,int)|",
      "|java+method:///com/google/common/cache/CacheBuilder/maximumWeight(long)|",
      "|java+method:///org/apache/jackrabbit/mk/persistence/Persistence/readIds()|",
      "|java+method:///com/google/common/cache/CacheBuilder/weigher(com.google.common.cache.Weigher)|",
      "|java+constructor:///org/apache/jackrabbit/mk/model/Id/Id(byte%5B%5D)|",
      "|java+method:///java/util/concurrent/Executors/newScheduledThreadPool(int,java.util.concurrent.ThreadFactory)|",
      "|java+method:///org/apache/jackrabbit/mk/model/Id/compareTo(org.apache.jackrabbit.mk.model.Id)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+constructor:///org/apache/jackrabbit/mk/model/MutableNode/MutableNode(org.apache.jackrabbit.mk.store.RevisionProvider)|",
      "|java+constructor:///org/apache/jackrabbit/mk/store/DefaultRevisionStore$1/DefaultRevisionStore$1(org.apache.jackrabbit.mk.store.DefaultRevisionStore)|",
      "|java+constructor:///org/apache/jackrabbit/mk/store/DefaultRevisionStore$2/DefaultRevisionStore$2(org.apache.jackrabbit.mk.store.DefaultRevisionStore)|",
      "|java+constructor:///org/apache/jackrabbit/mk/store/DefaultRevisionStore$3/DefaultRevisionStore$3(org.apache.jackrabbit.mk.store.DefaultRevisionStore)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/model/Id/toString()|",
      "|java+method:///org/apache/jackrabbit/mk/model/MutableCommit/setRootNodeId(org.apache.jackrabbit.mk.model.Id)|",
      "|java+method:///org/apache/jackrabbit/mk/store/DefaultRevisionStore/determineInitialCacheSize()|",
      "|java+method:///com/google/common/cache/CacheBuilder/newBuilder()|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/set(long)|",
      "|java+method:///org/apache/jackrabbit/mk/persistence/Persistence/writeNode(org.apache.jackrabbit.mk.model.Node)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/incrementAndGet()|",
      "|java+method:///org/apache/jackrabbit/mk/model/Id/getBytes()|",
      "|java+method:///org/apache/jackrabbit/mk/model/MutableCommit/setCommitTS(long)|",
      "|java+method:///org/apache/jackrabbit/mk/persistence/Persistence/writeHead(org.apache.jackrabbit.mk.model.Id)|",
      "|java+constructor:///org/apache/jackrabbit/mk/model/MutableCommit/MutableCommit()|",
      "|java+method:///org/apache/jackrabbit/mk/persistence/Persistence/writeCommit(org.apache.jackrabbit.mk.model.Id,org.apache.jackrabbit.mk.model.Commit)|",
      "|java+method:///com/google/common/cache/CacheBuilder/build()|",
      "|java+method:///java/util/concurrent/ScheduledExecutorService/scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)|"
    ],
    "affectedLib": "com.google.guava:guava:13.0.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-mk:0.5",
    "coordinatesV2": "org.apache.jackrabbit:oak-mk:0.6",
    "caller": "|java+method:///org/apache/jackrabbit/mk/core/MicroKernelImpl/commit(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
    "called": "|java+constructor:///org/apache/jackrabbit/mk/api/MicroKernelException/MicroKernelException(java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/apache/jackrabbit/mk/json/JsonObject/create(org.apache.jackrabbit.mk.json.JsopTokenizer)|",
      "|java+method:///org/apache/jackrabbit/mk/model/CommitBuilder/copyNode(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/model/CommitBuilder/moveNode(java.lang.String,java.lang.String)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/mk/model/Id/fromString(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/core/Repository/getCommitBuilder(org.apache.jackrabbit.mk.model.Id,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopTokenizer/readRawValue()|",
      "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/isAbsolute(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/getName(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopTokenizer/getLastPos()|",
      "|java+method:///org/apache/jackrabbit/mk/core/MicroKernelImpl/getHeadRevisionId()|",
      "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/getParentPath(java.lang.String)|",
      "|java+constructor:///org/apache/jackrabbit/mk/api/MicroKernelException/MicroKernelException(java.lang.Throwable)|",
      "|java+method:///org/apache/jackrabbit/mk/model/CommitBuilder/doCommit()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopTokenizer/matches(int)|",
      "|java+method:///org/apache/jackrabbit/mk/model/Id/toString()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/model/Id/equals(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopTokenizer/read()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/jackrabbit/mk/model/CommitBuilder/setProperty(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/concat(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopTokenizer/getTokenType()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopTokenizer/read(int)|",
      "|java+constructor:///org/apache/jackrabbit/mk/json/JsopTokenizer/JsopTokenizer(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/model/StoredCommit/getBranchRootId()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/jackrabbit/mk/core/Repository/getCommit(org.apache.jackrabbit.mk.model.Id)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+constructor:///java/lang/Exception/Exception(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopTokenizer/readString()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/jackrabbit/mk/model/CommitBuilder/removeNode(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/model/CommitBuilder/addNode(java.lang.String,java.lang.String,org.apache.jackrabbit.mk.json.JsonObject)|",
      "|java+method:///org/apache/jackrabbit/mk/util/CommitGate/commit(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/jackrabbit/mk/json/JsonObject/create(org.apache.jackrabbit.mk.json.JsopTokenizer)|",
      "|java+method:///org/apache/jackrabbit/mk/model/CommitBuilder/copyNode(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/model/CommitBuilder/moveNode(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/model/Id/fromString(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopTokenizer/read(int)|",
      "|java+method:///org/apache/jackrabbit/mk/core/Repository/getCommitBuilder(org.apache.jackrabbit.mk.model.Id,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopTokenizer/readRawValue()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopTokenizer/getToken()|",
      "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/isAbsolute(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/getName(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopTokenizer/getLastPos()|",
      "|java+method:///org/apache/jackrabbit/mk/core/MicroKernelImpl/getHeadRevisionId()|",
      "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/getParentPath(java.lang.String)|",
      "|java+constructor:///org/apache/jackrabbit/mk/api/MicroKernelException/MicroKernelException(java.lang.Throwable)|",
      "|java+method:///org/apache/jackrabbit/mk/model/CommitBuilder/doCommit()|",
      "|java+method:///org/apache/jackrabbit/mk/core/MicroKernelImpl/getHeadRevision()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopTokenizer/matches(int)|",
      "|java+method:///org/apache/jackrabbit/mk/model/Id/toString()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/model/Id/equals(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopTokenizer/read()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/jackrabbit/mk/model/CommitBuilder/setProperty(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/concat(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/length()|",
      "|java+constructor:///org/apache/jackrabbit/mk/json/JsopTokenizer/JsopTokenizer(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/model/StoredCommit/getBranchRootId()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/jackrabbit/mk/core/Repository/getCommit(org.apache.jackrabbit.mk.model.Id)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+constructor:///java/lang/Exception/Exception(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopTokenizer/readString()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/jackrabbit/mk/model/CommitBuilder/removeNode(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/model/CommitBuilder/addNode(java.lang.String,java.lang.String,org.apache.jackrabbit.mk.json.JsonObject)|",
      "|java+method:///org/apache/jackrabbit/mk/util/CommitGate/commit(java.lang.String)|"
    ],
    "affectedLib": "org.apache.jackrabbit:oak-mk-api:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-mk:0.5",
    "coordinatesV2": "org.apache.jackrabbit:oak-mk:0.6",
    "caller": "|java+method:///org/apache/jackrabbit/mk/core/MicroKernelImpl/getJournal(java.lang.String,java.lang.String,java.lang.String)|",
    "called": "|java+constructor:///org/apache/jackrabbit/mk/api/MicroKernelException/MicroKernelException(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/apache/jackrabbit/mk/json/JsopBuilder/JsopBuilder()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/array()|",
      "|java+method:///org/apache/jackrabbit/mk/model/Commit/getCommitTS()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/model/StoredCommit/getCommitTS()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/jackrabbit/mk/model/StoredCommit/getId()|",
      "|java+method:///org/apache/jackrabbit/mk/model/Commit/getBranchRootId()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/apache/jackrabbit/mk/model/StoredCommit/getParentId()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/value(long)|",
      "|java+constructor:///org/apache/jackrabbit/mk/api/MicroKernelException/MicroKernelException(java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/endObject()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/key(java.lang.String)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/jackrabbit/mk/model/Id/toString()|",
      "|java+method:///org/apache/jackrabbit/mk/model/StoredCommit/getMsg()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/model/Id/equals(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/mk/model/StoredCommit/getChanges()|",
      "|java+constructor:///org/apache/jackrabbit/mk/api/MicroKernelException/MicroKernelException(java.lang.String)|",
      "|java+constructor:///org/apache/jackrabbit/mk/model/tree/DiffBuilder/DiffBuilder(org.apache.jackrabbit.mk.model.tree.NodeState,org.apache.jackrabbit.mk.model.tree.NodeState,java.lang.String,int,org.apache.jackrabbit.mk.model.tree.NodeStore,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/endArray()|",
      "|java+method:///org/apache/jackrabbit/mk/model/Id/fromString(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/object()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/mk/core/Repository/getRevisionStore()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/apache/jackrabbit/mk/model/StoredCommit/getBranchRootId()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/jackrabbit/mk/core/Repository/getCommit(org.apache.jackrabbit.mk.model.Id)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/value(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/model/tree/DiffBuilder/build()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/toString()|",
      "|java+method:///org/apache/jackrabbit/mk/core/Repository/getNodeState(org.apache.jackrabbit.mk.model.Id,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/core/MicroKernelImpl/getHeadRevisionId()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/jackrabbit/mk/json/JsopBuilder/JsopBuilder()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/array()|",
      "|java+method:///org/apache/jackrabbit/mk/model/Commit/getCommitTS()|",
      "|java+method:///org/apache/jackrabbit/mk/model/StoredCommit/getCommitTS()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/jackrabbit/mk/model/StoredCommit/getId()|",
      "|java+method:///org/apache/jackrabbit/mk/model/Commit/getBranchRootId()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/apache/jackrabbit/mk/model/StoredCommit/getParentId()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/toString()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/value(long)|",
      "|java+constructor:///org/apache/jackrabbit/mk/api/MicroKernelException/MicroKernelException(java.lang.Throwable)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/endObject()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/key(java.lang.String)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/jackrabbit/mk/model/Id/toString()|",
      "|java+method:///org/apache/jackrabbit/mk/model/StoredCommit/getMsg()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/model/Id/equals(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/mk/model/StoredCommit/getChanges()|",
      "|java+constructor:///org/apache/jackrabbit/mk/api/MicroKernelException/MicroKernelException(java.lang.String)|",
      "|java+constructor:///org/apache/jackrabbit/mk/model/tree/DiffBuilder/DiffBuilder(org.apache.jackrabbit.mk.model.tree.NodeState,org.apache.jackrabbit.mk.model.tree.NodeState,java.lang.String,int,org.apache.jackrabbit.mk.model.tree.NodeStore,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/endArray()|",
      "|java+method:///org/apache/jackrabbit/mk/model/Id/fromString(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/object()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/mk/core/Repository/getRevisionStore()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/apache/jackrabbit/mk/model/StoredCommit/getBranchRootId()|",
      "|java+method:///org/apache/jackrabbit/mk/core/Repository/getCommit(org.apache.jackrabbit.mk.model.Id)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/value(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/model/tree/DiffBuilder/build()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/mk/core/Repository/getNodeState(org.apache.jackrabbit.mk.model.Id,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/core/MicroKernelImpl/getHeadRevisionId()|"
    ],
    "affectedLib": "org.apache.jackrabbit:oak-mk-api:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-mk:0.5",
    "coordinatesV2": "org.apache.jackrabbit:oak-mk:0.6",
    "caller": "|java+method:///org/apache/jackrabbit/mk/core/MicroKernelImpl/getNodes(java.lang.String,java.lang.String,int,long,int,java.lang.String)|",
    "called": "|java+constructor:///org/apache/jackrabbit/mk/api/MicroKernelException/MicroKernelException(java.lang.Throwable)|",
    "v1Body": [
      "|java+constructor:///org/apache/jackrabbit/mk/json/JsopBuilder/JsopBuilder()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/endObject()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/util/NodeFilter/parse(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/util/NodeFilter/getChildNodeFilter()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/toString()|",
      "|java+constructor:///org/apache/jackrabbit/mk/api/MicroKernelException/MicroKernelException(java.lang.Throwable)|",
      "|java+method:///org/apache/jackrabbit/mk/model/Id/fromString(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/object()|",
      "|java+method:///org/apache/jackrabbit/mk/core/MicroKernelImpl/toJson(org.apache.jackrabbit.mk.json.JsopBuilder,org.apache.jackrabbit.mk.model.tree.NodeState,int,int,int,boolean,org.apache.jackrabbit.mk.util.NodeFilter)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/apache/jackrabbit/mk/core/Repository/getNodeState(org.apache.jackrabbit.mk.model.Id,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/core/MicroKernelImpl/getHeadRevisionId()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/jackrabbit/mk/json/JsopBuilder/JsopBuilder()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/endObject()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/store/RevisionStore/getNode(org.apache.jackrabbit.mk.model.Id)|",
      "|java+method:///org/apache/jackrabbit/mk/store/RevisionStore/getNodeState(org.apache.jackrabbit.mk.model.StoredNode)|",
      "|java+method:///org/apache/jackrabbit/mk/util/NodeFilter/parse(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/core/Repository/getRevisionStore()|",
      "|java+method:///org/apache/jackrabbit/mk/util/NodeFilter/getChildNodeFilter()|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/toString()|",
      "|java+constructor:///org/apache/jackrabbit/mk/api/MicroKernelException/MicroKernelException(java.lang.Throwable)|",
      "|java+method:///org/apache/jackrabbit/mk/model/Id/fromString(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/object()|",
      "|java+method:///org/apache/jackrabbit/mk/core/MicroKernelImpl/toJson(org.apache.jackrabbit.mk.json.JsopBuilder,org.apache.jackrabbit.mk.model.tree.NodeState,int,int,int,boolean,org.apache.jackrabbit.mk.util.NodeFilter)|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+method:///org/apache/jackrabbit/mk/core/Repository/getNodeState(org.apache.jackrabbit.mk.model.Id,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/core/MicroKernelImpl/getHeadRevisionId()|"
    ],
    "affectedLib": "org.apache.jackrabbit:oak-mk-api:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-mk:0.5",
    "coordinatesV2": "org.apache.jackrabbit:oak-mk:0.6",
    "caller": "|java+method:///org/apache/jackrabbit/mk/model/tree/DiffBuilder$2/childNodeAdded(java.lang.String,org.apache.jackrabbit.mk.model.tree.NodeState)|",
    "called": "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/concat(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/jackrabbit/mk/model/tree/DiffBuilder$2/getCurrentPath()|",
      "|java+method:///java/util/HashMap/containsKey(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/object()|",
      "|java+method:///org/apache/jackrabbit/mk/model/tree/DiffBuilder/access$200(org.apache.jackrabbit.mk.model.tree.DiffBuilder,org.apache.jackrabbit.mk.json.JsopBuilder,org.apache.jackrabbit.mk.model.tree.NodeState)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/newline()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/endObject()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/key(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/concat(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/model/tree/DiffBuilder/access$100(org.apache.jackrabbit.mk.model.tree.DiffBuilder)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/tag(char)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/jackrabbit/mk/model/tree/DiffBuilder$2/getCurrentPath()|",
      "|java+method:///java/util/HashMap/containsKey(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/mk/model/tree/DiffBuilder/access$200(org.apache.jackrabbit.mk.model.tree.DiffBuilder,org.apache.jackrabbit.mk.json.JsopBuilder,org.apache.jackrabbit.mk.model.tree.NodeState,int)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/newline()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/endObject()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/key(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/concat(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/model/tree/DiffBuilder/access$100(org.apache.jackrabbit.mk.model.tree.DiffBuilder)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/tag(char)|",
      "|java+method:///org/apache/jackrabbit/mk/model/tree/DiffBuilder/access$000(org.apache.jackrabbit.mk.model.tree.DiffBuilder)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/object()|"
    ],
    "affectedLib": "org.apache.jackrabbit:oak-commons:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-mk:0.5",
    "coordinatesV2": "org.apache.jackrabbit:oak-mk:0.6",
    "caller": "|java+method:///org/apache/jackrabbit/mk/model/tree/DiffBuilder/build()|",
    "called": "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/isAncestor(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/apache/jackrabbit/mk/json/JsopBuilder/JsopBuilder()|",
      "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/isAncestor(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/resetWriter()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/tag(char)|",
      "|java+method:///org/apache/jackrabbit/mk/model/tree/DiffBuilder/toJson(org.apache.jackrabbit.mk.json.JsopBuilder,org.apache.jackrabbit.mk.model.tree.NodeState)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/value(java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/jackrabbit/mk/model/tree/TraversingNodeDiffHandler/start(org.apache.jackrabbit.mk.model.tree.NodeState,org.apache.jackrabbit.mk.model.tree.NodeState,java.lang.String)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/newline()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/endObject()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/key(java.lang.String)|",
      "|java+method:///java/util/HashMap/entrySet()|",
      "|java+constructor:///org/apache/jackrabbit/mk/model/tree/DiffBuilder$2/DiffBuilder$2(org.apache.jackrabbit.mk.model.tree.DiffBuilder,org.apache.jackrabbit.mk.model.tree.NodeStore,org.apache.jackrabbit.mk.json.JsopBuilder,java.util.HashMap)|",
      "|java+constructor:///org/apache/jackrabbit/mk/model/tree/DiffBuilder$1/DiffBuilder$1(org.apache.jackrabbit.mk.model.tree.DiffBuilder,org.apache.jackrabbit.mk.model.tree.NodeStore,org.apache.jackrabbit.mk.json.JsopBuilder,java.util.HashMap,java.util.HashMap)|",
      "|java+method:///java/util/Set/retainAll(java.util.Collection)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/object()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/toString()|",
      "|java+method:///java/util/HashMap/get(java.lang.Object)|",
      "|java+method:///java/util/HashMap/keySet()|",
      "|java+method:///java/util/HashMap/isEmpty()|"
    ],
    "v2Body": [
      "|java+constructor:///org/apache/jackrabbit/mk/json/JsopBuilder/JsopBuilder()|",
      "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/isAncestor(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/resetWriter()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/tag(char)|",
      "|java+method:///org/apache/jackrabbit/mk/model/tree/DiffBuilder/toJson(org.apache.jackrabbit.mk.json.JsopBuilder,org.apache.jackrabbit.mk.model.tree.NodeState,int)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/value(java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/jackrabbit/mk/model/tree/TraversingNodeDiffHandler/start(org.apache.jackrabbit.mk.model.tree.NodeState,org.apache.jackrabbit.mk.model.tree.NodeState,java.lang.String)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/newline()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/endObject()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/key(java.lang.String)|",
      "|java+method:///java/util/HashMap/entrySet()|",
      "|java+constructor:///org/apache/jackrabbit/mk/model/tree/DiffBuilder$2/DiffBuilder$2(org.apache.jackrabbit.mk.model.tree.DiffBuilder,org.apache.jackrabbit.mk.model.tree.NodeStore,org.apache.jackrabbit.mk.json.JsopBuilder,java.util.HashMap)|",
      "|java+constructor:///org/apache/jackrabbit/mk/model/tree/DiffBuilder$1/DiffBuilder$1(org.apache.jackrabbit.mk.model.tree.DiffBuilder,org.apache.jackrabbit.mk.model.tree.NodeStore,org.apache.jackrabbit.mk.json.JsopBuilder,java.util.HashMap,java.util.HashMap)|",
      "|java+method:///java/util/Set/retainAll(java.util.Collection)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/object()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/toString()|",
      "|java+method:///java/util/HashMap/get(java.lang.Object)|",
      "|java+method:///java/util/HashMap/keySet()|",
      "|java+method:///java/util/HashMap/isEmpty()|"
    ],
    "affectedLib": "org.apache.jackrabbit:oak-commons:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-mk:0.5",
    "coordinatesV2": "org.apache.jackrabbit:oak-mk:0.6",
    "caller": "|java+method:///org/apache/jackrabbit/mk/core/MicroKernelImpl/commit(java.lang.String,java.lang.String,java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/getName(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/jackrabbit/mk/json/JsonObject/create(org.apache.jackrabbit.mk.json.JsopTokenizer)|",
      "|java+method:///org/apache/jackrabbit/mk/model/CommitBuilder/copyNode(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/model/CommitBuilder/moveNode(java.lang.String,java.lang.String)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/mk/model/Id/fromString(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/core/Repository/getCommitBuilder(org.apache.jackrabbit.mk.model.Id,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopTokenizer/readRawValue()|",
      "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/isAbsolute(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/getName(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopTokenizer/getLastPos()|",
      "|java+method:///org/apache/jackrabbit/mk/core/MicroKernelImpl/getHeadRevisionId()|",
      "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/getParentPath(java.lang.String)|",
      "|java+constructor:///org/apache/jackrabbit/mk/api/MicroKernelException/MicroKernelException(java.lang.Throwable)|",
      "|java+method:///org/apache/jackrabbit/mk/model/CommitBuilder/doCommit()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopTokenizer/matches(int)|",
      "|java+method:///org/apache/jackrabbit/mk/model/Id/toString()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/model/Id/equals(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopTokenizer/read()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/jackrabbit/mk/model/CommitBuilder/setProperty(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/concat(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopTokenizer/getTokenType()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopTokenizer/read(int)|",
      "|java+constructor:///org/apache/jackrabbit/mk/json/JsopTokenizer/JsopTokenizer(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/model/StoredCommit/getBranchRootId()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/jackrabbit/mk/core/Repository/getCommit(org.apache.jackrabbit.mk.model.Id)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+constructor:///java/lang/Exception/Exception(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopTokenizer/readString()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/jackrabbit/mk/model/CommitBuilder/removeNode(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/model/CommitBuilder/addNode(java.lang.String,java.lang.String,org.apache.jackrabbit.mk.json.JsonObject)|",
      "|java+method:///org/apache/jackrabbit/mk/util/CommitGate/commit(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/jackrabbit/mk/json/JsonObject/create(org.apache.jackrabbit.mk.json.JsopTokenizer)|",
      "|java+method:///org/apache/jackrabbit/mk/model/CommitBuilder/copyNode(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/model/CommitBuilder/moveNode(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/model/Id/fromString(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopTokenizer/read(int)|",
      "|java+method:///org/apache/jackrabbit/mk/core/Repository/getCommitBuilder(org.apache.jackrabbit.mk.model.Id,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopTokenizer/readRawValue()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopTokenizer/getToken()|",
      "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/isAbsolute(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/getName(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopTokenizer/getLastPos()|",
      "|java+method:///org/apache/jackrabbit/mk/core/MicroKernelImpl/getHeadRevisionId()|",
      "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/getParentPath(java.lang.String)|",
      "|java+constructor:///org/apache/jackrabbit/mk/api/MicroKernelException/MicroKernelException(java.lang.Throwable)|",
      "|java+method:///org/apache/jackrabbit/mk/model/CommitBuilder/doCommit()|",
      "|java+method:///org/apache/jackrabbit/mk/core/MicroKernelImpl/getHeadRevision()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopTokenizer/matches(int)|",
      "|java+method:///org/apache/jackrabbit/mk/model/Id/toString()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/model/Id/equals(java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopTokenizer/read()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/jackrabbit/mk/model/CommitBuilder/setProperty(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/concat(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/length()|",
      "|java+constructor:///org/apache/jackrabbit/mk/json/JsopTokenizer/JsopTokenizer(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/model/StoredCommit/getBranchRootId()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/jackrabbit/mk/core/Repository/getCommit(org.apache.jackrabbit.mk.model.Id)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+constructor:///java/lang/Exception/Exception(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopTokenizer/readString()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/jackrabbit/mk/model/CommitBuilder/removeNode(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/model/CommitBuilder/addNode(java.lang.String,java.lang.String,org.apache.jackrabbit.mk.json.JsonObject)|",
      "|java+method:///org/apache/jackrabbit/mk/util/CommitGate/commit(java.lang.String)|"
    ],
    "affectedLib": "org.apache.jackrabbit:oak-commons:0.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.jackrabbit:oak-mk:0.5",
    "coordinatesV2": "org.apache.jackrabbit:oak-mk:0.6",
    "caller": "|java+method:///org/apache/jackrabbit/mk/model/tree/DiffBuilder$1/childNodeAdded(java.lang.String,org.apache.jackrabbit.mk.model.tree.NodeState)|",
    "called": "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/concat(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/jackrabbit/mk/model/tree/DiffBuilder$1/getCurrentPath()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/object()|",
      "|java+method:///java/util/HashMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/jackrabbit/mk/model/tree/DiffBuilder/access$200(org.apache.jackrabbit.mk.model.tree.DiffBuilder,org.apache.jackrabbit.mk.json.JsopBuilder,org.apache.jackrabbit.mk.model.tree.NodeState)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/newline()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/endObject()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/key(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/concat(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/model/tree/DiffBuilder/access$100(org.apache.jackrabbit.mk.model.tree.DiffBuilder)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/tag(char)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/jackrabbit/mk/model/tree/DiffBuilder$1/getCurrentPath()|",
      "|java+method:///org/apache/jackrabbit/mk/model/tree/DiffBuilder/access$200(org.apache.jackrabbit.mk.model.tree.DiffBuilder,org.apache.jackrabbit.mk.json.JsopBuilder,org.apache.jackrabbit.mk.model.tree.NodeState,int)|",
      "|java+method:///java/util/HashMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/newline()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/endObject()|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/key(java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/oak/commons/PathUtils/concat(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/jackrabbit/mk/model/tree/DiffBuilder/access$100(org.apache.jackrabbit.mk.model.tree.DiffBuilder)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/tag(char)|",
      "|java+method:///org/apache/jackrabbit/mk/model/tree/DiffBuilder/access$000(org.apache.jackrabbit.mk.model.tree.DiffBuilder)|",
      "|java+method:///org/apache/jackrabbit/mk/json/JsopBuilder/object()|"
    ],
    "affectedLib": "org.apache.jackrabbit:oak-commons:0.6",
    "change": "UPDATED"
  }
]