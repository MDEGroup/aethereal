[
  {
    "coordinatesV1": "com.microsoft.rest.v2:client-runtime:2.0.0-beta3",
    "coordinatesV2": "com.microsoft.rest.v2:client-runtime:2.0.0-beta1",
    "caller": "|java+method:///com/microsoft/rest/v2/serializer/JacksonAdapter/initializeObjectMapper(com.fasterxml.jackson.databind.ObjectMapper)|",
    "called": "|java+constructor:///com/fasterxml/jackson/datatype/joda/JodaModule/JodaModule()|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/registerModule(com.fasterxml.jackson.databind.Module)|",
      "|java+constructor:///com/fasterxml/jackson/datatype/joda/JodaModule/JodaModule()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/setVisibility(com.fasterxml.jackson.databind.introspect.VisibilityChecker)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/getSerializationConfig()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/setSerializationInclusion(com.fasterxml.jackson.annotation.JsonInclude$Include)|",
      "|java+method:///com/fasterxml/jackson/databind/introspect/VisibilityChecker/withFieldVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility)|",
      "|java+method:///com/microsoft/rest/v2/serializer/DateTimeSerializer/getModule()|",
      "|java+method:///com/fasterxml/jackson/databind/introspect/VisibilityChecker/withIsGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/configure(com.fasterxml.jackson.databind.DeserializationFeature,boolean)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/configure(com.fasterxml.jackson.databind.SerializationFeature,boolean)|",
      "|java+method:///com/fasterxml/jackson/databind/SerializationConfig/getDefaultVisibilityChecker()|",
      "|java+method:///com/microsoft/rest/v2/serializer/ByteArraySerializer/getModule()|",
      "|java+method:///com/fasterxml/jackson/databind/introspect/VisibilityChecker/withSetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility)|",
      "|java+method:///com/microsoft/rest/v2/serializer/DateTimeRfc1123Serializer/getModule()|",
      "|java+method:///com/fasterxml/jackson/databind/introspect/VisibilityChecker/withGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility)|",
      "|java+method:///com/microsoft/rest/v2/serializer/Base64UrlSerializer/getModule()|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/registerModule(com.fasterxml.jackson.databind.Module)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/setVisibility(com.fasterxml.jackson.databind.introspect.VisibilityChecker)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/getSerializationConfig()|",
      "|java+method:///com/microsoft/rest/v2/serializer/DateTimeSerializer/getModule()|",
      "|java+method:///com/fasterxml/jackson/databind/introspect/VisibilityChecker/withIsGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/configure(com.fasterxml.jackson.databind.DeserializationFeature,boolean)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/configure(com.fasterxml.jackson.databind.SerializationFeature,boolean)|",
      "|java+method:///com/fasterxml/jackson/databind/SerializationConfig/getDefaultVisibilityChecker()|",
      "|java+method:///com/microsoft/rest/v2/serializer/ByteArraySerializer/getModule()|",
      "|java+method:///com/fasterxml/jackson/databind/introspect/VisibilityChecker/withSetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility)|",
      "|java+method:///com/microsoft/rest/v2/serializer/DateTimeRfc1123Serializer/getModule()|",
      "|java+method:///com/fasterxml/jackson/databind/introspect/VisibilityChecker/withGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility)|",
      "|java+method:///com/microsoft/rest/v2/serializer/Base64UrlSerializer/getModule()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/setSerializationInclusion(com.fasterxml.jackson.annotation.JsonInclude$Include)|",
      "|java+method:///com/microsoft/rest/v2/serializer/DurationSerializer/getModule()|",
      "|java+constructor:///com/fasterxml/jackson/datatype/jsr310/JavaTimeModule/JavaTimeModule()|",
      "|java+method:///com/fasterxml/jackson/databind/introspect/VisibilityChecker/withFieldVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility)|"
    ],
    "affectedLib": "com.fasterxml.jackson.datatype:jackson-datatype-joda:2.8.11",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.microsoft.rest.v2:client-runtime:2.0.0-beta1",
    "coordinatesV2": "com.microsoft.rest.v2:client-runtime:2.0.0-beta3",
    "caller": "|java+method:///com/microsoft/rest/v2/serializer/JacksonAdapter/initializeObjectMapper(com.fasterxml.jackson.databind.ObjectMapper)|",
    "called": "|java+constructor:///com/fasterxml/jackson/datatype/jsr310/JavaTimeModule/JavaTimeModule()|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/registerModule(com.fasterxml.jackson.databind.Module)|",
      "|java+constructor:///com/fasterxml/jackson/datatype/joda/JodaModule/JodaModule()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/setVisibility(com.fasterxml.jackson.databind.introspect.VisibilityChecker)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/getSerializationConfig()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/setSerializationInclusion(com.fasterxml.jackson.annotation.JsonInclude$Include)|",
      "|java+method:///com/fasterxml/jackson/databind/introspect/VisibilityChecker/withFieldVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility)|",
      "|java+method:///com/microsoft/rest/v2/serializer/DateTimeSerializer/getModule()|",
      "|java+method:///com/fasterxml/jackson/databind/introspect/VisibilityChecker/withIsGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/configure(com.fasterxml.jackson.databind.DeserializationFeature,boolean)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/configure(com.fasterxml.jackson.databind.SerializationFeature,boolean)|",
      "|java+method:///com/fasterxml/jackson/databind/SerializationConfig/getDefaultVisibilityChecker()|",
      "|java+method:///com/microsoft/rest/v2/serializer/ByteArraySerializer/getModule()|",
      "|java+method:///com/fasterxml/jackson/databind/introspect/VisibilityChecker/withSetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility)|",
      "|java+method:///com/microsoft/rest/v2/serializer/DateTimeRfc1123Serializer/getModule()|",
      "|java+method:///com/fasterxml/jackson/databind/introspect/VisibilityChecker/withGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility)|",
      "|java+method:///com/microsoft/rest/v2/serializer/Base64UrlSerializer/getModule()|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/registerModule(com.fasterxml.jackson.databind.Module)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/setVisibility(com.fasterxml.jackson.databind.introspect.VisibilityChecker)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/getSerializationConfig()|",
      "|java+method:///com/microsoft/rest/v2/serializer/DateTimeSerializer/getModule()|",
      "|java+method:///com/fasterxml/jackson/databind/introspect/VisibilityChecker/withIsGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/configure(com.fasterxml.jackson.databind.DeserializationFeature,boolean)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/configure(com.fasterxml.jackson.databind.SerializationFeature,boolean)|",
      "|java+method:///com/fasterxml/jackson/databind/SerializationConfig/getDefaultVisibilityChecker()|",
      "|java+method:///com/microsoft/rest/v2/serializer/ByteArraySerializer/getModule()|",
      "|java+method:///com/fasterxml/jackson/databind/introspect/VisibilityChecker/withSetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility)|",
      "|java+method:///com/microsoft/rest/v2/serializer/DateTimeRfc1123Serializer/getModule()|",
      "|java+method:///com/fasterxml/jackson/databind/introspect/VisibilityChecker/withGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility)|",
      "|java+method:///com/microsoft/rest/v2/serializer/Base64UrlSerializer/getModule()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/setSerializationInclusion(com.fasterxml.jackson.annotation.JsonInclude$Include)|",
      "|java+method:///com/microsoft/rest/v2/serializer/DurationSerializer/getModule()|",
      "|java+constructor:///com/fasterxml/jackson/datatype/jsr310/JavaTimeModule/JavaTimeModule()|",
      "|java+method:///com/fasterxml/jackson/databind/introspect/VisibilityChecker/withFieldVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility)|"
    ],
    "affectedLib": "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.8.11",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.microsoft.rest.v2:client-runtime:2.0.0-beta1",
    "coordinatesV2": "com.microsoft.rest.v2:client-runtime:2.0.0-beta3",
    "caller": "|java+method:///com/microsoft/rest/v2/util/FlowableUtil/collectBytesInArray(io.reactivex.Flowable)|",
    "called": "|java+method:///io/netty/buffer/Unpooled/buffer()|",
    "v1Body": [
      "|java+method:///com/google/common/io/ByteStreams/newDataOutput()|",
      "|java+method:///io/reactivex/Single/map(io.reactivex.functions.Function)|",
      "|java+constructor:///com/microsoft/rest/v2/util/FlowableUtil$1/FlowableUtil$1()|",
      "|java+method:///io/reactivex/Flowable/collectInto(java.lang.Object,io.reactivex.functions.BiConsumer)|",
      "|java+constructor:///com/microsoft/rest/v2/util/FlowableUtil$2/FlowableUtil$2()|"
    ],
    "v2Body": [
      "|java+method:///io/reactivex/Flowable/collectInto(java.lang.Object,io.reactivex.functions.BiConsumer)|",
      "|java+method:///io/reactivex/Single/map(io.reactivex.functions.Function)|",
      "|java+method:///io/netty/buffer/Unpooled/buffer()|"
    ],
    "affectedLib": "io.netty:netty-buffer:4.1.25.Final",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.microsoft.rest.v2:client-runtime:2.0.0-beta1",
    "coordinatesV2": "com.microsoft.rest.v2:client-runtime:2.0.0-beta3",
    "caller": "|java+method:///com/microsoft/rest/v2/util/FlowableUtil/readFile(java.nio.channels.AsynchronousFileChannel)|",
    "called": "|java+method:///io/reactivex/Flowable/error(java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///java/nio/channels/AsynchronousFileChannel/size()|",
      "|java+method:///com/microsoft/rest/v2/util/FlowableUtil/readFile(java.nio.channels.AsynchronousFileChannel,long,long)|"
    ],
    "v2Body": [
      "|java+method:///java/nio/channels/AsynchronousFileChannel/size()|",
      "|java+method:///io/reactivex/Flowable/error(java.lang.Throwable)|",
      "|java+method:///com/microsoft/rest/v2/util/FlowableUtil/readFile(java.nio.channels.AsynchronousFileChannel,int,long,long)|"
    ],
    "affectedLib": "io.reactivex.rxjava2:rxjava:2.1.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.microsoft.rest.v2:client-runtime:2.0.0-beta1",
    "coordinatesV2": "com.microsoft.rest.v2:client-runtime:2.0.0-beta3",
    "caller": "|java+method:///com/microsoft/rest/v2/RestProxy/handleRestResponseReturnTypeAsync(com.microsoft.rest.v2.http.HttpResponse,com.microsoft.rest.v2.SwaggerMethodParser,java.lang.reflect.Type)|",
    "called": "|java+method:///io/reactivex/Single/error(java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///io/reactivex/Maybe/ignoreElement()|",
      "|java+method:///com/google/common/reflect/TypeToken/isSubtypeOf(java.lang.reflect.Type)|",
      "|java+method:///com/google/common/reflect/TypeToken/getSupertype(java.lang.Class)|",
      "|java+method:///io/reactivex/Maybe/toSingle(java.lang.Object)|",
      "|java+constructor:///com/microsoft/rest/v2/RestProxy$3/RestProxy$3(com.microsoft.rest.v2.RestProxy,java.lang.reflect.Constructor,int,java.lang.Object,java.util.Map)|",
      "|java+method:///io/reactivex/Flowable/lastElement()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/deserializedHeaders()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/headers()|",
      "|java+method:///com/microsoft/rest/v2/RestProxy/getTypeArguments(java.lang.reflect.Type)|",
      "|java+method:///io/reactivex/Completable/andThen(io.reactivex.SingleSource)|",
      "|java+method:///com/microsoft/rest/v2/RestProxy/handleBodyReturnTypeAsync(com.microsoft.rest.v2.http.HttpResponse,com.microsoft.rest.v2.SwaggerMethodParser,java.lang.reflect.Type)|",
      "|java+method:///java/lang/reflect/Constructor/newInstance(java.lang.Object%5B%5D)|",
      "|java+method:///io/reactivex/Single/just(java.lang.Object)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///com/microsoft/rest/v2/http/HttpHeaders/toMap()|",
      "|java+method:///com/google/common/reflect/TypeToken/getType()|",
      "|java+method:///com/microsoft/rest/v2/RestProxy/getRestResponseConstructor(com.google.common.reflect.TypeToken)|",
      "|java+method:///io/reactivex/Maybe/map(io.reactivex.functions.Function)|",
      "|java+method:///com/google/common/reflect/TypeToken/of(java.lang.reflect.Type)|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/streamBodyAsync()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/statusCode()|",
      "|java+method:///io/reactivex/Maybe/toSingle()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/reflect/TypeToken/isSubtypeOf(java.lang.reflect.Type)|",
      "|java+method:///com/google/common/reflect/TypeToken/getSupertype(java.lang.Class)|",
      "|java+method:///io/reactivex/Maybe/toSingle(java.lang.Object)|",
      "|java+method:///com/google/common/reflect/TypeToken/of(java.lang.reflect.Type)|",
      "|java+method:///io/reactivex/Flowable/lastElement()|",
      "|java+constructor:///com/microsoft/rest/v2/RestException/RestException(java.lang.String,com.microsoft.rest.v2.http.HttpResponse,java.lang.Object)|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/deserializedHeaders()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///io/reactivex/Single/toCompletable()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/headers()|",
      "|java+method:///com/microsoft/rest/v2/RestProxy/getTypeArguments(java.lang.reflect.Type)|",
      "|java+method:///io/reactivex/Completable/andThen(io.reactivex.SingleSource)|",
      "|java+method:///com/microsoft/rest/v2/RestProxy/handleBodyReturnTypeAsync(com.microsoft.rest.v2.http.HttpResponse,com.microsoft.rest.v2.SwaggerMethodParser,java.lang.reflect.Type)|",
      "|java+method:///java/lang/reflect/Constructor/newInstance(java.lang.Object%5B%5D)|",
      "|java+method:///io/reactivex/Single/just(java.lang.Object)|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/isDecoded()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/body()|",
      "|java+method:///io/reactivex/Single/error(java.lang.Throwable)|",
      "|java+method:///io/reactivex/Maybe/ignoreElement()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///com/microsoft/rest/v2/http/HttpHeaders/toMap()|",
      "|java+method:///com/google/common/reflect/TypeToken/getType()|",
      "|java+method:///com/microsoft/rest/v2/RestProxy/getRestResponseConstructor(com.google.common.reflect.TypeToken)|",
      "|java+method:///io/reactivex/Maybe/map(io.reactivex.functions.Function)|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/statusCode()|",
      "|java+method:///io/reactivex/Maybe/toSingle()|"
    ],
    "affectedLib": "io.reactivex.rxjava2:rxjava:2.1.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.microsoft.rest.v2:client-runtime:2.0.0-beta1",
    "coordinatesV2": "com.microsoft.rest.v2:client-runtime:2.0.0-beta3",
    "caller": "|java+method:///com/microsoft/rest/v2/http/NettyClient$ResponseContentFlowable/request(long)|",
    "called": "|java+method:///io/reactivex/internal/util/BackpressureHelper/add(java.util.concurrent.atomic.AtomicLong,long)|",
    "v1Body": [
      "|java+method:///io/netty/channel/EventLoop/inEventLoop()|",
      "|java+method:///java/util/Queue/isEmpty()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///io/reactivex/internal/util/BackpressureHelper/addCap(long,long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/reactivestreams/Subscription/request(long)|",
      "|java+method:///java/util/Queue/remove()|",
      "|java+method:///org/reactivestreams/Subscriber/onError(java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/microsoft/rest/v2/http/NettyClient$ResponseContentFlowable/emitContent(io.netty.handler.codec.http.HttpContent)|",
      "|java+method:///java/lang/StringBuilder/append(long)|"
    ],
    "v2Body": [
      "|java+method:///io/reactivex/internal/subscriptions/SubscriptionHelper/validate(long)|",
      "|java+method:///com/microsoft/rest/v2/http/NettyClient$ResponseContentFlowable/drain()|",
      "|java+method:///io/reactivex/internal/util/BackpressureHelper/add(java.util.concurrent.atomic.AtomicLong,long)|"
    ],
    "affectedLib": "io.reactivex.rxjava2:rxjava:2.1.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.microsoft.rest.v2:client-runtime:2.0.0-beta1",
    "coordinatesV2": "com.microsoft.rest.v2:client-runtime:2.0.0-beta3",
    "caller": "|java+method:///com/microsoft/rest/v2/policy/DecodingPolicyFactory$DecodingPolicy/sendAsync(com.microsoft.rest.v2.http.HttpRequest)|",
    "called": "|java+method:///io/reactivex/Single/flatMap(io.reactivex.functions.Function)|",
    "v1Body": [
      "|java+method:///com/microsoft/rest/v2/policy/RequestPolicy/sendAsync(com.microsoft.rest.v2.http.HttpRequest)|",
      "|java+method:///io/reactivex/Single/flatMap(io.reactivex.functions.Function)|",
      "|java+constructor:///com/microsoft/rest/v2/policy/DecodingPolicyFactory$DecodingPolicy$1/DecodingPolicyFactory$DecodingPolicy$1(com.microsoft.rest.v2.policy.DecodingPolicyFactory$DecodingPolicy,com.microsoft.rest.v2.http.HttpRequest)|"
    ],
    "v2Body": [
      "|java+method:///com/microsoft/rest/v2/policy/RequestPolicy/sendAsync(com.microsoft.rest.v2.http.HttpRequest)|",
      "|java+method:///io/reactivex/Single/flatMap(io.reactivex.functions.Function)|"
    ],
    "affectedLib": "io.reactivex.rxjava2:rxjava:2.1.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.microsoft.rest.v2:client-runtime:2.0.0-beta1",
    "coordinatesV2": "com.microsoft.rest.v2:client-runtime:2.0.0-beta3",
    "caller": "|java+method:///com/microsoft/rest/v2/util/FlowableUtil/collectBytesInBuffer(io.reactivex.Flowable)|",
    "called": "|java+method:///io/reactivex/Single/map(io.reactivex.functions.Function)|",
    "v1Body": [
      "|java+constructor:///com/microsoft/rest/v2/util/FlowableUtil$3/FlowableUtil$3()|",
      "|java+method:///com/microsoft/rest/v2/util/FlowableUtil/collectBytesInArray(io.reactivex.Flowable)|",
      "|java+method:///io/reactivex/Single/map(io.reactivex.functions.Function)|"
    ],
    "v2Body": [
      "|java+method:///com/microsoft/rest/v2/util/FlowableUtil/collectBytesInArray(io.reactivex.Flowable)|",
      "|java+method:///io/reactivex/Single/map(io.reactivex.functions.Function)|"
    ],
    "affectedLib": "io.reactivex.rxjava2:rxjava:2.1.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.microsoft.rest.v2:client-runtime:2.0.0-beta1",
    "coordinatesV2": "com.microsoft.rest.v2:client-runtime:2.0.0-beta3",
    "caller": "|java+method:///com/microsoft/rest/v2/http/NettyClient$ResponseContentFlowable/onError(java.lang.Throwable)|",
    "called": "|java+method:///io/reactivex/plugins/RxJavaPlugins/onError(java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/reactivestreams/Subscriber/onError(java.lang.Throwable)|"
    ],
    "v2Body": [
      "|java+method:///com/microsoft/rest/v2/http/NettyClient$ResponseContentFlowable/drain()|",
      "|java+method:///io/reactivex/plugins/RxJavaPlugins/onError(java.lang.Throwable)|"
    ],
    "affectedLib": "io.reactivex.rxjava2:rxjava:2.1.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.microsoft.rest.v2:client-runtime:2.0.0-beta1",
    "coordinatesV2": "com.microsoft.rest.v2:client-runtime:2.0.0-beta3",
    "caller": "|java+method:///com/microsoft/rest/v2/util/FlowableUtil/split(java.nio.ByteBuffer,int)|",
    "called": "|java+method:///io/reactivex/Flowable/generate(java.util.concurrent.Callable,io.reactivex.functions.BiFunction)|",
    "v1Body": [
      "|java+constructor:///com/microsoft/rest/v2/util/FlowableUtil$5/FlowableUtil$5()|",
      "|java+constructor:///com/microsoft/rest/v2/util/FlowableUtil$6/FlowableUtil$6(java.nio.ByteBuffer,int)|",
      "|java+method:///io/reactivex/Flowable/generate(java.util.concurrent.Callable,io.reactivex.functions.BiFunction)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/reactivex/Flowable/generate(java.util.concurrent.Callable,io.reactivex.functions.BiFunction)|"
    ],
    "affectedLib": "io.reactivex.rxjava2:rxjava:2.1.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.microsoft.rest.v2:client-runtime:2.0.0-beta1",
    "coordinatesV2": "com.microsoft.rest.v2:client-runtime:2.0.0-beta3",
    "caller": "|java+method:///com/microsoft/rest/v2/policy/HttpLoggingPolicyFactory$LoggingPolicy/logResponse(org.slf4j.Logger,com.microsoft.rest.v2.http.HttpResponse,java.net.URL,long)|",
    "called": "|java+method:///io/reactivex/Single/just(java.lang.Object)|",
    "v1Body": [
      "|java+method:///io/reactivex/Single/just(java.lang.Object)|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///com/microsoft/rest/v2/policy/HttpLoggingPolicyFactory$LoggingPolicy/log(org.slf4j.Logger,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/microsoft/rest/v2/policy/HttpLoggingPolicyFactory/access$100(com.microsoft.rest.v2.policy.HttpLoggingPolicyFactory)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/headerValue(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/HttpResponseStatus/valueOf(int)|",
      "|java+constructor:///com/microsoft/rest/v2/policy/HttpLoggingPolicyFactory$LoggingPolicy$4/HttpLoggingPolicyFactory$LoggingPolicy$4(com.microsoft.rest.v2.policy.HttpLoggingPolicyFactory$LoggingPolicy,org.slf4j.Logger,java.lang.String,com.microsoft.rest.v2.http.HttpResponse)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/microsoft/rest/v2/http/HttpHeaders/iterator()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/headers()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/buffer()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpHeader/toString()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/bodyAsStringAsync()|",
      "|java+method:///com/microsoft/rest/v2/policy/HttpLogDetailLevel/shouldLogBody()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/microsoft/rest/v2/policy/HttpLoggingPolicyFactory$LoggingPolicy/getContentLength(com.microsoft.rest.v2.http.HttpHeaders)|",
      "|java+method:///com/microsoft/rest/v2/policy/HttpLogDetailLevel/shouldLogHeaders()|",
      "|java+method:///io/netty/handler/codec/http/HttpResponseStatus/reasonPhrase()|",
      "|java+method:///com/microsoft/rest/v2/policy/HttpLogDetailLevel/shouldLogURL()|",
      "|java+method:///io/reactivex/Single/map(io.reactivex.functions.Function)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/statusCode()|"
    ],
    "v2Body": [
      "|java+method:///io/reactivex/Single/just(java.lang.Object)|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/microsoft/rest/v2/policy/HttpLoggingPolicyFactory/access$100(com.microsoft.rest.v2.policy.HttpLoggingPolicyFactory)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/headerValue(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/HttpResponseStatus/valueOf(int)|",
      "|java+constructor:///com/microsoft/rest/v2/policy/HttpLoggingPolicyFactory$LoggingPolicy$4/HttpLoggingPolicyFactory$LoggingPolicy$4(com.microsoft.rest.v2.policy.HttpLoggingPolicyFactory$LoggingPolicy,org.slf4j.Logger,java.lang.String,com.microsoft.rest.v2.http.HttpResponse)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/microsoft/rest/v2/http/HttpHeaders/iterator()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/headers()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/buffer()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpHeader/toString()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/bodyAsString()|",
      "|java+method:///com/microsoft/rest/v2/policy/HttpLoggingPolicyFactory$LoggingPolicy/log(org.slf4j.Logger,java.lang.String)|",
      "|java+method:///com/microsoft/rest/v2/policy/HttpLogDetailLevel/shouldLogBody()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/microsoft/rest/v2/policy/HttpLoggingPolicyFactory$LoggingPolicy/getContentLength(com.microsoft.rest.v2.http.HttpHeaders)|",
      "|java+method:///com/microsoft/rest/v2/policy/HttpLogDetailLevel/shouldLogHeaders()|",
      "|java+method:///io/netty/handler/codec/http/HttpResponseStatus/reasonPhrase()|",
      "|java+method:///com/microsoft/rest/v2/policy/HttpLogDetailLevel/shouldLogURL()|",
      "|java+method:///io/reactivex/Single/map(io.reactivex.functions.Function)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/statusCode()|"
    ],
    "affectedLib": "io.reactivex.rxjava2:rxjava:2.1.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.microsoft.rest.v2:client-runtime:2.0.0-beta1",
    "coordinatesV2": "com.microsoft.rest.v2:client-runtime:2.0.0-beta3",
    "caller": "|java+method:///com/microsoft/rest/v2/http/NettyClient$ResponseContentFlowable/onReceivedContent(io.netty.handler.codec.http.HttpContent)|",
    "called": "|java+method:///io/reactivex/plugins/RxJavaPlugins/onError(java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///java/util/Queue/add(java.lang.Object)|",
      "|java+method:///com/microsoft/rest/v2/http/NettyClient$ResponseContentFlowable/emitContent(io.netty.handler.codec.http.HttpContent)|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///io/reactivex/internal/fuseable/SimplePlainQueue/offer(java.lang.Object)|",
      "|java+method:///com/microsoft/rest/v2/http/NettyClient$ResponseContentFlowable/drain()|",
      "|java+method:///io/netty/handler/codec/http/HttpContent/release()|",
      "|java+method:///io/reactivex/plugins/RxJavaPlugins/onError(java.lang.Throwable)|"
    ],
    "affectedLib": "io.reactivex.rxjava2:rxjava:2.1.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.microsoft.rest.v2:client-runtime:2.0.0-beta1",
    "coordinatesV2": "com.microsoft.rest.v2:client-runtime:2.0.0-beta3",
    "caller": "|java+constructor:///com/microsoft/rest/v2/http/BufferedHttpResponse/BufferedHttpResponse(com.microsoft.rest.v2.http.HttpResponse)|",
    "called": "|java+method:///io/reactivex/Single/cache()|",
    "v1Body": [
      "|java+constructor:///com/microsoft/rest/v2/http/HttpResponse/HttpResponse()|"
    ],
    "v2Body": [
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/bodyAsByteArray()|",
      "|java+method:///io/reactivex/Single/cache()|",
      "|java+constructor:///com/microsoft/rest/v2/http/HttpResponse/HttpResponse()|"
    ],
    "affectedLib": "io.reactivex.rxjava2:rxjava:2.1.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.microsoft.rest.v2:client-runtime:2.0.0-beta1",
    "coordinatesV2": "com.microsoft.rest.v2:client-runtime:2.0.0-beta3",
    "caller": "|java+method:///com/microsoft/rest/v2/policy/RetryPolicyFactory$RetryPolicy/attemptAsync(com.microsoft.rest.v2.http.HttpRequest,int)|",
    "called": "|java+method:///io/reactivex/Single/onErrorResumeNext(io.reactivex.functions.Function)|",
    "v1Body": [
      "|java+constructor:///com/microsoft/rest/v2/policy/RetryPolicyFactory$RetryPolicy$1/RetryPolicyFactory$RetryPolicy$1(com.microsoft.rest.v2.policy.RetryPolicyFactory$RetryPolicy,int,com.microsoft.rest.v2.http.HttpRequest)|",
      "|java+method:///io/reactivex/Single/flatMap(io.reactivex.functions.Function)|",
      "|java+method:///com/microsoft/rest/v2/policy/RequestPolicy/sendAsync(com.microsoft.rest.v2.http.HttpRequest)|",
      "|java+method:///com/microsoft/rest/v2/http/HttpRequest/buffer()|"
    ],
    "v2Body": [
      "|java+method:///io/reactivex/Single/onErrorResumeNext(io.reactivex.functions.Function)|",
      "|java+method:///io/reactivex/Single/flatMap(io.reactivex.functions.Function)|",
      "|java+method:///com/microsoft/rest/v2/policy/RequestPolicy/sendAsync(com.microsoft.rest.v2.http.HttpRequest)|",
      "|java+method:///com/microsoft/rest/v2/http/HttpRequest/buffer()|"
    ],
    "affectedLib": "io.reactivex.rxjava2:rxjava:2.1.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.microsoft.rest.v2:client-runtime:2.0.0-beta1",
    "coordinatesV2": "com.microsoft.rest.v2:client-runtime:2.0.0-beta3",
    "caller": "|java+method:///com/microsoft/rest/v2/util/FlowableUtil$FileReadFlowable$FileReadSubscription/request(long)|",
    "called": "|java+method:///io/reactivex/internal/util/BackpressureHelper/add(java.util.concurrent.atomic.AtomicLong,long)|",
    "v1Body": [
      "|java+method:///com/microsoft/rest/v2/util/FlowableUtil$FileReadFlowable$FileReadSubscription/doRead()|",
      "|java+method:///io/reactivex/internal/util/BackpressureHelper/add(java.util.concurrent.atomic.AtomicLong,long)|"
    ],
    "v2Body": [
      "|java+method:///io/reactivex/internal/subscriptions/SubscriptionHelper/validate(long)|",
      "|java+method:///com/microsoft/rest/v2/util/FlowableUtil$FileReadFlowable$FileReadSubscription/drain()|",
      "|java+method:///io/reactivex/internal/util/BackpressureHelper/add(java.util.concurrent.atomic.AtomicLong,long)|"
    ],
    "affectedLib": "io.reactivex.rxjava2:rxjava:2.1.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.microsoft.rest.v2:client-runtime:2.0.0-beta1",
    "coordinatesV2": "com.microsoft.rest.v2:client-runtime:2.0.0-beta3",
    "caller": "|java+method:///com/microsoft/rest/v2/RestProxy/handleRestReturnType(com.microsoft.rest.v2.http.HttpRequest,io.reactivex.Single,com.microsoft.rest.v2.SwaggerMethodParser,java.lang.reflect.Type)|",
    "called": "|java+method:///io/reactivex/Single/flatMapPublisher(io.reactivex.functions.Function)|",
    "v1Body": [
      "|java+method:///com/microsoft/rest/v2/util/FlowableUtil/isFlowableByteBuffer(com.google.common.reflect.TypeToken)|",
      "|java+method:///io/reactivex/Single/flatMapPublisher(io.reactivex.functions.Function)|",
      "|java+constructor:///com/microsoft/rest/v2/RestProxy$8/RestProxy$8(com.microsoft.rest.v2.RestProxy,com.microsoft.rest.v2.SwaggerMethodParser,java.lang.reflect.Type)|",
      "|java+method:///io/reactivex/Single/onErrorResumeNext(io.reactivex.functions.Function)|",
      "|java+method:///com/microsoft/rest/v2/RestProxy/getTypeArgument(java.lang.reflect.Type)|",
      "|java+method:///io/reactivex/Single/blockingGet()|",
      "|java+method:///io/reactivex/Single/flatMap(io.reactivex.functions.Function)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///com/microsoft/rest/v2/RestProxy$7/RestProxy$7(com.microsoft.rest.v2.RestProxy)|",
      "|java+method:///io/reactivex/Completable/fromSingle(io.reactivex.SingleSource)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///com/microsoft/rest/v2/SwaggerMethodParser/fullyQualifiedMethodName()|",
      "|java+method:///com/google/common/reflect/TypeToken/isSubtypeOf(java.lang.reflect.Type)|",
      "|java+constructor:///com/microsoft/rest/v2/InvalidReturnTypeException/InvalidReturnTypeException(java.lang.String)|",
      "|java+constructor:///com/microsoft/rest/v2/RestProxy$6/RestProxy$6(com.microsoft.rest.v2.RestProxy,com.microsoft.rest.v2.SwaggerMethodParser,java.lang.reflect.Type)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/google/common/reflect/TypeToken/of(java.lang.reflect.Type)|",
      "|java+method:///com/microsoft/rest/v2/RestProxy/ensureExpectedStatus(io.reactivex.Single,com.microsoft.rest.v2.SwaggerMethodParser)|"
    ],
    "v2Body": [
      "|java+method:///com/microsoft/rest/v2/util/FlowableUtil/isFlowableByteBuffer(com.google.common.reflect.TypeToken)|",
      "|java+method:///io/reactivex/Single/flatMapPublisher(io.reactivex.functions.Function)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/microsoft/rest/v2/RestProxy/getTypeArgument(java.lang.reflect.Type)|",
      "|java+method:///io/reactivex/Single/blockingGet()|",
      "|java+method:///io/reactivex/Single/flatMap(io.reactivex.functions.Function)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/reactivex/Completable/fromSingle(io.reactivex.SingleSource)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///com/microsoft/rest/v2/SwaggerMethodParser/fullyQualifiedMethodName()|",
      "|java+method:///com/google/common/reflect/TypeToken/isSubtypeOf(java.lang.reflect.Type)|",
      "|java+constructor:///com/microsoft/rest/v2/InvalidReturnTypeException/InvalidReturnTypeException(java.lang.String)|",
      "|java+method:///com/google/common/reflect/TypeToken/of(java.lang.reflect.Type)|",
      "|java+method:///com/microsoft/rest/v2/RestProxy/ensureExpectedStatus(io.reactivex.Single,com.microsoft.rest.v2.SwaggerMethodParser)|"
    ],
    "affectedLib": "io.reactivex.rxjava2:rxjava:2.1.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.microsoft.rest.v2:client-runtime:2.0.0-beta1",
    "coordinatesV2": "com.microsoft.rest.v2:client-runtime:2.0.0-beta3",
    "caller": "|java+method:///com/microsoft/rest/v2/protocol/HttpResponseDecoder/decode(com.microsoft.rest.v2.http.HttpResponse)|",
    "called": "|java+method:///io/reactivex/Single/error(java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///io/reactivex/Single/just(java.lang.Object)|",
      "|java+method:///io/reactivex/Single/error(java.lang.Throwable)|",
      "|java+method:///com/google/common/reflect/TypeToken/isSubtypeOf(java.lang.reflect.Type)|",
      "|java+method:///com/microsoft/rest/v2/protocol/HttpResponseDecoder/getEntityType()|",
      "|java+method:///com/microsoft/rest/v2/protocol/HttpResponseDecoder/deserializeHeaders(com.microsoft.rest.v2.http.HttpHeaders)|",
      "|java+method:///com/microsoft/rest/v2/SwaggerMethodParser/expectedStatusCodes()|",
      "|java+method:///com/microsoft/rest/v2/SwaggerMethodParser/httpMethod()|",
      "|java+method:///com/microsoft/rest/v2/SwaggerMethodParser/returnValueWireType()|",
      "|java+constructor:///com/microsoft/rest/v2/protocol/HttpResponseDecoder$2/HttpResponseDecoder$2(com.microsoft.rest.v2.protocol.HttpResponseDecoder,java.lang.reflect.Type,com.microsoft.rest.v2.http.HttpResponse,com.microsoft.rest.v2.http.HttpResponse,java.lang.Object)|",
      "|java+method:///io/reactivex/Single/map(io.reactivex.functions.Function)|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/headers()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/withDeserializedHeaders(java.lang.Object)|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/statusCode()|",
      "|java+constructor:///com/microsoft/rest/v2/RestException/RestException(java.lang.String,com.microsoft.rest.v2.http.HttpResponse,java.lang.Throwable)|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/buffer()|",
      "|java+method:///com/microsoft/rest/v2/util/FlowableUtil/isFlowableByteBuffer(com.google.common.reflect.TypeToken)|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/bodyAsStringAsync()|",
      "|java+constructor:///com/microsoft/rest/v2/protocol/HttpResponseDecoder$1/HttpResponseDecoder$1(com.microsoft.rest.v2.protocol.HttpResponseDecoder,com.microsoft.rest.v2.http.HttpResponse,java.lang.Object,com.microsoft.rest.v2.http.HttpResponse)|"
    ],
    "v2Body": [
      "|java+method:///io/reactivex/Single/just(java.lang.Object)|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/withIsDecoded(boolean)|",
      "|java+method:///io/reactivex/Single/error(java.lang.Throwable)|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/bodyAsString()|",
      "|java+method:///com/google/common/reflect/TypeToken/isSubtypeOf(java.lang.reflect.Type)|",
      "|java+method:///com/microsoft/rest/v2/protocol/HttpResponseDecoder/getEntityType()|",
      "|java+method:///com/microsoft/rest/v2/protocol/HttpResponseDecoder/deserializeHeaders(com.microsoft.rest.v2.http.HttpHeaders)|",
      "|java+method:///com/microsoft/rest/v2/SwaggerMethodParser/expectedStatusCodes()|",
      "|java+constructor:///com/microsoft/rest/v2/protocol/HttpResponseDecoder$1/HttpResponseDecoder$1(com.microsoft.rest.v2.protocol.HttpResponseDecoder,com.microsoft.rest.v2.http.HttpResponse,java.lang.Object,com.microsoft.rest.v2.http.HttpResponse)|",
      "|java+method:///com/microsoft/rest/v2/SwaggerMethodParser/httpMethod()|",
      "|java+method:///com/microsoft/rest/v2/SwaggerMethodParser/returnValueWireType()|",
      "|java+constructor:///com/microsoft/rest/v2/protocol/HttpResponseDecoder$2/HttpResponseDecoder$2(com.microsoft.rest.v2.protocol.HttpResponseDecoder,java.lang.reflect.Type,com.microsoft.rest.v2.http.HttpResponse,com.microsoft.rest.v2.http.HttpResponse,java.lang.Object)|",
      "|java+method:///io/reactivex/Single/map(io.reactivex.functions.Function)|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/headers()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/withDeserializedHeaders(java.lang.Object)|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/statusCode()|",
      "|java+constructor:///com/microsoft/rest/v2/RestException/RestException(java.lang.String,com.microsoft.rest.v2.http.HttpResponse,java.lang.Throwable)|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/buffer()|",
      "|java+method:///com/microsoft/rest/v2/util/FlowableUtil/isFlowableByteBuffer(com.google.common.reflect.TypeToken)|"
    ],
    "affectedLib": "io.reactivex.rxjava2:rxjava:2.1.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.microsoft.rest.v2:client-runtime:2.0.0-beta1",
    "coordinatesV2": "com.microsoft.rest.v2:client-runtime:2.0.0-beta3",
    "caller": "|java+method:///com/microsoft/rest/v2/util/FlowableUtil/collectBytesInArray(io.reactivex.Flowable)|",
    "called": "|java+method:///io/reactivex/Flowable/collectInto(java.lang.Object,io.reactivex.functions.BiConsumer)|",
    "v1Body": [
      "|java+method:///com/google/common/io/ByteStreams/newDataOutput()|",
      "|java+method:///io/reactivex/Single/map(io.reactivex.functions.Function)|",
      "|java+constructor:///com/microsoft/rest/v2/util/FlowableUtil$1/FlowableUtil$1()|",
      "|java+method:///io/reactivex/Flowable/collectInto(java.lang.Object,io.reactivex.functions.BiConsumer)|",
      "|java+constructor:///com/microsoft/rest/v2/util/FlowableUtil$2/FlowableUtil$2()|"
    ],
    "v2Body": [
      "|java+method:///io/reactivex/Flowable/collectInto(java.lang.Object,io.reactivex.functions.BiConsumer)|",
      "|java+method:///io/reactivex/Single/map(io.reactivex.functions.Function)|",
      "|java+method:///io/netty/buffer/Unpooled/buffer()|"
    ],
    "affectedLib": "io.reactivex.rxjava2:rxjava:2.1.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.microsoft.rest.v2:client-runtime:2.0.0-beta1",
    "coordinatesV2": "com.microsoft.rest.v2:client-runtime:2.0.0-beta3",
    "caller": "|java+method:///com/microsoft/rest/v2/RestProxy/ensureExpectedStatus(com.microsoft.rest.v2.http.HttpResponse,com.microsoft.rest.v2.SwaggerMethodParser,int%5B%5D)|",
    "called": "|java+method:///io/reactivex/Single/just(java.lang.Object)|",
    "v1Body": [
      "|java+method:///io/reactivex/Single/just(java.lang.Object)|",
      "|java+method:///com/microsoft/rest/v2/SwaggerMethodParser/isExpectedResponseStatusCode(int,int%5B%5D)|",
      "|java+constructor:///com/microsoft/rest/v2/RestProxy$2/RestProxy$2(com.microsoft.rest.v2.RestProxy,com.microsoft.rest.v2.SwaggerMethodParser,com.microsoft.rest.v2.http.HttpResponse)|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/bodyAsStringAsync()|",
      "|java+method:///io/reactivex/Single/flatMap(io.reactivex.functions.Function)|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/statusCode()|"
    ],
    "v2Body": [
      "|java+method:///io/reactivex/Single/just(java.lang.Object)|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/bodyAsString()|",
      "|java+method:///com/microsoft/rest/v2/SwaggerMethodParser/isExpectedResponseStatusCode(int,int%5B%5D)|",
      "|java+constructor:///com/microsoft/rest/v2/RestProxy$2/RestProxy$2(com.microsoft.rest.v2.RestProxy,com.microsoft.rest.v2.SwaggerMethodParser,com.microsoft.rest.v2.http.HttpResponse)|",
      "|java+method:///io/reactivex/Single/flatMap(io.reactivex.functions.Function)|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/statusCode()|"
    ],
    "affectedLib": "io.reactivex.rxjava2:rxjava:2.1.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.microsoft.rest.v2:client-runtime:2.0.0-beta1",
    "coordinatesV2": "com.microsoft.rest.v2:client-runtime:2.0.0-beta3",
    "caller": "|java+method:///com/microsoft/rest/v2/RestProxy/handleBodyReturnTypeAsync(com.microsoft.rest.v2.http.HttpResponse,com.microsoft.rest.v2.SwaggerMethodParser,java.lang.reflect.Type)|",
    "called": "|java+method:///io/reactivex/Maybe/just(java.lang.Object)|",
    "v1Body": [
      "|java+method:///com/microsoft/rest/v2/util/FlowableUtil/isFlowableByteBuffer(com.google.common.reflect.TypeToken)|",
      "|java+method:///com/google/common/reflect/TypeToken/isSubtypeOf(java.lang.reflect.Type)|",
      "|java+method:///io/reactivex/Maybe/map(io.reactivex.functions.Function)|",
      "|java+method:///com/microsoft/rest/v2/SwaggerMethodParser/httpMethod()|",
      "|java+method:///io/reactivex/Single/toMaybe()|",
      "|java+constructor:///com/microsoft/rest/v2/RestProxy$4/RestProxy$4(com.microsoft.rest.v2.RestProxy)|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/deserializedBody()|",
      "|java+method:///io/reactivex/Maybe/empty()|",
      "|java+method:///com/google/common/reflect/TypeToken/of(java.lang.reflect.Type)|",
      "|java+method:///com/microsoft/rest/v2/SwaggerMethodParser/returnValueWireType()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/streamBodyAsync()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///io/reactivex/Maybe/just(java.lang.Object)|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/bodyAsByteArrayAsync()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/statusCode()|"
    ],
    "v2Body": [
      "|java+method:///com/microsoft/rest/v2/util/FlowableUtil/isFlowableByteBuffer(com.google.common.reflect.TypeToken)|",
      "|java+method:///com/google/common/reflect/TypeToken/isSubtypeOf(java.lang.reflect.Type)|",
      "|java+method:///io/reactivex/Maybe/map(io.reactivex.functions.Function)|",
      "|java+method:///com/microsoft/rest/v2/SwaggerMethodParser/httpMethod()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/bodyAsByteArray()|",
      "|java+method:///io/reactivex/Maybe/error(java.lang.Throwable)|",
      "|java+method:///io/reactivex/Single/toMaybe()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/statusCode()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/isDecoded()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/body()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/deserializedBody()|",
      "|java+method:///io/reactivex/Maybe/empty()|",
      "|java+method:///com/google/common/reflect/TypeToken/of(java.lang.reflect.Type)|",
      "|java+method:///com/microsoft/rest/v2/SwaggerMethodParser/returnValueWireType()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+constructor:///com/microsoft/rest/v2/RestException/RestException(java.lang.String,com.microsoft.rest.v2.http.HttpResponse,java.lang.Object)|",
      "|java+method:///io/reactivex/Maybe/just(java.lang.Object)|"
    ],
    "affectedLib": "io.reactivex.rxjava2:rxjava:2.1.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.microsoft.rest.v2:client-runtime:2.0.0-beta1",
    "coordinatesV2": "com.microsoft.rest.v2:client-runtime:2.0.0-beta3",
    "caller": "|java+method:///com/microsoft/rest/v2/http/NettyClient$NettyAdapter/sendRequestInternalAsync(com.microsoft.rest.v2.http.HttpRequest,java.net.Proxy)|",
    "called": "|java+method:///io/reactivex/Single/error(java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///com/microsoft/rest/v2/http/HttpRequest/url()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpRequest/withHeader(java.lang.String,java.lang.String)|",
      "|java+method:///io/reactivex/Single/error(java.lang.Throwable)|",
      "|java+constructor:///java/net/URI/URI(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///java/net/URL/toURI()|",
      "|java+method:///io/reactivex/Single/onErrorResumeNext(io.reactivex.functions.Function)|",
      "|java+method:///java/net/Proxy/address()|",
      "|java+method:///java/net/InetSocketAddress/getPort()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/reactivex/Single/create(io.reactivex.SingleOnSubscribe)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/net/InetSocketAddress/getHostString()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/net/URL/getHost()|"
    ],
    "v2Body": [
      "|java+method:///io/reactivex/Single/error(java.lang.Throwable)|",
      "|java+method:///com/microsoft/rest/v2/http/NettyClient/access$300(com.microsoft.rest.v2.http.HttpRequest)|",
      "|java+method:///io/reactivex/Single/create(io.reactivex.SingleOnSubscribe)|",
      "|java+method:///com/microsoft/rest/v2/http/NettyClient/access$200(com.microsoft.rest.v2.http.HttpRequest,java.net.Proxy)|"
    ],
    "affectedLib": "io.reactivex.rxjava2:rxjava:2.1.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.microsoft.rest.v2:client-runtime:2.0.0-beta1",
    "coordinatesV2": "com.microsoft.rest.v2:client-runtime:2.0.0-beta3",
    "caller": "|java+method:///com/microsoft/rest/v2/policy/HttpLoggingPolicyFactory$LoggingPolicy/logResponse(org.slf4j.Logger,com.microsoft.rest.v2.http.HttpResponse,java.net.URL,long)|",
    "called": "|java+method:///io/netty/handler/codec/http/HttpResponseStatus/valueOf(int)|",
    "v1Body": [
      "|java+method:///io/reactivex/Single/just(java.lang.Object)|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///com/microsoft/rest/v2/policy/HttpLoggingPolicyFactory$LoggingPolicy/log(org.slf4j.Logger,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/microsoft/rest/v2/policy/HttpLoggingPolicyFactory/access$100(com.microsoft.rest.v2.policy.HttpLoggingPolicyFactory)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/headerValue(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/HttpResponseStatus/valueOf(int)|",
      "|java+constructor:///com/microsoft/rest/v2/policy/HttpLoggingPolicyFactory$LoggingPolicy$4/HttpLoggingPolicyFactory$LoggingPolicy$4(com.microsoft.rest.v2.policy.HttpLoggingPolicyFactory$LoggingPolicy,org.slf4j.Logger,java.lang.String,com.microsoft.rest.v2.http.HttpResponse)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/microsoft/rest/v2/http/HttpHeaders/iterator()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/headers()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/buffer()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpHeader/toString()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/bodyAsStringAsync()|",
      "|java+method:///com/microsoft/rest/v2/policy/HttpLogDetailLevel/shouldLogBody()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/microsoft/rest/v2/policy/HttpLoggingPolicyFactory$LoggingPolicy/getContentLength(com.microsoft.rest.v2.http.HttpHeaders)|",
      "|java+method:///com/microsoft/rest/v2/policy/HttpLogDetailLevel/shouldLogHeaders()|",
      "|java+method:///io/netty/handler/codec/http/HttpResponseStatus/reasonPhrase()|",
      "|java+method:///com/microsoft/rest/v2/policy/HttpLogDetailLevel/shouldLogURL()|",
      "|java+method:///io/reactivex/Single/map(io.reactivex.functions.Function)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/statusCode()|"
    ],
    "v2Body": [
      "|java+method:///io/reactivex/Single/just(java.lang.Object)|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/microsoft/rest/v2/policy/HttpLoggingPolicyFactory/access$100(com.microsoft.rest.v2.policy.HttpLoggingPolicyFactory)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/headerValue(java.lang.String)|",
      "|java+method:///io/netty/handler/codec/http/HttpResponseStatus/valueOf(int)|",
      "|java+constructor:///com/microsoft/rest/v2/policy/HttpLoggingPolicyFactory$LoggingPolicy$4/HttpLoggingPolicyFactory$LoggingPolicy$4(com.microsoft.rest.v2.policy.HttpLoggingPolicyFactory$LoggingPolicy,org.slf4j.Logger,java.lang.String,com.microsoft.rest.v2.http.HttpResponse)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/microsoft/rest/v2/http/HttpHeaders/iterator()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/headers()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/buffer()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpHeader/toString()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/bodyAsString()|",
      "|java+method:///com/microsoft/rest/v2/policy/HttpLoggingPolicyFactory$LoggingPolicy/log(org.slf4j.Logger,java.lang.String)|",
      "|java+method:///com/microsoft/rest/v2/policy/HttpLogDetailLevel/shouldLogBody()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/microsoft/rest/v2/policy/HttpLoggingPolicyFactory$LoggingPolicy/getContentLength(com.microsoft.rest.v2.http.HttpHeaders)|",
      "|java+method:///com/microsoft/rest/v2/policy/HttpLogDetailLevel/shouldLogHeaders()|",
      "|java+method:///io/netty/handler/codec/http/HttpResponseStatus/reasonPhrase()|",
      "|java+method:///com/microsoft/rest/v2/policy/HttpLogDetailLevel/shouldLogURL()|",
      "|java+method:///io/reactivex/Single/map(io.reactivex.functions.Function)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/microsoft/rest/v2/http/HttpResponse/statusCode()|"
    ],
    "affectedLib": "io.netty:netty-codec-http:4.1.25.Final",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.microsoft.rest.v2:client-runtime:2.0.0-beta1",
    "coordinatesV2": "com.microsoft.rest.v2:client-runtime:2.0.0-beta3",
    "caller": "|java+method:///com/microsoft/rest/v2/http/NettyClient$NettyAdapter$1/channelCreated(io.netty.channel.Channel)|",
    "called": "|java+constructor:///io/netty/handler/codec/http/HttpResponseDecoder/HttpResponseDecoder()|",
    "v1Body": [
      "|java+method:///io/netty/channel/ChannelPipeline/addLast(java.lang.String,io.netty.channel.ChannelHandler)|",
      "|java+method:///io/netty/channel/Channel/pipeline()|",
      "|java+constructor:///com/microsoft/rest/v2/http/NettyClient$HttpClientInboundHandler/NettyClient$HttpClientInboundHandler(com.microsoft.rest.v2.http.NettyClient$NettyAdapter,com.microsoft.rest.v2.http.NettyClient$1)|",
      "|java+constructor:///io/netty/handler/codec/http/HttpResponseDecoder/HttpResponseDecoder()|",
      "|java+constructor:///io/netty/handler/codec/http/HttpRequestEncoder/HttpRequestEncoder()|"
    ],
    "v2Body": [
      "|java+method:///io/netty/channel/ChannelPipeline/addLast(java.lang.String,io.netty.channel.ChannelHandler)|",
      "|java+method:///io/netty/channel/Channel/pipeline()|",
      "|java+constructor:///com/microsoft/rest/v2/http/NettyClient$HttpClientInboundHandler/NettyClient$HttpClientInboundHandler()|",
      "|java+constructor:///io/netty/handler/codec/http/HttpResponseDecoder/HttpResponseDecoder()|",
      "|java+constructor:///io/netty/handler/codec/http/HttpRequestEncoder/HttpRequestEncoder()|"
    ],
    "affectedLib": "io.netty:netty-codec-http:4.1.25.Final",
    "change": "UPDATED"
  }
]